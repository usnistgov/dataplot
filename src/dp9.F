      SUBROUTINE DPBABA(ADEBBA,MAXBAR,ABARBA,
CCCCC OCTOBER 1993.  ABOVE LINE MODIFIED (DPCOHK.INC NOW INCLUDED
CCCCC IN THIS ROUTINE, SO NO NEED TO PASS).
CCCCC SUBROUTINE DPBABA(IHARG,IARGT,ARG,NUMARG,ADEBBA,MAXBAR,ABARBA,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR BASES.
C              THESE ARE LOCATED IN THE VECTOR ABARBA(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --ADEBBA
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--ABARBA (A FLOATING POINT VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --OCTOBER   1993.  ADD BAR BASE AUTOMATIC Y
C                                            BAR BASE AUTO DISTINCT Y
C                                        THESE USEFUL FOR STACKED BARS
C     UPDATED         --NOVEMBER  1994. DECLARATION OF IBUGQ
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
CCCCC OCTOBER 1993.  COMMENT OUT FOLLOWING 2 LINES
CCCCC CHARACTER*4 IHARG
CCCCC CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
CCCCC OCTOBER 1993.  COMMNET OUT FOLLOWING 3 LINES
CCCCC DIMENSION IHARG(*)
CCCCC DIMENSION IARGT(*)
CCCCC DIMENSION ARG(*)
      DIMENSION ABARBA(*)
CCCCC OCTOBER 1993.  ADD FOLLOWING SECTION.
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASEQ
      CHARACTER*4 IWRITE
CCCCC NOVEMBER 1994.  ADD FOLLOWING LINE.
      CHARACTER*4 IBUGQ
C
C
CCCCC OCTOBER 1993.  ADD FOLLOWING COMMON BLOCKS
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPBA'
      ISUBN2='BA  '
C
      NUMBAR=0
      IHOLD1='-999'
      HOLD1=-999.0
      HOLD2=-999.0
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBABA--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,HOLD1,HOLD2
   54 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)ADEBBA
   55 FORMAT('ADEBBA = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)ABARBA(1)
   70 FORMAT('ABARBA(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,ABARBA(I)
   76 FORMAT('I,ABARBA(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
CCCCC OCTOBER 1993.  ADD BAR BASE AUTOMATIC <VAR>
      IF(NUMARG.GE.3.AND.IHARG(2).EQ.'AUTO')GOTO3000
      IF(NUMARG.GE.4.AND.IHARG(3).EQ.'AUTO')GOTO3000
C
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='    '
      IF(IHARG(2).EQ.'ALL')HOLD1=ADEBBA
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')HOLD1=ARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')HOLD1=ARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      ABARBA(1)=ADEBBA
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-1
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+1
      IHOLD1=IHARG(J)
      HOLD1=ARG(J)
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=ADEBBA
      IF(IHOLD1.EQ.'OFF')HOLD2=ADEBBA
      IF(IHOLD1.EQ.'AUTO')HOLD2=ADEBBA
      IF(IHOLD1.EQ.'DEFA')HOLD2=ADEBBA
      ABARBA(I)=HOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,ABARBA(I)
 1276 FORMAT('THE BASE OF BAR ',I6,
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=ADEBBA
      IF(IHOLD1.EQ.'OFF')HOLD2=ADEBBA
      IF(IHOLD1.EQ.'AUTO')HOLD2=ADEBBA
      IF(IHOLD1.EQ.'DEFA')HOLD2=ADEBBA
      DO1315I=1,NUMBAR
      ABARBA(I)=HOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)ABARBA(I)
 1316 FORMAT('THE BASE OF ALL BARS',
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               ******************************************************
C               **  STEP 30--                                       **
C               **  TREAT THE BAR BASE   AUTOMATIC <VARIABLE>   CASE**
C               ******************************************************
C
 3000 CONTINUE
C
C               ********************************************
C               **  STEP 31--                             **
C               **  CHECK THE VALIDITY OF ARGUMENT 2 (OR 3)**
C               **  (THIS WILL BE THE RESPONSE VARIABLE)  **
C               ********************************************
C
      ISTEPN='31'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(3)
      IHLEF2=IHARG2(3)
      IF(IHARG(3).EQ.'DIST'.AND.IHARG2(3).EQ.'INCT')IHLEFT=IHARG(4)
      IF(IHARG(3).EQ.'DIST'.AND.IHARG2(3).EQ.'INCT')IHLEF2=IHARG2(4)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHLEFT,IHLEF2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      ICOLL=IVALUE(ILOCV)
      NLEFT=IN(ILOCV)
C
C               *****************************************
C               **  STEP 32--                          **
C               **  CHECK TO SEE THE TYPE CASE--       **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET/EXCEPT; OR             **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='32'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO3290
      DO3200J=1,NUMARG
      J1=J
      IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ') GOTO3210
      IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ') GOTO3210
      IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ') GOTO3220
 3200 CONTINUE
      GOTO3290
 3210 CONTINUE
      ICASEQ='SUBS'
      ILOCQ=J1
      GOTO3290
 3220 CONTINUE
      ICASEQ='FOR'
      ILOCQ=J1
      GOTO3290
 3290 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO3295
      WRITE(ICOUT,3291)NUMARG,ILOCQ
 3291 FORMAT('NUMARG,ILOCQ = ',2I8)
      CALL DPWRST('XXX','BUG ')
 3295 CONTINUE
C
C               *********************************************
C               **  STEP 33--                              **
C               **  TEMPORARILY FORM THE VARIABLE Y(.)     **
C               **  WHICH WILL HOLD THE RESPONSE VARIABLE. **
C               **  FORM THIS VARIABLE BY                  **
C               **  BRANCHING TO THE APPROPRIATE SUBCASE   **
C               **  (FULL, SUBSET, OR FOR).                **
C               *********************************************
C
      ISTEPN='33'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASEQ.EQ.'FULL')GOTO3310
      IF(ICASEQ.EQ.'SUBS')GOTO3320
      IF(ICASEQ.EQ.'FOR')GOTO3330
C
 3310 CONTINUE
      DO3315I=1,NLEFT
      ISUB(I)=1
 3315 CONTINUE
      NQ=NLEFT
      GOTO3350
C
 3320 CONTINUE
      NIOLD=NLEFT
      CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERROR)
      NQ=NIOLD
      GOTO3350
C
 3330 CONTINUE
      NIOLD=NLEFT
      CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,
     1NLOCAL,ILOCS,NS,IBUGQ,IERROR)
      NQ=NFOR
      GOTO3350
C
 3350 CONTINUE
      MINN2=1
      IF(NQ.GE.MINN2)GOTO3360
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3351)
 3351 FORMAT('***** ERROR IN DPBABA--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3352)
 3352 FORMAT('      AFTER THE APPROPRIATE SUBSET HAS BEEN ',
     1'EXTRACTED,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3353)IHLEFT,IHLEF2
 3353 FORMAT('      THE NUMBER OF OBSERVATIONS REMAINING',
     1'FROM VARIABLE ',A4,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3354)
 3354 FORMAT('      (FOR WHICH BAR BASE DEFINITIONS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3355)
 3355 FORMAT('      ARE TO BE GENERATED)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3356)MINN2
 3356 FORMAT('      MUST BE ',I8,' OR LARGER;')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3357)
 3357 FORMAT('      SUCH WAS NOT THE CASE HERE.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3358)
 3358 FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)WRITE(ICOUT,3359)(IANS(I),I=1,IWIDTH)
 3359 FORMAT('      ',80A1)
      IF(IWIDTH.GE.1)CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3360 CONTINUE
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
      J=0
      IMAX=NLEFT
      IF(NQ.LT.NLEFT)IMAX=NQ
      DO3370I=1,IMAX
      IF(ISUB(I).EQ.0)GOTO3370
      J=J+1
C
      IJ=MAXN*(ICOLL-1)+I
      IF(ICOLL.LE.MAXCOL)Y(J)=V(IJ)
      IF(ICOLL.EQ.MAXCP1)Y(J)=PRED(I)
      IF(ICOLL.EQ.MAXCP2)Y(J)=RES(I)
      IF(ICOLL.EQ.MAXCP3)Y(J)=YPLOT(I)
      IF(ICOLL.EQ.MAXCP4)Y(J)=XPLOT(I)
      IF(ICOLL.EQ.MAXCP5)Y(J)=X2PLOT(I)
      IF(ICOLL.EQ.MAXCP6)Y(J)=TAGPLO(I)
C
 3370 CONTINUE
      NS=J
      NY=J
C
C               *****************************************
C               **  STEP 34--                          **
C               **  IF HAVE THE FORM--                 **
C               **  BAR BASE   AUTOMATIC DISTINCT X    **
C               **  EXTRACT THE DISTINCT VALUES        **
C               **  FROM THE TARGET VARIABLE Y(.)   .  **
C               **  STORE THEM IN X(.)   .             **
C               **  IF HAVE THE FORM--                 **
C               **  CHARACTERS AUTOMATIC X             **
C               **  DO NOTHING                         **
C               *****************************************
C
      IF(IHARG(3).EQ.'DIST'.AND.IHARG2(3).EQ.'INCT')GOTO3420
C
      DO3411I=1,NY
      X(I)=Y(I)
 3411 CONTINUE
      NX=NY
      GOTO3490
C
 3420 CONTINUE
      IWRITE='OFF'
      CALL DISTIN(Y,NY,IWRITE,X,NX,IBUGP2,IERROR)
      GOTO3490
C
 3490 CONTINUE
C
C               ******************************************
C               **  STEP 36--                           **
C               **  COPY VALUES IN X(.) TO ABARBA       **
C               **        MAX NUMBER OF BARS    = 100   **
C               ******************************************
C
      IMAX=NX
      IF(IMAX.GT.MAXBAR)IMAX=MAXBAR
      DO3650I=1,IMAX
      ABARBA(I)=X(I)
 3650 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO3679
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO3675I=1,IMAX
      WRITE(ICOUT,3676)I,ABARBA(I)
 3676 FORMAT('BAR BASE ',I6,' HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 3675 CONTINUE
 3679 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBABA--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,HOLD1,HOLD2
 9014 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)ADEBBA
 9015 FORMAT('ADEBBA = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I),IARGT(I),ARG(I)
 9026 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)ABARBA(1)
 9030 FORMAT('ABARBA(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,ABARBA(I)
 9036 FORMAT('I,ABARBA(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBACL(IHARG,IARG,NUMARG,IDEFBK,IRGBMX,IBACCO,IBACC2,
     1                  IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE COLOR FOR THE BACKGROUND (THE REGION WITHIN THE
C              FRAME LINES).  THE COLOR FOR THE BACKGROUND WILL BE PLACED
C              IN THE CHARACTER VARIABLE IBACCO.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEFBK
C     OUTPUT ARGUMENTS--IBACCO
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --MAY       1982.
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IDEFBK
      CHARACTER*4 IBACCO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      CHARACTER*4 IHARG(*)
      DIMENSION IARG(*)
      DIMENSION IBACC2(3)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)THEN
        IBACCO=IDEFBK
      ELSEIF(IHARG(1).EQ.'COLO')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     NUMARG.EQ.1)THEN
          IBACCO=IDEFBK
        ELSE
          IBACCO=IHARG(NUMARG)
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1181)IBACCO
 1181     FORMAT('THE BACKGROUND COLOR HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      ELSEIF(IHARG(1).EQ.'RGB ' .AND. IHARG(2).EQ.'COLO')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     NUMARG.LE.4)THEN
          IBACC2(1)=-1
          IBACC2(2)=-1
          IBACC2(3)=-1
        ELSE
          IBACC2(1)=IARG(3)
          IBACC2(2)=IARG(4)
          IBACC2(3)=IARG(5)
          IF(IBACC2(1).LT.0 .OR. IBACC2(1).GT.IRGBMX)IBACC2(1)=-1
          IF(IBACC2(2).LT.0 .OR. IBACC2(2).GT.IRGBMX)IBACC2(2)=-1
          IF(IBACC2(3).LT.0 .OR. IBACC2(3).GT.IRGBMX)IBACC2(3)=-1
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2181)IBACC2(1),IBACC2(2),IBACC2(3)
 2181     FORMAT('THE BACKGROUND RGB COLORS HAVE JUST BEEN SET TO ',3I6)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBACO(IHARG,NUMARG,IDEFBC,MAXBAR,IBARCO,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR COLORS.
C              THESE ARE LOCATED IN THE VECTOR IBARCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEFBC
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBARCO (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEFBC
      CHARACTER*4 IBARCO
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IBARCO(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      NUMBAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBACO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEFBC
   55 FORMAT('IDEFBC = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IBARCO(1)
   70 FORMAT('IBARCO(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IBARCO(I)
   76 FORMAT('I,IBARCO(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IDEFBC
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE INDIVIDUAL SPECIFICATIONS CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      IBARCO(1)=IDEFBC
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-1
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+1
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2=IDEFBC
      IF(IHOLD1.EQ.'OFF')IHOLD2=IDEFBC
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFBC
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFBC
      IBARCO(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,IBARCO(I)
 1276 FORMAT('BAR (LINE) COLOR ',I6,' HAS JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 2--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2=IDEFBC
      IF(IHOLD1.EQ.'OFF')IHOLD2=IDEFBC
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFBC
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFBC
      DO1315I=1,NUMBAR
      IBARCO(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IBARCO(I)
 1316 FORMAT('ALL BAR (LINE) COLORS HAVE JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBACO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEFBC
 9015 FORMAT('IDEFBC = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IBARCO(1)
 9030 FORMAT('IBARCO(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IBARCO(I)
 9036 FORMAT('I,IBARCO(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBADI(IHARG,NUMARG,IDEBDI,MAXBAR,IBARDI,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR DIRECTION--
C              VERT = VERTICAL
C              HORI = HORIZONTAL
C              HOR2 = HORIZONTAL TOWARD X2-X3 PLANE (FOR 3D PLOTS)
C              THESE ARE LOCATED IN THE VECTOR IBARDI(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEBDI
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBARDI (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--87/5
C     ORIGINAL VERSION--MAY       1987.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEBDI
      CHARACTER*4 IBARDI
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IBARDI(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBA'
      ISUBN2='DI  '
C
      NUMBAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBADI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEBDI
   55 FORMAT('IDEBDI = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IBARDI(1)
   70 FORMAT('IBARDI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IBARDI(I)
   76 FORMAT('I,IBARDI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='VERT'
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION   CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      IBARDI(1)='VERT'
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-1
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+1
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
C???? IF(IHOLD1.EQ.'VERT')IHOLD2='VERT'
C???? IF(IHOLD1.EQ.'3')IHOLD2='3'
CCCCC IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBDI
CCCCC IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBDI
      IBARDI(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,IBARDI(I)
 1276 FORMAT('BAR DIRECTION ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
C???? IF(IHOLD1.EQ.'2')IHOLD2='2'
C???? IF(IHOLD1.EQ.'3')IHOLD2='3'
CCCCC IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBDI
CCCCC IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBDI
      DO1315I=1,NUMBAR
      IBARDI(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IBARDI(I)
 1316 FORMAT('ALL BAR DIRECTIONS',
     1'HAVE JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBADI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEBDI
 9015 FORMAT('IDEBDI = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IBARDI(1)
 9030 FORMAT('IBARDI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IBARDI(I)
 9036 FORMAT('I,IBARDI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBAEF(IHARG,IARGT,ARG,NUMARG,BARHEF,BARWEF,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE BAR EXPANSION FACTORS
C              FOR THE HEIGHT AND WIDTH OF BARS IN BLOCK PLOTS (ONLY)
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--BARHEF = BAR HEIGHT EXPANSION FACTOR
C                     --BARWEF = BAR WIDTH EXPANSION FACTOR
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 NATIONAL INSTITUTE OF STANDARDS & TECHNOLOGY
C                 GAITHERSBURG, MARYLAND 20899
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     ORIGINAL VERSION--APRIL     1992.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBA'
      ISUBN2='EF  '
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBAEF--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)BARHEF,BARWEF
   70 FORMAT('BARHEF,BARWEF = ',2E15.7)
      CALL DPWRST('XXX','BUG ')
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.1)THEN
         IF(IHARG(NUMARG).EQ.'ON')GOTO1100
         IF(IHARG(NUMARG).EQ.'OFF')GOTO1100
         IF(IHARG(NUMARG).EQ.'AUTO')GOTO1100
         IF(IHARG(NUMARG).EQ.'DEFA')GOTO1100
      ENDIF
      GOTO1900
 1100 CONTINUE
      BARHEF=1.0
      BARWEF=1.0
      GOTO8000
 1900 CONTINUE
C
      IF(NUMARG.EQ.1)THEN
         BARHEF=1.0
         BARWEF=1.0
         GOTO8000
      ENDIF
C
      IF(NUMARG.GE.2)THEN
         IF(IARGT(NUMARG-1).EQ.'NUMB'.AND.IARGT(NUMARG).EQ.'NUMB')THEN
            BARHEF=ARG(NUMARG-1)
            BARWEF=ARG(NUMARG)
            GOTO8000
         ELSE
            WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1041)
 1041       FORMAT('***** ERROR IN DPBAEF--')
      CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1042)
 1042       FORMAT('      THE LAST 2 ARGUMENTS OF THE ')
      CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1043)
 1043       FORMAT('      BAR EXPANSION FACTORS     COMMAND')
      CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1044)
 1044       FORMAT('      MUST BE NUMBERS.')
      CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1045)
 1045       FORMAT('      SUCH WAS NOT THE CASE HERE')
      CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1046)
 1046       FORMAT('      EXAMPLE--BAR EXPANSION FACTORS 1.1 0.8')
      CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
         ENDIF
      ENDIF
C
 8000 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO8090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8011)
 8011 FORMAT('THE BAR EXPANSION FACTORS (HEIGHT & WIDTH)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8012)
 8012 FORMAT('(FOR BLOCK PLOTS ONLY)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8013)BARHEF,BARWEF
 8013 FORMAT('HAVE JUST BEEN SET TO ',E15.7,E15.7)
      CALL DPWRST('XXX','BUG ')
 8090 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBAEF--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9030I=1,NUMARG
      WRITE(ICOUT,9031)IHARG(I),IARGT(I),ARG(I)
 9031 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
 9030 CONTINUE
      WRITE(ICOUT,9041)BARHEF,BARWEF
 9041 FORMAT('BARHEF,BARWEF = ',2E15.7)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBAPL(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IANGLU,ISEED,IBOOSS,MAXNPP,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--FORM A BLAND ALTMAN PLOT (Y(I) - X(I) VERSUS
C              (Y(I) + X(I))/2 FOR PAIRED DATA IN Y AND X.
C     REFERENCES--GIAVARINA (2015), "UNDERSTANDING BLAND ALTMAN
C                 ANALYSIS", BIOCHEMIA MEDICA, VOL. 25, NO. 2),
C                 PP. 141-151.
C               --BLAND AND ALTMAN (1983), "MEASUREMENT IN MEDICINE:
C                 THE ANALYSIS OF METHOD COMPARISON STUDIES",
C                 STATISTICIAN, VOL. 32, PP. 307-317.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2017/07
C     ORIGINAL VERSION--JULY      2017 .
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IANGLU
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN0
      CHARACTER*4 IHOST1
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IHIGH
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASE
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=20)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION X1(MAXOBV)
      DIMENSION X2(MAXOBV)
      DIMENSION XHIGH(MAXOBV)
      DIMENSION XDIST(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION YDIFF(MAXOBV)
      DIMENSION ZMEAN(MAXOBV)
      DIMENSION Z25(MAXOBV)
      DIMENSION Z975(MAXOBV)
      DIMENSION ITEMP1(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZI.INC'
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),X1(1))
      EQUIVALENCE (GARBAG(IGARB3),Y2(1))
      EQUIVALENCE (GARBAG(IGARB4),X2(1))
      EQUIVALENCE (GARBAG(IGARB5),XHIGH(1))
      EQUIVALENCE (GARBAG(IGARB6),XDIST(1))
      EQUIVALENCE (GARBAG(IGARB7),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB8),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB9),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGAR10),XIDTE2(1))
      EQUIVALENCE (GARBAG(JGAR11),YDIFF(1))
      EQUIVALENCE (GARBAG(JGAR12),ZMEAN(1))
      EQUIVALENCE (GARBAG(JGAR13),Z25(1))
      EQUIVALENCE (GARBAG(JGAR14),Z975(1))
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBA'
      ISUBN2='PL  '
      IFOUND='NO'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BAPL')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBAPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPLOTV,NPLOTP,NS,MAXN,MAXNPP
   52   FORMAT('NPLOTV,NPLOTP,NS,MAXN,MAXNPP = ',5I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2,IFOUND,IERROR
   53   FORMAT('ICASPL,IAND1,IAND2,IFOUND,IERROR = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IANGLU,IBUGG2,IBUGG3,IBUGQ,ISUBRO
   54   FORMAT('IANGLU,IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *******************************************
C               **  TREAT THE BLAND ALTMAN          CASE **
C               *******************************************
C
C               ***************************
C               **  STEP 11--            **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='11'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BAPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHIGH='OFF'
      ICASAN='SUMM'
      IF(ICOM.EQ.'BLAN' .AND. IHARG(1).EQ.'ALTM')THEN
        IF((IHARG(2).EQ.'HIGH' .OR. IHARG(2).EQ.'SUBS') .AND.
     1      IHARG(3).EQ.'PLOT')THEN
          IHIGH='ON'
          ILASTC=3
        ELSEIF(IHARG(2).EQ.'PLOT')THEN
          ILASTC=2
        ELSE
          GOTO9000
        ENDIF
      ELSEIF(ICOM.EQ.'HIGH' .OR. ICOM.EQ.'SUBS')THEN
        IHIGH='ON'
        IF(IHARG(1).EQ.'BLAN'.AND. IHARG(2).EQ.'ALTM' .AND.
     1     IHARG(3).EQ.'PLOT')THEN
          ILASTC=3
        ELSE
          GOTO9000
        ENDIF
      ELSE
        GOTO9000
      ENDIF
C
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      IFOUND='YES'
      ICASPL='BAPL'
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BAPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BLAND ALTMAN PLOT'
      MAXNA=100
      MINN2=2
      IFLAGE=0
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      IF(IHIGH.EQ.'ON')THEN
        MINNA=3
        MINNVA=3
        MAXNVA=3
        IFLAGE=1
      ELSE
        MINNA=2
        MINNVA=2
        MAXNVA=4
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BAPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      IF(IHIGH.EQ.'OFF')THEN
        IF(NUMVAR.EQ.3)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,301)
  301     FORMAT('***** ERROR IN BLAND ALTMAN PLOT--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,313)
  313     FORMAT('      YOU SHOULD HAVE EITHER TWO VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,315)
  315     FORMAT('      VARIABLES (SUMMARY CASE) OR FOUR VARIABLES ',
     1           '(RAW CASE).')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,317)
  317     FORMAT('      THREE VARIABLES WERE GIVEN.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSEIF(NUMVAR.EQ.4)THEN
          ICASAN='RAW'
          IF(NRIGHT(1).NE.NRIGHT(2))THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,301)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,321)IVARN1(1),IVARN2(1),NRIGHT(1)
  321       FORMAT('      VARIABLE ',2A4,' HAS ',I8,' ELEMENTS.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,323)IVARN1(2),IVARN2(2),NRIGHT(2)
  323       FORMAT('      VARIABLE ',2A4,' HAS ',I8,' ELEMENTS.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,325)
  325       FORMAT('      THESE VARIABLES SHOULD HAVE THE SAME ',
     1             'NUMBER OF ELEMENTS.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSEIF(NRIGHT(3).NE.NRIGHT(4))THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,301)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,331)IVARN1(3),IVARN2(3),NRIGHT(3)
  331       FORMAT('      VARIABLE ',2A4,' HAS ',I8,' ELEMENTS.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,333)IVARN1(4),IVARN2(4),NRIGHT(4)
  333       FORMAT('      VARIABLE ',2A4,' HAS ',I8,' ELEMENTS.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,335)
  335       FORMAT('      THESE VARIABLES SHOULD HAVE THE SAME ',
     1             'NUMBER OF ELEMENTS.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ELSEIF(NUMVAR.EQ.2)THEN
          IF(NRIGHT(1).NE.NRIGHT(2))THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,301)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,321)IVARN1(1),IVARN2(1),NRIGHT(1)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,323)IVARN1(2),IVARN2(2),NRIGHT(2)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,325)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
      ENDIF

C     IN ORDER TO ACCOMODATE MATRIX ARGUMENTS, CALL EACH
C     VARIABLE SEPARATELY.
C
      IF(ICASAN.EQ.'SUMM')THEN
        NUMVA2=1
        ICOL=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1,Y1,Y1,NS1,NTEMP,NTEMP,ICASE,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        ICOL=2
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y2,Y2,Y2,NS2,NTEMP,NTEMP,ICASE,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
C
        IF(IHIGH.EQ.'ON')THEN
          ICOL=3
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                XHIGH,XHIGH,XHIGH,NHIGH,NTEMP,NTEMP,ICASE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
        ELSE
          NHIGH=0
        ENDIF
      ELSE
        NHIGH=0
        IHIGH='OFF'
        NUMVA2=2
        ICOL=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1,X1,Y1,NS1,NTEMP,NTEMP,ICASE,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        NUMVA2=2
        ICOL=3
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y2,X2,Y2,NS2,NTEMP,NTEMP,ICASE,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
      ENDIF
C
C               ****************************************************
C               **  STEP 41--                                      *
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          *
C               **  VARIABLES (Y(.) AND X(.), RESPECTIVELY) FOR    *
C               **   THE PLOT.                                     *
C               **  FORM THE CURVE DESIGNATION VARIABLE D(.)  .    *
C               **  THIS WILL BE BOTH ONES FOR BOTH CASES          *
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).  *
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).  *
C               ****************************************************
C
      ISTEPN='41'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BAPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPBAP2(Y1,X1,NS1,Y2,X2,NS2,MAXN,ICASAN,
     1            XIDTEM,XIDTE2,TEMP1,TEMP2,ITEMP1,
     1            XHIGH,NHIGH,XDIST,
     1            YDIFF,ZMEAN,Z25,Z975,
     1            IBAPPE,IBAPST,IBAPBO,IBAPCL,ISEED,IBOOSS,
     1            Y,X,D,NPLOTP,NPLOTV,
     1            YMEAN,YSD,YMLCL,YMUCL,
     1            YUPPER,YUPLCL,YUPUCL,YLOWER,YLOLCL,YLOUCL,
     1            IBUGG3,ISUBRO,IERROR)
C
      IH='DIFF'
      IH2='MEAN'
      VALUE0=YMEAN
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='DIFF'
      IH2='SD  '
      VALUE0=YSD
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='DIFF'
      IH2='MLCL'
      VALUE0=YMLCL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='DIFF'
      IH2='MUCL'
      VALUE0=YMUCL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='LOWL'
      IH2='IMIT'
      VALUE0=YLOWER
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='LOWL'
      IH2='MLCL'
      VALUE0=YLOLCL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='LOWL'
      IH2='MUCL'
      VALUE0=YLOUCL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='UPPL'
      IH2='IMIT'
      VALUE0=YUPPER
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='UPPL'
      IH2='MLCL'
      VALUE0=YUPLCL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='UPPL'
      IH2='MUCL'
      VALUE0=YUPUCL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGG3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BAPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBAPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NUMVAR,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NUMVAR,NS,ICASPL,IAND1,IAND2 = ',
     1         4I8,2X,2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)ICASPL,MAXN,NUMVAR
 9014   FORMAT('ICASPL,MAXN,NUMVAR = ',A4,I8,I8)
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GE.1)THEN
          DO9020I=1,NPLOTP
            WRITE(ICOUT,9021)I,Y(I),X(I),D(I)
 9021       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9020     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBAP2(Y1,X1,N1,Y2,X2,N2,MAXN,ICASAN,
     1                  XIDTEM,XIDTE2,TEMP1,TEMP2,ITEMP1,
     1                  XHIGH,NHIGH,XDIST,
     1                  YDIFF,ZMEAN,Z25,Z975,
     1                  IBAPPE,IBAPST,IBAPBO,IBAPCL,ISEED,IBOOSS,
     1                  Y2OUT,X2OUT,D2,NPLOTP,NPLOTV,
     1                  YMEAN,YSD,YMLCL,YMUCL,
     1                  YUPPER,YUPLCL,YUPUCL,YLOWER,YLOLCL,YLOUCL,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS THAT WILL DEFINE
C              A BLAND ALTMAN PLOT.  THIS IS A PLOT OF Y(I) - X(I)
C              VERSUS THEIR AVERAGE (Y(I) + X(I))/2.  THIS IS A
C              SIMILAR IDEA TO THE TUKEY MEAN DIFFERENCE PLOT.  BUT
C              THERE ARE SOME DIFFERENCES.
C
C                 1. THE BLAND ALTMAN PLOTS RAW DATA WHILE THE
C                    TUKEY MEAN DIFFERENCE PLOT IS BASED ON THE
C                    PERCENTILES OF THE DATA.
C
C                 2. THE BLAND ALTMAN PLOT ASSUMES PAIRED DATA
C                    WHILE THE TUKEY MEAN DIFFERENCE DOES NOT (AND
C                    IT DOES NOT REQUIRE THE TWO SAMPLES TO HAVE
C                    THE SAME LENGTH).
C
C                 3. THE TUKEY MEAN DIFFERENCE PLOT IS PRIMARILY
C                    FOCUSED ON THE QUESTION: DO THESE TWO SAMPLES
C                    HAVE SIMILAR DISTRIBUTIONS?  THE BLAND ALTMAN
C                    PLOT IS PRIMARILY FOCUSED ON THE DIFFERENCES
C                    BETWEEN THE PAIRS.
C
C     REFERENCES--GIAVARINA (2015), "UNDERSTANDING BLAND ALTMAN
C                 ANALYSIS", BIOCHEMIA MEDICA, VOL. 25, NO. 2),
C                 PP. 141-151.
C               --BLAND AND ALTMAN (1983), "MEASUREMENT IN MEDICINE:
C                 THE ANALYSIS OF METHOD COMPARISON STUDIES",
C                 STATISTICIAN, VOL. 32, PP. 307-317.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2017/07
C     ORIGINAL VERSION--JULY      2017.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 IBAPPE
      CHARACTER*4 IBAPST
      CHARACTER*4 IBAPBO
      CHARACTER*4 IBAPCL
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IWRITE
      CHARACTER*4 ICASJB
      CHARACTER*4 IOP
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION X1(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION XHIGH(*)
      DIMENSION Y2OUT(*)
      DIMENSION X2OUT(*)
      DIMENSION D2(*)
      DIMENSION XDIST(*)
      DIMENSION XIDTEM(*)
      DIMENSION XIDTE2(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION YDIFF(*)
      DIMENSION ZMEAN(*)
      DIMENSION Z25(*)
      DIMENSION Z975(*)
      DIMENSION ITEMP1(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBA'
      ISUBN2='P2  '
      IERROR='NO'
      IWRITE='OFF'
      ICASJB='BOOT'
C
      ZMEANT=CPUMIN
      AMEAN=CPUMIN
      TMAX=CPUMIN
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BAP2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBAP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGG3,ISUBRO,ICASAN,N,NHIGH
   52   FORMAT('IBUGG3,ISUBRO,ICASAN,N = ',3(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        IF(ICASAN.EQ.'SUMM')THEN
          DO61I=1,N1
            WRITE(ICOUT,62)I,Y1(I),Y2(I),XHIGH(I)
   62       FORMAT('I,Y1(I),Y2(I),XHIGH(I) = ',I8,3G15.7)
            CALL DPWRST('XXX','BUG ')
   61     CONTINUE
        ELSE
          DO71I=1,MAX(N1,N2)
            WRITE(ICOUT,72)I,Y1(I),X1(I),Y2(I),X2(I)
   72       FORMAT('I,Y1(I),X1(I),Y2(I),X2(I) = ',I8,4G15.7)
            CALL DPWRST('XXX','BUG ')
   71     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(ICASAN.EQ.'SUMM' .AND. N1.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1111)
 1111   FORMAT('***** ERROR IN BLAND ALTMAN PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1112)
 1112   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 1.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1114)N1
 1114   FORMAT('      THE NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSEIF(NHIGH.GT.0 .AND. NHIGH.NE.N1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1125)
 1125   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE HIGHLIGHTING ',
     1         'VARIABLE IS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1126)
 1126   FORMAT('      NOT EQUAL TO THE NUMBER OF OBSERVATIONS IN THE ',
     1         'RESPONSE VARIABLES.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1127)N
 1127   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE ',
     1         'RESPONSE VARIABLES = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1129)NHIGH
 1129   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE HIGHLIGHT ',
     1         'VARIABLE = ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSEIF(ICASAN.EQ.'RAW' .AND. N1.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1131)
 1131   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 1.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1134)N1
 1134   FORMAT('      THE NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSEIF(ICASAN.EQ.'RAW' .AND. N2.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1141)
 1141   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 1.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1144)N2
 1144   FORMAT('      THE NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ****************************************************
C               **  STEP 21--COMPUTE THE DIFFERENCES AND THE MEAN **
C               ****************************************************
C
      ISTEPN='21'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BAP2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASAN.EQ.'RAW')THEN
C
C       FOR RAW DATA, COMPUTE THE MEANS (OR MEDIANS) FOR
C       EACH SET OF DATA (Y1, X1 AND Y2, X2).
C
C       NOTE THAT FOR RAW DATA CASE, THE GROUP-ID'S MUST BE THE
C       SAME FOR EACH SET.
C
        CALL DISTIN(X1,N1,IWRITE,XIDTEM,NX1,IBUGG3,IERROR)
        CALL DISTIN(X2,N2,IWRITE,XIDTE2,NX2,IBUGG3,IERROR)
        IF(NX1.NE.NX2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1111)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1201)
 1201     FORMAT('      FOR THE RAW DATA CASE, THE NUMBER OF GROUP ',
     1           'MUST BE THE SAME.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1203)NX1
 1203     FORMAT('      THE NUMBER OF GROUPS FOR SET 1 = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1205)NX2
 1205     FORMAT('      THE NUMBER OF GROUPS FOR SET 2 = ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        CALL SORT(XIDTEM,NX1,XIDTEM)
        CALL SORT(XIDTE2,NX2,XIDTE2)
        NX=NX1
        DO1210II=1,NX
          IF(XIDTEM(II).NE.XIDTE2(II))THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1111)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1207)
 1207       FORMAT('      FOR THE RAW DATA CASE, THE GROUP IDs ',
     1           'MUST BE THE SAME.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1208)II,XIDTEM(II)
 1208       FORMAT('      FOR SET ONE, GROUP ',I5,' IS ',I8)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1209)II,XIDTE2(II)
 1209       FORMAT('      FOR SET TWO, GROUP ',I5,' IS ',I8)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
 1210   CONTINUE
C
        DO1220JJ=1,NX
          HOLD=XIDTEM(JJ)
          K=0
          DO1230II=1,N1
            IF(X1(II).EQ.HOLD)THEN
              K=K+1
              TEMP1(K)=Y1(II)
            ENDIF
 1230     CONTINUE
          IF(IBAPST.EQ.'MEAN')THEN
            CALL MEAN(TEMP1,K,IWRITE,YMEAN,IBUGG3,IERROR)
            XHIGH(JJ)=YMEAN
          ELSEIF(IBAPST.EQ.'MEDI')THEN
            CALL MEDIAN(TEMP1,K,IWRITE,TEMP2,MAXN,YMED,IBUGG3,IERROR)
            XHIGH(JJ)=YMED
          ENDIF
 1220   CONTINUE
        DO1240JJ=1,NX
          Y1(JJ)=XHIGH(JJ)
 1240   CONTINUE
C
        DO1320JJ=1,NX
          HOLD=XIDTE2(JJ)
          K=0
          DO1330II=1,N2
            IF(X2(II).EQ.HOLD)THEN
              K=K+1
              TEMP1(K)=Y2(II)
            ENDIF
 1330     CONTINUE
          IF(IBAPST.EQ.'MEAN')THEN
            CALL MEAN(TEMP1,K,IWRITE,YMEAN,IBUGG3,IERROR)
            XHIGH(JJ)=YMEAN
          ELSEIF(IBAPST.EQ.'MEDI')THEN
            CALL MEDIAN(TEMP1,K,IWRITE,TEMP2,MAXN,YMED,IBUGG3,IERROR)
            XHIGH(JJ)=YMED
          ENDIF
 1320   CONTINUE
        DO1340JJ=1,NX
          Y2(JJ)=XHIGH(JJ)
 1340   CONTINUE
        N1=NX
        N2=NX
      ELSE
        IF(NHIGH.GT.0)THEN
          CALL CODE(XHIGH,NHIGH,IWRITE,XDIST,D2,MAXN,IBUGG3,IERROR)
          CALL MAXIM(XDIST,NHIGH,IWRITE,TMAX,IBUGG3,IERROR)
        ELSE
          DO2005I=1,N1
            XDIST(I)=1.0
 2005     CONTINUE
          TMAX=1.0
        ENDIF
      ENDIF
C
      NPLOTP=0
      XMIN=CPUMAX
      XMAX=CPUMIN
      N=N1
      AN=REAL(N1)
      IF(IBAPPE.EQ.'PERC')THEN
        SUM1=0.0
        DO2020I=1,N
          AY=Y1(I) - Y2(I)
          AX=(Y1(I) + Y2(I))/2.0
          AYPERC=(AY/AX)*100.
          SUM1=SUM1 + AYPERC
          NPLOTP=NPLOTP+1
          Y2OUT(NPLOTP)=AYPERC
          X2OUT(NPLOTP)=AX
          D2(NPLOTP)=XDIST(I)
          IF(AX.LT.XMIN)XMIN=AX
          IF(AX.GT.XMAX)XMAX=AX
 2020   CONTINUE
        AMEAN=SUM1/AN
      ELSE
        DO2010I=1,N
          AY=Y1(I) - Y2(I)
          AX=(Y1(I) + Y2(I))/2.0
          NPLOTP=NPLOTP+1
          Y2OUT(NPLOTP)=AY
          X2OUT(NPLOTP)=AX
          D2(NPLOTP)=XDIST(I)
          IF(AX.LT.XMIN)XMIN=AX
          IF(AX.GT.XMAX)XMAX=AX
 2010   CONTINUE
      ENDIF
C
C     WRITE VALUES TO FILE (TO ALLOW AFTER THE FACT FITTING)
C
      IOP='OPEN'
      IFLAG1=1
      IFLAG2=0
      IFLAG3=0
      IFLAG4=0
      IFLAG5=0
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGG3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO2019
      DO2015I=1,NPLOTP
        WRITE(IOUNI1,'(2E15.7)')Y2OUT(I),X2OUT(I)
 2015 CONTINUE
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGG3,ISUBRO,IERROR)
C
 2019 CONTINUE
C
C     NOW ADD SOME REFERENCE LINES
C
      IWRITE='OFF'
      CALL MEAN(Y2OUT,NPLOTP,IWRITE,YMEAN,IBUGG3,IERROR)
      CALL SD(Y2OUT,NPLOTP,IWRITE,YSD,IBUGG3,IERROR)
C
      TMAX=TMAX+1.0
      NPLOTP=NPLOTP+1
      X2OUT(NPLOTP)=XMIN
      Y2OUT(NPLOTP)=0.0
      D2(NPLOTP)=TMAX
      NPLOTP=NPLOTP+1
      X2OUT(NPLOTP)=XMAX
      Y2OUT(NPLOTP)=0.0
      D2(NPLOTP)=TMAX
C
      IF(IBAPCL.EQ.'ANAL')THEN
        IF(IBAPPE.EQ.'PERC')THEN
          ZMEANT=AMEAN
        ELSE
          ZMEANT=YMEAN
        ENDIF
        AN=REAL(N1)
        TMAX=TMAX+1.0
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMIN
        Y2OUT(NPLOTP)=ZMEANT
        D2(NPLOTP)=TMAX
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMAX
        Y2OUT(NPLOTP)=ZMEANT
        D2(NPLOTP)=TMAX
C
        ADF=REAL(N1-1)
        P=0.975
        CALL TPPF(P,ADF,PPF)
        YMLCL=ZMEANT - PPF*YSD/SQRT(AN)
        YMUCL=ZMEANT + PPF*YSD/SQRT(AN)
        TMAX=TMAX+1.0
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMIN
        Y2OUT(NPLOTP)=YMLCL
        D2(NPLOTP)=TMAX
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMAX
        Y2OUT(NPLOTP)=YMLCL
        D2(NPLOTP)=TMAX
        TMAX=TMAX+1.0
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMIN
        Y2OUT(NPLOTP)=YMUCL
        D2(NPLOTP)=TMAX
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMAX
        Y2OUT(NPLOTP)=YMUCL
        D2(NPLOTP)=TMAX
C
        YUPPER=ZMEANT + 2.0*YSD
        TMAX=TMAX+1.0
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMIN
        Y2OUT(NPLOTP)=YUPPER
        D2(NPLOTP)=TMAX
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMAX
        Y2OUT(NPLOTP)=YUPPER
        D2(NPLOTP)=TMAX
C
        YUPLCL=YUPPER - PPF*YSD*SQRT(3.0/AN)
        YUPUCL=YUPPER + PPF*YSD*SQRT(3.0/AN)
        TMAX=TMAX+1.0
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMIN
        Y2OUT(NPLOTP)=YUPLCL
        D2(NPLOTP)=TMAX
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMAX
        Y2OUT(NPLOTP)=YUPLCL
        D2(NPLOTP)=TMAX
        TMAX=TMAX+1.0
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMIN
        Y2OUT(NPLOTP)=YUPUCL
        D2(NPLOTP)=TMAX
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMAX
        Y2OUT(NPLOTP)=YUPUCL
        D2(NPLOTP)=TMAX
C
        YLOWER=ZMEANT - 2.0*YSD
        TMAX=TMAX+1.0
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMIN
        Y2OUT(NPLOTP)=YLOWER
        D2(NPLOTP)=TMAX
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMAX
        Y2OUT(NPLOTP)=YLOWER
        D2(NPLOTP)=TMAX
C
        YLOLCL=YLOWER - PPF*YSD*SQRT(3.0/AN)
        YLOUCL=YLOWER + PPF*YSD*SQRT(3.0/AN)
        TMAX=TMAX+1.0
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMIN
        Y2OUT(NPLOTP)=YLOLCL
        D2(NPLOTP)=TMAX
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMAX
        Y2OUT(NPLOTP)=YLOLCL
        D2(NPLOTP)=TMAX
        TMAX=TMAX+1.0
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMIN
        Y2OUT(NPLOTP)=YLOUCL
        D2(NPLOTP)=TMAX
        NPLOTP=NPLOTP+1
        X2OUT(NPLOTP)=XMAX
        Y2OUT(NPLOTP)=YLOUCL
        D2(NPLOTP)=TMAX
      ELSE
C
C       BOOTSTRAP BASED CONFIDENCE INTERVALS.  IF "RAW" DATA WAS GIVEN,
C       CAN BOOTSTRAP EITHER THE RAW DATA OR THE DIFFERENCES.  IF
C       SUMMARY DATA WAS GIVEN, CAN ONLY BOOTSTRAP THE DIFFERENCES.
C
        IF(ICASAN.EQ.'RAW ' .AND. IBAPBO.EQ.'RAW ')THEN
C
C         BOOTSTRAP RAW DATA
C
        ELSE
C
C         COMPUTE DIFFERENCES AND STATISTICS FOR ORIGINAL DATA
C
          DO4010II=1,N1
            YDIFF(II)=Y1(II) - Y2(II)
 4010     CONTINUE
C
          CALL MEAN(YDIFF,N1,IWRITE,YMEANF,IBUGG3,IERROR)
          CALL SD(YDIFF,N1,IWRITE,YSDF,IBUGG3,IERROR)
C
C         NOW GENERATE THE BOOTSTRAP SAMPLES.  FROM EACH
C         BOOTSTRAP SAMPLE, COMPUTE
C
C            1. MEAN (OR MEDIAN)
C            2.  2.5 PERCENTILE
C            3. 97.5 PERCENTILE
C
C         THE BOOTSTRAP SAMPLES WILL BE USED TO COMPUTE CONFIDENCE
C         INTERVALS FOR EACH OF THESE STATISTICS.
C
          DO4020IRESAM=1,IBOOSS
C
            IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BAP2')THEN
              WRITE(ICOUT,4021)IRESAM
 4021         FORMAT('FROM DPBAP2, IRESAM = ',I8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            IRESA2=IRESAM
            CALL DPJBS3(YDIFF,N1,ICASJB,IRESA2,ISEED,TEMP1,NTEMP,
     1                  ITEMP1,TEMP2,IBUGG3,IERROR)
            IF(IBAPST.EQ.'MEAN')THEN
              CALL MEAN(TEMP1,N1,IWRITE,YMEAN,IBUGG3,IERROR)
              ZMEAN(IRESAM)=YMEAN
            ELSEIF(IBAPST.EQ.'MEDI')THEN
              CALL MEDIAN(TEMP1,N1,IWRITE,TEMP2,MAXN,YMED,IBUGG3,IERROR)
              ZMEAN(IRESAM)=YMED
            ENDIF
            CALL SD(TEMP1,N1,IWRITE,YSD,IBUGG3,IERROR)
            Z25(IRESAM)=ZMEAN(IRESAM) - 2.0*YSD
            Z975(IRESAM)=ZMEAN(IRESAM) + 2.0*YSD
CCCCC       P100=2.5
CCCCC       CALL PERCEN(P100,TEMP1,N1,IWRITE,TEMP2,MAXN,
CCCCC1                  YPERC,IBUGG3,IERROR)
CCCCC       Z25(IRESAM)=YPERC
CCCCC       P100=97.5
CCCCC       CALL PERCEN(P100,TEMP1,N1,IWRITE,TEMP2,MAXN,
CCCCC1                  YPERC,IBUGG3,IERROR)
CCCCC       Z975(IRESAM)=YPERC
C
 4020     CONTINUE
C
      IOP='OPEN'
      IFLAG1=0
      IFLAG2=1
      IFLAG3=0
      IFLAG4=0
      IFLAG5=0
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGG3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO2019
      DO4025I=1,IRESAM
        WRITE(IOUNI2,'(2E15.7)')ZMEAN(I),Z975(I)
 4025 CONTINUE
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGG3,ISUBRO,IERROR)
C
C         NOW GENERATE THE LINES FOR THE VARIOUS CURVES ON THE PLOT
C
          AN=REAL(N1)
          TMAX=TMAX+1.0
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMIN
          Y2OUT(NPLOTP)=YMEANF
          D2(NPLOTP)=TMAX
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMAX
          Y2OUT(NPLOTP)=YMEANF
          D2(NPLOTP)=TMAX
C
          P100=2.5
          CALL PERCEN(P100,ZMEAN,IBOOSS,IWRITE,TEMP2,MAXN,
     1                YMLCL,IBUGG3,IERROR)
          P100=97.5
          CALL PERCEN(P100,ZMEAN,IBOOSS,IWRITE,TEMP2,MAXN,
     1                YMUCL,IBUGG3,IERROR)
          TMAX=TMAX+1.0
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMIN
          Y2OUT(NPLOTP)=YMLCL
          D2(NPLOTP)=TMAX
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMAX
          Y2OUT(NPLOTP)=YMLCL
          D2(NPLOTP)=TMAX
          TMAX=TMAX+1.0
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMIN
          Y2OUT(NPLOTP)=YMUCL
          D2(NPLOTP)=TMAX
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMAX
          Y2OUT(NPLOTP)=YMUCL
          D2(NPLOTP)=TMAX
C
          YUPPER=YMEANF + 2.0*YSDF
          TMAX=TMAX+1.0
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMIN
          Y2OUT(NPLOTP)=YUPPER
          D2(NPLOTP)=TMAX
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMAX
          Y2OUT(NPLOTP)=YUPPER
          D2(NPLOTP)=TMAX
C
          P100=2.5
          CALL PERCEN(P100,Z975,IBOOSS,IWRITE,TEMP2,MAXN,
     1                YUPLCL,IBUGG3,IERROR)
          P100=97.5
          CALL PERCEN(P100,Z975,IBOOSS,IWRITE,TEMP2,MAXN,
     1                YUPUCL,IBUGG3,IERROR)
          TMAX=TMAX+1.0
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMIN
          Y2OUT(NPLOTP)=YUPLCL
          D2(NPLOTP)=TMAX
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMAX
          Y2OUT(NPLOTP)=YUPLCL
          D2(NPLOTP)=TMAX
          TMAX=TMAX+1.0
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMIN
          Y2OUT(NPLOTP)=YUPUCL
          D2(NPLOTP)=TMAX
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMAX
          Y2OUT(NPLOTP)=YUPUCL
          D2(NPLOTP)=TMAX
C
          YLOWER=YMEANF - 2.0*YSDF
          TMAX=TMAX+1.0
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMIN
          Y2OUT(NPLOTP)=YLOWER
          D2(NPLOTP)=TMAX
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMAX
          Y2OUT(NPLOTP)=YLOWER
          D2(NPLOTP)=TMAX
C
          P100=2.5
          CALL PERCEN(P100,Z25,IBOOSS,IWRITE,TEMP2,MAXN,
     1                YLOLCL,IBUGG3,IERROR)
          P100=97.5
          CALL PERCEN(P100,Z25,IBOOSS,IWRITE,TEMP2,MAXN,
     1                YLOUCL,IBUGG3,IERROR)
          TMAX=TMAX+1.0
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMIN
          Y2OUT(NPLOTP)=YLOLCL
          D2(NPLOTP)=TMAX
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMAX
          Y2OUT(NPLOTP)=YLOLCL
          D2(NPLOTP)=TMAX
          TMAX=TMAX+1.0
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMIN
          Y2OUT(NPLOTP)=YLOUCL
          D2(NPLOTP)=TMAX
          NPLOTP=NPLOTP+1
          X2OUT(NPLOTP)=XMAX
          Y2OUT(NPLOTP)=YLOUCL
          D2(NPLOTP)=TMAX
C
        ENDIF
      ENDIF
C
      NPLOTV=3
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BAP2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBAP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR,N2
 9012   FORMAT('IERROR,N2 = ',A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NPLOTP
          WRITE(ICOUT,9016)I,Y2OUT(I),X2OUT(I),D2(I)
 9016     FORMAT('I,Y2OUT(I),X2OUT(I),D2(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBAR2(Y,X,N,NUMV2,ICASPL,ISIZE,ICONT,
     1                  XIDTEM,TEMP,
     1                  Y2,X2,D2,N2,NPLOTV,IBUGG3,IERROR)
C
C     PURPOSE--GENERATE A QUADRUPLE OF COORDINATE VECTORS
C              THAT WILL DEFINE AN BAR PLOT.
C              IF ONLY 1 Y VALUE EXISTS FOR EACH X VALUE,
C              THEN A HISTOGRAM WILL RESULT (THE BAR WILL
C              REST ON 0);
C              IF MORE THAN 1 Y VALUE EXISTS FOR EACH X VALUE,
C              THEN THE BARS WILL BE SUSPENDED BETWEEN THE
C              MINIMUM AND MAXIMUM AT EACH X VALUE.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1982.
C     UPDATED         --JANUARY   1989.   CLASS WIDTH, 0 FREQ BARS (ALAN)
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICONT
      CHARACTER*4 IBUGG3
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
C
      DIMENSION XIDTEM(*)
      DIMENSION TEMP(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----DATA STATEMENTS-------------------------------------------------
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBA'
      ISUBN2='R2  '
C
      K=(-999)
      KP1=(-999)
      I2=0
      AN=0.0
      KP4=0
C
      AN3=0
      DENOM=0.0
      CLWID=0.0
      XSTART=0.0
      XSTOP=0.0
C
C     CHECK THE INPUT ARGUMENTS FOR ERRORS
C
      IF(N.LT.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN DPBAR2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 1;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE NUMBER OF OBSERVATIONS = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,70)
   70   FORMAT('AT THE BEGINNING OF DPBAR2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)ICASPL,ICONT,N,NUMV2,ISIZE
   71   FORMAT('ICASPL,ICONT,N,NUMV2,ISIZE = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        DO72I=1,N
          WRITE(ICOUT,73)I,Y(I),X(I)
   73     FORMAT('I, Y(I), X(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   72   CONTINUE
      ENDIF
C
C               ********************************************************
C               **  STEP 1--                                          **
C               **  DETERMINE THE NUMBER OF DISTINCT VALUES           **
C               **  FOR VARIABLE 2 (THE GROUP VARIABLE).              **
C               **  IF ALL VALUES ARE DISTINCT, THEN THIS             **
C               **  IMPLIES WE HAVE THE NO REPLICATION CASE           **
C               **  WHICH MEANS THAT A HISTOGRAM SHOULD RESULT        **
C               ********************************************************
C
      ISTEPN='1'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMV2.EQ.1)GOTO110
      IF(NUMV2.EQ.2)GOTO150
C
  110 CONTINUE
      NUMSET=0
      DO120I=ISIZE,N,ISIZE
      I2=I
      NUMSET=NUMSET+1
      XIDTEM(NUMSET)=NUMSET
  120 CONTINUE
      IF(I2.LT.N)GOTO130
      GOTO140
  130 CONTINUE
      NUMSET=NUMSET+1
      XIDTEM(NUMSET)=NUMSET
  140 CONTINUE
      DO145I=1,N
      IGROUP=1+((I-1)/ISIZE)
      IMID=(IGROUP-1)*ISIZE+(ISIZE/2)
      X(I)=IMID
  145 CONTINUE
      GOTO190
C
  150 CONTINUE
      NUMSET=0
      DO160I=1,N
      IF(NUMSET.EQ.0)GOTO165
      DO170J=1,NUMSET
      IF(X(I).EQ.XIDTEM(J))GOTO160
  170 CONTINUE
  165 CONTINUE
      NUMSET=NUMSET+1
      XIDTEM(NUMSET)=X(I)
  160 CONTINUE
      CALL SORT(XIDTEM,NUMSET,XIDTEM)
C
      XID1=XIDTEM(1)
      XID2=XIDTEM(NUMSET)
C
  190 CONTINUE
C
      IF(NUMSET.EQ.0)WRITE(ICOUT,191)
  191 FORMAT('ERROR IN DPBAR2   SUBROUTINE--NUMSET = 0')
      IF(NUMSET.EQ.0)CALL DPWRST('XXX','BUG ')
      IF(NUMSET.EQ.0)GOTO9000
      IF(NUMSET.EQ.0)IERROR='YES'
C
      IF(NUMSET.EQ.N)GOTO1000
      GOTO2000
C
C               ********************************
C               **  STEP 4--                  **
C               **  TREAT THE HISTOGRAM CASE  **
C               ********************************
C
 1000 CONTINUE
      ISTEPN='4'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      KP3=0
C
      AN3=0.0
      DENOM=0.0
C
C               **********************************************
C               **  STEP 4.1--                               **
C               **  IF NECESSARY,                           **
C               **  DETERMINE CLASS WIDTH,                  **
C               **  START VALUE, STOP VALUE,                **
C               **  AND NUMBER OF CLASSES.                  **
C               **********************************************
C
      CALL SORT(X,N,D2)
      NM1=N-1
C  BUG FIX: (AUGUST, 1987) USE CLASS WIDTH PARAMETER IF SPECIFIED
      CLWID=CLWIDT(1)
      IF(CLWID.GT.0.0)GOTO1105
C  END FIX
      CLWID=D2(2)-D2(1)
      DO1100I=1,NM1
      IP1=I+1
      DELI=D2(IP1)-D2(I)
      IF(DELI.LT.CLWID)CLWID=DELI
 1100 CONTINUE
C  BUG FIX CONTINUED
 1105 CONTINUE
C  END FIX
      XSTART=D2(1)-(CLWID/2.0)
      XSTOP=D2(N)+(CLWID/2.0)
C
      TOTWID=XSTOP-XSTART
      ANUMCL=TOTWID/CLWID
      NUMCLA=INT(ANUMCL+1.0+0.1)
C
      J=NUMCLA-1
      AJ=J
      CLMAXJ=XSTART+AJ*CLWID
      ABSDEL=ABS(CLMAXJ-XSTOP)
      IF(ABSDEL.LE.0.0001)NUMCLA=NUMCLA-1
C
C               *******************************************************
C               **  STEP 4.2--                                       **
C               **  DETERMINE THE FREQUENCY (COUNTS) FOR EACH CLASS  **
C               *******************************************************
C
      DO1300J=1,NUMCLA
      D2(J)=0.0
 1300 CONTINUE
C
      DO1520I=1,N
      DO1530J=1,NUMCLA
      J2=J
      AJ=J
      CLMINJ=XSTART+(AJ-1.0)*CLWID
      CLMAXJ=XSTART+AJ*CLWID
      IF(CLMAXJ.GT.XSTOP)CLMAXJ=XSTOP
      IF(CLMINJ.LE.X(I).AND.X(I).LT.CLMAXJ)GOTO1540
 1530 CONTINUE
      GOTO1520
 1540 CONTINUE
      D2(J2)=D2(J2)+Y(I)
 1520 CONTINUE
C
C     TREAT THE SPECIAL CASE OF EQUALITY
C     WITH THE UPPER LIMIT OF THE LAST (RIGHT-MOST) CLASS
C     (ALTHOUGH THIS SHOULD NOT HAPPEN)
C
      J=NUMCLA
      DO1550I=1,N
      AJ=J
      CLMAXJ=XSTART+AJ*CLWID
      IF(CLMAXJ.GT.XSTOP)CLMAXJ=XSTOP
      IF(X(I).EQ.CLMAXJ)D2(J)=D2(J)+Y(I)
 1550 CONTINUE
      GOTO1590
C
 1590 CONTINUE
      IF(IBUGG3.EQ.'OFF')GOTO1595
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1591)
 1591 FORMAT('***** IN THE MIDDLE    OF DPBAR2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1592)CLWID,XSTART,XSTOP,TOTWID,ANUMCL,NUMCLA
 1592 FORMAT('CLWID,XSTART,XSTOP,TOTWID,ANUMCL,NUMCLA= ',5E11.4,I8)
      CALL DPWRST('XXX','BUG ')
      DO1593J=1,NUMCLA
      AJ=J
      CLMINJ=XSTART+(AJ-1.0)*CLWID
      CLMAXJ=XSTART+AJ*CLWID
      IF(CLMAXJ.GT.XSTOP)CLMAXJ=XSTOP
      FJ=D2(J)
      WRITE(ICOUT,1594)J,CLMINJ,CLMAXJ,FJ
 1594 FORMAT('J,CLMINJ,CLMAXJ,FJ = ',I8,3E15.7)
      CALL DPWRST('XXX','BUG ')
 1593 CONTINUE
 1595 CONTINUE
C
C               **********************************
C               **  STEP 4.3--                  **
C               **  DETERMINE PLOT COORDINATES  **
C               **********************************
C
CCCCC IF(BAWID.EQ.CPUMIN)BAWID=CLWID
C
      SUM=0.0
      DO1610J=1,NUMCLA
      FJ=D2(J)
      SUM=SUM+FJ
 1610 CONTINUE
      AN3=SUM
C
      DENOM=1.0
C  BUG FIX: AUGUST, 1987 DO NOT PLOT ZERO FREQUENCY BARS
      K=0
C  END BUG FIX
C
      DO1620J=1,NUMCLA
C
CCCCC K=4*(J-1)+1
CCCCC KP1=K+1
CCCCC KP2=K+2
CCCCC KP3=K+3
C  BUG FIX CONTINUED
CCCCC K=J
C  END BUG FIX
C
CCCCC AJ=J
CCCCC CLMIDJ=XSTART+(AJ-0.5)*CLWID
CCCCC BAMINJ=CLMIDJ-BAWID/2.0
CCCCC BAMAXJ=CLMIDJ+BAWID/2.0
      AJ=J
      CLMIDJ=XSTART+(AJ-0.5)*CLWID
C
      FJ=D2(J)
C  BUG FIX CONTINUED
      IF(ABS(FJ).LE.CPUMIN)GOTO1620
      K=K+1
C  END FIX
C
CCCCC X2(K)=BAMINJ
CCCCC X2(KP1)=BAMINJ
CCCCC X2(KP2)=BAMAXJ
CCCCC X2(KP3)=BAMAXJ
      X2(K)=CLMIDJ
C
CCCCC Y2(K)=0.0
CCCCC Y2(KP1)=FJ/DENOM
CCCCC Y2(KP2)=FJ/DENOM
CCCCC Y2(KP3)=0.0
      Y2(K)=FJ/DENOM
C
 1620 CONTINUE
C
C  BUG FIX CONTINUED
       NUMCLA=K
C  END FIX
      DO1720J=1,NUMCLA
C
CCCCC K=4*(J-1)+1
CCCCC KP1=K+1
CCCCC KP2=K+2
CCCCC KP3=K+3
      K=J
C
CCCCC D2(K)=J
CCCCC D2(KP1)=J
CCCCC D2(KP2)=J
CCCCC D2(KP3)=J
      D2(K)=J
C
 1720 CONTINUE
CCCCC N2=KP3
      N2=K
      NPLOTV=3
      GOTO9000
C
C               *****************************************************
C               **  STEP 14--                                       **
C               **  TREAT THE SUSPENDED BAR CASE.                  **
C               **  STEP THROUGH THE VARIOUS HORIZONTAL AXIS SETS  **
C               **  AND COMPUTE BAR COORDINATES FOR EACH SET.      **
C               *****************************************************
C
 2000 CONTINUE
C
      ISTEPN='14'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMSM1=NUMSET-1
C  CONTINUE BUG FIX
      CLWID=CLWIDT(1)
      IF(CLWID.GT.0.)GOTO2060
C  END FIX
      CLWID=XIDTEM(2)-XIDTEM(1)
      DO2050I=1,NUMSM1
      IP1=I+1
      DELI=XIDTEM(IP1)-XIDTEM(I)
      IF(DELI.LT.CLWID)CLWID=DELI
 2050 CONTINUE
C  CONTINUE BUG FIX
 2060 CONTINUE
C  END FIX
CCCCC IF(BAWID.EQ.CPUMIN)BAWID=CLWID
C
      AN=N
      ANUMSE=NUMSET
C
      J=0
      JD=0
      DO2100ISET=1,NUMSET
C
      K=0
      DO2120I=1,N
      IF(X(I).EQ.XIDTEM(ISET))K=K+1
      IF(X(I).EQ.XIDTEM(ISET))TEMP(K)=Y(I)
 2120 CONTINUE
      NI=K
      ANI=NI
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,2121)ISET,XIDTEM(ISET),NI
 2121   FORMAT('ISET,XIDTEM(ISET),NI = ',I8,E15.7,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NI.LE.0)GOTO2140
      GOTO2149
C
 2140 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2141)
 2141 FORMAT('***** INTERNAL ERROR IN DPBAR2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2142)
 2142 FORMAT('NI FOR SOME CLASS = 0')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2143)ISET,XIDTEM(ISET),NI
 2143 FORMAT('ISET,XIDTEM(ISET),NI = ',I8,E15.7,I8)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 2149 CONTINUE
C
      CALL SORT(TEMP,NI,TEMP)
      YMIN=TEMP(1)
      YMAX=TEMP(NI)
      IF(IBUGG3.EQ.'ON')WRITE(ICOUT,2151)YMIN,YMAX,ISET,K,TEMP(K)
 2151 FORMAT('YMIN,YMAX,ISET,K,TEMP(K) = ',2E15.7,2I8,E15.7)
      IF(IBUGG3.EQ.'ON')CALL DPWRST('XXX','BUG ')
C
      J=ISET
C
CCCCC K=5*(J-1)+1
CCCCC KP1=K+1
CCCCC KP2=K+2
CCCCC KP3=K+3
CCCCC KP4=K+4
      K=2*(J-1)+1
      KP1=K+1
C
CCCCC CLMIDJ=XIDTEM(ISET)
CCCCC BAMINJ=CLMIDJ-BAWID/2.0
CCCCC BAMAXJ=CLMIDJ+BAWID/2.0
      CLMIDJ=XIDTEM(ISET)
C
CCCCC X2(K)=BAMINJ
CCCCC X2(KP1)=BAMINJ
CCCCC X2(KP2)=BAMAXJ
CCCCC X2(KP3)=BAMAXJ
CCCCC X2(KP4)=BAMINJ
      X2(K)=CLMIDJ
      X2(KP1)=CLMIDJ
C
CCCCC Y2(K)=YMIN
CCCCC Y2(KP1)=YMAX
CCCCC Y2(KP2)=YMAX
CCCCC Y2(KP3)=YMIN
CCCCC Y2(KP4)=YMIN
      Y2(K)=YMIN
      Y2(KP1)=YMAX
C
CCCCC D2(K)=J
CCCCC D2(KP1)=J
CCCCC D2(KP2)=J
CCCCC D2(KP3)=J
CCCCC D2(KP4)=J
      D2(K)=J
      D2(KP1)=J
C
C
 2100 CONTINUE
CCCCC N2=KP4
      N2=KP1
      NPLOTV=3
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBAR2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)NUMSET,N2,NUMV2,NI,IERROR
 9012   FORMAT('NUMSET,N2,NUMV2,NI,IERROR = ',4I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,Y2(I),X2(I),D2(I)
 9016     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        WRITE(ICOUT,9033)AN,AN3,DENOM
 9033   FORMAT('AN,AN3,DENOM = ',2F10.1,G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9037)N,CLWID,XSTART,XSTOP
 9037   FORMAT('N,CLWID,XSTART,XSTOP = ',I6,3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO9050I=1,NUMSET
          WRITE(ICOUT,9051)I,XIDTEM(I)
 9051     FORMAT('I,XIDTEM(I) = ',I8,E15.7)
          CALL DPWRST('XXX','BUG ')
 9050   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBARP(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IBUGG2,IBUGG3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A BAR PLOT = A BAR CHART =
C              A HISTOGRAM
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1982.
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IRELAT
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASEQ
      CHARACTER*4 IDATA
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IERRO4
      CHARACTER*4 ICONT
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
CCCCC DIMENSION BAWIDT(*)
C
      DIMENSION Y1(MAXOBV)
      DIMENSION X1(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION TEMP(MAXOBV)
CCCCC FOLLOWING LINES ADDED JUNE, 1990
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),X1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y1(1))
      EQUIVALENCE (GARBAG(IGARB3),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB4),TEMP(1))
CCCCC END CHANGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPBA'
      ISUBN2='RP  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
C
      MAXV2=2
      MINN2=2
C
      ICOLR=0
C
C               *******************************
C               **  TREAT THE BAR PLOT CASE  **
C               *******************************
C
      IF(IBUGG2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBARP--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)ICASPL,IAND1,IAND2
   52 FORMAT('ICASPL,IAND1,IAND2 = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ
   53 FORMAT('IBUGG2,IBUGG3,IBUGQ = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,54)BAWIDT(1),BAWIDT(2)
CCC54 FORMAT('BAWIDT(1),BAWIDT(2) = ',2E15.7)
CCCCC CALL DPWRST('XXX','BUG ')
   90 CONTINUE
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'PLOT')GOTO110
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'CHAR')GOTO110
C
      IFOUND='NO'
      GOTO9000
C
  110 CONTINUE
      ICASPL='BARP'
      IRELAT='OFF'
      ILASTC=1
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      GOTO180
C
  180 CONTINUE
      IFOUND='YES'
      GOTO190
C
  190 CONTINUE
C
C               *******************************************************
C               **  STEP 2--                                         **
C               **  CHECK FOR THE PROPER NUMBER OF INPUT ARGUMENTS.  **
C               *******************************************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MINNA=1
      MAXNA=100
      CALL CHECKA(NUMARG,MINNA,MAXNA,IANS,IWIDTH,ISUBN1,ISUBN2,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ********************************************
C               **  STEP 2--                              **
C               **  CHECK THE VALIDITY OF ARGUMENT 1      **
C               **  (THIS WILL BE THE RESPONSE VARIABLE)  **
C               ********************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHLEFT,IHLEF2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      ICOLL=IVALUE(ILOCV)
      NLEFT=IN(ILOCV)
      IF(IBUGG2.EQ.'ON')WRITE(ICOUT,211)IHLEFT,IHLEF2,ICOLL,NLEFT
  211 FORMAT('IHLEFT,IHLEF2,ICOLL,NLEFT = ',A4,2X,A4,I8,I8)
      IF(IBUGG2.EQ.'ON')CALL DPWRST('XXX','BUG ')
C
C               ***************************************************************
C               **  STEP 3--                                                 **
C               **  CHECK THAT THE INPUT NUMBER OF OBSERVATIONS (NLEFT)      **
C               **  FOR THE RESPONSE VARIABLE IS POSITIVE.                   **
C               ***************************************************************
C
      ISTEPN='3'
      IF(IBUGG2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NLEFT.GE.MINN2)GOTO390
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,311)
  311 FORMAT('***** ERROR IN DPBARP--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,312)
  312 FORMAT('      THE INPUT NUMBER OF OBSERVATIONS')
      CALL DPWRST('XXX','BUG ')
      IF(ICASPL.EQ.'HIST'.AND.IRELAT.EQ.'OFF')WRITE(ICOUT,321)
  321 FORMAT('      (FOR WHICH A HISTOGRAM ')
      IF(ICASPL.EQ.'HIST'.AND.IRELAT.EQ.'OFF')CALL DPWRST('XXX','BUG ')
      IF(ICASPL.EQ.'HIST'.AND.IRELAT.EQ.'ON')WRITE(ICOUT,322)
  322 FORMAT('      (FOR WHICH A RELATIVE HISTOGRAM ')
      IF(ICASPL.EQ.'HIST'.AND.IRELAT.EQ.'ON')CALL DPWRST('XXX','BUG ')
      IF(ICASPL.EQ.'CUMH'.AND.IRELAT.EQ.'OFF')WRITE(ICOUT,323)
  323 FORMAT('      (FOR WHICH A CUMULATIVE HISTOGRAM ')
      IF(ICASPL.EQ.'CUMH'.AND.IRELAT.EQ.'OFF')CALL DPWRST('XXX','BUG ')
      IF(ICASPL.EQ.'CUMH'.AND.IRELAT.EQ.'ON')WRITE(ICOUT,324)
  324 FORMAT('      (FOR WHICH A RELATIVE CUMULATIVE HISTOGRAM ')
      IF(ICASPL.EQ.'CUMH'.AND.IRELAT.EQ.'ON')CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,314)
  314 FORMAT('      WAS TO HAVE BEEN FORMED)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,315)MINN2
  315 FORMAT('      MUST BE ',I8,' OR LARGER;')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,316)
  316 FORMAT('      SUCH WAS NOT THE CASE HERE.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,317)
  317 FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)WRITE(ICOUT,318)(IANS(I),I=1,IWIDTH)
  318 FORMAT(80A1)
      IF(IWIDTH.GE.1)CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
  390 CONTINUE
C
C               *****************************************
C               **  STEP 4--                           **
C               **  CHECK TO SEE THE TYPE SUBCASE      **
C               **  (BASED ON THE QUALIFIER)--         **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET/EXCEPT; OR             **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='4'
      IF(IBUGG2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO480
      DO400J=1,NUMARG
      J1=J
      IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ') GOTO410
      IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ') GOTO410
      IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ') GOTO420
  400 CONTINUE
      GOTO490
  410 CONTINUE
      ICASEQ='SUBS'
      ILOCQ=J1
      GOTO490
  420 CONTINUE
      ICASEQ='FOR'
      ILOCQ=J1
      GOTO490
C
  480 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,481)
  481 FORMAT('***** INTERNAL ERROR IN DPBARP')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,482)
  482 FORMAT('      AT BRANCH POINT 481--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,483)
  483 FORMAT('      NUMARG LESS THAN 1 EVEN THOUGH')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,484)
  484 FORMAT('      NUMARG HAD PREVIOUSLY PASSED THIS TEST')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,485)NUMARG
  485 FORMAT('      ONCE ALREADY.  VALUE OF NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,486)
  486 FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)WRITE(ICOUT,487)(IANS(I),I=1,IWIDTH)
  487 FORMAT(80A1)
      IF(IWIDTH.GE.1)CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
  490 CONTINUE
      IF(IBUGG2.EQ.'OFF')GOTO495
      WRITE(ICOUT,491)NUMARG,ILOCQ,ICASEQ
  491 FORMAT('NUMARG,ILOCQ,ICASEQ = ',I8,I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
  495 CONTINUE
C
C               ******************************************************
C               **  STEP 5--                                        **
C               **  IF A SECOND ARGUMENT EXISTS (AS IT SHOULD), THEN THIS
C               **  INDICATES THAT THE VALUES IN THE                **
C               **  FIRST  VARIABLE ARE NOT DATA POINTS             **
C               **  BUT ALREADY-COMPUTED FREQUENCIES,               **
C               **  AND THE VALUES IN THE SECOND VARIABLE           **
C               **  ARE THE CORRESPONDING X VALUES FOR EACH         **
C               **  FREQUENCY.  IF WE HAVE THE 2-VARIABLE CASE,     **
C               **  CHECK THE VALIDITY OF THE SECOND (X) VARIABLE.  **
C               ******************************************************
C
      ISTEPN='5'
      IF(IBUGG2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMV2=ILOCQ-1
      IDATA='FREQ'
      IF(NUMV2.EQ.2)GOTO509
      GOTO550
C
  509 CONTINUE
      IHRIGH=IHARG(2)
      IHRIG2=IHARG2(2)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHRIGH,IHRIG2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      ICOLR=IVALUE(ILOCV)
      NRIGHT=IN(ILOCV)
C
      IF(IBUGG2.EQ.'ON')THEN
        WRITE(ICOUT,511)IHRIGH,IHRIG2,ICOLR,NRIGHT
  511   FORMAT('IHRIGH,IHRIG2,ICOLR,NRIGHT = ',A4,2X,A4,I8,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NRIGHT.NE.NLEFT)GOTO570
      GOTO590
C
  550 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,551)
  551 FORMAT('***** ERROR IN DPBARP--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,552)
  552 FORMAT('      FOR A BAR PLOT, ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,558)
  558 FORMAT('      THE NUMBER OF VARIABLES ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,559)
  559 FORMAT('      MUST BE EXACTLY 2  ;')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,560)
  560 FORMAT('      SUCH WAS NOT THE CASE HERE;')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,561)
  561 FORMAT('      THE SPECIFIED NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,562)NUMV2
  562 FORMAT('      OF VARIABLES WAS ',I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,563)
  563 FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)WRITE(ICOUT,564)(IANS(I),I=1,IWIDTH)
  564 FORMAT(80A1)
      IF(IWIDTH.GE.1)CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
  570 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,571)
  571 FORMAT('***** ERROR IN DPBARP--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,572)
  572 FORMAT('      FOR A BAR PLOT, ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,579)
  579 FORMAT('      THE NUMBER OF ELEMENTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,580)
  580 FORMAT('      IN THE 2 VARIABLES ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,581)
  581 FORMAT('      MUST BE THE SAME; ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,582)
  582 FORMAT('      SUCH WAS NOT THE CASE HERE.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,583)
  583 FORMAT('      THE FIRST  VARIABLE  (FREQUENCIES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,584)IHLEFT,IHLEF2,NLEFT
  584 FORMAT('                  ',A4,A4,'  HAS ',I8,' ELEMENTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,585)
  585 FORMAT('      THE SECOND VARIABLE  (HORIZ. AXIS VALUES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,586)IHRIGH,IHRIG2,NRIGHT
  586 FORMAT('                  ',A4,A4,'  HAS ',I8,' ELEMENTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,587)
  587 FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)WRITE(ICOUT,588)(IANS(I),I=1,IWIDTH)
  588 FORMAT(80A1)
      IF(IWIDTH.GE.1)CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
  590 CONTINUE
C
C               *****************************************
C               **  STEP 6--                           **
C               **  BRANCH TO THE APPROPRIATE SUBCASE; **
C               **  (BASED ON THE QUALIFIER)           **
C               **  THEN FORM THE RESPONSE VARIABLE    **
C               **  AND THE FACTORS                    **
C               **  AND CARRY OUT THE PLOTS.           **
C               *****************************************
C
      ISTEPN='6'
      IF(IBUGG2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASEQ.EQ.'FULL')GOTO610
      IF(ICASEQ.EQ.'SUBS')GOTO620
      IF(ICASEQ.EQ.'FOR')GOTO630
C
  610 CONTINUE
      DO615I=1,NLEFT
      ISUB(I)=1
  615 CONTINUE
      NQ=NLEFT
      GOTO650
C
  620 CONTINUE
      NIOLD=NLEFT
      CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERRO4)
      NQ=NIOLD
      GOTO650
C
  630 CONTINUE
      NIOLD=NLEFT
      CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,
     1NLOCAL,ILOCS,NS,IBUGQ,IERROR)
      NQ=NFOR
      GOTO650
C
  650 CONTINUE
      J=0
      IMAX=NLEFT
      IF(NQ.LT.NLEFT)IMAX=NQ
      DO660I=1,IMAX
      IF(ISUB(I).EQ.0)GOTO660
      J=J+1
C
      IF(NUMV2.LE.1)GOTO651
      GOTO652
C
  651 CONTINUE
      IJ=MAXN*(ICOLL-1)+I
      IF(ICOLL.LE.MAXCOL)X1(J)=V(IJ)
      IF(ICOLL.EQ.MAXCP1)X1(J)=PRED(I)
      IF(ICOLL.EQ.MAXCP2)X1(J)=RES(I)
      GOTO660
C
  652 CONTINUE
      IJ=MAXN*(ICOLR-1)+I
      IF(ICOLR.LE.MAXCOL)X1(J)=V(IJ)
      IF(ICOLR.EQ.MAXCP1)X1(J)=PRED(I)
      IF(ICOLR.EQ.MAXCP2)X1(J)=RES(I)
      IJ=MAXN*(ICOLL-1)+I
      IF(ICOLL.LE.MAXCOL)Y1(J)=V(IJ)
      IF(ICOLL.EQ.MAXCP1)Y1(J)=PRED(I)
      IF(ICOLL.EQ.MAXCP2)Y1(J)=RES(I)
      GOTO660
C
  660 CONTINUE
      NLOCAL=J
C
C               *****************************************************
C               **  STEP 8--                                       **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C               **  RESET THE VECTOR D(.) TO ALL ONES.             **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).  **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).  **
C               *****************************************************
C
CCCCC BAWID=BAWIDT(1)
C
      NUMV2=2
      ISIZE=1
      ICONT='ON'
      CALL DPBAR2(Y1,X1,NLOCAL,NUMV2,ICASPL,ISIZE,ICONT,
     1XIDTEM,TEMP,
     1Y,X,D,NPLOTP,NPLOTV,IBUGG3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBARP--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IFOUND,IERROR
 9012 FORMAT('IFOUND,IERROR = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013 FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1I8,I8,I8,2X,A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,9014)BAWIDT(1),BAWIDT(2)
C9014 FORMAT('BAWIDT(1),BAWIDT(2) = ',2E15.7)
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,9015)BAWID
C9015 FORMAT('BAWDI = ',E15.7)
CCCCC CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBASW(IHARG,NUMARG,IDEBSW,MAXBAR,IBARSW,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR SWITCHES.
C              THESE ARE LOCATED IN THE VECTOR IBARSW(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEBSW
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBARSW (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEBSW
      CHARACTER*4 IBARSW
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IBARSW(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBA'
      ISUBN2='SW  '
C
      NUMBAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBASW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEBSW
   55 FORMAT('IDEBSW = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IBARSW(1)
   70 FORMAT('IBARSW(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IBARSW(I)
   76 FORMAT('I,IBARSW(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='ON'
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION   CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      IBARSW(1)='ON'
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-1
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+1
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='ON'
      IF(IHOLD1.EQ.'OFF')IHOLD2='OFF'
CCCCC IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBSW
CCCCC IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBSW
      IBARSW(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,IBARSW(I)
 1276 FORMAT('BAR ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='ON'
      IF(IHOLD1.EQ.'OFF')IHOLD2='OFF'
CCCCC IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBSW
CCCCC IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBSW
      DO1315I=1,NUMBAR
      IBARSW(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IBARSW(I)
 1316 FORMAT('ALL BARS ',
     1'HAVE JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBASW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEBSW
 9015 FORMAT('IDEBSW = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IBARSW(1)
 9030 FORMAT('IBARSW(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IBARSW(I)
 9036 FORMAT('I,IBARSW(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBATY(IHARG,NUMARG,IDEBTY,MAXBAR,IBARTY,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR DIMENSION (2 OR 3)
C              THESE ARE LOCATED IN THE VECTOR IBARTY(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEBTY
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBARTY (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--87/5
C     ORIGINAL VERSION--APRIL     1987.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEBTY
      CHARACTER*4 IBARTY
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IBARTY(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBA'
      ISUBN2='TY  '
C
      NUMBAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBATY--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEBTY
   55 FORMAT('IDEBTY = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IBARTY(1)
   70 FORMAT('IBARTY(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IBARTY(I)
   76 FORMAT('I,IBARTY(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='2'
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION   CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      IBARTY(1)='2'
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-1
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+1
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'2')IHOLD2='2'
      IF(IHOLD1.EQ.'3')IHOLD2='3'
CCCCC IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBTY
CCCCC IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBTY
      IBARTY(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,IBARTY(I)
 1276 FORMAT('BAR DIMENSION ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'2')IHOLD2='2'
      IF(IHOLD1.EQ.'3')IHOLD2='3'
CCCCC IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBTY
CCCCC IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBTY
      DO1315I=1,NUMBAR
      IBARTY(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IBARTY(I)
 1316 FORMAT('ALL BAR DIMENSIONS',
     1'HAVE JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBATY--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEBTY
 9015 FORMAT('IDEBTY = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IBARTY(1)
 9030 FORMAT('IBARTY(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IBARTY(I)
 9036 FORMAT('I,IBARTY(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBAUD(IHARG,IARGT,IARG,NUMARG,IDEFBA,
     1IBAUD,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAUD RATE AT WHICH THE TERMINAL
C              IS TRANSMITTING TO THE HOST.
C              THE SPECIFIED BAUD RATE VALUE WILL BE PLACED
C              IN THE INTEGER VARIABLE IBAUD.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --IARG   (AN INTEGER VECTOR)
C                     --NUMARG (AN INTEGER VARIABLE)
C                     --IDEFBA (AN INTEGER VARIABLE)
C     OUTPUT ARGUMENTS--IBAUD  (AN INTEGER VARIABLE)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER 1980.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1150
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'?')GOTO8100
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1160
      GOTO1120
C
 1120 CONTINUE
      IERROR='YES'
      WRITE(ICOUT,1121)
 1121 FORMAT('***** ERROR IN DPBAUD--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1122)
 1122 FORMAT('      ILLEGAL FORM FOR BAUD RATE ',
     1'COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1124)
 1124 FORMAT('      TEST EXAMPLE TO DEMONSTRATE THE ',
     1'PROPER FORM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1125)
 1125 FORMAT('      SUPPOSE THE THE TERMINAL IS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1126)
 1126 FORMAT('      TRANSMITTING AT 9600 BAUD, ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1127)
 1127 FORMAT('      THEN THE ALLOWABLE FORM IS--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1128)
 1128 FORMAT('      BAUD RATE 9600 ')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 1150 CONTINUE
      IHOLD=IDEFBA
      GOTO1180
C
 1160 CONTINUE
      IHOLD=IARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      IBAUD=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBAUD
 1181 FORMAT('THE BAUD RATE HAS JUST BEEN SET TO ',
     1I8)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO9000
C
C               ********************************************
C               **  STEP 81--                             **
C               **  TREAT THE    ?    CASE--              **
C               **  DUMP OUT CURRENT AND DEFAULT VALUES.  **
C               ********************************************
C
 8100 CONTINUE
      IFOUND='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8111)IBAUD
 8111 FORMAT('THE CURRENT BAUD RATE IS ',I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8112)IDEFBA
 8112 FORMAT('THE DEFAULT BAUD RATE IS ',I8)
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPBAWI(ADEBWI,MAXBAR,ABARWI,
CCCCC SUBROUTINE DPBAWI(IHARG,IARGT,ARG,NUMARG,ADEBWI,MAXBAR,ABARWI,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR WIDTHS.
C              THESE ARE LOCATED IN THE VECTOR ABARWI(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --ADEBWI
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--ABARWI (A FLOATING POINT VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --APRIL     2008. BAR WIDTH AUTOMATIC
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
CCCCC CHARACTER*4 IHARG
CCCCC CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASEQ
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGQ
C
CCCCC DIMENSION IHARG(*)
CCCCC DIMENSION IARGT(*)
CCCCC DIMENSION ARG(*)
      DIMENSION ABARWI(*)
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBA'
      ISUBN2='WI  '
C
      NUMBAR=0
      IHOLD1='-999'
      HOLD1=-999.0
      HOLD2=-999.0
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBAWI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,HOLD1,HOLD2
   54 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)ADEBWI
   55 FORMAT('ADEBWI = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)ABARWI(1)
   70 FORMAT('ABARWI(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,ABARWI(I)
   76 FORMAT('I,ABARWI(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
CCCCC APRIL 2008.  ADD BAR WIDTH AUTOMATIC <VAR>
      IF(NUMARG.GE.3.AND.IHARG(2).EQ.'AUTO')GOTO3000
      IF(NUMARG.GE.4.AND.IHARG(3).EQ.'AUTO')GOTO3000
C
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='    '
      IF(IHARG(2).EQ.'ALL')HOLD1=ADEBWI
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')HOLD1=ARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')HOLD1=ARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      ABARWI(1)=ADEBWI
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-1
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+1
      IHOLD1=IHARG(J)
      HOLD1=ARG(J)
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=ADEBWI
      IF(IHOLD1.EQ.'OFF')HOLD2=ADEBWI
      IF(IHOLD1.EQ.'AUTO')HOLD2=ADEBWI
      IF(IHOLD1.EQ.'DEFA')HOLD2=ADEBWI
      ABARWI(I)=HOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,ABARWI(I)
 1276 FORMAT('THE WIDTH OF BAR ',I6,
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=ADEBWI
      IF(IHOLD1.EQ.'OFF')HOLD2=ADEBWI
      IF(IHOLD1.EQ.'AUTO')HOLD2=ADEBWI
      IF(IHOLD1.EQ.'DEFA')HOLD2=ADEBWI
      DO1315I=1,NUMBAR
      ABARWI(I)=HOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)ABARWI(I)
 1316 FORMAT('THE WIDTH OF ALL BARS',
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               ******************************************************
C               **  STEP 30--                                       **
C               **  TREAT THE BAR WIDTH  AUTOMATIC <VARIABLE>   CASE**
C               ******************************************************
C
 3000 CONTINUE
C
C               ***********************************************
C               **  STEP 31--                                **
C               **  CHECK THE VALIDITY OF ARGUMENT 2 (OR 3)  **
C               **  (THIS WILL BE THE RESPONSE VARIABLE)     **
C               ***********************************************
C
      ISTEPN='31'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(3)
      IHLEF2=IHARG2(3)
      IF(IHARG(3).EQ.'DIST'.AND.IHARG2(3).EQ.'INCT')THEN
        IHLEFT=IHARG(4)
        IHLEF2=IHARG2(4)
      ENDIF
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHLEFT,IHLEF2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      ICOLL=IVALUE(ILOCV)
      NLEFT=IN(ILOCV)
C
C               *****************************************
C               **  STEP 32--                          **
C               **  CHECK TO SEE THE TYPE CASE--       **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET/EXCEPT; OR             **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='32'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO3290
      DO3200J=1,NUMARG
      J1=J
      IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ') GOTO3210
      IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ') GOTO3210
      IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ') GOTO3220
 3200 CONTINUE
      GOTO3290
 3210 CONTINUE
      ICASEQ='SUBS'
      ILOCQ=J1
      GOTO3290
 3220 CONTINUE
      ICASEQ='FOR'
      ILOCQ=J1
      GOTO3290
 3290 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO3295
      WRITE(ICOUT,3291)NUMARG,ILOCQ
 3291 FORMAT('NUMARG,ILOCQ = ',2I8)
      CALL DPWRST('XXX','BUG ')
 3295 CONTINUE
C
C               *********************************************
C               **  STEP 33--                              **
C               **  TEMPORARILY FORM THE VARIABLE Y(.)     **
C               **  WHICH WILL HOLD THE RESPONSE VARIABLE. **
C               **  FORM THIS VARIABLE BY                  **
C               **  BRANCHING TO THE APPROPRIATE SUBCASE   **
C               **  (FULL, SUBSET, OR FOR).                **
C               *********************************************
C
      ISTEPN='33'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASEQ.EQ.'FULL')GOTO3310
      IF(ICASEQ.EQ.'SUBS')GOTO3320
      IF(ICASEQ.EQ.'FOR')GOTO3330
C
 3310 CONTINUE
      DO3315I=1,NLEFT
      ISUB(I)=1
 3315 CONTINUE
      NQ=NLEFT
      GOTO3350
C
 3320 CONTINUE
      NIOLD=NLEFT
      CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERROR)
      NQ=NIOLD
      GOTO3350
C
 3330 CONTINUE
      NIOLD=NLEFT
      CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,
     1NLOCAL,ILOCS,NS,IBUGQ,IERROR)
      NQ=NFOR
      GOTO3350
C
 3350 CONTINUE
      MINN2=1
      IF(NQ.LT.MINN2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3351)
 3351   FORMAT('***** ERROR IN BAR WIDTH AUTOMATIC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3352)
 3352   FORMAT('      AFTER THE APPROPRIATE SUBSET HAS BEEN ',
     1         'EXTRACTED,')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3353)IHLEFT,IHLEF2
 3353   FORMAT('      THE NUMBER OF OBSERVATIONS REMAINING',
     1         'FROM VARIABLE ',A4,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3354)
 3354   FORMAT('      (FOR WHICH BAR WIDTH DEFINITIONS ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3355)
 3355   FORMAT('      ARE TO BE GENERATED)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3356)MINN2
 3356   FORMAT('      MUST BE ',I8,' OR LARGER;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3357)
 3357   FORMAT('      SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3358)
 3358   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,3359)(IANS(I),I=1,MIN(80,IWIDTH))
 3359     FORMAT('      ',80A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
      ENDIF
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
      J=0
      IMAX=NLEFT
      IF(NQ.LT.NLEFT)IMAX=NQ
      DO3370I=1,IMAX
        IF(ISUB(I).EQ.0)GOTO3370
        J=J+1
C
        IJ=MAXN*(ICOLL-1)+I
        IF(ICOLL.LE.MAXCOL)Y(J)=V(IJ)
        IF(ICOLL.EQ.MAXCP1)Y(J)=PRED(I)
        IF(ICOLL.EQ.MAXCP2)Y(J)=RES(I)
        IF(ICOLL.EQ.MAXCP3)Y(J)=YPLOT(I)
        IF(ICOLL.EQ.MAXCP4)Y(J)=XPLOT(I)
        IF(ICOLL.EQ.MAXCP5)Y(J)=X2PLOT(I)
        IF(ICOLL.EQ.MAXCP6)Y(J)=TAGPLO(I)
C
 3370 CONTINUE
      NS=J
      NY=J
C
C               *****************************************
C               **  STEP 34--                          **
C               **  IF HAVE THE FORM--                 **
C               **  BAR WIDTH  AUTOMATIC DISTINCT X    **
C               **  EXTRACT THE DISTINCT VALUES        **
C               **  FROM THE TARGET VARIABLE Y(.)   .  **
C               **  STORE THEM IN X(.)   .             **
C               **  IF HAVE THE FORM--                 **
C               **  BAR WIDTH  AUTOMATIC X             **
C               **  DO NOTHING                         **
C               *****************************************
C
      IF(IHARG(3).EQ.'DIST'.AND.IHARG2(3).EQ.'INCT')THEN
        IWRITE='OFF'
        CALL DISTIN(Y,NY,IWRITE,X,NX,IBUGP2,IERROR)
      ELSE
        DO3411I=1,NY
          X(I)=Y(I)
 3411   CONTINUE
        NX=NY
      ENDIF
C
C               ******************************************
C               **  STEP 36--                           **
C               **  COPY VALUES IN X(.) TO ABARWI       **
C               **        MAX NUMBER OF BARS    = 100   **
C               ******************************************
C
      IMAX=NX
      IF(IMAX.GT.MAXBAR)IMAX=MAXBAR
      DO3650I=1,IMAX
      ABARWI(I)=X(I)
 3650 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO3675I=1,IMAX
          WRITE(ICOUT,3676)I,ABARWI(I)
 3676     FORMAT('BAR WIDTH ',I6,' HAS JUST BEEN SET TO ',
     1           G15.7)
          CALL DPWRST('XXX','BUG ')
 3675   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBAWI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,HOLD1,HOLD2
 9014 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)ADEBWI
 9015 FORMAT('ADEBWI = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I),IARGT(I),ARG(I)
 9026 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)ABARWI(1)
 9030 FORMAT('ABARWI(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,ABARWI(I)
 9036 FORMAT('I,ABARWI(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBBCO(IHARG,IARG,NUMARG,IDEBBC,ICASCL,MAXBAR,IRGBMX,
     1                  IBABCO,IBABC2,
     1                  IBUGP2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR BORDER COLORS = THE COLORS
C              OF THE BORDER LINE AROUND THE BARS.
C              THESE ARE LOCATED IN THE VECTOR IBABCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEBBC
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBABCO (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --OCTOBER   2020. SUPPORT FORM RGB COLOR
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEBBC
      CHARACTER*4 IBABCO
      CHARACTER*4 ICASCL
      CHARACTER*4 IBUGP2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARG(*)
      DIMENSION IBABCO(*)
      DIMENSION IBABC2(MAXBAR,3)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPBB'
      ISUBN2='CO  '
      IHOLD1='-999'
      IHOLD2='-999'
C
      NUMBAR=0
      JHOLD1=-1
      JHOLD2=-1
      JHOLD3=-1
C
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BBCO')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBBCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGP2,ISUBRO,IFOUND,IERROR
   52   FORMAT('IBUGP2,ISUBRO,IFOUND,IERROR = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)MAXBAR,NUMBAR,NUMARG,IRGBMX
   53   FORMAT('MAXBAR,NUMBAR,NUMARG,IRGBMX = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IHOLD1,IHOLD2,IDEBBC
   54   FORMAT('IHOLD1,IHOLD2,IDEBBC = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        DO65I=1,NUMARG
          WRITE(ICOUT,66)I,IARG(I),IHARG(I)
   66     FORMAT('I,IARG(I),IHARG(I) = ',2I8,2X,A4)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
        DO75I=1,10
          WRITE(ICOUT,76)I,IBABCO(I),
     1                   IBABC2(I,1),IBABC2(I,2),IBABC2(I,3)
   76     FORMAT('I,IBABCO(I),IBABC2(I,1),IBABC2(I,2),IBABC2(I,3) = ',
     1           I8,2X,A4,2X,3I5)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
      ENDIF
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BBCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(ICASCL.EQ.'RGB ')GOTO2000
C
      IF(NUMARG.EQ.2)THEN
        GOTO1200
      ELSEIF(NUMARG.EQ.3)THEN
        IF(IHARG(3).EQ.'ALL')THEN
          IHOLD1='    '
          GOTO1300
        ENDIF
        GOTO1200
      ELSEIF(NUMARG.EQ.4)THEN
        IF(IHARG(3).EQ.'ALL')THEN
          IHOLD1=IHARG(4)
          GOTO1300
        ELSEIF(IHARG(4).EQ.'ALL')THEN
          IHOLD1=IHARG(3)
          GOTO1300
        ENDIF
        GOTO1200
      ELSE
        GOTO1200
      ENDIF
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BBCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)THEN
        NUMBAR=1
        IBABCO(1)=IDEBBC
      ELSE
        NUMBAR=NUMARG-2
        IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
        DO1225I=1,NUMBAR
          J=I+2
          IHOLD1=IHARG(J)
          IHOLD2=IHOLD1
          IF(IHOLD1.EQ.'ON')IHOLD2=IDEBBC
          IF(IHOLD1.EQ.'OFF')IHOLD2=IDEBBC
          IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBBC
          IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBBC
          IBABCO(I)=IHOLD2
 1225   CONTINUE
      ENDIF
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO1278I=1,NUMBAR
          WRITE(ICOUT,1276)I,IBABCO(I)
 1276     FORMAT('THE COLOR OF BAR BORDER ',I6,
     1          ' HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
 1278   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BBCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2=IDEBBC
      IF(IHOLD1.EQ.'OFF')IHOLD2=IDEBBC
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBBC
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBBC
      DO1315I=1,NUMBAR
        IBABCO(I)=IHOLD2
 1315 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,1316)IBABCO(I)
 1316   FORMAT('THE COLOR OF ALL BAR BORDERS HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IFOUND='YES'
      GOTO9000
C
 2000 CONTINUE
C
      ISTEPN='4'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BBCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      JHOLD1=-1
      JHOLD2=-1
      JHOLD3=-1
      NUMBAR=MAXBAR
      IF(NUMARG.EQ.2)THEN
        GOTO2200
      ELSEIF(NUMARG.EQ.3 .AND. IHARG(3).EQ.'ALL')THEN
        GOTO2200
      ELSEIF(NUMARG.EQ.5)THEN
        IF(IHARG(5).EQ.'ALL')THEN
          JHOLD1=IARG(2)
          JHOLD2=IARG(3)
          JHOLD3=IARG(4)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ELSEIF(IHARG(2).EQ.'ALL')THEN
          JHOLD1=IARG(3)
          JHOLD2=IARG(4)
          JHOLD3=IARG(5)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ENDIF
        GOTO2200
      ELSEIF(NUMARG.EQ.6)THEN
        IF(IHARG(6).EQ.'ALL')THEN
          JHOLD1=IARG(3)
          JHOLD2=IARG(4)
          JHOLD3=IARG(5)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ELSEIF(IHARG(3).EQ.'ALL')THEN
          JHOLD1=IARG(4)
          JHOLD2=IARG(5)
          JHOLD3=IARG(6)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ENDIF
        GOTO2200
      ELSE
        GOTO2200
      ENDIF
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
 2200 CONTINUE
      ISTEPN='5'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BBCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)THEN
        NUMBAR=1
        IBABC2(1,1)=-1
        IBABC2(1,2)=-1
        IBABC2(1,3)=-1
      ELSE
        NTEMP=NUMARG-2
        NUMBAR=NTEMP/3
        IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
        IF(NUMBAR.LT.1)THEN
          IBABC2(1,1)=-1
          IBABC2(1,2)=-1
          IBABC2(1,3)=-1
          GOTO2229
        ELSEIF(NUMBAR.GT.MAXBAR)THEN
          NUMBAR=MAXBAR
        ENDIF
        IF(IHARG(1).EQ.'COLO')THEN
          IADD=2
        ELSE
          IADD=3
        ENDIF
        DO2225I=1,NUMBAR
          J1=(I-1)*3+IADD
          J2=J1+1
          J3=J1+2
          JHOLD1=IARG(J1)
          JHOLD2=IARG(J2)
          JHOLD3=IARG(J3)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          IBABC2(I,1)=JHOLD1
          IBABC2(I,2)=JHOLD2
          IBABC2(I,3)=JHOLD3
 2225   CONTINUE
 2229   CONTINUE
      ENDIF
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO2278I=1,NUMBAR
          WRITE(ICOUT,2276)I,IBABC2(I,1),IBABC2(I,2),IBABC2(I,3)
 2276     FORMAT('THE RGB COLOR OF BAR BORDER ',I6,
     1          ' HAS JUST BEEN SET TO ',3I5)
          CALL DPWRST('XXX','BUG ')
 2278   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 2300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BBCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      DO2315I=1,NUMBAR
        IBABC2(I,1)=JHOLD1
        IBABC2(I,2)=JHOLD2
        IBABC2(I,3)=JHOLD3
 2315 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,2316)IBABC2(I,1),IBABC2(I,2),IBABC2(I,3)
 2316   FORMAT('THE RGB COLOR OF ALL BAR BORDERS HAS JUST BEEN SET TO ',
     1         3I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IFOUND='YES'
      GOTO9000
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BBCO')THEN
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBBCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR,NUMBAR
 9012   FORMAT('IFOUND,IERROR,NUMBAR = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IHOLD1,IHOLD2,JHOLD1,JHOLD2,JHOLD3
 9014   FORMAT('IHOLD1,IHOLD2,JHOLD1,JHOLD2,JHOLD3 = ',2(A4,2X),3I5)
        CALL DPWRST('XXX','BUG ')
        DO9035I=1,10
          WRITE(ICOUT,76)I,IBABCO(I),
     1                   IBABC2(I,1),IBABC2(I,2),IBABC2(I,3)
          CALL DPWRST('XXX','BUG ')
 9035   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBBLI(IHARG,IHARG2,NUMARG,IDEBBL,MAXBAR,IBABLI,
CCCCC AUGUST 1995.  ADD IHARG2 FOR DASH2, ETC
CCCCC SUBROUTINE DPBBLI(IHARG,NUMARG,IDEBBL,MAXBAR,IBABLI,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BORDER LINES = THE LINES TYPES
C              OF THE BORDER AROUND THE BARS.
C              THESE ARE LOCATED IN THE VECTOR IBABLI(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEBBL
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBABLI (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --AUGUST    1995.  DASH2 BUG
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      CHARACTER*4 IHARG2
      CHARACTER*4 IDEBBL
      CHARACTER*4 IBABLI
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      DIMENSION IHARG2(*)
      DIMENSION IBABLI(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBB'
      ISUBN2='LI  '
C
      NUMBAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBBLI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEBBL
   55 FORMAT('IDEBBL = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IBABLI(1)
   70 FORMAT('IBABLI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IBABLI(I)
   76 FORMAT('I,IBABLI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO9000
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      IF(NUMARG.EQ.5)GOTO1150
      GOTO1160
C
 1130 CONTINUE
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(5).EQ.'ALL')IHOLD1='    '
      IF(IHARG(5).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
CCCCC APRIL 1996.  CHANGE IHOLD TO IHOLD1 BELOW
      IF(IHARG(5).EQ.'ALL')THEN
        IHOLD1=IHARG(6)
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'2')IHOLD1='DA2'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'3')IHOLD1='DA3'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'4')IHOLD1='DA4'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'5')IHOLD1='DA5'
        GOTO1300
      ENDIF
      IF(IHARG(6).EQ.'ALL')THEN
        IHOLD1=IHARG(5)
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'2')IHOLD1='DA2'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'3')IHOLD1='DA3'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'4')IHOLD1='DA4'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'5')IHOLD1='DA5'
        GOTO1300
      ENDIF
      GOTO1200
C
 1160 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.3)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      IBABLI(1)='    '
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-3
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+3
      IHOLD1=IHARG(J)
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'2')IHOLD1='DA2'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'3')IHOLD1='DA3'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'4')IHOLD1='DA4'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'5')IHOLD1='DA5'
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBBL
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBBL
      IBABLI(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,IBABLI(I)
 1276 FORMAT('THE LINE TYPE FOR BAR BORDER ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBBL
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBBL
      DO1315I=1,NUMBAR
      IBABLI(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IBABLI(I)
 1316 FORMAT('THE LINE TYPE FOR ALL BAR BORDERS',
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBBLI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEBBL
 9015 FORMAT('IDEBBL = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IBABLI(1)
 9030 FORMAT('IBABLI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IBABLI(I)
 9036 FORMAT('I,IBABLI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBBTH(IHARG,IARGT,ARG,NUMARG,PDEBBT,MAXBAR,PBABTH,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR (BORDER) LINE THICKNESSES = THE THICKNESSES
C              OF THE BORDER LINE AROUND THE BARS.
C              THESE ARE LOCATED IN THE VECTOR PBABTH(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --PDEBBT
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--PBABTH (A FLOATING POINT VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
      DIMENSION PBABTH(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBB'
      ISUBN2='TH  '
C
      NUMBAR=0
      IHOLD1='-999'
      HOLD1=-999.0
      HOLD2=-999.0
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBBTH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,HOLD1,HOLD2
   54 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)PDEBBT
   55 FORMAT('PDEBBT = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)PBABTH(1)
   70 FORMAT('PBABTH(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,PBABTH(I)
   76 FORMAT('I,PBABTH(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      GOTO1150
C
 1120 CONTINUE
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1='    '
      IF(IHARG(3).EQ.'ALL')HOLD1=PDEBBT
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(4)
      IF(IHARG(3).EQ.'ALL')HOLD1=ARG(4)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      IF(IHARG(4).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(4).EQ.'ALL')HOLD1=ARG(3)
      IF(IHARG(4).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      PBABTH(1)=PDEBBT
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-2
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+2
      IHOLD1=IHARG(J)
      HOLD1=ARG(J)
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEBBT
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEBBT
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEBBT
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEBBT
      PBABTH(I)=HOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,PBABTH(I)
 1276 FORMAT('THE THICKNESS OF BAR BORDER ',I6,
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEBBT
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEBBT
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEBBT
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEBBT
      DO1315I=1,NUMBAR
      PBABTH(I)=HOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)PBABTH(I)
 1316 FORMAT('THE THICKNESS OF ALL BAR BORDERS',
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBBTH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,HOLD1,HOLD2
 9014 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)PDEBBT
 9015 FORMAT('PDEBBT = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I),IARGT(I),ARG(I)
 9026 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)PBABTH(1)
 9030 FORMAT('PBABTH(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,PBABTH(I)
 9036 FORMAT('I,PBABTH(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBCC2(Y1,X1,N1,ICASPL,MAXN,NCURVE,
     1                  ALAMB1,ALAMB2,
     1                  Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                  Y2,X2,D2,N2,NPLOTV,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS THAT WILL DEFINE
C              THE BOX-COX CORRELATION PLOT TRACE WHICH IS A PLOT OF
C              THE CORRELATION COEFFICIENT OF THE CORRELATION
C              COEFFICIENT (Y,T(X)) VERSUS THE BOX-COX PARAMATER LAMBDA.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--87/6
C     ORIGINAL VERSION--MAY       1987.
C     UPDATED         --DECEMBER  1993. CHARACTER*4 ICASPL
C     UPDATED         --MAY       2010. SUPPORT FOR REPLICATION CASE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
CCCCC THE FOLLOWING LINE WAS ADDED     DECEMBER 1993
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION X1(*)
C
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
      DIMENSION Y2TEMP(*)
      DIMENSION X2TEMP(*)
      DIMENSION D2TEMP(*)
C
      DIMENSION DISPAR(*)
      DIMENSION CORR(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBC'
      ISUBN2='C2  '
      IERROR='NO'
      AN1=0.0
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BCC2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBCC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG3,ISUBRO,ICASPL,MAXN,N1,NPLOTV
   53   FORMAT('IBUGG3,ISUBRO,ICASPL,MAXN,N1,NPLOTV = ',3(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)ALAMB1,ALAMB2
   54   FORMAT('ALAMB1,ALAMB2 = ',2E15.7)
        CALL DPWRST('XXX','BUG ')
        IF(N1.GT.0)THEN
          DO60I=1,N1
            WRITE(ICOUT,61)I,Y1(I),X1(I)
   61       FORMAT('I,Y1(I),X1(I) = ',I8,2E12.5)
            CALL DPWRST('XXX','BUG ')
   60     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N1.LT.3)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1121)
 1121   FORMAT('***** ERROR IN BOX-COX LINEARITY PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1122)
 1122   FORMAT('      THE NUMBER OF OBSERVATIONS IS LESS THAN THREE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=X1(1)
      DO1130I=1,N1
        IF(X1(I).NE.HOLD)GOTO1139
 1130 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1121)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1132)
 1132 FORMAT('      ALL INPUT RESPONSE VARIABLE ELEMENTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1133)HOLD
 1133 FORMAT('      ARE IDENTICALLY EQUAL TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 1139 CONTINUE
C
C               *******************************************************
C               **  STEP 21--                                        **
C               **  DETERMINE THE SET OF PARAMETER VALUES            **
C               **  TO BE USED FOR THE TRANSFORMATIONS               **
C               *******************************************************
C
      NUMDIS=41
      ANUMDI=NUMDIS
      DO2100IDIS=1,NUMDIS
        AIDIS=IDIS
        DISPAR(IDIS)=ALAMB1+((AIDIS-1.0)/(ANUMDI-1.0))*(ALAMB2-ALAMB1)
 2100 CONTINUE
C
C               ****************************************
C               **  STEP 22--                         **
C               **  DETERMINE PLOT COORDINATES        **
C               ****************************************
C
      XMIN=X1(1)
      DO2210I=1,N1
        Y2TEMP(I)=Y1(I)
        IF(X1(I).LT.XMIN)XMIN=X1(I)
        D2TEMP(I)=X1(I)
 2210 CONTINUE
C
      IF(XMIN.GT.0.0)GOTO2249
      DO2240I=1,N1
        D2TEMP(I)=D2TEMP(I)-XMIN+1.0
 2240 CONTINUE
 2249 CONTINUE
C
      DO2300IDIS=1,NUMDIS
C
        ALAMBA=DISPAR(IDIS)
        IF(-0.001.LE.ALAMBA.AND.ALAMBA.LE.0.001)THEN
          DO2315I=1,N1
            X2TEMP(I)=LOG(D2TEMP(I))
 2315     CONTINUE
        ELSE
          DO2325I=1,N1
            X2TEMP(I)=((D2TEMP(I)**ALAMBA)-1.0)/ALAMBA
 2325     CONTINUE
        ENDIF
C
        AN1=N1
        SUMX=0.0
        SUMY=0.0
        DO2410I=1,N1
          SUMX=SUMX+X2TEMP(I)
          SUMY=SUMY+Y2TEMP(I)
 2410   CONTINUE
        XBAR=SUMX/AN1
        YBAR=SUMY/AN1
C
        SUMX=0.0
        SUMY=0.0
        SUMXY=0.0
        DO2420I=1,N1
          SUMX=SUMX+(X2TEMP(I)-XBAR)*(X2TEMP(I)-XBAR)
          SUMY=SUMY+(Y2TEMP(I)-YBAR)*(Y2TEMP(I)-YBAR)
          SUMXY=SUMXY+(X2TEMP(I)-XBAR)*(Y2TEMP(I)-YBAR)
 2420   CONTINUE
        ARG=SUMX*SUMY
        CC=0.0
        IF(ARG.GT.0.0)CC=SUMXY/SQRT(ARG)
        CORR(IDIS)=CC
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BCC2')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          DO2431I=1,N1
            WRITE(ICOUT,2433)I,Y1(I),X1(I),Y2TEMP(I),X2TEMP(I),
     1                       D2TEMP(I),CORR(I)
 2433       FORMAT('I,Y1(I),X1(I),Y2TEMP(I),X2TEMP(I),',
     1             'D2TEMP(I),CORR(I) = ',I8,6E12.5)
            CALL DPWRST('XXX','BUG ')
 2431     CONTINUE
          WRITE(ICOUT,2434)ICASPL,XBAR,YBAR,SUMX,SUMY,SUMXY
 2434     FORMAT('ICASPL,XBAR,YBAR,SUMX,SUMY,SUMXY = ',
     1           A4,2X,5G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
 2300 CONTINUE
      DO2510IDIS=1,NUMDIS
        N2=N2+1
        Y2(N2)=CORR(IDIS)
        X2(N2)=DISPAR(IDIS)
        D2(N2)=REAL(NCURVE)
 2510 CONTINUE
      NPLOTV=2
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BCC2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBCC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,MAXN,N2,IERROR
 9012   FORMAT('ICASPL,MAXN,N2,IERROR = ',A4,I8,I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,Y2(I),X2(I),D2(I)
 9016     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2E15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBCH2(Y1,X1,N1,ICASPL,MAXN,NCURVE,
     1                  ALAMB1,ALAMB2,
     1                  Y2TEMP,X2TEMP,D2TEMP,DISPAR,RATIO,
     1                  Y3,DISTX,DISTX3,SDY3,
     1                  Y2,X2,D2,N2,NPLOTV,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS THAT WILL DEFINE
C              THE BOX-COX HOMOSCEDASTICITY PLOT TRACE WHICH IS A PLOT
C              OF THE RATIO  MIN(SD(T(Y)) / MAX(SD(T(Y)) VERSUS THE
C              BOX-COX PARAMATER LAMBDA.
C     NOTE--THE RATIO MUST BE BETWEEN 0 AND 1.  THE CLOSER TO 1, THE
C            MORE CONSTANT THE VARIANCE.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--87/6
C     ORIGINAL VERSION--MAY       1987.
C     UPDATED         --DECEMBER  1993. CHARACTER*4 ICASPL
C     UPDATED         --FEBRUARY  1994. CHANGE STAT TO RATIO
C     UPDATED         --MAY       2010. SUPPORT FOR "REPLICATION" CASE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
CCCCC THE FOLLOWING LINE WAS ADDED     DECEMBER 1993
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION X1(*)
C
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
      DIMENSION Y2TEMP(*)
      DIMENSION X2TEMP(*)
      DIMENSION D2TEMP(*)
C
      DIMENSION DISPAR(*)
      DIMENSION RATIO(*)
C
CCCCC THE FOLLOWING DIMENSIONS ARE TEMPORARY
      DIMENSION Y3(*)
      DIMENSION DISTX(*)
      DIMENSION DISTX3(*)
      DIMENSION SDY3(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBC'
      ISUBN2='H2  '
      IERROR='NO'
      AN1=0.0
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BCH2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBCH2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG3,ISUBRO,ICASPL,MAXN,N1,NPLOTV
   53   FORMAT('IBUGG3,ISUBRO,ICASPL,MAXN,N1,NPLOTV = ',A4,2X,3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)ALAMB1,ALAMB2
   54   FORMAT('ALAMB1,ALAMB2 = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        IF(N1.GT.0)THEN
          DO60I=1,N1
            WRITE(ICOUT,61)I,Y1(I),X1(I)
   61       FORMAT('I,Y1(I),X1(I) = ',I8,2E12.5)
            CALL DPWRST('XXX','BUG ')
   60     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N1.LT.3)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1121)
 1121   FORMAT('***** ERROR IN BOX-COX HOMOGENEITY PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1122)
 1122   FORMAT('      THE NUMBER OF OBSERVATIONS WAS LESS THAN THREE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=X1(1)
      DO1130I=1,N1
      IF(X1(I).NE.HOLD)GOTO1139
 1130 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1121)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1132)
 1132 FORMAT('      ALL INPUT RESPONSE VARIABLE ELEMENTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1133)HOLD
 1133 FORMAT('      ARE IDENTICALLY EQUAL TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 1139 CONTINUE
C
C               *******************************************************
C               **  STEP 21--                                        **
C               **  DETERMINE THE SET OF PARAMETER VALUES            **
C               **  TO BE USED FOR THE TRANSFORMATIONS               **
C               *******************************************************
C
      NUMDIS=41
      ANUMDI=NUMDIS
      DO2100IDIS=1,NUMDIS
        AIDIS=IDIS
        DISPAR(IDIS)=ALAMB1+((AIDIS-1.0)/(ANUMDI-1.0))*(ALAMB2-ALAMB1)
 2100 CONTINUE
C
C               ********************************************************
C               **  STEP 22--                                         **
C               **  DETERMINE THE NUMBER OF DISTINCT SUBSETS          **
C               **  FOR VARIABLE 1;                                   **
C               **  IF ALL VALUES ARE DISTINCT, THEN THIS             **
C               **  IMPLIES WE HAVE THE NO REPLICATION CASE           **
C               **  WHICH IS AN ERROR CONDITION FOR THIS COMMAND **
C               ********************************************************
C
      ISTEPN='22'
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BCH2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWRITE='OFF'
C
      NUMSET=0
      DO2200I=1,N1
         IF(NUMSET.GE.1)THEN
            DO2300J=1,NUMSET
               IF(X1(I).EQ.DISTX(J))GOTO2200
 2300       CONTINUE
         ENDIF
         NUMSET=NUMSET+1
         DISTX(NUMSET)=X1(I)
 2200 CONTINUE
C
      IF(NUMSET.EQ.0.OR.NUMSET.EQ.N1)THEN
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1121)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,2206)
 2206    FORMAT('     FOR A BOX-COX HOMOSCEDASTICITY PLOT,')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,2207)
 2207    FORMAT('     THERE MUST BE REPLICATION--BUT NO REPLICATION')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,2208)
 2208    FORMAT('     WAS FOUND--ALL VALUES OF X WERE DISTINCT.')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,2209)NUMSET
 2209    FORMAT('     NUMSET = ',I8)
         CALL DPWRST('XXX','BUG ')
         IERROR='YES'
         GOTO9000
      ENDIF
C
C               ****************************************
C               **  STEP 32--                         **
C               **  DETERMINE PLOT COORDINATES        **
C               ****************************************
C
      DO3210I=1,N1
         X2TEMP(I)=X1(I)
 3210 CONTINUE
C
      YMIN=Y1(1)
      DO3220I=1,N1
         IF(Y1(I).LT.YMIN)YMIN=Y1(I)
         D2TEMP(I)=Y1(I)
 3220 CONTINUE
C
      IF(YMIN.LE.0.0)THEN
         DO3240I=1,N1
            D2TEMP(I)=D2TEMP(I)-YMIN+1.0
 3240    CONTINUE
      ENDIF
C
      DO3300IDIS=1,NUMDIS
C
         ALAMBA=DISPAR(IDIS)
         IF(-0.001.LE.ALAMBA.AND.ALAMBA.LE.0.001)THEN
            DO3315I=1,N1
               Y2TEMP(I)=LOG(D2TEMP(I))
 3315       CONTINUE
         ELSE
            DO3325I=1,N1
               Y2TEMP(I)=((D2TEMP(I)**ALAMBA)-1.0)/ALAMBA
 3325       CONTINUE
         ENDIF
C
         ISET3=0
         DO3410ISET=1,NUMSET
            I3=0
            DO3420I=1,N1
               IF(X2TEMP(I).EQ.DISTX(ISET))THEN
                  I3=I3+1
                  Y3(I3)=Y2TEMP(I)
               ENDIF
 3420       CONTINUE
            IF(I3.GE.2)THEN
               ISET3=ISET3+1
               DISTX3(ISET3)=DISTX(ISET)
               CALL SD(Y3,I3,IWRITE,SDY3(ISET3),IBUGG3,IERROR)
            ENDIF
 3410    CONTINUE
C
         CALL MINIM(SDY3,ISET3,IWRITE,AMINSD,IBUGG3,IERROR)
         CALL MAXIM(SDY3,ISET3,IWRITE,AMAXSD,IBUGG3,IERROR)
         RATIO(IDIS)=0.0
         IF(AMAXSD.GT.0.0)RATIO(IDIS)=AMINSD/AMAXSD
C
         IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BCH2')THEN
           WRITE(ICOUT,999)
           CALL DPWRST('XXX','BUG ')
           WRITE(ICOUT,3434)AMINSD,AMAXSD,RATIO(IDIS)
 3434      FORMAT('AMINSD,AMAXSD,RATIO(IDIS) = ',3G15.7)
           CALL DPWRST('XXX','BUG ')
         ENDIF
C
 3300 CONTINUE
C
      DO3510IDIS=1,NUMDIS
         N2=N2+1
         Y2(N2)=RATIO(IDIS)
         X2(N2)=DISPAR(IDIS)
         D2(N2)=REAL(NCURVE)
 3510 CONTINUE
      NPLOTV=2
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BCH2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBCH2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,MAXN,N2,IERROR
 9012   FORMAT('ICASPL,MAXN,N2,IERROR = ',A4,I8,I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,Y2(I),X2(I),D2(I)
 9016     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBCNP(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A BOX-COX NORMALITY PLOT
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--AUGUST    1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C     UPDATED         --MAY       2010. SUPPORT FOR "MULTIPLE" AND
C                                       "REPLICATION"
C     UPDATED         --MAY       2010. USE DPPARS AND DPPAR3 TO PERFORM
C                                       THE COMMAND PARSING
C     UPDATED         --MAY       2010. FOLD IN LINEARITY AND
C                                       HOMOGENEITY CASES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IFOUN1
      CHARACTER*4 IFOUN2
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IDATSW
      CHARACTER*4 ICASE
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 IERRO2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION X1(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XDESGN(MAXOBV,2)
      DIMENSION Y2TEMP(MAXOBV)
      DIMENSION X2TEMP(MAXOBV)
      DIMENSION D2TEMP(MAXOBV)
      DIMENSION ZY(MAXOBV)
      DIMENSION ZX(MAXOBV)
      DIMENSION CORR(100)
      DIMENSION DISPAR(100)
      DIMENSION Y3(MAXOBV)
      DIMENSION DISTX(MAXOBV)
      DIMENSION DISTX3(MAXOBV)
      DIMENSION SDY3(MAXOBV)
CCCCC FOLLOWING LINES ADDED JUNE, 1990
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),X1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y1(1))
      EQUIVALENCE (GARBAG(IGARB3),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB4),XIDTE2(1))
      EQUIVALENCE (GARBAG(IGARB5),XTEMP1(1))
      EQUIVALENCE (GARBAG(IGARB6),XTEMP2(1))
      EQUIVALENCE (GARBAG(IGARB7),ZY(1))
      EQUIVALENCE (GARBAG(IGARB8),ZX(1))
      EQUIVALENCE (GARBAG(IGAR10),X2TEMP(1))
      EQUIVALENCE (GARBAG(JGAR11),Y2TEMP(1))
      EQUIVALENCE (GARBAG(JGAR12),D2TEMP(1))
      EQUIVALENCE (GARBAG(JGAR13),CORR(1))
      EQUIVALENCE (GARBAG(JGAR13+1000),DISPAR(1))
      EQUIVALENCE (GARBAG(JGAR14),Y3(1))
      EQUIVALENCE (GARBAG(JGAR15),DISTX(1))
      EQUIVALENCE (GARBAG(JGAR16),DISTX3(1))
      EQUIVALENCE (GARBAG(JGAR17),SDY3(1))
      EQUIVALENCE (GARBAG(JGAR18),XDESGN(1,1))
CCCCC END CHANGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
C
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBC'
      ISUBN2='NP  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      MAXV2=2
      MINN2=3
C
C               *********************************************
C               **  TREAT THE BOX-COX NORMALITY PLOT CASE  **
C               *********************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BCNP')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBCNP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2
   52   FORMAT('ICASPL,IAND1,IAND2 = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ******************************************************
C               **  STEP 1--                                        **
C               **  EXTRACT THE COMMAND                             **
C               **  LOOK FOR ONE OF THE FOLLOWING COMMANDS:         **
C               **    1) BOX-COX NORMALITY PLOT Y                   **
C               **    2) MULTIPLE BOX-COX NORMALITY PLOT Y1 ... YK  **
C               **    3) REPLICATED BOX-COX NORMALITY PLOT Y X1  X2 **
C               ******************************************************
C
C     NOTE: KERNEL DENSITY, KERNEL PLOT, DENSITY TRACE ARE SYNONYMS
C           FOR KERNEL DENSITY PLOT.
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BCNP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICOM.EQ.'BOX' .AND. IHARG(1).EQ.'COX' .AND.
     1   IHARG(2).EQ.'NORM' .AND.
     1   (IHARG(3).EQ.'PPCC' .OR. IHARG(3).EQ.'LAMB') .AND.
     1   IHARG(4).EQ.'PLOT')GOTO9000
C
      IF(ICOM.EQ.'BOX')GOTO89
      IF(ICOM.EQ.'MULT')GOTO89
      IF(ICOM.EQ.'REPL')GOTO89
      GOTO9000
C
   89 CONTINUE
      ICASPL='BCNP'
      IMULT='OFF'
      IREPL='OFF'
      ILASTC=-9999
C
      IF(ICOM.EQ.'BOX' .AND. IHARG(1).EQ.'COX')THEN
        IFOUN1='YES'
      ELSEIF(ICOM.EQ.'MULT')THEN
        IMULT='ON'
      ELSEIF(ICOM.EQ.'REPL')THEN
        IREPL='ON'
      ENDIF
C
      ISTOP=NUMARG-1
      DO90I=1,NUMARG
        IF(IHARG(I).EQ.'PLOT')THEN
          ISTOP=I
          GOTO99
        ENDIF
   90 CONTINUE
   99 CONTINUE
C
      IFOUND='NO'
      DO100I=1,ISTOP
        IF(IHARG(I).EQ.'=')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(IHARG(I).EQ.'BOX' .AND. IHARG(I+1).EQ.'COX')THEN
          IF(IHARG(I+2).EQ.'TOLE' .AND. IHARG(I+3).EQ.'INTE')THEN
            IFOUND='NO'
            GOTO9000
          ELSEIF(IHARG(I+2).EQ.'TOLE' .AND. IHARG(I+3).EQ.'LIMI')THEN
            IFOUND='NO'
            GOTO9000
          ELSEIF(IHARG(I+2).EQ.'PRED' .AND. IHARG(I+3).EQ.'INTE')THEN
            IFOUND='NO'
            GOTO9000
          ELSEIF(IHARG(I+2).EQ.'PRED' .AND. IHARG(I+3).EQ.'LIMI')THEN
            IFOUND='NO'
            GOTO9000
          ENDIF
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
        ELSEIF(IHARG(I).EQ.'PLOT')THEN
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
        ELSEIF(IHARG(I).EQ.'NORM')THEN
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='BCNP'
        ELSEIF(IHARG(I).EQ.'LINE' .OR. IHARG(1).EQ.'CORR')THEN
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='BCCP'
        ELSEIF(IHARG(I).EQ.'HOMO')THEN
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='BCHP'
        ELSEIF(IHARG(I).EQ.'REPL')THEN
          IREPL='ON'
        ELSEIF(IHARG(I).EQ.'MULT')THEN
          IMULT='ON'
        ENDIF
  100 CONTINUE
C
      IF(IFOUN1.EQ.'YES' .AND. IFOUN2.EQ.'YES')IFOUND='YES'
      IF(IFOUND.EQ.'NO')GOTO9000
C
      IF(IMULT.EQ.'ON')THEN
        IF(IREPL.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(ICASPL.EQ.'BCNP')THEN
            WRITE(ICOUT,101)
  101       FORMAT('***** ERROR IN BOX COX NORMALITY PLOT--')
          ELSEIF(ICASPL.EQ.'BCCP')THEN
            WRITE(ICOUT,102)
  102       FORMAT('***** ERROR IN BOX COX NORMALITY PLOT--')
          ELSEIF(ICASPL.EQ.'BCHP')THEN
            WRITE(ICOUT,103)
  103       FORMAT('***** ERROR IN BOX COX HOMOGENEITY PLOT--')
          ENDIF
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,107)
  107     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"REPLICATION" FOR THIS PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSEIF(ICASPL.EQ.'BCCP' .OR. ICASPL.EQ.'BCHP')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(ICASPL.EQ.'BCCP')THEN
            WRITE(ICOUT,102)
          ELSEIF(ICASPL.EQ.'BCHP')THEN
            WRITE(ICOUT,103)
          ENDIF
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,109)
  109     FORMAT('      THE "MULTIPLE" OPTION IS NOT SUPPORTED FOR ',
     1           'THIS PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      IF(ILASTC.GE.1)THEN
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        ILASTC=0
      ENDIF
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BCNP')THEN
        WRITE(ICOUT,112)ICASPL,IMULT,IREPL
  112   FORMAT('ICASPL,IMULT,IREPL = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BCNP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BOX-COX NORMALITY PLOT'
      IF(ICASPL.EQ.'BCCP')INAME='BOX-COX LINEARITY PLOT'
      IF(ICASPL.EQ.'BCHP')INAME='BOX-COX HOMOGENEITY PLOT'
      MINNA=1
      MAXNA=100
      MINN2=1
      IFLAGE=1
      IF(IMULT.EQ.'ON')IFLAGE=0
      IFLAGM=1
      IF(ICASPL.EQ.'BCCP' .OR. ICASPL.EQ.'BCHP')IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      IF(ICASPL.EQ.'BCNP')THEN
        MINNVA=1
        MAXNVA=2
      ELSEIF(ICASPL.EQ.'BCCP' .OR. ICASPL.EQ.'BCHP')THEN
        MINNVA=2
        MAXNVA=2
      ENDIF
      IF(IREPL.EQ.'ON')THEN
        MINNVA=MINNVA+1
        MAXNVA=MAXNVA+3
      ELSEIF(IMULT.EQ.'ON')THEN
        MAXNVA=100
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BCNP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),IVARTY(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),IVARTY(I) = ',I8,2X,A4,A4,2X,3I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      NRESP=1
      IDATSW='RAW'
      IF(ICASPL.EQ.'BCCP' .OR. ICASPL.EQ.'BCHP')THEN
        NRESP=2
      ELSEIF(ICASPL.EQ.'BCNP')THEN
        IF(IREPL.EQ.'OFF' .AND. IMULT.EQ.'OFF' .AND.
     1     NUMVAR.EQ.2)THEN
          NRESP=2
          IDATSW='FREQ'
        ENDIF
      ENDIF
C
      NREPL=0
      IF(IREPL.EQ.'OFF' .AND. ICASPL.EQ.'BCNP' .AND.
     1   NUMVAR.GT.NRESP)IMULT='ON'
      IF(IMULT.EQ.'ON')THEN
        NRESP=NUMVAR
      ELSEIF(IREPL.EQ.'ON')THEN
        NRESP=1
        IF(ICASPL.EQ.'BCCP' .OR. ICASPL.EQ.'BCHP')NRESP=2
        NREPL=NUMVAR-NRESP
        IF(NREPL.LT.1 .OR. NREPL.GT.2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(ICASPL.EQ.'BCNP')THEN
            WRITE(ICOUT,101)
          ELSEIF(ICASPL.EQ.'BCCP')THEN
            WRITE(ICOUT,102)
          ELSEIF(ICASPL.EQ.'BCHP')THEN
            WRITE(ICOUT,103)
          ENDIF
          WRITE(ICOUT,511)
  511     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,512)
  512     FORMAT('      MUST BE BETWEEN 1 AND 2;  SUCH WAS NOT THE ',
     1           'CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,513)NREPL
  513     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ELSE
        NRESP=1
        IF(ICASPL.EQ.'BCCP' .OR. ICASPL.EQ.'BCHP')NRESP=2
      ENDIF
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BCNP')THEN
        ISTEPN='6'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,601)NRESP,NREPL
  601   FORMAT('NRESP,NREPL = ',2I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***********************************************
C               **  STEP 8--                                 **
C               **  DETERMINE IF THE ANALYST                 **
C               **  HAS SPECIFIED LIMITS                     **
C               **  FOR THE LAMBDA PARAMETER VALUES          **
C               **  (THIS WILL DICTATE WHAT WILL APPEAR      **
C               **  ON THE HORIZONTAL AXIS OF THE BOX-COX    **
C               **  NORMALITY PLOT)                          **
C               ***********************************************
C
      ISTEPN='8'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BCN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHP='LAMB'
      IHP2='DA1 '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERRO2)
      ALAMB1=-2.0
      IF(IERRO2.EQ.'NO')ALAMB1=VALUE(ILOCP)
C
      IHP='LAMB'
      IHP2='DA2 '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERRO2)
      ALAMB2=2.0
      IF(IERRO2.EQ.'NO')ALAMB2=VALUE(ILOCP)
C
C               **************************************************
C               **  STEP 7A--                                   **
C               **  CASE 1: NO REPLICATION, NO "MULTIPLE" CASE  **
C               **          (RESPONSE VARIABLE CAN BE A         **
C               **          MATRIX FOR BOX-COX NORMALITY CASE). **
C               **************************************************
C
      IF(IMULT.EQ.'OFF' .AND. NREPL.EQ.0)THEN
        ISTEPN='7A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BCNP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        IF(ICASPL.EQ.'BCNP' .AND. IDATSW.EQ.'RAW')THEN
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                X1,XTEMP1,XTEMP2,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
        ELSE
          IFLAGM=0
          IFLAGE=1
          CALL DPPAR4(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,X1,NLOCAL,NLOCA2,IFLAGM,IFLAGE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
        ENDIF
        IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************************
C               **  STEP 7B--                                      **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C               **  RESET THE VECTOR D(.) TO ALL ONES.             **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).  **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).  **
C               *****************************************************
C
        NCURVE=1
        NPLOTP=0
        IF(ICASPL.EQ.'BCNP')THEN
          CALL DPBCN2(Y1,X1,NLOCAL,ICASPL,IDATSW,NCURVE,
     1                ALAMB1,ALAMB2,
     1                Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                Y,X,D,NPLOTP,NPLOTV,
     1                IBUGG3,ISUBRO,IERROR)
        ELSEIF(ICASPL.EQ.'BCCP')THEN
          CALL DPBCC2(Y1,X1,NLOCAL,ICASPL,MAXN,NCURVE,
     1                ALAMB1,ALAMB2,
     1                Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                Y,X,D,NPLOTP,NPLOTV,
     1                IBUGG3,ISUBRO,IERROR)
        ELSEIF(ICASPL.EQ.'BCHP')THEN
          CALL DPBCH2(Y1,X1,NLOCAL,ICASPL,MAXN,NCURVE,
     1                ALAMB1,ALAMB2,
     1                Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                Y3,DISTX,DISTX3,SDY3,
     1                Y,X,D,NPLOTP,NPLOTV,
     1                IBUGG3,ISUBRO,IERROR)
        ENDIF
C
C               ***********************************************
C               **  STEP 8A--                                **
C               **  CASE 2: MULTIPLE RESPONSE VARIABLES.     **
C               **          ONLY SUPPORTED FOR ONE-VARIABLE  **
C               **          BOX-COX NORMALITY CASE.          **
C               ***********************************************
C
      ELSEIF(NRESP.GT.1 .AND. ICASPL.EQ.'BCNP')THEN
        ISTEPN='8A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BCNP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
        NPLOTP=0
        DO810IRESP=1,NRESP
          NCURVE=IRESP
C
          IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BCNP')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,811)IRESP,NCURVE
  811       FORMAT('IRESP,NCURVE = ',2I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                X1,XTEMP1,XTEMP2,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************************
C               **  STEP 8B--                                      **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C               *****************************************************
C
          CALL DPBCN2(Y1,X1,NLOCAL,ICASPL,IDATSW,NCURVE,
     1                ALAMB1,ALAMB2,
     1                Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                Y,X,D,NPLOTP,NPLOTV,
     1                IBUGG3,ISUBRO,IERROR)
C
  810   CONTINUE
C
C               *****************************************************
C               **  STEP 9A--                                      **
C               **  CASE 3: ONE OR TWO  REPLICATION VARIABLES.     **
C               **          CURRENTLY, GROUPED DATA NOT SUPPORTED  **
C               **          WITH REPLICATION.                      **
C               *****************************************************
C
      ELSEIF(NREPL.GE.1)THEN
        ISTEPN='9A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BCNP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        J=0
        IMAX=NRIGHT(1)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO910I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO910
          J=J+1
C
C         RESPONSE VARIABLE IN Y1
C
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
C
          IF(NRESP.EQ.2)THEN
            IJ=MAXN*(ICOLR(2)-1)+I
            IF(ICOLR(2).LE.MAXCOL)X1(J)=V(IJ)
            IF(ICOLR(2).EQ.MAXCP1)X1(J)=PRED(I)
            IF(ICOLR(2).EQ.MAXCP2)X1(J)=RES(I)
            IF(ICOLR(2).EQ.MAXCP3)X1(J)=YPLOT(I)
            IF(ICOLR(2).EQ.MAXCP4)X1(J)=XPLOT(I)
            IF(ICOLR(2).EQ.MAXCP5)X1(J)=X2PLOT(I)
            IF(ICOLR(2).EQ.MAXCP6)X1(J)=TAGPLO(I)
          ENDIF
C
          ICOLC=NRESP
          DO920IR=1,MIN(NREPL,2)
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XDESGN(J,IR)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XDESGN(J,IR)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XDESGN(J,IR)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XDESGN(J,IR)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XDESGN(J,IR)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XDESGN(J,IR)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XDESGN(J,IR)=TAGPLO(I)
  920     CONTINUE
C
  910   CONTINUE
        NLOCAL=J
C
C       *****************************************************
C       **  STEP 9B--                                      **
C       **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C       **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C       **                                                 **
C       **  FOR THIS CASE, WE NEED TO LOOP THROUGH THE     **
C       **  VARIOUS REPLICATIONS.                          **
C       *****************************************************
C
        ISTEPN='9B'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BCNP')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,931)
  931     FORMAT('***** FROM THE MIDDLE  OF FREQ--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,932)ICASPL,NUMVAR,NLOCAL
  932     FORMAT('ICASPL,NUMVAR,NQ = ',A4,2I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO935I=1,NLOCAL
              WRITE(ICOUT,936)I,Y1(I),X1(I),XDESGN(I,1),XDESGN(I,2)
  936         FORMAT('I,Y1(I),X1(I),XDESGN(I,1),XDESGN(I,2) = ',
     1               I8,4F12.5)
              CALL DPWRST('XXX','BUG ')
  935       CONTINUE
          ENDIF
        ENDIF
C
C       *****************************************************
C       **  STEP 9C--                                      **
C       **  FIND THE DISTINCT VALUES IN EACH OF THE        **
C       **  REPLICATION VARIABLES.                         **
C       *****************************************************
C
        CALL DPFRE5(XDESGN(1,1),XDESGN(1,2),
     1             NREPL,NLOCAL,MAXOBV,
     1             XIDTEM,XIDTE2,
     1             XTEMP1,XTEMP2,
     1             NUMSE1,NUMSE2,
     1             IBUGG3,ISUBRO,IERROR)
C
C       *****************************************************
C       **  STEP 9D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        NPLOTP=0
        NCURVE=0
        IF(NREPL.EQ.1)THEN
          J=0
          DO1110ISET1=1,NUMSE1
            K=0
            DO1130I=1,NLOCAL
              IF(XIDTEM(ISET1).EQ.XDESGN(I,1))THEN
                K=K+1
                ZY(K)=Y1(I)
                ZX(K)=X1(I)
              ENDIF
 1130       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              IF(ICASPL.EQ.'BCNP')THEN
                CALL DPBCN2(ZX,ZY,NTEMP,ICASPL,IDATSW,NCURVE,
     1                      ALAMB1,ALAMB2,
     1                      Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                      Y,X,D,NPLOTP,NPLOTV,
     1                      IBUGG3,ISUBRO,IERROR)
              ELSEIF(ICASPL.EQ.'BCCP')THEN
                CALL DPBCC2(ZY,ZX,NTEMP,ICASPL,MAXN,NCURVE,
     1                      ALAMB1,ALAMB2,
     1                      Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                      Y,X,D,NPLOTP,NPLOTV,
     1                      IBUGG3,ISUBRO,IERROR)
              ELSEIF(ICASPL.EQ.'BCHP')THEN
                CALL DPBCH2(ZY,ZX,NTEMP,ICASPL,MAXN,NCURVE,
     1                      ALAMB1,ALAMB2,
     1                      Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                      Y3,DISTX,DISTX3,SDY3,
     1                      Y,X,D,NPLOTP,NPLOTV,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
 1110     CONTINUE
        ELSEIF(NREPL.EQ.2)THEN
          J=0
          NTOT=NUMSE1*NUMSE2
          DO1210ISET1=1,NUMSE1
          DO1220ISET2=1,NUMSE2
            K=0
            DO1290I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZX(K)=X1(I)
              ENDIF
 1290       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              IF(ICASPL.EQ.'BCNP')THEN
                CALL DPBCN2(ZX,ZY,NTEMP,ICASPL,IDATSW,NCURVE,
     1                      ALAMB1,ALAMB2,
     1                      Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                      Y,X,D,NPLOTP,NPLOTV,
     1                      IBUGG3,ISUBRO,IERROR)
              ELSEIF(ICASPL.EQ.'BCCP')THEN
                CALL DPBCC2(ZY,ZX,NTEMP,ICASPL,MAXN,NCURVE,
     1                      ALAMB1,ALAMB2,
     1                      Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                      Y,X,D,NPLOTP,NPLOTV,
     1                      IBUGG3,ISUBRO,IERROR)
              ELSEIF(ICASPL.EQ.'BCHP')THEN
                CALL DPBCH2(ZY,ZX,NTEMP,ICASPL,MAXN,NCURVE,
     1                      ALAMB1,ALAMB2,
     1                      Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                      Y3,DISTX,DISTX3,SDY3,
     1                      Y,X,D,NPLOTP,NPLOTV,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
 1220     CONTINUE
 1210     CONTINUE
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BCNP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBCNP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)ALAMB1,ALAMB2,NLOCAL,NPLOTP
 9014   FORMAT('ALAMB1,ALAMB2,NLOCAL,NPLOTP = ',2G15.7,2X,2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NLOCAL.GE.1)THEN
          DO9022I=1,MIN(100,NLOCAL)
            WRITE(ICOUT,9023)I,Y1(I),X1(I)
 9023       FORMAT('I,Y1(I),X1(I) = ',I8,2F12.5)
            CALL DPWRST('XXX','BUG ')
 9022     CONTINUE
        ENDIF
        IF(NPLOTP.GE.1)THEN
          DO9032I=1,MIN(1000,NPLOTP)
            WRITE(ICOUT,9033)I,Y(I),X(I),D(I)
 9033       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9032     CONTINUE
        ENDIF
      ENDIF
 
C
      RETURN
      END
      SUBROUTINE DPBCN2(Y1,X1,N1,ICASPL,IDATSW,NCURVE,
     1                  ALAMB1,ALAMB2,
     1                  Y2TEMP,X2TEMP,D2TEMP,DISPAR,CORR,
     1                  Y2,X2,D2,N2,NPLOTV,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS THAT WILL DEFINE
C              THE BOX-COX NORMALITY PLOT TRACE WHICH IS A PLOT OF THE
C              OF THE NORMAL PROBABILITY PLOT CORRELATION COEFFICIENT
C              VERSUS THE BOX-COX PARAMATER LAMBDA.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--AUGUST    1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --APRIL     1992. AN=N1  TO AN1=N1
C     UPDATED         --MAY       2010. SUPPORT FOR "REPLICATION" AND
C                                       "MULTIPLE" CASES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IDATSW
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION X1(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
      DIMENSION Y2TEMP(*)
      DIMENSION X2TEMP(*)
      DIMENSION D2TEMP(*)
C
      DIMENSION DISPAR(*)
      DIMENSION CORR(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBC'
      ISUBN2='N2  '
      IERROR='NO'
      AN1=0.0
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BCN2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPBCN2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,IDATSW,N1,NPLOTV
   72   FORMAT('ICASPL,IDATSW,N1,NPLOTV = ',A4,2X,A4,2X,2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,73)ALAMB1,ALAMB2
   73   FORMAT('ALAMB1,ALAMB2 = ',2E15.7)
        CALL DPWRST('XXX','BUG ')
        IF(N1.GE.1)THEN
          DO85I=1,N1
            WRITE(ICOUT,86)I,Y1(I),X1(I)
   86       FORMAT('I,Y1(I),X1(I) = ',I8,2E12.5)
            CALL DPWRST('XXX','BUG ')
   85     CONTINUE
        ENDIF
      ENDIF
C
        ISTEPN='0'
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BCN2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N1.LT.3)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,46)
   46   FORMAT('***** ERROR IN BOX-COX NORMALITY PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,47)
   47   FORMAT('      THE NUMBER OF OBSERVATIONS IS LESS THAN THREE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=X1(1)
      DO60I=1,N1
        IF(X1(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,46)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)
   62 FORMAT('      ALL INPUT RESPONSE VARIABLE ELEMENTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,63)HOLD
   63 FORMAT('      ARE IDENTICALLY EQUAL TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   69 CONTINUE
C
        ISTEPN='1'
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BCN2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *******************************************************
C               **  STEP 2--                                         **
C               **  DETERMINE THE SET OF PARAMETER VALUES            **
C               **  TO BE USED FOR THE TRANSFORMATIONS               **
C               *******************************************************
C
      NUMDIS=41
      ANUMDI=NUMDIS
      DO511IDIS=1,NUMDIS
        AIDIS=IDIS
        DISPAR(IDIS)=ALAMB1+((AIDIS-1.0)/(ANUMDI-1.0))*(ALAMB2-ALAMB1)
  511 CONTINUE
C
C               **************************************
C               **  STEP 4--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **  AND DETERMINE PLOT COORDINATES  **
C               **************************************
C
      IF(IDATSW.EQ.'FREQ')THEN
C
C               ********************************************
C               **  STEP 4.2--                            **
C               **  DETERMINE PLOT COORDINATES            **
C               **  FOR THE 2-VARIABLE CASE               **
C               **  (THAT IS, FOR THE GROUPED DATA CASE)  **
C               ********************************************
C
        CALL SORTC(X1,Y1,N1,D2TEMP,Y2TEMP)
        XMIN=D2TEMP(1)
        IF(XMIN.GT.0.0)GOTO2109
        DO2105I=1,N1
          D2TEMP(I)=D2TEMP(I)-XMIN+1.0
 2105   CONTINUE
 2109   CONTINUE
C
        I2=0
        DO2111I=1,N1
          NI=INT(Y2TEMP(I)+0.1)
          ANI=REAL(NI)
          I1=I2+1
          I2=I1+NI-1
          SUM=0.0
          DO2112K=I1,I2
            CALL UNIME2(NTOT,K,UNIOSM)
            CALL NORPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 2112     CONTINUE
          X2TEMP(I)=SUM/ANI
 2111   CONTINUE
C
        SUM=0.0
        DO2115I=1,N1
          SUM=SUM+Y1(I)
 2115   CONTINUE
        NTOT=INT(SUM+0.5)
C
        DO2120IDIS=1,NUMDIS
          ALAMBA=DISPAR(IDIS)
          IF(-0.001.LE.ALAMBA.AND.ALAMBA.LE.0.001)THEN
            DO2135I=1,N1
              Y2TEMP(I)=LOG(D2TEMP(I))
 2135       CONTINUE
          ELSE
            DO2145I=1,N1
              Y2TEMP(I)=((D2TEMP(I)**ALAMBA)-1.0)/ALAMBA
 2145       CONTINUE
          ENDIF
C
CCCCC     THE FOLLOWING LINE WAS FIXED    APRIL 1992 (ALAN)
CCCCC     AN=N1
          AN1=N1
          SUMY=0.0
          DO2810I=1,N1
            SUMY=SUMY+Y2TEMP(I)
 2810     CONTINUE
          XBAR=0.0
          YBAR=SUMY/AN1
C
          SUMX=0.0
          SUMY=0.0
          SUMXY=0.0
          DO2820I=1,N1
            SUMX=SUMX+(X2TEMP(I)-XBAR)*(X2TEMP(I)-XBAR)
            SUMY=SUMY+(Y2TEMP(I)-YBAR)*(Y2TEMP(I)-YBAR)
            SUMXY=SUMXY+(X2TEMP(I)-XBAR)*(Y2TEMP(I)-YBAR)
 2820     CONTINUE
          ARG=SUMX*SUMY
          CC=0.0
          IF(ARG.GT.0.0)CC=SUMXY/SQRT(ARG)
          CORR(IDIS)=CC
C
 2120   CONTINUE
C
        DO2910IDIS=1,NUMDIS
          N2=N2+1
          Y2(N2)=CORR(IDIS)
          X2(N2)=DISPAR(IDIS)
          D2(N2)=REAL(NCURVE)
 2910   CONTINUE
        NPLOTV=2
C
      ELSE
C
C               ****************************************
C               **  STEP 4.1--                        **
C               **  DETERMINE PLOT COORDINATES        **
C               **  FOR THE 1-VARIABLE CASE           **
C               **  (THAT IS, FOR THE RAW DATA CASE)  **
C               ****************************************
C
        ISTEPN='41A'
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BCN2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL UNIMED(N1,X2TEMP)
        DO1110I=1,N1
          CALL NORPPF(X2TEMP(I),X2OUT)
          X2TEMP(I)=X2OUT
 1110   CONTINUE
C
        ISTEPN='41B'
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BCN2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL SORT(X1,N1,D2TEMP)
        XMIN=D2TEMP(1)
        IF(XMIN.GT.0.0)GOTO1119
        DO1115I=1,N1
          D2TEMP(I)=D2TEMP(I)-XMIN+1.0
 1115   CONTINUE
 1119   CONTINUE
C
        ISTEPN='41C'
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BCN2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        DO1120IDIS=1,NUMDIS
C
          ISTEPN='41D'
          IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BCN2')THEN
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,1122)I,ALAMBA
 1122       FORMAT('I,ALAMBA=',I5,G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ALAMBA=DISPAR(IDIS)
          IF(-0.001.LE.ALAMBA.AND.ALAMBA.LE.0.001)THEN
            DO1135I=1,N1
              Y2TEMP(I)=LOG(D2TEMP(I))
 1135       CONTINUE
          ELSE
            DO1145I=1,N1
              Y2TEMP(I)=((D2TEMP(I)**ALAMBA)-1.0)/ALAMBA
 1145       CONTINUE
          ENDIF
C
          AN1=N1
          SUMY=0.0
          DO1810I=1,N1
            SUMY=SUMY+Y2TEMP(I)
 1810     CONTINUE
          XBAR=0.0
          YBAR=SUMY/AN1
C
          SUMX=0.0
          SUMY=0.0
          SUMXY=0.0
          DO1820I=1,N1
            SUMX=SUMX+(X2TEMP(I)-XBAR)*(X2TEMP(I)-XBAR)
            SUMY=SUMY+(Y2TEMP(I)-YBAR)*(Y2TEMP(I)-YBAR)
            SUMXY=SUMXY+(X2TEMP(I)-XBAR)*(Y2TEMP(I)-YBAR)
 1820     CONTINUE
          ARG=SUMX*SUMY
          CC=0.0
          IF(ARG.GT.0.0)CC=SUMXY/SQRT(ARG)
          CORR(IDIS)=CC
C
          IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BCN2')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            DO1831I=1,N1
              WRITE(ICOUT,1833)I,Y1(I),X1(I),Y2TEMP(I),X2TEMP(I),
     1                         D2TEMP(I),CORR(I)
 1833         FORMAT('I,Y1(I),X1(I),Y2TEMP(I),X2TEMP(I),D2TEMP(I),',
     1               'CORR(I) = ',I8,6E12.5)
              CALL DPWRST('XXX','BUG ')
 1831       CONTINUE
            WRITE(ICOUT,1834)ICASPL,IDATSW,XBAR,YBAR,SUMX,SUMY,SUMXY
 1834       FORMAT('ICASPL,IDATSW,XBAR,YBAR,SUMX,SUMY,SUMXY = ',
     1             A4,2X,A4,2X,5E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 1120   CONTINUE
C
        DO1910IDIS=1,NUMDIS
          N2=N2+1
          Y2(N2)=CORR(IDIS)
          X2(N2)=DISPAR(IDIS)
          D2(N2)=REAL(NCURVE)
 1910   CONTINUE
        NPLOTV=2
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BCN2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBCN2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,IDATSW,N2,NTOT,IERROR
 9012   FORMAT('ICASPL,IDATSW,N2,IERROR = ',A4,2X,A4,2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,Y2(I),X2(I),D2(I)
 9016     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2E15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBCP(NPTS,NLAB,
     1AMEAN,ASD,N,AMNX,AMXX,
     1XBCP,XBCPSE,XBCPK1,XBCPK2,
     1DLOWBC,DHIGBC,
     1IWRITE,
     1ICAPSW,ICAPTY,NUMDIG,
     1ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT BAYESIAN CONSENSUS PROCEDURE (A
C              MODIFICATION OF THE BOUNDS ON BIAS (BOB) PROCEDURE).
C              PROCEDURE DESCRIBED IN THE GUTHRIE/HAGWOOD PAPER.
C     REFERENCE--CHARLES HAGWOOD AND WILLIAM GUTHRIE (2006),
C                "COMBINING DATA IN SMALL MULTIPLE-METHODS
C                STUDIES", TECHNOMETRICS, VOL. 48, NO. 2.
C     PRINTING--YES
C     SUBROUTINES NEEDED--NONE
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/6
C     ORIGINAL VERSION--JUNE      2006.
C     UPDATED         --FEBRUARY  2010.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      REAL APPF
      REAL XBCP
      REAL XBCPSE
      REAL XBCPK1
      REAL XBCPK2
      REAL AMNX
      REAL AMXX
      REAL AMEAN(*)
      REAL ASD(*)
      REAL CV
      REAL DELTA
C
      INTEGER N(*)
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPBC'
      ISUBN2='P   '
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PBCP')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBCP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NLAB,SW,STXMU,ST2SB
   52   FORMAT('NPTS,NLAB,SW,STXMU,ST2SB = ',2I8,3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NLAB
          WRITE(ICOUT,56)I,AMEAN(I)
   56     FORMAT('I,AMEAN(I) = ',2I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
      CALL MEAN(AMEAN,NLAB,IWRITE,XBCP,IBUGA3,IERROR)
      DSB=DBLE(AMXX - AMNX)**2/12.0D0
C
      DSUM=0.0D0
      DO100I=1,NLAB
        NITEMP=ABS(N(I))
        DSUM=DSUM + DBLE(ASD(I)/REAL(NITEMP))**2
  100 CONTINUE
C
      DKU=DSUM/(DBLE(NLAB)**2) + DSB
      XBCPSE=REAL(DSQRT(DKU))
      XBCPK1=XBCPSE
      XBCPK2=2.0*XBCPSE
      DFNUM=DKU**2
      DSUM=0.0D0
      DO200I=1,NLAB
        NITEMP=ABS(N(I))
        DSUM=DSUM + DBLE(ASD(I)/REAL(NITEMP))**4/DBLE(NITEMP-1)
  200 CONTINUE
      W=DBLE(AMXX - AMNX)
      IF(NLAB.EQ.2)THEN
        DNU=1.0D0
      ELSEIF(NLAB.EQ.3)THEN
        DNU=1.9846D0
      ELSEIF(NLAB.EQ.4)THEN
        DNU=2.9291D0
      ELSEIF(NLAB.EQ.5)THEN
        DNU=3.8267D0
      ELSEIF(NLAB.EQ.6)THEN
        DNU=4.6772D0
      ELSE
        DNU=4.6772D0
      ENDIF
      DFDEN=(DSUM/DBLE(NLAB)**4) + W**4/(144.0D0*DNU)
      DF=DFNUM/DFDEN
      IDF=INT(DF+0.5D0)
      IF(IDF.LT.1)IDF=1
      DELTA=0.0
      CV=0.975
      CALL NCTPPF(CV,REAL(DF),DELTA,APPF)
      DLOWBC=DBLE(XBCP - APPF*XBCPSE)
      DHIGBC=DBLE(XBCP + APPF*XBCPSE)
C
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)='13. Method: BCP (Bayesian Consensus Procedure)'
      NCTEXT(ICNT)=46
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='    Estimate of Consensus Mean:'
      NCTEXT(ICNT)=31
      AVALUE(ICNT)=XBCP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Deviation of Consensus Mean:'
      NCTEXT(ICNT)=41
      AVALUE(ICNT)=XBCPSE
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Uncertainty (k = 1):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=XBCPK1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k = 2):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=XBCPK2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Degrees of Freedom:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=DF
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    t Percent Point Value:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=APPF
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Lower 95% (t) Confidence Limit:'
      NCTEXT(ICNT)=35
      AVALUE(ICNT)=DLOWBC
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Upper 95% (t) Confidence Limit:'
      NCTEXT(ICNT)=35
      AVALUE(ICNT)=DHIGBC
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Note: BCP Best Usage:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='          6 or Fewer Labs:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO310I=1,NUMROW
        NTOT(I)=15
  310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
      ITITL9=' '
      NCTIT9=0
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PBCP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBCP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPTS,NLAB
 9013   FORMAT('NPTS,NLAB = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)DLOWBC,DHIGBC
 9015   FORMAT('DLOWBC,DHIGBC = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBECP(ICAPSW,IFORSW,
     1                  IBUGA2,IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,
     1                  IFOUND,IERROR)
C
C     PURPOSE--FIND THE (10) BEST CANDIDATE MODELS FOR A LINEAR FIT
C              BASED ON MALLOW'S CP CRITERION.  CODE EXTRACTED
C              FROM OMNITAB, WHICH USES THE FURNIVAL AND WILSON
C              LEAP AND BOUND ALGORITHM.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2002/6
C     ORIGINAL VERSION--JULY     2002.
C     UPDATED         --AUGUST   2011. USE DPPARS
C     UPDATED         --OCTOBER  2013. SUPPORT FOR HTML, LATEX,
C                                      RTF OUTPUT
C     UPDATED         --OCTOBER  2013. ADD "CONSTANT" MODEL
C     UPDATED         --OCTOBER  2013. ADD BIC/AIC TERMS
C     UPDATED         --JULY     2019. TWEAK SCRATCH SPACE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
CCCCC SUPPORT MAXIMUM OF 38 INDPENDENT VARIABLES, CORRELATION
CCCCC MATRIX ALSO NEEDS TO INCLUDE CONSTANT TERM AND DEPENDENT
CCCCC VARIABLE.
C
C     2019/07: INCREASE MAXIMUM NUMBER OF COLUMNS, BUT BASE LIMITS
C              ON ROWS*COLUMNS RATHER THAN MAXROW*COLUMNS.  RESTRICT
C              TOTAL NUMBER OF POINTS TO 34*MAXROW.
C
      PARAMETER (MAXV=98)
      PARAMETER (MAXC=MAXV+2)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
      CHARACTER*4 ICASFI
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=MAXV)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZD.INC'
      INCLUDE 'DPCOHO.INC'
C
      DOUBLE PRECISION SQRTCT(MAXOBV)
      REAL RXY(MAXC,MAXC)
      REAL XYMAT(34*MAXOBV)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
C
      CHARACTER*8 IVLIST
      COMMON/BESTC1/IOUNI1,IOUNI2
      COMMON/BESTC2/IVLIST(MAXV)
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      EQUIVALENCE (GARBAG(IGARB1),RXY(1,1))
      EQUIVALENCE (GARBAG(IGARB2),XYMAT(1))
      EQUIVALENCE (DGARBG(IDGAR1),SQRTCT(1))
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBE'
      ISUBN2='CP  '
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ******************************
C               **  TREAT THE BEST CP CASE  **
C               ******************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BECP')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBECP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGA2,IBUGA3,IBUGCO,IBUGEV,ISUBRO,NUMNAM
   53   FORMAT('IBUGA2,IBUGA3,IBUGCO,IBUGEV,ISUBRO,NUMNAM = ',
     1         5(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO57I=1,NUMNAM
          WRITE(ICOUT,58)I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),IVALUE(I),
     1                   VALUE(I)
   58     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),IVALUE(I)',
     1           'VALUE(I) = ',I8,2X,2A4,2X,A4,2I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   57   CONTINUE
      ENDIF
C
C     ***************************
C     **  STEP 1--             **
C     **  EXTRACT THE COMMAND  **
C     ***************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BECP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICOM.EQ.'BEST'.AND.IHARG(1).EQ.'CP  ')THEN
        ILASTC=1
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      ELSEIF(ICOM.EQ.'BEST'.AND.ICOM2.EQ.'CP  ')THEN
         CONTINUE
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      IFOUND='YES'
      ICASFI='BECP'
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BECP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BEST CP'
      MINNA=1
      MAXNA=100
      MINN2=4
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=4
      MAXNVA=MAXSPN
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BOFI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      ICNT=0
      DO310I=2,NUMVAR
        ICNT=ICNT+1
        IVLIST(ICNT)(1:4)=IVARN1(I)(1:4)
        IVLIST(ICNT)(5:8)=IVARN2(I)(1:4)
  310 CONTINUE
      ICNT=ICNT+1
      IVLIST(ICNT)(1:4)=IVARN1(1)(1:4)
      IVLIST(ICNT)(5:8)=IVARN2(1)(1:4)
C
      IFACT=1
      IF(IFITAC.EQ.'OFF')IFACT=0
C
      NUMFAC=NUMVAR-1
      J=0
      IMAX=NRIGHT(1)
      IF(NQ.LT.NRIGHT(1))IMAX=NQ
      DO2560I=1,IMAX
        IF(ISUB(I).EQ.0)GOTO2560
        J=J+1
 2560 CONTINUE
      NS=J
      ISTRT=NS*NUMFAC
C
      DO2570I=1,IMAX
C
        IJ=MAXN*(ICOLR(1)-1)+I
        IF(ICOLR(1).LE.MAXCOL)XYMAT(ISTRT+I)=V(IJ)
        IF(ICOLR(1).EQ.MAXCP1)XYMAT(ISTRT+I)=PRED(I)
        IF(ICOLR(1).EQ.MAXCP2)XYMAT(ISTRT+I)=RES(I)
        IF(ICOLR(1).EQ.MAXCP3)XYMAT(ISTRT+I)=YPLOT(I)
        IF(ICOLR(1).EQ.MAXCP4)XYMAT(ISTRT+I)=XPLOT(I)
        IF(ICOLR(1).EQ.MAXCP5)XYMAT(ISTRT+I)=X2PLOT(I)
        IF(ICOLR(1).EQ.MAXCP6)XYMAT(ISTRT+I)=TAGPLO(I)
C
        DO2579LL=1,NUMFAC
          K=LL+1
          ICOLT=ICOLR(K)
          IJ=MAXN*(ICOLT-1)+I
          ISTRT2=NS*(LL-1)
          IF(ICOLT.LE.MAXCOL)XYMAT(ISTRT2+I)=V(IJ)
          IF(ICOLT.EQ.MAXCP1)XYMAT(ISTRT2+I)=PRED(I)
          IF(ICOLT.EQ.MAXCP2)XYMAT(ISTRT2+I)=RES(I)
          IF(ICOLT.EQ.MAXCP3)XYMAT(ISTRT2+I)=YPLOT(I)
          IF(ICOLT.EQ.MAXCP4)XYMAT(ISTRT2+I)=XPLOT(I)
          IF(ICOLT.EQ.MAXCP5)XYMAT(ISTRT2+I)=X2PLOT(I)
          IF(ICOLT.EQ.MAXCP6)XYMAT(ISTRT2+I)=TAGPLO(I)
 2579   CONTINUE
 2570 CONTINUE
C
C               ******************************************************
C               **  STEP 14--                                       **
C               **  CARRY OUT THE ACTUAL FIT                        **
C               **  VIA CALLING                                     **
C               **  DPBECP2 (FOR GENERAL MODELS), OR                **
C               ******************************************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BECP')THEN
        ISTEPN='14'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6081)
 6081   FORMAT('***** FROM DPBECP, AS ABOUT TO CALL DPBEC2--')
        CALL DPWRST('XXX','BUG ')
        DO6083I=1,NS*NUMVAR
          WRITE(ICOUT,6084)I,XYMAT(I)
 6084     FORMAT('I,(XYMAT(I) = ',I6,2X,G15.7)
          CALL DPWRST('XXX','BUG ')
 6083   CONTINUE
        WRITE(ICOUT,6082)MAXN,NS,NUMVAR
 6082   FORMAT('MAXN,NS,NUMVAR = ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      INTCPT=IFACT
      MBEST=INUMCP
      IF(NUMVAR-1.LE.3 .AND. MBEST.GT.7)MBEST=7
      CALL DPBEC2(XYMAT,NS,NUMVAR,SQRTCT,RXY,
     1            MAXC,MAXV,MAXOBV,
     1            MBEST,INTCPT,
     1            ICAPSW,ICAPTY,IFORSW,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BECP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBECP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR,NS,NUMNAM
 9016   FORMAT('IFOUND,IERROR,NS,NUMNAM, = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        DO9017I=1,NUMNAM
          WRITE(ICOUT,9018)I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),
     1                     IVALUE(I),VALUE(I)
 9018     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),IVALUE(I)',
     1           'VALUE(I) = ',I8,2X,2A4,2X,A4,2I8,G15.7)
          CALL DPWRST('XXX','BUG ')
 9017   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBEC2(XYMAT,N,NVARS,SQRTCT,RXY,
     1                  MAXC,MAXV,MAXOBV,
     1                  MBEST,INTCPT,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     BEST CP: COMPUTE MBEST (DEFAULT=10) BEST CANDIDATE MODELS BASED
C     ON MALLOW'S CP CRITIERION.  CODE EXTRACTED FROM OMNITAB, WHICH
C     IMPLEMENTS THE FURNIVAL AND WILSON LEAP AND BOUND ALGORITHM.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2002/6
C     ORIGINAL VERSION--JUNE      2002.
C     UPDATED         --AUGUST   2012. ADD "CONSTANT" MODEL
C     UPDATED         --DECEMBER 2013. ADD BIC TERMS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IOP
C
C---------------------------------------------------------------------
C
      INTEGER N, NVARS
C
      DOUBLE PRECISION SQRTCT(*)
      REAL RXY(MAXC,MAXC)
      REAL XYMAT(*)
C
      PARAMETER (MAXV2=98)
      CHARACTER*8 IVLIST
      COMMON/BESTC1/IOUNI1,IOUNI2
      COMMON/BESTC2/IVLIST(MAXV2)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBE'
      ISUBN2='C2  '
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BEC2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBEC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)N,NVARS,MBEST,INTCPT,MAXV
   52   FORMAT('N,NVARS,MBEST,INTCPT,MAXV = ',5I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICAPSW,ICAPTY,IFORSW
   53   FORMAT('ICAPSW,ICAPTY,IFORSW = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        DO61I=1,N
          IINDX=(NVARS-1)*N + I
          WRITE(ICOUT,63)I,XYMAT(I),XYMAT(N+I),XYMAT(IINDX)
   63     FORMAT('I,X1(I),X2(I),Y(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   61   CONTINUE
      ENDIF
C
C               **************************************************
C               **  STEP 0.5--                                  **
C               **   OPEN THE STORAGE FILES                     **
C               **************************************************
C
      ISTEPN='0.5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'FIT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOP='OPEN'
      IFLG1=1
      IFLG2=1
      IFLG3=0
      IFLG4=0
      IFLG5=0
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
C               *****************************************************
C               **  STEP 2--                                       **
C               **  CALL OMNITAB ROUTINES CRSPRD AND SCREEN.       **
C               *****************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BEC2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL CRSPRD(XYMAT,N,NVARS,INTCPT,SQRTCT,RXY,MAXC)
C
      NDF=N-1
      NPARAM=NVARS-1
      ITYPE=3
CCCCC NSPAC=MAXC*20000
CCCCC NSPAC=MAXC*MAXOBV
      NSPAC=34*MAXOBV
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BEC2')THEN
         WRITE(ICOUT,7112)N,NVARS
 7112    FORMAT(6X,'AFTER CALL TO CRSPRD, N, NVARS = ',2I8)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,7113)NDF,NPARAM
 7113    FORMAT(6X,'NDF,NPARAM = ',2I8)
         CALL DPWRST('XXX','BUG ')
         DO7115I=1,NVARS
         WRITE(ICOUT,7117)I,(RXY(I,J),J=1,MIN(NVARS,7))
 7117    FORMAT('ROW ',I5,' = ',7(G15.7))
         CALL DPWRST('XXX','BUG ')
 7115    CONTINUE
      ENDIF
C
      CALL SCREEN(RXY,NPARAM,MAXC,NDF,ITYPE,MBEST,INTCPT,XYMAT,NSPAC,
     1            ICAPSW,ICAPTY,IFORSW,
     1            IBUGA3,ISUBRO,IERROR)
C
C               ****************************************************
C               **  STEP 3--                                      **
C               **  WRITE INFO OUT TO FILES--                     **
C               **     1) DPST1F.DAT--XXXXX                       **
C               ****************************************************
C
      ISTEPN='81'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BEC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8112)
 8112   FORMAT(6X,'NUMBER OF VARIABLES, CP VALUE, VARIABLE LIST ',
     1         'WRITTEN TO FILE DPST1F.DAT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8114)
 8114   FORMAT(6X,'CODED VARIABLE LIST WRITTEN TO TO FILE DPST2F.DAT')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **************************************
C               **  STEP 82--                       **
C               **  CLOSE       THE STORAGE FILES.  **
C               **************************************
C
      ISTEPN='82'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'FIT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BEC2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBEC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBEFI(MAXNXT,ICAPSW,IFORSW,ISEED,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--RETURN A RANKED LIST OF "BEST DISTRIBUTIONAL FIT".
C              THE USER CAN SPECIFY THE FIT METHOD USED AND THE
C              GOODNESS OF FIT CRITERION WITH THE COMMANDS
C
C                  SET BEST FIT METHOD <MAXIMUM LIKELIHOOD/PPCC/KS/
C                                       /ANDERSON DARLING>
C                  SET BEST FIT CRITERION <AIC/PPCC/AD/KS/CHI-SQUARE>
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/3
C     ORIGINAL VERSION--MARCH     2011.
C     UPDATED         --AUGUST    2014. MODIFICATIONS TO CALL LIST
C     UPDATED         --JULY      2019. TWEAK SCRATCH STORAGE,
C                                       REMOVE ZTMP15, ZTMP16, ZTMP17
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISUBN3
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICENSO
      CHARACTER*4 IMETHD
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
      CHARACTER*4 ILEVEL
      CHARACTER*4 IRELAT
      CHARACTER*4 ICTMP1
      CHARACTER*4 ICTMP2
      CHARACTER*4 ICTMP3
C
      CHARACTER*40 INAME
C
      CHARACTER*4 ICASE
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      CHARACTER*4 IVARID(7)
      CHARACTER*4 IVARI2(7)
      REAL PVAR(MAXSPN)
      REAL PID(7)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZD.INC'
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCODA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION X1(MAXOBV)
      DIMENSION XCENS(MAXOBV)
      DIMENSION XLEVEL(MAXOBV)
C
      DIMENSION XHIGH(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XTEMP5(MAXOBV)
C
      DIMENSION XDESGN(MAXOBV,6)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XIDTE3(MAXOBV)
      DIMENSION XIDTE4(MAXOBV)
      DIMENSION XIDTE5(MAXOBV)
      DIMENSION XIDTE6(MAXOBV)
C
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DOUBLE PRECISION DTEMP(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
      DOUBLE PRECISION DTEMP3(MAXOBV)
C
      DIMENSION ZY(MAXOBV)
C
      DIMENSION ZTEMP1(MAXOBV)
      DIMENSION ZTEMP2(MAXOBV)
      DIMENSION ZTEMP3(MAXOBV)
      DIMENSION ZTEMP4(MAXOBV)
      DIMENSION ZTEMP5(MAXOBV)
      DIMENSION ZTEMP6(MAXOBV)
      DIMENSION ZTEMP7(MAXOBV)
      DIMENSION ZTEMP8(MAXOBV)
      DIMENSION ZTEMP9(MAXOBV)
      DIMENSION ZTMP10(MAXOBV)
      DIMENSION ZTMP11(MAXOBV)
      DIMENSION ZTMP12(MAXOBV)
      DIMENSION ZTMP13(MAXOBV)
      DIMENSION ZTMP14(MAXOBV)
C
      DIMENSION STATVA(100)
      CHARACTER*60 INLON2(100)
C
      DIMENSION ITEMP1(MAXOBV)
      DIMENSION ITEMP2(MAXOBV)
C
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),X1(1))
      EQUIVALENCE (GARBAG(IGARB3),XCENS(1))
      EQUIVALENCE (GARBAG(IGARB4),XHIGH(1))
      EQUIVALENCE (GARBAG(IGARB5),XTEMP1(1))
      EQUIVALENCE (GARBAG(IGARB6),XTEMP2(1))
      EQUIVALENCE (GARBAG(IGARB9),XTEMP5(1))
      EQUIVALENCE (GARBAG(IGAR10),TEMP1(1))
      EQUIVALENCE (GARBAG(JGAR11),TEMP2(1))
      EQUIVALENCE (GARBAG(JGAR12),TEMP3(1))
      EQUIVALENCE (GARBAG(JGAR13),XIDTEM(1))
      EQUIVALENCE (GARBAG(JGAR14),XIDTE2(1))
      EQUIVALENCE (GARBAG(JGAR15),XIDTE3(1))
      EQUIVALENCE (GARBAG(JGAR16),XIDTE4(1))
      EQUIVALENCE (GARBAG(JGAR17),XIDTE5(1))
      EQUIVALENCE (GARBAG(JGAR18),XIDTE6(1))
      EQUIVALENCE (GARBAG(JGAR19),ZY(1))
      EQUIVALENCE (GARBAG(JGAR20),ZTEMP1(1))
      EQUIVALENCE (GARBAG(IGAR11),ZTEMP2(1))
      EQUIVALENCE (GARBAG(IGAR12),ZTEMP3(1))
      EQUIVALENCE (GARBAG(IGAR13),ZTEMP4(1))
      EQUIVALENCE (GARBAG(IGAR14),ZTEMP5(1))
      EQUIVALENCE (GARBAG(IGAR15),ZTEMP6(1))
      EQUIVALENCE (GARBAG(IGAR16),ZTEMP7(1))
      EQUIVALENCE (GARBAG(IGAR17),ZTEMP8(1))
      EQUIVALENCE (GARBAG(IGAR18),ZTEMP9(1))
      EQUIVALENCE (GARBAG(IGAR19),ZTMP10(1))
      EQUIVALENCE (GARBAG(IGAR20),ZTMP11(1))
      EQUIVALENCE (GARBAG(IGAR21),ZTMP12(1))
      EQUIVALENCE (GARBAG(IGAR22),ZTMP13(1))
      EQUIVALENCE (GARBAG(IGAR23),ZTMP14(1))
      EQUIVALENCE (GARBAG(IGAR24),XLEVEL(1))
      EQUIVALENCE (DSYMB(1),XDESGN(1,1))
C
      EQUIVALENCE (DGARBG(IDGAR1),DTEMP(1))
      EQUIVALENCE (DGARBG(IDGAR2),DTEMP2(1))
      EQUIVALENCE (DGARBG(IDGAR3),DTEMP3(1))
      EQUIVALENCE (IGARBG(IDGAR1),ITEMP1(1))
      EQUIVALENCE (IGARBG(IDGAR2),ITEMP2(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOS2.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOST.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ICASAN='    '
      ICENSO='OFF'
      IREPL='OFF'
      IMULT='OFF'
      ILEVEL='OFF'
      IMETHD='UNIM'
      IF(IPPCCN.EQ.'KAPL')IMETHD='KAPL'
C
      ISUBN1='DPBE'
      ISUBN2='FI  '
      ISUBN3='BEFI'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ***************************************************
C               **  TREAT THE BEST DISTRIBUTIONAL FIT   CASE     **
C               ***************************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'BEFI')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBEFI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASAN,IBUGA2,IBUGA3,IBUGQ,ISUBRO,MAXNXT
   53   FORMAT('ICASAN,IBUGA2,IBUGA3,IBUGQ,ISUBRO,MAXNXT = ',
     1         5(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************************
C               **  STEP 1--                                           **
C               **  EXTRACT THE COMMAND                                **
C               **  LOOK FOR ONE OF THE FOLLOWING COMMANDS:            **
C               **    1) BEST DISTRIBUTIONAL FIT Y                     **
C               **    2) MULTIPLE BEST DISTRIBUTIONAL FIT Y1 ... YK    **
C               **    3) REPLICATED BEST DISTRIBUTIONAL FIT Y X1 ... XK**
C               *********************************************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BEFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     NOTE: ML FIT WITH PPCC RANKING CRITERION NOT SUPPORTED.
C
      IF(IBFIME.EQ.'ML' .AND. IBFICR.EQ.'PPCC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,112)
  112   FORMAT('      FITTING WITH MAXIMUM LIKELIHOOD AND RANKING ',
     1         'WITH PPCC IS NOT SUPPORTED.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,114)
  114   FORMAT('      THIS IS BECAUSE THE INVARIANCE OF LOCATION AND ',
     1         'SCALE WITH THE PPCC')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,116)
  116   FORMAT('      MEANS THE ML PARAMETERS ARE IMPLICITLY BEING ',
     1         'MODIFIED BY THE RANKING PROCEDURE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      ILASTC=9999
      ILASTZ=9999
      ICASAN='BEFI'
C
C     LOOK FOR:
C
C          BEST DISTRIBUTIONAL FIT
C          MULTIPLE
C          REPLICATED
C
      DO100I=0,NUMARG-1
C
        IF(I.EQ.0)THEN
          ICTMP1=ICOM
        ELSE
          ICTMP1=IHARG(I)
        ENDIF
        ICTMP2=IHARG(I+1)
        ICTMP3=IHARG(I+2)
C
        IF(ICTMP1.EQ.'=')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(ICTMP1.EQ.'BEST' .AND. ICTMP2.EQ.'DIST' .AND.
     1         ICTMP3.EQ.'FIT ')THEN
          IFOUND='YES'
          ICASAN='BEFI'
          ILASTC=I
          ILASTZ=I+2
        ELSEIF(ICTMP1.EQ.'REPL')THEN
          IREPL='ON'
          ILASTC=MIN(ILASTC,I)
          ILASTZ=MAX(ILASTZ,I)
        ELSEIF(ICTMP1.EQ.'MULT')THEN
          IMULT='ON'
          ILASTC=MIN(ILASTC,I)
          ILASTZ=MAX(ILASTZ,I)
        ENDIF
  100 CONTINUE
C
      IF(IFOUND.EQ.'NO')GOTO9000
C
      ISHIFT=ILASTZ
      CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGA2,IERROR)
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BEFI')THEN
        WRITE(ICOUT,91)ICASAN,IMULT,IREPL,ISHIFT
   91   FORMAT('DPCUSU: ICASAN,IMULT,IREPL,ISHIFT = ',3(A4,2X),I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFOUND.EQ.'NO')GOTO9000
      IF(IMULT.EQ.'ON')THEN
        IF(IREPL.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN BEST DISTRIBUTIONAL FIT--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,102)
  102     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,103)
  103     FORMAT('      "REPLICATION" FOR THE BEST DISTRIBUTIONAL ',
     1           'FIT COMMAND.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
C               *********************************
C               **  STEP 4--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='4'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BEFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BEST DISTRIBUTIONAL FIT'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=0
      IFLAGM=1
      MINNVA=1
      MAXNVA=MAXSPN
      IF(IREPL.EQ.'ON')THEN
        IFLAGE=1
        IFLAGM=0
        MINNVA=2
        MAXNVA=7
      ENDIF
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BEFI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ***********************************************
C               **  STEP 5--                                 **
C               **  DETERMINE:                               **
C               **  1) NUMBER OF REPLICATION VARIABLES (0-6) **
C               **  2) NUMBER OF CENSORING   VARIABLES (0-1) **
C               **  3) NUMBER OF GROUPING    VARIABLES (0-2) **
C               **  4) NUMBER OF RESPONSE    VARIABLES (>= 1)**
C               ***********************************************
C
      ISTEPN='5'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BEFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NRESP=1
      NREPL=0
      IF(IMULT.EQ.'ON')THEN
        NRESP=NUMVAR
      ELSEIF(IREPL.EQ.'ON')THEN
        NRESP=1
        NREPL=NUMVAR-NRESP
        IF(NREPL.LT.1 .OR. NREPL.GT.6)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,511)
  511     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,513)NREPL
  513     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      IFLAGL=0
      AL=CPUMIN
      IF(IWEIGL.EQ.'ON')THEN
        IHP='L   '
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1  IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1  ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'NO')AL=VALUE(ILOCP)
        IF(AL.LE.0.0)THEN
          AL=CPUMIN
        ELSE
          IFLAGL=1
        ENDIF
      ENDIF
C
C     CHECK IF LOWER LIMIT/UPPER LIMIT SPECIFIED FOR CERTAIN LIMIT
C     BASED DISTRIBUTIONS (AND WHERE NOT ESTIMATED BY THE DATA).
C
      IHP='LOWL'
      IHP2='IMIT'
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'NO')THEN
        YLOWLM=VALUE(ILOCP)
      ELSE
        YLOWLM=CPUMIN
      ENDIF
C
      IHP='UPPL'
      IHP2='IMIT'
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'NO')THEN
        YUPPLM=VALUE(ILOCP)
      ELSE
        YUPPLM=CPUMIN
      ENDIF
C
      IHP='MINS'
      IHP2='IZE '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        MINSIZ=5
      ELSE
        MINSIZ=INT(VALUE(ILOCP)+0.5)
        IF(MINSIZ.LE.0)MINSIZ=5
      ENDIF
C               ***********************************************
C               **  STEP 6--                                 **
C               **  GENERATE THE BEST DISTRIBUTIONAL FIT     **
C               **  FOR THE VARIOUS CASES.                   **
C               ***********************************************
C
      ISTEPN='6'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BEFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *****************************************
C               **  STEP 7A--                          **
C               **  CASE 1: NO REPLICATION VARIABLES   **
C               *****************************************
C
      IF(NREPL.EQ.0)THEN
        ISTEPN='7A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BEFI')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
        NCURVE=0
        DO710IRESP=1,NRESP
          NCURVE=NCURVE+1
C
          IINDX=ICOLR(IRESP)
          PID(1)=CPUMIN
          IVARID(1)=IVARN1(IRESP)
          IVARI2(1)=IVARN2(IRESP)
C
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BEFI')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,711)IRESP,NCURVE
  711       FORMAT('IRESP,NCURVE = ',2I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,XTEMP1,XTEMP1,NLOCAL,NLOCA2,NLOCA2,ICASE,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C         *****************************************************
C         **  STEP 7B--                                      **
C         *****************************************************
C
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'BEFI')THEN
            ISTEPN='7B'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,722)
  722       FORMAT('***** FROM THE MIDDLE  OF DPBEFI--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,723)ICASAN,NUMVAR,NLOCAL
  723       FORMAT('ICASAN,NUMVAR,NQ = ',A4,2I8)
            CALL DPWRST('XXX','BUG ')
            IF(NLOCAL.GE.1)THEN
              DO725I=1,NLOCAL
                WRITE(ICOUT,726)I,Y(I)
  726           FORMAT('I,Y(I) = ',I8,G15.7)
                CALL DPWRST('XXX','BUG ')
  725         CONTINUE
            ENDIF
          ENDIF
C
          CALL DPBEF2(Y1,XCENS,XLEVEL,NLOCAL,ICASAN,MAXOBV,ISEED,
     1                PID,IVARID,IVARI2,NREPL,
     1                XTEMP5,NOUT,
     1                TEMP1,TEMP2,TEMP3,DTEMP,DTEMP2,DTEMP3,
     1                ITEMP1,ITEMP2,
     1                ZTEMP1,ZTEMP2,ZTEMP3,ZTEMP4,ZTEMP5,
     1                ZTEMP6,ZTEMP7,ZTEMP8,ZTEMP9,ZTMP10,
     1                ZTMP11,ZTMP12,ZTMP13,ZTMP14,
     1                YLOWLM,YUPPLM,A,B,MINMAX,
     1                IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                IEXPBC,IWEIBC,ICENTY,
     1                CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                IFLAGL,AL,
     1                ICAPSW,ICAPTY,IFORSW,
     1                IBFIME,IBFICR,IBFIFO,PBFILL,PBFIUL,
     1                IBFITY,PBFIXV,
     1                IPPLDP,IMETHD,IPPCBW,IPPCCC,IPPCFO,IDFTTY,
     1                IPPCDP,IPPCAP,IPPCAO,PCHSLM,ILEVEL,IRTFPS,
     1                STATVA,INLON2,ISUBN3,NLIST,
     1                IBUGA3,ISUBRO,IERROR)
C
  710   CONTINUE
C
C               ***************************************************
C               **  STEP 9A--                                    **
C               **  CASE 2: ONE OR MORE REPLICATION VARIABLES.   **
C               **          FOR THIS CASE, THE NUMBER OF RESPONSE**
C               **          VARIABLES MUST BE EXACTLY 1.         **
C               **          FOR THIS CASE, ALL VARIABLES MUST    **
C               **          HAVE THE SAME LENGTH.                **
C               ***************************************************
C
      ELSEIF(NREPL.GE.1)THEN
        ISTEPN='9A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BEFI')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        PID(1)=CPUMIN
        IVARID(1)=IVARN1(1)
        IVARI2(1)=IVARN2(1)
        IADD=1
        DO903II=1,NREPL
          IVARID(II+1)=IVARN1(II+IADD)
          IVARI2(II+1)=IVARN2(II+IADD)
  903   CONTINUE
C
        J=0
        IMAX=NRIGHT(1)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO910I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO910
          J=J+1
C
C         RESPONSE VARIABLE IN Y1
C
          ICOLC=1
          IJ=MAXN*(ICOLR(ICOLC)-1)+I
          IF(ICOLR(ICOLC).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(ICOLC).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(ICOLC).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(ICOLC).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP6)Y1(J)=TAGPLO(I)
C
          DO920IR=1,MIN(NREPL,6)
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XDESGN(J,IR)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XDESGN(J,IR)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XDESGN(J,IR)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XDESGN(J,IR)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XDESGN(J,IR)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XDESGN(J,IR)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XDESGN(J,IR)=TAGPLO(I)
  920     CONTINUE
C
  910   CONTINUE
        NLOCAL=J
C
C       *****************************************************
C       **  STEP 9B--                                      **
C       **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C       **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C       **                                                 **
C       **  FOR THIS CASE, WE NEED TO LOOP THROUGH THE     **
C       **  VARIOUS REPLICATIONS.                          **
C       *****************************************************
C
        ISTEPN='9B'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BEFI')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'BEFI')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,931)
  931     FORMAT('***** FROM THE MIDDLE  OF DPBEFI--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,932)ICASAN,NUMVAR,IDATSW,NLOCAL
  932     FORMAT('ICASAN,NUMVAR,IDATSW,NQ = ',
     1           A4,I8,2X,A4,I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO935I=1,NLOCAL
              WRITE(ICOUT,936)I,Y1(I),XDESGN(I,1),XDESGN(I,2)
  936         FORMAT('I,Y1(I),XDESGN(I,1),XDESGN(I,2) = ',I8,3F12.5)
              CALL DPWRST('XXX','BUG ')
  935       CONTINUE
          ENDIF
        ENDIF
C
C       *****************************************************
C       **  STEP 9C--                                      **
C       **  FIND THE DISTINCT VALUES IN EACH OF THE        **
C       **  REPLICATION VARIABLES.                         **
C       *****************************************************
C
        CALL DPPP5(XDESGN(1,1),XDESGN(1,2),XDESGN(1,3),
     1             XDESGN(1,4),XDESGN(1,5),XDESGN(1,6),
     1             NREPL,NLOCAL,MAXOBV,
     1             XIDTEM,XIDTE2,XIDTE3,XIDTE4,XIDTE5,XIDTE6,
     1             XTEMP1,XTEMP2,
     1             NUMSE1,NUMSE2,NUMSE3,NUMSE4,NUMSE5,NUMSE6,
     1             IBUGA3,ISUBRO,IERROR)
C
C       *****************************************************
C       **  STEP 9D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        NCURVE=0
        IF(NREPL.EQ.1)THEN
          J=0
          DO1110ISET1=1,NUMSE1
            K=0
            PID(2)=XIDTEM(ISET1)
            DO1130I=1,NLOCAL
              IF(XIDTEM(ISET1).EQ.XDESGN(I,1))THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1130       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBEF2(ZY,XCENS,XLEVEL,NTEMP,ICASAN,MAXOBV,ISEED,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    XTEMP5,NOUT,
     1                    TEMP1,TEMP2,TEMP3,DTEMP,DTEMP2,DTEMP3,
     1                    ITEMP1,ITEMP2,
     1                    ZTEMP1,ZTEMP2,ZTEMP3,ZTEMP4,ZTEMP5,
     1                    ZTEMP6,ZTEMP7,ZTEMP8,ZTEMP9,ZTMP10,
     1                    ZTMP11,ZTMP12,ZTMP13,ZTMP14,
     1                    YLOWLM,YUPPLM,A,B,MINMAX,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    IFLAGL,AL,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    IBFIME,IBFICR,IBFIFO,PBFILL,PBFIUL,
     1                    IBFITY,PBFIXV,
     1                    IPPLDP,IMETHD,IPPCBW,IPPCCC,IPPCFO,IDFTTY,
     1                    IPPCDP,IPPCAP,IPPCAO,PCHSLM,ILEVEL,IRTFPS,
     1                    STATVA,INLON2,ISUBN3,NLIST,
     1                    IBUGA3,ISUBRO,IERROR)
            ENDIF
 1110     CONTINUE
        ELSEIF(NREPL.EQ.2)THEN
          J=0
          NTOT=NUMSE1*NUMSE2
          DO1210ISET1=1,NUMSE1
          DO1220ISET2=1,NUMSE2
            K=0
            PID(2)=XIDTEM(ISET1)
            PID(3)=XIDTE2(ISET2)
            DO1290I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1290       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBEF2(ZY,XCENS,XLEVEL,NTEMP,ICASAN,MAXOBV,ISEED,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    XTEMP5,NOUT,
     1                    TEMP1,TEMP2,TEMP3,DTEMP,DTEMP2,DTEMP3,
     1                    ITEMP1,ITEMP2,
     1                    ZTEMP1,ZTEMP2,ZTEMP3,ZTEMP4,ZTEMP5,
     1                    ZTEMP6,ZTEMP7,ZTEMP8,ZTEMP9,ZTMP10,
     1                    ZTMP11,ZTMP12,ZTMP13,ZTMP14,
     1                    YLOWLM,YUPPLM,A,B,MINMAX,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    IFLAGL,AL,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    IBFIME,IBFICR,IBFIFO,PBFILL,PBFIUL,
     1                    IBFITY,PBFIXV,
     1                    IPPLDP,IMETHD,IPPCBW,IPPCCC,IPPCFO,IDFTTY,
     1                    IPPCDP,IPPCAP,IPPCAO,PCHSLM,ILEVEL,IRTFPS,
     1                    STATVA,INLON2,ISUBN3,NLIST,
     1                    IBUGA3,ISUBRO,IERROR)
              ENDIF
 1220     CONTINUE
 1210     CONTINUE
        ELSEIF(NREPL.EQ.3)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3
          DO1310ISET1=1,NUMSE1
          DO1320ISET2=1,NUMSE2
          DO1330ISET3=1,NUMSE3
            K=0
            PID(2)=XIDTEM(ISET1)
            PID(3)=XIDTE2(ISET2)
            PID(4)=XIDTE3(ISET3)
            DO1390I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1390       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBEF2(ZY,XCENS,XLEVEL,NTEMP,ICASAN,MAXOBV,ISEED,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    XTEMP5,NOUT,
     1                    TEMP1,TEMP2,TEMP3,DTEMP,DTEMP2,DTEMP3,
     1                    ITEMP1,ITEMP2,
     1                    ZTEMP1,ZTEMP2,ZTEMP3,ZTEMP4,ZTEMP5,
     1                    ZTEMP6,ZTEMP7,ZTEMP8,ZTEMP9,ZTMP10,
     1                    ZTMP11,ZTMP12,ZTMP13,ZTMP14,
     1                    YLOWLM,YUPPLM,A,B,MINMAX,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    IFLAGL,AL,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    IBFIME,IBFICR,IBFIFO,PBFILL,PBFIUL,
     1                    IBFITY,PBFIXV,
     1                    IPPLDP,IMETHD,IPPCBW,IPPCCC,IPPCFO,IDFTTY,
     1                    IPPCDP,IPPCAP,IPPCAO,PCHSLM,ILEVEL,IRTFPS,
     1                    STATVA,INLON2,ISUBN3,NLIST,
     1                    IBUGA3,ISUBRO,IERROR)
              ENDIF
 1330     CONTINUE
 1320     CONTINUE
 1310     CONTINUE
        ELSEIF(NREPL.EQ.4)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4
          DO1410ISET1=1,NUMSE1
          DO1420ISET2=1,NUMSE2
          DO1430ISET3=1,NUMSE3
          DO1440ISET4=1,NUMSE4
            K=0
            PID(2)=XIDTEM(ISET1)
            PID(3)=XIDTE2(ISET2)
            PID(4)=XIDTE3(ISET3)
            PID(5)=XIDTE4(ISET4)
            DO1490I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1490       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBEF2(ZY,XCENS,XLEVEL,NTEMP,ICASAN,MAXOBV,ISEED,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    XTEMP5,NOUT,
     1                    TEMP1,TEMP2,TEMP3,DTEMP,DTEMP2,DTEMP3,
     1                    ITEMP1,ITEMP2,
     1                    ZTEMP1,ZTEMP2,ZTEMP3,ZTEMP4,ZTEMP5,
     1                    ZTEMP6,ZTEMP7,ZTEMP8,ZTEMP9,ZTMP10,
     1                    ZTMP11,ZTMP12,ZTMP13,ZTMP14,
     1                    YLOWLM,YUPPLM,A,B,MINMAX,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    IFLAGL,AL,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    IBFIME,IBFICR,IBFIFO,PBFILL,PBFIUL,
     1                    IBFITY,PBFIXV,
     1                    IPPLDP,IMETHD,IPPCBW,IPPCCC,IPPCFO,IDFTTY,
     1                    IPPCDP,IPPCAP,IPPCAO,PCHSLM,ILEVEL,IRTFPS,
     1                    STATVA,INLON2,ISUBN3,NLIST,
     1                    IBUGA3,ISUBRO,IERROR)
              ENDIF
 1440     CONTINUE
 1430     CONTINUE
 1420     CONTINUE
 1410     CONTINUE
        ELSEIF(NREPL.EQ.5)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5
          DO1510ISET1=1,NUMSE1
          DO1520ISET2=1,NUMSE2
          DO1530ISET3=1,NUMSE3
          DO1540ISET4=1,NUMSE4
          DO1550ISET5=1,NUMSE5
            K=0
            PID(2)=XIDTEM(ISET1)
            PID(3)=XIDTE2(ISET2)
            PID(4)=XIDTE3(ISET3)
            PID(5)=XIDTE4(ISET4)
            PID(6)=XIDTE5(ISET5)
            DO1590I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1590       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBEF2(ZY,XCENS,XLEVEL,NTEMP,ICASAN,MAXOBV,ISEED,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    XTEMP5,NOUT,
     1                    TEMP1,TEMP2,TEMP3,DTEMP,DTEMP2,DTEMP3,
     1                    ITEMP1,ITEMP2,
     1                    ZTEMP1,ZTEMP2,ZTEMP3,ZTEMP4,ZTEMP5,
     1                    ZTEMP6,ZTEMP7,ZTEMP8,ZTEMP9,ZTMP10,
     1                    ZTMP11,ZTMP12,ZTMP13,ZTMP14,
     1                    YLOWLM,YUPPLM,A,B,MINMAX,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    IFLAGL,AL,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    IBFIME,IBFICR,IBFIFO,PBFILL,PBFUL,
     1                    IBFITY,PBFIXV,
     1                    IPPLDP,IMETHD,IPPCBW,IPPCCC,IPPCFO,IDFTTY,
     1                    IPPCDP,IPPCAP,IPPCAO,PCHSLM,ILEVEL,IRTFPS,
     1                    STATVA,INLON2,ISUBN3,NLIST,
     1                    IBUGA3,ISUBRO,IERROR)
              ENDIF
 1550     CONTINUE
 1540     CONTINUE
 1530     CONTINUE
 1520     CONTINUE
 1510     CONTINUE
        ELSEIF(NREPL.EQ.6)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5*NUMSE6
          DO1610ISET1=1,NUMSE1
          DO1620ISET2=1,NUMSE2
          DO1630ISET3=1,NUMSE3
          DO1640ISET4=1,NUMSE4
          DO1650ISET5=1,NUMSE5
          DO1660ISET6=1,NUMSE6
            K=0
            PID(2)=XIDTEM(ISET1)
            PID(3)=XIDTE2(ISET2)
            PID(4)=XIDTE3(ISET3)
            PID(5)=XIDTE4(ISET4)
            PID(6)=XIDTE5(ISET5)
            PID(7)=XIDTE6(ISET6)
            DO1690I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5) .AND.
     1           XIDTE6(ISET6).EQ.XDESGN(I,6)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1690       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBEF2(ZY,XCENS,XLEVEL,NTEMP,ICASAN,MAXOBV,ISEED,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    XTEMP5,NOUT,
     1                    TEMP1,TEMP2,TEMP3,DTEMP,DTEMP2,DTEMP3,
     1                    ITEMP1,ITEMP2,
     1                    ZTEMP1,ZTEMP2,ZTEMP3,ZTEMP4,ZTEMP5,
     1                    ZTEMP6,ZTEMP7,ZTEMP8,ZTEMP9,ZTMP10,
     1                    ZTMP11,ZTMP12,ZTMP13,ZTMP14,
     1                    YLOWLM,YUPPLM,A,B,MINMAX,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    IFLAGL,AL,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    IBFIME,IBFICR,IBFIFO,PBFILL,PBFIUL,
     1                    IBFITY,PBFIXV,
     1                    IPPLDP,IMETHD,IPPCBW,IPPCCC,IPPCFO,IDFTTY,
     1                    IPPCDP,IPPCAP,IPPCAO,PCHSLM,ILEVEL,IRTFPS,
     1                    STATVA,INLON2,ISUBN3,NLIST,
     1                    IBUGA3,ISUBRO,IERROR)
              ENDIF
 1660     CONTINUE
 1650     CONTINUE
 1640     CONTINUE
 1630     CONTINUE
 1620     CONTINUE
 1610     CONTINUE
        ENDIF
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IERROR.EQ.'YES')THEN
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,9001)(IANS(I),I=1,MIN(100,IWIDTH))
 9001     FORMAT(100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'BEFI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBEFI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBEF2(Y,CENSOR,XLEVEL,N,ICASPL,MAXOBV,ISEED,
     1                  PID,IVARID,IVARI2,NREPL,
     1                  YSTAT,N2,
     1                  TEMP1,TEMP2,TEMP3,DTEMP,DTEMP2,DTEMP3,
     1                  ITEMP1,ITEMP2,
     1                  ZTEMP1,ZTEMP2,ZTEMP3,ZTEMP4,ZTEMP5,
     1                  ZTEMP6,ZTEMP7,ZTEMP8,ZTEMP9,ZTMP10,
     1                  ZTMP11,ZTMP12,XLOW,XHIGH,
     1                  YLOWLM,YUPPLM,A,B,MINMAX,
     1                  IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                  ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                  IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                  IEXPBC,IWEIBC,ICENTY,
     1                  CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                  IFLAGL,AL,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  IBFIME,IBFICR,IBFIFO,PBFILL,PBFIUL,
     1                  IBFITY,PBFIXV,
     1                  IPPLDP,IMETHD,IPPCBW,IPPCCC,IPPCFO,IDFTTY,
     1                  IPPCDP,IPPCAP,IPPCAO,PCHSLM,ILEVEL,IRTFPS,
     1                  STATVA,INLON2,ISUBN3,NLIST,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--PERFORM A "BEST FIT" ANALYSIS.  THAT IS, LOOP THROUGH
C              VARIOUS DISTRIBUTIONS AND RETURN A RANKED LIST OF
C              BEST FIT DISTRIBUTIONS.
C
C              NOTE THAT THIS IS CURRENTLY LIMITED TO UNGROUPED,
C              UNCENSORED, CONTINUOUS DISTRIBUTIONS
C
C              THERE ARE 2 USER-SPECIFIED OPTIONS:
C
C                  1) FIT METHOD:
C
C                     MAXIMUM LIKELIHOOD
C                     PPCC/ANDERSON DARLING/KOLM-SMIR/CHI-SQUARE
C
C                  2) RANKING CRITERION
C
C                     AIC/AICC/BIC
C                     PPCC
C                     ANDERSON DARLING
C                     KS
C                     CHI-SQUARE
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/3
C     ORIGINAL VERSION--MARCH     2011.
C     UPDATED         --APRIL     2012. WRITE RESULTS TO DPST1F.DAT
C     UPDATED         --JANUARY   2013. OPTIONAL ADD 2 COLUMNS AT
C                                       REQUEST OF JEFF FONG
C     UPDATED         --MARCH     2013. FOR WEIBULL, ADJUST SCALE
C                                       PARAMETER IF GAUGE LENGTH
C                                       OPTION SPECIFIED
C     UPDATED         --JUNE      2013. IDENTIFY DISTRIBUTIONS THAT
C                                       REPORT LOWER/UPPER LIMIT RATHER
C                                       THAN LOCATION/SCALE
C     UPDATED         --JULY      2013. SOME TWEAKS TO "FONG" OPTION
C     UPDATED         --SEPTEMBER 2013. RESTORE TRIANGULAR FOR PPCC
C     UPDATED         --JANUARY   2014. BUG IN BOUNDED DISTRIBUTIONS
C                                       WHEN FIT BY PPCC BUT GOODNESS
C                                       OF FIT NOT PPCC
C     UPDATED         --JANUARY   2014. CHECK FOR "NAN" FOR GOODNESS
C                                       OF FIT STATISTIC
C     UPDATED         --APRIL     2014. SUPPORT 3-PARAMETER LOGNORMAL
C                                       FOR MAXIMUM LIKELIHOOD FIT
C     UPDATED         --MAY       2014. SUPPORT 2-PARAMETER AND 3-PARAMETER
C                                       INVERSE GAUSSIAN FOR MAXIMUM
C                                       LIKELIHOOD FIT
C     UPDATED         --JULY      2014. SUPPORT G DISTRIBUTION
C     UPDATED         --AUGUST    2014. NOW CALLED FROM DPDFP2 AS WELL,
C                                       FOR THIS CASE DO NOT SORT AND
C                                       DO NOT PRINT TABLE
C     UPDATED         --JULY      2019. CALL LIST TO DPPP2
C     UPDATED         --JULY      2019. TWEAK SCRATCH SPACE USE,
C                                       REMOVE ZTMP13, ZTMP14, ZTMP15
C     UPDATED         --APRIL     2020. ALLOW USER TO CONTROL LIST OF
C                                       DISTRIBUTIONS
C     UPDATED         --APRIL     2020. ADD HALF-NORMAL MAXIMUM
C                                       LIKELIHOOD
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 ICASP3
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IWRITE
      CHARACTER*4 ICENSO
      CHARACTER*4 IADEDF
      CHARACTER*4 IGEPDF
      CHARACTER*4 IMAKDF
      CHARACTER*4 IBEIDF
      CHARACTER*4 ILGADF
      CHARACTER*4 ISKNDF
      CHARACTER*4 IGLDDF
      CHARACTER*4 IBGEDF
      CHARACTER*4 IGETDF
      CHARACTER*4 ICONDF
      CHARACTER*4 IGOMDF
      CHARACTER*4 IKATDF
      CHARACTER*4 IGIGDF
      CHARACTER*4 IGEODF
      CHARACTER*4 IGAUDF
      CHARACTER*4 IEXPBC
      CHARACTER*4 IWEIBC
      CHARACTER*4 ICENTY
      CHARACTER*4 IDFTTY
      CHARACTER*4 IDFTT2
      CHARACTER*4 IPPCCC
      CHARACTER*4 IPPCFO
      CHARACTER*4 IPPCAO
      CHARACTER*4 IPPCBW
      CHARACTER*4 IMETHD
      CHARACTER*4 ILEVEL
      CHARACTER*4 IBFIME
      CHARACTER*4 IBFICR
      CHARACTER*4 IBFIFO
      CHARACTER*4 IBFITY
      CHARACTER*4 IHSTCW
      CHARACTER*4 IHSTOU
      CHARACTER*4 IRELAT
      CHARACTER*4 IRHSTG
      CHARACTER*4 IERROR
C
      CHARACTER*4 IFLAGF
      CHARACTER*4 IADESV
      CHARACTER*4 IOP
      CHARACTER*4 IDATSW
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISUBN3
      CHARACTER*4 ISTEPN
C
      REAL KSLOC
      REAL KSSCAL
C
      DOUBLE PRECISION DM
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION CENSOR(*)
      DIMENSION XLEVEL(*)
      DIMENSION YSTAT(*)
      DIMENSION PID(*)
C
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION ZTEMP1(*)
      DIMENSION ZTEMP2(*)
      DIMENSION ZTEMP3(*)
      DIMENSION ZTEMP4(*)
      DIMENSION ZTEMP5(*)
      DIMENSION ZTEMP6(*)
      DIMENSION ZTEMP7(*)
      DIMENSION ZTEMP8(*)
      DIMENSION ZTEMP9(*)
      DIMENSION ZTMP10(*)
      DIMENSION ZTMP11(*)
      DIMENSION ZTMP12(*)
      DIMENSION XLOW(*)
      DIMENSION XHIGH(*)
C
      DIMENSION CLLIMI(*)
      DIMENSION CLWIDT(*)
C
      DIMENSION STATVA(*)
C
      DOUBLE PRECISION DTEMP(*)
      DOUBLE PRECISION DTEMP2(*)
      DOUBLE PRECISION DTEMP3(*)
      INTEGER ITEMP1(*)
      INTEGER ITEMP2(*)
C
      INTEGER IPPCAP(2)
C
      PARAMETER (MAXDIS=64)
      DIMENSION SHAPV1(MAXDIS)
      DIMENSION SHAPV2(MAXDIS)
      DIMENSION SHAPV3(MAXDIS)
      DIMENSION SHAPV4(MAXDIS)
      DIMENSION SHAPV5(MAXDIS)
      DIMENSION ALOCV(MAXDIS)
      DIMENSION SCALEV(MAXDIS)
      DIMENSION DISTTA(MAXDIS)
      DIMENSION DISTZ(MAXDIS)
C
      DIMENSION INSHAP(MAXDIS)
      DIMENSION INTAIL(MAXDIS)
      DIMENSION IFLAG7(MAXDIS)
C
      CHARACTER*4 INCAST
      CHARACTER*4 INCASE(MAXDIS)
      CHARACTER*60 INLONG(MAXDIS)
      CHARACTER*60 INLON2(*)
      CHARACTER*60 IDIST
      CHARACTER*60 IDIST2
      CHARACTER*1  IBASLC
C
      PARAMETER(NUMCLI=8)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*25 IVALUE(MAXDIS,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXDIS,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXDIS,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL ISNANZ
C
      CHARACTER*4 IBFINO
      CHARACTER*4 IBFIUN
      CHARACTER*4 IBFI2B
      CHARACTER*4 IBFI4B
      CHARACTER*4 IBFIPW
      CHARACTER*4 IBFIRP
      CHARACTER*4 IBFIAR
      CHARACTER*4 IBFITR
      CHARACTER*4 IBFITO
      CHARACTER*4 IBFIRG
      CHARACTER*4 IBFITS
      CHARACTER*4 IBFINX
      CHARACTER*4 IBFGVX
      CHARACTER*4 IBFGVN
      CHARACTER*4 IBFGPX
      CHARACTER*4 IBFGPN
      CHARACTER*4 IBFIPA
      CHARACTER*4 IBFFRX
      CHARACTER*4 IBFFRN
      CHARACTER*4 IBFGUX
      CHARACTER*4 IBFGUN
      CHARACTER*4 IBFILO
      CHARACTER*4 IBFILL
      CHARACTER*4 IBFIHS
      CHARACTER*4 IBFIDX
      CHARACTER*4 IBFIAX
      CHARACTER*4 IBFIDW
      CHARACTER*4 IBFIDG
      CHARACTER*4 IBFITL
      CHARACTER*4 IBFIGT
      CHARACTER*4 IBFIER
      CHARACTER*4 IBFIGH
      CHARACTER*4 IBFIG 
      CHARACTER*4 IBFISL
      CHARACTER*4 IBFICA
      CHARACTER*4 IBFICO
      CHARACTER*4 IBFIFN
      CHARACTER*4 IBFIHN
      CHARACTER*4 IBFIHL
      CHARACTER*4 IBFIBR
      CHARACTER*4 IBFIAN
      CHARACTER*4 IBFI2E
      CHARACTER*4 IBFI1E
      CHARACTER*4 IBFIRA
      CHARACTER*4 IBFIMX
      CHARACTER*4 IBF2WN
      CHARACTER*4 IBF2WX
      CHARACTER*4 IBF3WX
      CHARACTER*4 IBF3WN
      CHARACTER*4 IBFIIW
      CHARACTER*4 IBFI2L
      CHARACTER*4 IBFI3L
      CHARACTER*4 IBFIGA
      CHARACTER*4 IBFILG
      CHARACTER*4 IBFIIG
      CHARACTER*4 IBFIFL
      CHARACTER*4 IBFB10
      CHARACTER*4 IBFIWA
      CHARACTER*4 IBF2IG
      CHARACTER*4 IBF3IG
      CHARACTER*4 IBFILX
      CHARACTER*4 IBFILD
      CHARACTER*4 IBFIGX
      CHARACTER*4 IBF1HN
      CHARACTER*4 IBF2HN
      CHARACTER*4 IBF1HL
      CHARACTER*4 IBF2HL
      CHARACTER*4 IX11SE
      CHARACTER*4 IREAQC
      CHARACTER*4 IERMSG
      CHARACTER*4 IGRDOR
      CHARACTER*4 ISHALB
      CHARACTER*4 IUNILI
      CHARACTER*1024 IMCRCL
      COMMON/CSETE/
     1IBFINO,IBFIUN,IBFI2B,IBFI4B,IBFIPW,IBFIRP,IBFIAR,IBFITR,IBFITO,
     1IBFIRG,IBFITS,IBFINX,IBFGVX,IBFGVN,IBFGPX,IBFGPN,IBFIPA,IBFFRX,
     1IBFFEN,IBFGUX,IBFGUN,IBFILO,IBFILL,IBFIHS,IBFIDX,IBFIAX,IBFIDW,
     1IBFIDG,IBFITL,IBFIGT,IBFIER,IBFIGH,IBFIG, IBFISL,IBFICA,IBFICO,
     1IBFIFN,IBFIHN,IBFIHL,IBFIBR,IBFIAN,IBFI2E,IBFI1E,IBFIRA,IBFIMX,
     1IBF3WX,IBF3WN,IBFIIW,IBFI2L,IBFI3L,IBFIGA,IBFILG,IBFIIG,IBFIFL,
     1IBFB10,IBFIWA,IBF2IG,IBF3IG,IBFILX,IBFILD,IBFIGX,IBFFRN,IBF2WN,
     1IBF2WX,IBF1HN,IBF2HN,IBF1HL,IBF2HL,IX11SE,IREAQC,IERMSG,IGRDOR,
     1ISHALB,IUNILI,IMCRCL
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      DATA INCASE(1)/'NORM'/
      DATA INLONG(1)/'NORMAL'/
      DATA INSHAP(1)/0/
      DATA INTAIL(1)/1/
C
      DATA INCASE(2)/'LOGI'/
      DATA INLONG(2)/'LOGISTIC'/
      DATA INSHAP(2)/0/
      DATA INTAIL(2)/1/
C
      DATA INCASE(3)/'HSEC'/
      DATA INLONG(3)/'HYPERBOLIC SECANT'/
      DATA INSHAP(3)/0/
      DATA INTAIL(3)/0/
C
      DATA INCASE(4)/'DEXP'/
      DATA INLONG(4)/'DOUBLE EXPONENTIAL'/
      DATA INSHAP(4)/0/
      DATA INTAIL(4)/1/
C
      DATA INCASE(5)/'ADEX'/
      DATA INLONG(5)/'ASYMM DOUBLE EXPO'/
      DATA INSHAP(5)/1/
      DATA INTAIL(5)/1/
C
      DATA INCASE(6)/'DWEI'/
      DATA INLONG(6)/'DOUBLE WEIBULL'/
      DATA INSHAP(6)/1/
      DATA INTAIL(6)/1/
C
      DATA INCASE(7)/'DGAM'/
      DATA INLONG(7)/'DOUBLE GAMMA'/
      DATA INSHAP(7)/1/
      DATA INTAIL(7)/1/
C
      DATA INCASE(8)/'TULA'/
      DATA INLONG(8)/'TUKEY-LAMBDA'/
      DATA INSHAP(8)/1/
      DATA INTAIL(8)/-1/
C
      DATA INCASE(9)/'GTLA'/
      DATA INLONG(9)/'GENE TUKEY LAMBDA'/
      DATA INSHAP(9)/2/
      DATA INTAIL(9)/-1/
C
      DATA INCASE(10)/'ERRO'/
      DATA INLONG(10)/'ERROR'/
      DATA INSHAP(10)/1/
      DATA INTAIL(10)/1/
C
      DATA INCASE(11)/'GPP'/
      DATA INLONG(11)/'G'/
      DATA INSHAP(11)/1/
      DATA INTAIL(11)/1/
C
      DATA INCASE(12)/'GHPP'/
      DATA INLONG(12)/'G AND H'/
      DATA INSHAP(12)/2/
      DATA INTAIL(12)/1/
C
      DATA INCASE(13)/'SLAS'/
      DATA INLONG(13)/'SLASH'/
      DATA INSHAP(13)/0/
      DATA INTAIL(13)/1/
C
      DATA INCASE(14)/'CAUC'/
      DATA INLONG(14)/'CAUCHY'/
      DATA INSHAP(14)/0/
      DATA INTAIL(14)/1/
C
      DATA INCASE(15)/'COSI'/
      DATA INLONG(15)/'COSINE'/
      DATA INSHAP(15)/0/
      DATA INTAIL(15)/0/
C
      DATA INCASE(16)/'ANGL'/
      DATA INLONG(16)/'ANGLIT'/
      DATA INSHAP(16)/0/
      DATA INTAIL(16)/0/
C
      DATA INCASE(17)/'EXPO'/
      DATA INLONG(17)/'2-PAR EXPONENTIAL'/
      DATA INSHAP(17)/0/
      DATA INTAIL(17)/0/
C
      DATA INCASE(18)/'RAYL'/
      DATA INLONG(18)/'RAYLEIGH'/
      DATA INSHAP(18)/0/
      DATA INTAIL(18)/0/
C
      DATA INCASE(19)/'MAXW'/
      DATA INLONG(19)/'MAXWELL'/
      DATA INSHAP(19)/0/
      DATA INTAIL(19)/0/
C
      DATA INCASE(20)/'WEIB'/
      DATA INLONG(20)/'2-PAR WEIBULL (MINIMUM)'/
      DATA INSHAP(20)/1/
      DATA INTAIL(20)/0/
C
      DATA INCASE(21)/'WEIB'/
      DATA INLONG(21)/'2-PAR WEIBULL (MAXIMUM)'/
      DATA INSHAP(21)/1/
      DATA INTAIL(21)/0/
C
      DATA INCASE(22)/'3WEI'/
      DATA INLONG(22)/'3-PAR WEIBULL (MINIMUM)'/
      DATA INSHAP(22)/1/
      DATA INTAIL(22)/0/
C
      DATA INCASE(23)/'3WEI'/
      DATA INLONG(23)/'3-PAR WEIBULL (MAXIMUM)'/
      DATA INSHAP(23)/1/
      DATA INTAIL(23)/0/
C
      DATA INCASE(24)/'IWEI'/
      DATA INLONG(24)/'INVERTED WEIBULL'/
      DATA INSHAP(24)/1/
      DATA INTAIL(24)/0/
C
      DATA INCASE(25)/'LOGN'/
      DATA INLONG(25)/'2-PAR LOGNORMAL'/
      DATA INSHAP(25)/1/
      DATA INTAIL(25)/0/
C
      DATA INCASE(26)/'3LGN'/
      DATA INLONG(26)/'3-PAR LOGNORMAL'/
      DATA INSHAP(26)/1/
      DATA INTAIL(26)/0/
C
      DATA INCASE(27)/'GAMM'/
      DATA INLONG(27)/'GAMMA'/
      DATA INSHAP(27)/1/
      DATA INTAIL(27)/0/
C
      DATA INCASE(28)/'LGAM'/
      DATA INLONG(28)/'LOG GAMMA'/
      DATA INSHAP(28)/1/
      DATA INTAIL(28)/0/
C
      DATA INCASE(29)/'IGAM'/
      DATA INLONG(29)/'INVERTED GAMMA'/
      DATA INSHAP(29)/1/
      DATA INTAIL(29)/0/
C
      DATA INCASE(30)/'FATL'/
      DATA INLONG(30)/'BIRNBAUM SAUNDERS'/
      DATA INSHAP(30)/1/
      DATA INTAIL(30)/0/
C
      DATA INCASE(31)/'BU10'/
      DATA INLONG(31)/'BURR TYPE 10'/
      DATA INSHAP(31)/1/
      DATA INTAIL(31)/0/
C
      DATA INCASE(32)/'WALD'/
      DATA INLONG(32)/'WALD'/
      DATA INSHAP(32)/1/
      DATA INTAIL(32)/0/
C
      DATA INCASE(33)/'INGA'/
      DATA INLONG(33)/'2-PAR INVERSE GAUSSIAN'/
      DATA INSHAP(33)/2/
      DATA INTAIL(33)/0/
C
      DATA INCASE(34)/'3IGA'/
      DATA INLONG(34)/'3-PAR INVERSE GAUSSIAN'/
      DATA INSHAP(34)/2/
      DATA INTAIL(34)/0/
C
      DATA INCASE(35)/'LEXP'/
      DATA INLONG(35)/'LOGISTIC EXPONENTIAL'/
      DATA INSHAP(35)/1/
      DATA INTAIL(35)/0/
C
      DATA INCASE(36)/'LDEX'/
      DATA INLONG(36)/'LOG DOUBLE EXPONENTIAL'/
      DATA INSHAP(36)/1/
      DATA INTAIL(36)/0/
C
      DATA INCASE(37)/'GEEX'/
      DATA INLONG(37)/'GEOM EXTREME EXPONENTIAL'/
      DATA INSHAP(37)/1/
      DATA INTAIL(37)/0/
C
      DATA INCASE(38)/'LOGL'/
      DATA INLONG(38)/'LOG LOGISTIC'/
      DATA INSHAP(38)/1/
      DATA INTAIL(38)/0/
C
      DATA INCASE(39)/'BRAD'/
      DATA INLONG(39)/'BRADFORD'/
      DATA INSHAP(39)/1/
      DATA INTAIL(39)/0/
C
      DATA INCASE(40)/'HNOR'/
      DATA INLONG(40)/'HALF-NORMAL'/
      DATA INSHAP(40)/0/
      DATA INTAIL(40)/0/
C
      DATA INCASE(41)/'1HNO'/
      DATA INLONG(41)/'1 PARAMETER HALF-NORMAL'/
      DATA INSHAP(41)/0/
      DATA INTAIL(41)/0/
C
      DATA INCASE(42)/'FNOR'/
      DATA INLONG(42)/'FOLDED NORMAL'/
      DATA INSHAP(42)/1/
      DATA INTAIL(42)/0/
C
      DATA INCASE(43)/'EV1'/
      DATA INLONG(43)/'GUMBEL (MININUM)'/
      DATA INSHAP(43)/0/
      DATA INTAIL(43)/1/
C
      DATA INCASE(44)/'EV1'/
      DATA INLONG(44)/'GUMBEL (MAXIMUM)'/
      DATA INSHAP(44)/0/
      DATA INTAIL(44)/1/
C
      DATA INCASE(45)/'EV2'/
      DATA INLONG(45)/'FRECHET (MINIMUM)'/
      DATA INSHAP(45)/1/
      DATA INTAIL(45)/0/
C
      DATA INCASE(46)/'EV2'/
      DATA INLONG(46)/'FRECHET (MAXIMUM)'/
      DATA INSHAP(46)/1/
      DATA INTAIL(46)/0/
C
      DATA INCASE(47)/'PARE'/
      DATA INLONG(47)/'PARETO'/
      DATA INSHAP(47)/2/
      DATA INTAIL(47)/0/
C
      DATA INCASE(48)/'GPAR'/
      DATA INLONG(48)/'GENE PARETO (MIN)'/
      DATA INSHAP(48)/1/
      DATA INTAIL(48)/-1/
C
      DATA INCASE(49)/'GPAR'/
      DATA INLONG(49)/'GENE PARETO (MAX)'/
      DATA INSHAP(49)/1/
      DATA INTAIL(49)/-1/
C
      DATA INCASE(50)/'GEV '/
      DATA INLONG(50)/'GENE EXT VAL (MIN)'/
      DATA INSHAP(50)/1/
      DATA INTAIL(50)/-1/
C
      DATA INCASE(51)/'GEV '/
      DATA INLONG(51)/'GENE EXT VAL (MAX)'/
      DATA INSHAP(51)/1/
      DATA INTAIL(51)/-1/
C
      DATA INCASE(52)/'UNIF'/
      DATA INLONG(52)/'UNIFORM'/
      DATA INSHAP(52)/0/
      DATA INTAIL(52)/0/
C
      DATA INCASE(53)/'BETA'/
      DATA INLONG(53)/'2-PAR BETA'/
      DATA INSHAP(53)/2/
      DATA INTAIL(53)/0/
C
      DATA INCASE(54)/'4BET'/
      DATA INLONG(54)/'4-PAR BETA (MOMENTS)'/
      DATA INSHAP(54)/4/
      DATA INTAIL(54)/0/
C
      DATA INCASE(55)/'POWF'/
      DATA INLONG(55)/'POWER'/
      DATA INSHAP(55)/1/
      DATA INTAIL(55)/0/
C
      DATA INCASE(56)/'RPOW'/
      DATA INLONG(56)/'REFLECTED POWER'/
      DATA INSHAP(56)/1/
      DATA INTAIL(56)/0/
C
      DATA INCASE(57)/'ARSI'/
      DATA INLONG(57)/'ARCSINE'/
      DATA INSHAP(57)/0/
      DATA INTAIL(57)/0/
C
      DATA INCASE(58)/'TRIA'/
      DATA INLONG(58)/'TRIANGULAR'/
      DATA INSHAP(58)/1/
      DATA INTAIL(58)/0/
C
      DATA INCASE(59)/'TOPL'/
      DATA INLONG(59)/'TOPP AND LEONE'/
      DATA INSHAP(59)/1/
      DATA INTAIL(59)/0/
C
      DATA INCASE(60)/'RGTL'/
      DATA INLONG(60)/'REFL GENE TOPP AND LEONE'/
      DATA INSHAP(60)/2/
      DATA INTAIL(60)/0/
C
      DATA INCASE(61)/'TSPO'/
      DATA INLONG(61)/'TWO-SIDED POWER'/
      DATA INSHAP(61)/2/
      DATA INTAIL(61)/0/
C
      DATA INCASE(62)/'NORX'/
      DATA INLONG(62)/'2-COMP NORMAL MIXTURE'/
      DATA INSHAP(62)/5/
      DATA INTAIL(62)/1/
C
      DATA INCASE(63)/'HALO'/
      DATA INLONG(63)/'HALF-LOGISTIC'/
      DATA INSHAP(63)/0/
      DATA INTAIL(63)/0/
C
      DATA INCASE(64)/'1HAL'/
      DATA INLONG(64)/'1 PARAMETER HALF-LOGISTIC'/
      DATA INSHAP(64)/0/
      DATA INTAIL(64)/0/
C
      ISUBN1='DPBE'
      ISUBN2='F2  '
      IERROR='NO'
      ICENSO='OFF'
      IRELAT='OFF'
      MINMX2=MINMAX
      IDFTT2=IDFTTY
      IDATSW='RAW'
      IADESV=IADEDF
C
      ALOW=0.0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPBEF2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,ICASP2,N,MAXV
   72   FORMAT('ICASPL,ICASP2,N,MAXV = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,75)IDFTTY,IBFICR,IBFIME
   75   FORMAT('IDFTTY,IBFICR,IBFIME = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        IF(N.GE.1)THEN
          DO85I=1,N
            WRITE(ICOUT,86)I,Y(I)
   86       FORMAT('I,Y(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
   85     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N.LT.5)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN BEST DISTRIBUTIONAL FIT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 5.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO60I=1,N
        IF(Y(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,31)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)HOLD
   62 FORMAT('      ALL ELEMENTS OF THE RESPONSE VARIABLE ARE ',
     1       'IDENTICALLY EQUAL TO ',G15.7)

      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   69 CONTINUE
C
C               ********************************************
C               **  STEP 2--                              **
C               **  COMPUTE SUMMARY STATISTICS            **
C               ********************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IDIST='BEST FIT DISTRIBUTION'
      IFLAG=0
      CALL SUMRAW(Y,N,IDIST,IFLAG,
     1            XMEAN,XVAR,XSD,XMIN,XMAX,
     1            ISUBRO,IBUGA3,IERROR)
      CALL STMOM3(Y,N,IWRITE,XSKEW,IBUGA3,IERROR)
      CALL MEDIAN(Y,N,IWRITE,TEMP1,MAXOBV,XMED,IBUGA3,IERROR)
C
      DO190I=1,MAXOBV
        ITEMP2(I)=I
  190 CONTINUE
C
      CALL SORT(Y,N,Y)
      DO195I=1,N
        ZTMP12(I)=Y(I)
  195 CONTINUE
C
      YLOWLS=YLOWLM
      YUPPLS=YUPPLM
C
C               *************************************************
C               **  STEP 3--                                   **
C               **  LOOP THROUGH THE DISTRIBUTIONS:            **
C               **    1) ESTIMATE DISTRIBUTION PARAMETERS      **
C               **    2) BASED ON FIT, EXTRACT GOODNESS OF FIT **
C               **       STATISTIC                             **
C               *************************************************
C
      NLIST=0
      DO200KDIST=1,MAXDIS
C
        NLIST=NLIST+1
        SHAPV1(KDIST)=CPUMIN
        SHAPV2(KDIST)=CPUMIN
        SHAPV3(KDIST)=CPUMIN
        SHAPV4(KDIST)=CPUMIN
        SHAPV5(KDIST)=CPUMIN
        ALOCV(KDIST)=CPUMIN
        SCALEV(KDIST)=CPUMIN
        STATVA(KDIST)=CPUMIN
        DISTTA(KDIST)=REAL(INTAIL(KDIST))
        DISTZ(KDIST)=CPUMIN
        ICASP2=INCASE(KDIST)
        A=CPUMIN
        B=CPUMIN
        IDFTTY='ML'
        INLON2(KDIST)=INLONG(KDIST)
C
C       2020/04: SKIP BASED ON USER-SUPPLIED SPECIFICATIONS
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,81)KDIST,INCASE(KDIST),INLONG(KDIST)
   81     FORMAT('KDIST,INCASE(KDIST),INLONG(KDIST) = ',
     1           I5,2X,A4,2X,A60)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(INCASE(KDIST).EQ.'NORM' .AND. IBFINO.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'LOGI' .AND. IBFILO.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'HSEC' .AND. IBFIHS.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'DEXP' .AND. IBFIDX.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'ADEX' .AND. IBFIAX.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'DWEI' .AND. IBFIDW.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'DGAM' .AND. IBFIDG.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'TULA' .AND. IBFITL.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'GTLA' .AND. IBFIGT.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'ERRO' .AND. IBFIER.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'GPP ' .AND. IBFIG .EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'GHPP' .AND. IBFIGH.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'SLAS' .AND. IBFISL.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'CAUC' .AND. IBFICA.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'COSI' .AND. IBFICO.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'ANGL' .AND. IBFIAN.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'EXPO' .AND. IBFI2E.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'RAYL' .AND. IBFIRA.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'MAXW' .AND. IBFIMX.EQ.'OFF')GOTO200
C
        IF(INLONG(KDIST)(1:23).EQ.'2-PAR WEIBULL (MINIMUM)' .AND.
     1     IBF2WN.EQ.'OFF')GOTO200
        IF(INLONG(KDIST)(1:23).EQ.'2-PAR WEIBULL (MAXIMUM)' .AND.
     1     IBF2WX.EQ.'OFF')GOTO200
C
        IF(INLONG(KDIST)(1:23).EQ.'3-PAR WEIBULL (MINIMUM)' .AND.
     1     IBF3WN.EQ.'OFF')GOTO200
        IF(INLONG(KDIST)(1:23).EQ.'3-PAR WEIBULL (MAXIMUM)' .AND.
     1     IBF3WX.EQ.'OFF')GOTO200
C
        IF(INLONG(KDIST)(1:16).EQ.'GUMBEL (MINIMUM)' .AND.
     1     IBFGUN.EQ.'OFF')GOTO200
        IF(INLONG(KDIST)(1:16).EQ.'GUMBEL (MAXIMUM)' .AND.
     1     IBFGUX.EQ.'OFF')GOTO200
C
        IF(INLONG(KDIST)(1:17).EQ.'FRECHET (MINIMUM)' .AND.
     1     IBFFRN.EQ.'OFF')GOTO200
        IF(INLONG(KDIST)(1:17).EQ.'FRECHET (MAXIMUM)' .AND.
     1     IBFFRX.EQ.'OFF')GOTO200
C
        IF(INLONG(KDIST)(1:17).EQ.'GENE PARETO (MIN)' .AND.
     1     IBFGPN.EQ.'OFF')GOTO200
        IF(INLONG(KDIST)(1:17).EQ.'GENE PARETO (MAX)' .AND.
     1     IBFGPX.EQ.'OFF')GOTO200
C
        IF(INLONG(KDIST)(1:18).EQ.'GENE EXT VAL (MIN)' .AND.
     1     IBFGVN.EQ.'OFF')GOTO200
        IF(INLONG(KDIST)(1:18).EQ.'GENE EXT VAL (MAX)' .AND.
     1     IBFGVX.EQ.'OFF')GOTO200
C
        IF(INCASE(KDIST).EQ.'IWEI' .AND. IBFIIW.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'LOGN' .AND. IBFI2L.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'3LGN' .AND. IBFI3L.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'GAMM' .AND. IBFIGA.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'LGAM' .AND. IBFILG.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'IGAM' .AND. IBFIIG.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'FATL' .AND. IBFIFL.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'BU10' .AND. IBFB10.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'WALD' .AND. IBFIWA.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'INGA' .AND. IBF2IG.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'3IGA' .AND. IBF3IG.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'LEXP' .AND. IBFILX.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'LDEX' .AND. IBFILD.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'GEEX' .AND. IBFIGX.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'LOGL' .AND. IBFILL.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'BRAD' .AND. IBFIBR.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'HNOR' .AND. IBF2HN.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'1HNO' .AND. IBF1HN.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'HALO' .AND. IBF2HL.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'1HAL' .AND. IBF1HL.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'FNOR' .AND. IBFIFN.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'PARE' .AND. IBFIPA.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'UNIF' .AND. IBFIUN.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'BETA' .AND. IBFI2B.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'4BET' .AND. IBFI4B.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'POWF' .AND. IBFIPW.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'RPOW' .AND. IBFIRP.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'ARSI' .AND. IBFIAR.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'TRIA' .AND. IBFITR.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'TOPL' .AND. IBFITO.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'RGTL' .AND. IBFIRG.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'TSPO' .AND. IBFITS.EQ.'OFF')GOTO200
        IF(INCASE(KDIST).EQ.'NORX' .AND. IBFINX.EQ.'OFF')GOTO200
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
          WRITE(ICOUT,83)
   83     FORMAT('PASSED INDIVIDUAL TESTS')
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C       SET FLAG FOR DISTRIBUTIONS THAT REPORT LOWER/UPPER LIMIT
C       RATHER THAN LOCATION/SCALE
C
C           1. UNIFORM                               = 52
C           2. 2-PARAMETER BETA                      = 53
C           3. 4-PARAMETER BETA (MOMENTS)            = 54
C           4. POWER                                 = 55
C           5. REFLECTED POWER                       = 56
C           6. TRIANGULAR                            = 58
C           7. TOPP AND LEONE                        = 59
C           8. REFLECTED GENERALIZED TOPP AND LEONE  = 60
C           9. TWO-SIDED POWER                       = 61
C
C       NOTE THAT FOR THESE DISTRIBUTIONS, THE BIC CAN GIVE DISTORTED
C       VALUES (ESPECIALLY FOR U-SHAPED DISTRIBUTIONS).  SO FOR SOME
C       OF THESE, SUPPRESS IF LOWER/UPPER LIMITS NOT ESTIMATED FROM
C       DATA (UNLESS USER SUPPLIES VALUES FOR THESE).  USER SUPPLIED
C       ESTIMATES ARE GIVEN IN YLOWLM AND YUPPLM.
C
        IFLAG8=0
        IFLAG6=0
        IFLAG7(KDIST)=0
        IF(KDIST.EQ.52)IFLAG7(KDIST)=1
        IF(KDIST.EQ.53)IFLAG7(KDIST)=1
        IF(KDIST.EQ.54)IFLAG7(KDIST)=1
        IF(KDIST.EQ.55)IFLAG7(KDIST)=1
        IF(KDIST.EQ.56)IFLAG7(KDIST)=1
        IF(KDIST.EQ.58)IFLAG7(KDIST)=1
        IF(KDIST.EQ.59)IFLAG7(KDIST)=1
        IF(KDIST.EQ.60)IFLAG7(KDIST)=1
        IF(KDIST.EQ.61)IFLAG7(KDIST)=1
C
        IF(KDIST.EQ.59 .OR. KDIST.EQ.55 .OR. KDIST.EQ.56 .OR.
     1     KDIST.EQ.53 .OR. KDIST.EQ.60 .OR. KDIST.EQ.61) THEN
          IF(PBFILL.NE.CPUMIN .AND. PBFIUL.NE.CPUMIN)THEN
            IF(PBFILL.LT.XMIN .AND. PBFIUL.GT.XMAX)THEN
              IFLAG6=0
            ELSE
              IFLAG6=1
            ENDIF
          ELSE
            IFLAG6=1
          ENDIF
        ENDIF
C
        IF(IFLAG6.EQ.1)THEN
          YLOWLM=YLOWLS
          YUPPLM=YUPPLS
        ELSE
          YLOWLM=CPUMIN
          YUPPLM=CPUMIN
        ENDIF
C
C       STEP 1: FIT THE DISTRIBUTION
C
        ISTEPN='3A'
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,201)KDIST
  201     FORMAT('KDIST = ',I5)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,202)INLONG(KDIST)(1:25)
  202     FORMAT('INLONG(KDIST) = ',A25)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        INCAST=INCASE(KDIST)
        NSHAPE=INSHAP(KDIST)
        MINMAX=1
        IF(KDIST.EQ.21)MINMAX=2
        IF(KDIST.EQ.23)MINMAX=2
        IF(KDIST.EQ.44)MINMAX=2
        IF(KDIST.EQ.46)MINMAX=2
        IF(KDIST.EQ.49)MINMAX=2
        IF(KDIST.EQ.51)MINMAX=2
C
        IF(KDIST.EQ.24)THEN
          IF(IBFIME.EQ.'ML')THEN
            INLON2(24)='2-PAR INVERTED WEIBULL'
          ELSEIF(IBFIME.EQ.'PPCC' .OR. IBFIME.EQ.'AD' .OR.
     1           IBFIME.EQ.'KS'   .OR. IBFIME.EQ.'CHSQ')THEN
            INLON2(24)='3-PAR INVERTED WEIBULL'
          ENDIF
C
C       IF GENERALIZED PARETO FIT BY PPCC, MAY HAVE PROBLEMS
C       WITH LOG-LIKELIHOOD FUNCTION.  SO SKIP IF FIT BY PPCC
C       AND RANK WITH AIC.
C
        ELSEIF(KDIST.EQ.48 .OR. KDIST.EQ.49)THEN
          IF(IBFICR.EQ.'AIC')THEN
            IF(IBFIME.EQ.'PPCC' .OR. IBFIME.EQ.'AD' .OR.
     1         IBFIME.EQ.'KS'   .OR. IBFIME.EQ.'CHSQ')THEN
              GOTO200
            ENDIF
          ENDIF
        ELSEIF(KDIST.EQ.45)THEN
          IF(IBFIME.EQ.'ML')THEN
            INLON2(44)='2-PAR FRECHET (MIN)'
          ELSEIF(IBFIME.EQ.'PPCC')THEN
            INLON2(44)='3-PAR FRECHET (MIN)'
          ENDIF
        ELSEIF(KDIST.EQ.46)THEN
          IF(IBFIME.EQ.'ML')THEN
            INLON2(45)='2-PAR FRECHET (MAX)'
          ELSEIF(IBFIME.EQ.'PPCC' .OR. IBFIME.EQ.'AD' .OR.
     1           IBFIME.EQ.'KS'   .OR. IBFIME.EQ.'CHSQ')THEN
            INLON2(45)='3-PAR FRECHET (MAX)'
          ENDIF
        ELSEIF(KDIST.EQ.27)THEN
          IF(IBFIME.EQ.'ML')THEN
            INLON2(27)='2-PAR GAMMA'
          ELSEIF(IBFIME.EQ.'PPCC' .OR. IBFIME.EQ.'AD' .OR.
     1           IBFIME.EQ.'KS'   .OR. IBFIME.EQ.'CHSQ')THEN
            INLON2(27)='3-PAR GAMMA'
          ENDIF
        ELSEIF(KDIST.EQ.29)THEN
          IF(IBFIME.EQ.'ML')THEN
            INLON2(29)='2-PAR INVERTED GAMMA'
          ELSEIF(IBFIME.EQ.'PPCC' .OR. IBFIME.EQ.'AD' .OR.
     1           IBFIME.EQ.'KS'   .OR. IBFIME.EQ.'CHSQ')THEN
            INLON2(29)='3-PAR INVERTED GAMMA'
          ENDIF
        ELSEIF(KDIST.EQ.37)THEN
          IF(IBFIME.EQ.'ML')THEN
            INLON2(37)='2-PAR GEOM EXTREME EXPO'
          ELSEIF(IBFIME.EQ.'PPCC' .OR. IBFIME.EQ.'AD' .OR.
     1           IBFIME.EQ.'KS'   .OR. IBFIME.EQ.'CHSQ')THEN
            INLON2(37)='3-PAR GEOM EXTREME EXPO'
          ENDIF
        ELSEIF(KDIST.EQ.19)THEN
          IF(IBFIME.EQ.'ML')THEN
            ICASP2='1MAX'
            INLON2(19)='1-PAR MAXWELL'
          ELSEIF(IBFIME.EQ.'PPCC' .OR. IBFIME.EQ.'AD' .OR.
     1           IBFIME.EQ.'KS'   .OR. IBFIME.EQ.'CHSQ')THEN
            INLON2(19)='2-PAR MAXWELL'
          ENDIF
        ELSEIF(KDIST.EQ.31)THEN
          IF(IBFIME.EQ.'ML')THEN
            INLON2(31)='2-PAR BURR TYPE 10'
          ELSEIF(IBFIME.EQ.'PPCC' .OR. IBFIME.EQ.'AD' .OR.
     1           IBFIME.EQ.'KS'   .OR. IBFIME.EQ.'CHSQ')THEN
            INLON2(31)='3-PAR BURR TYPE 10'
          ENDIF
        ENDIF
C
        DO206I=1,N
          Y(I)=ZTMP12(I)
  206   CONTINUE
C
C       CASE 1: FIT VIA PPCC.
C
C               2016/07: ADD AD, KS AND CHI-SQUARE TO THIS
C
C                        NOTE THAT FOR LOCATION/SCALE DISTRIBUTIONS,
C                        THESE REVERT TO PPCC SINCE WE ARE USING THE
C                        PROBABILITY PLOT TO DETERMINE THE LOCATION/
C                        SCALE PARAMETERS.  THE ALTERNATIVE GOODNESS
C                        OF FIT STATISTICS ARE USED TO OPTIMIZE THE
C                        VALUE OF THE SHAPE PARAMETER(S).
C
C                        NOTE THAT THE CHI-SQUARE METHOD WILL
C                        AUTOMATICALLY BIN THE DATA.
C
C               CURRENTLY SUPPORT:
C
C               1) LOCATION/SCALE DISTRIBUTIONS - OBTAIN PARAMETER
C                  ESTIMATES FROM PROBABILITY PLOT
C
C               2) DISTRIBUTIONS WITH ONE SHAPE PARAMETER - OBTAIN
C                  SHAPE PARAMETER FROM PPCC PLOT AND THEN LOCATION/
C                  SCALE ESTIMATES FROM PROBABILITY PLOT.
C
        IF(IBFIME.EQ.'PPCC' .OR. IBFIME.EQ.'AD  ' .OR.
     1     IBFIME.EQ.'KS  ' .OR. IBFIME.EQ.'CHSQ')THEN
C
          ISTEPN='3B'
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          NCURVE=1
          NJUNK1=0
          NJUNK2=0
          NHIGH=0
          PPLOC=0.0
          PPSCAL=1.0
C
          CALL DPBEF3(ICASP2,IPPCAP,NUMSHA,XMIN,XMAX,IADEDF,
     1                SHAP11,SHAP12,SHAP21,SHAP22,
     1                ISKIP,
     1                IBUGA3,ISUBRO,IERROR)
          IF(ISKIP.EQ.1)GOTO200
C
          IF(NUMSHA.EQ.1 .OR. NUMSHA.EQ.2)THEN
C
            IF(KDIST.EQ.32)SHAPE2=XMIN
            PPLOC=0.0
            PPSCAL=1.0
            A=CPUMIN
            B=CPUMIN
            IF(ICASP2.EQ.'TRIA')THEN
              A=-1.0
              B=1.0
            ENDIF
            ICASP3=IBFIME
            IF(IBFIME.EQ.'CHSQ')THEN
              IDIST2=INLON2(KDIST)
              CALL DPPPC3(Y,CENSOR,XLOW,XHIGH,N,MAXOBV,
     1                    ICASP3,ICASP2,IDATSW,IDIST2,
     1                    SHAP11,SHAP12,SHAP21,SHAP22,
     1                    SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                    YLOWLM,YUPPLM,A,B,MINMAX,
     1                    TEMP1(1),TEMP1(20001),TEMP1(40001),
     1                    TEMP1(60001),NUMSHA,
     1                    ZTEMP1,ZTEMP2,ZTEMP3,ZTEMP4,TEMP1(80001),
     1                    ZTEMP5,ZTEMP6,ZTEMP7,ZTEMP8,ZTEMP9,IPPCBW,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                    IGETDF,ICONDF,IGOMDF,IKATDF,
     1                    IGIGDF,IGEODF,
     1                    IPPCCC,IPPCFO,IPPLDP,PPLOC,PPSCAL,
     1                    IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                    IFLAGF,NCURVE,
     1                    PCHSLM,MINSIZ,IHSTCW,CLWIDT,CLLIMI,
     1                    ZTMP10,ZTMP11,TEMP2,TEMP3,NJUNK1,NJUNK2,
     1                    PPCC,SHA1MX,SHA2MX,PPA0,PPA1,
     1                    IBUGA3,ISUBRO,IERROR)
            ELSE
              CALL DPPPC2(Y,CENSOR,XLEVEL,N,MAXOBV,
     1                    ICASP3,ICASP2,
     1                    SHAP11,SHAP12,SHAP21,SHAP22,
     1                    SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                    YLOWLM,YUPPLM,A,B,MINMAX,
     1                    TEMP1(1),TEMP1(20001),TEMP1(40001),
     1                    TEMP1(60001),NUMSHA,
     1                    ZTEMP1,ZTEMP2,ZTEMP3,ZTEMP4,TEMP1(80001),
     1                    ZTEMP5,ZTEMP6,ZTEMP7,ZTEMP8,ZTEMP9,IPPCBW,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                    IGETDF,ICONDF,IGOMDF,IKATDF,
     1                    IGIGDF,IGEODF,
     1                    IPPCCC,IPPCFO,IPPLDP,PPLOC,PPSCAL,
     1                    IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                    IFLAGF,NCURVE,
     1                    PCHSLM,ILEVEL,
     1                    ZTMP10,ZTMP11,TEMP2,TEMP3,NJUNK1,NJUNK2,
     1                    PPCC,SHA1MX,SHA2MX,PPA0,PPA1,
     1                    PPA0BW,PPA1BW,
     1                    IBUGA3,ISUBRO,IERROR)
            ENDIF
            IF(IERROR.EQ.'YES')GOTO9000
C
C           NOTE 2013/09: IF THE TRIANGULAR DISTRIBUTION IS FIT BY PPCC,
C           THEN DO THE FOLLOWING:
C
C              1) MAKE SURE ESTIMATES FOR LOWER AND UPPER LIMIT INCLUDE
C                 THE MIN/MAX POINTS
C
C              2) TRANSFORM ESTIMATE OF SHAPE PARAMETER BY
C
C                 C' = LOWLIM + C*(UPPLIM - LOWLIM)
C
            IF(ICASP2.EQ.'TRIA' .AND. IBFICR.NE.'PPCC')THEN
              IF(PPA0.GT.XMIN)PPA0=XMIN
              AUPP=PPA0+PPA1
              IF(AUPP.LT.XMAX)PPA1=XMAX-PPA0
              SHA1SV=SHA1MX
              SHA1MX=PPA0 + SHA1MX*((PPA1-PPA0) - PPA0)
              A=PPA0
              B=PPA1
            ENDIF
C
            STATVA(KDIST)=PPCC
            ALOCV(KDIST)=PPA0
            SCALEV(KDIST)=PPA1
            SHAPV1(KDIST)=SHA1MX
            SHAPV2(KDIST)=CPUMIN
            IF(NUMSHA.GE.2)SHAPV2(KDIST)=SHA2MX
            IF(KDIST.EQ.46)SHAPV2(KDIST)=XMIN
            KSLOC=PPA0
            KSSCAL=PPA1
C
C           NOTE 2014/01: SAVE LOWER AND UPPER LIMITS ESTIMATES
C                         BASED ON LOCATION/SCALE ESTIMATES.
            ALOC=KSLOC
            ASCALE=KSLOC + KSSCAL
C
            ISTEPN='3BA'
            IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
              CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
              WRITE(ICOUT,203)ALOCV(KDIST),SCALEV(KDIST),SHAPV1(KDIST)
  203         FORMAT('AFTER DPPPC2: ALOCV(KDIST),SCALEV(KDIST),',
     1               'SHAPV1(KDIST)=',3G15.7)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
          ELSEIF(NSHAPE.EQ.0)THEN
C
            CALL DPPP2(Y,CENSOR,XLEVEL,N,ICASP2,NHIGH,
     1                 ZTEMP1,ZTEMP2,ZTEMP3,
     1                 YLOWLM,YUPPLM,A,B,MINMAX,
     1                 SHAP1Z,SHAP2Z,SHAPE3,SHAPE4,
     1                 SHAPE5,SHAPE6,SHAPE7,
     1                 IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                 ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                 IGETDF,ICONDF,IGOMDF,IKATDF,
     1                 IGIGDF,IGEODF,
     1                 IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1                 PPLOC,PPSCAL,
     1                 PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 ZTEMP4,ZTEMP5,
     1                 TEMP1,TEMP2,TEMP3,NJUNK1,NJUNK2,NCURVE,
     1                 IBUGA3,ISUBRO,IERROR)
            IF(IERROR.EQ.'YES')GOTO9000
            STATVA(KDIST)=PPCC
            ALOCV(KDIST)=PPA0
            SCALEV(KDIST)=PPA1
            KSLOC=PPA0
            KSSCAL=PPA1
C
C           NOTE 2014/01: SAVE LOWER AND UPPER LIMITS ESTIMATES
C                         BASED ON LOCATION/SCALE ESTIMATES.
            ALOC=KSLOC
            ASCALE=KSLOC + KSSCAL
C
            ISTEPN='3BB'
            IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
              CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
              WRITE(ICOUT,204)ALOCV(KDIST),SCALEV(KDIST)
  204         FORMAT('AFTER DPPP2: ALOCV(KDIST),SCALEV(KDIST) = ',
     1               2G15.7)
              CALL DPWRST('XXX','BUG ')
            ENDIF
          ENDIF
C
C         FOR THE FOLLOWING "LOWER/UPPER LIMIT" DISTRIBUTIONS, ALOC AND
C         ASCALE RETURN THE UPPER AND LOWER LIMITS.  WE WANT TO REPORT
C         LOWER AND UPPER LIMITS IN THE REPORT TABLE, BUT NEED TO SET
C         CERTAIN PARAMETERS.
C
          IF(IBFICR.NE.'PPCC')THEN
            IF(ICASP2.EQ.'BETA' .OR. ICASP2.EQ.'TSPO' .OR.
     1         ICASP2.EQ.'RGTL' .OR. ICASP2.EQ.'TRIA' .OR.
     1         ICASP2.EQ.'TOPL' .OR. ICASP2.EQ.'4BET')THEN
              A=ALOC
              B=ASCALE
              ALOCV(KDIST)=A
              SCALEV(KDIST)=B
CCCCC         KSLOC=A
CCCCC         KSSCAL=B - A
              IFLAG8=1
C
C           FOR THE FOLLOWING "LOWER/UPPER LIMIT" DISTRIBUTIONS, ALOC AND
C           ASCALE RETURN THE UPPER AND LOWER LIMITS.  WE WANT TO REPORT
C           LOWER AND UPPER LIMITS IN THE REPORT TABLE, BUT THE GOODNESS
C           OF FIT ROUTINES ARE EXPECTING LOCATION/SCALE.
C
            ELSEIF(ICASP2.EQ.'POWF' .OR. ICASP2.EQ.'RPOW')THEN
              A=ALOC
              B=ASCALE
              ALOCV(KDIST)=A
              SCALEV(KDIST)=B
CCCCC         KSLOC=ALOC
CCCCC         KSSCAL=ASCALE - ALOC
              IFLAG8=2
C
C           FOR THE FOLLOWING "LOWER/UPPER LIMIT" DISTRIBUTIONS, ALOC AND
C           ASCALE RETURN THE LOCATION AND SCALE LIMITS.  WE WANT TO REPORT
C           LOWER AND UPPER LIMITS IN THE REPORT TABLE, BUT NEED TO SET
C           CERTAIN PARAMETERS.
C
            ELSEIF(ICASP2.EQ.'UNIF')THEN
              A=ALOC
              B=ALOC + ASCALE
              ALOCV(KDIST)=A
              SCALEV(KDIST)=B
CCCCC         KSLOC=ALOC
CCCCC         KSSCAL=ASCALE
              IFLAG8=1
            ENDIF
          ENDIF
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
            WRITE(ICOUT,304)ALOC,ASCALE,A,B
  304       FORMAT('AFTER PPCC (BOUNDED) FIT: ALOC,ASCALE,A,B = ',
     1             4G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
C         CASE 2: FIT VIA MAXIMUM LIKELIHOOD.
C
        ELSEIF(IBFIME.EQ.'ML')THEN
C
          ISTEPN='3C'
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C         NOTE: DPBEF4 MAY TRANSFORM THE DATA IN ORDER FOR
C               THE DATA TO BE IN AN APPROPRIATE RANGE.  NOTE
C               THAT DPML1 MAY ALSO TRANSFORM THE DATA, SO NEED
C               TO SAVE A COPY OF Y THAT IS USED FOR DPML1 SO THAT
C               WE CAN RESTORE IT FOR THE GOODNESS OF FIT TEST.
C
          CALL DPBEF4(ICASP2,IDFTTY,MINMAX,XMIN,XMAX,XSKEW,IBFICR,
     1                Y,ZTMP11,N,
     1                ISKIP,YLOWLM,YUPPLM,
     1                IBUGA3,ISUBRO,IERROR)
          DO240II=1,N
            AHOLD=Y(II)
            Y(II)=ZTMP11(II)
            ZTMP11(II)=AHOLD
            ZTMP10(II)=Y(II)
  240     CONTINUE
          IF(ISKIP.EQ.1)GOTO200
C
          CALL DPML1(Y,CENSOR,N,ICASP2,IFLAGD,IFLAG9,
     1               TEMP1,TEMP2,TEMP3,ZTEMP1,ZTEMP2,ZTEMP3,
     1               DTEMP,DTEMP2,DTEMP3,ITEMP1,MAXOBV,
     1               ALOC,ASCALE,ALOWLI,AUPPLI,
     1               SH1,SH2,SH3,SH4,
     1               SH5,SH6,S7,
     1               YLOWLM,YUPPLM,A,B,MINMAX,ISEED,
     1               IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1               ILGADF,ISKNDF,IGLDDF,IGOMDF,IGIGDF,
     1               IGEODF,IBGEDF,IGAUDF,
     1               ICENSO,IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1               CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1               IBUGA3,ISUBRO,IERROR)
C
          IF(ICASP2.EQ.'INGA')THEN
            ALOC=0.0
            ASCALE=1.0
          ELSEIF(ICASP2.EQ.'3IGA')THEN
            ASCALE=1.0
          ENDIF
C
C         IF ERROR FLAG SET, THEN SKIP ML ESTIMATES FOR THIS
C         DISTRIBUTION.
C
          IF(IERROR.EQ.'YES')GOTO200
C
C         FOR
C
C            1. 2-PARAMETER BETA
C            2. REFLECTED GENERALIZED TOPP AND LEONE
C
C         SKIP BIC/AIC/AICC CASES IS EITHER SHAPE
C         PARAMETER IS LESS THAN OR EQUAL TO 1.
C
CCCCC     IF(ICASP2.EQ.'BETA')THEN
CCCCC       IF(IBFICR.EQ.'AIC' .OR. IBFICR.EQ.'AICC' .OR. 
CCCCC1         IBFICR.EQ.'BIC ')THEN
CCCCC         IF(SH1.LE.1.0 .OR. SH2.LE.1.0)GOTO200
CCCCC       ENDIF
CCCCC     ELSEIF(ICASP2.EQ.'RGTL')THEN
CCCCC       IF(IBFICR.EQ.'AIC' .OR. IBFICR.EQ.'AICC' .OR. 
CCCCC1         IBFICR.EQ.'BIC ')THEN
CCCCC         IF(SH1.LE.1.0 .OR. SH2.LE.1.0)GOTO200
CCCCC       ENDIF
CCCCC     ELSEIF(ICASP2.EQ.'TOPL')THEN
CCCCC       IF(IBFICR.EQ.'AIC' .OR. IBFICR.EQ.'AICC' .OR. 
CCCCC1         IBFICR.EQ.'BIC ')THEN
CCCCC         IF(SH1.LE.1.0)GOTO200
CCCCC       ENDIF
CCCCC     ENDIF
C
          SHAPV1(KDIST)=SH1
          SHAPV2(KDIST)=SH2
          SHAPV3(KDIST)=SH3
          SHAPV4(KDIST)=SH4
          SHAPV5(KDIST)=SH5
          ALOCV(KDIST)=ALOC
          SCALEV(KDIST)=ASCALE
          KSLOC=ALOC
          KSSCAL=ASCALE
          IF(KSLOC.EQ.CPUMIN)KSLOC=0.0
          IF(ICASP2.EQ.'PARE')THEN
            KSLOC=0.0
            KSSCAL=1.0
            SHAPV1(KDIST)=SH2
            SHAPV2(KDIST)=SH1
            ALOCV(KDIST)=0.0
            SCALEV(KDIST)=1.0
          ELSEIF(ICASP2.EQ.'FNOR')THEN
            ALOCV(KDIST)=KSLOC
            SCALEV(KDIST)=KSSCAL
            SHAPV1(KDIST)=CPUMIN
            SHAPV2(KDIST)=CPUMIN
C
C         FOR THE FOLLOWING "LOWER/UPPER LIMIT" DISTRIBUTIONS, ALOC AND
C         ASCALE RETURN THE UPPER AND LOWER LIMITS.  WE WANT TO REPORT
C         LOWER AND UPPER LIMITS IN THE REPORT TABLE, BUT NEED TO SET
C         CERTAIN PARAMETERS.
C
          ELSEIF(ICASP2.EQ.'BETA' .OR. ICASP2.EQ.'TSPO' .OR.
     1           ICASP2.EQ.'RGTL' .OR. ICASP2.EQ.'TRIA' .OR.
     1           ICASP2.EQ.'TOPL' .OR. ICASP2.EQ.'4BET')THEN
            A=ALOC
            B=ASCALE
            ALOCV(KDIST)=A
            SCALEV(KDIST)=B
            KSLOC=A
            KSSCAL=B - A
            IFLAG8=1
C
C         FOR THE FOLLOWING "LOWER/UPPER LIMIT" DISTRIBUTIONS, ALOC AND
C         ASCALE RETURN THE UPPER AND LOWER LIMITS.  WE WANT TO REPORT
C         LOWER AND UPPER LIMITS IN THE REPORT TABLE, BUT THE GOODNESS
C         OF FIT ROUTINES ARE EXPECTING LOCATION/SCALE.
C
          ELSEIF(ICASP2.EQ.'POWF' .OR. ICASP2.EQ.'RPOW')THEN
            A=ALOC
            B=ASCALE
            ALOCV(KDIST)=A
            SCALEV(KDIST)=B
            KSLOC=ALOC
            KSSCAL=ASCALE - ALOC
            IFLAG8=2
C
C         FOR THE FOLLOWING "LOWER/UPPER LIMIT" DISTRIBUTIONS, ALOC AND
C         ASCALE RETURN THE LOCATION AND SCALE LIMITS.  WE WANT TO REPORT
C         LOWER AND UPPER LIMITS IN THE REPORT TABLE, BUT NEED TO SET
C         CERTAIN PARAMETERS.
C
          ELSEIF(ICASP2.EQ.'UNIF')THEN
            A=ALOC
            B=ALOC + ASCALE
            ALOCV(KDIST)=A
            SCALEV(KDIST)=B
            KSLOC=ALOC
            KSSCAL=ASCALE
            IFLAG8=1
          ENDIF
C
          DO245II=1,N
            Y(II)=ZTMP10(II)
  245     CONTINUE
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
            WRITE(ICOUT,215)ALOC,ASCALE,SH1,SH2,ICASP2
  215       FORMAT('AFTER DPML1: ALOC,ASCALE,SH1,SH2 = ',
     1             4G15.7,2X,A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
        ENDIF
C
        IF(IBFIFO.EQ.'ON')THEN
          NTEMP=1
          AKSLOC=ALOCV(KDIST)
          AKSSCA=SCALEV(KDIST)
          SHAPE1=SHAPV1(KDIST)
          SHAPE2=SHAPV2(KDIST)
          SHAPE3=SHAPV3(KDIST)
          SHAPE4=SHAPV4(KDIST)
          SHAPE5=SHAPV5(KDIST)
          IF(IFLAG8.EQ.1)THEN
            ATEMP=A
            BTEMP=B
            AKSLOC=A
            AKSSCA=B - A
          ELSEIF(IFLAG8.EQ.2)THEN
            ATEMP=A
            BTEMP=B
            AKSLOC=A
            AKSSCA=B - A
          ELSE
            ATEMP=AKSLOC
            BTEMP=ATEMP + AKSSCA
          ENDIF
          IF(ICASP2.EQ.'ADEX' .AND. IBFIME.EQ.'ML')THEN
            IADESV=IADEDF
            IADEDF='K'
          ENDIF
          IF(ICASP2.EQ.'WALD')THEN
            SHAPE2=1.0
          ENDIF
C
C         FOR ML ESTIMATION, CERTAIN DISTRIBUTIONS EXPECT EITHER ALL
C         POSITIVE OR ALL NEGATIVE VALUES.  IN THESE CASES, THE DATA
C         IS TRANSFORMED BEFORE PERFORMING THE FIT.  IF THE DATA IS
C         TRANSFORMED, THEN PERFORM AN EQUIVALENT TRANSFORMATION ON
C         "XVALUE".
C
          XVALT=PBFIXV
          IF(IBFIME.EQ.'ML' .AND. XMIN.LE.0.0)THEN
            IMOD=0
            IF(ICASP2.EQ.'WEIB' .AND. MINMAX.EQ.1)IMOD=1
            IF(ICASP2.EQ.'GPAR' .AND. MINMAX.EQ.2)IMOD=1
            IF(ICASP2.EQ.'EV2 ' .AND. MINMAX.EQ.2)IMOD=1
            IF(ICASP2.EQ.'GEV ' .AND. MINMAX.EQ.2)IMOD=1
            IF(ICASP2.EQ.'IWEI')IMOD=1
            IF(ICASP2.EQ.'LOGN')IMOD=1
            IF(ICASP2.EQ.'GAMM')IMOD=1
            IF(ICASP2.EQ.'IGAM')IMOD=1
            IF(ICASP2.EQ.'GEEX')IMOD=1
            IF(ICASP2.EQ.'LEXP')IMOD=1
            IF(ICASP2.EQ.'FATL')IMOD=1
            IF(ICASP2.EQ.'PARE')IMOD=1
            IF(ICASP2.EQ.'FNOR')IMOD=1
            IF(ICASP2.EQ.'MAXW')IMOD=1
            IF(ICASP2.EQ.'1MAX')IMOD=1
            IF(ICASP2.EQ.'BU10')IMOD=1
            IF(IMOD.EQ.1)THEN
              EPS=0.000001
              XVALT=XVALT - XMIN + EPS
            ENDIF
          ENDIF
C
C         STEP 4: DISTRIBUTIONS EXPECTING NEGATIVE VALUES
C
C                 1) 2-PARAMETER WEIBULL (MAXIMUM)
C                 2) GENERALIZED PARETO (MINIMUM)
C                 3) FRECHET (MINIMUM)
C                 4) GENERALIZED EXTREME VALUE (MINIMUM)
C
          IF(IBFIME.EQ.'ML' .AND. XMAX.GE.0.0)THEN
            IF(XMAX.GE.0.0)THEN
              IMOD=0
              IF(ICASP2.EQ.'WEIB' .AND. MINMAX.EQ.2)IMOD=1
              IF(ICASP2.EQ.'GPAR' .AND. MINMAX.EQ.1)IMOD=1
              IF(ICASP2.EQ.'EV2 ' .AND. MINMAX.EQ.1)IMOD=1
              IF(ICASP2.EQ.'GEV ' .AND. MINMAX.EQ.1)IMOD=1
              IF(IMOD.EQ.1)THEN
                EPS=0.000001
                XVALT=XVALT - XMAX - EPS
              ENDIF
            ENDIF
          ENDIF
C
CCCCC     ZTEMP1(1)=0.0
          ZTEMP1(1)=XVALT
          AKSLOT=AKSLOC
          IF(AKSLOC.LE.CPUMIN .OR. AKSLOC.GE.CPUMAX)AKSLOT=0.0
          AKSSCT=AKSSCA
          IF(AKSSCA.LE.CPUMIN .OR. AKSSCA.GE.CPUMAX)AKSSCT=1.0
          NTEMP2=1
          IF(IBFITY.EQ.'CDF')THEN
            IFLAGD=1
            CALL DPCDF1(ZTEMP1,ZTEMP2,NTEMP2,ICASP2,IFLAGD,
     1                  SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                  SHAPE5,SH6,SH7,
     1                  YLOWLM,YUPPLM,ATEMP,BTEMP,MINMAX,
     1                  ICAPSW,ICAPTY,
     1                  IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                  ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                  IGETDF,ICONDF,IGOMDF,IKATDF,
     1                  IGIGDF,IGEODF,
     1                  AKSLOT,AKSSCT,
     1                  IBUGA3,ISUBRO,IERROR)
          ELSE
            CALL DPPDF1(ZTEMP1,ZTEMP2,NTEMP2,ICASP2,
     1                  SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                  SHAPE5,SH6,SH7,
     1                  YLOWLM,YUPPLM,ATEMP,BTEMP,MINMAX,
     1                  ICAPSW,ICAPTY,
     1                  IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                  ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                  IGETDF,ICONDF,IGOMDF,IKATDF,
     1                  IGIGDF,IGEODF,
     1                  AKSLOT,AKSSCT,
     1                  IBUGA3,ISUBRO,IERROR)
          ENDIF
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
            WRITE(ICOUT,217)AKSLOT,AKSSCT,SH1
  217       FORMAT('AFTER DPCDF1/DPPDF1: ALOC,ASCALE,SH1,SH2 = ',3G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,218)ZTEMP1(1),ZTEMP2(1)
  218       FORMAT('ZTEMP1(1),ZTEMP2(1) = ',2G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IADEDF=IADESV
          IF(ZTEMP2(1).EQ.CPUMIN)THEN
            DISTZ(KDIST)=-99.0
          ELSE
            DISTZ(KDIST)=ZTEMP2(1)
          ENDIF
CCCCC     DISTZ(KDIST)=-99.0
        ENDIF
C
C       STEP 2: EXTRACT THE GOODNESS OF FIT STATISTIC.  CALL DPPP2
C               TO OBTAIN PPCC VALUE AND DPGOF9 TO OBTAIN
C               ANDERSON-DARLING, KOLMOGOROV-SMIRNOV, OR AIC (OR
C               RELATED) GOODNESS OF FIT.
C
        ISTEPN='3D'
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       CASE 1: RANK BY PPCC, IF FIT PERFORMED BY PPCC,
C               ALREADY HAVE PPCC VALUE.  OTHERWISE, CALL
C               DPPP2 TO OBTAIN.
C
C               NOTE THAT IF FIT AND GOODNESS OF FIT CRITIERION ARE
C               BOTH PPCC, THEN NEED TO TRANSFORM THE SHAPE PARAMETER
C               FOR THE REPORT.
C
        IF(IBFICR.EQ.'PPCC')THEN
          IF(IBFIME.EQ.'PPCC')THEN
            IF(ICASP2.EQ.'TRIA')THEN
              ALOW=ALOCV(KDIST)
              AUPP=ALOW + SCALEV(KDIST)
              SHAPV1(KDIST)=ALOW + SHAPV1(KDIST)*(AUPP - ALOW)
            ENDIF
            IF(IFLAG7(KDIST).EQ.1)THEN
              SCALEV(KDIST)=ALOW + SCALEV(KDIST)
            ENDIF
          ELSE
            IF(ICASP2.EQ.'ADEX' .AND. IBFIME.EQ.'ML')THEN
              IADESV=IADEDF
              IADEDF='K'
            ENDIF
            SHAP1Z=SHAPV1(KDIST)
            SHAP2Z=SHAPV2(KDIST)
            SHAP3Z=SHAPV3(KDIST)
            SHAP4Z=SHAPV4(KDIST)
            SHAP5Z=SHAPV5(KDIST)
            NCURVE=1
            NJUNK1=0
            NJUNK2=0
            NHIGH=0
            PPLOC=0.0
            PPSCAL=1.0
            IF(KSLOC.NE.CPUMIN)PPLOC=KSLOC
            IF(KSSCAL.NE.CPUMIN)PPSCAL=KSSCAL
            CALL DPPP2(Y,CENSOR,XLEVEL,N,ICASP2,NHIGH,
     1                 ZTEMP1,ZTEMP2,ZTEMP3,
     1                 YLOWLM,YUPPLM,A,B,MINMAX,
     1                 SHAP1Z,SHAP2Z,SHAP3Z,SHAP4Z,
     1                 SHAP5Z,SHAPE6,SHAPE7,
     1                 IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                 ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                 IGETDF,ICONDF,IGOMDF,IKATDF,
     1                 IGIGDF,IGEODF,
     1                 IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1                 PPLOC,PPSCAL,
     1                 PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 ZTEMP4,ZTEMP5,
     1                 TEMP1,TEMP2,TEMP3,NJUNK1,NJUNK2,NCURVE,
     1                 IBUGA3,ISUBRO,IERROR)
            STATVA(KDIST)=PPCC
            IF(ICASP2.EQ.'ADEX' .AND. IBFIME.EQ.'ML')THEN
              IADEDF=IADESV
            ENDIF
          ENDIF
        ELSE
CCCCC     IF(ICASP2.EQ.'TRIA' .AND. IBFIME.NE.'ML')GOTO200
          IF(ICASP2.EQ.'TSPO' .AND. IBFIME.NE.'ML')GOTO200
          ICASP3=IBFICR
          SHAPE1=SHAPV1(KDIST)
          SHAPE2=SHAPV2(KDIST)
          SHAPE3=SHAPV3(KDIST)
          SHAPE4=SHAPV4(KDIST)
          SHAPE5=SHAPV5(KDIST)
          STATVA(KDIST)=CPUMIN
          IF(IFLAG8.EQ.1)THEN
            YLOWLM=A
            YUPPLM=B
          ELSEIF(IFLAG8.EQ.2)THEN
            YLOWLM=A
            YUPPLM=B
            KSLOC=A
            KSSCAL=B - A
          ELSE
            A=KSLOC
            B=A + KSSCAL
            YLOWLM=A
            YUPPLM=B
          ENDIF
          IF(ICASP2.EQ.'ADEX' .AND. IBFIME.EQ.'ML')THEN
            IADESV=IADEDF
            IADEDF='K'
          ENDIF
          IF(ICASP2.EQ.'WALD')THEN
            SHAPE2=1.0
          ENDIF
C
C         IF FIT BY PPCC BUT RANKING CRITIERION NOT PPCC, THEN MAY
C         NEED TO TWEAK LOCATION/SCALE ESTIMATES SO THAT WE HAVE
C         A VALID DOMAIN FOR THE CDF/PDF FUNCTIONS.
C
          IF(IBFICR.NE.'PPCC')THEN
            IF(IBFIME.EQ.'PPCC' .OR. IBFIME.EQ.'AD  ' .OR.
     1         IBFIME.EQ.'KS  ' .OR. IBFIME.EQ.'CHSQ')THEN
              CALL DPBEF5(IBFIME,ICASP2,XMIN,XMAX,XMED,
     1                    KSLOC,KSSCAL,A,B,
     1                    SHAPE1,SHAPE2,
     1                    IBUGA3,ISUBRO,IERROR)
               ALOCV(KDIST)=KSLOC
               SCALEV(KDIST)=KSSCAL
            ENDIF
          ENDIF
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
            WRITE(ICOUT,225)KSLOC,KSSCAL,SHAPE1,MINMAX,ICASP2
  225       FORMAT('DPGOF9: KSLOC,KSSCAL,SHAPE1,MINMAX,ICASP2 = ',
     1             3G15.7,I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IERROR='NO'
          CALL DPGOF9(Y,N,ICASP2,ICASP3,
     1                TEMP1,TEMP2,TEMP3,N2,
     1                YLOWLM,YUPPLM,A,B,MINMAX,
     1                SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                SHAPE5,SHAPE6,SHAPE7,
     1                IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                MAXOBV,
     1                KSLOC,KSSCAL,
     1                STATZZ,DM,
     1                IBUGA3,ISUBRO,IERROR,IERRFL)
          IF(STATZZ.LE.CPUMIN .OR. STATZZ.GE.CPUMAX .OR.
     1       IERROR.EQ.'YES')THEN
            GOTO200
          ENDIF
          IF(ISNANZ(STATZZ)) GOTO200
          STATVA(KDIST)=STATZZ
C
          IF(ICASP2.EQ.'ADEX' .AND. IBFIME.EQ.'ML')THEN
            IADEDF=IADESV
          ENDIF
C
        ENDIF
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
          WRITE(ICOUT,291)KDIST,INLON2(KDIST)(1:25),STATVA(KDIST),ICASP2
  291     FORMAT('KDIST,INLON2(KDIST)(1:25),STATVA(KDIST),ICASP2 = ',
     1           I5,A25,G15.7,2X,A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(IBFIME.EQ.'ML')THEN
          DO280II=1,N
            Y(II)=ZTMP11(II)
  280     CONTINUE
        ENDIF
C
  200 CONTINUE
C
C               *************************************************
C               **  STEP 4--                                   **
C               **  NOW SORT THE DISTRIBUTIONS BASED ON THE    **
C               **  GOODNESS OF FIT STATISTIC                  **
C               *************************************************
C
C     IF CALLED FROM DPDFP2, THEN JUST RETURN UNSORTED LIST AND
C     DO NOT PRINT THE TABLE.
C
      IF(ISUBN3.EQ.'DFP2' .OR. ISUBN3.EQ.'DFP3')GOTO9000
C
      CALL SORTC3(STATVA,ITEMP2,MAXDIS,TEMP1,ITEMP1)
C
      IF(IBFICR.EQ.'PPCC')THEN
        DO401I=1,MAXDIS
          ITEMP2(I)=ITEMP1(I)
  401   CONTINUE
        DO403I=1,MAXDIS
          II=MAXDIS-I+1
          ITEMP1(I)=ITEMP2(II)
  403   CONTINUE
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
        DO410I=1,MAXDIS
          WRITE(ICOUT,411)I,STATVA(I),TEMP1(I),ITEMP2(I),ITEMP1(I)
  411     FORMAT('I,STATVA(I),TEMP1(I),ITEMP2(I),ITEMP1(I)=',
     1           I5,2G15.7,2I5)
          CALL DPWRST('XXX','BUG ')
  410   CONTINUE
      ENDIF
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Response Variable: '
      WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
      WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      DO4101I=1,NREPL
        ICNT=ICNT+1
        ITEXT(ICNT)='Factor Variable  : '
        WRITE(ITEXT(ICNT)(17:17),'(I1)')I
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(I+1)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(I+1)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=PID(I+1)
        IDIGIT(ICNT)=NUMDIG
 4101 CONTINUE
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      IF(IBFIME.EQ.'PPCC')THEN
        ITEXT(ICNT)='Fit Method: PPCC'
        NCTEXT(ICNT)=16
      ELSEIF(IBFIME.EQ.'AD')THEN
        ITEXT(ICNT)='Fit Method: Anderson Darling'
        NCTEXT(ICNT)=28
      ELSEIF(IBFIME.EQ.'KS')THEN
        ITEXT(ICNT)='Fit Method: Kolmogorov Smirnov'
        NCTEXT(ICNT)=30
      ELSEIF(IBFIME.EQ.'ML')THEN
        ITEXT(ICNT)='Fit Method: Maximum Likelihood'
        NCTEXT(ICNT)=30
      ENDIF
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      IF(IBFICR.EQ.'PPCC')THEN
        ITEXT(ICNT)='Ranking Criterion: PPCC'
        NCTEXT(ICNT)=23
      ELSEIF(IBFICR.EQ.'AD')THEN
        ITEXT(ICNT)='Ranking Criterion: Anderson Darling'
        NCTEXT(ICNT)=35
      ELSEIF(IBFICR.EQ.'KS')THEN
        ITEXT(ICNT)='Ranking Criterion: Kolmogorov Smirnov'
        NCTEXT(ICNT)=35
      ELSEIF(IBFICR.EQ.'AIC')THEN
        ITEXT(ICNT)='Ranking Criterion: AIC'
        NCTEXT(ICNT)=22
      ELSEIF(IBFICR.EQ.'AICC')THEN
        ITEXT(ICNT)='Ranking Criterion: AICC'
        NCTEXT(ICNT)=23
      ELSEIF(IBFICR.EQ.'BIC')THEN
        ITEXT(ICNT)='Ranking Criterion: BIC'
        NCTEXT(ICNT)=22
      ENDIF
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Minimum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMIN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Maximum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMAX
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Mean:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=XMEAN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample SD:'
      NCTEXT(ICNT)=10
      AVALUE(ICNT)=XSD
      IDIGIT(ICNT)=NUMDIG
      NUMROW=ICNT
      DO2310I=1,NUMROW
        NTOT(I)=15
 2310 CONTINUE
C
      ITITLE='Best Distributional Fit'
      NCTITL=24
      ITITLZ=' '
      NCTITZ=0
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITL9=' '
      NCTIT9=0
      ITITLE='Ranked List of Best Fit'
      NCTITL=23
      NUMLIN=3
      NUMROW=4
      NUMCOL=6
C
      ITITL2(1,1)=' '
      NCTIT2(1,1)=0
      ITITL2(2,1)=' '
      NCTIT2(2,1)=0
      ITITL2(3,1)='Distribution'
      NCTIT2(3,1)=12
C
      ITITL2(1,2)='Goodness'
      NCTIT2(1,2)=8
      ITITL2(2,2)='of Fit'
      NCTIT2(2,2)=6
      ITITL2(3,2)='Statistic'
      NCTIT2(3,2)=9
C
      ITITL2(1,3)='Estimate'
      NCTIT2(1,3)=8
      ITITL2(2,3)='of'
      NCTIT2(2,3)=2
      ITITL2(3,3)='Location'
      NCTIT2(3,3)=8
C
      ITITL2(1,4)='Estimate'
      NCTIT2(1,4)=8
      ITITL2(2,4)='of'
      NCTIT2(2,4)=2
      ITITL2(3,4)='Scale'
      NCTIT2(3,4)=5
C
      ITITL2(1,5)='Estimate'
      NCTIT2(1,5)=8
      ITITL2(2,5)='of Shape'
      NCTIT2(2,5)=8
      ITITL2(3,5)='Parameter 1'
      NCTIT2(3,5)=11
C
      ITITL2(1,6)='Estimate'
      NCTIT2(1,6)=8
      ITITL2(2,6)='of Shape'
      NCTIT2(2,6)=8
      ITITL2(3,6)='Parameter 2'
      NCTIT2(3,6)=11
C
      IF(IBFIFO.EQ.'ON')THEN
        IF(IBFITY.EQ.'PDF')THEN
          ITITL2(1,7)='PDF'
          NCTIT2(1,7)=3
        ELSEIF(IBFITY.EQ.'CDF')THEN
          ITITL2(1,7)='CDF'
          NCTIT2(1,7)=3
        ENDIF
        ITITL2(2,7)='Value At'
        NCTIT2(2,7)=8
        IF(PBFIXV.NE.0.0)THEN
          WRITE(ITITL2(3,7)(1:12),'(F12.3)')PBFIXV
          NCTIT2(3,7)=12
        ELSE
          ITITL2(3,7)='Zero'
          NCTIT2(3,7)=4
        ENDIF
C
        ITITL2(1,8)=' '
        NCTIT2(1,8)=0
        ITITL2(2,8)='Infinite'
        NCTIT2(2,8)=8
        ITITL2(3,8)='Lower Tail'
        NCTIT2(3,8)=10
C
       NUMCOL=8
C
      ENDIF
C
      NMAX=0
      DO2821I=1,NUMCOL
        IDIGIT(I)=NUMDIG
        ITYPCO(I)='NUME'
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1)THEN
          NTOT(I)=25
          ALIGN(I)='l'
          ITYPCO(I)='ALPH'
          IDIGIT(I)=0
        ELSEIF(I.EQ.2 .AND.
     1        (IBFICR.EQ.'AIC' .OR. IBFICR.EQ.'AICC' .OR.
     1         IBFICR.EQ.'BIC'))THEN
          IDIGIT(I)=-7
        ELSEIF(I.EQ.8)THEN
          IDIGIT(I)=0
        ENDIF
        NMAX=NMAX+NTOT(I)
 2821 CONTINUE
C
      DO2823I=1,MAXDIS
        DO2825J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          NCVALU(I,J)=0
          AMAT(I,J)=CPUMIN
 2825   CONTINUE
 2823 CONTINUE
C
      ICNT=0
      DO2910I=1,MAXDIS
        IRANK=ITEMP1(I)
        IF(STATVA(IRANK).EQ.CPUMIN)GOTO2910
        ICNT=ICNT+1
        IF(IFLAG7(IRANK).EQ.1)THEN
          IVALUE(ICNT,1)(2:25)=INLON2(IRANK)(1:24)
          IVALUE(ICNT,1)(1:1)='*'
        ELSE
          IVALUE(ICNT,1)(1:25)=INLON2(IRANK)(1:25)
        ENDIF
        NCVALU(ICNT,1)=25
        AMAT(ICNT,2)=STATVA(IRANK)
        AMAT(ICNT,3)=ALOCV(IRANK)
        IF(INLON2(IRANK)(1:13).EQ.'2-PAR WEIBULL' .OR.
     1     INLON2(IRANK)(1:13).EQ.'3-PAR WEIBULL')THEN
          IF(IFLAGL.EQ.1)THEN
            AVAL1=SCALEV(IRANK)
            AFACT=AL**(1.0/SHAPV1(IRANK))
            AVAL1=AFACT*AVAL1
            AMAT(ICNT,4)=AVAL1
          ELSE
            AMAT(ICNT,4)=SCALEV(IRANK)
          ENDIF
        ELSE
          AMAT(ICNT,4)=SCALEV(IRANK)
        ENDIF
        AMAT(ICNT,5)=SHAPV1(IRANK)
        AMAT(ICNT,6)=SHAPV2(IRANK)
        IF(IBFIFO.EQ.'ON')THEN
          AMAT(ICNT,7)=DISTZ(IRANK)
          AMAT(ICNT,8)=DISTTA(IRANK)
        ENDIF
 2910 CONTINUE
C
      IWHTML(1)=300
      IWHTML(2)=150
      IWHTML(3)=150
      IWHTML(4)=150
      IWHTML(5)=150
      IWHTML(6)=150
      IWHTML(7)=150
      IWHTML(8)=150
      IINC=1500
      IWRTF(1)=2500
      IWRTF(2)=IWRTF(1)+IINC
      IWRTF(3)=IWRTF(2)+IINC
      IWRTF(4)=IWRTF(3)+IINC
      IWRTF(5)=IWRTF(4)+IINC
      IWRTF(6)=IWRTF(5)+IINC
      IWRTF(7)=IWRTF(6)+IINC
      IWRTF(8)=IWRTF(7)+IINC
C
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
        IPTSZ=14
        IF(IBFIFO.EQ.'ON')IPTSZ=10
        CALL DPCONA(92,IBASLC)
        WRITE(ICOUT,8199)IBASLC,IPTSZ
 8199   FORMAT(A1,'fs',I2)
        CALL DPWRST(ICOUT,'WRIT')
      ENDIF
C
      NUMROW=ICNT
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXDIS,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
        IPTSZ=IRTFPS
        WRITE(ICOUT,8199)IBASLC,IPTSZ
        CALL DPWRST(ICOUT,'WRIT')
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST(ICOUT,'WRIT')
      WRITE(ICOUT,8210)
 8210 FORMAT('* denotes lower/upper limit rather than location/scale')
      CALL DPWRST(ICOUT,'WRIT')
      WRITE(ICOUT,999)
      CALL DPWRST(ICOUT,'WRIT')
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      MINMAX=MINMX2
      IDFTTY=IDFTT2
C
C     WRITE RESULTS TO "dpst1f.dat"
C
      IF(IERROR.EQ.'YES')GOTO9009
      IF(ISUBN3.EQ.'DFP2' .OR. ISUBN3.EQ.'DFP3')GOTO9009
C
      IOP='OPEN'
      IFLG11=1
      IFLG21=0
      IFLG31=0
      IFLAG4=0
      IFLAG5=0
      CALL DPAUFI(IOP,IFLG11,IFLG21,IFLG31,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9009
C
      DO9001I=1,MAXDIS
        IRANK=ITEMP1(I)
        IF(STATVA(IRANK).EQ.CPUMIN)GOTO9001
        WRITE(IOUNI1,9003)N,STATVA(IRANK),ALOCV(IRANK),SCALEV(IRANK),
     1                    SHAPV1(IRANK),SHAPV2(IRANK),IRANK,
     1                    INLON2(IRANK)(1:25)
 9003   FORMAT(I8,2X,5E15.7,I5,2X,A25)
 9001 CONTINUE
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLG11,IFLG21,IFLG31,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
 9009 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBEF2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)YSTAT(1)
 9013   FORMAT('YSTAT(1) = ',G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBEF3(IDIST,IPPCAP,NUMSHA,YMIN,YMAX,IADEDF,
     1                  SHAP11,SHAP12,SHAP21,SHAP22,
     1                  ISKIP,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--FOR THE "BEST DISTRIBUTIONAL FIT" COMMAND, THIS
C              ROUTINE SETS CERTAIN PARAMETERS FOR THE PPCC METHOD:
C
C                 1. DEFINE THE NUMBER OF SHAPE PARAMETERS
C
C                 2. SET THE LOWER AND UPPER LIMIT FOR THE SHAPE
C                    PARAMETER(S)
C
C                 3. SET THE VALUES WHERE THE SHAPE PARAMETER WILL
C                    BE EVALUATED.
C
C                 4. SPECIFY ANY DISTRIBUTIONS TO SKIP.
C
C              NOTE THAT CURRENTLY THESE VALUES ARE NOT SETTABLE
C              BY THE USER.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/3
C     ORIGINAL VERSION--MARCH     2011.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IDIST
      CHARACTER*4 IADEDF
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IPPCAP(2)
C
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPBE'
      ISUBN2='F3  '
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPBEF3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)IDIST,YMIN,YMAX
   72   FORMAT('IDIST,YMIN,YMAX = ',A4,2X,2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,74)SHAP11,SHAP12,SHAP21,SHAP22
   74   FORMAT('SHAP11,SHAP12,SHAP21,SHAP22 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  SET THE PARAMETERS BASED ON THE       **
C               **  DISTRIBUTION                          **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     SPECIFY DISTRIBUTIONS TO SKIP
C
      ISKIP=0
      IF(IDIST.EQ.'WEIB')ISKIP=1
      IF(IDIST.EQ.'LOGN')ISKIP=1
      IF(IDIST.EQ.'FNOR')ISKIP=1
      IF(IDIST.EQ.'PARE')ISKIP=1
      IF(IDIST.EQ.'BETA')ISKIP=1
      IF(IDIST.EQ.'RGTL')ISKIP=1
CCCCC IF(IDIST.EQ.'GTLA')ISKIP=1
      IF(IDIST.EQ.'TSPO')ISKIP=1
CCCCC IF(IDIST.EQ.'TRIA')ISKIP=1
      IF(IDIST.EQ.'NORX')ISKIP=1
      IF(IDIST.EQ.'4BET')ISKIP=1
      IF(IDIST.EQ.'INGA')ISKIP=1
      IF(IDIST.EQ.'3IGA')ISKIP=1
      IF(ISKIP.EQ.1)GOTO9000
C
C     WEIBULL, INVERTED WEIBULL, LOGNORMAL, FRECHET, WALD,
C     GEOMETRIC EXTREME EXPONENTIAL, GAMMA, FATIGUE LIFE,
C     PARETO, DOUBLE WEIBULL, DOUBLE GAMMA, BURR TYPE 10:
C     GO FROM 0.1 TO 50 IN INCREMENTS OF 0.1.
C
      IF(IDIST.EQ.'WEIB' .OR. IDIST.EQ.'3WEI' .OR.
     1   IDIST.EQ.'IWEI' .OR. IDIST.EQ.'EV2'  .OR.
     1   IDIST.EQ.'3LGN' .OR. IDIST.EQ.'WALD' .OR.
     1   IDIST.EQ.'GEEX' .OR. IDIST.EQ.'FATL' .OR.
     1   IDIST.EQ.'PARE' .OR. IDIST.EQ.'GAMM' .OR.
     1   IDIST.EQ.'BU10' .OR.
     1   IDIST.EQ.'DWEI' .OR. IDIST.EQ.'DGAM'
     1  )THEN
        IPPCAP(1)=499
        SHAP11=0.1
        SHAP12=50.0
        NUMSHA=1
C
C     LOG GAMMA, LOG-LOGISTIC, BRADFORD:
C     GO FROM 0.1 TO 25 IN INCREMENTS OF 0.1.
C
      ELSEIF(
     1   IDIST.EQ.'LOGL' .OR. IDIST.EQ.'LGAM' .OR.
     1   IDIST.EQ.'BRAD'
     1  )THEN
        IPPCAP(1)=249
        SHAP11=0.1
        SHAP12=25.0
        NUMSHA=1
C
C     INVERTED GAMMA:
C     GO FROM 0.5 TO 50 IN INCREMENTS OF 0.1.
C
      ELSEIF(
     1   IDIST.EQ.'IGAM'
     1  )THEN
        IPPCAP(1)=496
        SHAP11=0.5
        SHAP12=50.0
        NUMSHA=1
C
C     LOGISTIC EXPONENTIAL, POWER, REFLECTED POWER, TOPP AND LEONE,
C     LOG DOUBLE EXPONENTIAL:
C     GO FROM 0.05 TO 10 IN INCREMENTS OF 0.05.
C
      ELSEIF(
     1   IDIST.EQ.'POWF' .OR. IDIST.EQ.'RPOW' .OR.
     1   IDIST.EQ.'LDEX' .OR.
     1   IDIST.EQ.'LEXP' .OR. IDIST.EQ.'TOPL'
     1  )THEN
        IPPCAP(1)=199
        SHAP11=0.05
        SHAP12=10.0
        NUMSHA=1
C
C     ERROR:
C     GO FROM 1 TO 5 IN INCREMENTS OF 0.02.
C
      ELSEIF(
     1   IDIST.EQ.'ERRO'
     1  )THEN
        IPPCAP(1)=201
        SHAP11=1.0
        SHAP12=5.0
        NUMSHA=1
C
C     GENERALIZED PARETO: GO FROM -10 TO 10 IN INCREMENTS OF 0.1.
C
      ELSEIF(IDIST.EQ.'GPAR')THEN
        IPPCAP(1)=201
        SHAP11=-10.0
        SHAP12=10.0
        NUMSHA=1
C
C     GENERALIZED EXTREME VALUE: GO FROM -25 TO 25 IN INCREMENTS OF 0.1.
C
      ELSEIF(IDIST.EQ.'GEV ')THEN
        IPPCAP(1)=500
        SHAP11=-25.0
        SHAP12=25.0
        NUMSHA=1
C
C     TUKEY-LAMBDA: GO FROM -2 TO 2 IN INCREMENTS OF 0.05
C
      ELSEIF(IDIST.EQ.'TULA')THEN
        IPPCAP(1)=81
        SHAP11=-2.0
        SHAP12=2.0
        NUMSHA=1
C
C     TRIANGUAR: GO FROM -1 TO 1 IN INCREMENTS OF 0.01
C
      ELSEIF(IDIST.EQ.'TRIA')THEN
        IPPCAP(1)=200
        SHAP11=-1.0
        SHAP12=1.0
        NUMSHA=1
C
C     ASYMMETRIC DOUBLE EXPONENTIAL: K PARAMETERIZATION
C
      ELSEIF(IDIST.EQ.'ADEX' .AND. IADEDF.EQ.'K')THEN
        IPPCAP(1)=198
        SHAP11=0.1
        SHAP12=10.0
        NUMSHA=1
C
C     ASYMMETRIC DOUBLE EXPONENTIAL: MU PARAMETERIZATION
C
      ELSEIF(IDIST.EQ.'ADEX' .AND. IADEDF.EQ.'MU')THEN
        IPPCAP(1)=198
        SHAP11=-5.0
        SHAP12=5.0
        NUMSHA=1
C
C     G AND H
C
      ELSEIF(IDIST.EQ.'GHPP')THEN
        IPPCAP(1)=101
        IPPCAP(2)=41
        SHAP11=-1.0
        SHAP12=1.0
        SHAP21=0.0
        SHAP22=1.0
        NUMSHA=2
C
C     G
C
      ELSEIF(IDIST.EQ.'GPP')THEN
        IPPCAP(1)=200
        SHAP11=-1.0
        SHAP12=1.0
        NUMSHA=1
C
C     GENERALIZED TUKEY-LAMBDA
C
      ELSEIF(IDIST.EQ.'GTLA')THEN
        IPPCAP(1)=101
        IPPCAP(2)=101
        SHAP11=-5.0
        SHAP12=5.0
        SHAP21=-5.0
        SHAP22=5.0
        NUMSHA=2
C
C     TWO-SIDED POWER
C
      ELSEIF(IDIST.EQ.'TSPO')THEN
        IPPCAP(1)=21
        IPPCAP(2)=249
        SHAP11=0.0
        SHAP12=1.0
        SHAP21=0.1
        SHAP22=25.0
        NUMSHA=2
C
C
      ELSE
        NUMSHA=0
      ENDIF
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBEF3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)
 9013   FORMAT('SHAP11,SHAP12,IPPCAP(1) = ',2G15.7,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBEF4(IDIST,IDFTTY,MINMAX,YMIN,YMAX,XSKEW,IBFICR,
     1                  Y,YOUT,N,
     1                  ISKIP,YLOWLM,YUPPLM,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--FOR THE "BEST DISTRIBUTIONAL FIT" COMMAND, THIS
C              ROUTINE PERFORMS CERTAIN CHECKS FOR MAXIMUM LIKELIHOOD
C              ESTIMATION:
C
C                 1. FOR DISTRIBUTIONS THAT EXPECT "POSITIVE" DATA,
C                    (OR "NEGATIVE" DATA), CHECK FOR NON-POSITIVE
C                    (OR NON-NEGATIVE) VALUES.
C
C                 2. FOR THE GENERALIZED PARETO AND GENERALIZED
C                    EXTREME VALUE, SPECIFY THAT THE "ELEMENTAL
C                    PERCENTILES" METHOD SHOULD BE USED SINCE
C                    MAXIMUM LIKELIHOOD ESTIMATES ARE ONLY
C                    AVAILABLE FOR A LIMITED RANGE OF PARAMETER
C                    VALUES.
C
C                 3. SET A FLAG IF ML METHOD CURRENTLY NOT
C                    AVAILABLE FOR THE GIVEN DISTRIBUTION.
C
C              NOTE THAT CURRENTLY THESE VALUES ARE NOT SETTABLE
C              BY THE USER.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/3
C     ORIGINAL VERSION--MARCH     2011.
C     UPDATED         --JUNE      2013. SOME TWEAKS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IDIST
      CHARACTER*4 IDFTTY
      CHARACTER*4 IBFICR
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION YOUT(*)
C
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPBE'
      ISUBN2='F4  '
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF4')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPBEF4--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)IDIST,N,YMIN,YLOWLM,YUPPLM
   72   FORMAT('IDIST,N,YMIN,YLOWLM,YUPPLM = ',A4,2X,I8,3G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  PERFROM CHECKS FOR VARIOUS            **
C               **  DISTRIBUTIONS                         **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF4')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IDFTTY='ML'
      ISKIP=0
      DO110I=1,N
        YOUT(I)=Y(I)
  110 CONTINUE
C
C     STEP 1: SPECIFY METHOD
C             GENERALIZED PARETO, GENERALIZED EXTREME VALUE USE
C             ELEMENTAL PERCENTILES ESTIMATES.
C
C             FOR 4-PARAMETER BETA, USE METHOD OF MOMENTS
C
      IF(IDIST.EQ.'GPAR' .OR. IDIST.EQ.'GEV')THEN
        IDFTTY='EPER'
      ELSEIF(IDIST.EQ.'4BET')THEN
        IDFTTY='MOME'
      ENDIF
C
C     STEP 2: DETECT DISTRIBUTION WHERE ML NOT CURRENTLY SUPPORTED
C
C             FOR GENERALIZED PARETO, ONLY DO MAX CASE IF YMIN > 0
C             AND ONLY DO MIN CASE IF YMAX < 0
C
C             FOR BIC/AIC/AICC, SKIP POWER, REFLECTED POWER, AND
C             GENERALIZED REFLECTED TOPP AND LEONE DISTRIBUTIONS
C
      ISKIP=0
      IF(IDIST.EQ.'WALD')ISKIP=1
      IF(IDIST.EQ.'TULA')ISKIP=1
      IF(IDIST.EQ.'COSI')ISKIP=1
      IF(IDIST.EQ.'ANGL')ISKIP=1
      IF(IDIST.EQ.'HSEC')ISKIP=1
CCCCC IF(IDIST.EQ.'HNOR')ISKIP=1
      IF(IDIST.EQ.'GEV ')ISKIP=1
      IF(IDIST.EQ.'GHPP')ISKIP=1
      IF(IDIST.EQ.'GTLA')ISKIP=1
      IF(IDIST.EQ.'ARSI')ISKIP=1
      IF(IDIST.EQ.'LGAM')ISKIP=1
      IF(IDIST.EQ.'DGAM')ISKIP=1
      IF(IDIST.EQ.'DWEI')ISKIP=1
      IF(IDIST.EQ.'LOGL')ISKIP=1
      IF(IDIST.EQ.'BRAD')ISKIP=1
      IF(IDIST.EQ.'LDEX')ISKIP=1
      IF(IDIST.EQ.'ERRO')ISKIP=1
      IF(IDIST.EQ.'3WEI' .AND. MINMAX.EQ.2)ISKIP=1
CCCCC IF(IDIST.EQ.'PARE' .AND. YMIN.LE.0.0)ISKIP=1
      IF(IDIST.EQ.'GPAR' .AND. IBFICR.EQ.'AIC')ISKIP=1
      IF(IDIST.EQ.'GPAR' .AND. IBFICR.EQ.'AICC')ISKIP=1
      IF(IDIST.EQ.'GPAR' .AND. IBFICR.EQ.'BIC')ISKIP=1
      IF(IDIST.EQ.'TSPO')ISKIP=1
C
C     FOR INVERSE GAUSSIAN, ONLY COMPUTE ML ESTIMATES IF THE
C     SKEWNESS PARAMETER IS POSITIVE.
C
      IF(IDIST.EQ.'INGA' .OR. IDIST.EQ.'3IGA')THEN
        IF(XSKEW.LE.0.0)ISKIP=1
      ENDIF
C
C     2013/06: FOR FOLLOWING DISTRIBUTIONS, SKIP FOR
C              AIC/AICC/BIC UNLESS USER HAS SPECIFIED
C              LOWER/UPPER LIMITS.  USING THE MIN/MAX
C              (WITH POSSIBLY AN EPSILON FUDEGE FACTOR)
C              APPEARS TO DISTORT THE LOG-LIKLIHOOD IN
C              SOME CASES, WHICH IS WHY WE SKIP THESE.
C              THIS IS PARTICULARLY TRUE WHEN THE ESTIMATED
C              SHAPE PARAMETERS RESULT IN A U-SHAPED OR
C              J-SHAPED DISTRIBUTION.
C
C              FOR 2-PARAMETER BETA, TOPP AND LEONE, AND
C              REFLECTED GENERALIZED TOPP AND LEONE, CHECK
C              THE VALUE OF THE ESTIMATED SHAPE PARAMETERS
C              BEFORE DECIDING WHETHER TO SKIP.
C
C              IF LIMIT BASED DISTRIBUTION ESTIMATES THESE
C              LOWER/UPPER LIMITS (UNIFORM, TRIANGULAR), THEN
C              DON'T SKIP.
C
C              TWEAKED THE ML ROUTINES TO ADD A LITTLE MORE TO
C              THE LOWER/UPPER LIMITS AND MOFIFIED THE COMPUTATION
C              OF THE LOG LIKELIHOOD (WHEN DATA SCALED TO 0 - 1,
C              NEED TO ADJUST SO THAT LOG-LIKELIHOOD IN ORIGINAL
C              UNITS).
C
CCCCC IF(IDIST.EQ.'POWF' .OR. IDIST.EQ.'RPOW')THEN
CCCCC   IF(IBFICR.EQ.'AIC')ISKIP=1
CCCCC   IF(IBFICR.EQ.'AICC')ISKIP=1
CCCCC   IF(IBFICR.EQ.'BIC')ISKIP=1
CCCCC ENDIF
C
C     FOR NOW, SKIP GENERALIZED PARETO AS THIS SEEMS TO HAVE
C     PROBLEMS FOR SOME DATA SETS.  MAY RESTORE IF WE CAN FIND
C     WAY TO ENSURE ELEMENTAL PERCENTILE METHOD WILL NOT FAIL.
C
      IF(IDIST.EQ.'GPAR')THEN
        IF(MINMAX.NE.1)THEN
          IF(YMIN.LE.0.0)ISKIP=1
        ELSEIF(MINMAX.EQ.1)THEN
          IF(YMAX.GE.0.0)ISKIP=1
        ENDIF
      ENDIF
      IF(IDIST.EQ.'GPAR')ISKIP=1
C
      IF(ISKIP.EQ.1)GOTO9000
C
C     STEP 3: DISTRIBUTIONS EXPECTING POSITIVE VALUES
C
C             1) 2-PARAMETER WEIBULL (MINIMUM)
C             2) 2-PARAMETER INVERTED WEIBULL
C             3) GENERALIZED PARETO (MAXIMUM)
C             4) LOGNORMAL
C             5) FRECHET (MAXIMUM)
C             6) GAMMA
C             7) INVERTED GAMMA
C             8) GENERALIZED GEOMETRIC EXPONENTIAL
C             9) FATIGUE LIFE (BIRNBAUM SAUNDERS)
C            10) PARETO
C            11) LOGISTIC EXPONENTIAL
C            12) FOLDED NORMAL
C            13) 1-PARAMETER MAXWELL
C            14) GENERALIZED EXTREME VALUE (MAXIMUM)
C            15) BURR TYPE 10
C
      IF(YMIN.LE.0.0)THEN
        IMOD=0
        IF(IDIST.EQ.'WEIB' .AND. MINMAX.EQ.1)IMOD=1
        IF(IDIST.EQ.'GPAR' .AND. MINMAX.EQ.2)IMOD=1
        IF(IDIST.EQ.'EV2 ' .AND. MINMAX.EQ.2)IMOD=1
        IF(IDIST.EQ.'GEV ' .AND. MINMAX.EQ.2)IMOD=1
        IF(IDIST.EQ.'IWEI')IMOD=1
        IF(IDIST.EQ.'LOGN')IMOD=1
        IF(IDIST.EQ.'GAMM')IMOD=1
        IF(IDIST.EQ.'IGAM')IMOD=1
        IF(IDIST.EQ.'GEEX')IMOD=1
        IF(IDIST.EQ.'LEXP')IMOD=1
        IF(IDIST.EQ.'FATL')IMOD=1
        IF(IDIST.EQ.'PARE')IMOD=1
        IF(IDIST.EQ.'FNOR')IMOD=1
        IF(IDIST.EQ.'MAXW')IMOD=1
        IF(IDIST.EQ.'1MAX')IMOD=1
        IF(IDIST.EQ.'BU10')IMOD=1
        IF(IMOD.EQ.1)THEN
          EPS=0.000001
          DO310I=1,N
            YOUT(I)=Y(I) - YMIN + EPS
  310     CONTINUE
        ENDIF
      ENDIF
C
C     STEP 4: DISTRIBUTIONS EXPECTING NEGATIVE VALUES
C
C             1) 2-PARAMETER WEIBULL (MAXIMUM)
C             2) GENERALIZED PARETO (MINIMUM)
C             3) FRECHET (MINIMUM)
C             4) GENERALIZED EXTREME VALUE (MINIMUM)
C
      IF(YMAX.GE.0.0)THEN
        IMOD=0
        IF(IDIST.EQ.'WEIB' .AND. MINMAX.EQ.2)IMOD=1
        IF(IDIST.EQ.'GPAR' .AND. MINMAX.EQ.1)IMOD=1
        IF(IDIST.EQ.'EV2 ' .AND. MINMAX.EQ.1)IMOD=1
        IF(IDIST.EQ.'GEV ' .AND. MINMAX.EQ.1)IMOD=1
        IF(IMOD.EQ.1)THEN
          EPS=0.000001
          DO410I=1,N
            YOUT(I)=Y(I) - YMAX - EPS
  410     CONTINUE
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF4')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBEF4--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)IDFTTY,ISKIP
 9015   FORMAT('IDFTTY,ISKIP = ',A4,2X,I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBEF5(IBFIME,IDIST,XMIN,XMAX,XMED,
     1                  ALOC,ASCALE,A,B,
     1                  SHAPE1,SHAPE2,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--UTILITY ROUTINE FOR THE "BEST DISTRIBUTIONAL FIT" COMMAND.
C              IF THE FIT IS COMPUTED VIA PPCC, BUT THE RANKING IS PERFORMED
C              BY ANDERSON-DARLING, KOLMOGOROV-SMIRNOV, OR AIC, WE MAY NEED
C              TO TWEAK THE LOCATION AND SCALE PARAMETERS A BIT SO THAT THE
C              DATA VALUES ARE IN AN APPROPRIATE RANGE.  THERE ARE 2 BASIC
C              CASES TO CONSIDER:
C
C                 1. THE DATA ARE BOUNDED BELOW (TYPICALLY AT 0).
C
C                 2. THE DATA ARE BOUNDED AT BOTH ENDS (TYPICALLY (0,1)).
C
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2012/9
C     ORIGINAL VERSION--SEPTEMBER 2012.
C     UPDATED         --JULY      2013. FOR BOUNDED BELOW, ONLY
C                                       TWEAK IF LOCATION GREATER
C                                       THAN MINIMUM VALUE
C     UPDATED         --JANUARY   2014. TWEAK BOUNDED IN BOTH DIRECTIONS
C                                       CASE A BIT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBFIME
      CHARACTER*4 IDIST
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA PI / 3.1415926535 /
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPBE'
      ISUBN2='F5  '
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF5')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPBEF5--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)IDIST,IBFIME
   72   FORMAT('IDIST,IBFIME = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  SET THE PARAMETERS BASED ON THE       **
C               **  DISTRIBUTION                          **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF5')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     DETERMINE WHICH CASE:
C
C       0 => NO CHECK NEEDED
C       1 => BOUNDED BELOW AT LOCACTION PARAMETER
C       2 => BOUNDED BOTH BELOW AND ABOVE, CHECK BASED ON A AND B
C            PARAMETERS
C       3 => SPECIAL CASES
C
C     NOTE THAT ONLY A FEW OF THE 2 SHAPE PARAMETER DISTRIBUTIONS
C     WILL FIT USING PPCC METHOD.
C
C     CASE 1: BOUNDED BELOW BY THE LOCATION PARAMETER, JUST SET LOCATION
C             PARAMETER TO DATA MINIMUM MINUS SOME EPSILON.
C
      EPS=1.0E-12
      IF(IDIST.EQ.'EXPO' .OR. IDIST.EQ.'RAYL' .OR. IDIST.EQ.'3WEI' .OR.
     1   IDIST.EQ.'IWEI' .OR. IDIST.EQ.'WALD' .OR. IDIST.EQ.'LOGN' .OR.
     1   IDIST.EQ.'EV2 ' .OR. IDIST.EQ.'GAMM' .OR. IDIST.EQ.'IGAM' .OR.
     1   IDIST.EQ.'HNOR' .OR. IDIST.EQ.'MAXW' .OR. IDIST.EQ.'LGAM' .OR.
     1   IDIST.EQ.'LOGL' .OR. IDIST.EQ.'LDEX' .OR. IDIST.EQ.'BU10' .OR.
     1   IDIST.EQ.'3LGN' .OR.
     1   IDIST.EQ.'GEEX' .OR. IDIST.EQ.'FATL' .OR. IDIST.EQ.'LEXP') THEN
         IF(ALOC.GT.XMIN)THEN
           ALOC=XMIN - EPS
         ENDIF
C
C     CASE 2: BOUNDED BOTH ABOVE AND BELOW.
C
C             2014/01: TWEAK THIS A BIT SO THAT IF OUT OF
C                      RANGE IN ONLY ONE DIRECTION, JUST CHANGE
C                      THAT DIRECTION.
C
C             2014/01: SET EPS BASED ON RANGE OF DATA.  SPECIFICALLY,
C                      SET TO 0.1% OF DATA RANGE.
C
      ELSEIF(IDIST.EQ.'UNIF' .OR. IDIST.EQ.'TOPL' .OR.
     1       IDIST.EQ.'TRIA' .OR.
     1       IDIST.EQ.'POWF' .OR. IDIST.EQ.'RPOW')THEN
        XRANGE=XMAX - XMIN
        EPS=0.001*XRANGE
        ZMIN=A
        ZMAX=B
        IF(ZMIN.GT.XMIN .AND. ZMAX.LT.XMAX)THEN
          A=XMIN-EPS
          B=XMAX+EPS
          ALOC=A
          ASCALE=B - A
        ELSEIF(ZMIN.GT.XMIN)THEN
          B=ZMAX
          A=XMIN-EPS
          ALOC=A
          ASCALE=B - A
        ELSEIF(ZMAX.LT.XMAX)THEN
          A=ZMIN
          B=XMAX+EPS
          ALOC=A
          ASCALE=B - A
        ENDIF
C
C     CASE 3: SPECIAL CASES
C
      ELSEIF(IDIST.EQ.'BRAD' .OR. IDIST.EQ.'ANGL' .OR.
     1       IDIST.EQ.'COSI' .OR. IDIST.EQ.'ARSI')THEN
        AMIN=0.0
        AMAX=1.0
        IF(IDIST.EQ.'ANGL')THEN
          AMIN=-PI/4.0
          AMAX=PI/4.0
        ELSEIF(IDIST.EQ.'COSI')THEN
          AMIN=-PI
          AMAX=PI
        ENDIF
        ZMIN=(XMIN-ALOC)/ASCALE
        ZMAX=(XMAX-ALOC)/ASCALE
        IF(ZMIN.LT.AMIN .OR. ZMAX.GT.AMAX)THEN
           CMIN=AMIN
           CMAX=AMAX
           CONST=CMIN/CMAX
           IF(CONST.NE.-1.0)THEN
             ALOC=(XMIN-CONST*XMAX)/(1.0+CONST) - EPS
             ASCALE=(XMAX-ALOC)/CMAX + EPS
           ELSE
             ALOC=XMIN - EPS
             ASCALE=(XMAX - ALOC)/AMAX
           ENDIF
        ENDIF
      ELSEIF(IDIST.EQ.'PARE')THEN
        IF(XMIN.GT.SHAPE2)THEN
          SHAPE2=XMIN
        ENDIF
      ELSEIF(IDIST.EQ.'TULA' .AND. SHAPE1.GT.0.0)THEN
        AMAX=ABS(1.0/SHAPE1)
        AMIN=-AMAX
        IF((XMIN-ALOC)/ASCALE.LT.AMIN .OR.
     1     (XMAX-ALOC)/ASCALE.GT.AMAX)THEN
           ALOC=XMED
           ATEMP1=SHAPE1*ABS(XMAX-ALOC) + 0.1
           ATEMP2=SHAPE2*ABS(XMIN-ALOC) + 0.1
           ASCALE=MAX(ATEMP1,ATEMP2)
        ENDIF
C
C     NO CHECK REQUIRED
C
      ELSE
        GOTO9000
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BEF5')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBEF5--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)
 9013   FORMAT('SHAP11,SHAP12,IPPCAP(1) = ',2G15.7,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBELL(IHARG,NUMARG,IBELSW,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BELL SWITCH IBELSW.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--IBELSW  ('ON'  OR 'OFF')
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1978.
C     UPDATED         --SEPTEMBER 1980.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IBELSW
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1150
      IF(NUMARG.GE.1)GOTO1110
      GOTO1199
C
 1110 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1160
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1160
      GOTO1199
C
 1150 CONTINUE
      IBELSW='ON'
      GOTO1180
C
 1160 CONTINUE
      IBELSW='OFF'
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBELSW
 1181 FORMAT('THE BELL SWITCH HAS JUST BEEN TURNED ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBFCO(IHARG,IARG,NUMARG,IDEBFC,MAXBAR,IBAFCO,
     1                  ICASCL,IBAFC2,IRGBMX,
     1                  IBUGP2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR FILL COLORS = THE COLORS
C              OF THE (BACKGROUND) FILL WITHIN THE BARS.
C              THESE ARE LOCATED IN THE VECTOR IBAFCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEBFC
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBAFCO (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEBFC
      CHARACTER*4 IBAFCO
      CHARACTER*4 ICASCL
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARG(*)
      DIMENSION IBAFCO(*)
      DIMENSION IBAFC2(MAXBAR,3)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPBF'
      ISUBN2='CO  '
C
      NUMBAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BFCO')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBFCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGP2,ISUBRO,IFOUND,IERROR
   52   FORMAT('IBUGP2,ISUBRO,IFOUND,IERROR = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IDEBFC,MAXBAR,NUMBAR,NUMARG,IRGBMX
   53   FORMAT('IDEBFC,MAXBAR,NUMBAR,NUMARG,IRGBMX = ',A4,2X,4I8)
        CALL DPWRST('XXX','BUG ')
        DO65I=1,NUMARG
          WRITE(ICOUT,66)I,IARG(I),IHARG(I)
   66     FORMAT('I,IARG(I),IHARG(I) = ',2I8,2X,A4)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
        DO75I=1,10
          WRITE(ICOUT,76)I,IBAFCO(I),IBAFC2(I,1),IBAFC2(I,2),IBAFC2(I,3)
   76     FORMAT('I,IBAFCO(I),IBAFC2(I,1),IBAFC2(I,2),IBFAC2(I,3) = ',
     1           I8,2X,A4,2X,3I5)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
      ENDIF
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BFCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(ICASCL.EQ.'RGB ')GOTO2000
C
C     THIS IS THE "STANDARD" CASE
C
      IF(NUMARG.EQ.2)THEN
        GOTO1200
      ELSEIF(NUMARG.EQ.3)THEN
        IF(IHARG(3).EQ.'ALL')IHOLD1='    '
        IF(IHARG(3).EQ.'ALL')GOTO1300
        GOTO1200
      ELSEIF(NUMARG.EQ.4)THEN
        IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(4)
        IF(IHARG(3).EQ.'ALL')GOTO1300
        IF(IHARG(4).EQ.'ALL')IHOLD1=IHARG(3)
        IF(IHARG(4).EQ.'ALL')GOTO1300
        GOTO1200
      ELSE
        GOTO1200
      ENDIF
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BFCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)THEN
        NUMBAR=1
        IBAFCO(1)=IDEBFC
      ELSE
        NUMBAR=NUMARG-2
        IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
        DO1225I=1,NUMBAR
          J=I+2
          IHOLD1=IHARG(J)
          IHOLD2=IHOLD1
          IF(IHOLD1.EQ.'ON')IHOLD2=IDEBFC
          IF(IHOLD1.EQ.'OFF')IHOLD2=IDEBFC
          IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBFC
          IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBFC
          IBAFCO(I)=IHOLD2
 1225   CONTINUE
      ENDIF
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO1278I=1,NUMBAR
          WRITE(ICOUT,1276)I,IBAFCO(I)
 1276     FORMAT('THE FILL COLOR OF BAR ',I6,
     1           ' HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
 1278   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BFCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2=IDEBFC
      IF(IHOLD1.EQ.'OFF')IHOLD2=IDEBFC
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBFC
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBFC
      DO1315I=1,NUMBAR
        IBAFCO(I)=IHOLD2
 1315 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,1316)IBAFCO(I)
 1316   FORMAT('THE FILL COLOR OF ALL BARS HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C     RGB COLORS CASE: 3 COLORS SHOULD BE GIVEN
C
C                      BAR FILL COLOR
C                      BAR FILL COLOR IRED IBLUE IGREEN
C                      BAR FILL COLOR IRED IBLUE IGREEN ALL
C                      BAR FILL COLOR ALL IRED IBLUE IGREEN
C                      BAR FILL COLOR IRED1 IBLUE1 IGREEN1 IRED2 ...
C
C                      THE "RGB" KEYWORD HAS ALREADY BEEN STRIPPED
C                      OUT.  NOTE THAT THE DEFAULT COLOR IS -1
C                      (I.E., NO RGB COLOR VALUES SPECIFIED).
C
 2000 CONTINUE
C
      JHOLD1=-1
      JHOLD2=-1
      JHOLD3=-1
      NUMBAR=MAXBAR
C
      IF(NUMARG.EQ.3 .AND. IHARG(3).EQ.'ALL')THEN
        GOTO2300
      ELSEIF(NUMARG.EQ.6)THEN
        IF(IHARG(3).EQ.'ALL')THEN
          JHOLD1=IARG(4)
          JHOLD2=IARG(5)
          JHOLD3=IARG(6)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ELSEIF(IHARG(6).EQ.'ALL')THEN
          JHOLD1=IARG(3)
          JHOLD2=IARG(4)
          JHOLD3=IARG(5)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ENDIF
      ENDIF
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
      ISTEPN='22'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BFCO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)THEN
        NUMBAR=1
        IBAFC2(1,1)=-1
        IBAFC2(1,2)=-1
        IBAFC2(1,3)=-1
      ELSE
        NTEMP=NUMARG-2
        NUMBAR=NTEMP/3
        IF(NUMBAR.LT.1)THEN
          IBAFC2(1,1)=-1
          IBAFC2(1,2)=-1
          IBAFC2(1,3)=-1
        ELSEIF(NUMBAR.GT.MAXBAR)THEN
          NUMBAR=MAXBAR
        ENDIF
        DO2225I=1,NUMBAR
          J1=(I-1)*3+3
          J2=J1+1
          J3=J1+2
          JHOLD1=IARG(J1)
          JHOLD2=IARG(J2)
          JHOLD3=IARG(J3)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-999
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-999
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-999
          IBAFC2(I,1)=JHOLD1
          IBAFC2(I,2)=JHOLD2
          IBAFC2(I,3)=JHOLD3
 2225   CONTINUE
      ENDIF
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO2278I=1,NUMBAR
          WRITE(ICOUT,2276)I,IBAFC2(I,1),IBAFC2(I,2),IBAFC2(I,3)
 2276     FORMAT('THE RGB FILL COLORS OF BAR ',I6,
     1           ' HAVE JUST BEEN SET TO ',3I8)
          CALL DPWRST('XXX','BUG ')
 2278   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 2300 CONTINUE
      ISTEPN='23'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BFCO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO2315I=1,NUMBAR
        IBAFC2(I,1)=JHOLD1
        IBAFC2(I,2)=JHOLD2
        IBAFC2(I,3)=JHOLD3
 2315 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,2316)IBAFC2(I,1),IBAFC2(I,2),IBAFC2(I,3)
 2316   FORMAT('THE RGB FILL COLORS OF ALL BARS HAVE JUST ',
     1         'BEEN SET TO ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BFCO')THEN
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBFCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR,NUMBAR
 9012   FORMAT('IFOUND,IERROR,NUMBAR = ',2(A4,2X),I5)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014   FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO9075I=1,10
          WRITE(ICOUT,76)I,IBAFCO(I),IBAFC2(I,1),IBAFC2(I,2),IBAFC2(I,3)
          CALL DPWRST('XXX','BUG ')
 9075   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBFSW(IHARG,NUMARG,IDEBFS,MAXBAR,IBAFSW,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR FILL SWITCHES = THE ON/OFF SWITCHES
C              OF THE (BACKGROUND) FILL WITHIN THE BARS.
C              THESE ARE LOCATED IN THE VECTOR IBAFSW(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEBFS
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBAFSW (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEBFS
      CHARACTER*4 IBAFSW
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IBAFSW(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBF'
      ISUBN2='SW  '
C
      NUMBAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBFSW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEBFS
   55 FORMAT('IDEBFS = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IBAFSW(1)
   70 FORMAT('IBAFSW(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IBAFSW(I)
   76 FORMAT('I,IBAFSW(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      GOTO1150
C
 1120 CONTINUE
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1='ON'
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(4)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      IF(IHARG(4).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(4).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      IBAFSW(1)='ON'
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-2
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+2
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='ON'
      IF(IHOLD1.EQ.'OFF')IHOLD2='OFF'
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBFS
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBFS
      IBAFSW(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,IBAFSW(I)
 1276 FORMAT('THE FILL SWITCH FOR BAR ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='ON'
      IF(IHOLD1.EQ.'OFF')IHOLD2='OFF'
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBFS
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBFS
      DO1315I=1,NUMBAR
      IBAFSW(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IBAFSW(I)
 1316 FORMAT('THE FILL SWITCH FOR ALL BARS',
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBFSW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEBFS
 9015 FORMAT('IDEBFS = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IBAFSW(1)
 9030 FORMAT('IBAFSW(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IBAFSW(I)
 9036 FORMAT('I,IBAFSW(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBIHI(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  CLLIMI,CLWIDT,
     1                  IRHSTG,IHSTCW,IASHWT,IHSTEB,IHSTOU,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE ONE OF THE FOLLOWING 5 PLOTS--
C              1) BIHISTOGRAM;
C              2) RELATIVE BIHISTOGRAM;
C              3) CUMULATIVE BIHISTOGRAM;
C              4) RELATIVE CUMULATIVE BIHISTOGRAM;
C              5) HIGHLIGHTED BIHISTOGRAM (ALSO SUPPORTS
C                 RELATIVE/CUMULATIVE VARIANTS);
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C     UPDATED         --MARCH     1996. IRHSTG SWITCH
C     UPDATED         --AUGUST    2007. MODIFY ARRAY STORAGE TO
C                                       USE DPCOZZ.INC
C     UPDATED         --JUNE      2011. USE DPPARS AND DPPAR3
C     UPDATED         --JUNE      2011. SUPPORT FOR "HIGHLIGHTED" OPTION
C     UPDATED         --JUNE      2011. SUPPORT FOR NON-EQUISPACED
C                                       HISTOGRAMS
C     UPDATED         --JUNE      2011. OPTION TO SUPPRESS EMPTY BINS
C     UPDATED         --JUNE      2011. OPTION TO INCLUDE OUTLIERS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IRELAT
      CHARACTER*4 ICUMUL
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
CCCCC CHARACTER*4 IDATSW
      CHARACTER*4 IRHSTG
      CHARACTER*4 IHSTCW
      CHARACTER*4 IASHWT
      CHARACTER*4 IHSTEB
      CHARACTER*4 IHSTOU
      CHARACTER*4 IHIGH
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DOUBLE PRECISION DCLWID
      DOUBLE PRECISION DXSTAR
      DOUBLE PRECISION DXSTOP
C
      CHARACTER*4 ICASE
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
      CHARACTER*40 INAME
C
C---------------------------------------------------------------------
C
C     AUGUST 2007.  EQUIVALENCE ARRAYS TO DPCOZZ
C                   INSTEAD OF PASSING IN FROM MAINGR
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION CLLIMI(*)
      DIMENSION CLWIDT(*)
      DIMENSION Y1TEMP(MAXOBV)
      DIMENSION Y2TEMP(MAXOBV)
      DIMENSION C1(MAXOBV)
      DIMENSION C2(MAXOBV)
      DIMENSION X1HIGH(MAXOBV)
      DIMENSION X2HIGH(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XTEMP1(2*MAXOBV)
      DIMENSION XTEMP2(2*MAXOBV)
C
      EQUIVALENCE (GARBAG(IGARB3),C1(1))
      EQUIVALENCE (GARBAG(IGARB4),C2(1))
      EQUIVALENCE (GARBAG(IGARB5),X1HIGH(1))
      EQUIVALENCE (GARBAG(IGARB6),X2HIGH(1))
      EQUIVALENCE (GARBAG(IGARB7),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB8),Y1TEMP(1))
      EQUIVALENCE (GARBAG(IGARB9),Y2TEMP(1))
      EQUIVALENCE (GARBAG(IGAR10),XTEMP1(1))
      EQUIVALENCE (GARBAG(JGAR12),XTEMP2(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPBI'
      ISUBN2='HI  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
      NLOCAL=0
C
C               *******************************************
C               **  TREAT THE BIHISTOGRAM AND RELATED    **
C               **  STATISTICAL DISTRIBUTION PLOTS CASE  **
C               *******************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BIHI')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBIHI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2,NS
   52   FORMAT('ICASPL,IAND1,IAND2,NS = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIHI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C

      IF(ICOM.EQ.'BIHI')GOTO99
      IF(ICOM.EQ.'RELA')GOTO99
      IF(ICOM.EQ.'CUMU')GOTO99
      IF(ICOM.EQ.'HIGH')GOTO99
      IF(ICOM.EQ.'SUBS')GOTO99
      IF(ICOM.EQ.'BIRO')GOTO99
      IF(ICOM.EQ.'BIAS' .AND. ICOM2.EQ.'H   ')GOTO99
      GOTO9000
C
   99 CONTINUE
      IRELAT='OFF'
      IHIGH='OFF'
      ICUMUL='OFF'
      ICASPL='    '
      ILASTC=0
C
      IF(ICOM.EQ.'BIAS'.AND.ICOM2.EQ.'H   ')THEN
        IFOUND='YES'
        ICASPL='BIAS'
        IRELAT='ON'
        ILASTC=0
        GOTO119
      ENDIF
C
      IPOSH=NUMVAR
      IF(ICOM.EQ.'BIHI')THEN
        ICASPL='BIHI'
        IFOUND='YES'
        IPOSH=0
      ELSEIF(ICOM.EQ.'BIRO')THEN
        ICASPL='BIRO'
        IFOUND='YES'
        IPOSH=0
      ELSEIF(ICOM.EQ.'RELA')THEN
        IRELAT='ON'
      ELSEIF(ICOM.EQ.'CUMU')THEN
        ICUMUL='ON'
      ELSEIF(ICOM.EQ.'HIGH' .OR. ICOM.EQ.'SUBS')THEN
        IHIGH='ON'
      ENDIF
C
C     NOTE: "SUBSET" AND "=" CAN APPEAR AS PART OF SUBSET
C           CLAUSE, SO NEED TO BE CAREFUL WHERE IT OCCURS
C           IN THE COMMAND.  HANDLE THIS BY REQUIRING THAT
C           THEY APPEAR BEFORE THE "BIHISTOGRAM" CLAUSE.
C
      DO110I=1,NUMARG
        IF(IHARG(I).EQ.'=' .AND. I.LT.IPOSH)THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(IHARG(I).EQ.'BIHI')THEN
          ICASPL='BIHI'
          ILASTC=I
          IFOUND='YES'
          IPOSH=I
        ELSEIF(IHARG(I).EQ.'BIRO')THEN
          ICASPL='BIRO'
          ILASTC=I
          IFOUND='YES'
        ELSEIF(IHARG(I).EQ.'BIAS')THEN
          ICASPL='BIAS'
          ILASTC=I
          IFOUND='YES'
        ELSEIF(IHARG(I).EQ.'RELA')THEN
          ILASTC=I
          IRELAT='ON'
        ELSEIF(IHARG(I).EQ.'CUMU')THEN
          ILASTC=I
          ICUMUL='ON'
        ELSEIF(IHARG(I).EQ.'HIGH' .OR. IHARG(I).EQ.'SUBS')THEN
          IF(I.LT.IPOSH)THEN
            ILASTC=I
            IHIGH='ON'
          ENDIF
        ENDIF
  110 CONTINUE
C
      IF(ICASPL.EQ.'BIHI' .AND. ICUMUL.EQ.'ON')THEN
        ICASPL='CBIH'
      ELSEIF(ICASPL.EQ.'BIRO' .AND. ICUMUL.EQ.'ON')THEN
        ICASPL='CBIR'
      ENDIF
C
      IF((ICASPL.EQ.'BIRO' .OR. ICASPL.EQ.'CBIR') .AND.
     1   IRELAT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,130)
  130   FORMAT('****** ERROR IN BIROOTOGRAM--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,131)
  131   FORMAT('      RELATIVE OPTION NOT CURRENTLY SUPPORTED FOR ',
     1         'THE ROOTOGRAM COMMAND.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(ICASPL.EQ.'BIAS' .AND. IHIGH.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,140)
  140   FORMAT('****** ERROR IN BIASH--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,141)
  141   FORMAT('      HIGHLIGHT OPTION NOT SUPPORTED FOR BIASH ',
     1         'COMMAND.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
  119 CONTINUE
      IF(ILASTC.GE.1)THEN
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        ILASTC=0
      ENDIF
C
      IF(IFOUND.EQ.'NO')GOTO9000
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BIHI')THEN
        WRITE(ICOUT,112)ICASPL,IRELAT,IHIGH
  112   FORMAT('ICASPL,IRELAT,IHIGH = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIHI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BIHISTOGRAM'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=0
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      IF(IHIGH.EQ.'ON')THEN
        MINNVA=4
        MAXNVA=4
        IFLAGM=0
      ELSEIF(ICASPL.EQ.'BIAS')THEN
        MINNVA=2
        MAXNVA=2
      ELSE
        MINNVA=2
        MAXNVA=2
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C     IF HIGHLIGHTING TURNED ON, THEN VARIABLES 1 AND 2 MUST HAVE
C     SAME LENGTH AND VARIABLES 3 AND 4 MUST HAVE SAME LENGTH.
C
      IF(IHIGH.EQ.'ON')THEN
        IF(NRIGHT(1).NE.NRIGHT(2))THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,150)
  150     FORMAT('****** ERROR IN BIHISTOGRAM--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,151)
  151     FORMAT('       FOR HIGHLIGHTED CASE, VARIABLES ONE AND TWO ',
     1           'MUST HAVE THE SAME LENGTH.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,153)IVARN1(1),IVARN2(1),NRIGHT(1)
  153     FORMAT('       THE NUMBER OF OBSERVATIONS FOR ',A4,A4,
     1           '   = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,153)IVARN1(2),IVARN1(2),NRIGHT(2)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        IF(NRIGHT(3).NE.NRIGHT(4))THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,150)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,161)
  161     FORMAT('       FOR HIGHLIGHTED CASE, VARIABLES THREE AND ',
     1           'FOUR MUST HAVE THE SAME LENGTH.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,153)IVARN1(3),IVARN2(3),NRIGHT(3)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,153)IVARN1(4),IVARN2(4),NRIGHT(4)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIHI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ****************************************
C               **  STEP 3--                          **
C               **  EXTRACT THE DATA                  **
C               ****************************************
C
      ISTEPN='3'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIHI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IHIGH.EQ.'OFF')THEN
        ICOL=1
        NUMVA2=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1TEMP,Y1TEMP,Y1TEMP,NS1,NS1,NS1,ICASE,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        ICOL=2
        NUMVA2=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y2TEMP,Y2TEMP,Y2TEMP,NS2,NS2,NS2,ICASE,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ELSE
        ICOL=1
        NUMVA2=2
        CALL DPPAR5(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1TEMP,X1HIGH,
     1              Y1TEMP,Y1TEMP,Y1TEMP,Y1TEMP,Y1TEMP,NS1,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        ICOL=3
        CALL DPPAR5(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y2TEMP,X2HIGH,
     1              Y2TEMP,Y2TEMP,Y2TEMP,Y2TEMP,Y2TEMP,NS2,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
        NLOCAL=NS2
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
C               ****************************************
C               **  STEP 4--                          **
C               **  CALL DPBIH3 TO DETERMINE THE      **
C               **  BINNING (THIS IS BASED ON THE     **
C               **  COMBINED DATA).                   **
C               ****************************************
C
      ISTEPN='4'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIHI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CLWID=CLWIDT(1)
      XSTART=CLLIMI(1)
      XSTOP=CLLIMI(2)
C
C     PARAMETER FOR ASH HISTROGRAM
C
      IHP='M   '
      IHP2='    '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        IF(NLOCAL.LE.100)THEN
          M=4
        ELSEIF(NLOCAL.LE.1000)THEN
          M=8
        ELSE
          M=16
        ENDIF
      ELSE
        M=INT(VALUE(ILOCP)+0.5)
        IF(M.LE.0)M=1
        IF(M.GT.64)M=64
      ENDIF
C
C     NOTE: ASH BINNINNG ALGORITHM RETURNS THE BINNED DATA, NOT JUST
C           CLASS WIDTHS, SO HANDLE THAT CASE IN DPBIH2.
C
      CALL DPBIH3(Y1TEMP,X1HIGH,NS1,Y2TEMP,X2HIGH,NS2,
     1            ICASPL,IRELAT,IHIGH,CLWID,XSTART,XSTOP,
     1            XTEMP1,XTEMP2,MAXOBV,
     1            IRHSTG,IHSTCW,IHSTEB,IHSTOU,
     1            DCLWID,DXSTAR,DXSTOP,
     1            Y,X,D,N2,IFLAG,
     1            IBUGG3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IF(IFLAG.EQ.1)THEN
        NPLOTV=3
        NPLOTP=N2
        GOTO9000
      ENDIF
C
C               ****************************************
C               **  STEP 5--                          **
C               **  CALL DPBIH2 TO GENERATE THE CLASS **
C               **  FREQUENCIES FOR EACH SAMPLE.      **
C               ****************************************
C
      ISTEPN='5'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIHI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      N2=0
      ICASET=1
      CALL DPBIH2(Y1TEMP,X1HIGH,NS1,ICASPL,ICASET,
     1            XTEMP1,XTEMP2,XIDTEM,
     1            DCLWID,DXSTAR,DXSTOP,
     1            IHIGH,IRELAT,IRHSTG,IHSTCW,IHSTEB,IHSTOU,
     1            IASHWT,M,
     1            Y,X,X3D,D,N2,NPLOTV,
     1            IBUGG3,ISUBRO,IERROR)
C
      ICASET=2
      CALL DPBIH2(Y2TEMP,X2HIGH,NS2,ICASPL,ICASET,
     1            XTEMP1,XTEMP2,XIDTEM,
     1            DCLWID,DXSTAR,DXSTOP,
     1            IHIGH,IRELAT,IRHSTG,IHSTCW,IHSTEB,IHSTOU,
     1            IASHWT,M,
     1            Y,X,X3D,D,N2,NPLOTV,
     1            IBUGG3,ISUBRO,IERROR)
C
      NPLOTV=3
      NPLOTP=N2
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BIHI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBIHI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,IRELAT,IERROR,NPLOTP,NPLOTV
 9012   FORMAT('ICASPL,IRELAT,IERROR,NPLOTP,NPLOTV = ',3(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NPLOTP
          WRITE(ICOUT,9014)I,X(I),Y(I),D(I)
 9014     FORMAT('I,X(I),Y(I),D(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBIH2(Y,XHIGH,N,ICASPL,ICASE,
     1                  XTEMP1,XTEMP2,XIDTEM,
     1                  DCLWID,DXSTAR,DXSTOP,
     1                  IHIGH,IRELAT,IRHSTG,IHSTCW,IHSTEB,IHSTOU,
     1                  IASHWT,M,
     1                  Y2,X2,X3D,D2,N2,NPLOTV,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--USED BY DPBIHI TO GENERATE THE CLASS FREQUENCIES
C              FOR ONE OF THE GROUPS.
C
C              NOTE THAT THE DPBIH3 ROUTINE IS CALLED FIRST TO DETERMINE
C              THE CLASS START, CLASS STOP, AND CLASS WIDTH.  ALSO, THE
C              VARIABLE ICASE SPECIFIES WHETHER THIS IS THE FOR THE
C              FIRST SAMPLE OR THE SECOND SAMPLE (IF THE SECOND SAMPLE,
C              THE Y-COORDINATE WILL BE NEGATED).  ALSO, DPBIH3 DOES THE
C              BASIC ERROR CHECKING, SO DO NOT REPEAT THAT HERE.
C
C              NOTE THAT BIHISTOGRAM CURRENTLY ONLY WORKS ON RAW
C              DATA (I.E., PRE-BINNED DATA NOT SUPPORTED).
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/6
C     ORIGINAL VERSION--JUNE      2011. EXTRACTED FROM DPBIHI ROUTINE
C                                       SOME OPTIONS FROM STANDARD
C                                       HISTOGRAM INCORPORATED INTO
C                                       BIHISTOGRAM AS PART OF THIS
C                                       EXTENSION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IRELAT
      CHARACTER*4 IHIGH
      CHARACTER*4 IRHSTG
      CHARACTER*4 IHSTCW
      CHARACTER*4 IHSTEB
      CHARACTER*4 IHSTOU
      CHARACTER*4 IASHWT
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRIT2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
 
      DOUBLE PRECISION DCLWID
      DOUBLE PRECISION DXSTAR
      DOUBLE PRECISION DXSTOP
      DOUBLE PRECISION DCLMNJ
      DOUBLE PRECISION DCLMDJ
      DOUBLE PRECISION DCLMXJ
      DOUBLE PRECISION DJ
      DOUBLE PRECISION DXI
      DOUBLE PRECISION DABSDE
      DOUBLE PRECISION DTOTWI
      DOUBLE PRECISION DN3
      DOUBLE PRECISION DSUM
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION XHIGH(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION X3D(*)
      DIMENSION D2(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XIDTEM(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBI'
      ISUBN2='S2  '
C
      IERROR='NO'
      IWRIT2='OFF'
C
      K=(-999)
      DCLMDJ=(-999.0D0)
      KP3=0
      AN3=0.0
      DENOM=0.0
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BIH2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPBIH2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,81)IHIGH,IHSTCW,IHSTOU
   81   FORMAT('IHIGH,IHSTCW,IHSTOU = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,82)N,DCLWID,DXSTAR,DXSTOP
   82   FORMAT('N,DCLWID,DXSTAR,DXSTOP = ',I8,3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO83I=1,N
          WRITE(ICOUT,84)I,Y(I),XHIGH(I)
   84     FORMAT('I,Y(I),XHIGH(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   83   CONTINUE
      ENDIF
C
C               **********************************************
C               **  STEP 2--                                **
C               **  HANDLE ASH CASE SEPARATELY.             **
C               **********************************************
C
      IF(ICASPL.EQ.'BIAS')THEN
        N2SAVE=N2
        CALL DPBINA(Y,N,REAL(DCLWID),REAL(DXSTAR),REAL(DXSTOP),M,
     1              XTEMP1,MAXOBV,
     1              IRELAT,IASHWT,IHSTCW,
     1              XTEMP2,XIDTEM,NTEMP,IBUGG3,IERROR)
        DO112I=1,NTEMP
          Y2(N2SAVE+I)=XTEMP2(I)
          X2(N2SAVE+I)=XIDTEM(I)
          D2(N2SAVE+I)=1.0
          IF(ICASE.EQ.2)THEN
            Y2(N2SAVE+I)=-Y2(N2SAVE+I)
            D2(N2SAVE+I)=2.0
          ENDIF
  112   CONTINUE
        N2=N2SAVE+NTEMP
        GOTO9000
      ENDIF
C
      DTOTWI=DXSTOP-DXSTAR
      ANUMCL=DTOTWI/DCLWID
      NUMCLA=INT(ANUMCL+1.0+0.1)
C
      J=NUMCLA-1
      DJ=J
      DCLMXJ=DXSTAR+DJ*DCLWID
      DABSDE=DABS(DCLMXJ-DXSTOP)
      IF(DABSDE.LE.0.0001D0)NUMCLA=NUMCLA-1
C
C               *******************************************************
C               **  STEP 3--                                         **
C               **  DETERMINE THE FREQUENCY (COUNTS) FOR EACH CLASS  **
C               *******************************************************
C
      IF(IHIGH.EQ.'ON')THEN
        CALL DISTIN(XHIGH,N,IWRIT2,XIDTEM,NDIST,IBUGG3,IERROR)
        CALL SORT(XIDTEM,NDIST,XIDTEM)
      ELSE
        NDIST=1
      ENDIF
      NPOINT=N2
      N2SAVE=N2
C
      DO300IREPL=1,NDIST
C
        IF(IREPL.EQ.1)THEN
          DO301ISET=1,N
            XTEMP2(ISET)=Y(ISET)
  301     CONTINUE
          NTEMP=N
          ATAG=1.0
          IF(ICASE.EQ.2)ATAG=2.0
        ELSE
          ICNT=0
          AHOLD=XIDTEM(IREPL-1)
          DO306ISET=1,N
            IF(XHIGH(ISET).EQ.AHOLD)THEN
              ICNT=ICNT+1
              XTEMP2(ICNT)=Y(ISET)
            ENDIF
  306     CONTINUE
          NTEMP=ICNT
          ATAG=REAL(NDIST - IREPL + 2)
        ENDIF
C
        DO310J=1,NUMCLA
          XTEMP1(J)=0.0
  310   CONTINUE
C
        IBELOW=0
        IABOVE=0
        DO420I=1,NTEMP
          DXI=XTEMP2(I)
          IF(DXI.LT.DXSTAR)THEN
            IBELOW=IBELOW+1
            GOTO420
          ELSEIF(DXI.GT.DXSTOP)THEN
            IABOVE=IABOVE+1
            GOTO420
          ENDIF
          DO430J=1,NUMCLA
            J2=J
            DJ=J
            DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
            DCLMXJ=DXSTAR+DJ*DCLWID
            IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
            IF(DCLMNJ.LE.DXI.AND.DXI.LT.DCLMXJ)GOTO440
  430     CONTINUE
          GOTO420
  440     CONTINUE
          XTEMP1(J2)=XTEMP1(J2)+1.0
  420   CONTINUE
C
C       TREAT THE SPECIAL CASE OF EQUALITY
C       WITH THE UPPER LIMIT OF THE LAST (RIGHT-MOST) CLASS
C
        J=NUMCLA
        DO450I=1,NTEMP
          DJ=J
          DCLMXJ=DXSTAR+DJ*DCLWID
          IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
          DXI=XTEMP2(I)
          IF(DXI.EQ.DCLMXJ)XTEMP1(J)=XTEMP1(J)+1.0
  450   CONTINUE
C
        IF(IBELOW.GE.1)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1591)IBELOW,DXSTAR
 1591     FORMAT('***** WARNING: ',I8,' DATA POINTS ARE BELOW THE ',
     1           'MINIMUM CLASS VALUE OF ',G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IF(IABOVE.GE.1)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1691)IABOVE,DXSTOP
 1691     FORMAT('***** WARNING: ',I8,' DATA POINTS ARE ABOVE THE ',
     1           'MAXIMUM CLASS VALUE OF ',G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BIH2')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,591)
  591     FORMAT('***** IN THE MIDDLE    OF DPBIH2--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,592)DCLWID,DXSTAR,DXSTOP,DTOTWI,ANUMCL,NUMCLA
  592     FORMAT('DCLWID,DXSTAR,DXSTOP,DTOTWI,ANUMCL,NUMCLA= ',
     1           4D11.4,F10.0,I8)
          CALL DPWRST('XXX','BUG ')
          DO593J=1,NUMCLA
            DJ=J
            DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
            DCLMXJ=DXSTAR+DJ*DCLWID
            IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
            FJ=XTEMP1(J)
            WRITE(ICOUT,594)J,DCLMNJ,DCLMXJ,FJ
  594       FORMAT('J,DCLMNJ,DCLMXJ,FJ = ',I8,3G15.7)
            CALL DPWRST('XXX','BUG ')
  593     CONTINUE
        ENDIF
C
C               **********************************
C               **  STEP 4--                    **
C               **  DETERMINE PLOT COORDINATES  **
C               **********************************
C
        DSUM=0.0D0
        IF(ICASPL.EQ.'BIRO' .OR. ICASPL.EQ.'CBIR')THEN
          DO1108J=1,NUMCLA
            FJ=SQRT(XTEMP1(J))
            DSUM=DSUM+DBLE(FJ)
 1108     CONTINUE
        ELSE
          DO1110J=1,NUMCLA
            FJ=XTEMP1(J)
            DSUM=DSUM+DBLE(FJ)
 1110     CONTINUE
        ENDIF
        DN3=DSUM
        AN3=DN3
C
        DENOM=1.0
        IF(IRELAT.EQ.'ON')THEN
          IF(IRHSTG.EQ.'PERC')THEN
            DENOM=DN3
          ELSE
            DENOM=DN3*DCLWID
          ENDIF
        ENDIF
C
        NSTRT=NPOINT+1
        DSUM=0.0D0
        DO1120J=1,NUMCLA
          K=J
          NPOINT=NPOINT+1
          D2(NPOINT)=ATAG
          DJ=J
          DCLMDJ=DXSTAR+(DJ-0.5D0)*DCLWID
          X2(NPOINT)=DCLMDJ
          FJ=XTEMP1(J)
          IF(ICASPL.EQ.'BIRO')FJ=SQRT(FJ)
C
          IF(IREPL.GT.2)THEN
            ABASE=Y2(NPOINT-NUMCLA)
          ELSE
            ABASE=0.0
          ENDIF
C
          IF(ICASPL.EQ.'BIHI' .OR. ICASPL.EQ.'BIRO')THEN
            Y2(NPOINT)=(FJ/DENOM) + ABASE
          ELSEIF(ICASPL.EQ.'CBIH')THEN
            IF(IRELAT.EQ.'ON' .AND. IRHSTG.EQ.'AREA')THEN
              Y2(NPOINT)=(FJ/DENOM) + ABASE
            ELSE
              DSUM=DSUM+FJ
              CUMFJ=(DSUM/DENOM)
              Y2(NPOINT)=CUMFJ + ABASE
            ENDIF
          ELSEIF(ICASPL.EQ.'CBIR')THEN
            IF(IRELAT.EQ.'ON' .AND. IRHSTG.EQ.'AREA')THEN
              Y2(NPOINT)=(SQRT(FJ)/DENOM) + ABASE
            ELSE
              DSUM=DSUM+FJ
              CUMFJ=(DSQRT(DSUM)/DENOM)
              Y2(NPOINT)=CUMFJ + ABASE
            ENDIF
          ENDIF
 1120   CONTINUE
C
C       FOR CUMULATIVE RELATIVE HISTOGRAM (AREA CASE), COMPUTE
C       CUMULATIVE INTEGRAL OF POINTS.
C
        IF((ICASPL.EQ.'CBIH' .OR. ICASPL.EQ.'CBIR') .AND.
     1    IRELAT.EQ.'ON' .AND. IRHSTG.EQ.'AREA')THEN
          NSTOP=NPOINT
          NTOT=NSTOP-NSTRT+1
          NJUNK=2
          IWRIT2='OFF'
          CALL CUMINT(Y2(NSTRT),X2(NSTRT),NTOT,NJUNK,IWRIT2,XTEMP1,
     1                IBUGG3,IERROR)
          IF(ICASPL.EQ.'CUMH')THEN
            DO1129II=NSTRT,NSTOP
              Y2(II)=XTEMP1(II)
 1129       CONTINUE
          ELSEIF(ICASPL.EQ.'CBIR')THEN
            DO1139II=NSTRT,NSTOP
              Y2(II)=SQRT(XTEMP1(II))
 1139       CONTINUE
          ENDIF
        ENDIF
C
  300 CONTINUE
C
      N2=NPOINT
      NPLOTV=2
C
      IF(IHSTEB.EQ.'OFF')THEN
        ICNT=0
        DO1140J=1,N2
          IF(Y2(J).GT.0.0)THEN
            ICNT=ICNT+1
            X2(ICNT)=X2(J)
            Y2(ICNT)=Y2(J)
            X3D(ICNT)=X3D(J)
            D2(ICNT)=D2(J)
          ENDIF
 1140   CONTINUE
        N2=ICNT
      ENDIF
C
      IF(ICASE.EQ.2)THEN
        DO2110I=N2SAVE+1,N2
          Y2(I)=-Y2(I)
 2110   CONTINUE
      ENDIF
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BIH2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBIH2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR,N2,AN3,DENOM
 9012   FORMAT('IERROR,N2,AN3,DENOM = ',A4,2X,I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,Y2(I),X2(I),D2(I)
 9016     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBIH3(Y1,X1HIGH,N1,Y2,X2HIGH,N2,
     1                  ICASPL,IRELAT,IHIGH,CLWID,XSTART,XSTOP,
     1                  XTEMP1,XTEMP2,MAXOBV,
     1                  IRHSTG,IHSTCW,IHSTEB,IHSTOU,
     1                  DCLWID,DXSTAR,DXSTOP,
     1                  Y3,X2,D2,N3,IFLAG,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--COMPUTE THE CLASS INTERVALS FOR THE BI-HISTOGRAM COMMAND
C              AND PERFORM BASIC ERROR CHECKING.  NOTE THAT THE CLASS
C              WIDTH WILL BE DETERMINED FROM THE COMBINED DATA.
C              NOTE THAT THE BIHISTOGRAM CURRENTLY ONLY WORKS ON RAW
C              DATA (I.E., PRE-BINNED DATA NOT SUPPORTED).
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/6
C     ORIGINAL VERSION--JUNE      2011. EXTRACTED FROM DPBIHI ROUTINE
C                                       SOME OPTIONS FROM STANDARD
C                                       HISTOGRAM INCORPORATED INTO
C                                       BIHISTOGRAM AS PART OF THIS
C                                       EXTENSION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IRELAT
      CHARACTER*4 IHIGH
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IRHSTG
      CHARACTER*4 IHSTCW
      CHARACTER*4 IHSTEB
      CHARACTER*4 IHSTOU
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
 
      DOUBLE PRECISION DCLWID
      DOUBLE PRECISION DXSTAR
      DOUBLE PRECISION DXSTOP
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION X1HIGH(*)
      DIMENSION X2HIGH(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION Y3(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBI'
      ISUBN2='S3  '
      IERROR='NO'
C
      IFLAG=0
      DCLWID=CLWID
      DXSTAR=XSTART
      DXSTOP=XSTOP
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N1.LT.2)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN BIHISTOGRAM--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE FIRST ',
     1         'RESPONSE VARIABLE MUST BE AT LEAST 2;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N1
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N2.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,42)
   42   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE SECOND ',
     1         'RESPONSE VARIABLE MUST BE AT LEAST 2;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N2
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     NOW COMBINE THE DATA
C
      DO50I=1,N1
        XTEMP1(I)=Y1(I)
   50 CONTINUE
      DO55I=1,N2
        XTEMP1(N1+I)=Y2(I)
   55 CONTINUE
      N=N1+N2
C
C     NOW CHECK TO SEE IF THERE IS A SINGLE VALUE
C
      HOLD=XTEMP1(1)
      DO60I=1,N1+N2
        IF(XTEMP1(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,61)
   61 FORMAT('***** WARNING IN BIHISTOGRAM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)
   62 FORMAT('      ALL INPUT HORIZONTAL AXIS ELEMENTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,63)HOLD
   63 FORMAT('      ARE IDENTICALLY EQUAL TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      DCLWID=2.0
      DXSTAR=HOLD-1.0
      DXSTOP=HOLD+1.0
C
C     HANDLE AS SPECIAL CASE
C
      IFLAG=1
      N3=6
      X2(1)=HOLD-1.0
      X2(2)=HOLD
      X2(3)=HOLD+1.0
      IF(IRELAT.EQ.'ON')THEN
        Y3(1)=0.0
        Y3(2)=1.0
        Y3(3)=0.0
      ELSE
        Y3(1)=0.0
        Y3(2)=REAL(N1)
        Y3(3)=0.0
      ENDIF
      D2(1)=1.0
      D2(2)=1.0
      D2(3)=1.0
C
      X2(4)=HOLD-1.0
      X2(5)=HOLD
      X2(6)=HOLD+1.0
      IF(IRELAT.EQ.'ON')THEN
        Y3(4)=0.0
        Y3(5)=-1.0
        Y3(6)=0.0
      ELSE
        Y3(4)=0.0
        Y3(5)=-REAL(N2)
        Y3(6)=0.0
      ENDIF
      D2(4)=2.0
      D2(5)=2.0
      D2(6)=2.0
C
      GOTO9000
C
   69 CONTINUE
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BIH3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPBIH3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,80)IRHSTG,IHIGH,IHSTCW,IHSTOU
   80   FORMAT('IRHSTG,IHIGH,IHSTCW,IHSTOU = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,81)ICASPL,IHSTEB
   81   FORMAT('ICASPL,IHSTEB = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,82)N1,N2,CLWID,XSTART,XSTOP
   82   FORMAT('N1,N2,CLWID,XSTART,XSTOP = ',2I8,3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO83I=1,N1
          WRITE(ICOUT,84)I,Y1(I),X1HIGH(I)
   84     FORMAT('I,Y1(I),X1HIGH(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   83   CONTINUE
        DO88I=1,N1
          WRITE(ICOUT,89)I,Y2(I),X2HIGH(I)
   89     FORMAT('I,Y2(I),X2HIGH(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   88   CONTINUE
      ENDIF
C
C               **********************************************
C               **  STEP 2--                                **
C               **  IF NECESSARY, DETERMINE CLASS WIDTH,    **
C               **  START VALUE, AND STOP VALUE.            **
C               **********************************************
C
      CALL DPBINZ(XTEMP1,N,CLWID,XSTART,XSTOP,
     1            XTEMP2,MAXOBV,IHSTCW,IHSTOU,
     1            DCLWID,DXSTAR,DXSTOP,
     1            ISUBRO,IBUGG3,IERROR)
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BIH3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBIH3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBIN(Y,N,IRELAT,CLWID,XSTART,XSTOP,IRHSTG,
CCCCC MARCH 2006: ADD FOLLOWING LINE TO ALLOW DIFFERENT
CCCCC             ALTERNATIVES TO BINNING
     1TEMP1,MAXNXT,IHSTCW,IHSTOU,
     1Y2,X2,N2,IBUGG3,IERROR)
C
C     PURPOSE--BIN A VARIABLE Y INTO X2 Y2.
C              THAT IS CONVERT RAW DATA TO FREQUENCY DATA.
C              BINNING CAN BE EITHER TO COUNTS OR TO RELATIVE
C              FREQUENCY.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--98/11
C     ORIGINAL VERSION--NOVEMBER  1998.
C     UPDATED         --MARCH     2006. SUPPORT FOR DIFFERENT
C                                       CLASS WIDTH ALGORITHMS
C     UPDATED         --JANUARY   2010. SET HISTOGRAM OUTLIERS
C     UPDATED         --JANUARY   2010. SPLIT CLASS WIDTH TO
C                                       DPBINZ
C     UPDATED         --JUNE      2016. BUG FIX FOR IQ RANGE METHOD
C     UPDATED         --JUNE      2016. LOWER AND UPPER CLASS LIMITS
C                                       FOR IQ RANGE METHOD
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IRELAT
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IRHSTG
      CHARACTER*4 IHSTCW
      CHARACTER*4 IHSTOU
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
 
      DOUBLE PRECISION DCLWID
      DOUBLE PRECISION DXSTAR
      DOUBLE PRECISION DXSTOP
      DOUBLE PRECISION DCLMNJ
      DOUBLE PRECISION DCLMDJ
      DOUBLE PRECISION DCLMXJ
      DOUBLE PRECISION DJ
      DOUBLE PRECISION DXI
      DOUBLE PRECISION DABSDE
      DOUBLE PRECISION DTOTWI
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION TEMP1(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBI'
      ISUBN2='N   '
      ISUBRO='XXXX'
C
      IERROR='NO'
C
      K=(-999)
      DCLMDJ=(-999.0D0)
C
      KP3=0
C
      AN3=0.0
      DENOM=0.0
C
      DCLWID=CLWID
      DXSTAR=XSTART
      DXSTOP=XSTOP
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN BINNING DATA (DPBIN)--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 1;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO60I=1,N
        IF(Y(I).NE.HOLD)GOTO69
   60 CONTINUE
      N2=3
      X2(1)=HOLD-1.0
      X2(2)=HOLD
      X2(3)=HOLD+1
      IF(IRELAT.EQ.'ON')THEN
        Y2(1)=0.0
        Y2(2)=1.0
        Y2(3)=0.0
      ELSE
        Y2(1)=0.0
        Y2(2)=REAL(N)
        Y2(3)=0.0
      ENDIF
      GOTO9000
   69 CONTINUE
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPBIN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)IRELAT,IRHSTG,IHSTCW
   71   FORMAT('IRELAT,IRHSTG,IHSTCW = ',3(A4,1X))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)N,CLWID,XSTART,XSTOP
   72   FORMAT('N,CLWID,XSTART,XSTOP = ',I6,3E15.7)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,Y(I)
   74     FORMAT('I, Y(I) = ',I8,E15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
      ENDIF
C
C               **********************************************
C               **  STEP 2--                                **
C               **  IF NECESSARY,                           **
C               **  DETERMINE CLASS WIDTH,                  **
C               **  START VALUE, STOP VALUE,                **
C               **  AND NUMBER OF CLASSES.                  **
C               **********************************************
C
C  MARCH 2006: ALLOW DIFFERENT DEFAULT BINNING ALGORITHMS (AS
C              SPECIFIED BY IHSTCW).
C
      CALL DPBINZ(Y,N,CLWID,XSTART,XSTOP,
     1            TEMP1,MAXNXT,IHSTCW,IHSTOU,
     1            DCLWID,DXSTAR,DXSTOP,
     1            ISUBRO,IBUGG3,IERROR)
C
      DTOTWI=DXSTOP-DXSTAR
      ANUMCL=DTOTWI/DCLWID
      NUMCLA=INT(ANUMCL+1.0+0.1)
C
      J=NUMCLA-1
      DJ=J
      DCLMXJ=DXSTAR+DJ*DCLWID
      DABSDE=DABS(DCLMXJ-DXSTOP)
      IF(DABSDE.LE.0.0001D0)NUMCLA=NUMCLA-1
C
      DO181I=1,NUMCLA
        X2(I)=0.0
        Y2(I)=0.0
  181 CONTINUE
C
C               *******************************************************
C               **  STEP 3--                                         **
C               **  DETERMINE THE FREQUENCY (COUNTS) FOR EACH CLASS  **
C               *******************************************************
C
      DO420I=1,N
      DXI=Y(I)
      DO430J=1,NUMCLA
      J2=J
      DJ=J
      DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
      DCLMXJ=DXSTAR+DJ*DCLWID
      IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
      IF(DCLMNJ.LE.DXI.AND.DXI.LT.DCLMXJ)GOTO440
  430 CONTINUE
      GOTO420
  440 CONTINUE
      Y2(J2)=Y2(J2)+1.0
  420 CONTINUE
C
C     FOR THIS RAW DATA CASE,
C     TREAT THE SPECIAL CASE OF EQUALITY
C     WITH THE UPPER LIMIT OF THE LAST (RIGHT-MOST) CLASS
C
      J=NUMCLA
      DO450I=1,N
      DJ=J
      DCLMXJ=DXSTAR+DJ*DCLWID
      IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
      DXI=Y(I)
      IF(DXI.EQ.DCLMXJ)Y2(J)=Y2(J)+1.0
  450 CONTINUE
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,591)
  591   FORMAT('***** IN THE MIDDLE    OF DPBIN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,592)DCLWID,DXSTAR,DXSTOP,DTOTWI,ANUMCL,NUMCLA
  592   FORMAT('DCLWID,DXSTAR,DXSTOP,DTOTWI,ANUMCL,NUMCLA= ',
     1        4D11.4,F10.0,I8)
        CALL DPWRST('XXX','BUG ')
        DO593J=1,NUMCLA
          DJ=J
          DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
          DCLMXJ=DXSTAR+DJ*DCLWID
          IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
          FJ=Y2(J)
          WRITE(ICOUT,594)J,DCLMNJ,DCLMXJ,FJ
  594     FORMAT('J,DCLMNJ,DCLMXJ,FJ = ',I8,2D15.7,E15.7)
          CALL DPWRST('XXX','BUG ')
  593   CONTINUE
      ENDIF
C
      SUM=0.0
      DO1110J=1,NUMCLA
      FJ=Y2(J)
      SUM=SUM+FJ
 1110 CONTINUE
      AN3=SUM
C
      DENOM=1.0
C
      IF(IRELAT.EQ.'ON')THEN
        IF(IRHSTG.EQ.'PERC')THEN
          DENOM=AN3
        ELSE
          DENOM=AN3*DCLWID
        ENDIF
      ENDIF
C
      DO1120J=1,NUMCLA
        K=J
        DJ=J
        DCLMDJ=DXSTAR+(DJ-0.5D0)*DCLWID
        FJ=Y2(J)
        X2(K)=DCLMDJ
        Y2(K)=FJ/DENOM
 1120 CONTINUE
      N2=K
C
      DO1130J=NUMCLA,1,-1
        IF(Y2(J).GT.0.0)THEN
          N2=J
          GOTO1139
        ENDIF
 1130 CONTINUE
      N2=1
 1139 CONTINUE
C
      DO1140J=1,N2
        IF(Y2(J).GT.0.0)THEN
          IFRST=J
          GOTO1149
        ENDIF
 1140 CONTINUE
      IFRST=1
 1149 CONTINUE
      K=0
      DO1150J=IFRST,N2
        K=K+1
        X2(K)=X2(J)
        Y2(K)=Y2(J)
 1150 CONTINUE
C
      IF(N2.LT.NUMCLA)THEN
        DO1160I=N2+1,NUMCLA
          Y2(I)=0.0
          X2(I)=0.0
 1160   CONTINUE
      ENDIF
      N2=K
      GOTO9000
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBIN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IRELAT,IERROR,N2
 9012   FORMAT('IRELAT,IERROR,N2 = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)AN3,DENOM
 9013   FORMAT('AN3,DENOM = ',E15.8,E15.8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,X2(I),Y2(I)
 9016     FORMAT('I,X2(I),Y2(I) = ',I8,E15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        WRITE(ICOUT,9017)N,DCLWID,DXSTAR,DXSTOP
 9017   FORMAT('N,DCLWID,DXSTAR,DXSTOP = ',I6,3D15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBINA(Y,N,CLWID,XSTART,XSTOP,M,
     1XTEMP1,MAXOBV,
     1IRELAT,IASHWT,IHSTCW,
     1Y2,X2,N2,IBUGG3,IERROR)
C
C     PURPOSE--COMPUTE HISTOGRAM BINS USING THE "AVERAGE SHIFTED
C              HISTOGRAM" (ASH) ALGORITHM DOCUMENTED BY DAVID SCOTT,
C              1992, "MULTIVARIATE DENSITY ESTIMATION: THEORY,
C              PRACTICE, AND VISUALIZATION", WILEY, CHAPTER 5.
C              WE IMPLEMENT THE ALGORITHMS BIN1 AND ASH1 GIVEN ON
C              PAGES 117-118.  THE BINNED DATA IS RETURNED IN
C              Y2 AND X2.
C
C              NOTE THAT SINCE THE ASH BINNING IS INTENDED TO BE A
C              SIMPLE DENSITY ESTIMATOR, THIS ALGORITHM IS
C              IMPLEMENTED FOR THE "RELATIVE FREQUENCY" CASE, NOT
C              RAW COUNTS.
C
C              THE BASIC IDEA IS:
C
C              1) GIVEN A CLASS WIDTH OF H
C              2) CHOOSE M WHERE WE CONSTRUCT A COLLECTION OF M
C                 HISTOGRAMS, EACH WITH A CLASS WIDTH OF H, BUT
C                 WITH START POINTS
C                 t0 = 0, h/m, 2*h/m, ... , (m-1)*h/m
C              3) THIS RESULTS IN A SMOOTHED HISTOGRAM WITH
C                 A BIN WIDTH OF DELTA=H/M.  HIGHER VALUES OF M
C                 RESULT IN A SMOOTHER ESTIMATE.  VALUES OF M ARE
C                 TYPICALLY IN THE RANGE 4 TO 32.  IN THIS
C                 SUBROUTINE, VALUES OF M < 1 ARE SET TO 1 AND
C                 VALUES OF M > 64 ARE SET TO 64.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2004/9
C     ORIGINAL VERSION--SEPTEMBER 2004.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      PARAMETER(MAXM=64)
C
      CHARACTER*4 IBUGG3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRIT2
      CHARACTER*4 IRELAT
      CHARACTER*4 IASHWT
      CHARACTER*4 IHSTCW
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
 
      DOUBLE PRECISION DCLWID
      DOUBLE PRECISION DXSTAR
      DOUBLE PRECISION DXSTOP
      DOUBLE PRECISION DH
      DOUBLE PRECISION DELTA
      DOUBLE PRECISION DX
      DOUBLE PRECISION DNBIN
      DOUBLE PRECISION DN
C
C-----------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION XTEMP1(*)
C
      DIMENSION WTM(2*MAXM)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBI'
      ISUBN2='N   '
      IERROR='NO'
C
      DCLWID=CLWID
      DXSTAR=XSTART
      DXSTOP=XSTOP
      XMEAN=CPUMIN
      XSD=CPUMIN
      XMIN=CPUMIN
      XMAX=CPUMIN
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LE.5)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN AVERAGE SHIFTED HISTOGRAM BINNING--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 5;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(M.LT.1 .OR. M.GT.MAXM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,42)
   42   FORMAT('      THE VALUE OF THE M PARAMETER MUST BE AT ',
     1         'LEAST 1 AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,44)MAXM
   44   FORMAT('      LESS THAN OR EQUAL TO ',I5,' (RECOMMENDED ',
     1         'VALUES ARE 4, 8, 16, OR 32).')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,46)M
   46   FORMAT('      THE ENTERED VALUE OF M HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO60I=1,N
        IF(Y(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,31)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)HOLD
   62 FORMAT('      ALL INPUT OBSERVATIONS ARE IDENTICALLY EQUAL ',
     1       'TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   69 CONTINUE
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPBINA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)N,M,CLWID,XSTART,XSTOP
   71   FORMAT('N,M,CLWID,XSTART,XSTOP = ',2I6,3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)IASHWT
   72   FORMAT('IASHWT = ',A4)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,Y(I)
   74     FORMAT('I, Y(I) = ',I8,E15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
      ENDIF
C
C               ***********************************
C               **  STEP 2--                     **
C               **  IF NECESSARY, DETERMINE:     **
C               **  1) CLASS WIDTH               **
C               **  2) START VALUE               **
C               **  3) STOP VALUE                **
C               **  4) NUMBER OF BINS            **
C               ***********************************
C
      IF(CLWID.EQ.CPUMIN.OR.XSTART.EQ.CPUMIN.OR.
     1XSTOP.EQ.CPUMAX)THEN
        IWRIT2='OFF'
        CALL MEAN(Y,N,IWRIT2,XMEAN,IBUGG3,IERROR)
        CALL SD(Y,N,IWRIT2,XSD,IBUGG3,IERROR)
        CALL MINIM(Y,N,IWRIT2,XMIN,IBUGG3,IERROR)
        CALL MAXIM(Y,N,IWRIT2,XMAX,IBUGG3,IERROR)
        IF(IHSTCW.EQ.'DEFA')THEN
          IF(CLWID.EQ.CPUMIN)DCLWID=0.3*XSD
        ELSEIF(IHSTCW.EQ.'NORM')THEN
          IF(CLWID.EQ.CPUMIN)DCLWID=3.5*XSD/(REAL(N)**(1./3.))
        ELSEIF(IHSTCW.EQ.'NCOR')THEN
          IF(CLWID.EQ.CPUMIN)THEN
            CALL STMOM3(Y,N,IWRIT2,XSKEW,IBUGG3,IERROR)
            CALL STMOM4(Y,N,IWRIT2,XKURT,IBUGG3,IERROR)
            TERM1=3.5*XSD/(REAL(N)**(1./3.))
            IF(XSKEW.GT.0.0 .AND. XSKEW.LT.3.0)THEN
              TERM2=1.0/(1.0 - 0.0060*XSKEW + 0.27*XSKEW**2 -
     1              0.0069*XSKEW**3)
            ELSE
              TERM2=1.0
            ENDIF
            XKURT=XKURT - 3.0
            IF(XKURT.GT.0.0 .AND. XKURT.LT.6.0)THEN
              TERM3=1.0 - 0.2*(1.0 - EXP(-0.7*XKURT))
            ELSE
              TERM3=1.0
            ENDIF
            DCLWID=DBLE(TERM1*TERM2*TERM3)
          ENDIF
        ELSEIF(IHSTCW.EQ.'IQ  ')THEN
          CALL LOWQUA(Y,N,IWRIT2,XTEMP1,MAXOBV,XLOWQ,IBUGG3,IERROR)
          CALL UPPQUA(Y,N,IWRIT2,XTEMP1,MAXOBV,XUPPQ,IBUGG3,IERROR)
          XIQ=XUPPQ - XLOWQ
          IF(CLWID.EQ.CPUMIN)DCLWID=2.603*XIQ/(REAL(N)**(1./3.))
        ELSE
          IF(CLWID.EQ.CPUMIN)DCLWID=0.3*XSD
        ENDIF
C
        IF(XSTART.EQ.CPUMIN)THEN
CCCCC     DXSTAR=XMEAN-6.0*XSD
          ABIN=ABS((XMEAN-XMIN)/REAL(DCLWID))
          IBINL=INT(ABIN+1.0)
          DXSTAR=DBLE(XMEAN)-DBLE(IBINL)*DCLWID
        ELSE
          ABIN=ABS((XMEAN-XSTART)/REAL(DCLWID))
          IBINL=INT(ABIN+1.0)
          DXSTAR=DBLE(XMEAN)-DBLE(IBINL)*DCLWID
        ENDIF
        IF(XSTOP.EQ.CPUMAX)THEN
CCCCCC    DXSTOP=XMEAN+6.0*XSD
          ABIN=ABS((XMAX-XMEAN)/REAL(DCLWID))
          IBINU=INT(ABIN+1.0)
          DXSTOP=DBLE(XMEAN)+DBLE(IBINU)*DCLWID
        ELSE
          ABIN=ABS((XSTOP-XMEAN)/REAL(DCLWID))
          IBINU=INT(ABIN+1.0)
          DXSTOP=DBLE(XMEAN)+DBLE(IBINU)*DCLWID
        ENDIF
        NBIN=IBINL + IBINU
      ELSE
        ABIN=(XMEAN-XSTART)/REAL(DCLWID)
        IBINL=INT(ABIN+1.0)
        DXSTAR=DBLE(XMEAN)-DBLE(IBINL)*DCLWID
C
        ABIN=(XSTOP-XMEAN)/REAL(DCLWID)
        IBINU=INT(ABIN+1.0)
        DXSTOP=DBLE(XMEAN)+DBLE(IBINU)*DCLWID
C
        NBIN=IBINL + IBINU
      ENDIF
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,170)
  170   FORMAT('***** MIDDLE OF DPBINA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,171)XMEAN,XSD,XMIN,XMAX
  171   FORMAT('XMEAN,XSD,XMIN,XMAX = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,172)DCLWID,DXSTAR,DXSTOP
  172   FORMAT('DCLWID,DXSTAR,DXSTOP = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***********************************************
C               **  STEP 3--                                 **
C               **  IMPLEMENT BIN1 ALGORITHM FROM PAGE 117.  **
C               ***********************************************
C
      DELTA=DCLWID/DBLE(M)
      NBIN=INT((DXSTOP-DXSTAR)/DELTA + 0.5D0)
      DNBIN=DBLE(NBIN)
      DO410I=1,NBIN
        Y2(I)=0.0
  410 CONTINUE
C
      DO420I=1,N
        DX=DBLE(Y(I))
        DK=((DX - DXSTAR)/DELTA) + 1.0D0
        IK=INT(DK)
        IF(IK.GE.1 .AND. IK.LE.NBIN)Y2(IK)=Y2(IK)+1.0
  420 CONTINUE
C
      IF(IRELAT.EQ.'OFF')THEN
        DO430I=1,NBIN
          X2(I)=REAL(DXSTAR + (DBLE(I)-0.5D0)*DELTA)
  430   CONTINUE
        N2=NBIN
        GOTO9000
      ENDIF
C
C               ***********************************************
C               **  STEP 4--                                 **
C               **  IMPLEMENT ASH1 ALGORITHM FROM PAGE 118.  **
C               ***********************************************
C
      IF(IASHWT.EQ.'BIWE')THEN
        ISTRT=1-M
        ISTOP=M-1
        ASUM=0.0
        DO510I=ISTRT,ISTOP
          T=REAL(I)/REAL(M)
          IF(-1.0.LE.T .AND. T.LE.1.0)THEN
            ASUM=ASUM + (15./16.)*(1.0-T**2)**2
          ENDIF
  510   CONTINUE
C
        DO520I=ISTRT,ISTOP
          T=REAL(I)/REAL(M)
          IF(-1.0.LE.T .AND. T.LE.1.0)THEN
            TERM1=(15./16.)*(1.0-T**2)**2
          ELSE
            TERM1=0.0
          ENDIF
          WTM(I+M+1)=REAL(M)*TERM1/ASUM
  520   CONTINUE
      ELSE
        ISTRT=1-M
        ISTOP=M-1
        DO560I=ISTRT,ISTOP
          WTM(I+M)=1.0 - ABS(REAL(I))/REAL(M)
  560   CONTINUE
      ENDIF
C
      DH=DBLE(M)*DELTA
      DO610I=1,NBIN
        XTEMP1(I)=0.0
  610 CONTINUE
C
      DO620K=1,NBIN
        IF(Y2(K).GT.0.0)THEN
          IFRST=MAX(1,K-M+1)
          ILAST=MIN(NBIN,K+M-1)
          IF(ILAST.GE.IFRST)THEN
            DO630I=IFRST,ILAST
              XTEMP1(I)= XTEMP1(I) + Y2(K)*WTM(I-K+M)
  630       CONTINUE
          ENDIF
        ENDIF
  620 CONTINUE
C
      DN=DBLE(N)
      DO680I=1,NBIN
        Y2(I)=XTEMP1(I)/(REAL(DH*DN))
        X2(I)=REAL(DXSTAR + (DBLE(I)-0.5D0)*DELTA)
  680 CONTINUE
      N2=NBIN
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBINA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IRELAT,IERROR,N2
 9012   FORMAT('IRELAT,IERROR,N2 = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,X2(I),Y2(I)
 9016     FORMAT('I,X2(I),Y2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        DO9025I=1,M
          WRITE(ICOUT,9026)I,WTM(I)
 9026     FORMAT('I,WTM(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
 9025   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBINC(Y,N,IRELAT,CLWID,XSTART,XSTOP,IRHSTG,
     1                  TEMP1,MAXNXT,IHSTCW,IHSTOU,
     1                  Y2,X2,N2,YCODE,
     1                  ISUBRO,IBUGG3,IERROR)
C
C     PURPOSE--THIS ROUTINE IS SIMILAR TO DPBIN IN THAT IT WILL BIN A
C              VARIABLE Y INTO X2 Y2 (THAT IS CONVERT RAW DATA TO
C              FREQUENCY DATA).  HOWEVER, IT THEN TAKES AN ADDITIONAL
C              STEP TO GENERATE A CODED VARIABLE THAT IDENTIFIES THE
C              THE BIN THAT EACH OF THE ORIGINAL POINTS FALLS INTO.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2012/11
C     ORIGINAL VERSION--NOVEMBER  2012.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IRELAT
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IRHSTG
      CHARACTER*4 IHSTCW
      CHARACTER*4 IHSTOU
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
 
      DOUBLE PRECISION DCLWID
      DOUBLE PRECISION DXSTAR
      DOUBLE PRECISION DXSTOP
      DOUBLE PRECISION DCLMNJ
      DOUBLE PRECISION DCLMDJ
      DOUBLE PRECISION DCLMXJ
      DOUBLE PRECISION DJ
      DOUBLE PRECISION DXI
      DOUBLE PRECISION DABSDE
      DOUBLE PRECISION DTOTWI
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION TEMP1(*)
      DIMENSION YCODE(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBI'
      ISUBN2='NC  '
      IERROR='NO'
C
      HOLD=CPUMIN
C
      IF(IBUGG3.EQ.'ON' .OR.ISUBRO.EQ.'BINC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,50)
   50   FORMAT('***** AT THE BEGINNING OF DPBINC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)IRELAT,IRHSTG,IHSTCW
   51   FORMAT('IRELAT,IRHSTG,IHSTCW = ',3(A4,1X))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)N,CLWID,XSTART,XSTOP
   52   FORMAT('N,CLWID,XSTART,XSTOP = ',I6,3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO53I=1,N
          WRITE(ICOUT,54)I,Y(I)
   54     FORMAT('I, Y(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   53   CONTINUE
      ENDIF
C
      DO59I=1,N
        YCODE(I)=1.0
   59 CONTINUE
      K=(-999)
      DCLMDJ=(-999.0D0)
      KP3=0
      AN3=0.0
      DENOM=0.0
      DCLWID=CLWID
      DXSTAR=XSTART
      DXSTOP=XSTOP
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN BINNING CODED--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 1;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSEIF(N.EQ.1)THEN
        N2=1
        X2(1)=HOLD
        Y2(1)=1.0
        YCODE(1)=1.0
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO60I=1,N
        IF(Y(I).NE.HOLD)GOTO69
   60 CONTINUE
      N2=3
      X2(1)=HOLD-1.0
      X2(2)=HOLD
      X2(3)=HOLD+1
      IF(IRELAT.EQ.'ON')THEN
        Y2(1)=0.0
        Y2(2)=1.0
        Y2(3)=0.0
      ELSE
        Y2(1)=0.0
        Y2(2)=REAL(N)
        Y2(3)=0.0
      ENDIF
      DO67I=1,N
        YCODE(I)=1.0
   67 CONTINUE
      GOTO9000
   69 CONTINUE
C
C
C               **********************************************
C               **  STEP 2--                                **
C               **  IF NECESSARY,                           **
C               **  DETERMINE CLASS WIDTH,                  **
C               **  START VALUE, STOP VALUE,                **
C               **  AND NUMBER OF CLASSES.                  **
C               **********************************************
C
      CALL DPBINZ(Y,N,CLWID,XSTART,XSTOP,
     1            TEMP1,MAXNXT,IHSTCW,IHSTOU,
     1            DCLWID,DXSTAR,DXSTOP,
     1            ISUBRO,IBUGG3,IERROR)
C
      DTOTWI=DXSTOP-DXSTAR
      ANUMCL=DTOTWI/DCLWID
      NUMCLA=INT(ANUMCL+1.0+0.1)
C
      J=NUMCLA-1
      DJ=J
      DCLMXJ=DXSTAR+DJ*DCLWID
      DABSDE=DABS(DCLMXJ-DXSTOP)
      IF(DABSDE.LE.0.0001D0)NUMCLA=NUMCLA-1
C
      DO181I=1,NUMCLA
        X2(I)=0.0
        Y2(I)=0.0
  181 CONTINUE
C
C               *******************************************************
C               **  STEP 3--                                         **
C               **  DETERMINE THE FREQUENCY (COUNTS) FOR EACH CLASS  **
C               *******************************************************
C
      DO420I=1,N
        DXI=Y(I)
        DO430J=1,NUMCLA
          J2=J
          DJ=J
          DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
          DCLMXJ=DXSTAR+DJ*DCLWID
          IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
          IF(DCLMNJ.LE.DXI.AND.DXI.LT.DCLMXJ)THEN
            Y2(J2)=Y2(J2)+1.0
            GOTO420
          ENDIF
  430   CONTINUE
  420 CONTINUE
C
C     FOR THIS RAW DATA CASE,
C     TREAT THE SPECIAL CASE OF EQUALITY
C     WITH THE UPPER LIMIT OF THE LAST (RIGHT-MOST) CLASS
C
      J=NUMCLA
      DO450I=1,N
        DJ=J
        DCLMXJ=DXSTAR+DJ*DCLWID
        IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
        DXI=Y(I)
        IF(DXI.EQ.DCLMXJ)Y2(J)=Y2(J)+1.0
  450 CONTINUE
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BINC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,591)
  591   FORMAT('***** IN THE MIDDLE    OF DPBINC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,592)DCLWID,DXSTAR,DXSTOP,DTOTWI,ANUMCL,NUMCLA
  592   FORMAT('DCLWID,DXSTAR,DXSTOP,DTOTWI,ANUMCL,NUMCLA= ',
     1        4D11.4,F10.0,I8)
        CALL DPWRST('XXX','BUG ')
        DO593J=1,NUMCLA
          DJ=J
          DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
          DCLMXJ=DXSTAR+DJ*DCLWID
          IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
          FJ=Y2(J)
          WRITE(ICOUT,594)J,DCLMNJ,DCLMXJ,FJ
  594     FORMAT('J,DCLMNJ,DCLMXJ,FJ = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
  593   CONTINUE
      ENDIF
C
      SUM=0.0
      DO1110J=1,NUMCLA
        FJ=Y2(J)
        SUM=SUM+FJ
 1110 CONTINUE
      AN3=SUM
C
      DENOM=1.0
C
      IF(IRELAT.EQ.'ON')THEN
        IF(IRHSTG.EQ.'PERC')THEN
          DENOM=AN3
        ELSE
          DENOM=AN3*DCLWID
        ENDIF
      ENDIF
C
      DO1120J=1,NUMCLA
        K=J
        DJ=J
        DCLMDJ=DXSTAR+(DJ-0.5D0)*DCLWID
        FJ=Y2(J)
        X2(K)=DCLMDJ
        Y2(K)=FJ/DENOM
 1120 CONTINUE
      N2=K
C
      DO1130J=NUMCLA,1,-1
        IF(Y2(J).GT.0.0)THEN
          N2=J
          GOTO1139
        ENDIF
 1130 CONTINUE
      N2=1
 1139 CONTINUE
C
      DO1140J=1,N2
        IF(Y2(J).GT.0.0)THEN
          IFRST=J
          GOTO1149
        ENDIF
 1140 CONTINUE
      IFRST=1
 1149 CONTINUE
      DJ=DBLE(IFRST)
      DXSTAR=DXSTAR+(DJ-1.0D0)*DCLWID
      K=0
      DO1150J=IFRST,N2
        K=K+1
        X2(K)=X2(J)
        Y2(K)=Y2(J)
 1150 CONTINUE
C
      IF(N2.LT.NUMCLA)THEN
        DO1160I=N2+1,NUMCLA
          Y2(I)=0.0
          X2(I)=0.0
 1160   CONTINUE
      ENDIF
      N2=K
C
C
C               *******************************************************
C               **  STEP 4--                                         **
C               **  NOW DETERMINE WHICH BIN EACH DATA POINT FALLS IN **
C               *******************************************************
C
      DO2050I=1,N
        DO2060J=1,N2
          DJ=J
          DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
          DCLMXJ=DXSTAR+DJ*DCLWID
          IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
          IF(Y(I).GE.DCLMNJ .AND. Y(I).LE.DCLMXJ)THEN
            YCODE(I)=REAL(J)
            GOTO2069
          ENDIF
 2060   CONTINUE
 2069   CONTINUE
 2050 CONTINUE
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BINC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBINC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IERROR,N2,IFRST,ILAST,AN3,DENOM
 9013   FORMAT('IERROR,N2,IFRST,ILAST,AN3,DENOM = ',A4,2X,3I8,2X,2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,X2(I),Y2(I)
 9016     FORMAT('I,X2(I),Y2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        DO9017I=1,N
          WRITE(ICOUT,9018)I,YCODE(I)
 9018     FORMAT('I,YCODE(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
 9017   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBINI(Y,N,IRELAT,CLWID,XSTART,XSTOP,IRHSTG,
     1Y2,X2,N2,IBUGG3,IERROR)
C
C     PURPOSE--BIN A VARIABLE Y INTO X2 Y2.
C              THAT IS CONVERT RAW DATA TO FREQUENCY DATA.
C              BINNING IS TO COUNTS (AND NOT TO RELATIVE)
C              FREQUENCY.
C              THIS IS A SPECIFAL FORM OF BINNING WHERE THE
C              BINS ARE THE INTEGERS FROM THE MINIMUM TO THE MAXIMUM
C              VALUE.  THIS ROUTINE IS USED TO BIN FOR GOODNESS OF
C              FIT TESTS FOR DISCRETE DISTRIBUTIONS.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--98/11
C     ORIGINAL VERSION--NOVEMBER  1998.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IRELAT
      CHARACTER*4 IBUGG3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRIT2
      CHARACTER*4 IRHSTG
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
 
      DOUBLE PRECISION DCLWID
      DOUBLE PRECISION DXSTAR
      DOUBLE PRECISION DXSTOP
      DOUBLE PRECISION DCLMNJ
      DOUBLE PRECISION DCLMDJ
      DOUBLE PRECISION DCLMXJ
      DOUBLE PRECISION DJ
      DOUBLE PRECISION DXI
      DOUBLE PRECISION DABSDE
      DOUBLE PRECISION DTOTWI
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBI'
      ISUBN2='NI  '
C
      IERROR='NO'
C
      K=(-999)
      DCLMDJ=(-999.0D0)
C
      KP3=0
C
      AN3=0.0
      DENOM=0.0
C
      DCLWID=CLWID
      DXSTAR=XSTART
      DXSTOP=XSTOP
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.GE.1)GOTO39
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,31)
   31 FORMAT('***** ERROR IN DPBINI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,32)
   32 FORMAT('      THE NUMBER OF OBSERVATIONS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,33)
   33 FORMAT('      MUST BE AT LEAST 1;')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,34)N
   34 FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   39 CONTINUE
C
      IF(N.GE.2)GOTO49
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,46)
   46 FORMAT('***** ERROR IN DPBINI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,47)
   47 FORMAT('      THE NUMBER OF OBSERVATIONS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,48)
   48 FORMAT('      WAS EXACTLY EQUAL TO 1.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   49 CONTINUE
C
      HOLD=Y(1)
      DO60I=1,N
      IF(Y(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,61)
   61 FORMAT('***** ERROR IN DPBINI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)
   62 FORMAT('      ALL INPUT AXIS ELEMENTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,63)HOLD
   63 FORMAT('      ARE IDENTICALLY EQUAL TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   69 CONTINUE
C
      IF(IBUGG3.EQ.'OFF')GOTO80
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,70)
   70 FORMAT('***** AT THE BEGINNING OF DPBINI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,72)N,CLWID,XSTART,XSTOP
   72 FORMAT('N,CLWID,XSTART,XSTOP = ',I6,3E15.7)
      CALL DPWRST('XXX','BUG ')
      DO73I=1,N
      WRITE(ICOUT,74)I,Y(I)
   74 FORMAT('I, Y(I) = ',I8,E15.7)
      CALL DPWRST('XXX','BUG ')
   73 CONTINUE
   80 CONTINUE
C
C               **********************************************
C               **  STEP 2--                                **
C               **  IF NECESSARY,                           **
C               **  DETERMINE CLASS WIDTH,                  **
C               **  START VALUE, STOP VALUE,                **
C               **  AND NUMBER OF CLASSES.                  **
C               **********************************************
C
      IF(CLWID.NE.CPUMIN.AND.XSTART.NE.CPUMIN.AND.
     1XSTOP.NE.CPUMAX)GOTO119
      IWRIT2='OFF'
      CALL MINIM(Y,N,IWRIT2,YMIN,IBUGG3,IERROR)
      CALL MAXIM(Y,N,IWRIT2,YMAX,IBUGG3,IERROR)
      IF(CLWID.EQ.CPUMIN)DCLWID=1.0
      IF(XSTART.EQ.CPUMIN)DXSTAR=REAL(INT(YMIN+0.5))-0.5
      IF(XSTOP.EQ.CPUMAX)DXSTOP=REAL(INT(YMAX+0.5))+0.5
  119 CONTINUE
C
      DO181I=1,N
        X2(I)=0.0
        Y2(I)=0.0
  181 CONTINUE
      DTOTWI=DXSTOP-DXSTAR
      ANUMCL=DTOTWI/DCLWID
      NUMCLA=INT(ANUMCL+1.0+0.1)
C
      J=NUMCLA-1
      DJ=J
      DCLMXJ=DXSTAR+DJ*DCLWID
      DABSDE=DABS(DCLMXJ-DXSTOP)
      IF(DABSDE.LE.0.0001D0)NUMCLA=NUMCLA-1
C
C               *******************************************************
C               **  STEP 3--                                         **
C               **  DETERMINE THE FREQUENCY (COUNTS) FOR EACH CLASS  **
C               *******************************************************
C
      DO420I=1,N
      DXI=Y(I)
      DO430J=1,NUMCLA
      J2=J
      DJ=J
      DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
      DCLMXJ=DXSTAR+DJ*DCLWID
      IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
      IF(DCLMNJ.LE.DXI.AND.DXI.LT.DCLMXJ)GOTO440
  430 CONTINUE
      GOTO420
  440 CONTINUE
      Y2(J2)=Y2(J2)+1.0
  420 CONTINUE
C
C     FOR THIS RAW DATA CASE,
C     TREAT THE SPECIAL CASE OF EQUALITY
C     WITH THE UPPER LIMIT OF THE LAST (RIGHT-MOST) CLASS
C
      J=NUMCLA
      DO450I=1,N
      DJ=J
      DCLMXJ=DXSTAR+DJ*DCLWID
      IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
      DXI=Y(I)
      IF(DXI.EQ.DCLMXJ)Y2(J)=Y2(J)+1.0
  450 CONTINUE
C
      IF(IBUGG3.EQ.'OFF')GOTO595
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,591)
  591 FORMAT('***** IN THE MIDDLE    OF DPBINI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,592)DCLWID,DXSTAR,DXSTOP,DTOTWI,ANUMCL,NUMCLA
  592 FORMAT('DCLWID,DXSTAR,DXSTOP,DTOTWI,ANUMCL,NUMCLA= ',
     14D11.4,F10.0,I8)
      CALL DPWRST('XXX','BUG ')
      DO593J=1,NUMCLA
      DJ=J
      DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
      DCLMXJ=DXSTAR+DJ*DCLWID
      IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
      FJ=Y2(J)
      WRITE(ICOUT,594)J,DCLMNJ,DCLMXJ,FJ
  594 FORMAT('J,DCLMNJ,DCLMXJ,FJ = ',I8,2D15.7,E15.7)
      CALL DPWRST('XXX','BUG ')
  593 CONTINUE
  595 CONTINUE
C
      SUM=0.0
      DO1110J=1,NUMCLA
      FJ=Y2(J)
      SUM=SUM+FJ
 1110 CONTINUE
      AN3=SUM
C
      DENOM=1.0
C
      IF(IRELAT.EQ.'ON')THEN
        IF(IRHSTG.EQ.'PERC')THEN
          DENOM=AN3
        ELSE
          DENOM=AN3*DCLWID
        ENDIF
      ENDIF
C
      DO1120J=1,NUMCLA
        K=J
        DJ=J
        DCLMDJ=DXSTAR+(DJ-0.5D0)*DCLWID
        X2(K)=REAL(DCLMDJ)
        FJ=Y2(K)
        Y2(K)=FJ/DENOM
 1120 CONTINUE
      N2=K
C
      DO1130J=NUMCLA,1,-1
        IF(Y2(J).GT.0.0)THEN
          N2=J
          GOTO1139
        ENDIF
 1130 CONTINUE
      N2=1
 1139 CONTINUE
C
      DO1140J=1,N2
        IF(Y2(J).GT.0.0)THEN
          IFRST=J
          GOTO1149
        ENDIF
 1140 CONTINUE
      IFRST=1
 1149 CONTINUE
      K=0
      DO1150J=IFRST,N2
        K=K+1
        X2(K)=X2(J)
        Y2(K)=Y2(J)
 1150 CONTINUE
C
      IF(N2.LT.NUMCLA)THEN
        DO1160I=N2+1,NUMCLA
          Y2(I)=0.0
          X2(I)=0.0
 1160   CONTINUE
      ENDIF
      N2=K
      GOTO9000
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'OFF')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBINI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IRELAT,IERROR,N2
 9012 FORMAT('IRELAT,IERROR,N2 = ',A4,2X,A4,2X,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)AN3,DENOM
 9013 FORMAT('AN3,DENOM = ',E15.8,E15.8)
      CALL DPWRST('XXX','BUG ')
      DO9015I=1,N2
      WRITE(ICOUT,9016)I,X2(I),Y2(I)
 9016 FORMAT('I,X2(I),Y2(I) = ',I8,E15.7,F9.2)
      CALL DPWRST('XXX','BUG ')
 9015 CONTINUE
      WRITE(ICOUT,9017)N,DCLWID,DXSTAR,DXSTOP
 9017 FORMAT('N,DCLWID,DXSTAR,DXSTOP = ',I6,3D15.7)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBINP(Y,N,IRELAT,CLWID,XSTART,XSTOP,IRHSTG,
     1                  TEMP1,DIFFY2,Y3,X3,MAXNXT,IHSTCW,
     1                  Y2,X2,N2,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--BIN A VARIABLE Y INTO X2 Y2.  THEN THIN BY EXTRACTING THE
C              "PEAKS" IN THE FREQUENCY TABLE.  PEAKS ARE DETERMINED BY:
C
C              STEP 1: DIFFERENCE THE FREQUENCY COUNTS
C              STEP 2: WHERE THE DIFFERENCES CHANGE SIGN INDICATES
C                      A PEAK.
C
C              BINNING CAN BE EITHER TO COUNTS OR TO RELATIVE
C              FREQUENCY.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/5
C     ORIGINAL VERSION--MAY       2008.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IRELAT
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRIT2
      CHARACTER*4 IRHSTG
      CHARACTER*4 IHSTCW
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTAT
C
C---------------------------------------------------------------------
 
      DOUBLE PRECISION DCLWID
      DOUBLE PRECISION DXSTAR
      DOUBLE PRECISION DXSTOP
      DOUBLE PRECISION DCLMNJ
      DOUBLE PRECISION DCLMDJ
      DOUBLE PRECISION DCLMXJ
      DOUBLE PRECISION DJ
      DOUBLE PRECISION DXI
      DOUBLE PRECISION DABSDE
      DOUBLE PRECISION DTOTWI
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION TEMP1(*)
      DIMENSION DIFFY2(*)
      DIMENSION Y3(*)
      DIMENSION X3(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBI'
      ISUBN2='NP  '
      IERROR='NO'
      ISTAT='DIFF'
C
      KP3=0
      K=(-999)
      DCLMDJ=(-999.0D0)
C
      AN3=0.0
      DENOM=0.0
      DCLWID=CLWID
      DXSTAR=XSTART
      DXSTOP=XSTOP
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LE.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN BINNING DATA (DPBINP)--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 2;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO60I=1,N
        IF(Y(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,31)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)HOLD
   62 FORMAT('      ALL INPUT DATA ELEMENTS ARE IDENTICALLY EQUAL ',
     1       'TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   69 CONTINUE
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BINP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPBINP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)IRELAT,IRHSTG,IHSTCW
   71   FORMAT('IRELAT,IRHSTG,IHSTCW = ',3(A4,1X))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)N,MAXNXT,CLWID,XSTART,XSTOP
   72   FORMAT('N,MAXNXT,CLWID,XSTART,XSTOP = ',2I8,3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,Y(I)
   74     FORMAT('I, Y(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
      ENDIF
C
C               **********************************************
C               **  STEP 2--                                **
C               **  IF NECESSARY,                           **
C               **  DETERMINE CLASS WIDTH,                  **
C               **  START VALUE, STOP VALUE,                **
C               **  AND NUMBER OF CLASSES.                  **
C               **********************************************
C
C  ALLOW DIFFERENT DEFAULT BINNING ALGORITHMS (AS
C  SPECIFIED BY IHSTCW).
C
      IF(CLWID.EQ.CPUMIN.OR.XSTART.EQ.CPUMIN.OR.
     1  XSTOP.EQ.CPUMAX)THEN
        IWRIT2='OFF'
        CALL MEAN(Y,N,IWRIT2,XMEAN,IBUGG3,IERROR)
        CALL SD(Y,N,IWRIT2,XSD,IBUGG3,IERROR)
C
        IF(IHSTCW.EQ.'DEFA')THEN
          IF(CLWID.EQ.CPUMIN)DCLWID=0.3*XSD
        ELSEIF(IHSTCW.EQ.'NORM')THEN
          IF(CLWID.EQ.CPUMIN)DCLWID=3.5*XSD/(REAL(N)**(1./3.))
        ELSEIF(IHSTCW.EQ.'NCOR')THEN
          IF(CLWID.EQ.CPUMIN)THEN
            CALL STMOM3(Y,N,IWRIT2,XSKEW,IBUGG3,IERROR)
            CALL STMOM4(Y,N,IWRIT2,XKURT,IBUGG3,IERROR)
            TERM1=3.5*XSD/(REAL(N)**(1./3.))
            IF(XSKEW.GT.0.0 .AND. XSKEW.LT.3.0)THEN
              TERM2=1.0/(1.0 - 0.0060*XSKEW + 0.27*XSKEW**2 -
     1              0.0069*XSKEW**3)
            ELSE
              TERM2=1.0
            ENDIF
            XKURT=XKURT - 3.0
            IF(XKURT.GT.0.0 .AND. XKURT.LT.6.0)THEN
              TERM3=1.0 - 0.2*(1.0 - EXP(-0.7*XKURT))
            ELSE
              TERM3=1.0
            ENDIF
            DCLWID=DBLE(TERM1*TERM2*TERM3)
          ENDIF
        ELSEIF(IHSTCW.EQ.'IQ  ')THEN
          IF(CLWID.EQ.CPUMIN)THEN
            CALL LOWQUA(Y,N,IWRIT2,TEMP1,MAXOBV,XLOWQ,
     1                  IBUGG3,IERROR)
            CALL UPPQUA(Y,N,IWRIT2,TEMP1,MAXOBV,XUPPQ,
     1                  IBUGG3,IERROR)
            XIQ=XUPPQ - XLOWQ
            DCLWID=2.603*XIQ/(REAL(N)**(1./3.))
          ENDIF
        ELSE
          IF(CLWID.EQ.CPUMIN)DCLWID=0.3*XSD
        ENDIF
C
        IF(XSTART.EQ.CPUMIN)DXSTAR=XMEAN-6.0*XSD
        IF(XSTOP.EQ.CPUMAX)DXSTOP=XMEAN+6.0*XSD
      ENDIF
C
      DO181I=1,N
        X2(I)=0.0
        Y2(I)=0.0
  181 CONTINUE
      DTOTWI=DXSTOP-DXSTAR
      ANUMCL=DTOTWI/DCLWID
      NUMCLA=INT(ANUMCL+1.0+0.1)
C
      J=NUMCLA-1
      DJ=J
      DCLMXJ=DXSTAR+DJ*DCLWID
      DABSDE=DABS(DCLMXJ-DXSTOP)
      IF(DABSDE.LE.0.0001D0)NUMCLA=NUMCLA-1
C
C               *******************************************************
C               **  STEP 3--                                         **
C               **  DETERMINE THE FREQUENCY (COUNTS) FOR EACH CLASS  **
C               *******************************************************
C
      DO420I=1,N
      DXI=Y(I)
      DO430J=1,NUMCLA
      J2=J
      DJ=J
      DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
      DCLMXJ=DXSTAR+DJ*DCLWID
      IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
      IF(DCLMNJ.LE.DXI.AND.DXI.LT.DCLMXJ)GOTO440
  430 CONTINUE
      GOTO420
  440 CONTINUE
      Y2(J2)=Y2(J2)+1.0
  420 CONTINUE
C
C     FOR THIS RAW DATA CASE,
C     TREAT THE SPECIAL CASE OF EQUALITY
C     WITH THE UPPER LIMIT OF THE LAST (RIGHT-MOST) CLASS
C
      J=NUMCLA
      DO450I=1,N
      DJ=J
      DCLMXJ=DXSTAR+DJ*DCLWID
      IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
      DXI=Y(I)
      IF(DXI.EQ.DCLMXJ)Y2(J)=Y2(J)+1.0
  450 CONTINUE
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BINP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,591)
  591   FORMAT('***** IN THE MIDDLE    OF DPBINP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,592)DCLWID,DXSTAR,DXSTOP,DTOTWI,ANUMCL,NUMCLA
  592   FORMAT('DCLWID,DXSTAR,DXSTOP,DTOTWI,ANUMCL,NUMCLA= ',
     1        4D11.4,F10.0,I8)
        CALL DPWRST('XXX','BUG ')
        DO593J=1,NUMCLA
          DJ=J
          DCLMNJ=DXSTAR+(DJ-1.0D0)*DCLWID
          DCLMXJ=DXSTAR+DJ*DCLWID
          IF(DCLMXJ.GT.DXSTOP)DCLMXJ=DXSTOP
          FJ=Y2(J)
          WRITE(ICOUT,594)J,DCLMNJ,DCLMXJ,FJ
  594     FORMAT('J,DCLMNJ,DCLMXJ,FJ = ',I8,2D15.7,E15.7)
          CALL DPWRST('XXX','BUG ')
  593   CONTINUE
      ENDIF
C
      SUM=0.0
      DO1110J=1,NUMCLA
      FJ=Y2(J)
      SUM=SUM+FJ
 1110 CONTINUE
      AN3=SUM
C
      DENOM=1.0
C
      IF(IRELAT.EQ.'ON')THEN
        IF(IRHSTG.EQ.'PERC')THEN
          DENOM=AN3
        ELSE
          DENOM=AN3*DCLWID
        ENDIF
      ENDIF
C
      DO1120J=1,NUMCLA
        K=J
        DJ=J
        DCLMDJ=DXSTAR+(DJ-0.5D0)*DCLWID
        FJ=Y2(J)
        X2(K)=DCLMDJ
        Y2(K)=FJ/DENOM
 1120 CONTINUE
      N2=K
C
      DO1130J=NUMCLA,1,-1
        IF(Y2(J).GT.0.0)THEN
          N2=J
          GOTO1139
        ENDIF
 1130 CONTINUE
      N2=1
 1139 CONTINUE
C
      DO1140J=1,N2
        IF(Y2(J).GT.0.0)THEN
          IFRST=J
          GOTO1149
        ENDIF
 1140 CONTINUE
      IFRST=1
 1149 CONTINUE
      K=0
      DO1150J=IFRST,N2
        K=K+1
        X2(K)=X2(J)
        Y2(K)=Y2(J)
 1150 CONTINUE
C
      IF(N2.LT.NUMCLA)THEN
        DO1160I=N2+1,NUMCLA
          Y2(I)=0.0
          X2(I)=0.0
 1160   CONTINUE
      ENDIF
      N2=K
C
C     AT THIS POINT, WE HAVE THE INITIAL FREQUENCY TABLE.  NOW
C     NEED TO EXTRACT THE "PEAKS" (WHICH WILL BE BASED ON WHERE
C     THE DIFFERENCE OF SUCCESSIVE FREQUENCIES CHANGES SIGNS).
C
C     STEP 1: COMPUTE THE SEQUENTIAL DIFFERENCES OF THE
C             FREQUENCIES.  BUT FIRST, REMOVE ANY ZERO
C             FREQUENCY CELLS.
C
      ICNT=0
      DO1900I=1,N2
        IF(Y2(I).GT.0.0)THEN
          ICNT=ICNT+1
          Y2(ICNT)=Y2(I)
          X2(ICNT)=X2(I)
        ENDIF
 1900 CONTINUE
      N2=ICNT
C
      CALL SEQDIF(Y2,N2,IWRIT2,DIFFY2,NDIF,ISTAT,
     1            IBUGG3,ISUBRO,IERROR)
      DIFFY2(N2)=-1
C
C     STEP 2: LOOP THROUGH AND DETECT SIGN CHANGES
C
      INEG=1
      IPOS=0
      ICNTNG=0
      DO2100I=1,N2
        DEL=DIFFY2(I)
        IF(IPOS.EQ.1 .AND. DEL.LT.0.0)THEN
          ICNTNG=ICNTNG+1
          Y3(ICNTNG)=Y2(I)
          X3(ICNTNG)=X2(I)
          IPOS=0
          INEG=1
        ELSEIF(INEG.EQ.1 .AND. DEL.GT.0.0)THEN
          IPOS=1
          INEG=0
        ENDIF
 2100 CONTINUE
C
      IF(ICNTNG.LE.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2211)
 2211   FORMAT('***** ERROR IN PEAKS OF FREQUENCY TABLE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2213)
 2213   FORMAT('      NO PEAKS WERE DETECTED.')
        CALL DPWRST('XXX','BUG ')
        N2=1
        Y2(1)=-9999
        X2(1)=-9999
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     STEP 3: COPY BACK TO Y2 AND X2
C
      DO2200I=1,ICNTNG
        Y2(I)=Y3(I)
        X2(I)=X3(I)
 2200 CONTINUE
      N2=ICNTNG
C
      GOTO9000
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BINP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBIN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IRELAT,IERROR,N2
 9012   FORMAT('IRELAT,IERROR,N2 = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)AN3,DENOM
 9013   FORMAT('AN3,DENOM = ',E15.8,E15.8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,X2(I),Y2(I)
 9016     FORMAT('I,X2(I),Y2(I) = ',I8,E15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        WRITE(ICOUT,9017)N,DCLWID,DXSTAR,DXSTOP
 9017   FORMAT('N,DCLWID,DXSTAR,DXSTOP = ',I6,3D15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBINZ(Y,N,CLWID,XSTART,XSTOP,
     1                  TEMP1,MAXNXT,IHSTCW,IHSTOU,
     1                  DCLWID,DXSTAR,DXSTOP,
     1                  ISUBRO,IBUGG3,IERROR)
C
C     PURPOSE--UTILITY ROUTINE CALLED BY DPBIN AND DPHIS2.
C              FOR RAW DATA, DETERMINE THE APPROPRIATE CLASS WIDTH,
C              CLASS START, AND CLASS STOP.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2010/1
C     ORIGINAL VERSION--JANUARY   2010. EXTRACTED AS A SEPARATE SUBROUTINE
C     ORIGINAL VERSION--JUNE      2016. MAXOBV ARGUMENT (FOR LOWQUA,
C                                       UPPQUA)
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGG3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRIT2
      CHARACTER*4 IHSTCW
      CHARACTER*4 IHSTOU
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DOUBLE PRECISION DCLWID
      DOUBLE PRECISION DXSTAR
      DOUBLE PRECISION DXSTOP
      DOUBLE PRECISION DXSTA2
      DOUBLE PRECISION DXSTO2
      DOUBLE PRECISION DARG1
      DOUBLE PRECISION DARG3
      DOUBLE PRECISION DARG4
      DOUBLE PRECISION DINT
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION TEMP1(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBI'
      ISUBN2='NZ  '
      IERROR='NO'
C
      XIQ=0.0
C
C     IF USER HAS SPECIFIED CLASS WIDTH AND CLASS LIMITS, THEN WE
C     JUST DEFAULT TO THESE VALUES.
C
      DCLWID=CLWID
      DXSTAR=XSTART
      DXSTOP=XSTOP
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BINZ')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPBINZ--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)N,IHSTCW,IHSTOU,CLWID,XSTART,XSTOP
   72   FORMAT('N,IHSTCW,IHSTOU,CLWID,XSTART,XSTOP = ',
     1         I6,2(1X,A4),3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,Y(I)
   74     FORMAT('I, Y(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
      ENDIF
C
C               **********************************************
C               **  STEP 2--                                **
C               **  DETERMINE CLASS WIDTH,                  **
C               **  START VALUE, STOP VALUE,                **
C               **  AND NUMBER OF CLASSES.                  **
C               **********************************************
C
C     MARCH 2006: ALLOW DIFFERENT DEFAULT BINNING ALGORITHMS (AS
C                 SPECIFIED BY IHSTCW).
C
      IF(CLWID.EQ.CPUMIN.OR.XSTART.EQ.CPUMIN.OR.
     1   XSTOP.EQ.CPUMAX.OR.XSTOP.EQ.CPUMIN)THEN
        IWRIT2='OFF'
        CALL MINIM(Y,N,IWRIT2,XMIN,IBUGG3,IERROR)
        CALL MAXIM(Y,N,IWRIT2,XMAX,IBUGG3,IERROR)
        CALL MEAN(Y,N,IWRIT2,XMEAN,IBUGG3,IERROR)
        CALL SD(Y,N,IWRIT2,XSD,IBUGG3,IERROR)
C
        IF(IHSTCW.EQ.'DEFA')THEN
          IF(CLWID.EQ.CPUMIN)DCLWID=0.3*XSD
        ELSEIF(IHSTCW.EQ.'NORM')THEN
          IF(CLWID.EQ.CPUMIN)DCLWID=3.5*XSD/(REAL(N)**(1./3.))
        ELSEIF(IHSTCW.EQ.'NCOR')THEN
          IF(CLWID.EQ.CPUMIN)THEN
            CALL STMOM3(Y,N,IWRIT2,XSKEW,IBUGG3,IERROR)
            CALL STMOM4(Y,N,IWRIT2,XKURT,IBUGG3,IERROR)
            TERM1=3.5*XSD/(REAL(N)**(1./3.))
            IF(XSKEW.GT.0.0 .AND. XSKEW.LT.3.0)THEN
              TERM2=1.0/(1.0 - 0.0060*XSKEW + 0.27*XSKEW**2 -
     1              0.0069*XSKEW**3)
            ELSE
              TERM2=1.0
            ENDIF
            XKURT=XKURT - 3.0
            IF(XKURT.GT.0.0 .AND. XKURT.LT.6.0)THEN
              TERM3=1.0 - 0.2*(1.0 - EXP(-0.7*XKURT))
            ELSE
              TERM3=1.0
            ENDIF
            DCLWID=DBLE(TERM1*TERM2*TERM3)
          ENDIF
        ELSEIF(IHSTCW.EQ.'IQ  ')THEN
          IF(CLWID.EQ.CPUMIN)THEN
            CALL LOWQUA(Y,N,IWRIT2,TEMP1,MAXNXT,XLOWQ,
     1                  IBUGG3,IERROR)
            CALL UPPQUA(Y,N,IWRIT2,TEMP1,MAXNXT,XUPPQ,
     1                  IBUGG3,IERROR)
            XIQ=XUPPQ - XLOWQ
            DCLWID=2.603*XIQ/(REAL(N)**(1./3.))
          ENDIF
        ELSE
          IF(CLWID.EQ.CPUMIN)DCLWID=0.3*XSD
        ENDIF
C
C       NOW THAT CLASS WIDTH IS DETERMINED, DETERMINE START AND STOP
C       VALUES.  DEFAULT IS +/- 6*STANDARD DEVIATION.  HOWEVER, IF
C       USER HAS SPECIFIED "OUTLIERS ON", EXTEND THESE DEFAULT LIMITS
C       TO INCORPORATE ALL THE DATA.
C
C       FOR "IQ RANGE" CLASS WIDTH, USE +/- 6*NORMALIZED IQR
C
        IF(IHSTOU.EQ.'ON')THEN
          IF(XSTART.EQ.CPUMIN)THEN
            IF(IHSTCW.EQ.'IQ  ')THEN
              ANIQ=0.7413*XIQ
              DXSTAR=XMEAN-6.0*ANIQ
            ELSE
              DXSTAR=XMEAN-6.0*XSD
            ENDIF
            DARG1=DBLE(XMEAN-XMIN)/DCLWID
            IARG2=INT(DARG1)
            DARG3=DBLE(IARG2)
            DARG4=DARG1-DARG3
            DINT=DARG3
            IF(DARG4.NE.0.0D0)DINT=DINT+1.0D0
            DXSTA2=DBLE(XMEAN)-DINT*DCLWID
            DXSTAR=MIN(DXSTAR,DXSTA2)
          ENDIF
          IF(XSTOP.EQ.CPUMAX .OR. XSTOP.EQ.CPUMIN)THEN
            IF(IHSTCW.EQ.'IQ  ')THEN
              ANIQ=0.7413*XIQ
              DXSTOP=XMEAN+6.0*ANIQ
            ELSE
              DXSTOP=XMEAN+6.0*XSD
            ENDIF
            DARG1=DBLE(XMAX-XMEAN)/DCLWID
            IARG2=INT(DARG1)
            DARG3=DBLE(IARG2)
            DARG4=DARG1-DARG3
            DINT=DARG3
            IF(DARG4.NE.0.0D0)DINT=DINT+1.0D0
            DXSTO2=DBLE(XMEAN)+DINT*DCLWID
            DXSTOP=MAX(DXSTOP,DXSTO2)
          ENDIF
        ELSE
          IF(IHSTCW.EQ.'IQ  ')THEN
            ANIQ=0.7413*XIQ
            IF(XSTART.EQ.CPUMIN)DXSTAR=XMEAN-6.0*ANIQ
            IF(XSTOP.EQ.CPUMAX.OR.XSTOP.EQ.CPUMIN)DXSTOP=XMEAN+6.0*ANIQ
          ELSE
            IF(XSTART.EQ.CPUMIN)DXSTAR=XMEAN-6.0*XSD
            IF(XSTOP.EQ.CPUMAX.OR.XSTOP.EQ.CPUMIN)DXSTOP=XMEAN+6.0*XSD
          ENDIF
        ENDIF
      ENDIF
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BINZ')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBINZ--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)XMEAN,XSD,XMIN,XMAX
 9012   FORMAT('XMEAN,XSD,XMIN,XMAX = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)XSKEW,XKURT
 9013   FORMAT('XSKEW,XKURT ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9017)DCLWID,DXSTAR,DXSTOP
 9017   FORMAT('DCLWID,DXSTAR,DXSTOP = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBIPL(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IBUGG2,IBUGG3,ISUBRO,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A BINARY <TYPE> PLOT Y1 Y2 X
C
C              WHERE <TYPE> IS ONE OF
C
C                 CORRECT MATCHES
C                 FALSE POSITIVES
C                 FALSE NEGATIVES
C                 TRUE POSITIVES
C                 TRUE NEGATIVES
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/5
C     ORIGINAL VERSION--MAY       2007.
C     UPDATED         --MARCH     2011. USE DPPARS, DPPAR5
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASP2
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION XGROUP(MAXOBV)
      DIMENSION XGROU2(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y2(1))
      EQUIVALENCE (GARBAG(IGARB3),XGROUP(1))
      EQUIVALENCE (GARBAG(IGARB4),XGROU2(1))
      EQUIVALENCE (GARBAG(IGARB5),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB6),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB7),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB8),TEMP3(1))
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBI'
      ISUBN2='PL  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               **********************************
C               **  TREAT THE BINARY PLOT CASE  **
C               **********************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BIPL')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBIPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2,MAXNPP
   53   FORMAT('ICASPL,IAND1,IAND2,MAXNPP = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IBUGG2,IBUGG3,ISUBRO,IBUGQ,ISUBRO
   54   FORMAT('IBUGG2,IBUGG3,ISUBRO,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *******************************************
C               **  STEP 1--                             **
C               **  SEARCH FOR BINARY <TYPE> PLOT        **
C               *******************************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASE='PERC'
      ICASPL='BIPL'
      ICASP2='CORM'
      ILASTC=0
C
      IF(IHARG(1).EQ.'PROP')THEN
        ICASE='PROP'
        ILASTC=ILASTC+1
      ELSEIF(IHARG(1).EQ.'PERC')THEN
        ICASE='PERC'
        ILASTC=ILASTC+1
      ENDIF
C
      IF(ILASTC.GT.0)THEN
        CALL SHIFTL(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
      ILASTC=0
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'PLOT')THEN
        ILASTC=1
        IFOUND='YES'
        ICASP2='CORM'
      ELSEIF(NUMARG.GE.4.AND.
     1  IHARG(1).EQ.'CORR' .AND. IHARG(2).EQ.'MATC'.AND.
     1  IHARG(4).EQ.'PLOT')THEN
        IF(IHARG(3).EQ.'PROP')THEN
          ICASE='PROP'
        ELSEIF(IHARG(3).EQ.'PERC')THEN
          ICASE='PERC'
        ENDIF
        ILASTC=4
        IFOUND='YES'
        ICASP2='CORM'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'CORR' .AND. IHARG(2).EQ.'MATC'.AND.
     1  IHARG(3).EQ.'PLOT')THEN
        ILASTC=3
        IFOUND='YES'
        ICASP2='CORM'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'CORR' .AND. IHARG(2).EQ.'MATC'.AND.
     1  (IHARG(3).EQ.'PERC' .OR. IHARG(3).EQ.'PROP'))THEN
        IF(IHARG(3).EQ.'PROP')THEN
          ICASE='PROP'
        ELSEIF(IHARG(3).EQ.'PERC')THEN
          ICASE='PERC'
        ENDIF
        ILASTC=3
        IFOUND='YES'
        ICASP2='CORM'
      ELSEIF(NUMARG.GE.2.AND.
     1  IHARG(1).EQ.'CORR' .AND. IHARG(2).EQ.'MATC')THEN
        ILASTC=2
        IFOUND='YES'
        ICASP2='CORM'
      ELSEIF(NUMARG.GE.4.AND.
     1  IHARG(1).EQ.'FALS' .AND. IHARG(2).EQ.'POSI'.AND.
     1  IHARG(4).EQ.'PLOT')THEN
        IF(IHARG(3).EQ.'PROP')THEN
          ICASE='PROP'
        ELSEIF(IHARG(3).EQ.'PERC')THEN
          ICASE='PERC'
        ENDIF
        ILASTC=4
        IFOUND='YES'
        ICASP2='FALP'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'FALS' .AND. IHARG(2).EQ.'POSI'.AND.
     1  IHARG(3).EQ.'PLOT')THEN
        ILASTC=3
        IFOUND='YES'
        ICASP2='FALP'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'FALS' .AND. IHARG(2).EQ.'POSI' .AND.
     1  (IHARG(3).EQ.'PROP' .OR. IHARG(3).EQ.'PERC'))THEN
        IF(IHARG(3).EQ.'PROP')THEN
          ICASE='PROP'
        ELSEIF(IHARG(3).EQ.'PERC')THEN
          ICASE='PERC'
        ENDIF
        ILASTC=3
        IFOUND='YES'
        ICASP2='FALP'
      ELSEIF(NUMARG.GE.2.AND.
     1  IHARG(1).EQ.'FALS' .AND. IHARG(2).EQ.'POSI')THEN
        ILASTC=2
        IFOUND='YES'
        ICASP2='FALP'
      ELSEIF(NUMARG.GE.4.AND.
     1  IHARG(1).EQ.'FALS' .AND. IHARG(2).EQ.'NEGA'.AND.
     1  IHARG(4).EQ.'PLOT')THEN
        IF(IHARG(3).EQ.'PROP')THEN
          ICASE='PROP'
        ELSEIF(IHARG(3).EQ.'PERC')THEN
          ICASE='PERC'
        ENDIF
        ILASTC=4
        IFOUND='YES'
        ICASP2='FALN'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'FALS' .AND. IHARG(2).EQ.'NEGA'.AND.
     1  IHARG(3).EQ.'PLOT')THEN
        ILASTC=3
        IFOUND='YES'
        ICASP2='FALN'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'FALS' .AND. IHARG(2).EQ.'NEGA' .AND.
     1  (IHARG(3).EQ.'PROP' .OR. IHARG(3).EQ.'PERC'))THEN
        IF(IHARG(3).EQ.'PROP')THEN
          ICASE='PROP'
        ELSEIF(IHARG(3).EQ.'PERC')THEN
          ICASE='PERC'
        ENDIF
        ILASTC=3
        IFOUND='YES'
        ICASP2='FALN'
      ELSEIF(NUMARG.GE.2.AND.
     1  IHARG(1).EQ.'FALS' .AND. IHARG(2).EQ.'NEGA')THEN
        ILASTC=2
        IFOUND='YES'
        ICASP2='FALN'
      ELSEIF(NUMARG.GE.4.AND.
     1  IHARG(1).EQ.'TRUE' .AND. IHARG(2).EQ.'POSI'.AND.
     1  IHARG(4).EQ.'PLOT')THEN
        IF(IHARG(3).EQ.'PROP')THEN
          ICASE='PROP'
        ELSEIF(IHARG(3).EQ.'PERC')THEN
          ICASE='PERC'
        ENDIF
        ILASTC=4
        IFOUND='YES'
        ICASP2='TRUP'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'TRUE' .AND. IHARG(2).EQ.'POSI'.AND.
     1  IHARG(3).EQ.'PLOT')THEN
        ILASTC=3
        IFOUND='YES'
        ICASP2='TRUP'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'TRUE' .AND. IHARG(2).EQ.'POSI' .AND.
     1  (IHARG(3).EQ.'PROP' .OR. IHARG(3).EQ.'PERC'))THEN
        IF(IHARG(3).EQ.'PROP')THEN
          ICASE='PROP'
        ELSEIF(IHARG(3).EQ.'PERC')THEN
          ICASE='PERC'
        ENDIF
        ILASTC=3
        IFOUND='YES'
        ICASP2='TRUP'
      ELSEIF(NUMARG.GE.2.AND.
     1  IHARG(1).EQ.'TRUE' .AND. IHARG(2).EQ.'POSI')THEN
        ILASTC=2
        IFOUND='YES'
        ICASP2='TRUP'
      ELSEIF(NUMARG.GE.4.AND.
     1  IHARG(1).EQ.'TRUE' .AND. IHARG(2).EQ.'NEGA'.AND.
     1  IHARG(4).EQ.'PLOT')THEN
        IF(IHARG(3).EQ.'PROP')THEN
          ICASE='PROP'
        ELSEIF(IHARG(3).EQ.'PERC')THEN
          ICASE='PERC'
        ENDIF
        ILASTC=4
        IFOUND='YES'
        ICASP2='TRUN'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'TRUE' .AND. IHARG(2).EQ.'NEGA'.AND.
     1  IHARG(3).EQ.'PLOT')THEN
        ILASTC=3
        IFOUND='YES'
        ICASP2='TRUN'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'TRUE' .AND. IHARG(2).EQ.'NEGA' .AND.
     1  (IHARG(3).EQ.'PROP' .OR. IHARG(3).EQ.'PERC'))THEN
        IF(IHARG(3).EQ.'PROP')THEN
          ICASE='PROP'
        ELSEIF(IHARG(3).EQ.'PERC')THEN
          ICASE='PERC'
        ENDIF
        ILASTC=3
        IFOUND='YES'
        ICASP2='TRUN'
      ELSEIF(NUMARG.GE.2.AND.
     1  IHARG(1).EQ.'TRUE' .AND. IHARG(2).EQ.'NEGA')THEN
        ILASTC=2
        IFOUND='YES'
        ICASP2='TRUN'
      ELSE
        ICASPL='    '
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      IF(ILASTC.GT.0)THEN
        CALL SHIFTL(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BINARY PLOT'
      MINNA=3
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=3
      MAXNVA=3
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),IVARTY(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),IVARTY(I) = ',I8,2X,A4,A4,2X,3I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************************
C               **  STEP 33--                               **
C               **  FORM THE SUBSETTED VARIABLES            **
C               **********************************************
C
      ISTEPN='33'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOL=1
      CALL DPPAR5(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y1,Y2,XGROUP,TEMP1,TEMP1,TEMP1,TEMP1,NS,
     1            IBUGG3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************************
C               **  STEP 41--                                      **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VARIABLES (Y(.) AND X(.), RESPECTIVELY) FOR    **
C               **  THE PLOT.                                      **
C               **  FORM THE CURVE DESIGNATION VARIABLE D(.)  .    **
C               **  DEFINE THE NUMBER OF PLOT POINTS   (NPLOTP).   **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES(NPLOTV).   **
C               *****************************************************
C
      ISTEPN='61'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BIPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPBIP2(Y1,Y2,XGROUP,NS,NUMVAR,
     1            ICASPL,ICASP2,ICASE,MAXN,
     1            XIDTEM,TEMP1,TEMP2,TEMP3,
     1            Y,X,X3D,D,NPLOTP,NPLOTV,
     1            IBUGG3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BIPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPBIPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9020)
 9020   FORMAT('I,Y(.),X(.),D(.),ISUB(.)--')
        CALL DPWRST('XXX','BUG ')
        DO9021I=1,NPLOTP
          WRITE(ICOUT,9022)I,Y(I),X(I),D(I),ISUB(I)
 9022     FORMAT(I8,G15.7,G15.7,G15.7,I8)
          CALL DPWRST('XXX','BUG ')
 9021   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBIP2(Y1,Y2,X,N,NUMV2,
     1                  ICASPL,ICASP2,ICASE,MAXN,
     1                  XIDTEM,TEMP1,TEMP2,TEMP3,
     1                  YPLOT,XPLOT,X3D,D2,NPLOTP,NPLOTV,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--FORM A BINARY <TYPE> PLOT WHERE
C              <TYPE> IS ONE OF:
C                  CORRECT MATCHES
C                  FALSE POSITIVES
C                  FALSE NEGATIVES
C                  TRUE POSITIVES
C                  TRUE NEGATIVES
C              THE Y-COORDINATE IS THE GROUP-ID AND THE X-COORDINATE
C              IS THE "PROPORTION" OR "PERCENTAGE" OF CORRECT
C              MATCHES (OR FALSE POSITIVES, ETC.).  THIS PLOT
C              IS USED BY THE "BINARY TABULATION PLOT" COMMAND.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/4
C     ORIGINAL VERSION--APRIL     2007.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 ICASE
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IWRITE
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION X(*)
      DIMENSION XIDTEM(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION YPLOT(*)
      DIMENSION XPLOT(*)
      DIMENSION X3D(*)
      DIMENSION D2(*)
C
C-----COMMON----------------------------------------------------------
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBI'
      ISUBN2='P2  '
      IERROR='NO'
      IWRITE='OFF'
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BIP2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBIP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NUMV2,N,MAXN
   52   FORMAT('NUMV2,N,MAXN = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,ICASP2,ICASE,IBUGG3,IERROR
   53   FORMAT('ICASPL,ICASP2,ICASE,IBUGG3,IERROR = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,MIN(N,100)
          WRITE(ICOUT,56)I,Y1(I),Y2(I),X(I)
   56     FORMAT('I,Y1(I),Y2(I),X(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BIP2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ****************************************************
C               **  STEP 2--                                      **
C               **  COMPUTE COORDINATES FOR BINARY PLOT           **
C               ****************************************************
C
      ISTEPN='2'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BIP2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DISTIN(X,N,IWRITE,XIDTEM,NUMSET,IBUGG3,IERROR)
      CALL SORT(XIDTEM,NUMSET,XIDTEM)
C
      J=0
      ITAG=0
C
      DO1000ISET=1,NUMSET
        HOLD=XIDTEM(ISET)
C
        K=0
        DO1010I=1,N
          IF(X(I).EQ.HOLD)THEN
            K=K+1
            TEMP1(K)=Y1(I)
            TEMP2(K)=Y2(I)
          ENDIF
 1010   CONTINUE
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BIP2')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1051)ISET,K
 1051     FORMAT('***** SET ',I8,' HAS ',I8,' ELEMENTS.')
          CALL DPWRST('XXX','BUG ')
          IF(K.GT.0)THEN
            DO1055I=1,K
              WRITE(ICOUT,1057)I,TEMP1(I),TEMP2(I)
 1057         FORMAT('I,TEMP1(I),TEMP2(I) = ',I8,2G15.7)
              CALL DPWRST('XXX','BUG ')
 1055       CONTINUE
          ENDIF
        ENDIF
C
        J=J+1
        ITAG=ITAG+1
C
        IF(ICASP2.EQ.'CORM')THEN
          CALL CORMAT(TEMP1,TEMP2,K,IWRITE,TEMP3,STAT,IBUGG3,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
        ELSEIF(ICASP2.EQ.'FALP')THEN
          CALL FALPOS(TEMP1,TEMP2,K,IWRITE,TEMP3,STAT,IBUGG3,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
        ELSEIF(ICASP2.EQ.'FALN')THEN
          CALL FALNEG(TEMP1,TEMP2,K,IWRITE,TEMP3,STAT,IBUGG3,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
        ELSEIF(ICASP2.EQ.'TRUP')THEN
          CALL TRUPOS(TEMP1,TEMP2,K,IWRITE,TEMP3,STAT,IBUGG3,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
        ELSEIF(ICASP2.EQ.'TRUN')THEN
          CALL TRUNEG(TEMP1,TEMP2,K,IWRITE,TEMP3,STAT,IBUGG3,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
        ENDIF
C
        XCOOR=STAT
        IF(ICASE.EQ.'PERC')XCOOR=100.0*XCOOR
C
        YPLOT(J)=XIDTEM(ISET)
        XPLOT(J)=XCOOR
        D2(J)=1.0
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BIP2')THEN
          WRITE(ICOUT,1061)STAT,XCOOR
 1061     FORMAT('STAT,XCOOR = ',2G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
 1000 CONTINUE
C
        N2=J
        NPLOTP=N2
        NPLOTV=2
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BIP2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPBIP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,N,ICASPL
 9013   FORMAT('NPLOTV,NPLOTP,N,ICASPL = ',
     1         I8,I8,I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9020)
 9020   FORMAT('I,YPLOT(.),XPLOT(.),X3D(.),D2(.)--')
        CALL DPWRST('XXX','BUG ')
        DO9021I=1,NPLOTP
          WRITE(ICOUT,9022)I,YPLOT(I),XPLOT(I),X3D(I),D2(I)
 9022     FORMAT(I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
 9021   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBITA(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  MAXNPP,ICONT,NUMHPP,NUMVPP,IMANUF,
     1                  XMATN,YMATN,XMITN,YMITN,
     1                  ISQUAR,IVGMSW,IHGMSW,ISU2SW,
     1                  IMPSW,IMPNR,IMPNC,IMPCO,
     1                  PMXMIN,PMXMAX,PMYMIN,PMYMAX,
CCCCC1                  TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,MAXNXT,
     1                  MAXNXT,IFORSW,
     1                  ANOPL1,ANOPL2,ISEED,IBOOSS,BARHEF,BARWEF,
     1                  ICAPSW,
     1                  IBUGG2,IBUGG3,IBUGQ,
     1                  IBUGUG,IBUGU2,IBUGU3,IBUGU4,ISUBRO,
     1                  IFOUND,IERROR)
C
C     PURPOSE--GENERATE A BINARY TABULATION PLOT
C            --BINARY TABULATION PLOT Y1 Y2 X1 X2 TAG
C
C              THIS IS BASICALLY A TABULATION PLOT WHERE
C              Y1 AND Y2 ARE THE DATA FOR A 2X2 TABLE.
C              THAT IS, EACH VARIABLE HAS TWO MUTUALLY EXCLUSIVE
C              CHOICES CODED AS 1 (FOR SUCCESS) OR 0 (FOR
C              FAILURE).  THE FOLLOWING TABLE CAN BE DEFINED:
C
C                 Y1\Y2   |   SUCCESS    FAILURE   | ROW TOTAL
C                 ============================================
C                 SUCCES  |    N11        N12      | N11 + N12
C                 FAILURE |    N21        N22      | N21 + N22
C                 ============================================
C                 COL TOT |    N11+N21    N12+N22  | N
C
C              IN THIS TABLE, N11 AND N22 REPRESENT TRUE
C              POSITIVES AND TRUE NEGATIVES (I.E., CORRECT
C              MATCHED), N21 REPRESENTS THE NUMBER OF FALSE
C              POSITIVES, AND N12 REPRESENTS THE NUMBER OF
C              FALSE NEGATIVES.
C
C              A TYPICAL EXAMPLE WOULD BE WHERE VARIABLE ONE
C              DENOTES THE GROUND TRUTH AND A VALUE OF 1
C              INDICATES "PRESENT" AND A VALUE OF 0 INDICATES
C              "NOT PRESENT".  VARIABLE TWO REPRESENTS SOME TYPE
C              OF DETECTION DEVICE WHERE A VALUE OF 1 INDICATES
C              THE DEVICE DETECTED THE SPECIFIED OBJECT WHILE A
C              VALUE OF 0 INDICATES THAT THE OBJECT WAS NOT
C              DETECTED.  A FALSE POSITIVE THEN IS THE CASE WHERE
C              THE DEVICE DETECTED THE OBJECT WHEN IT WAS NOT
C              ACTUALY THERE.
C
C              THE X1 AND X2 DENOTE GROUP ID VARIABLES.  THIS
C              PLOT IS A MULTIPLOT WITH 3 CCOLUMNS:
C
C                 1) COLUMN 1 = PROPORTION OF CORRECT MATCHES
C                 2) COLUMN 2 = PROPORTION OF FALSE NEGATIVES
C                 3) COLUMN 3 = PROPORTION OF FALSE NEGATIVES
C
C              THE FIRST GROUP-ID VARIABLE IS USED WITHIN EACH
C              PLOT FRAME AND THE SECOND GROUP-ID VARIABLE IS
C              USED AS THE ROWS OF THE MULTI-PLOT.
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATiON TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/5
C     ORIGINAL VERSION --MAY       2007.
C     UPDATED          --AUGUST    2007. CALL LIST TO MAINGR
C     UPDATED          --DECEMBER  2008. MAXIMUM SIZE OF GROUP
C                                        LABEL NOW SETTABLE IN
C                                        DPCOPA.INC
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES---------------
C
      INCLUDE 'DPCOPA.INC'
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICASEQ
      CHARACTER*4 ICONT
      CHARACTER*4 IPOWE
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IFORSW
C
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGUG
      CHARACTER*4 IBUGU2
      CHARACTER*4 IBUGU3
      CHARACTER*4 IBUGU4
      CHARACTER*4 IBUGQ
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISQUAR
      CHARACTER*4 IVGMSW
      CHARACTER*4 IHGMSW
      CHARACTER*4 IREPCH
      CHARACTER*4 IMPSW
      CHARACTER*4 IMPSW3
C
      CHARACTER*4 IBTAPL
      CHARACTER*4 ICPLLD
      CHARACTER*4 ICPLDI
      CHARACTER*4 IEMPTY
      CHARACTER*4 IPPTB2
      CHARACTER*4 IFEED9
      CHARACTER*4 ICPLFZ
      CHARACTER*4 ICPLPZ
      CHARACTER*4 ICPLLZ
      CHARACTER*4 ICPLTZ
      CHARACTER*4 ICPLL2
      CHARACTER*4 ICPLXZ
      CHARACTER*4 ICPLYZ
      CHARACTER*4 ICPLDZ
      CHARACTER*4 ICPLZT
      CHARACTER*4 ICPLZ2
      CHARACTER*4 ICPLZ3
      CHARACTER*4 ICPLZ4
C
      CHARACTER*4 IMANUF
C
      CHARACTER*24 ICHAP2(100)
      CHARACTER*4 ILINP2(100)
      CHARACTER*4 ISPIS2(100)
      CHARACTER*4 IBARS2(100)
      CHARACTER*4 IERAS2
      CHARACTER*4 IX1TSV
      CHARACTER*4 IX2TSV
      CHARACTER*4 IY1TSV
      CHARACTER*4 IY2TSV
      CHARACTER*4 IX1ZSV
      CHARACTER*4 IX2ZSV
      CHARACTER*4 IY1ZSV
      CHARACTER*4 IY2ZSV
      CHARACTER*4 IY1MNS
      CHARACTER*4 IY1MXS
      CHARACTER*4 IY2MNS
      CHARACTER*4 IY2MXS
      CHARACTER*4 IX1MNS
      CHARACTER*4 IX1MXS
      CHARACTER*4 IX2MNS
      CHARACTER*4 IX2MXS
      CHARACTER*4 IX1FSV
      CHARACTER*4 IX2FSV
      CHARACTER*4 IY1FSV
      CHARACTER*4 IY2FSV
      CHARACTER*4 ISORS2
      CHARACTER*4 ILFLAX
      CHARACTER*4 ILFLAY
      CHARACTER*4 IY1LJ2
      CHARACTER*4 IY1LD2
      CHARACTER*4 IX1LT2(MAXCH)
      CHARACTER*4 IX2LT2(MAXCH)
      CHARACTER*4 IY1LT2(MAXCH)
      CHARACTER*4 IY2LT2(MAXCH)
      CHARACTER*4 ITITSV(MAXCH)
C
      CHARACTER*4 IPLTTY
      CHARACTER*4 IPLOTT
      CHARACTER*4 IFLGIN
      CHARACTER*4 IFLGX
      CHARACTER*4 IFLGY
      CHARACTER*4 IWRITE
      CHARACTER*4 IOP
C
      INCLUDE 'DPCOF2.INC'
C
      CHARACTER*4 ICT
      CHARACTER*4 IC2T
      CHARACTER*4 IHT(25)
      CHARACTER*4 IH2T(25)
      CHARACTER*4 IARGTT(25)
      REAL ARGT(25)
      CHARACTER*4 ISU2SW(MAXSUB)
C
C  MAXY IS THE MAXIMUM NUMBER OF VARIABLES TO USE IN CREATING THE
C  BINARY TABULATION PLOT   CURVE
C
      PARAMETER(MAXY=4)
C
      DIMENSION IVARN1(MAXY)
      DIMENSION IVARN2(MAXY)
      DIMENSION ILIS(MAXY)
      DIMENSION ICOLL(MAXY)
C
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IVARN1
      CHARACTER*4 IVARN2
C
      DIMENSION TEMP(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
C
C-----COMMON------------------------------------------------------
C
      INCLUDE 'DPCOZ3.INC'
      INCLUDE 'DPCOPC.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
C
      EQUIVALENCE (G3RBAG(KGARB1),TEMP(1))
      EQUIVALENCE (G3RBAG(KGARB2),TEMP3(1))
C
C-----COMMON VARIABLES (GENERAL)----------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-------------------------------------------------
C
      IFOUND='YES'
      IERROR='NO'
      ISUBN1='DPBI'
      ISUBN2='TA  '
C
      ICASPL='BITA'
      ICPLLD='ON'
      ICPLDI='BLAN'
C
      IPLTTY='BIVA'
      IBTAPL='BINA'
      IBTAXV=1
C
      IBTARV=2
      ITAG=1
      IBTATV=1
      IFLAGV=IBTARV+IBTAXV+ITAG
      ICOL=3
      IROW=1
      IROWT=0
      NROWS=0
      ICOLT=0
      NRIGHT=0
      NRIGH2=0
      NTEMP=0
C
C               **********************************************
C               **  TREAT THE BINARY TABULATION PLOT   CASE **
C               **********************************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BITA')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBITA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2
   52   FORMAT('ICASPL,IAND1,IAND2 = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)NUMARG
   54   FORMAT('NUMARG = ',I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GT.0)THEN
          DO61I=1,NUMARG
            WRITE(ICOUT,62)I,IHARG(I),IARGT(I)
   62       FORMAT('I,IHARG(I),IARGT(I) = ',I8,2X,A4,2X,A4)
            CALL DPWRST('XXX','BUG ')
   61     CONTINUE
        ENDIF
        WRITE(ICOUT,71)ICPLLA,ICPLTA,IBTAPL,ICPLFI,ICPLFR
   71   FORMAT('ICPLLA,ICPLTA,IBTAPL,ICPLFI,ICPLFR = ',5(A4,1X))
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ******************************************************
C               **  STEP 1--                                        **
C               **  SHIFT COMMAND LINE ARGMENTS                     **
C               ******************************************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'TABU'.AND.
     1   IHARG(2).EQ.'PLOT')THEN
        ISHIFT=2
        CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      ICOM='BINA'
      ICOM2='    '
      IFOUND='YES'
C
C               *******************************************************
C               **  STEP 2--                                         **
C               **  CHECK FOR THE PROPER NUMBER OF INPUT ARGUMENTS.  **
C               *******************************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MINN2=2
      MINNA=4
      MAXNA=100
      CALL CHECKA(NUMARG,MINNA,MAXNA,IANS,IWIDTH,ISUBN1,ISUBN2,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************
C               **  STEP 3--                           **
C               **  CHECK TO SEE THE TYPE SUBCASE      **
C               **  (BASED ON THE QUALIFIER)--         **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET/EXCEPT; OR             **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='3'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO1180
      DO1100J=1,NUMARG
      J1=J
      IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ')GOTO1110
      IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ')GOTO1110
      IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')GOTO1120
 1100 CONTINUE
      GOTO1180
 1110 CONTINUE
      ICASEQ='SUBS'
      ILOCQ=J1
      GOTO1190
 1120 CONTINUE
      ICASEQ='FOR'
      ILOCQ=J1
      GOTO1190
C
 1180 CONTINUE
      GOTO1190
C
 1190 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BITA')THEN
        WRITE(ICOUT,1191)NUMARG,ILOCQ,ICASEQ
 1191   FORMAT('NUMARG,ILOCQ,ICASEQ = ',I8,I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **************************************************
C               **  STEP 4--                                    **
C               **  DETERMINE THE NUMBER OF VARIABLES           **
C               **  TO BE INCLUDED AS PLOT COMPONENTS           **
C               **  IF THE   TO   FEATURE IS USED IN THE        **
C               **  ARGUMENT LIST, TRANSLATE THE   TO   TO      **
C               **  EXPLICIT VARIABLE NAMES                     **
C               **************************************************
C
      ISTEPN='4'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      JMIN=1
      JMAX=ILOCQ-1
      CALL EXTVAR(IHARG,IHARG2,NUMARG,JMIN,JMAX,MAXY,
     1IHNAME,IHNAM2,IUSE,NUMNAM,
     1IVARN1,IVARN2,NUMVAR,IBUGG2,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               **************************************************
C               **  STEP 5--                                    **
C               **  NUMBER OF VARIABLES MUST EQUAL IFLAGV       **
C               **************************************************
C
      ISTEPN='5'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMVAR.NE.IFLAGV)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1291)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1293)IBTARV
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1294)IBTAXV
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1296)ITAG
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1297)NUMVAR
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1328)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1329)(IANS(J),J=1,MIN(IWIDTH,100))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
 1291 FORMAT('***** ERROR IN DPBITA--EXPECTED')
 1293 FORMAT('         ',I8,'RESPONSE VARIABLES')
 1294 FORMAT('         ',I8,'GROUP VARIABLES')
 1296 FORMAT('         ',I8,'TAG VARIABLES')
 1297 FORMAT('      DETECTED ',I8,' VARIABLES.')
C
C               ***************************************
C               **  STEP 6--                         **
C               **  CHECK THE VALIDITY OF EACH       **
C               **  OF THE VARIABLES.                **
C               **  ALSO CHECK TO ASSURE THAT EACH   **
C               **  OF THE VARIABLES HAS AT LEAST    **
C               **  2 OBSERVATIONS.                  **
C               ***************************************
C
      ISTEPN='6'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IFLAG=0
      IFLAG2=0
      DO1300I=1,NUMVAR
C
        IHRIGH=IVARN1(I)
        IHRIG2=IVARN2(I)
        IHWUSE='V'
        MESSAG='YES'
        CALL CHECKN(IHRIGH,IHRIG2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        ICOLL(I)=IVALUE(ILOCV)
C
        NTEMP=IN(ILOCV)
        IF(I.EQ.1)THEN
          NRIGHT=NTEMP
        ELSEIF(I.GE.2)THEN
          NRIGH2=NTEMP
          IF(NRIGH2.NE.NRIGHT)IFLAG=1
        ENDIF
C
        IF(I.EQ.4)THEN
          ICOL=IVALUE(ILOCV)
          J=0
          DO1261ITEMP=1,NRIGH2
            J=J+1
            NIN=J
            IJ=MAXN*(ICOL-1)+ITEMP
            IF(ICOL.LE.MAXCOL)TEMP(J)=V(IJ)
            IF(ICOL.EQ.MAXCP1)TEMP(J)=PRED(ITEMP)
            IF(ICOL.EQ.MAXCP2)TEMP(J)=RES(ITEMP)
            IF(ICOL.EQ.MAXCP3)TEMP(J)=YPLOT(ITEMP)
            IF(ICOL.EQ.MAXCP4)TEMP(J)=XPLOT(ITEMP)
            IF(ICOL.EQ.MAXCP5)TEMP(J)=X2PLOT(ITEMP)
            IF(ICOL.EQ.MAXCP6)TEMP(J)=TAGPLO(ITEMP)
 1261     CONTINUE
          IWRITE='OFF'
          CALL DISTIN(TEMP,NIN,IWRITE,TEMP3,NOUT,IBUGG3,IERROR)
          NROWS=NOUT
        ENDIF
        ILIS(I)=ILOCV
        IF(NTEMP.LE.MINN2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1311)
 1311     FORMAT('***** ERROR IN BINARY TABULATION PLOT--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1312)
 1312     FORMAT('      THE INPUT NUMBER OF OBSERVATIONS FOR WHICH A')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1321)
 1321     FORMAT('      BINARY TABULATION PLOT WAS TO HAVE BEEN ',
     1           'FORMED MUST')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1326)MINN2
 1326     FORMAT('      BE ',I8,' OR LARGER; SUCH WAS NOT THE CASE',
     1           ' HERE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1327)I,NTEMP
 1327     FORMAT('      VARIABLE ',I8,' HAS ',I8,' OBSERVATIONS.')
          WRITE(ICOUT,1328)
 1328     FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,1329)(IANS(J),J=1,MIN(IWIDTH,100))
 1329       FORMAT('      ',100A1)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO9000
        ENDIF
C
 1300 CONTINUE
C
C               ******************************************************
C               **  STEP 7--                                        **
C               **  CHECK THAT VARIABLES HAVE THE SAME NUMBER OF    **
C               **  ELEMENTS.                                       **
C               ******************************************************
C
      ISTEPN='7'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFLAG.EQ.1)THEN
        WRITE(ICOUT,1411)
 1411   FORMAT('***** ERROR IN BINARY TABULATION PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1413)
 1413   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE RESPONSE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1414)
 1414   FORMAT('      AND TAG VARIABLES MUST BE THE SAME.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1415)
        CALL DPWRST('XXX','BUG ')
 1415   FORMAT('      SUCH WAS NOT THE CASE HERE.')
C
        DO1417I=1,NUMVAR
          I2=ILIS(I)
          WRITE(ICOUT,1416)IVARN1(I2),IVARN2(I2),IN(I2)
 1416     FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,
     1           ' OBSERVATIONS;')
          CALL DPWRST('XXX','BUG ')
 1417   CONTINUE
        WRITE(ICOUT,1420)
 1420   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1421)(IANS(I),I=1,MIN(IWIDTH,100))
 1421     FORMAT('      ',100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               **************************************************
C               **   STEP 8--                                   **
C               **   SAVE INITIAL SETTINGS                      **
C               **************************************************
C
      ISTEPN='8'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      PXMN2=PXMIN
      PXMX2=PXMAX
      PYMN2=PYMIN
      PYMX2=PYMAX
      PWXMN2=PWXMIN
      PWXMX2=PWXMAX
      PWYMN2=PWYMIN
      PWYMX2=PWYMAX
      IF(ICPLFR.EQ.'DEFA')THEN
        PXMIN=0.0
        PXMAX=100.0
        PYMIN=0.0
        PYMAX=100.0
      ENDIF
      GY1MNS=GY1MIN
      GY1MXS=GY1MAX
C
      IERAS2=IERASW
      IPPTB2=IPPTBI
      IPPTBI='UNBI'
      IX1TSV=IX1TSW
      IX2TSV=IX2TSW
      IY1TSV=IY1TSW
      IY2TSV=IY2TSW
      IX1ZSV=IX1ZSW
      IX2ZSV=IX2ZSW
      IY1ZSV=IY1ZSW
      IY2ZSV=IY2ZSW
      PX1LD2=PX1LDS
      PX2LD2=PX2LDS
      PY1LD2=PY1LDS
      PY1LA2=PY1LAN
      IY1LJ2=IY1LJU
      IY1LD2=IY1LDI
      GY1MNS=GY1MIN
      GY1MXS=GY1MAX
      GY2MNS=GY2MIN
      GY2MXS=GY2MAX
      GX1MNS=GX1MIN
      GX1MXS=GX1MAX
      GX2MNS=GX2MIN
      GX2MXS=GX2MAX
      IY1MNS=IY1MIN
      IY1MXS=IY1MAX
      IY2MNS=IY2MIN
      IY2MXS=IY2MAX
      IX1MNS=IX1MIN
      IX1MXS=IX1MAX
      IX2MNS=IX2MIN
      IX2MXS=IX2MAX
      IX1FSV=IX1FSW
      IX2FSV=IX2FSW
      IY1FSV=IY1FSW
      IY2FSV=IY2FSW
      PX1ZD2=PX1ZDS
      PX2ZD2=PX2ZDS
      PY1ZD2=PY1ZDS
      PY2ZD2=PY2ZDS
      ISORS2=ISORSW
C
      ICPLFZ=ICPLFR
      ICPLL2=ICPLLA
      IF(ICPLFR.EQ.'CONN')ICPLFR='DEFA'
      IF(ICPLFR.EQ.'USER'.AND.ICPLLA.EQ.'BOX')ICPLLA='ON'
      IF(ICPLLA.EQ.'BOX ')THEN
        ICPLLD='ON'
      ENDIF
      ICPLTZ=ICPLTA
      ICPLPZ=IBTAPL
      ICPLLZ=ICPLLD
      ICPLZT=ICPLST
      ICPLZ2=ICPLS2
      ICPLZ3=ICPLS3
      ICPLZ4=ICPLS4
      ICPLXZ=ICPLXA
      ICPLYZ=ICPLYA
      ICPLDZ=ICPLDI
C
      ILFLAX='OFF'
      ILFLAY='OFF'
      IF(IY1MIN.EQ.'FIXE'.AND.IY1MAX.EQ.'FIXE')THEN
        ILFLAY='ON'
      ENDIF
      IF(IX1MIN.EQ.'FIXE'.AND.IX2MAX.EQ.'FIXE')THEN
        ILFLAX='ON'
      ENDIF
C
      DO1495I=1,100
        ICHAP2(I)=ICHAPA(I)
        ILINP2(I)=ILINPA(I)
        IBARS2(I)=IBARSW(I)
        ISPIS2(I)=ISPISW(I)
 1495 CONTINUE
C
      DO1500I=1,MAXCH
        IX1LT2(I)=IX1LTE(I)
        IX2LT2(I)=IX2LTE(I)
        IY1LT2(I)=IY1LTE(I)
        IY2LT2(I)=IY2LTE(I)
 1500 CONTINUE
      NCX1L2=NCX1LA
      NCX2L2=NCX2LA
      NCY1L2=NCY1LA
      NCY2L2=NCY2LA
C
      IFEED9=IFEEDB
      IFLGIN='OFF'
      IFLGY='OFF'
      IFLGX='OFF'
C
      DO110I=1,MAXCH
        ITITSV(I)=ITITTE(I)
  110 CONTINUE
      NCTITS=NCTITL
      PTITDZ=PTITDS
C
      ISTEPN='8.1'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISHIFT=ILOCQ-1
      CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGG2,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      ISHIFT=NUMVAR-1
      CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGG2,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      DO1509I=1,ISHIFT
        IHARG(I)=IVARN1(I)
        IHARG2(I)=IVARN2(I)
 1509 CONTINUE
      NUMVAR=NUMVAR-1
      ILOCQ=ISHIFT+1
C
      ISTEPN='8.2'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOP='OPEN'
      IFLAG1=0
      IFLAG2=0
      IFLAG3=0
      IFLAG4=0
      IFLAG5=1
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGG3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IMPSW3=IMPSW
      IMPCO2=IMPCO
      IMPNR2=IMPNR
      IMPNC2=IMPNC
      IMPSW='ON'
      IMPCO=1
      IMPCO9=IMPCO
C
      IROWT=NROWS
      ICOLT=3
      IMPNR=IROWT
      IMPNC=ICOLT
C
      IXAXIS=0
      IYAXIS=0
C
C  THE SYNTAX OF THE COMMAND IS:
C
C     BINARY CORRECT MATCH PLOT Y1 Y2 X1  SUBSET X2 = VALUE
C
      ICT='BINA'
      IC2T='RY  '
      IHT(1)='CORR'
      IH2T(1)='ECT '
      IHT(2)='MATC'
      IH2T(2)='H   '
      IHT(3)='PLOT'
      IH2T(3)='    '
      IHT(4)=IVARN1(1)
      IH2T(4)=IVARN2(1)
      IHT(5)=IVARN1(2)
      IH2T(5)=IVARN2(2)
      IHT(6)=IVARN1(3)
      IH2T(6)=IVARN2(3)
      IHT(7)='SUBS'
      IH2T(7)='ET  '
      IHT(8)=IVARN1(4)
      IH2T(8)=IVARN2(4)
      IHT(9)='=   '
      IH2T(9)='    '
      IHT(10)='=   '
      IH2T(10)='    '
      NCCOMM=10
C
C     ADD ANY USER-SUPPLIED <SUBSET/EXCEPT/FOR> CLAUSES TO
C     END OF COMMAND LINE
C
      ISHIFT=ILOCQ-1
      CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1IBUGG2,IERROR)
      IF(IERROR.EQ.'YES')GOTO8000
      ISHIFT=NCCOMM
      CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGG2,IERROR)
C
      ICOM=ICT
      ICOM2=IC2T
      DO7006II=1,NCCOMM
        IHARG(II)=IHT(II)
        IHARG2(II)=IH2T(II)
        IARGT(II)='WORD'
 7006 CONTINUE
      IARGT(10)='NUMB'
      ARG(10)=0.0
C
      IPLOTT='BIPL'
      IFLGIN='NO'
      IF((IY1MIN.EQ.'FLOA'.AND.IY1MAX.EQ.'FLOA').OR.
     1   (IX1MIN.EQ.'FLOA'.AND.IX1MAX.EQ.'FLOA'))THEN
        IF((PCPYLL(1).EQ.CPUMIN.AND.PCPYUL(1).EQ.CPUMIN).OR.
     1     (PCPXLL(1).EQ.CPUMIN.AND.PCPYUL(1).EQ.CPUMIN))THEN
          IFLGIN='YES'
          IFLGY='ON'
          IFLGX='ON'
        ENDIF
      ENDIF
C
C               **********************************************
C               **   STEP 9--                               **
C               **   GENERATE THE BINARY PLOT        PLOTS  **
C               **********************************************
C
      ISTEPN='9'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BITA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NARGT=NUMARG
C
      DO7020I=1,NARGT
        IHT(I)=IHARG(I)
        IH2T(I)=IHARG2(I)
        IARGTT(I)=IARGT(I)
        ARGT(I)=ARG(I)
 7020 CONTINUE
C
C     CHECK TO SEE IF A GROUP LABEL HAS BEEN DEFINED
C
      IGLCOL=-1
      IF(IBTAGN.NE.' ')THEN
        DO7810I=1,MAXGRP
          IF(IBTAGN(1:8).EQ.IGRPVN(I)(1:8))THEN
            IGLCOL=I
            GOTO7819
          ENDIF
 7810   CONTINUE
 7819   CONTINUE
      ENDIF
C
      IX=1
      IXLIST=1
      NPLOTS=IROWT*ICOLT
      IPLOT=0
      DO7200IRES=1,IROWT
      DO7100IFAC=1,ICOLT
C
C       RESTORE COMMAND LINE ARGUMENTS
C
        DO7105II=1,NARGT
          IHARG(II)=IHT(II)
          IHARG2(II)=IH2T(II)
          IARGT(II)=IARGTT(II)
          ARG(II)=ARGT(II)
 7105   CONTINUE
        ARG(10)=TEMP3(IRES)
        NUMARG=NARGT
C
        IPLOT=IPLOT+1
        IF(IFAC.EQ.1)THEN
          IHARG(1)='CORR'
          IHARG2(1)='ECT '
          IHARG(2)='MATC'
          IHARG2(2)='H   '
        ELSEIF(IFAC.EQ.2)THEN
          IHARG(1)='FALS'
          IHARG2(1)='E   '
          IHARG(2)='POSI'
          IHARG2(2)='TIVE'
        ELSEIF(IFAC.EQ.3)THEN
          IHARG(1)='FALS'
          IHARG2(1)='E   '
          IHARG(2)='NEGA'
          IHARG2(2)='TIVE'
        ENDIF
C
        IF(ISUBRO.EQ.'BITA' .OR. IBUGG2.EQ.'ON')THEN
          DO7706I=1,NUMARG
            WRITE(ICOUT,7707)I,IHARG(I),IHARG2(I)
 7707       FORMAT('I,IHARG(I),IHARG2(I) = ',I5,2X,A4,2X,A4)
            CALL DPWRST('XXX','BUG ')
 7706     CONTINUE
        ENDIF
C
        ICASPL='BITA'
        IROW=IRES
        ICOL=IFAC
        IF(IGLCOL.GT.0)THEN
          NCY1LA=0
          NCY2LA=0
        ENDIF
C
        CALL DPSPM1(ICASPL,IVARN1,IVARN2,ICOLL,
     1              IMPNR,IMPNC,IROW,ICOL,IRES,IX,IPLOT,
     1              NPLOTS,NUMVAR,
     1              ICHAP2,ILINP2,
     1              GY1MNS,GY1MXS,GY2MNS,GY2MXS,
     1              GX1MNS,GX1MXS,GX2MNS,GX2MXS,
     1              IY1MNS,IY1MXS,IY2MNS,IY2MXS,
     1              IX1MNS,IX1MXS,IX2MNS,IX2MXS,
     1              IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1              IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1              PX1LD2,PX2LD2,
     1              IY1LJ2,IY1LD2,PY1LD2,PY1LA2,
     1              IX1LT2,IX2LT2,IY1LT2,IY2LT2,
     1              NCX1L2,NCX2L2,NCY1L2,NCY2L2,
     1              PCPXLL,PCPXUL,PCPYLL,PCPYUL,IXLIST,
     1              ICPLLA,ISPMLD,IPLOTT,ICPLFR,ICPLXA,ICPLYA,
     1              ISPMDI,ISPX1L,
     1              ISPMXT,ISPMXL,ISPMYT,ISPMYL,
     1              ICPLTD,PCPLTD,IVNMEX,
     1              IBUGG2,ISUBRO)
C
        IF(IRES.EQ.1)THEN
          IF(IFAC.EQ.1)THEN
            ITITTE(1)='C'
            ITITTE(2)='o'
            ITITTE(3)='r'
            ITITTE(4)='r'
            ITITTE(5)='e'
            ITITTE(6)='c'
            ITITTE(7)='t'
            ITITTE(8)=' '
            ITITTE(9)='M'
            ITITTE(10)='a'
            ITITTE(11)='t'
            ITITTE(12)='c'
            ITITTE(13)='h'
            NCTEMP=13
          ELSEIF(IFAC.EQ.2)THEN
            ITITTE(1)='F'
            ITITTE(2)='a'
            ITITTE(3)='l'
            ITITTE(4)='s'
            ITITTE(5)='e'
            ITITTE(6)=' '
            ITITTE(7)='P'
            ITITTE(8)='o'
            ITITTE(9)='s'
            ITITTE(10)='i'
            ITITTE(11)='t'
            ITITTE(12)='i'
            ITITTE(13)='v'
            ITITTE(14)='e'
            NCTEMP=14
          ELSEIF(IFAC.EQ.3)THEN
            ITITTE(1)='F'
            ITITTE(2)='a'
            ITITTE(3)='l'
            ITITTE(4)='s'
            ITITTE(5)='e'
            ITITTE(6)=' '
            ITITTE(7)='N'
            ITITTE(8)='e'
            ITITTE(9)='g'
            ITITTE(10)='a'
            ITITTE(11)='t'
            ITITTE(12)='i'
            ITITTE(13)='v'
            ITITTE(14)='e'
            NCTEMP=14
          ENDIF
        ELSE
          NCTEMP=0
          ITITTE(1)=' '
        ENDIF
        NCTITL=NCTEMP
C
C       IF A GROUP LABEL HAS BEEN SPECIFIED, SET Y1LABEL OR
C       Y2LABEL IF APPROPRIATE
C
        IF(IGLCOL.GT.0 .AND. IGLCOL.LE.MAXGRP)THEN
          IFLAG=0
          IF(ICPLYA.EQ.'LEFT')THEN
            IF(IFAC.EQ.1)IFLAG=1
          ELSEIF(ICPLYA.EQ.'RIGH')THEN
            IF(IFAC.EQ.3)IFLAG=2
          ELSEIF(ICPLYA.EQ.'ALTE')THEN
            IF(MOD(IRES,2).EQ.1)THEN
              IF(IFAC.EQ.1)IFLAG=1
            ELSEIF(MOD(IRES,2).EQ.0)THEN
              IF(IFAC.EQ.3)IFLAG=2
            ENDIF
          ENDIF
        ENDIF
        IF(IFLAG.EQ.1)THEN
CCCCC     DO7860I=1,24
          DO7860I=1,MAXGR2
            IY1LTE(I)=' '
            IY1LTE(I)(1:1)=IGRPLA(IRES,IGLCOL)(I:I)
            IF(IY1LTE(I).NE.' ')NCY1LA=I
 7860     CONTINUE
        ELSEIF(IFLAG.EQ.2)THEN
CCCCC     DO7870I=1,24
          DO7870I=1,MAXGR2
            IY2LTE(I)=' '
            IY2LTE(I)(1:1)=IGRPLA(IRES,IGLCOL)(I:I)
            IF(IY2LTE(I).NE.' ')NCY2LA=I
 7870     CONTINUE
        ELSE
          NCY1LA=0
          NCY2LA=0
        ENDIF
C
        CALL MAINGR(ANOPL1,ANOPL2,NPLOTV,NPLOTP,NS,ICASPL,
     1              MAXNPP,ISEED,IBOOSS,
     1              IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1              IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1              BARHEF,BARWEF,
     1              IRHSTG,IHSTCW,IHSTEB,IHSTOU,IASHWT,IHSTMC,IHSTOP,
     1              ICAPSW,IFORSW,IGUIFL,IERRFA,IFRALI,
     1              IAND1,IAND2,ICONT,NUMHPP,NUMVPP,MAXNXT,
     1              ISUBRO,IFOUND,IERROR)
C
        ICONT=IDCONT(1)
        IPOWE=IDPOWE(1)
        NUMHPP=IDNHPP(1)
        IMPARG=2
        CALL DPGRAP(Y,X,X3D,D,N,NPLOTP,ICASPL,ICONT,IPOWE,NUMHPP,
     1              XMATN,YMATN,XMITN,YMITN,
     1              ISQUAR,
     1              IVGMSW,IHGMSW,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,
     1              IVSTAR,IVSTOP,IFUNC,NUMCHF,IREPCH,
     1              YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              IMPSW,IMPNR,IMPNC,IMPCO,IMPCO9,
     1              IMPARG,
     1              PMXMIN,PMXMAX,PMYMIN,PMYMAX,
     1              MAXCOL,
     1              DSIZE,DSYMB,DCOLOR,DFILL,
     1              ICAPSW,
     1              IBUGUG,IBUGU2,IBUGU3,IBUGU4,ISUBRO,
     1              IERROR)
        IF(IERROR.EQ.'NO')IAND1=IAND2
        IF(IERROR.EQ.'YES')GOTO7199
C
 7199   CONTINUE
C
        PX1LDS=PX1LD2
        IF(IYAXIS.EQ.0.AND.IFLGIN.EQ.'NO')THEN
          GY1MNS=GY1MIN
          GY1MXS=GY1MAX
          GY2MNS=GY2MIN
          GY2MXS=GY2MAX
          IY1MNS=IY1MIN
          IY1MXS=IY1MAX
          IY2MNS=IY2MIN
          IY2MXS=IY2MAX
        ENDIF
        IF(IXAXIS.EQ.0.AND.IFLGIN.EQ.'NO')THEN
          GX1MNS=GX1MIN
          GX1MXS=GX1MAX
          GX2MNS=GX2MIN
          GX2MXS=GX2MAX
          IX1MNS=IX1MIN
          IX1MXS=IX1MAX
          IX2MNS=IX2MIN
          IX2MXS=IX2MAX
        ENDIF
        PX1ZDS=PX1ZD2
        PX2ZDS=PX2ZD2
        PY1ZDS=PY1ZD2
        PY2ZDS=PY2ZD2
        IF(IEMPTY.EQ.'YES')THEN
          DO7107I=1,MAXSUB
            ISUBSW(I)=ISU2SW(I)
 7107     CONTINUE
        ENDIF
        DO7108I=1,100
            ICHAPA(I)=ICHAP2(I)
            ILINPA(I)=ILINP2(I)
            ISPISW(I)=ISPIS2(I)
            IBARSW(I)=IBARS2(I)
 7108     CONTINUE
C
 7100 CONTINUE
 7200 CONTINUE
C
      IF(IYAXIS.EQ.1)THEN
        GY1MIN=GY1MNS
        GY1MAX=GY1MXS
        GY2MIN=GY2MNS
        GY2MAX=GY2MXS
        IY1MIN=IY1MNS
        IY1MAX=IY1MXS
        IY2MIN=IY2MNS
        IY2MAX=IY2MXS
      ENDIF
      IF(IXAXIS.EQ.1)THEN
        GX1MIN=GX1MNS
        GX1MAX=GX1MXS
        GX2MIN=GX2MNS
        GX2MAX=GX2MXS
        IX1MIN=IX1MNS
        IX1MAX=IX1MXS
        IX2MIN=IX2MNS
        IX2MAX=IX2MXS
      ENDIF
      GOTO8000
C
C               **************************************************
C               **   STEP 28--                                  **
C               **   REINSTATE INITIAL SETTINGS                 **
C               **************************************************
C
 8000 CONTINUE
      ISTEPN='28'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BITA')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,8807)IMANUF,NUMDEV,IDMANU(1)
 8807   FORMAT('IMANUF,NUMDEV,IDMANU(1) = ',A4,I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      PWXMIN=PWXMN2
      PWXMAX=PWXMX2
      PWYMIN=PWYMN2
      PWYMAX=PWYMX2
      PXMIN=PXMN2
      PXMAX=PXMX2
      PYMIN=PYMN2
      PYMAX=PYMX2
C
      DO8820I=1,100
        ICHAPA(I)=ICHAP2(I)
        ILINPA(I)=ILINP2(I)
        IBARSW(I)=IBARS2(I)
        ISPISW(I)=ISPIS2(I)
 8820 CONTINUE
C
CCCCC IMPSW=IMPSW3
      IMPSW='OFF'
      IMPCO=1
      IMPNR=IMPNR2
      IMPNC=IMPNC2
C
      IERASW='ON'
      IX1TSW=IX1TSV
      IX2TSW=IX2TSV
      IY1TSW=IY1TSV
      IY2TSW=IY2TSV
      IX1ZSW=IX1ZSV
      IX2ZSW=IX2ZSV
      IY1ZSW=IY1ZSV
      IY2ZSW=IY2ZSV
      GY1MIN=GY1MNS
      GY1MAX=GY1MXS
      GY2MIN=GY2MNS
      GY2MAX=GY2MXS
      GX1MIN=GX1MNS
      GX1MAX=GX1MXS
      GX2MIN=GX2MNS
      GX2MAX=GX2MXS
      IY1MIN=IY1MNS
      IY1MAX=IY1MXS
      IY2MIN=IY2MNS
      IY2MAX=IY2MXS
      IX1MIN=IX1MNS
      IX1MAX=IX1MXS
      IX2MIN=IX2MNS
      IX2MAX=IX2MXS
      PX1ZDS=PX1ZD2
      PX2ZDS=PX2ZD2
      PY1ZDS=PY1ZD2
      PY2ZDS=PY2ZD2
      ISORSW=ISORS2
      IPPTBI=IPPTB2
C
      ICPLFR=ICPLFZ
C
      DO8500I=1,MAXCH
        IX1LTE(I)=IX1LT2(I)
        IX2LTE(I)=IX2LT2(I)
        IY1LTE(I)=IY1LT2(I)
        IY2LTE(I)=IY2LT2(I)
 8500 CONTINUE
      NCX1LA=NCX1L2
      NCX2LA=NCX2L2
      NCY1LA=NCY1L2
      NCY2LA=NCY2L2
C
      IFEEDB=IFEED9
C
      DO8809I=1,MAXCH
        ITITTE(I)=ITITSV(I)
 8809 CONTINUE
      NCTITL=NCTITS
      PTITDS=PTITDZ
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGG3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BITA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBITA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NUMARG
 9014   FORMAT('NUMARG = ',I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GT.0)THEN
          DO9021I=1,NUMARG
            WRITE(ICOUT,9022)I,IHARG(I),IARGT(I)
 9022       FORMAT('I,IHARG(I),IARGT(I) = ',I8,2X,A4,2X,A4)
            CALL DPWRST('XXX','BUG ')
 9021     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBKCL(IHARG,NUMARG,IDBKCO,IBKPCO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE COLOR FOR THE 3-D BACKPLANE.
C              THE COLOR FOR THE BACKPLANE WILL BE PLACED
C              IN THE CHARACTER VARIABLE IBKPCO.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDBKCO
C     OUTPUT ARGUMENTS--IBKPCO
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     NOTE--THIS SUBROUTINE ASSUMES A
C           COMPLICATED-TO-SIMPLE CHECKING ORDER
C           (IN MAIPC4) OF THE VARIOUS BACKPLANE COMMANDS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDBKCO
      CHARACTER*4 IBKPCO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.EQ.1)GOTO1150
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      GOTO1160
C
 1150 CONTINUE
      IBKPCO=IDBKCO
      GOTO1180
C
 1160 CONTINUE
      IBKPCO=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBKPCO
 1181 FORMAT('THE (3-D) BACKPLANE COLOR ',
     1'HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBKGC(IHARG,NUMARG,IDBKGC,IBKPGC,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE COLOR FOR THE 3-D BACKPLANE GRID.
C              THE COLOR FOR THE BACKPLANE GRID WILL BE PLACED
C              IN THE CHARACTER VARIABLE IBKPGC.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDBKGC
C     OUTPUT ARGUMENTS--IBKPGC
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     NOTE--THIS SUBROUTINE ASSUMES A
C           COMPLICATED-TO-SIMPLE CHECKING ORDER
C           (IN MAIPC4) OF THE VARIOUS BACKPLANE COMMANDS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 WASHINGPON, D. C. 20234
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDBKGC
      CHARACTER*4 IBKPGC
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.1)GOTO1199
      IF(NUMARG.EQ.2)GOTO1150
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      GOTO1160
C
 1150 CONTINUE
      IBKPGC=IDBKGC
      GOTO1180
C
 1160 CONTINUE
      IBKPGC=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBKPGC
 1181 FORMAT('THE (3-D) BACKPLANE GRID COLOR ',
     1'HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBKGP(IHARG,NUMARG,IDBKGP,IBKPGP,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE PATTERN FOR THE 3-D BACKPLANE GRID.
C              THE PATTERN FOR THE BACKPLANE GRID WILL BE PLACED
C              IN THE CHARACTER VARIABLE IBKPGP.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDBKGP
C     OUTPUT ARGUMENTS--IBKPGP
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     NOTE--THIS SUBROUTINE ASSUMES A
C           COMPLICATED-TO-SIMPLE CHECKING ORDER
C           (IN MAIPC4) OF THE VARIOUS BACKPLANE COMMANDS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 WASHINGPON, D. C. 20234
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDBKGP
      CHARACTER*4 IBKPGP
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.1)GOTO1199
      IF(NUMARG.EQ.2)GOTO1160
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1160
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1170
      GOTO1175
C
 1150 CONTINUE
      IBKPGP='SOLI'
      GOTO1180
C
 1160 CONTINUE
      IBKPGP='BLAN'
      GOTO1180
C
 1170 CONTINUE
      IBKPGP=IDBKGP
      GOTO1180
C
 1175 CONTINUE
      IBKPGP=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBKPGP
 1181 FORMAT('THE (3-D) BACKPLANE GRID PATTERN ',
     1'HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBKGR(IHARG,NUMARG,IDBKGR,IBKPGR,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE 3-D BACKPLANE GRID SWITCH IBKPGR.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDBKGR
C     OUTPUT ARGUMENTS--IBKPGR   ('ON'  OR 'OFF')
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     NOTE--THIS SUBROUTINE ASSUMES A
C           COMPLICATED-TO-SIMPLE CHECKING ORDER
C           (IN MAIPC4) OF THE VARIOUS BACKPLANE COMMANDS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDBKGR
      CHARACTER*4 IBKPGR
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.EQ.1)GOTO1150
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1160
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1170
      GOTO1199
C
 1150 CONTINUE
      IBKPGR='ON'
      GOTO1180
C
 1160 CONTINUE
      IBKPGR='OFF'
      GOTO1180
C
 1170 CONTINUE
      IBKPGR=IDBKGR
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBKPGR
 1181 FORMAT('THE (3-D) BACKPLANE GRID SWITCH ',
     1'HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBKP(IHARG,NUMARG,IBKPSW,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE 3-D BACKPLANE SWITCH IBKPSW.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--IBKPSW   ('ON'  OR 'OFF')
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     NOTE--THIS SUBROUTINE ASSUMES A
C           COMPLICATED-TO-SIMPLE CHECKING ORDER
C           (IN MAIPC4) OF THE VARIOUS BACKPLANE COMMANDS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IBKPSW
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1150
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1160
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1160
      GOTO1199
C
 1150 CONTINUE
      IBKPSW='ON'
      GOTO1180
C
 1160 CONTINUE
      IBKPSW='OFF'
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBKPSW
 1181 FORMAT('THE (3-D) BACKPLANE SWITCH ',
     1'HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBLOC(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
CCCCC                   MARCH 1995.  ADD MAXNXT TO ARGUMENT LIST
     1                  BARHEF,BARWEF,MAXNXT,ISEED,ICHMAP,ICONT,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A BLOCK PLOT
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 NATIONAL INSTITUTE OF STANDARDS & TECHNOLOGY
C                 GAITHERSBURG, MARYLAND 20899
C                 PHONE--301-975-2855
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     SYNTAX FOR COMMAND (MUST HAVE 3 OR MORE ARGUMENTS)--
C           BLOCK PLOT Y <SEQ. OF VAR. DEFINING HOR. AXIS> CHAR-VAR.
C     EXAMPLES--
C           BLOCK PLOT Y BOY MAT
C           BLOCK PLOT Y X1 X2  MAD AND AAD PLOTS
C           BLOCK PLOT Y CONC QUENCH OVEN
C           BLOCK PLOT Y    X2 X3    X1
C           BLOCK PLOT Y    X2 X3 X4 X5 X6 X7    X1
C     NOTE--MAX NUMBER OF NUISANCE FACTORS = 20
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--92/5
C     ORIGINAL VERSION--MAY       1992.
C     UPDATED         --MARCH     1995.  MAD AND AAD PLOTS
C     UPDATED         --MARCH     2002. ADD ROBUSTNESS PLOT AS
C                                       SYNONYM FOR BLOCK PLOT
C     UPDATED         --AUGUST    2002. USE "CMPSTA" TO COMPUTE
C                                       STATISTICS, EXPAND LIST OF
C                                       SUPPORTED STATISTICS
C     UPDATED         --APRIL     2003. ADD SN AND QN (ROBUST SCALE
C                                       STATISTICS)
C     UPDATED         --MAY       2007. ADD TRIMMED STAND DEVI
C     UPDATED         --NOVEMBER  2007. LP LOCATION
C     UPDATED         --NOVEMBER  2007. VARIANCE OF LP LOCATION
C     UPDATED         --NOVEMBER  2007. SD OF LP LOCATION
C     UPDATED         --SEPTEMBER 2008. BINOMIAL PROBABILITY
C     UPDATED         --FEBRUARY  2009. INDEX MINIMUM
C     UPDATED         --FEBRUARY  2009. INDEX MAXIMUM
C     UPDATED         --FEBRUARY  2009. INDEX EXTREME
C     UPDATED         --FEBRUARY  2009. GRUBB
C                                       GRUBB CDF
C                                       GRUBB DIRECTION
C                                       GRUBB INDEX
C     UPDATED         --FEBRUARY  2009. ONE SAMPLE T TEST
C                                       ONE SAMPLE T TEST CDF
C     UPDATED         --FEBRUARY  2009. CHI-SQUARE SD TEST
C                                       CHI-SQUARE SD TEST CDF
C     UPDATED         --FEBRUARY  2009. FREQUENCY TEST
C                                       FREQUENCY TEST CDF
C     UPDATED         --FEBRUARY  2009. FREQUENCY WITHIN A BLOCK TEST
C                                       FREQUENCY WITHIN A BLOCK TEST CDF
C     UPDATED         --MARCH     2009. PARSE WITH EXTSTA
C     UPDATED         --APRIL     2009. USE DPPARS ROUTINE
C     UPDATED         --JUNE      2010. CMPSTA NOW ACCOMODATES 3
C                                       RESPONSE VARIABLES
C     UPDATED         --APRIL     2012. SUPPORT FOR FIXED WIDTH BARS
C     UPDATED         --APRIL     2012. SUPPORT FOR FILTERING WHEN
C                                       ONLY ONE VALUE FOR A PARTICULAR
C                                       COMBINATION OF FACTOR LEVELS
C     UPDATED         --DECEMBER  2012. BUG FIX INTRODUCDED WITH 4/2012
C                                       UPDATES
C     UPDATED         --DECEMBER  2012. SUPPORT FOR "BACKGROUND" FOR
C                                       BLOCKS
C     UPDATED         --NOVEMBER  2016. SUPPORT FOR "JITTER"
C     UPDATED         --MARCH     2019. ADD ICHMAP TO CALL LIST
C     UPDATED         --JULY      2019. TWEAK SCRATCH SPACE
C     UPDATED         --AUGUST    2023. CALL LIST TO EXTSTA, CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 ICHMAP
      CHARACTER*4 ICONT
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
      CHARACTER*40 INAME
      CHARACTER*4  ISTADF
      CHARACTER*4  ISTARA
      CHARACTER*60 ISTANM
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IWRITE
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION X1(MAXOBV)
      DIMENSION TAG(MAXOBV)
      DIMENSION TEMP(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
C
      DIMENSION Y2(MAXOBV)
      DIMENSION X2(MAXOBV)
      DIMENSION TAG2(MAXOBV)
      DIMENSION TAG9(MAXOBV)
      DIMENSION DTAG(MAXOBV)
      DIMENSION DTAG2(MAXOBV)
      DIMENSION DTAG9(MAXOBV)
      DIMENSION DIST(MAXOBV)
      DIMENSION DISTLA(MAXOBV)
      DIMENSION DISTL2(MAXOBV)
C
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XTEMP3(MAXOBV)
      DIMENSION XTEMP4(MAXOBV)
      DIMENSION XTEMP5(MAXOBV)
      DIMENSION X2JITT(MAXOBV)
C
      INTEGER ITEMP1(MAXOBV)
      INTEGER ITEMP2(MAXOBV)
      INTEGER ITEMP3(MAXOBV)
      INTEGER ITEMP4(MAXOBV)
      INTEGER ITEMP5(MAXOBV)
      INTEGER ITEMP6(MAXOBV)
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
      DOUBLE PRECISION DTEMP3(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCOZD.INC'
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),X1(1))
      EQUIVALENCE (GARBAG(IGARB4),TAG(1))
      EQUIVALENCE (GARBAG(IGARB5),TEMP(1))
      EQUIVALENCE (GARBAG(IGARB6),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB7),DIST(1))
      EQUIVALENCE (GARBAG(IGARB8),Y2(1))
      EQUIVALENCE (GARBAG(IGARB9),X2(1))
      EQUIVALENCE (GARBAG(IGAR10),TAG2(1))
      EQUIVALENCE (GARBAG(JGAR11),DTAG(1))
      EQUIVALENCE (GARBAG(JGAR12),DTAG2(1))
      EQUIVALENCE (GARBAG(JGAR13),XTEMP1(1))
      EQUIVALENCE (GARBAG(JGAR14),XTEMP2(1))
      EQUIVALENCE (GARBAG(JGAR15),XTEMP3(1))
      EQUIVALENCE (GARBAG(JGAR16),DTAG9(1))
      EQUIVALENCE (GARBAG(JGAR17),TEMP3(1))
      EQUIVALENCE (GARBAG(JGAR18),TAG9(1))
      EQUIVALENCE (GARBAG(JGAR19),DISTLA(1))
      EQUIVALENCE (GARBAG(JGAR20),DISTL2(1))
      EQUIVALENCE (GARBAG(IGAR11),X2JITT(1))
      EQUIVALENCE (GARBAG(IGAR12),XTEMP4(1))
      EQUIVALENCE (GARBAG(IGAR13),XTEMP5(1))
C
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1(1))
      EQUIVALENCE (IGARBG(IIGAR2),ITEMP2(1))
      EQUIVALENCE (IGARBG(IIGAR3),ITEMP3(1))
      EQUIVALENCE (IGARBG(IIGAR4),ITEMP4(1))
      EQUIVALENCE (IGARBG(IIGAR5),ITEMP5(1))
      EQUIVALENCE (IGARBG(IIGAR6),ITEMP6(1))
      EQUIVALENCE (DGARBG(IDGAR1),DTEMP1(1))
      EQUIVALENCE (DGARBG(IDGAR2),DTEMP2(1))
      EQUIVALENCE (DGARBG(IDGAR3),DTEMP3(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPBL'
      ISUBN2='OC  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *********************************
C               **  TREAT THE BLOCK PLOT CASE  **
C               *********************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BLOC')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBLOC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2,ISUBRO
   52   FORMAT('ICASPL,IAND1,IAND2,ISUBRO = ',A4,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICONT,IBUGG2,IBUGG3,IBUGQ
   53   FORMAT('ICONT,IBUGG2,IBUGG3,IBUGQ = ',A4,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)BARHEF,BARWEF
   54   FORMAT('BARHEF,BARWEF = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BLOC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
C
      ICASPL='RAW '
      IFOUND='YES'
      IF(ICOM.EQ.'BLOC'.OR.ICOM.EQ.'ROBU')THEN
         ICASPL='RAW '
         ILASTC=1
      ELSE
C
C       MARCH 2009: USE EXTSTA TO PARSE STATISTIC
C
        JMIN=0
        JMAX=NUMARG
C
        DO200I=1,NUMARG-1
          IF((IHARG(I).EQ.'BLOC'.OR.IHARG(I).EQ.'ROBU') .AND.
     1        IHARG(I+1).EQ.'PLOT')THEN
            JMAX=I-1
            ILASTC=I+1
            GOTO209
          ENDIF
  200   CONTINUE
        IFOUND='NO'
        GOTO9000
  209   CONTINUE
C
        CALL EXTSTA(ICOM,ICOM2,IHARG,IHARG2,IARGT,ARG,NUMARG,JMIN,JMAX,
     1              ICASPL,ISTANM,ISTANR,ISTADF,ISTARA,
     1              IFOUND,ILOCV,
     1              ISUBRO,IBUGG3,IERROR)
C
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BLOC')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,251)
  251     FORMAT('***** AFTER CALL EXTSTA--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,252)ICASPL,ISTANR,ILOCV,IFOUND
  252     FORMAT('ICASPL,ISTANR,ILOCV,IFOUND = ',A4,2I8,2X,A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(ISTANR.GE.2)IFOUND='NO'
        IF(IFOUND.EQ.'NO')GOTO9000
      ENDIF
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BLOC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BLOCK PLOT'
      MINNA=3
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=-99
      MAXNVA=-99
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BLOC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               *********************************
C               **  STEP 3--                   **
C               **  EXTRACT THE DATA           **
C               *********************************
C
      ISTEPN='3'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BLOC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C
C     STEP 3A--EXTRACT THE VERTICAL AXIS AND TAG VARIABLES
C
      ICOLV=ICOLR(1)
      ICOLT=ICOLR(NUMVAR)
      IMAX=NQ
      J=0
      DO660I=1,IMAX
         IF(ISUB(I).EQ.1)THEN
C
            J=J+1
            IJ=MAXN*(ICOLV-1)+I
            IF(ICOLV.LE.MAXCOL)Y1(J)=V(IJ)
            IF(ICOLV.EQ.MAXCP1)Y1(J)=PRED(I)
            IF(ICOLV.EQ.MAXCP2)Y1(J)=RES(I)
            IF(ICOLV.EQ.MAXCP3)Y1(J)=YPLOT(I)
            IF(ICOLV.EQ.MAXCP4)Y1(J)=XPLOT(I)
            IF(ICOLV.EQ.MAXCP5)Y1(J)=X2PLOT(I)
            IF(ICOLV.EQ.MAXCP6)Y1(J)=TAGPLO(I)
C
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XTEMP1(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XTEMP1(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XTEMP1(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XTEMP1(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XTEMP1(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XTEMP1(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XTEMP1(J)=TAGPLO(I)
C
         ENDIF
  660 CONTINUE
      NLOCAL=J
C
C     2013/06: CODE THE PRIMARY VARIABLE
C     2019/03: TURN OFF CODING IF CHARACTER MAPPING
C              SET TO EXACT
C
      IF(ICHMAP.EQ.'EXAC')THEN
        DO662II=1,NLOCAL
          TAG(II)=XTEMP1(II)
  662   CONTINUE
      ELSE
        IWRITE='OFF'
        CALL CODE(XTEMP1,NLOCAL,IWRITE,TAG,XTEMP2,MAXOBV,
     1            IBUGG3,IERROR)
      ENDIF
C
C     STEP 3B--FORM THE HORIZONTAL AXIS VARIABLE
C              BY COMBINING ALL NUISANCE AXIS VARIABLES
C
      SHRINK=0.20
      NUMV2M=NUMVAR-1
      DO680K=2,NUMV2M
C
         IF(K.GE.3)THEN
            CALL DISTIN(X1,NLOCAL,'OFF ',DIST,NDIST,IBUGG3,IERROR)
            CALL SORT(DIST,NDIST,DIST)
            DELMIN=CPUMAX
            NDISTM=NDIST-1
            DO682I=1,NDISTM
               IP1=I+1
               DEL=DIST(IP1)-DIST(I)
               IF(DEL.LT.DELMIN)DELMIN=DEL
  682       CONTINUE
         ENDIF
C
         ICOLH=ICOLR(K)
         J=0
         DO684I=1,IMAX
            IF(ISUB(I).EQ.1)THEN
               J=J+1
               IJ=MAXN*(ICOLH-1)+I
               IF(ICOLH.LE.MAXCOL)TEMP(J)=V(IJ)
               IF(ICOLH.EQ.MAXCP1)TEMP(J)=PRED(I)
               IF(ICOLH.EQ.MAXCP2)TEMP(J)=RES(I)
               IF(ICOLH.EQ.MAXCP3)TEMP(J)=YPLOT(I)
               IF(ICOLH.EQ.MAXCP4)TEMP(J)=XPLOT(I)
               IF(ICOLH.EQ.MAXCP5)TEMP(J)=X2PLOT(I)
               IF(ICOLH.EQ.MAXCP6)TEMP(J)=TAGPLO(I)
            ENDIF
  684    CONTINUE
         NTEMP=J
C
C        FOR LAST NUISANCE VARIABLE, CREATE A CODED VALUE THAT CAN
C        USED TO LABEL THE INDIVIDUAL BLOCKS.
C
         IF(K.EQ.NUMV2M)THEN
            IWRITE='OFF'
            CALL CODE(TEMP,NTEMP,IWRITE,DISTL2,XTEMP1,MAXOBV,
     1                IBUGG3,IERROR)
            CALL MAXIM(DISTL2,NTEMP,IWRITE,XMAX,IBUGG3,IERROR)
            NLABEL=INT(XMAX+0.1)
C
            IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BLOC')THEN
              DO710II=1,NTEMP
                WRITE(ICOUT,712)II,TEMP(II),DISTL2(II)
  712           FORMAT('II,TEMP(II),DISTL2(II) = ',I8,2G15.7)
                CALL DPWRST('XXX','BUG ')
  710         CONTINUE
              WRITE(ICOUT,715)NLABEL
  715         FORMAT('NLABEL = ',I8)
              CALL DPWRST('XXX','BUG ')
           ENDIF
C
         ENDIF
C
         IF(K.EQ.2)THEN
            DO686I=1,NTEMP
               X1(I)=TEMP(I)
  686       CONTINUE
         ELSE
C
            CALL MINIM(TEMP,NTEMP,'OFF ',XMIN,IBUGG3,IERROR)
            CALL MAXIM(TEMP,NTEMP,'OFF ',XMAX,IBUGG3,IERROR)
            DENOM=XMAX-XMIN
C
            IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BLOC')THEN
              WRITE(ICOUT,687)K,DENOM,DELMIN,SHRINK
  687         FORMAT('K,DENOM,DELMIN,SHRINK = ',I8,3G15.7)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            DO688I=1,NTEMP
               TEMP(I)=2.0*((TEMP(I)-XMIN)/DENOM)-1.0
               TEMP(I)=TEMP(I)*DELMIN
               TEMP(I)=TEMP(I)*SHRINK
               X1(I)=X1(I)+TEMP(I)
  688       CONTINUE
         ENDIF
  680 CONTINUE
C
C               ********************************************************
C               **  STEP 8--                                          **
C               **  COMPUTE THE APPROPRIATE BLOCK PLOT                **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS             **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.                **
C               **  DEFINE THE VECTOR D(.) TO 1'S, 2'S, AND 3'S       **
C               **  FORM THE PLOTTED VALUE AND THE SURROUNDING BAR.   **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).     **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).     **
C               ********************************************************
C
      ISTEPN='8'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BLOC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPBLO2(Y1,X1,TAG,NLOCAL,ICASPL,ISTARA,
     1            DIST,Y2,X2,TAG2,DTAG,DTAG2,TAG9,DTAG9,
     1            TEMP,TEMP2,TEMP3,
     1            XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,X2JITT,
     1            DISTL2,DISTLA,NLABEL,
     1            ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1            DTEMP1,DTEMP2,DTEMP3,
     1            BARHEF,BARWEF,MAXNXT,IBPLFI,PBPLWI,IBPLLA,IBPLBG,
     1            ISEED,
     1            Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C               **************************************************
C               **  STEP 9--                                    **
C               **  REDEFINE ICASPL FOR USE                     **
C               **  IN THE    PLOTGE   SUBROUTINE               **
C               **************************************************
C
      ICASPL='BLPL'
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BLOC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBLOC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,ISUBRO,IERROR
 9012   FORMAT('IFOUND,ISUBRO,IERROR = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         3I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)BARHEF,BARWEF,PBPLWI,IBPLFI
 9014   FORMAT('BARHEF,BARWEF,PBPLWI,IBPLFI = ',3G15.7,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GT.0)THEN
          DO9015I=1,NPLOTP
            WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9015     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBLO2(Y,X,TAG,N,ICASPL,ISTARA,
     1            DIST,Y2,X2,TAG2,DTAG,DTAG2,TAG9,DTAG9,
     1            TEMP,TEMP2,TEMP3,
     1            XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,X2JITT,
     1            DISTL2,DISTLA,NLABEL,
     1            ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1            DTEMP1,DTEMP2,DTEMP3,
     1            BARHEF,BARWEF,MAXNXT,IBPLFI,PBPLWI,IBPLLA,IBPLBG,
     1            ISEED,
     1            Y3,X3,D3,N3,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE A BLOCK PLOT
C     WRITTEN BY--JAMES J. FILLIBEN
C                 NATIONAL INSTITUTE OF STANDARDS & TECHNOLOGY
C                 GAITHERSBURG, MARYLAND 20899
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     ORIGINAL VERSION--MAY      1992
C     UPDATED         --MARCH    1995 MAXNXT TO ARGUMENT LIST
C     UPDATED         --JUNE     1995 FIX VERTICES JUNK
C     UPDATED         --APRIL    2012 SUPPORT FOR FIXED WIDTH BARS
C     UPDATED         --APRIL    2012 SUPPORT FOR FILTERING WHEN
C                                     ONLY ONE VALUE FOR A PARTICULAR
C                                     COMBINATION OF FACTOR LEVELS
C     UPDATED         --APRIL    2012 SUPPORT FOR LABELING LAST NUISANCE
C                                     VARIABLE (USEFUL FOR FILTERING CASE)
C     UPDATED         --NOVEMBER 2016 SUPPORT FOR "JITTERING"
C     UPDATED         --AUGUST   2023 CALL LIST TO CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ISTARA
      CHARACTER*4 IBPLFI
      CHARACTER*4 IBPLLA
      CHARACTER*4 IBPLBG
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION TAG(*)
C
      DIMENSION Y3(*)
      DIMENSION X3(*)
      DIMENSION D3(*)
C
      DIMENSION DIST(*)
      DIMENSION DISTL2(*)
      DIMENSION DISTLA(*)
C
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION TAG2(*)
C
      DIMENSION DTAG(*)
      DIMENSION DTAG2(*)
      DIMENSION DTAG9(*)
      DIMENSION TAG9(*)
      DIMENSION TEMP(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
      DIMENSION X2JITT(*)
C
      INTEGER ITEMP1(*)
      INTEGER ITEMP2(*)
      INTEGER ITEMP3(*)
      INTEGER ITEMP4(*)
      INTEGER ITEMP5(*)
      INTEGER ITEMP6(*)
C
      DOUBLE PRECISION DTEMP1(*)
      DOUBLE PRECISION DTEMP2(*)
      DOUBLE PRECISION DTEMP3(*)
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
C
      CHARACTER*4 IFOUNN
C
      DOUBLE PRECISION DCDF
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBL'
      ISUBN2='O2  '
C
      XWIDTH=0.0
      XWIDT2=0.0
C
C     CHECK THE INPUT ARGUMENTS FOR ERRORS
C
      IF(N.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,46)
   46   FORMAT('***** ERROR IN BLOCK PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,47)
   47   FORMAT('      THE NUMBER OF OBSERVATIONS WAS LESS THAN 2.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BLO2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('AT THE BEGINNING OF DPBLO2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,ISUBRO,IBPLFI,IBPLBG
   53   FORMAT('ICASPL,ISUBRO,IBPLFI,IBPLBG = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)BARHEF,BARWEF,PBPLWI,N,NLABEL
   54   FORMAT('BARHEF,BARWEF,PBPLWI,N,NLABEL = ',3G15.7,2I8)
        CALL DPWRST('XXX','BUG ')
        DO75I=1,N
         WRITE(ICOUT,76)I,Y(I),X(I),TAG(I)
   76    FORMAT('I, Y(I), X(I),TAG(I) = ',I8,3G15.7)
         CALL DPWRST('XXX','BUG ')
   75   CONTINUE
      ENDIF
C
C               ********************************************************
C               **  STEP 11--                                         **
C               **  DETERMINE THE NUMBER OF DISTINCT VALUES           **
C               **  FOR VARIABLE 2 (THE HOR. AXIS VARIABLE).          **
C               ********************************************************
C
      ISTEPN='11'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BLO2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DISTIN(X,N,'OFF ',DIST,NDIST,IBUGG3,IERROR)
      CALL SORT(DIST,NDIST,DIST)
C
C               **************************************************
C               **  STEP 12--                                   **
C               **  IF NO STATISTIC IS CALLED FOR,              **
C               **  CARRY OVER THE RAW DATA INTO Y2,X2,TAG2,N2. **
C               **  IF A STATISTIC IS CALLED FOR,               **
C               **  COMPUTE THE STATISTICS AND COPY IT INTO     **
C               **  Y2,X**2,TAG2,N2.                            **
C               **************************************************
C
      ISTEPN='12'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BLO2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPBLO3(Y,X,TAG,N,ICASPL,ISTARA,DIST,NDIST,
     1            TAG9,DTAG9,TEMP,TEMP2,TEMP3,
     1            XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,X2JITT,NJITT,
     1            DISTL2,DISTLA,NLABEL,
     1            ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1            DTEMP1,DTEMP2,DTEMP3,
     1            MAXNXT,ISEED,
     1            Y2,X2,TAG2,N2,IBUGG3,ISUBRO,IERROR)
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BLO2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1001)
 1001   FORMAT('DPBLO2: AFTER CALL DPBLO3')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1003)NDIST,N2
 1003   FORMAT('NDIST,N2 = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO1010I=1,NDIST
          WRITE(ICOUT,1011)I,DIST(I)
 1011     FORMAT('I,DIST(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
 1010   CONTINUE
        DO1020I=1,N2
          WRITE(ICOUT,1021)I,Y2(I),X2(I),TAG2(I)
 1021     FORMAT('I,Y2(I),X2(I),TAG2(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
 1020   CONTINUE
      ENDIF
C
C               ***************************************
C               **  STEP 13--                        **
C               **  COMPUTE 'COIN' PROBABILITY       **
C               **  FOR OBSERVED PATTERN.            **
C               **  UPDATE INTERNAL DATAPLOT ARRAYS  **
C               ***************************************
C
      CALL DISTIN(TAG2,N2,'OFF ',DTAG2,NDTAG2,IBUGG3,IERROR)
      FACES=NDTAG2
      PROB=1.0/FACES
C
C     NOTE 08/2010: PASS SEVERAL TEMPORARY ARRAYS INSTEAD OF
C                   DECLARING THEM IN "HEADS".  CAUSED A CONFLICT
C                   WITH NEW TEMPORARY ARRARYS CREATED IN DPBLOC.
C
      CALL HEADS(Y2,X2,TAG2,N2,
     1DIST,DTAG,
CCCCC1TEMP3,DTAG,
CCCCC ADD FOLLOWING LINE 08/2010
     1XTEMP1,XTEMP2,XTEMP3,
     1HEADS2,NTRIAL,AVEDEL,SDAVED,IBUGG3,ISUBRO,IERROR)
      HEADS3=HEADS2-1.0
      TRIALS=NTRIAL
C
      CALL BINCDF(DBLE(HEADS3),DBLE(PROB),NTRIAL,DCDF)
      CDF=REAL(DCDF)
      TAILPR=1.0-CDF
C
      CALL UPDATP('HEAD','S   ',HEADS2,'CHAD','NO  ',
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,ILOCN,IFOUNN,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      CALL UPDATP('TRIA','LS  ',TRIALS,'CHAD','NO  ',
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,ILOCN,IFOUNN,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      CALL UPDATP('FACE','S   ',FACES,'CHAD','NO  ',
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,ILOCN,IFOUNN,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      CALL UPDATP('TAIL','PROB',TAILPR,'CHAD','NO  ',
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,ILOCN,IFOUNN,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      CALL UPDATP('AVED','EL  ',AVEDEL,'CHAD','NO  ',
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,ILOCN,IFOUNN,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      CALL UPDATP('SDAV','EDEL',SDAVED,'CHAD','NO  ',
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,ILOCN,IFOUNN,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************************
C               **  STEP 20--FORM PLOT COORDINATES                 **
C               **           BASED ON THE TAG VARIABLE (VAR.3).    **
C               **           THIS WILL BE A STRAIGHT COPY.         **
C               **           THIS WILL YIELD THE CHARACTERS PORTION**
C               **           OF THE FINAL PLOT.                    **
C               *****************************************************
C
      DO1100I=1,N2
         Y3(I)=Y2(I)
         X3(I)=X2(I)
         D3(I)=TAG2(I)
 1100 CONTINUE
      J=N2
C
      TAGMAX=CPUMIN
      DO1200I=1,N2
         IF(TAG2(I).GT.TAGMAX)TAGMAX=TAG2(I)
 1200 CONTINUE
C
      IOFFST=0
      IF(IBPLLA.EQ.'ON')IOFFST=INT(TAGMAX+0.1)
C
CCCCC THE FOLLOWING LINE WAS CORRECTED               JUNE 1995
CCCCC DUE TO EXTRANEOUS CHARACTERS ON THE VERTICES   JUNE 1995
CCCCC OF CHARLES HAGWOOD BLOCK PLOTS                 JUNE 1995
CCCCC JD=TAGMAX+0.5
      JD=100
C
C               *****************************************************
C               **  STEP 21--FORM PLOT COORDINATES                 **
C               **           BASED ON THE HOR. AXIS VAR. (VAR. 2)  **
C               **           THIS WILL YIELD THE BOXES PORTION     **
C               **           OF THE FINAL PLOT.                    **
C               *****************************************************
C
C               ***********************************
C               **  STEP 23--                    **
C               **  COMPUTE MINIMUM CLASS WIDTH  **
C               ***********************************
C
      ISTEPN='23'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BLO2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NDIST.EQ.1)THEN
         XWIDTH=0.10*DIST(1)
      ENDIF
C
      IF(NDIST.GE.2)THEN
         XWIDTH=CPUMAX
         IMAX=NDIST-1
         DO2300I=1,IMAX
            IP1=I+1
            XWIDT2=DIST(IP1)-DIST(I)
            IF(XWIDT2.LT.XWIDTH)XWIDTH=XWIDT2
 2300    CONTINUE
      ENDIF
      BARHAW=XWIDTH/3.0
      BARHAW=BARWEF*BARHAW
      IF(PBPLWI.GT.0.0)THEN
        BARHAW=PBPLWI
      ENDIF
C
C     COMPUTE RANGE OF VERTICAL AXIS DATA
C
      CALL RANGDP(Y2,N2,'OFF ',Y2RANG,IBUGG3,IERROR)
      Y2GAP=0.04*Y2RANG
      Y2GAP=BARHEF*Y2GAP
C
C               **************************************************
C               **  STEP 24--                                   **
C               **  LOOP THROUGH EACH DISTINCT HOR. AXIS VALUE. **
C               **  FOR A GIVEN HORIZONTAL AXIS VALUE--         **
C               **     FIND THE VERTICAL AXIS MINIMUM;          **
C               **     FIND THE VERTICAL AXIS MAXIMUM;          **
C               **     FORM PLOT COORDINATES OF THE BOX.        **
C               **************************************************
C
      ISTEPN='24'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BLO2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IBPLLA.EQ.'ON')THEN
        DO2400ISET=1,NDIST
C
          Y2MIN=CPUMAX
          Y2MAX=CPUMIN
          ICNT=0
          DO2410I=1,N2
            IF(X2(I).EQ.DIST(ISET))THEN
              ICNT=ICNT+1
              IF(Y2(I).LT.Y2MIN)Y2MIN=Y2(I)
              IF(Y2(I).GT.Y2MAX)Y2MAX=Y2(I)
            ENDIF
 2410     CONTINUE
          IF(ICNT.LT.2 .AND. IBPLFI.EQ.'ON')GOTO2400
          Y2MING=Y2MIN-Y2GAP
          Y2MAXG=Y2MAX+Y2GAP
C
          Y2OFF=0.05*Y2RANG
          JDTEMP=INT(IOFFST + DISTLA(ISET)+0.1)
          J=J+1
          X3(J)=DIST(ISET)
          Y3(J)=Y2MAXG+Y2OFF
          D3(J)=JDTEMP
C
 2400   CONTINUE
      ENDIF
C
C     2012/12: "BACKGROUND" CASE WILL DRAW EACH BLOCK AS A SINGLE TRACE.
C              THIS WILL ALLOW THE USER TO USE THE REGION ATTRIBUTE COMMANDS
C              TO FILL THE BLOCKS.
C
C              SET THE TAG VALUE FOR THE BLOCKS TO -1, -2, ETC.
C              THE PLOTGE ROUTINE WILL HANDLE THIS VERSION OF THE BLOCK
C              PLOT AS A SPECIAL CASE (POSITIVE VALUES WILL IDENTIFY THE
C              "CHARACTER" TRACES AND NEGATIVE VALUES WILL IDENTIFY THE
C              "BLOCK" TRACES).
C
      IF(IBPLBG.EQ.'ON')THEN
C
        JD=0
        DO2600ISET=1,NDIST
C
          Y2MIN=CPUMAX
          Y2MAX=CPUMIN
          ICNT=0
          DO2610I=1,N2
            IF(X2(I).EQ.DIST(ISET))THEN
              ICNT=ICNT+1
              IF(Y2(I).LT.Y2MIN)Y2MIN=Y2(I)
              IF(Y2(I).GT.Y2MAX)Y2MAX=Y2(I)
            ENDIF
 2610     CONTINUE
          IF(ICNT.LT.2 .AND. IBPLFI.EQ.'ON')GOTO2600
          Y2MING=Y2MIN-Y2GAP
          Y2MAXG=Y2MAX+Y2GAP
C
          JD=JD-1
          J=J+1
          X3(J)=DIST(ISET)-BARHAW
          Y3(J)=Y2MING
          D3(J)=JD
          J=J+1
          X3(J)=DIST(ISET)+BARHAW
          Y3(J)=Y2MING
          D3(J)=JD
          J=J+1
          X3(J)=DIST(ISET)+BARHAW
          Y3(J)=Y2MAXG
          D3(J)=JD
          J=J+1
          X3(J)=DIST(ISET)-BARHAW
          Y3(J)=Y2MAXG
          D3(J)=JD
          J=J+1
          X3(J)=DIST(ISET)-BARHAW
          Y3(J)=Y2MING
          D3(J)=JD
 2600   CONTINUE
      ELSE
        DO2500ISET=1,NDIST
C
          Y2MIN=CPUMAX
          Y2MAX=CPUMIN
          ICNT=0
          DO2510I=1,N2
            IF(X2(I).EQ.DIST(ISET))THEN
              ICNT=ICNT+1
              IF(Y2(I).LT.Y2MIN)Y2MIN=Y2(I)
              IF(Y2(I).GT.Y2MAX)Y2MAX=Y2(I)
            ENDIF
 2510     CONTINUE
          IF(ICNT.LT.2 .AND. IBPLFI.EQ.'ON')GOTO2500
          Y2MING=Y2MIN-Y2GAP
          Y2MAXG=Y2MAX+Y2GAP
C
          JD=JD+1
          J=J+1
          X3(J)=DIST(ISET)-BARHAW
          Y3(J)=Y2MING
          D3(J)=JD
          J=J+1
          X3(J)=DIST(ISET)+BARHAW
          Y3(J)=Y2MING
          D3(J)=JD
C
          JD=JD+1
          J=J+1
          X3(J)=DIST(ISET)+BARHAW
          Y3(J)=Y2MING
          D3(J)=JD
          J=J+1
          X3(J)=DIST(ISET)+BARHAW
          Y3(J)=Y2MAXG
          D3(J)=JD
C
          JD=JD+1
          J=J+1
          X3(J)=DIST(ISET)+BARHAW
          Y3(J)=Y2MAXG
          D3(J)=JD
          J=J+1
          X3(J)=DIST(ISET)-BARHAW
          Y3(J)=Y2MAXG
          D3(J)=JD
C
          JD=JD+1
          J=J+1
          X3(J)=DIST(ISET)-BARHAW
          Y3(J)=Y2MAXG
          D3(J)=JD
          J=J+1
          X3(J)=DIST(ISET)-BARHAW
          Y3(J)=Y2MING
          D3(J)=JD
C
 2500   CONTINUE
      ENDIF
C
      IF(NJITT.GT.0)THEN
        DO3010I=1,NJITT
          X3(I)=X3(I)+X2JITT(I)
 3010   CONTINUE
      ENDIF
      N3=J
      NPLOTV=3
      GOTO9000
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BLO2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBLO2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,ISUBRO,BARHEF,BARWEF
 9012   FORMAT('ICASPL,ISUBRO,BARHEF,BARWEF = ',2(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)N,NDIST,N2,N3,IERROR
 9013   FORMAT('N,NDIST,N2,N3,IERROR = ',4I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)XWIDT2,XWIDTH,BARHAW
 9015   FORMAT('XWIDT2,XWIDTH,BARHAW = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
C
        DO9021I=1,N2
          WRITE(ICOUT,9022)I,Y2(I),X2(I),TAG2(I)
 9022     FORMAT('I,Y2(I),X2(I),TAG2(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9021   CONTINUE
C
        WRITE(ICOUT,9031)Y2RANG,Y2GAP
 9031   FORMAT('Y2RANG,Y2GAP = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9032)Y2MIN,Y2MAX,Y2MING,Y2MAXG
 9032   FORMAT('Y2MIN,Y2MAX,Y2MING,Y2MAXG = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        DO9035I=1,N3
          WRITE(ICOUT,9036)I,Y3(I),X3(I),D3(I)
 9036     FORMAT('I,Y3(I),X3(I),D3(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9035   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBLO3(Y,X,TAG,N,ICASPL,ISTARA,DIST,NDIST,
     1                  TAG9,DTAG9,TEMP,TEMPZ,TEMPZ2,
     1                  XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,X2JITT,NJITT,
     1                  DISTL2,DISTLA,NLABEL,
     1                  ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                  DTEMP1,DTEMP2,DTEMP3,
     1                  MAXNXT,ISEED,
     1                  Y2,X2,TAG2,N2,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--IF NO STATISTIC IS CALLED FOR,
C              CARRY OVER THE RAW DATA INTO Y2,X2,TAG2,N2.
C              IF A STATISTIC IS CALLED FOR,
C              COMPUTE THE STATISTICS AND COPY IT INTO Y2,X2,TAG2,N2.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 NATIONAL INSTITUTE OF STANDARDS & TECHNOLOGY
C                 GAITHERSBURG, MARYLAND 20899
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     ORIGINAL VERSION--JUNE    1992.
C     UPDATED         --AUGUST  1993.  ADD SOME DECLARATIONS
C     UPDATED         --DECEMBER  1993. LINFIT ARGS + GARBAGE VECTORS
C     UPDATED         --DECEMBER  1993. LINFIT ARGS: PROTECT RESSD/DF
C     UPDATED         --FEBRUARY  1994. COMMENT OUT 2 VARIABLE STATS
C     UPDATED         --NOVEMBER  1994. ISUBN2 TO ISUBN3
C     UPDATED         --MARCH     1995. AAD AND MAD STATISTICS
C     UPDATED         --MAY       1995. ADDITIONAL EQUIVALENCE
C     UPDATED         --NOVEMBER  1998. AAD PERCENTILE
C     UPDATED         --AUGUST    2002. CALL "CMPSTA" TO COMPUTE
C                                       STATISTICS
C     UPDATED         --APRIL     2003. SUPPORT FOR SN AND QN REQUIRES
C                                       ADDITIONAL SCRATCH ARRAYS
C                                       FOR CMPSTA
C     UPDATED         --APRIL     2009. BUG FOR "RAW" BLOCK PLOT WHEN
C                                       THERE IS MORE THAN 1 VALUE
C                                       FOR DISTINCT COMBINATION OF
C                                       X AND TAG VARIABLE
C     UPDATED         --APRIL     2012. SUPPORT FOR FILTERING WHEN
C                                       ONLY ONE VALUE FOR A PARTICULAR
C                                       COMBINATION OF FACTOR LEVELS
C     UPDATED         --NOVEMBER  2016. SUPPORT FOR "JITTERING"
C     UPDATED         --AUGUST    2023. CALL LIST TO CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ISTARA
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
CCCCC CHARACTER*4 ICHMAP
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN3
      CHARACTER*4 ISTEPN
      CHARACTER*4 IWRITE
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION TAG(*)
C
      DIMENSION DIST(*)
      DIMENSION DISTL2(*)
      DIMENSION DISTLA(*)
C
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION TAG2(*)
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
C
      DIMENSION TAG9(*)
      DIMENSION DTAG9(*)
      DIMENSION TEMP(*)
      DIMENSION TEMPZ(*)
      DIMENSION TEMPZ2(*)
C
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
      DIMENSION X2JITT(*)
C
      INTEGER ITEMP1(*)
      INTEGER ITEMP2(*)
      INTEGER ITEMP3(*)
      INTEGER ITEMP4(*)
      INTEGER ITEMP5(*)
      INTEGER ITEMP6(*)
      DOUBLE PRECISION DTEMP1(*)
      DOUBLE PRECISION DTEMP2(*)
      DOUBLE PRECISION DTEMP3(*)
C
      DIMENSION UTEMP(1)
C
      INCLUDE 'DPCOST.INC'
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBL'
      ISUBN3='O3  '
C
      NJITT=0
      ATEMP=0.0
C
C     CHECK THE INPUT ARGUMENTS FOR ERRORS
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BLO3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPBLO3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,ISUBRO
   53   FORMAT('ICASPL,ISUBRO = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)N,NDIST,NLABEL,PBPLJI
   54   FORMAT('N,NDIST,NLABEL,PBPLJI = ',3I8,G15.7)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,Y(I),X(I),TAG(I)
   56     FORMAT('I, Y(I), X(I),TAG(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        DO62I=1,NDIST
          WRITE(ICOUT,63)I,DIST(I)
   63     FORMAT('I, DIST(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   62   CONTINUE
      ENDIF
C
C               **************************************************
C               **  STEP 1--                                    **
C               **  LOOP THROUGH EACH DISTINCT HOR. AXIS VALUE. **
C               **  FOR A GIVEN HORIZONTAL AXIS VALUE--         **
C               **     COPY OVER THE RAW DATA, OR               **
C               **     COMPUTE THE STATISTIC                    **
C               **************************************************
C
      ISTEPN='24'
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BLO3')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN3)
C
      IWRITE='OFF'
      N2=0
      DO1100ISET=1,NDIST
         NTAG9=0
         DO1200I=1,N
            IF(X(I).EQ.DIST(ISET))THEN
               NTAG9=NTAG9+1
               TAG9(NTAG9)=TAG(I)
               ATEMP=DISTL2(I)
            ENDIF
 1200    CONTINUE
         DISTLA(ISET)=ATEMP
         CALL DISTIN(TAG9,NTAG9,'OFF ',DTAG9,NDTAG9,IBUGG3,IERROR)
C
         IF(NDTAG9.LT.2 .AND. IBPLFI.EQ.'ON')THEN
           GOTO1100
         ENDIF
C
         CALL SORT(DTAG9,NDTAG9,DTAG9)
         DO1300K=1,NDTAG9
            NS2=0
            TAGVAL=DTAG9(K)
            DO1400I=1,N
               IF(X(I).EQ.DIST(ISET).AND.TAG(I).EQ.DTAG9(K))THEN
                  NS2=NS2+1
                  TEMP(NS2)=Y(I)
               ENDIF
 1400       CONTINUE
C
            IF(ICASPL.EQ.'RAW ')THEN
              IF(PBPLJI.GT.0.0)THEN
                NTEMP=1
                DO1411JJ=1,NS2
                  RIGHT=TEMP(JJ)
                  N2=N2+1
                  Y2(N2)=RIGHT
                  X2(N2)=DIST(ISET)
                  CALL UNIRAN(NTEMP,ISEED,UTEMP)
                  AVAL=-PBPLJI + UTEMP(1)*(2.0*PBPLJI)
                  NJITT=NJITT+1
                  X2JITT(NJITT)=AVAL
                  TAG2(N2)=DTAG9(K)
 1411           CONTINUE
              ELSE
                DO1410JJ=1,NS2
                  RIGHT=TEMP(JJ)
                  N2=N2+1
                  Y2(N2)=RIGHT
                  X2(N2)=DIST(ISET)
                  TAG2(N2)=DTAG9(K)
 1410           CONTINUE
              ENDIF
            ELSE
              CALL CMPSTA(
     1             TEMP,TEMPZ,TEMPZ2,XTEMP1,XTEMP2,XTEMP3,
     1             XTEMP4,XTEMP5,MAXNXT,
     1             NS2,NS2,NS2,NUMV2,ICASPL,ISTARA,
     1             ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1             DTEMP1,DTEMP2,DTEMP3,
CCCCC1             IQUAME,IQUASE,PSTAMV,
     1             RIGHT,
     1             ISUBRO,IBUGG3,IERROR)
              N2=N2+1
              Y2(N2)=RIGHT
              X2(N2)=DIST(ISET)
              IF(PBPLJI.GT.0.0)THEN
                NTEMP=1
                CALL UNIRAN(NTEMP,ISEED,UTEMP)
                AVAL=-PBPLJI + UTEMP(1)*(2.0*PBPLJI)
                NJITT=NJITT+1
                X2JITT(NJITT)=AVAL
              ENDIF
              TAG2(N2)=DTAG9(K)
            ENDIF
C
 1300    CONTINUE
 1100 CONTINUE
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BLO3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBLO3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,ISUBRO,IERROR
 9012   FORMAT('ICASPL,ISUBRO,IERROR = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)N,NDIST,N2
 9013   FORMAT('N,NDIST,N2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NTAG9,NDTAG9,NS2
 9014   FORMAT('NTAG9,NDTAG9,NS2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
C
        DO9021I=1,N2
          WRITE(ICOUT,9022)I,Y2(I),X2(I),TAG2(I)
 9022     FORMAT('I,Y2(I),X2(I),TAG2(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9021   CONTINUE
C
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBLPA(IHARG,NUMARG,
     1                  IPSTBP,IFOUND,IERROR)
C
C     PURPOSE--TURN ON/OFF THE (INITIAL) BLANK PAGE SWITCH
C              FOR POSTSCRIPT.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IHARG2 (A CHARACTER VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--IPSTBP (A CHARACTER VECTOR
C                              WHICH CONTAINS THE
C                              POSTSCRIPT BLANK PAGE SWITCH (ON/OFF)
C                     --IFOUND ('YES' OR 'NO')
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--92/6
C     ORIGINAL VERSION--MAY       1992.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IPSTBP
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)THEN
         IPSTBP='ON'
      ELSE
         IF(IHARG(NUMARG).EQ.'ON')IPSTBP='ON'
         IF(IHARG(NUMARG).EQ.'OFF')IPSTBP='OFF'
         IF(IHARG(NUMARG).EQ.'AUTO')IPSTBP='ON'
         IF(IHARG(NUMARG).EQ.'DEFA')IPSTBP='OFF'
      ENDIF
C
      IFOUND='YES'
      IF(IFEEDB.EQ.'ON')THEN
         WRITE(ICOUT,999)
  999    FORMAT(1X)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1181)
 1181    FORMAT('THE POSTSCRIPT (INITIAL) BLANK PAGE SWITCH')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1182)IPSTBP
 1182    FORMAT('HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBNPV(P1,N1,P2,N2,ALPHA,ICASAN,IWRITE,PVALUE,
     1                  IBUGA3,IERROR)
C
C     PURPOSE--FOR A GIVEN P1, N1, P2, N2, AND ALPHA, COMPUTE THE
C              HYPOTHESIS TEST FOR EQUAL PROPORTIONS AND RETURN
C              THE APPROPRIATE P-VALUE.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/8
C     ORIGINAL VERSION--AUGUST    2008.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      REAL P1
      REAL P2
      REAL ALPHA
      INTEGER N1
      INTEGER N2
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBN'
      ISUBN2='PV  '
C
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBNPV--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ICASAN,IWRITE
   52   FORMAT('IBUGA3,ICASAN,IWRITE = ',2A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)P1,N1,P2,N2,ALPHA
   53   FORMAT('P1,N1,P2,N2,ALPHA = ',2(G15.7,I8),G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************
C               **  STEP 1--                  **
C               **  CHECK FOR INPUT ERRORS    **
C               ********************************
C
      PVALUE=0.0
C
      IF(N1.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,111)
  111   FORMAT('****** ERROR IN DIFFERENCE OF PROPORTION ',
     1         'HYPOTHESIS TEST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
  113   FORMAT('         THE NUMBER OF OBSERVATIONS FOR THE FIRST ',
     1         'RESPONSE VARIABLE IS LESS THAN 2.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,114)N1
  114   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N2.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,123)
  123   FORMAT('         THE NUMBER OF OBSERVATIONS FOR THE ',
     1         'SECOND RESPONSE VARIABLE IS LESS THAN 2.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,124)N2
  124   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(P1.LT.0.0 .OR. P1.GT.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,162)
  162   FORMAT('      THE BINOMIAL PROBABILITY OF SUCCESS PARAMETER ',
     1         'FOR THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,164)
  164   FORMAT('      FIRST RESPONSE VARIABLE IS OUTSIDE THE ',
     1         '(0,1) INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,167)P1
  167   FORMAT('      THE PROBABILITY OF SUCCESS PARAMETER = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      IF(P2.LT.0.0 .OR. P2.GT.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,162)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,174)
  174   FORMAT('      SECOND RESPONSE VARIABLE IS OUTSIDE THE ',
     1         '(0,1) INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,167)P2
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      ALPHSV=ALPHA
      IF(ALPHA.GT.1.0 .AND. ALPHA.LE.100.0)ALPHA=ALPHA/100.0
      IF(ALPHA.LE.0.0 .OR. ALPHA.GE.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,182)
  182   FORMAT('      THE VALUE OF ALPHA IS OUTSIDE THE (0,1) ',
     1         'INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,187)ALPHA
  187   FORMAT('      THE VALUE OF ALPHA = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      IF(ALPHA.LT.0.5)ALPHA=1.0 - ALPHA
C
C               ********************************************
C               **  STEP 2--                              **
C               **  COMPUTE THE DIFFERENCE OF PROPORTIONS **
C               **  CONFIDENCE INTERVAL.                  **
C               ********************************************
C
      IF(P1.GE.1.0 .AND. P2.GE.1.0)THEN
        STATVA=0.0
        PVALUE=1.0
        GOTO9000
      ELSEIF(P1.LE.0.0 .AND. P2.LE.0.0)THEN
        STATVA=0.0
        PVALUE=1.0
        GOTO9000
      ENDIF
C
      AN1=REAL(N1)
      AN2=REAL(N2)
C
      IX1=INT(AN1*P1 + 0.5)
      IX2=INT(AN2*P2 + 0.5)
      PHAT=REAL(IX1+IX2)/(AN1+AN2)
      SDP=SQRT(PHAT*(1.0-PHAT)*((1.0/AN1) + (1.0/AN2)))
C
      STATVA=(P1-P2)/SDP
      IF(ICASAN.EQ.'BPLT')THEN
        CALL NORCDF(STATVA,PVALUE)
      ELSEIF(ICASAN.EQ.'BPUT')THEN
        CALL NORCDF(STATVA,PVALUE)
        PVALUE=1.0-PVALUE
      ELSE
        CALL NORCDF(ABS(STATVA),PVALUE)
        PVALUE=2.0*(1.0-PVALUE)
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBNPV--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA3,IERROR
 9012   FORMAT('IBUGA3,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)PHAT,SDP
 9013   FORMAT('PHAT,SDP = ',2(G15.7,2X))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)STATVA,PVALUE
 9014   FORMAT('STATVA,PVALUE = ',2(G15.7,2X))
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBNTE(MAXNXT,ICASAN,ICAPSW,IFORSW,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--PERFORM A HYPOTHESIS TEST FOR THE EQUALITY OF
C              TWO BINOMIAL PROPORTIONS.  NOTE THAT THE DATA
C              CAN BE GIVEN IN EITHER RAW FORM OR SUMMARY FORM
C     NOTE--1 = SUCCESS, 0 = FAILURE
C     EXAMPLE--BINOMIAL PROPORTIONS TEST Y1 Y2
C            --BINOMIAL PROPORTIONS TEST P1 N1 P2 N2
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/8
C     ORIGINAL VERSION--AUGUST    2008.
C     UPDATED  VERSION--FEBRUARY  2011. USE DPPARS, DPPAR3, DPPAR6
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
C
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IHOST1
      CHARACTER*4 ISUBN0
C
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=20)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      PARAMETER (MAXLEV=2)
      DIMENSION XMAT(MAXLEV,MAXLEV)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      REAL TEMP1(MAXOBV)
C
      EQUIVALENCE (GARBAG(IGARB1),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB2),XMAT(1,1))
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCODA.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBN'
      ISUBN2='TE  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IFOUND='YES'
      IERROR='NO'
C
      N1=(-999)
      N2=(-999)
      P1=(-999.)
      P2=(-999.)
C
      ICASE='PARA'
C
C               ***************************************************
C               **  TREAT THE BINOMIAL PROPORTIONS TEST CASE     **
C               ***************************************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BNTE')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBNTE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)MAXNXT,NUMARG,IFORSW
   55   FORMAT('MAXNXT,NUMARG,IFORSW = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO59I=1,NUMARG
          WRITE(ICOUT,57)I,IHARG(I),IHARG2(I),ARG(I)
   57     FORMAT('I,IHARG(I),IHARG2(I),ARG(I) = ',I5,A4,A4,G15.7)
   59   CONTINUE
      ENDIF
C
C               *********************************
C               **  STEP 4--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='4'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BNTE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BINOMIAL PROPORTION TEST'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=0
      IFLAGM=9
      IFLAGP=9
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=4
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BNTE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),PVAR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),PVAR(I) = ',I8,2X,A4,A4,2X,3I8,G15.7)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ***********************************
C               **  STEP 22--                    **
C               **  CHECK FOR PROPER VALUES FOR  **
C               **  INPUT PARAMETERS             **
C               ***********************************
C
      IF(IVARTY(1).EQ.'PARA' .OR. IVARTY(1).EQ.'NUMB')THEN
        P1=PVAR(1)
        AN1=PVAR(2)
        P2=PVAR(3)
        AN2=PVAR(4)
        ICASE='PARA'
        N1=INT(AN1+0.1)
        N2=INT(AN2+0.1)
C
        ISTEPN='22'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BNTE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(P1.LT.0.0 .OR. P1.GT.1.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
 2201     FORMAT('***** ERROR FROM BINOMIAL PROPORTION TEST--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2203)
 2203     FORMAT('      THE VALUE OF THE FIRST PARAMETER (P1 = THE ',
     1           'PROBABILITY OF SUCCESS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2204)
 2204     FORMAT('      FOR THE FIRST VARIABLE MUST BE IN THE ',
     1           'INTERVAL (0,1).')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2205)P1
 2205     FORMAT('      P1 = ',G15.7)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ELSEIF(N1.LT.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2213)
 2213     FORMAT('      THE VALUE OF THE SECOND PARAMETER (N1 = THE ',
     1           'NUMBER OF TRIALS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2214)
 2214     FORMAT('      FOR THE FIRST VARIABLE MUST BE NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2215)N1
 2215     FORMAT('      N1 = ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ELSEIF(P2.LT.0.0 .OR. P2.GT.1.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2223)
 2223     FORMAT('      THE VALUE OF THE THIRD PARAMETER (P2 = THE ',
     1           'PROBABILITY OF SUCCESS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2224)
 2224     FORMAT('      FOR THE SECOND VARIABLE MUST BE IN THE ',
     1           'INTERVAL (0,1).')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2225)P2
 2225     FORMAT('      P2 = ',G15.7)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ELSEIF(N2.LT.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2233)
 2233     FORMAT('      THE VALUE OF THE FOURTH PARAMETER (N2 = THE ',
     1           'NUMBER OF TRIALS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2234)
 2234     FORMAT('      FOR THE SECOND VARIABLE MUST BE NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2235)N2
 2235     FORMAT('      N2 = ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ENDIF
C
      ELSEIF(IVARTY(1).EQ.'VARI' .OR. 
     1      (IVARTY(1).EQ.'MATR' .AND. NUMVAR.GT.1))THEN
C
        ICASE='VARI'
        ICOL=1
        IF(NUMVAR.NE.2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2303)
 2303     FORMAT('      EXACTLY TWO VARIABLES MUST BE GIVEN.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2305)NUMVAR
 2305     FORMAT('      THE NUMBER OF VARIABLES GIVEN  = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y,X,X,N1,N2,NLOCA3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
      ELSEIF(NUMVAR.EQ.1 .AND. IVARTY(1).EQ.'MATR')THEN
C
C       IF A SINGLE MATRIX IS GIVEN, ASSUME THAT IT IS IN
C       THE FORMAT:
C
C                                |  VARIABLE ONE    VARIABLE TWO
C          =====================================================
C          NUMBER OF SUCCESES:   |
C          NUMBER OF FAILURES:   |
C
        ICASE='MATR'
        ICOL=1
        NUMVAR=1
        CALL DPPAR6(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              XMAT,MAXLEV,NROW,NCOL,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(NROW.NE.2 .OR. NCOL.NE.2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2403)
 2403     FORMAT('      IF A SINGLE MATRIX IS GIVEN, IT MUST HAVE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2405)
 2405     FORMAT('      EXACTLY TWO ROWS AND TWO COLUMNS.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2407)NROW
 2407     FORMAT('      NUMBER OF ROWS          = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2409)NCOL
 2409     FORMAT('      NUMBER OF COLUMNS       = ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        DO2420I=1,NROW
          DO2430J=1,NCOL
            IJUNK=INT(XMAT(I,J)+0.1)
            IF(IJUNK.LT.0)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2201)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2433)I,J
 2433         FORMAT('      NEGATIVE COUNT ENCOUNTERED IN ROW ',I5,
     1               ' AND COLUMN ',I5,' OF THE TABLE.')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2435)XMAT(I,J)
 2435         FORMAT('      THE COUNT = ',G15.7)
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ENDIF
            XMAT(I,J)=REAL(IJUNK)
 2430     CONTINUE
 2420   CONTINUE
C
        AN1=XMAT(1,1) + XMAT(2,1)
        P1=XMAT(1,1)/AN1
        N1=INT(AN1+0.1)
        AN2=XMAT(1,2) + XMAT(2,2)
        P2=XMAT(1,2)/AN2
        N2=INT(AN2+0.1)
        ICASE='PARA'
      ENDIF
C
C               *********************************************
C               **  STEP 61--                              **
C               **  COMPUTE THE BINOMIAL PROPORTIONS TEST  **
C               *********************************************
C
      ISTEPN='61'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BNTE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'BNTE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6111)
 6111   FORMAT('***** FROM DPBNTE--READY TO COMPUTE TEST')
        CALL DPWRST('XXX','BUG ')
        IF(ICASE.EQ.'PARA')THEN
          WRITE(ICOUT,6112)P1,P2,N1,N2
 6112     FORMAT('P1,P2,N1,N2 = ',2G15.7,2I8)
          CALL DPWRST('XXX','BUG ')
        ELSE
          WRITE(ICOUT,6122)N1,N2
 6122     FORMAT('N1,N2 = ',2I8)
          CALL DPWRST('XXX','BUG ')
          DO6129I=1,MIN(N1,N2)
            WRITE(ICOUT,6125)I,Y(I),X(I)
 6125       FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
 6129     CONTINUE
        ENDIF
      ENDIF
C
      CALL DPBNTZ(Y,N1,X,N2,
     1            P1,P2,
     1            TEMP1,MAXOBV,
     1            ICASAN,ICASE,
     1            ICAPSW,ICAPTY,IFORSW,
     1            STATVA,CDF,PVAL,
     1            ISUBRO,IBUGA3,IERROR)
C
C               ***************************************
C               **  STEP 62--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='62'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BNTE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISUBN0='BNTE'
C
      IH='STAT'
      IH2='VAL '
      VALUE0=STATVA
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='STAT'
      IH2='CDF '
      VALUE0=CDF
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='PVAL'
      IH2='UE  '
      VALUE0=PVAL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BNTE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBNTE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA2,IBUGA3
 9012   FORMAT('IBUGA2,IBUGA3 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IERROR
 9016   FORMAT('IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBNTZ(Y1,N1,Y2,N2,
     1                  P1,P2,
     1                  XIDTEM,MAXNXT,
     1                  ICASAN,ICASE,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  STATVA,CDF,PVAL,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--PERFORM A BINOMIAL PROPORTION TEST FOR THE EQUALITY
C              OF TWO BINOMIAL PROPORTIONS (NOTE THAT THE SAMPLE
c              SIZES NEED NOT BE EQUAL).
C     EXAMPLE--BINOMIAL PROPORTION TEST Y1 Y2
C              SAMPLE 1 IS IN INPUT VECTOR Y1 (WITH N1 OBSERVATIONS).
C              SAMPLE 2 IS IN INPUT VECTOR Y2 (WITH N2 OBSERVATIONS).
C            --BINOMIAL PROPORTION TEST P1 N1 P2 N2
C              USE THIS SYNTAX FOR PRE-COMPUTED FREQUENCIES
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGYU LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/8
C     ORIGINAL VERSION--AUGUST    2008.
C     UPDATED         --FEBRUARY  2011. USE DPDTA1, DPDTA5 TO PRINT
C                                       TABLES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASE
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
C
      CHARACTER*4 IWRITE
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION XIDTEM(*)
C
      PARAMETER (NUMALP=6)
      DIMENSION SIGVAL(NUMALP)
CCCCC DIMENSION ALOWCL(NUMALP)
CCCCC DIMENSION AUPPCL(NUMALP)
CCCCC DIMENSION ALOWC2(NUMALP)
CCCCC DIMENSION AUPPC2(NUMALP)
      DIMENSION CV(NUMALP)
      CHARACTER*6 ICONC(NUMALP)
C
      PARAMETER(NUMCLI=5)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=NUMALP)
      PARAMETER (MAXRO2=25)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXRO2)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXRO2)
      INTEGER      NCTEXT(MAXRO2)
      INTEGER      IDIGIT(MAXRO2)
      INTEGER      NTOT(MAXRO2)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
      INCLUDE 'DPCOST.INC'
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA SIGVAL /0.50, 0.80, 0.90, 0.95, 0.975, 0.99/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBN'
      ISUBN2='TZ  '
      IERROR='NO'
      IWRITE='NO'
C
      DO20I=1,6
        ICONC(I)='REJECT'
   20 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BNTZ')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPBNTZ--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASE,IBINCC,MAXNXT
   52   FORMAT('IBUGA3,ISUBRO,ICASE,IBINCC,MAXNXT = ',4(A4,2X),I8)
        CALL DPWRST('XXX','WRIT')
        IF(ICASE.EQ.'VARI')THEN
          WRITE(ICOUT,55)N1
   55     FORMAT('N1 = ',I8)
          CALL DPWRST('XXX','WRIT')
          DO56I=1,N1
            WRITE(ICOUT,57)I,Y1(I)
   57       FORMAT('I,Y1(I) = ',I8,E15.7)
            CALL DPWRST('XXX','WRIT')
   56     CONTINUE
          WRITE(ICOUT,65)N2
   65     FORMAT('N2 = ',I8)
          CALL DPWRST('XXX','WRIT')
          DO66I=1,N2
            WRITE(ICOUT,67)I,Y2(I)
   67       FORMAT('I,Y2(I) = ',I8,E15.7)
            CALL DPWRST('XXX','WRIT')
   66     CONTINUE
        ELSE
          WRITE(ICOUT,75)P1,P2,N1,N2
   75     FORMAT('P1,P2,N1,N2 = ',2G15.7,2I8)
          CALL DPWRST('XXX','WRIT')
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 0--                              **
C               **  BRANCH TO APPROPRIATE CASE (PARAMETER **
C               **  OR VARIABLE)                          **
C               ********************************************
C
      ISTEPN='00'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BNTZ')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASE.EQ.'PARA')GOTO1000
      IF(ICASE.EQ.'VARI')GOTO2000
C
C               ********************************************
C               **  STEP 11--                             **
C               **  PARAMETER CASE                        **
C               ********************************************
C
 1000 CONTINUE
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BNTZ')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ********************************************
C               **  STEP 12--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      AN1=REAL(N1)
      AN2=REAL(N2)
C
      IX1=INT(AN1*P1 + 0.5)
      IX2=INT(AN2*P2 + 0.5)
      PHAT=REAL(IX1+IX2)/(AN1+AN2)
      SDP=SQRT(PHAT*(1.0-PHAT)*((1.0/AN1) + (1.0/AN2)))
      GOTO4000
C
C               ********************************************
C               **  STEP 20--                             **
C               **  VARIABLE  CASE                        **
C               ********************************************
C
 2000 CONTINUE
C
C               ********************************************
C               **  STEP 21--                             **
C               **  CHECK THAT THE VARIABLES HAVE AT MOST **
C               **  TWO DISTINCT VALUES (1 INDICATES A    **
C               **  SUCCESS, 0 INDICATES A FAILURE).      **
C               ********************************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BNTZ')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DISTIN(Y1,N1,IWRITE,XIDTEM,NDIST,IBUGA3,IERROR)
      IF(NDIST.EQ.1)THEN
        AVAL=XIDTEM(1)
        IF(ABS(AVAL).LE.0.5)THEN
          AVAL=0.0
        ELSE
          AVAL=1.0
        ENDIF
        DO2202I=1,N1
          Y1(I)=1.0
 2202   CONTINUE
      ELSEIF(NDIST.EQ.2)THEN
        IF(XIDTEM(1).EQ.1.0 .OR. XIDTEM(2).EQ.1.0)THEN
          DO2203I=1,N1
            IF(Y1(I).NE.1.0)Y1(I)=0.0
 2203     CONTINUE
        ELSE
          ATEMP1=MIN(XIDTEM(1),XIDTEM(2))
          ATEMP2=MAX(XIDTEM(1),XIDTEM(2))
          DO2208I=1,N1
            IF(Y1(I).EQ.ATEMP1)Y1(I)=0.0
            IF(Y1(I).EQ.ATEMP2)Y1(I)=1.0
 2208     CONTINUE
        ENDIF
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2201)
 2201   FORMAT('***** ERROR IN BINOMIAL TEST FOR EQUAL ',
     1         'PROPORTIONS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2211)
 2211   FORMAT('      RESPONSE VARIABLE ONE SHOULD CONTAIN AT MOST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2213)
 2213   FORMAT('      TWO DISTINCT VALUES.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2215)NDIST
 2215   FORMAT('      ',I8,' DISTINCT VALUES FOUND.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      CALL DISTIN(Y2,N2,IWRITE,XIDTEM,NDIST,IBUGA3,IERROR)
      IF(NDIST.EQ.1)THEN
        AVAL=XIDTEM(1)
        IF(ABS(AVAL).LE.0.5)THEN
          AVAL=0.0
        ELSE
          AVAL=1.0
        ENDIF
        DO2302I=1,N2
          Y2(I)=1.0
 2302   CONTINUE
      ELSEIF(NDIST.EQ.2)THEN
        IF(XIDTEM(1).EQ.1.0 .OR. XIDTEM(2).EQ.1.0)THEN
          DO2303I=1,N2
            IF(Y2(I).NE.1.0)Y2(I)=0.0
 2303     CONTINUE
        ELSE
          ATEMP1=MIN(XIDTEM(1),XIDTEM(2))
          ATEMP2=MAX(XIDTEM(1),XIDTEM(2))
          DO2308I=1,N2
            IF(Y2(I).EQ.ATEMP1)Y2(I)=0.0
            IF(Y2(I).EQ.ATEMP2)Y2(I)=1.0
 2308     CONTINUE
        ENDIF
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2201)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2311)
 2311   FORMAT('      RESPONSE VARIABLE TWO SHOULD CONTAIN AT MOST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2313)
 2313   FORMAT('      TWO DISTINCT VALUES.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2315)NDIST
 2315   FORMAT('      ',I8,' DISTINCT VALUES FOUND.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      AN1=REAL(N1)
      AN2=REAL(N2)
      CALL SUMDP(Y1,N1,IWRITE,XSUM1,IBUGA3,IERROR)
      P1=XSUM1/AN1
      CALL SUMDP(Y2,N2,IWRITE,XSUM2,IBUGA3,IERROR)
      P2=XSUM2/AN2
      PHAT=(XSUM1+XSUM2)/(AN1+AN2)
      SDP=SQRT(PHAT*(1.0-PHAT)*((1.0/AN1) + (1.0/AN2)))
C
      GOTO4000
C
 4000 CONTINUE
C
      ISTEPN='41'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BNTZ')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWRITE='OFF'
C
      STATVA=(P1-P2)/SDP
      CALL NORCDF(STATVA,CDF)
      IF(ICASAN.EQ.'BPLT')THEN
        PVAL=CDF
      ELSEIF(ICASAN.EQ.'BPUT')THEN
        PVAL=1.0-CDF
      ELSE
        CALL NORCDF(ABS(STATVA),ATEMP)
        PVAL=2.0*(1.0-ATEMP)
      ENDIF
C
      IF(ICASAN.EQ.'BPLT')THEN
        DO4010I=1,6
          ALPHA=SIGVAL(I)
          CALL NORPPF(1.0-ALPHA,CV(I))
          IF(CDF.LE.1.0-ALPHA)ICONC(I)='ACCEPT'
 4010   CONTINUE
      ELSEIF(ICASAN.EQ.'BPUT')THEN
        DO4020I=1,6
          ALPHA=SIGVAL(I)
          CALL NORPPF(ALPHA,CV(I))
          IF(CDF.GT.1.0-ALPHA)ICONC(I)='ACCEPT'
 4020   CONTINUE
      ELSE
        DO4030I=1,6
          ALPHA=SIGVAL(I)
          ALPHAT=(1.0 - ALPHA)/2.
          ALPHAL=ALPHAT
          ALPHAU=1.0 - ALPHAT
          CALL NORPPF(ALPHAU,CV(I))
          IF(ALPHAL.LE.CDF .AND. CDF.LE.ALPHAU)ICONC(I)='ACCEPT'
 4030   CONTINUE
      ENDIF
C
C               **************************************
C               **   STEP 42--                      **
C               **   WRITE OUT EVERYTHING           **
C               **   FOR BINOMIAL PROPORTION  TEST  **
C               **************************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BNTZ')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     PRINT SUMMARY STATISTICS TABLE
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Binomial Test for Equal Proportions'
      NCTITL=35
      ITITLZ='(Large Sample Case)'
      NCTITZ=19
C
      ICNT=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='H0: P1 = P2'
      NCTEXT(ICNT)=11
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      IF(ICASAN.EQ.'BP2T')THEN
        ITEXT(ICNT)='Ha: P1 <> P2'
        NCTEXT(ICNT)=12
      ELSEIF(ICASAN.EQ.'BPLT')THEN
        ITEXT(ICNT)='Ha: P1 < P2'
        NCTEXT(ICNT)=11
      ELSEIF(ICASAN.EQ.'BPUT')THEN
        ITEXT(ICNT)='Ha: P1 > P2'
        NCTEXT(ICNT)=11
      ENDIF
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample 1:'
      NCTEXT(ICNT)=9
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N1)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Probability of Successes:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=P1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample 2:'
      NCTEXT(ICNT)=9
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N2)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Probability of Successes:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=P2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Pooled Probability of Success:'
      NCTEXT(ICNT)=30
      AVALUE(ICNT)=PHAT
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Pooled Standard Deviation:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=SDP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Test Statistic:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
C
      ICNT=ICNT+1
      ITEXT(ICNT)='P-Value:'
      NCTEXT(ICNT)=8
      AVALUE(ICNT)=PVAL
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='CDF of Test Statistic:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=CDF
      IDIGIT(ICNT)=NUMDIG
C
      NUMROW=ICNT
      DO2310I=1,NUMROW
        NTOT(I)=15
 2310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,
     1            NCTEXT,AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITLE(1:25)=' '
      NCTITL=0
      ITITL9=' '
      NCTIT9=0
C
      ITITL2(1,1)=' '
      NCTIT2(1,1)=0
      ITITL2(2,1)='Null'
      NCTIT2(2,1)=4
      ITITL2(3,1)='Hypothesis'
      NCTIT2(3,1)=10
      ITITL2(1,2)=' '
      NCTIT2(1,2)=0
      ITITL2(2,2)='Confidence'
      NCTIT2(2,2)=10
      ITITL2(3,2)='Level'
      NCTIT2(3,2)=5
      ITITL2(1,3)=' '
      NCTIT2(1,3)=0
      ITITL2(2,3)='Critical'
      NCTIT2(2,3)=8
      IF(ICASAN.EQ.'BPLT')THEN
        ITITL2(3,3)='Value (>)'
        NCTIT2(3,3)=9
      ELSEIF(ICASAN.EQ.'BPUT')THEN
        ITITL2(3,3)='Value (<)'
        NCTIT2(3,3)=9
      ELSE
        ITITL2(3,3)='Value (+/-)'
        NCTIT2(3,3)=11
      ENDIF
      ITITL2(1,4)='Null Hypothesis'
      NCTIT2(1,4)=15
      ITITL2(2,4)='Acceptance'
      NCTIT2(2,4)=10
      ITITL2(3,4)='Interval'
      NCTIT2(3,4)=8
      ITITL2(1,5)='Null'
      NCTIT2(1,5)=4
      ITITL2(2,5)='Hypothesis'
      NCTIT2(2,5)=10
      ITITL2(3,5)='Conclusion'
      NCTIT2(3,5)=10
C
      NMAX=0
      NUMCOL=5
      DO5210I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.4)NTOT(I)=18
        NMAX=NMAX+NTOT(I)
        IF(I.EQ.3)THEN
          ITYPCO(I)='NUME'
        ELSE
          ITYPCO(I)='ALPH'
        ENDIF
        IF(I.EQ.2)THEN
          IDIGIT(I)=1
        ELSEIF(I.EQ.3)THEN
          IDIGIT(I)=2
        ELSE
          IDIGIT(I)=NUMDIG
        ENDIF
        IWHTML(1)=150
        IWHTML(2)=125
        IWHTML(3)=125
        IWHTML(4)=150
        IWHTML(5)=150
        IINC=1600
        IINC2=1400
        IINC3=2200
        IWRTF(1)=IINC
        IWRTF(2)=IWRTF(1)+IINC
        IWRTF(3)=IWRTF(2)+IINC2
        IWRTF(4)=IWRTF(3)+IINC3
        IWRTF(5)=IWRTF(4)+IINC2
C
        DO5289J=1,NUMALP
          IF(J.EQ.1)THEN
            IVALUE(J,2)='50.0%'
            NCVALU(J,2)=5
            AMAT(J,3)=CV(1)
            IVALUE(J,5)(1:6)=ICONC(1)(1:6)
            NCVALU(J,5)=6
            IF(ICASAN.EQ.'BPLT')THEN
              IVALUE(J,4)='(0,0.500)'
              NCVALU(J,4)=9
            ELSEIF(ICASAN.EQ.'BPUT')THEN
              IVALUE(J,4)='(0.500,1)'
              NCVALU(J,4)=9
            ELSE
              IVALUE(J,4)='(0.250,0.750)'
              NCVALU(J,4)=13
            ENDIF
          ELSEIF(J.EQ.2)THEN
            IVALUE(J,2)='80.0%'
            NCVALU(J,2)=5
            AMAT(J,3)=CV(2)
            IVALUE(J,5)(1:6)=ICONC(2)(1:6)
            NCVALU(J,5)=6
            IF(ICASAN.EQ.'BPLT')THEN
              IVALUE(J,4)='(0.0.800)'
              NCVALU(J,4)=9
            ELSEIF(ICASAN.EQ.'BPUT')THEN
              IVALUE(J,4)='(0.200,1)'
              NCVALU(J,4)=9
            ELSE
              IVALUE(J,4)='(0.100,0.900)'
              NCVALU(J,4)=13
            ENDIF
          ELSEIF(J.EQ.3)THEN
            IVALUE(J,2)='90.0%'
            NCVALU(J,2)=5
            AMAT(J,3)=CV(3)
            IVALUE(J,5)(1:6)=ICONC(3)(1:6)
            NCVALU(J,5)=6
            IF(ICASAN.EQ.'BPLT')THEN
              IVALUE(J,4)='(0,0.900)'
              NCVALU(J,4)=9
            ELSEIF(ICASAN.EQ.'BPUT')THEN
              IVALUE(J,4)='(0.100,1)'
              NCVALU(J,4)=9
            ELSE
              IVALUE(J,4)='(0.050,0.950)'
              NCVALU(J,4)=13
            ENDIF
          ELSEIF(J.EQ.4)THEN
            IVALUE(J,2)='95.0%'
            NCVALU(J,2)=5
            AMAT(J,3)=CV(4)
            IVALUE(J,5)(1:6)=ICONC(4)(1:6)
            NCVALU(J,5)=6
            IF(ICASAN.EQ.'BPLT')THEN
              IVALUE(J,4)='(0,0.950)'
              NCVALU(J,4)=9
            ELSEIF(ICASAN.EQ.'BPUT')THEN
              IVALUE(J,4)='(0.050,1)'
              NCVALU(J,4)=9
            ELSE
              IVALUE(J,4)='(0.025,0.975)'
              NCVALU(J,4)=13
            ENDIF
          ELSEIF(J.EQ.5)THEN
            IVALUE(J,2)='97.5%'
            NCVALU(J,2)=5
            AMAT(J,3)=CV(5)
            IVALUE(J,5)(1:6)=ICONC(5)(1:6)
            NCVALU(J,5)=6
            IVALUE(J,4)='(0,0.975)'
            NCVALU(J,4)=9
            IF(ICASAN.EQ.'BPLT')THEN
              IVALUE(J,4)='(0,0.975)'
              NCVALU(J,4)=9
            ELSEIF(ICASAN.EQ.'BPUT')THEN
              IVALUE(J,4)='(0.025,1)'
              NCVALU(J,4)=9
            ELSE
              IVALUE(J,4)='(0.0125,0.9875)'
              NCVALU(J,4)=15
            ENDIF
          ELSEIF(J.EQ.6)THEN
            IVALUE(J,2)='99.0%'
            NCVALU(J,2)=5
            AMAT(J,3)=CV(6)
            IVALUE(J,5)(1:6)=ICONC(6)(1:6)
            NCVALU(J,5)=6
            IF(ICASAN.EQ.'BPLT')THEN
              IVALUE(J,4)='(0,0.990)'
              NCVALU(J,4)=9
            ELSEIF(ICASAN.EQ.'BPUT')THEN
              IVALUE(J,4)='(0.010,1)'
              NCVALU(J,4)=9
            ELSE
              IVALUE(J,4)='(0.005,0.995)'
              NCVALU(J,4)=13
            ENDIF
          ENDIF
          AMAT(J,1)=0.0
          AMAT(J,2)=0.0
          AMAT(J,4)=0.0
          AMAT(J,5)=0.0
          IF(ICASAN.EQ.'BPLT')THEN
            IVALUE(J,1)='P1 < P2'
            NCVALU(J,1)=7
          ELSEIF(ICASAN.EQ.'BPUT')THEN
            IVALUE(J,1)='P1 > P2'
            NCVALU(J,1)=7
          ELSE
            IVALUE(J,1)='P1 = P2'
            NCVALU(J,1)=7
          ENDIF
 5289   CONTINUE
C
 5210 CONTINUE
C
      ICNT=NUMALP
      NUMLIN=3
      NUMCOL=5
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
      CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BNTZ')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBNTZ--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)N1,N2
 9013   FORMAT('N1,N2 =',2I8)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9015)P1,P2
 9015   FORMAT('P1,P2 =',2G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBNTR(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1IBUGG2,IBUGG3,ISUBRO,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A BIVARIATE NORMAL TOLERANCE REGION PLOT.
C     REFERENCE--HALL AND SHELDON, "IMPROVED BIVARIATE NORMAL
C                TOLERANCE REGIONS WITH SOME APPLICATIONS",
C                JOURNAL OF QUALITY TECHNOLOGY, VOL 11,
C                NO. 1, JANUARY 1979.
C              --ISO 13528, "STATISTICAL METHODS FOR USE IN PROFICIENCY
C                TESTING BY INTERLABORATORY COMPARISONS", 2005.
C              --JACKSON, "QUALITY CONTROL METHODS FOR TWO RELATED
C                VARIABLES", INDUSTRIAL QUALITY CONTROL, 7, 1956,
C                PP. 2-6.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/4
C     ORIGINAL VERSION--APRIL     2007.
C     UPDATED         --FEBRUARY  2011. USE DPPARS, DPPAR5
C     UPDATED         --NOVEMBER  2013. SUPPORT CONFIDENCE ELLIPSE
C                                       (AS OPPOSED TO TOLERANCE
C     UPDATED         --JULY      2017. SUPPORT POINCARE PLOT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
C
      CHARACTER*4 ISUBN0
      CHARACTER*4 IHOST1
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION XGROUP(MAXOBV)
      DIMENSION DELTAV(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y2(1))
      EQUIVALENCE (GARBAG(IGARB3),XGROUP(1))
      EQUIVALENCE (GARBAG(IGARB4),DELTAV(1))
      EQUIVALENCE (GARBAG(IGARB5),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB6),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB7),TEMP2(1))
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPBN'
      ISUBN2='TR  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ***************************************************
C               **  TREAT THE BIVARIATE NORMAL TOLERANCE REGION  **
C               **  PLOT CASE                                    **
C               ***************************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BNTR')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBNTR--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2
   53   FORMAT('ICASPL,IAND1,IAND2 = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IBUGG2,IBUGG3,ISUBRO,IBUGQ
   54   FORMAT('IBUGG2,IBUGG3,ISUBRO,IBUGQ = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************
C               **  STEP 1--                               **
C               **  SEARCH FOR BIVARIATE NORMAL TOLERANCE  **
C               **  REGION PLOT                            **
C               *********************************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BNTR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASPL='BNTR'
      IF(NUMARG.GE.4.AND.
     1  IHARG(1).EQ.'NORM' .AND. IHARG(2).EQ.'TOLE' .AND.
     1  (IHARG(3).EQ.'REGI' .OR. IHARG(3).EQ.'INTE' .OR.
     1   IHARG(3).EQ.'LIMI') .AND.
     1  IHARG(4).EQ.'PLOT')THEN
        ILASTC=4
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
      ELSEIF(NUMARG.GE.4.AND.
     1  IHARG(1).EQ.'NORM' .AND. IHARG(2).EQ.'CONF' .AND.
     1  (IHARG(3).EQ.'REGI' .OR. IHARG(3).EQ.'INTE' .OR.
     1   IHARG(3).EQ.'LIMI') .AND.
     1  IHARG(4).EQ.'PLOT')THEN
        ICASPL='BNCR'
        ILASTC=4
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'NORM' .AND. IHARG(2).EQ.'TOLE' .AND.
     1  (IHARG(3).EQ.'REGI' .OR. IHARG(3).EQ.'INTE' .OR.
     1   IHARG(3).EQ.'LIMI'))THEN
        ILASTC=3
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
      ELSEIF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'NORM' .AND. IHARG(2).EQ.'CONF' .AND.
     1  (IHARG(3).EQ.'REGI' .OR. IHARG(3).EQ.'INTE' .OR.
     1   IHARG(3).EQ.'LIMI'))THEN
        ICASPL='BNCR'
        ILASTC=3
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
      ELSEIF(ICOM.EQ.'POIN' .AND. IHARG(1).EQ.'PLOT')THEN
        ICASPL='POIN'
        ILASTC=1
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
      ELSE
        ICASPL='    '
        IFOUND='NO'
        GOTO9000
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BNTR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BIVARIATE NORMAL TOLERANCE REGION PLOT'
      IF(ICASPL.EQ.'BNCR')
     1  INAME='BIVARIATE NORMAL CONFIDENCE REGION PLOT'
      IF(ICASPL.EQ.'POIN')
     1  INAME='POINCARE PLOT'
      MINNA=2
      MAXNA=100
      MINN2=3
      IFLAGE=99
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=2
      MAXNVA=4
      IF(ICASPL.EQ.'POIN')THEN
        MINNA=1
        MINNVA=1
        MAXNVA=1
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BNTL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),IVARTY(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),IVARTY(I) = ',I8,2X,A4,A4,2X,3I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************************
C               **  STEP 33--                               **
C               **  FORM THE SUBSETTED VARIABLES            **
C               **********************************************
C
      ISTEPN='33'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BNTR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOL=1
      NUMVA2=NUMVAR
      IF(NUMVAR.EQ.4)NUMVA2=3
      CALL DPPAR5(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y1,Y2,XGROUP,TEMP1,TEMP1,TEMP1,TEMP1,NS,
     1            IBUGG3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               **********************************************
C               **  STEP 33B--                              **
C               **  FOR POINCAIRE PLOT, CREATE VARIABLES    **
C               **********************************************
C
      IF(ICASPL.EQ.'POIN')THEN
        ICNT=0
        ILAG=INT(PPPLLA+0.1)
        IVAL=NS/4
        IF(ILAG.GT.IVAL)ILAG=1
C
        DO3321II=ILAG+1,NS
          ICNT=ICNT+1
          Y2(ICNT)=Y1(II)
 3321   CONTINUE
C
        DO3325II=1,NS-ILAG
          XGROUP(II)=1.0
 3325   CONTINUE
        NS=NS-ILAG
        NUMVAR=2
      ENDIF
C
C               **********************************************
C               **  STEP 34--                               **
C               **  EXTRACT DELTAV VARIABLE (IF GIVEN)      **
C               **********************************************
C
      ISTEPN='34'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BNTR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMVAR.GE.4)THEN
        ICOL=4
        NUMVA2=1
        NQ=NRIGHT(4)
        DO3410I=1,NQ
          ISUB(I)=1
 3410   CONTINUE
C
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              DELTAV,DELTAV,DELTAV,NRESPD,NLOCA2,NLOCA3,ICASE,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ELSE
        NRESPD=0
      ENDIF
C
C               *****************************************************
C               **  STEP 41--                                      **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VARIABLES (Y(.) AND X(.), RESPECTIVELY) FOR    **
C               **  THE PLOT.                                      **
C               **  FORM THE CURVE DESIGNATION VARIABLE D(.)  .    **
C               **  DEFINE THE NUMBER OF PLOT POINTS   (NPLOTP).   **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES(NPLOTV).   **
C               *****************************************************
C
      ISTEPN='61'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'BNTR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
c     NOTE 11/2013: FOR THE CONFIDENCE REGION CASE, USE DELTA TO
C                   SPECIFY THE CONFIDENCE LIMITS (AND GAMMA WILL
C                   BE IGNORED).  FOR THE TOLERANCE REGION CASE,
C                   DELTA SPECIFIES THE COVERAGES AND GAMMA THE
C                   CONFIDENCE.
C
C     GAMMA CAN ONLY BE 0.75, 0.90, 0.95.  MATCH ENTERED GAMMA
C     VALUE TO CLOSEST OF THESE.
C
C     2014/01: ONLY RESTRICT GAMMA TO 0.75, 0.90, 0.95 FOR N <= 50.
C              IF N > 50, ACCEPT ANY VALUE BETWEEN 0.50 AND 0.99.
C
      IH='GAMM'
      IH2='A   '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        GAMMA=0.95
      ELSE
        GAMMA=VALUE(ILOCP)
        IF(GAMMA.GE.1.0 .AND. GAMMA.LT.100.0)GAMMA=GAMMA/100.
CCCCC   IF(GAMMA.NE.0.75 .AND. GAMMA.NE.0.90 .AND.
CCCCC1     GAMMA.NE.0.95)GAMMA=0.95
C
        IF(NS.LE.50)THEN
          IF(GAMMA.GE.0.70 .AND. GAMMA.LE.0.82)THEN
            GAMMA=0.75
          ELSEIF(GAMMA.GT.0.82 .AND. GAMMA.LE.0.925)THEN
            GAMMA=0.90
          ELSEIF(GAMMA.GT.0.925 .AND. GAMMA.LT.1.0)THEN
            GAMMA=0.95
          ELSE
            GAMMA=0.95
          ENDIF
        ELSE
          IF(GAMMA.LT.0.50)GAMMA=0.50
          IF(GAMMA.GT.0.99)GAMMA=0.99
        ENDIF
      ENDIF
C
      IF(NRESPD.EQ.0)THEN
        IH='DELT'
        IH2='A   '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IH,IH2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          DELTA=0.90
        ELSE
          DELTA=VALUE(ILOCP)
          IF(DELTA.GE.1.0 .AND. DELTA.LE.100.0)DELTA=DELTA/100.0
          IF(DELTA.LT.0.75 .OR. DELTA.GE.1.0)DELTA=0.90
        ENDIF
      ENDIF
C
      CALL DPBNT2(Y1,Y2,XGROUP,NS,DELTAV,NRESPD,NUMVAR,
     1            ICASPL,MAXN,DELTA,GAMMA,
     1            XIDTEM,TEMP1,TEMP2,
     1            Y,X,X3D,D,NPLOTP,NPLOTV,
     1            SD1,SD2,SAREA,CCM,
     1            IBUGG3,ISUBRO,IERROR)
C
      IF(ICASPL.EQ.'POIN')THEN
        IH='SD1 '
        IH2='    '
        VALUE0=SD1
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='SD2 '
        IH2='    '
        VALUE0=SD2
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='SARE'
        IH2='A   '
        VALUE0=SAREA
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='CCM '
        IH2='    '
        VALUE0=CCM
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
      ENDIF
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'BNTR')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPBNTR--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         3I8,2X,2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NRESPD,GAMMA,DELTA
 9014   FORMAT('NRESPD,GAMMA,DELTA = ',I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9020)
 9020   FORMAT('I,Y(.),X(.),D(.),ISUB(.)--')
        CALL DPWRST('XXX','BUG ')
        DO9021I=1,NPLOTP
          WRITE(ICOUT,9022)I,Y(I),X(I),D(I),ISUB(I)
 9022     FORMAT(I8,3G15.7,I8)
          CALL DPWRST('XXX','BUG ')
 9021   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBNT2(Y1,Y2,X,N,DELTAV,NDELTA,NUMV2,
     1            ICASPL,MAXN,DELTA,GAMMA,
     1            XIDTEM,TEMP1,TEMP2,
     1            YPLOT,XPLOT,X3D,D2,NPLOTP,NPLOTV,
     1            SD1,SD2,SAREA,CCM,
     1            IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A BIVARIATE NORMAL TOLERANCE REGION PLOT
C     REFERENCE--HALL AND SHELDON, "IMPROVED BIVARIATE NORMAL
C                TOLERANCE REGIONS WITH SOME APPLICATIONS",
C                JOURNAL OF QUALITY TECHNOLOGY, VOL 11,
C                NO. 1, JANUARY 1979.
C              --ISO 13528, "STATISTICAL METHODS FOR USE IN PROFICIENCY
C                TESTING BY INTERLABORATORY COMPARISONS", 2005.
C              --JACKSON, "QUALITY CONTROL METHODS FOR TWO RELATED
C                VARIABLES", INDUSTRIAL QUALITY CONTROL, 7, 1956,
C                PP. 2-6.
C              --TAYEL AND ALSABA (2015), "POINCARE PLOT FOR HEART RATE
C                VARIABILITY", INTERNATIONAL JOURNAL OF MEDICAL, HEALTH,
C                BIOMEDICAL, BIOENGINEERING AND PHARMACEUTICAL
C                ENGINEERING", VOL. 9, NO. 9, PP. 708-711.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/5
C     ORIGINAL VERSION--MAY       2007.
C     UPDATED         --SEPTEMBER 2007. COMMENT OUT STEP 4
C                                       (THIS IS ARTIFACT FROM EARLIER
C                                       VERSION OF ALGORITHM)
C     UPDATED         --NOVEMBER  2013. SUPPORT CONFIDENCE ELLIPSE
C                                       (AS OPPOSED TO TOLERANCE
C                                       ELLIPSE)
C     UPDATED         --JANUARY   2014. BUG IN KRISHNAMOOORTHY
C                                       APPROXIMATION
C     UPDATED         --JULY      2017. SUPPORT POINCARE PLOT OPTION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IWRITE
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION X(*)
      DIMENSION DELTAV(*)
      DIMENSION XIDTEM(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION YPLOT(*)
      DIMENSION XPLOT(*)
      DIMENSION X3D(*)
      DIMENSION D2(*)
C
      DIMENSION ZX(4)
      DIMENSION ZY(4)
      DIMENSION AMAT(3,3)
      INTEGER   INDX(3)
C
      DOUBLE PRECISION DSUM
      DOUBLE PRECISION DVAL
      DOUBLE PRECISION DTERM1
C
C-----COMMON----------------------------------------------------------
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA PI/3.141592653E+00/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBN'
      ISUBN2='T2  '
      IERROR='NO'
      IWRITE='OFF'
C
      XMIN=CPUMAX
      XMAX=CPUMAX
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BNT2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBNT2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NUMV2,N,MAXN,NDELTA
   52   FORMAT('NUMV2,N,MAXN,NDELTA = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IBUGG3,IERROR
   53   FORMAT('ICASPL,IBUGG3,IERROR = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)GAMMA,DELTA
   54   FORMAT('GAMMA,DELTA = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,MIN(N,100)
          WRITE(ICOUT,56)I,Y1(I),Y2(I),X(I)
   56     FORMAT('I,Y1(I),Y2(I),X(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        IF(NDELTA.GT.0)THEN
          DO60I=1,NDELTA
            WRITE(ICOUT,61)I,DELTAV(I)
   61       FORMAT('I,DELTAV(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
   60     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BNT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ****************************************************
C               **  STEP 2--                                      **
C               **  COMPUTE COORDINATES FOR THE ELLIPSE           **
C               **  LOOP THROUGH POSSIBLY MULTIPLE VALUES OF DELTA**
C               ****************************************************
C
      IF(ICASPL.EQ.'POIN')GOTO299
      IF(NDELTA.GT.0)THEN
        EPS=0.01
        ICNT=0
        DO90I=1,NDELTA
          ATEMP=DELTAV(I)
          IF(ATEMP.GE.1.0 .AND. ATEMP.LE.100.0)ATEMP=ATEMP/100.0
          IF(ATEMP.GT.0.0 .AND. ATEMP.LT.1.0)THEN
            ICNT=ICNT+1
            DELTAV(ICNT)=ATEMP
          ENDIF
   90   CONTINUE
C
        IF(ICNT.GT.0)THEN
          NDELTA=ICNT
          CALL SORT(DELTAV,NDELTA,DELTAV)
        ELSE
          NDELTA=1
          DELTAV(1)=0.90
          IF(ICASPL.EQ.'BNCR')DELTAV(1)=0.95
        ENDIF
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BNT2')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,81)NDELTA
   81     FORMAT('***** AFTER CHECK DELTAS: NDELTA = ',I8)
          CALL DPWRST('XXX','BUG ')
          IF(NDELTA.GT.0)THEN
            DO83I=1,NDELTA
              WRITE(ICOUT,84)I,DELTAV(I)
   84         FORMAT('I,DELTAV(I) = ',I8,G15.7)
              CALL DPWRST('XXX','BUG ')
   83       CONTINUE
          ENDIF
        ENDIF
C
      ELSE
        NDELTA=1
        DELTAV(1)=DELTA
      ENDIF
C
  299 CONTINUE
C
      CALL MEAN(Y1,N,IWRITE,YBAR,IBUGG3,IERROR)
      CALL SD(Y1,N,IWRITE,SY,IBUGG3,IERROR)
      CALL MEAN(Y2,N,IWRITE,XBAR,IBUGG3,IERROR)
      CALL SD(Y2,N,IWRITE,SX,IBUGG3,IERROR)
      CALL CORR(Y1,Y2,N,IWRITE,R,IBUGG3,IERROR)
C
      K=0
      ITAG=0
      IF(ICASPL.EQ.'POIN')NDELTA=1
      DO100IDELTA=1,NDELTA
C
C       FOR POINCARE PLOT, COMPUTE SD1 AND SD2 AS GIVEN IN:
C
C         TAYEL AND ALSABA (2015), "POINCARE PLOT FOR HEART RATE
C         VARIABILITY", INTERNATIONAL JOURNAL OF MEDICAL HEALTH,
C         BIOMEDICAL, BIOENGINEERING AND PHARMACEUTICAL ENGINEERING",
C         VOLUME 9, NO. 9, PP. 708-711.
C
C         SD1 = SD(X1)
C         SD2 = SD(X2)
C
C         WHERE
C
C         X1 = (Y1 - Y2)/SQRT(2)
C         X2 = (Y1 + Y2)/SQRT(2)
C
C         X1 AND X2 CORRESPOND TO THE ROTATION OF Y1 AND Y2 BY PI/4.
C
      IF(ICASPL.EQ.'POIN')THEN
        THETA=PI/4.0
C
        DO260II=1,N
          TEMP1(II)=(Y1(II)-Y2(II))/SQRT(2.0)
          TEMP2(II)=(Y1(II)+Y2(II))/SQRT(2.0)
  260   CONTINUE
        CALL SD(TEMP1,N,IWRITE,SD1,IBUGG3,IERROR)
        CALL SD(TEMP2,N,IWRITE,SD2,IBUGG3,IERROR)
C
        A=SD2
        B=SD1
        SAREA=PI*SD1*SD2
        XINC=A/SQRT(2.0)
        YINC=A/SQRT(2.0)
        XINC2=B/SQRT(2.0)
        YINC2=B/SQRT(2.0)
        ZX(1)=XBAR - XINC
        ZY(1)=YBAR - YINC
        ZX(2)=XBAR - XINC2
        ZY(2)=YBAR + YINC2
        ZX(3)=XBAR + XINC
        ZY(3)=YBAR + YINC
        ZX(4)=XBAR + XINC2
        ZY(4)=YBAR - YINC2
C
C       COMPUTE COMPLEX CORRELATION MEASURE:
C
C       CCM = (1/(SAREA*(N-1))*SUM[i=1 to N-2][0.5*|A(i)|]
C
C       WHERE |A(i)| IS THE DETERMINANT OF
C
C        A(i) = | x1  y1  1  |
C               | x2  y2  1  |
C               | x3  y3  1  |
C
C       WITH (x1,y1), (x2,y2), (x3,y3) DENOTING 3 SUCCESSIVE POINTS IN
C       THE TIME SERIES
C
        ANM1=REAL(N-1)
        DTERM1=1.0D0/DBLE(SAREA*ANM1)
        MAXROM=3
        NR1=3
        EPS=1.0E-10
C
        DSUM=0.0D0
        DO270II=1,N-2
          AMAT(1,1)=Y1(II)
          AMAT(1,2)=Y2(II)
          AMAT(2,1)=Y1(II+1)
          AMAT(2,2)=Y2(II+1)
          AMAT(3,1)=Y1(II+2)
          AMAT(3,2)=Y2(II+2)
          AMAT(1,3)=1.0
          AMAT(2,3)=1.0
          AMAT(3,3)=1.0
          CALL SGECO(AMAT,MAXROM,NR1,INDX,RCOND,TEMP1)
          IF(RCOND.LE.EPS)THEN
            CCM=CPUMIN
            GOTO119
          ENDIF
          IJOB=10
          CALL SGEDI(AMAT,MAXROM,NR1,INDX,TEMP1,TEMP2,IJOB)
          DET=TEMP1(1)*10.0**TEMP1(2)
          DSUM=DSUM + DBLE(0.5*DET)
  270   CONTINUE
        DVAL=DTERM1*DSUM
        CCM=REAL(DVAL)
        GOTO119
      ENDIF
C
C     COMPUTE VALUE OF K FOR CONFIDENCE REGION CASE
C
      DELTA=DELTAV(IDELTA)
      IF(ICASPL.EQ.'BNCR')THEN
        AN=REAL(N)
        TERM1=2.0*((AN-1.0)/(AN-2.0))
        IDF1=2
        IDF2=N-1
        CALL FPPF(DELTA,IDF1,IDF2,TERM2)
        AK=TERM1*TERM2
        GOTO99
      ENDIF
C
C     SET APPROPRIATE VALUE OF K
C
      IF(GAMMA.EQ.0.75)THEN
        IF(DELTA.EQ.0.50)THEN
          IF(N.LE.10)THEN
            AK=2.48
          ELSEIF(N.EQ.11)THEN
            AK=2.37
          ELSEIF(N.EQ.12)THEN
            AK=2.28
          ELSEIF(N.EQ.13)THEN
            AK=2.20
          ELSEIF(N.EQ.14)THEN
            AK=2.13
          ELSEIF(N.EQ.15)THEN
            AK=2.07
          ELSEIF(N.EQ.16)THEN
            AK=2.02
          ELSEIF(N.EQ.17)THEN
            AK=1.97
          ELSEIF(N.EQ.18)THEN
            AK=1.94
          ELSEIF(N.EQ.19)THEN
            AK=1.89
          ELSEIF(N.EQ.20)THEN
            AK=1.87
          ELSEIF(N.EQ.21)THEN
            AK=(1.87+1.82)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=1.82
          ELSEIF(N.EQ.23)THEN
            AK=(1.78+1.82)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=1.78
          ELSEIF(N.EQ.25)THEN
            AK=(1.78+1.76)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=1.76
          ELSEIF(N.EQ.27)THEN
            AK=(1.74+1.76)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=1.74
          ELSEIF(N.EQ.29)THEN
            AK=(1.74+1.73)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=1.73
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=1.69
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=1.66
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=1.64
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=1.62
          ELSE
            GOTO91
          ENDIF
        ELSEIF(DELTA.EQ.0.80)THEN
          IF(N.LE.10)THEN
            AK=6.25
          ELSEIF(N.EQ.11)THEN
            AK=5.87
          ELSEIF(N.EQ.12)THEN
            AK=5.58
          ELSEIF(N.EQ.13)THEN
            AK=5.38
          ELSEIF(N.EQ.14)THEN
            AK=5.18
          ELSEIF(N.EQ.15)THEN
            AK=5.03
          ELSEIF(N.EQ.16)THEN
            AK=4.91
          ELSEIF(N.EQ.17)THEN
            AK=4.80
          ELSEIF(N.EQ.18)THEN
            AK=4.71
          ELSEIF(N.EQ.19)THEN
            AK=4.63
          ELSEIF(N.EQ.20)THEN
            AK=4.57
          ELSEIF(N.EQ.21)THEN
            AK=(4.57+4.44)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=4.44
          ELSEIF(N.EQ.23)THEN
            AK=(4.44+4.34)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=4.34
          ELSEIF(N.EQ.25)THEN
            AK=(4.34+4.26)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=4.26
          ELSEIF(N.EQ.27)THEN
            AK=(4.26+4.18)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=4.18
          ELSEIF(N.EQ.29)THEN
            AK=(4.18+4.13)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=4.13
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=4.01
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=3.90
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=3.82
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=3.75
          ELSE
            GOTO91
          ENDIF
        ELSEIF(DELTA.EQ.0.90)THEN
          IF(N.LE.10)THEN
            AK=9.40
          ELSEIF(N.EQ.11)THEN
            AK=8.90
          ELSEIF(N.EQ.12)THEN
            AK=8.51
          ELSEIF(N.EQ.13)THEN
            AK=8.08
          ELSEIF(N.EQ.14)THEN
            AK=7.80
          ELSEIF(N.EQ.15)THEN
            AK=7.57
          ELSEIF(N.EQ.16)THEN
            AK=7.36
          ELSEIF(N.EQ.17)THEN
            AK=7.17
          ELSEIF(N.EQ.18)THEN
            AK=7.01
          ELSEIF(N.EQ.19)THEN
            AK=6.85
          ELSEIF(N.EQ.20)THEN
            AK=6.71
          ELSEIF(N.EQ.21)THEN
            AK=(6.71+6.46)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=6.46
          ELSEIF(N.EQ.23)THEN
            AK=(6.46+6.26)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=6.26
          ELSEIF(N.EQ.25)THEN
            AK=(6.26+6.08)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=6.08
          ELSEIF(N.EQ.27)THEN
            AK=(6.08+5.95)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=5.95
          ELSEIF(N.EQ.29)THEN
            AK=(5.95+5.85)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=5.85
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=5.65
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=5.53
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=5.46
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=5.42
          ELSE
            GOTO91
          ENDIF
        ELSEIF(DELTA.EQ.0.95)THEN
          IF(N.LE.10)THEN
            AK=12.10
          ELSEIF(N.EQ.11)THEN
            AK=11.36
          ELSEIF(N.EQ.12)THEN
            AK=10.78
          ELSEIF(N.EQ.13)THEN
            AK=10.35
          ELSEIF(N.EQ.14)THEN
            AK=9.97
          ELSEIF(N.EQ.15)THEN
            AK=9.67
          ELSEIF(N.EQ.16)THEN
            AK=9.42
          ELSEIF(N.EQ.17)THEN
            AK=9.19
          ELSEIF(N.EQ.18)THEN
            AK=9.02
          ELSEIF(N.EQ.19)THEN
            AK=8.85
          ELSEIF(N.EQ.20)THEN
            AK=8.70
          ELSEIF(N.EQ.21)THEN
            AK=(8.70+8.48)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=8.48
          ELSEIF(N.EQ.23)THEN
            AK=(8.48+8.28)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=8.28
          ELSEIF(N.EQ.25)THEN
            AK=(8.28+8.10)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=8.10
          ELSEIF(N.EQ.27)THEN
            AK=(8.10+7.94)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=7.94
          ELSEIF(N.EQ.29)THEN
            AK=(7.94+7.81)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=7.81
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=7.53
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=7.34
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=7.20
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=7.10
          ELSE
            GOTO91
          ENDIF
        ELSE
          GOTO91
        ENDIF
      ELSEIF(GAMMA.EQ.0.90)THEN
        IF(DELTA.EQ.0.50)THEN
          IF(N.LE.10)THEN
            AK=3.10
          ELSEIF(N.EQ.11)THEN
            AK=2.93
          ELSEIF(N.EQ.12)THEN
            AK=2.79
          ELSEIF(N.EQ.13)THEN
            AK=2.66
          ELSEIF(N.EQ.14)THEN
            AK=2.56
          ELSEIF(N.EQ.15)THEN
            AK=2.48
          ELSEIF(N.EQ.16)THEN
            AK=2.40
          ELSEIF(N.EQ.17)THEN
            AK=2.34
          ELSEIF(N.EQ.18)THEN
            AK=2.29
          ELSEIF(N.EQ.19)THEN
            AK=2.24
          ELSEIF(N.EQ.20)THEN
            AK=2.20
          ELSEIF(N.EQ.21)THEN
            AK=(2.20+2.14)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=2.14
          ELSEIF(N.EQ.23)THEN
            AK=(2.14+2.08)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=2.08
          ELSEIF(N.EQ.25)THEN
            AK=(2.08+2.03)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=2.03
          ELSEIF(N.EQ.27)THEN
            AK=(2.03+2.00)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=2.00
          ELSEIF(N.EQ.29)THEN
            AK=(2.00+1.97)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=1.97
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=1.90
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=1.86
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=1.82
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=1.78
          ELSE
            GOTO91
          ENDIF
        ELSEIF(DELTA.EQ.0.80)THEN
          IF(N.LE.10)THEN
            AK=8.30
          ELSEIF(N.EQ.11)THEN
            AK=7.64
          ELSEIF(N.EQ.12)THEN
            AK=7.13
          ELSEIF(N.EQ.13)THEN
            AK=6.74
          ELSEIF(N.EQ.14)THEN
            AK=6.44
          ELSEIF(N.EQ.15)THEN
            AK=6.18
          ELSEIF(N.EQ.16)THEN
            AK=5.98
          ELSEIF(N.EQ.17)THEN
            AK=5.80
          ELSEIF(N.EQ.18)THEN
            AK=5.66
          ELSEIF(N.EQ.19)THEN
            AK=5.51
          ELSEIF(N.EQ.20)THEN
            AK=5.35
          ELSEIF(N.EQ.21)THEN
            AK=(5.35+5.20)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=5.20
          ELSEIF(N.EQ.23)THEN
            AK=(5.20+5.02)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=5.02
          ELSEIF(N.EQ.25)THEN
            AK=(5.02+4.88)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=4.88
          ELSEIF(N.EQ.27)THEN
            AK=(4.88+4.77)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=4.77
          ELSEIF(N.EQ.29)THEN
            AK=(4.77+4.67)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=4.67
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=4.49
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=4.36
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=4.26
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=4.17
          ELSE
            GOTO91
          ENDIF
        ELSEIF(DELTA.EQ.0.90)THEN
          IF(N.LE.10)THEN
            AK=12.82
          ELSEIF(N.EQ.11)THEN
            AK=11.75
          ELSEIF(N.EQ.12)THEN
            AK=10.84
          ELSEIF(N.EQ.13)THEN
            AK=10.13
          ELSEIF(N.EQ.14)THEN
            AK=9.57
          ELSEIF(N.EQ.15)THEN
            AK=9.10
          ELSEIF(N.EQ.16)THEN
            AK=8.73
          ELSEIF(N.EQ.17)THEN
            AK=8.41
          ELSEIF(N.EQ.18)THEN
            AK=8.15
          ELSEIF(N.EQ.19)THEN
            AK=7.93
          ELSEIF(N.EQ.20)THEN
            AK=7.75
          ELSEIF(N.EQ.21)THEN
            AK=(7.75+7.48)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=7.48
          ELSEIF(N.EQ.23)THEN
            AK=(7.48+7.26)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=7.26
          ELSEIF(N.EQ.25)THEN
            AK=(7.26+7.07)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=7.07
          ELSEIF(N.EQ.27)THEN
            AK=(7.07+6.92)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=6.92
          ELSEIF(N.EQ.29)THEN
            AK=(6.92+6.79)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=6.79
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=6.53
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=6.32
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=6.15
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=6.02
          ELSE
            GOTO91
          ENDIF
        ELSEIF(DELTA.EQ.0.95)THEN
          IF(N.LE.10)THEN
            AK=17.23
          ELSEIF(N.EQ.11)THEN
            AK=15.80
          ELSEIF(N.EQ.12)THEN
            AK=14.85
          ELSEIF(N.EQ.13)THEN
            AK=14.00
          ELSEIF(N.EQ.14)THEN
            AK=13.30
          ELSEIF(N.EQ.15)THEN
            AK=12.74
          ELSEIF(N.EQ.16)THEN
            AK=12.26
          ELSEIF(N.EQ.17)THEN
            AK=11.85
          ELSEIF(N.EQ.18)THEN
            AK=11.50
          ELSEIF(N.EQ.19)THEN
            AK=11.16
          ELSEIF(N.EQ.20)THEN
            AK=10.83
          ELSEIF(N.EQ.21)THEN
            AK=(10.83+10.33)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=10.33
          ELSEIF(N.EQ.23)THEN
            AK=(10.33+9.88)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=9.88
          ELSEIF(N.EQ.25)THEN
            AK=(9.88+9.52)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=9.52
          ELSEIF(N.EQ.27)THEN
            AK=(9.52+9.23)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=9.23
          ELSEIF(N.EQ.29)THEN
            AK=(9.23+8.99)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=8.99
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=8.56
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=8.26
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=8.07
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=7.94
          ELSE
            GOTO91
          ENDIF
        ELSE
          GOTO91
        ENDIF
      ELSEIF(GAMMA.EQ.0.95)THEN
        IF(DELTA.EQ.0.50)THEN
          IF(N.LE.10)THEN
            AK=3.75
          ELSEIF(N.EQ.11)THEN
            AK=3.48
          ELSEIF(N.EQ.12)THEN
            AK=3.28
          ELSEIF(N.EQ.13)THEN
            AK=3.11
          ELSEIF(N.EQ.14)THEN
            AK=2.97
          ELSEIF(N.EQ.15)THEN
            AK=2.85
          ELSEIF(N.EQ.16)THEN
            AK=2.75
          ELSEIF(N.EQ.17)THEN
            AK=2.67
          ELSEIF(N.EQ.18)THEN
            AK=2.60
          ELSEIF(N.EQ.19)THEN
            AK=2.52
          ELSEIF(N.EQ.20)THEN
            AK=2.45
          ELSEIF(N.EQ.21)THEN
            AK=(2.45+2.36)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=2.36
          ELSEIF(N.EQ.23)THEN
            AK=(2.36+2.29)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=2.29
          ELSEIF(N.EQ.25)THEN
            AK=(2.29+2.24)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=2.24
          ELSEIF(N.EQ.27)THEN
            AK=(2.24+2.20)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=2.20
          ELSEIF(N.EQ.29)THEN
            AK=(2.20+2.16)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=2.16
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=2.08
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=2.01
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=1.95
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=1.89
          ELSE
            GOTO91
          ENDIF
        ELSEIF(DELTA.EQ.0.80)THEN
          IF(N.LE.10)THEN
            AK=10.15
          ELSEIF(N.EQ.11)THEN
            AK=9.11
          ELSEIF(N.EQ.12)THEN
            AK=8.37
          ELSEIF(N.EQ.13)THEN
            AK=7.83
          ELSEIF(N.EQ.14)THEN
            AK=7.42
          ELSEIF(N.EQ.15)THEN
            AK=7.10
          ELSEIF(N.EQ.16)THEN
            AK=6.84
          ELSEIF(N.EQ.17)THEN
            AK=6.62
          ELSEIF(N.EQ.18)THEN
            AK=6.43
          ELSEIF(N.EQ.19)THEN
            AK=6.26
          ELSEIF(N.EQ.20)THEN
            AK=6.11
          ELSEIF(N.EQ.21)THEN
            AK=(6.11+5.84)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=5.84
          ELSEIF(N.EQ.23)THEN
            AK=(5.84+5.61)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=5.61
          ELSEIF(N.EQ.25)THEN
            AK=(5.61+5.42)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=5.42
          ELSEIF(N.EQ.27)THEN
            AK=(5.42+5.26)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=5.26
          ELSEIF(N.EQ.29)THEN
            AK=(5.26+5.11)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=5.11
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=4.85
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=4.67
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=4.57
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=4.54
          ELSE
            GOTO91
          ENDIF
        ELSEIF(DELTA.EQ.0.90)THEN
          IF(N.LE.10)THEN
            AK=14.80
          ELSEIF(N.EQ.11)THEN
            AK=13.50
          ELSEIF(N.EQ.12)THEN
            AK=12.50
          ELSEIF(N.EQ.13)THEN
            AK=11.69
          ELSEIF(N.EQ.14)THEN
            AK=11.03
          ELSEIF(N.EQ.15)THEN
            AK=10.50
          ELSEIF(N.EQ.16)THEN
            AK=10.07
          ELSEIF(N.EQ.17)THEN
            AK=9.72
          ELSEIF(N.EQ.18)THEN
            AK=9.42
          ELSEIF(N.EQ.19)THEN
            AK=9.15
          ELSEIF(N.EQ.20)THEN
            AK=8.90
          ELSEIF(N.EQ.21)THEN
            AK=(8.90+8.43)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=8.43
          ELSEIF(N.EQ.23)THEN
            AK=(8.43+8.15)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=8.15
          ELSEIF(N.EQ.25)THEN
            AK=(8.15+7.88)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=7.88
          ELSEIF(N.EQ.27)THEN
            AK=(7.88+7.65)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=7.65
          ELSEIF(N.EQ.29)THEN
            AK=(7.65+7.45)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=7.45
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=7.07
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=6.80
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=6.62
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=6.50
          ELSE
            GOTO91
          ENDIF
        ELSEIF(DELTA.EQ.0.95)THEN
          IF(N.LE.10)THEN
            AK=22.15
          ELSEIF(N.EQ.11)THEN
            AK=19.80
          ELSEIF(N.EQ.12)THEN
            AK=18.00
          ELSEIF(N.EQ.13)THEN
            AK=16.55
          ELSEIF(N.EQ.14)THEN
            AK=15.46
          ELSEIF(N.EQ.15)THEN
            AK=14.50
          ELSEIF(N.EQ.16)THEN
            AK=13.75
          ELSEIF(N.EQ.17)THEN
            AK=13.09
          ELSEIF(N.EQ.18)THEN
            AK=12.60
          ELSEIF(N.EQ.19)THEN
            AK=12.16
          ELSEIF(N.EQ.20)THEN
            AK=11.83
          ELSEIF(N.EQ.21)THEN
            AK=(11.83+11.23)/2.0
          ELSEIF(N.EQ.22)THEN
            AK=11.23
          ELSEIF(N.EQ.23)THEN
            AK=(11.23+10.78)/2.0
          ELSEIF(N.EQ.24)THEN
            AK=10.78
          ELSEIF(N.EQ.25)THEN
            AK=(10.78+10.41)/2.0
          ELSEIF(N.EQ.26)THEN
            AK=10.41
          ELSEIF(N.EQ.27)THEN
            AK=(10.41+10.11)/2.0
          ELSEIF(N.EQ.28)THEN
            AK=10.11
          ELSEIF(N.EQ.29)THEN
            AK=(10.11+9.83)/2.0
          ELSEIF(N.GE.30 .AND. N.LE.32)THEN
            AK=9.83
          ELSEIF(N.GE.33 .AND. N.LE.37)THEN
            AK=9.30
          ELSEIF(N.GE.38 .AND. N.LE.42)THEN
            AK=8.87
          ELSEIF(N.GE.43 .AND. N.LE.47)THEN
            AK=8.56
          ELSEIF(N.GE.48 .AND. N.LE.50)THEN
            AK=8.32
          ELSE
            GOTO91
          ENDIF
        ELSE
          GOTO91
        ENDIF
      ELSE
        GOTO91
      ENDIF
C
      GOTO99
C
   91 CONTINUE
C
C     KRISHNAMOORTHY APPROXIMATION (PP. 325-327)
C
C     NOTE 2014/1: GAMMA IS THE CONFIDENCE AND DELTA IS THE
C                  COVERAGE.  KRISHNAMOORTHY USES P FOR COVERAGE
C                  AND G FOR CONFIDENCE.
C
CCCCC P=GAMMA
CCCCC G=DELTA
      P=DELTA
      G=GAMMA
      AN=REAL(N)
      AM=2.0
      ADELTA=AM/AN
      CALL NCCPPF(P,AM,ADELTA,CHI1)
      ANUM=4.0*AM*(AN-AM-1.0)*(AN-AM) - 12.0*(AM-1.0)*(AN-AM-2.0)
      ADEN=3.0*(AN-2.0) + AM*(AN-AM-1.0)
      E=ANUM/ADEN
      D=(E-2.0)/(AN-AM-2.0)
      IDF=INT(E+0.5)
      IF(IDF.EQ.0)IDF=1
CCCCC CALL CHSPPF(1.0-G,IDF,CHI2)
      ATEMP=E/2.0
      CALL GAMPPF(1.0-G,ATEMP,CHI2)
      CHI2=2.0*CHI2
      AK=D*(AN-1.0)*CHI1/CHI2
      GOTO99
C
   99 CONTINUE
C
      CUTOFF=AK*(1.0 - R**2)
C
      ISTEPN='2'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BNT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BNT2')THEN
        WRITE(ICOUT,103)YBAR,SY
  103   FORMAT('YBAR,SY = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,105)XBAR,SX,R
  105   FORMAT('XBAR,SX = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,107)P,G,AK
  107   FORMAT('P,G,AK = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,108)AN,AM,ADELTA,CUTOFF
  108   FORMAT('AN,AM,ADELTA,CUTOFF = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,109)IDF,E,D,CHI1,CHI2
  109   FORMAT('IDF,E,D,CHI1,CHI2 = ',I8,4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     DEFINE THE ROTATION ANGLE FOR THE ELLIPSE
C
      THETA=ATAN(2.0*R*SX*SY/(SX**2 - SY**2))
      THETA=THETA/2.0
      IF(THETA.LT.0.0)THETA=THETA+(PI/2.0)
C
C     COMPUTE A AND B
C
      TERM1=1.0/(AK*(1.0 - R**2))
      TERM2=COS(THETA)**2/(SX**2)
      TERM3=COS(THETA)*SIN(THETA)*2.0*R/(SX*SY)
      TERM4=SIN(THETA)**2/(SY**2)
      A2=(TERM2 - TERM3 + TERM4)*TERM1
      TERM2=SIN(THETA)**2/(SX**2)
      TERM4=COS(THETA)**2/(SY**2)
      B2=(TERM2 + TERM3 + TERM4)*TERM1
C
      A=SQRT(A2)
      B=SQRT(B2)
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BNT2')THEN
        WRITE(ICOUT,113)TERM1,TERM2,TERM3,TERM4
  113   FORMAT('TERM1,TERM2,TERM3,TERM4 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,115)A,B
  115   FORMAT('A,B = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     COMPLETE THE SQUARE ON THE TRANSOFRMED X AND Y TO GET THE
C     EQUATION FOR THE TRANSFORMED ELLIPSE
C
      ZX(1) = XBAR + COS(THETA)/A
      ZY(1) = YBAR + SIN(THETA)/A
C
      ZX(3) = XBAR - COS(THETA)/A
      ZY(3) = YBAR - SIN(THETA)/A
C
      ZX(2) = XBAR + SIN(THETA)/B
      ZY(2) = YBAR - COS(THETA)/B
C
      ZX(4) = XBAR - SIN(THETA)/B
      ZY(4) = YBAR + COS(THETA)/B
C
  119 CONTINUE
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BNT2')THEN
        WRITE(ICOUT,123)ZX(1),ZX(2),ZX(3),ZX(4)
  123   FORMAT('ZX(1),ZX(2),ZX(3),ZX(4) = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,125)ZY(1),ZY(2),ZY(3),ZY(4)
  125   FORMAT('ZY(1),ZY(2),ZY(3),ZY(4) = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      DELX=ZX(3)-ZX(1)
      DELY=ZY(3)-ZY(1)
      ALEN=0.0
      TERM=DELX**2+DELY**2
      IF(TERM.GT.0.0)ALEN=SQRT(TERM)
      A=ALEN/2.0
C
      IF(ABS(DELX).GE.0.00001)THETA=ATAN(DELY/DELX)
      IF(ABS(DELX).LT.0.00001.AND.DELY.GE.0.0)THETA=3.1415926/2.0
      IF(ABS(DELX).LT.0.00001.AND.DELY.LT.0.0)THETA=-3.1415926/2.0
C
      XCENT=(ZX(1)+ZX(3))/2.0
      YCENT=(ZY(1)+ZY(3))/2.0
C
      DELX2=ZX(2)-XCENT
      DELY2=ZY(2)-YCENT
      ALEN=0.0
      TERM=DELX2**2+DELY2**2
      IF(TERM.GT.0.0)ALEN=SQRT(TERM)
      B=ALEN
C
      ITAG=ITAG+1
C
      XTEMP=0.0
      YTEMP=0.0
      CALL TRANS(XTEMP,YTEMP,ZX(1),ZY(1),THETA,DELX,DELY,XP,YP,KXP,KYP)
      K=K+1
      XPLOT(K)=XP
      YPLOT(K)=YP
      D2(K)=REAL(ITAG)
C
      DO510I=181,541,5
        IREV=541-I+181
        PHI2=IREV-1
        PHI2=PHI2*(2.0*3.1415926)/360.0
        XTEMP=A*COS(PHI2)+A
        YTEMP=B*SIN(PHI2)
        CALL TRANS(XTEMP,YTEMP,ZX(1),ZY(1),THETA,DELX,DELY,XP,YP,
     1             KXP,KYP)
        K=K+1
        XPLOT(K)=XP
        YPLOT(K)=YP
        D2(K)=REAL(ITAG)
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BNT2')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,531)
  531     FORMAT('***** MIDDLE OF DPBNR2 (510 LOOP)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,532)I,IREV,PHI2,XTEMP,YTEMP
 532      FORMAT('I,IREV,PHI2,XTEMP,YTEMP=',2I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,533)K,ZX(1),ZY(1),THETA
 533      FORMAT('K,ZX(1),ZY(1),THETA=',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,534)DELX,DELY,XP,YP,KXP,KYP
 534      FORMAT('DELX,DELY,XP,YP,KXP,KYP=',4G15.7,2I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,535)K,XPLOT(K),YPLOT(K)
 535      FORMAT('K,XPLOT(K),YPLOT(K) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
  510 CONTINUE
C
  100 CONTINUE
      NP=K
C
C               ****************************************************
C               **  STEP 3--                                      **
C               **  NOW PLOT THE POINTS                           **
C               ****************************************************
C
      ISTEPN='3'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BNT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMV2.EQ.2)THEN
        ITAG=ITAG+1
        XMIN=CPUMAX
        XMAX=CPUMIN
        DO600I=1,N
          NP=NP+1
          XPLOT(NP)=Y2(I)
          YPLOT(NP)=Y1(I)
          IF(XPLOT(NP).LT.XMIN)XMIN=XPLOT(NP)
          IF(XPLOT(NP).GT.XMAX)XMAX=XPLOT(NP)
          D2(NP)=REAL(ITAG)
  600   CONTINUE
      ELSEIF(NUMV2.GE.3)THEN
        CALL DISTIN(X,N,IWRITE,XIDTEM,NUMSET,IBUGG3,IERROR)
        CALL SORT(XIDTEM,NUMSET,XIDTEM)
        XMIN=CPUMAX
        XMAX=CPUMIN
        DO700ISET=1,NUMSET
          HOLD=XIDTEM(ISET)
C
          ITAG=ITAG+1
          DO710I=1,N
            IF(X(I).EQ.HOLD)THEN
              NP=NP+1
              XPLOT(NP)=Y2(I)
              IF(XPLOT(NP).LT.XMIN)XMIN=XPLOT(NP)
              IF(XPLOT(NP).GT.XMAX)XMAX=XPLOT(NP)
              YPLOT(NP)=Y1(I)
              D2(NP)=REAL(ITAG)
            ENDIF
  710     CONTINUE
C
  700   CONTINUE
C
      ENDIF
C
C               ****************************************************
C               **  STEP 4--                                      **
C               **  FOR POINCARE PLOT, ADD LINES THROUGH          **
C               **  (XBAR,YBAR) WITH SLOPES +1 AND -1.            **
C               ****************************************************
C
      IF(ICASPL.EQ.'POIN')THEN
        ITAG=ITAG+1
        YVAL=XMIN - XBAR + YBAR
        NP=NP+1
        XPLOT(NP)=XMIN
        YPLOT(NP)=YVAL
        D2(NP)=REAL(ITAG)
        YVAL=XMAX - XBAR + YBAR
        NP=NP+1
        XPLOT(NP)=XMAX
        YPLOT(NP)=YVAL
        D2(NP)=REAL(ITAG)
C
        ITAG=ITAG+1
        YVAL=-XMIN + XBAR + YBAR
        NP=NP+1
        XPLOT(NP)=XMIN
        YPLOT(NP)=YVAL
        D2(NP)=REAL(ITAG)
        YVAL=-XMAX + XBAR + YBAR
        NP=NP+1
        XPLOT(NP)=XMAX
        YPLOT(NP)=YVAL
        D2(NP)=REAL(ITAG)
      ENDIF
C
      N2=NP
      NPLOTP=N2
      NPLOTV=2
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BNT2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPBNR2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,N,ICASPL
 9013   FORMAT('NPLOTV,NPLOTP,N,ICASPL = ',
     1         I8,I8,I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9020)
 9020   FORMAT('I,YPLOT(.),XPLOT(.),X3D(.),D2(.)--')
        CALL DPWRST('XXX','BUG ')
        DO9021I=1,NPLOTP
          WRITE(ICOUT,9022)I,YPLOT(I),XPLOT(I),X3D(I),D2(I)
 9022     FORMAT(I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
 9021   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBOB(NPTS,NLAB,
     1                 AMEAN,ASD,AMNX,AMXX,SW,
     1                 ASM,ASB,AKU,AKUK1,AKUK2,
     1                 DLOWBO,DHIGBO,
     1                 IWRITE,ICAPSW,ICAPTY,NUMDIG,
     1                 ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT BOUNDS ON BIAS (BOB) APPROACH TO
C              CONSENSUS MEANS.  BASED ON MACRO PROVIDED BY
C              STEFAN LEIGH.
C     PRINTING--YES
C     SUBROUTINES NEEDED--NONE
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/3
C     ORIGINAL VERSION--MARCH     2006. EXTRACTED FROM DPMAN2 ROUTINE
C     UPDATED         --FEBRUARY  2010. USE DPDTA1 TO PRINT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      REAL ASM
      REAL AMNX
      REAL AMXX
      REAL ASB
      REAL AKU
      REAL AKUK1
      REAL AKUK2
      REAL SW
      REAL AMEAN(*)
      REAL ASD(*)
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPBO'
      ISUBN2='B   '
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PBOB')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBOB--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NLAB,SW
   52   FORMAT('NPTS,NLAB,SW = ',2I8,3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NLAB
          WRITE(ICOUT,56)I,AMEAN(I),ASD(I)
   56     FORMAT('I,AMEAN(I),ASD(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
      CALL MEAN(AMEAN,NLAB,IWRITE,ASM,IBUGA3,IERROR)
      DSB=DBLE(AMXX - AMNX)/DSQRT(12.0D0)
      DKU=2.0D0*DSQRT((SW**2) + (DSB**2))
      ASB=REAL(DSB)
      AKU=REAL(DKU)
      AKUK2=AKU
      AKUK1=AKU/2.0
      DLOWBO=DBLE(ASM - AKU)
      DHIGBO=DBLE(ASM + AKU)
C
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)='11. Method: BOB (Bound on Bias)'
      NCTEXT(ICNT)=31
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='    Estimate of Consensus Mean:'
      NCTEXT(ICNT)=31
      AVALUE(ICNT)=ASM
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Within Lab Uncertainty:'
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=SW
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Between Lab Uncertainty:'
      NCTEXT(ICNT)=37
      AVALUE(ICNT)=ASB
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Uncertainty (k = 1):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=AKU/2.0
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k = 2):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=AKU
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Lower 95% (k = 2) Confidence Limit:'
      NCTEXT(ICNT)=39
      AVALUE(ICNT)=DLOWBO
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Upper 95% (k = 2) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=DHIGBO
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Note: BOB Best Usage:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='          5 or Fewer Labs:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO310I=1,NUMROW
        NTOT(I)=15
  310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
      ITITL9=' '
      NCTIT9=0
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PBOB')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBOB--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPTS,NLAB
 9013   FORMAT('NPTS,NLAB = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)ASM,ASB,AKU
 9014   FORMAT('ASM,ASB,AKU = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)DLOWBO,DHIGBO
 9015   FORMAT('DLOWBO,DHIGBO = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBOCC(IHARG,IHARG2,IARGT,IARG,ARG,NUMARG,
     1                  IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,
     1                  MAXNAM,IANS,IWIDTH,MAXBOX,PBOXXC,PBOXYC,NUMBOX,
     1                  IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE 2 PAIRS OF (X,Y) COORDINATES FOR A BOX.  THE
C              FIRST PAIR WILL BE FOR THE LOWER LEFT CORNER OF THE BOX;
C              THE SECOND PAIR WILL BE FOR THE UPPER RIGHT CORNER OF THE
C              BOX.  THE (X1,Y1), (X2,Y2) COORDINATES WILL BE PLACED IN
C              THE FIRST AND SECOND ELEMENTS (RESPECTIVELY) OF THE TWO
C              ARRAYS PBOXXC(.,.) AND PBOXYC(.,.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --ARG    (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --MAXBOX
C     OUTPUT ARGUMENTS--PBOXXC (A FLOATING POINT VECTOR
C                              WHOSE (I,1)-TH ELEMENT CONTAINS THE
C                              X COORDINATE FOR THE ONE CORNER OF BOX I;
C                              WHOSE (I,2)-TH ELEMENT CONTAINS THE
C                              X COORDINATE FOR THE OPPOSITE CORNER OF BOX I;
C                     --PBOXYC (A FLOATING POINT VECTOR
C                              WHOSE (I,1)-TH ELEMENT CONTAINS THE
C                              Y COORDINATE FOR THE ONE CORNER OF BOX I;
C                              WHOSE (I,2)-TH ELEMENT CONTAINS THE
C                              Y COORDINATE FOR THE OPPOSITE CORNER OF BOX I;
C                     --NUMBOX = THE NUMBER OF BOXES DEFINED SO FAR
C                              (ACTUALLY, THE HIGHEST REFERENCED BOX SO FAR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --MARCH     1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --OCTOBER   1992. FIX BUG (ALAN)
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IHARG2
      CHARACTER*4 IARGT
      CHARACTER*4 IHNAME
      CHARACTER*4 IHNAM2
      CHARACTER*4 IUSE
      CHARACTER*4 IANS
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IHWORD
      CHARACTER*4 IHWOR2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IHARG2(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
C
      DIMENSION IHNAME(*)
      DIMENSION IHNAM2(*)
      DIMENSION IUSE(*)
      DIMENSION IN(*)
      DIMENSION IVALUE(*)
      DIMENSION VALUE(*)
      DIMENSION IANS(*)
C
      DIMENSION PBOXXC(100,2)
      DIMENSION PBOXYC(100,2)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBO'
      ISUBN2='CC  '
      IFOUND='NO'
      IERROR='NO'
C
      HOLD1=0.0
      HOLD2=0.0
      HOLD3=0.0
      HOLD4=0.0
C
      IF(NUMARG.EQ.0)GOTO9000
C
CCCCC OCTOBER 1992.  DISTINGUISH: BOX 1 COORDINATES FROM
CCCCC BOX CORNER COORDINATES CASE
C
C     CHECK FOR FOLLOWING:
C
C        BOX CORNER COORDINATES
C        BOX COORDINATES
C        BOX <ID> CORNER COORDINATES
C        BOX <ID> COORDINATES
C
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'CORN'.AND.IHARG(2).EQ.'COOR')THEN
        IFRST=3
        GOTO1110
      ELSEIF(NUMARG.GE.1.AND.IHARG(1).EQ.'COOR')THEN
        IFRST=2
        GOTO1110
      ELSEIF(NUMARG.GE.3.AND.IHARG(2).EQ.'CORN'.AND.
     1       IHARG(3).EQ.'COOR')THEN
        ILASTC=3
        GOTO1140
      ELSEIF(NUMARG.GE.2.AND.IHARG(2).EQ.'COOR')THEN
        ILASTC=2
        GOTO1140
      ENDIF
      GOTO9000
C
 1110 CONTINUE
      IF(NUMARG.LE.1       .OR. IHARG(3).EQ.'ON'   .OR.
     1   IHARG(3).EQ.'OFF' .OR. IHARG(3).EQ.'AUTO' .OR.
     1   IHARG(3).EQ.'DEFA')THEN
        HOLD1=CPUMIN
        HOLD2=CPUMIN
        HOLD3=CPUMIN
        HOLD4=CPUMIN
        NUMBOX=0
C
      ELSEIF(NUMARG.GE.IFRST+3)THEN
        DO1126J=IFRST,IFRST+3
          IF(IARGT(J).EQ.'NUMB')THEN
            IF(J.EQ.IFRST)HOLD1=ARG(J)
            IF(J.EQ.IFRST+1)HOLD2=ARG(J)
            IF(J.EQ.IFRST+2)HOLD3=ARG(J)
            IF(J.EQ.IFRST+3)HOLD4=ARG(J)
          ELSE
            IHWORD=IHARG(J)
            IHWOR2=IHARG2(J)
            IHWUSE='P'
            MESSAG='YES'
            CALL CHECKN(IHWORD,IHWOR2,IHWUSE,
     1                  IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,
     1                  NUMNAM,MAXNAM,
     1                  ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
            IF(IERROR.EQ.'YES')GOTO9000
            IF(J.EQ.IFRST)HOLD1=VALUE(ILOC)
            IF(J.EQ.IFRST+1)HOLD2=VALUE(ILOC)
            IF(J.EQ.IFRST+2)HOLD3=VALUE(ILOC)
            IF(J.EQ.IFRST+3)HOLD4=VALUE(ILOC)
          ENDIF
 1126   CONTINUE
        NUMBOX=MAXBOX
C
      ELSE
        IERROR='YES'
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1111)
 1111   FORMAT('***** ERROR IN DPBOCC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1112)
 1112   FORMAT('      IN THE BOX ... CORNER COORDINATES COMMAND,')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1113)
 1113   FORMAT('      THE CORNER COORDINATES ARE SPECIFIED ',
     1         'BY 4 NUMBERS, AS IN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1114)
 1114   FORMAT('      BOX 3 CORNER COORDINATES 30 50 40 60')
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      IFOUND='YES'
      DO1135I=1,MAXBOX
        PBOXXC(I,1)=HOLD1
        PBOXYC(I,1)=HOLD2
        PBOXXC(I,2)=HOLD3
        PBOXYC(I,2)=HOLD4
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,1136)
 1136   FORMAT('ALL BOX CORNER COORDINATES HAVE JUST BEEN SET TO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1137)PBOXXC(I,1),PBOXYC(I,1)
 1137   FORMAT('    (X,Y) FOR LOWER LEFT  CORNER OF BOX = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1138)PBOXXC(I,2),PBOXYC(I,2)
 1138   FORMAT('    (X,Y) FOR LOWER RIGHT CORNER OF BOX = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
C
CCCCC OCTOBER 1992.  FOLLOWING SECTION MODIFIED TO HANDLE
CCCCC BOX <ID> COOR CASE.
 1140 CONTINUE
      IF(IARGT(1).NE.'NUMB')THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1142)
 1142   FORMAT('      IN THE BOX ... CORNER COORDINATES COMMAND,')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1143)
 1143   FORMAT('      THE BOX IS IDENTIFIED BY A NUMBER, AS IN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1144)
 1144   FORMAT('      BOX 3 CORNER COORDINATES 30 50 40 60')
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      I=IARG(1)
      IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1152)
 1152   FORMAT('      IN THE BOX ... CORNER COORDINATES COMMAND,')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1153)
 1153   FORMAT('      THE NUMBER OF BOXES MUST BE ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1154)MAXBOX
 1154   FORMAT('      BETWEEN 1 AND ',I5,' (INCLUSIVELY);')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1155)
 1155   FORMAT('      SUCH WAS NOT THE CASE HERE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1156)I
 1156   FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH BOX.')
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      IFRSTC=ILASTC+1
      IF(NUMARG.LE.ILASTC        .OR. IHARG(IFRSTC).EQ.'ON'   .OR.
     1   IHARG(IFRSTC).EQ.'OFF'  .OR. IHARG(IFRSTC).EQ.'AUTO' .OR.
     1   IHARG(IFRSTC).EQ.'DEFA')THEN
        HOLD1=CPUMIN
        HOLD2=CPUMIN
        HOLD3=CPUMIN
        HOLD4=CPUMIN
        IF(I.EQ.NUMBOX)NUMBOX=I-1
      ELSEIF(NUMARG.GE.IFRSTC+3)THEN
        DO1176J=IFRSTC,IFRSTC+3
          IF(IARGT(J).EQ.'NUMB')THEN
            IF(J.EQ.IFRSTC)HOLD1=ARG(J)
            IF(J.EQ.IFRSTC+1)HOLD2=ARG(J)
            IF(J.EQ.IFRSTC+2)HOLD3=ARG(J)
            IF(J.EQ.IFRSTC+3)HOLD4=ARG(J)
          ELSE
            IHWORD=IHARG(J)
            IHWOR2=IHARG2(J)
            IHWUSE='P'
            MESSAG='YES'
            CALL CHECKN(IHWORD,IHWOR2,IHWUSE,
     1                  IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,
     1                  NUMNAM,MAXNAM,
     1                  ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
            IF(IERROR.EQ.'YES')GOTO9000
            IF(J.EQ.IFRSTC)HOLD1=VALUE(ILOC)
            IF(J.EQ.IFRSTC+1)HOLD2=VALUE(ILOC)
            IF(J.EQ.IFRSTC+2)HOLD3=VALUE(ILOC)
            IF(J.EQ.IFRSTC+3)HOLD4=VALUE(ILOC)
          ENDIF
 1176   CONTINUE
        IF(I.GT.NUMBOX)NUMBOX=I
      ELSE
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1112)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1113)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1114)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      IFOUND='YES'
      PBOXXC(I,1)=HOLD1
      PBOXYC(I,1)=HOLD2
      PBOXXC(I,2)=HOLD3
      PBOXYC(I,2)=HOLD4
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1186)I
 1186   FORMAT('THE CORNER COORDINATES FOR BOX ',I5,
     1         ' HAVE JUST BEEN SET TO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1137)PBOXXC(I,1),PBOXYC(I,1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1138)PBOXXC(I,2),PBOXYC(I,2)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBOCC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBOCL(IHARG,IARG,IARGT,NUMARG,IDEFXC,IRGBMX,ICASCL,
     1                  MAXBOX,IBOFCO,IBOFC2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE COLOR FOR A BOX.  THE COLOR FOR A BOX IS THE
C              COLOR THAT WILL APPEAR ON THE BORDER OF THE BOX.  THE
C              COLOR FOR BOX I WILL BE PLACED IN THE I-TH ELEMENT OF THE
C              HOLLERITH VECTOR IBOFCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFXC
C                     --MAXBOX
C     OUTPUT ARGUMENTS--IBOFCO (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              COLOR FOR BOX I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --MAY       1982.
C     UPDATED         --AUGUST    1992. FEEDBACK MESSAGES
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFXC
      CHARACTER*4 ICASCL
      CHARACTER*4 IBOFCO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARG(*)
      DIMENSION IARGT(*)
      DIMENSION IBOFCO(*)
      DIMENSION IBOFC2(MAXBOX,3)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(ICASCL.EQ.'RGB ')GOTO2000
C
      IF(NUMARG.EQ.0)THEN
        GOTO9000
      ELSEIF(NUMARG.GE.1.AND.IHARG(1).EQ.'COLO')THEN
        IF(NUMARG.LE.1 .OR. IHARG(2).EQ.'ON' .OR.
     1     IHARG(2).EQ.'OFF' .OR. IHARG(2).EQ.'AUTO' .OR.
     1     IHARG(2).EQ.'DEFA')THEN
          IHOLD=IDEFXC
        ELSE
          IHOLD=IHARG(2)
        ENDIF
        IFOUND='YES'
        DO1135I=1,MAXBOX
          IBOFCO(I)=IHOLD
 1135   CONTINUE
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,1136)IBOFCO(I)
 1136     FORMAT('ALL BOX BORDER COLORS HAVE JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
      ELSEIF(NUMARG.GE.2.AND.IHARG(2).EQ.'COLO')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** ERROR IN BOX COLOR (DPBOCL)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('      IN THE BOX ... COLOR COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
 1143     FORMAT('      THE BOX IS IDENTIFIED BY A NUMBER, AS IN--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1144)
 1144     FORMAT('      BOX 3 COLOR GREEN')
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
 1153     FORMAT('      THE NUMBER OF BOXES MUST BE ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXBOX
 1154     FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
 1155     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
 1156     FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1           'BOX.')
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'ON' .OR.
     1     IHARG(3).EQ.'OFF' .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          IHOLD=IDEFXC
        ELSE
          IHOLD=IHARG(3)
        ENDIF
        IFOUND='YES'
        IBOFCO(I)=IHOLD
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1186)I,IBOFCO(I)
 1186     FORMAT('THE BORDER COLOR FOR BOX ',I8,
     1           ' HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
      ENDIF
      GOTO9000
C
 2000 CONTINUE
C
      JHOLD1=-1
      JHOLD2=-1
      JHOLD3=-1
C
      IF(NUMARG.EQ.0)THEN
        GOTO9000
      ELSEIF(NUMARG.GE.1.AND.IHARG(1).EQ.'COLO')THEN
        IF(NUMARG.LE.1 .OR. IHARG(2).EQ.'ON' .OR.
     1     IHARG(2).EQ.'OFF' .OR. IHARG(2).EQ.'AUTO' .OR.
     1     IHARG(2).EQ.'DEFA')THEN
          JHOLD1=-1
          JHOLD2=-1
          JHOLD3=-1
        ELSE
          JHOLD1=IARG(2)
          JHOLD2=IARG(3)
          JHOLD3=IARG(4)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
        ENDIF
        IFOUND='YES'
        DO2135I=1,MAXBOX
          IBOFC2(I,1)=JHOLD1
          IBOFC2(I,2)=JHOLD2
          IBOFC2(I,3)=JHOLD3
 2135   CONTINUE
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,2136)IBOFC2(I,1),IBOFC2(I,2),IBOFC2(I,3)
 2136     FORMAT('ALL BOX BORDER COLORS HAVE JUST BEEN SET TO ',3I5)
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
      ELSEIF(NUMARG.GE.2.AND.IHARG(2).EQ.'COLO')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2142)
 2142     FORMAT('      IN THE BOX ... RGB COLOR COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2144)
 2144     FORMAT('      BOX 3 RGB COLOR 101 201 88')
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXBOX
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'ON' .OR.
     1     IHARG(3).EQ.'OFF' .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          JHOLD1=-1
          JHOLD2=-1
          JHOLD3=-1
        ELSE
          JHOLD1=IARG(3)
          JHOLD2=IARG(4)
          JHOLD3=IARG(5)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
        ENDIF
        IFOUND='YES'
        IBOFC2(I,1)=JHOLD1
        IBOFC2(I,2)=JHOLD2
        IBOFC2(I,3)=JHOLD3
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2186)I,IBOFC2(I,1),IBOFC2(I,2),IBOFC2(I,3)
 2186     FORMAT('THE BORDER RGB COLOR FOR BOX ',I8,
     1           ' HAS JUST BEEN SET TO ',3I5)
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
      ENDIF
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPBOFC(IHARG,IARGT,IARG,NUMARG,IDEFXC,MAXBOX,
     1                  IBOFCO,IBOFC2,ICASCL,IRGBMX,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE COLOR FOR THE FILL PATTERN IN A BOX, I.E., THE
C              COLOR THAT WILL APPEAR IN THE INSIDE REGION OF THE BOX.
C              THE COLOR FOR BOX I WILL BE PLACED IN THE I-TH ELEMENT OF
C              THE HOLLERITH VECTOR IBOFCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFXC
C                     --MAXBOX
C     OUTPUT ARGUMENTS--IBOFCO (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              COLOR FOR BOX I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     ORIGINAL VERSION--AUGUST    1992.
C     UPDATED  VERSION--OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFXC
      CHARACTER*4 IBOFCO
      CHARACTER*4 ICASCL
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION IBOFCO(*)
      DIMENSION IBOFC2(MAXBOX,3)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      NUMBOX=0
C
      IF(NUMARG.EQ.0)GOTO9000
      IF(ICASCL.EQ.'RGB')GOTO2000
C
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'FILL'.AND.IHARG(2).EQ.'COLO')
     1   THEN
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'ON' .OR.
     1     IHARG(3).EQ.'OFF' .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          IHOLD=IDEFXC
        ELSE
          IHOLD=IHARG(3)
        ENDIF
C
        IFOUND='YES'
        DO1135I=1,MAXBOX
          IBOFCO(I)=IHOLD
 1135   CONTINUE
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,1136)IBOFCO(I)
 1136     FORMAT('ALL BOX FILL COLORS HAVE JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
C
      ELSEIF(NUMARG.GE.3.AND.IHARG(2).EQ.'FILL'.AND.
     1       IHARG(3).EQ.'COLO')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** ERROR IN BOX FILL COLOR (DPBOFC)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('      IN THE BOX ... FILL COLOR COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
 1143     FORMAT('      THE BOX IS IDENTIFIED BY A NUMBER, AS IN--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1144)
 1144     FORMAT('      BOX 3 FILL COLOR GREEN')
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
C
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1152)
 1152     FORMAT('      IN THE BOX ... FILL COLOR COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
 1153     FORMAT('      THE NUMBER OF BOXES MUST BE ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXBOX
 1154     FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
 1155     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
 1156     FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1           'BOX.')
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
C
        IF(NUMARG.LE.3 .OR. IHARG(4).EQ.'ON' .OR.
     1     IHARG(4).EQ.'OFF' .OR. IHARG(4).EQ.'AUTO' .OR.
     1     IHARG(4).EQ.'DEFA')THEN
          IHOLD=IDEFXC
        ELSE
         IHOLD=IHARG(4)
        ENDIF
C
        IFOUND='YES'
        IBOFCO(I)=IHOLD
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1186)I,IBOFCO(I)
 1186     FORMAT('THE FILL COLOR FOR BOX ',I8,
     1           ' HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
      ENDIF
C
      GOTO9000
C
C     RGB COLORS CASE: 3 COLORS SHOULD BE GIVEN
C
C                      BOX 2 FILL COLOR IRED IBLUE IGREEN
C
C                      THE "RGB" KEYWORD HAS ALREADY BEEN STRIPPED
C                      OUT.  NOTE THAT THE DEFAULT COLOR IS -1
C                      (I.E., NO RGB COLOR VALUES SPECIFIED).
C
 2000 CONTINUE
C
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'FILL'.AND.IHARG(2).EQ.'COLO')
     1   THEN
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'ON' .OR.
     1     IHARG(3).EQ.'OFF' .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          IHOLD1=-1
          IHOLD2=-1
          IHOLD3=-1
        ELSE
          IHOLD1=IARG(3)
          IHOLD2=IARG(4)
          IHOLD3=IARG(5)
        ENDIF
C
        IF(IHOLD1.LT.0 .OR. IHOLD1.GT.IRGBMX)IHOLD1=-1
        IF(IHOLD2.LT.0 .OR. IHOLD2.GT.IRGBMX)IHOLD2=-1
        IF(IHOLD3.LT.0 .OR. IHOLD3.GT.IRGBMX)IHOLD3=-1
C
        IFOUND='YES'
        DO2135I=1,MAXBOX
          IBOFC2(I,1)=IHOLD1
          IBOFC2(I,2)=IHOLD2
          IBOFC2(I,3)=IHOLD3
 2135   CONTINUE
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,2136)IBOFC2(I,1),IBOFC2(I,2),IBOFC2(I,3)
 2136     FORMAT('ALL BOX FILL RGB COLORS HAVE JUST BEEN SET TO ',3I6)
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
C
      ELSEIF(NUMARG.GE.3.AND.IHARG(2).EQ.'FILL'.AND.
     1       IHARG(3).EQ.'COLO')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2142)
 2142     FORMAT('      IN THE BOX ... FILL RGB COLOR COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2144)
 2144     FORMAT('      BOX 3 FILL RGB COLOR 220 220 38')
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
C
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2152)
 2152     FORMAT('      IN THE BOX ... FILL RGB COLOR COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXBOX
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
C
        IF(NUMARG.LE.3 .OR. IHARG(4).EQ.'ON' .OR.
     1     IHARG(4).EQ.'OFF' .OR. IHARG(4).EQ.'AUTO' .OR.
     1     IHARG(4).EQ.'DEFA')THEN
          IHOLD1=-1
          IHOLD2=-1
          IHOLD3=-1
        ELSE
         IHOLD1=IARG(4)
         IHOLD2=IARG(5)
         IHOLD3=IARG(6)
        ENDIF
C
        IF(IHOLD1.LT.0 .OR. IHOLD1.GT.IRGBMX)IHOLD1=-1
        IF(IHOLD2.LT.0 .OR. IHOLD2.GT.IRGBMX)IHOLD2=-1
        IF(IHOLD3.LT.0 .OR. IHOLD3.GT.IRGBMX)IHOLD3=-1
C
        IFOUND='YES'
        IBOFC2(I,1)=IHOLD1
        IBOFC2(I,2)=IHOLD2
        IBOFC2(I,3)=IHOLD3
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2186)I,IBOFC2(I,1),IBOFC2(I,2),IBOFC2(I,3)
 2186     FORMAT('THE FILL RGB COLOR FOR BOX ',I8,
     1           ' HAS JUST BEEN SET TO ',3I6)
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
      ENDIF
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPBOFI(ICAPSW,IFORSW,
     1                  ISEED,IBOOSS,
     1                  IBUGA2,IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,
     1                  IFOUND,IERROR)
C
C     PURPOSE--GENERATE BOOTSTRAP BASED MULTI-LINEAR FIT.
C              BOOTSTRAP ESTIMATES FOR A0, A1, ETC. WILL BE
C              WRITTEN TO FILE DPST1F.DAT.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2002/6
C     ORIGINAL VERSION--JULY     2002.
C     UPDATED         --MAY      2009. REPLACE USE OF DPSWAP WITH
C                                      BUILT-IN STORAGE
C     UPDATED         --AUGUST   2011. USE DPPARS
C     UPDATED         --AUGUST   2011. SUPPORT FOR HTML, LATEX, RTF OUTPUT
C     UPDATED         --AUGUST   2011. SUPPORT FOR "REPLICATED" FIT
C                                      (WHEN SINGLE X VARIABLE, ALLOW
C                                      BOOTSTRAP SAMPLES FROM WITHIN EACH
C                                      DISTINCT X VARIABLE)
C     UPDATED         --JULY     2019. TWEAK SCRATCH STORAGE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IBUGQ
      CHARACTER*4 IBUGAZ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      INCLUDE 'DPCOPA.INC'
C
      CHARACTER*4 ICASFI
      CHARACTER*4 ICASJB
      CHARACTER*4 IREPL
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=MAXCMF)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      DIMENSION PARAM(100)
      DIMENSION T(101)
      DIMENSION S(102)
      DIMENSION PARAM2(100)
      DIMENSION T2(101)
C
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZD.INC'
      INCLUDE 'DPCOZI.INC'
C
      DIMENSION W(MAXOBV)
      DIMENSION VSDPRD(MAXOBV)
      DIMENSION RES2(MAXOBV)
      DIMENSION RES3(MAXOBV)
      DIMENSION RES4(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
C
      DIMENSION ITEMP1(MAXOBV)
      DIMENSION ITEMP2(MAXOBV)
C
      DIMENSION VSCRT(10*MAXOBV)
C
      DIMENSION XMAT(MAXOBV,MAXCMF)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOHO.INC'
C
      EQUIVALENCE (W(1),X3D(1))
      EQUIVALENCE (TEMP4(1),X3D(MAXOBV+1))
      EQUIVALENCE (RES4(1),D(1))
      EQUIVALENCE (RES2(1),DSIZE(1))
      EQUIVALENCE (RES3(1),DSIZE(MAXOBV+1))
      EQUIVALENCE (VSDPRD(1),DSYMB(1))
      EQUIVALENCE (TEMP3(1),DSYMB(MAXOBV+1))
      EQUIVALENCE (TEMP1(1),DCOLOR(1))
      EQUIVALENCE (TEMP2(1),DFILL(1))
      EQUIVALENCE (PARAM(1),DFILL(MAXOBV+1))
      EQUIVALENCE (T(1),DFILL(MAXOBV+201))
      EQUIVALENCE (S(1),DFILL(MAXOBV+401))
      EQUIVALENCE (PARAM2(1),DFILL(MAXOBV+601))
      EQUIVALENCE (T2(1),DFILL(MAXOBV+801))
C
      EQUIVALENCE (GARBAG(IGARB1),XMAT(1,1))
C
      EQUIVALENCE (DGARBG(IDGAR1),VSCRT(1))
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1(1))
      EQUIVALENCE (IGARBG(IIGAR2),ITEMP2(1))
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBO'
      ISUBN2='FI  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IFACT=1
      IF(IFITAC.EQ.'OFF')IFACT=0
      IERROR='NO'
C
C               ************************************
C               **  TREAT THE BOOTSTRAP FIT CASE  **
C               ************************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BOFI')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBOFI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGA2,IBUGA3,IBUGCO,IBUGEV
   53   FORMAT('IBUGA2,IBUGA3,IBUGCO,IBUGEV = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IBUGQ,ISUBRO,NUMNAM
   54   FORMAT('IBUGQ,ISUBRO,NUMNAM = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO57I=1,NUMNAM
          WRITE(ICOUT,58)I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),IVALUE(I),
     1                   VALUE(I)
   58     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),IVALUE(I)',
     1           'VALUE(I) = ',I8,2X,2A4,2X,A4,2I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   57   CONTINUE
      ENDIF
C
C     ***************************
C     **  STEP 1--             **
C     **  EXTRACT THE COMMAND  **
C     ***************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BOFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IREPL='OFF'
      IF(ICOM.EQ.'BOOT'.AND.IHARG(1).EQ.'FIT  ')THEN
        ICASJB='BOOT'
        ILASTC=1
      ELSEIF(ICOM.EQ.'BOOT'.AND.IHARG(1).EQ.'REPL'.AND.
     1       IHARG(2).EQ.'FIT  ')THEN
        ICASJB='BOOT'
        ILASTC=2
        IREPL='ON'
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      ICASFI='MLIN'
      IFOUND='YES'
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BOFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BOOTSTRAP FIT'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=2
      MAXNVA=MAXSPN
      IF(IREPL.EQ.'ON')THEN
        MINNVA=3
        MAXNVA=3
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BOFI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ************************************************
C               **  STEP 5.1--                                **
C               **  CHECK TO SEE IF HAVE A WEIGHTS VARIABLE.  **
C               **  IF DO HAVE, CHECK TO SEE IF A VARIABLE    **
C               **  (AS OPPOSED TO A PARAMETER).              **
C               ************************************************
C
      ISTEPN='5.1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PBOFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILOCW=-99
      ICOLW=-99
      NWEIGH=-99
      IF(IWEIGH.EQ.'ON')THEN
        DO2410I=1,NUMNAM
          I2=I
          IF(IWEIG1.EQ.IHNAME(I2).AND.IWEIG2.EQ.IHNAM2(I2).AND.
     1       IUSE(I2).EQ.'V')THEN
            ILOCW=I2
            ICOLW=IVALUE(ILOCW)
            NWEIGH=IN(ILOCW)
            IF(NWEIGH.NE.NRIGHT(1))THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2461)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2411)
 2411         FORMAT('      THE WEIGHT VARIABLE MUST HAVE THE SAME ',
     1               'NUMBER OF OBSERVATIONS')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2413)
 2413         FORMAT('      AS THE RESPONSE VARIABLE.')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2415)IWEIGH,IWEIG2,NWEIGH
 2415         FORMAT('  WEIGHT VARIABLE ',A4,A4,' HAS ',I8,
     1               'OBSERVATIONS.')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2417)NRIGHT(1)
 2417         FORMAT('      NUMBER OF OBSEVATIONS EXPECTED: ',I8)
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ENDIF
            GOTO2490
          ENDIF
 2410   CONTINUE
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2461)
 2461   FORMAT('***** ERROR IN BOOTSTRAP FIT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2463)
 2463   FORMAT('      THE WEIGHTS VARIABLE (AS SPECIFIED BY THE ',
     1         'WEIGHTS COMMAND) EITHER')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2465)
 2465   FORMAT('      DOES NOT EXIST AS A VARIABLE IN THE CURRENT ',
     1         'LIST OF AVAILABLE NAMES.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2469)IWEIG1,IWEIG2
 2469   FORMAT('      THE NAME OF SPECIFIED WEIGHTS VARIABLE = ',A4,A4)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
C
      ENDIF
C
 2490 CONTINUE
C
      IF(IFITAC.EQ.'ON')THEN
        DO2510I=1,MAXOBV
          XMAT(I,1)=1.0
 2510   CONTINUE
        NVARS=1
      ELSE
        NVARS=0
      ENDIF
C
      NUMFAC=NUMVAR-1
      J=0
      IMAX=NRIGHT(1)
      IF(NQ.LT.NRIGHT(1))IMAX=NQ
      DO2560I=1,IMAX
        IF(ISUB(I).EQ.0)GOTO2560
        J=J+1
C
        IJ=MAXN*(ICOLR(1)-1)+I
        IF(ICOLR(1).LE.MAXCOL)Y(J)=V(IJ)
        IF(ICOLR(1).EQ.MAXCP1)Y(J)=PRED(I)
        IF(ICOLR(1).EQ.MAXCP2)Y(J)=RES(I)
        IF(ICOLR(1).EQ.MAXCP3)Y(J)=YPLOT(I)
        IF(ICOLR(1).EQ.MAXCP4)Y(J)=XPLOT(I)
        IF(ICOLR(1).EQ.MAXCP5)Y(J)=X2PLOT(I)
        IF(ICOLR(1).EQ.MAXCP6)Y(J)=TAGPLO(I)
C
        W(J)=1.0
        IF(IWEIGH.EQ.'ON')THEN
          K=ICOLW
          IJ=MAXN*(K-1)+I
          IF(K.LE.MAXCOL)W(J)=V(IJ)
          IF(K.EQ.MAXCP1)W(J)=PRED(I)
          IF(K.EQ.MAXCP2)W(J)=RES(I)
          IF(K.EQ.MAXCP3)W(J)=YPLOT(I)
          IF(K.EQ.MAXCP4)W(J)=XPLOT(I)
          IF(K.EQ.MAXCP5)W(J)=X2PLOT(I)
          IF(K.EQ.MAXCP6)W(J)=TAGPLO(I)
        ENDIF
C
        DO2569LL=1,NUMFAC
          ICOLT=ICOLR(LL+1)
          IJ=MAXN*(ICOLT-1)+I
          IF(ICOLT.LE.MAXCOL)XMAT(J,LL+NVARS)=V(IJ)
          IF(ICOLT.EQ.MAXCP1)XMAT(J,LL+NVARS)=PRED(I)
          IF(ICOLT.EQ.MAXCP2)XMAT(J,LL+NVARS)=RES(I)
          IF(ICOLT.EQ.MAXCP3)XMAT(J,LL+NVARS)=YPLOT(I)
          IF(ICOLT.EQ.MAXCP4)XMAT(J,LL+NVARS)=XPLOT(I)
          IF(ICOLT.EQ.MAXCP5)XMAT(J,LL+NVARS)=X2PLOT(I)
          IF(ICOLT.EQ.MAXCP6)XMAT(J,LL+NVARS)=TAGPLO(I)
 2569   CONTINUE
 2560 CONTINUE
      NS=J
      NVARS=NVARS+NUMFAC
      IF(IWEIGH.EQ.'ON')NVARS=NVARS+1
C
C
C               *************************************************
C               **  STEP 14--                                  **
C               **  CARRY OUT THE ACTUAL FIT                   **
C               **  VIA CALLING                                **
C               **  DPBOF2 (FOR GENERAL MODELS), OR            **
C               *************************************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BOFI')THEN
        ISTEPN='14'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        IBUGAZ=IBUGA3
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6081)
 6081   FORMAT('***** FROM DPBOFI, AS ABOUT TO CALL DPBOF2--')
        CALL DPWRST('XXX','BUG ')
        DO6083I=1,NS
          WRITE(ICOUT,6084)I,(XMAT(I,J),J=1,5)
 6084     FORMAT('I,(XMAT(I,J),J=1,5) = ',I6,2X,5G15.7)
          CALL DPWRST('XXX','BUG ')
 6083   CONTINUE
        WRITE(ICOUT,6082)NRIGHT(1),MAXN,NS,NVARS
 6082   FORMAT('NRIGHT(1),MAXN,NS,NVARS = ',4I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      MAXNXT=MAXOBV
      MAXCFI=MAXCMF
      CALL DPBOF2(Y,XMAT,NS,NVARS,MAXNXT,MAXCFI,
     1            PARAM,T,S,W,VSDPRD,RES2,VSCRT,
     1            PARAM2,T2,RES3,RES4,
     1            TEMP1,TEMP2,TEMP3,TEMP4,ITEMP1,ITEMP2,
     1            ICASFI,ICASJB,IBOOSS,ISEED,
     1            ICAPSW,ICAPTY,IFORSW,IREPL,IFITAC,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ***************************************
C               **  STEP 15--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='15'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BOFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IERROR.EQ.'YES')THEN
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,9003)(IANS(JJ),JJ=1,MIN(100,IWIDTH))
 9003     FORMAT('      COMMAND LINE--',100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BOFI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBOFI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9051)NRIGHT(1),NS,V(1),PRED(1),RES(1)
 9051   FORMAT('NRIGHT(1),NS,V(1),PRED(1),RES(1) = ',2I8,3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9069)IFOUND,IERROR
 9069   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBOF2(Y,XMAT,N,NVARS,MAXNXT,MAXCFI,
     1                  B,T,S,W,VSDPRD,RES,SCR,
     1                  BORG,TORG,RES1,RES2,
     1                  TEMP1,TEMP2,TEMP3,TEMP4,ITEMP1,ITEMP2,
     1                  ICASFI,ICASJB,IBOOSS,ISEED,
     1                  ICAPSW,ICAPTY,IFORSW,IREPL,IFITAC,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     BOOTSTRAP MULTILINEAR FIT.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2002/7
C     ORIGINAL VERSION--JULY      2002.
C     UPDATED         --AUGUST    2011. USE DPDTA1, DPDT5B TO PRINT
C                                       TABLES
C     UPDATED         --AUGUST    2011. USE DPAUFI
C     UPDATED         --AUGUST    2011. MODIFY UNFORMATTED WRITE FOR
C                                       "DATA" CASE
C     UPDATED         --AUGUST    2011. WHEN THERE IS A SINGLE X
C                                       VARIABLE, SUPPORT A TAG VARIABLE
C                                       FOR BOOTSTRAPPING WITHIN GROUPS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASFI
      CHARACTER*4 ICASJB
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IREPL
      CHARACTER*4 IFITAC
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IWRITE
      CHARACTER*4 IOP
      CHARACTER*3 IPARNM
C
C---------------------------------------------------------------------
C
      INTEGER N, NVARS
      INTEGER ITEMP1(*)
      INTEGER ITEMP2(*)
C
      REAL Y(*)
      REAL XMAT(MAXNXT,MAXCFI)
      REAL B(*)
      REAL T(*)
      REAL S(*)
      REAL BORG(*)
      REAL TORG(*)
      REAL W(*)
      REAL VSDPRD(*)
      REAL RES(*)
      REAL RES1(*)
      REAL RES2(*)
      REAL SCR(*)
      REAL TEMP1(*)
      REAL TEMP2(*)
      REAL TEMP3(*)
      REAL TEMP4(*)
C
      DOUBLE PRECISION DSUM1
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOF2.INC'
C
      PARAMETER(NUMCLI=7)
      PARAMETER(MAXLIN=2)
      PARAMETER (MAXROW=50)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      IDIGI2(MAXROW,NUMCLI)
      INTEGER      NTOT(MAXROW)
      INTEGER      ROWSEP(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*30 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      NCOLSP(MAXLIN,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBO'
      ISUBN2='F2  '
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBOF2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)ICASFI,IBOOME,IBOOSS,N,NVARS
   54   FORMAT('ICASFI,IBOOME,IBOOSS,N,NVARS = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,Y(I),W(I)
   56     FORMAT('I,Y(I),W(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        DO65I=1,N
          WRITE(ICOUT,66)I,(XMAT(I,J),J=1,MIN(5,NVARS))
   66     FORMAT('I,(XMAT(I,J),J=1,MIN(NVARS,5) = ',I8,5G15.7)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
       ENDIF
C
C               **************************************************
C               **  STEP 0.5--                                  **
C               **   OPEN THE STORAGE FILES                     **
C               **************************************************
C
      ISTEPN='0.5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'FIT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOP='OPEN'
      IFLG1=1
      IFLG2=1
      IFLG3=1
      IFLG4=0
      IFLG5=1
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
C               *****************************************************
C               **  STEP 1--                                       **
C               **  PRINT SUMMARY INFORMATION.                     **
C               *****************************************************
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      IF(IPRINT.EQ.'OFF')GOTO199
C
      ITITLE='Bootstrap Linear/Multilinear Fit'
      NCTITL=32
      ITITLZ=' '
      NCTITZ=0
      IF(IREPL.EQ.'ON')THEN
        ITITLZ='(Bootstrap by Groups)'
        NCTITZ=21
      ENDIF
C
      ICNT=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Bootstrap Samples:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=REAL(IBOOSS)
      IDIGIT(ICNT)=0
      IF(IBOOME.EQ.'DATA')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Bootstrap Method: Data (Wu)'
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='Bootstrap Method: Residuals (Efron)'
        NCTEXT(ICNT)=35
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
      NUMROW=ICNT
      DO181I=1,NUMROW
        NTOT(I)=15
  181 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,
     1            NCTEXT,AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITLE(1:13)='Summary Table'
      NCTITL=13
      ITITL9=' '
      NCTIT9=0
C
      NUMCOL=6
      NUMLIN=3
C
      DO183I=1,MAXLIN
        DO185J=1,NUMCLI
          ITITL2(I,J)=' '
          NCTIT2(I,J)=0
          NCOLSP(I,J)=0
  185   CONTINUE
  183 CONTINUE
C
      ITITL2(1,1)='Para-'
      NCTIT2(1,1)=5
      NCOLSP(1,1)=1
      ITITL2(2,1)='meter'
      NCTIT2(2,1)=5
      NCOLSP(2,1)=1
C
      ITITL2(1,2)='Estimates From Original Fit'
      NCTIT2(1,2)=27
      NCOLSP(1,2)=2
      ITITL2(2,2)='Coef'
      NCTIT2(2,2)=4
      NCOLSP(2,2)=1
      ITITL2(2,3)='SD'
      NCTIT2(2,3)=2
      NCOLSP(2,3)=1
C
      ITITL2(1,4)='Estimates From Bootstrap Fit'
      NCTIT2(1,4)=28
      NCOLSP(1,4)=4
      ITITL2(2,4)='Mean'
      NCTIT2(2,4)=4
      NCOLSP(2,4)=1
      ITITL2(2,5)='SD'
      NCTIT2(2,5)=2
      NCOLSP(2,5)=1
      ITITL2(2,6)='2.5'
      NCTIT2(2,6)=3
      NCOLSP(2,6)=1
      ITITL2(2,7)='97.5'
      NCTIT2(2,7)=4
      NCOLSP(2,7)=1
C
      NMAX=0
      NUMCOL=7
      DO193I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1)NTOT(I)=8
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        IF(I.EQ.1)ITYPCO(I)='ALPH'
        DO195J=1,MAXROW
          IDIGI2(J,I)=NUMDIG
          IF(I.EQ.1)THEN
            IDIGI2(J,I)=-1
          ENDIF
          IVALUE(J,I)=' '
          NCVALU(J,I)=0
          AMAT(J,I)=0.0
          ROWSEP(J)=0
  195   CONTINUE
  193 CONTINUE
C
  199 CONTINUE
C
C               *****************************************************
C               **  STEP 2--GENERATE ORIGINAL FIT OF THE DATA.     **
C               **          THIS IS THE SAME FOR BOTH METHODS.     **
C               *****************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NPAR=NVARS
      ICASJB='BOOT'
      NRESAM=IBOOSS
      IT=2
C
C     FOR REPLICATED FIT, THE TAG VARIABLE IS IN COLUMN 2 OF XMAT.
C     STORE DISTINCT VALUES OF THIS TAG VARIABLE IN COLUMN 3.
C
C     CHECK THAT EACH GROUP HAS AT LEAST 2 ELEMENTS.
C
      IF(IREPL.EQ.'ON')THEN
        NPAR=2
        CALL DISTIN(XMAT(1,3),N,IWRITE,TEMP4,NDIST,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        DO210I=1,NDIST
          XMAT(I,4)=TEMP4(I)
  210   CONTINUE
C
        DO220I=1,NDIST
          HOLD=XMAT(I,4)
          NTEMP=0
          DO230J=1,N
            IF(XMAT(J,3).EQ.HOLD)THEN
              NTEMP=NTEMP+1
            ENDIF
  230     CONTINUE
C
          IF(NTEMP.LT.2)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,221)
  221       FORMAT('***** ERROR IN BOOTSTRAP FIT--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,223)
  223       FORMAT('      FOR THE "REPLICATED" CASE, EACH GROUP ',
     1             'MUST HAVE AT LEAST 2 ELEMENTS.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,225)HOLD
  225       FORMAT('      VALUE FOR GROUP-ID = ',G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,227)NTEMP
  227       FORMAT('      NUMBER OF ELEMENTS = ',I8)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            XMAT(I,5)=REAL(NTEMP)
          ENDIF
  220   CONTINUE
      ENDIF
C
      CALL LSQRTX(Y,W,N,XMAT,MAXOBV,NPAR,IT,
     1            B,RES,T,VSDPRD,S,RESSSQ,D,RESSD,NDF,SCR,ID,IFITAC,
     1            IBUGA3,ISUBRO,IERROR)
      DO240I=1,NPAR
        BORG(I)=B(I)
        TORG(I)=T(I)
  240 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  BOOTSTRAP FIT BY "DATA" METHOD.                **
C               *****************************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IBOOME.EQ.'DATA')THEN
C
C  SAVE ORIGINAL DATA TO UNFORMATTED FILE FOR FAST ACCESS
C
        NSAVE=NVARS
        IF(IREPL.EQ.'ON')NSAVE=5
C
        IOP='OPEN'
        IFLG1=0
        IFLG2=0
        IFLG3=0
        IFLG4=1
        IFLG5=0
        IST4FO='UNFORMATTED'
        CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGA3,ISUBRO,IERROR)
        WRITE(IOUNI4)(Y(I),I=1,N)
        WRITE(IOUNI4)(W(I),I=1,N)
        WRITE(IOUNI4)((XMAT(I,J),I=1,N),J=1,NSAVE)
        IOP='CLOS'
        CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGA3,ISUBRO,IERROR)
C
        DO310IRESAM=1,NRESAM
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')THEN
             WRITE(ICOUT,312)IRESAM
  312        FORMAT('FROM DPBOFI, IRESAM = ',I8)
             CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IOP='OPEN'
          IFLG1=0
          IFLG2=0
          IFLG3=0
          IFLG4=1
          IFLG5=0
          CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGA3,ISUBRO,IERROR)
          READ(IOUNI4)(Y(I),I=1,N)
          READ(IOUNI4)(W(I),I=1,N)
          READ(IOUNI4)((XMAT(I,J),I=1,N),J=1,NSAVE)
CCCCC     READ(IOUNI4)Y
CCCCC     READ(IOUNI4)XMAT
CCCCC     READ(IOUNI4)W
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')THEN
            DO320I=1,N
              WRITE(ICOUT,321)I,Y(I),W(I)
  321         FORMAT('I,Y(I),W(I) = ',I8,2G15.7)
              CALL DPWRST('XXX','BUG ')
  320       CONTINUE
            DO325I=1,N
              WRITE(ICOUT,326)I,(XMAT(I,J),J=1,MIN(5,NSAVE))
  326         FORMAT('I,(XMAT(I,J),J=1,MIN(NSAVE,5) = ',I8,5G15.7)
              CALL DPWRST('XXX','BUG ')
  325       CONTINUE
          ENDIF
C
          IOP='CLOS'
          CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGA3,ISUBRO,IERROR)
C
          IF(IREPL.EQ.'ON')THEN
            DO331K=1,NDIST
              HOLD=XMAT(K,4)
              NTEMP1=INT(XMAT(K,5)+0.1)
              NTEMP2=0
              DO333I=1,N
                XMAT(I,7)=REAL(I)
                IF(XMAT(I,3).EQ.HOLD)THEN
                  NTEMP2=NTEMP2+1
                  ITEMP2(NTEMP2)=I
                ENDIF
  333         CONTINUE
C
              IF(NTEMP1.NE.NTEMP2)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,221)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,436)HOLD,NTEMP1
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,437)NTEMP2
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
C             USE GATHER/SCATTER OPERATION TO PUT X,Y IN CORRECT ROW.
C             GENERATE BOOTSTRAP SAMPLE FROM THE INDEX VARIABLE AND
C             THEN USE THIS TO EXTRACT THE X,Y PAIRS.
C
              CALL GATHER(NTEMP2,XMAT(1,6),XMAT(1,7),ITEMP2,MAXOBV,
     1                    ISUBRO,IBUGA3,IERROR)
C
              IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BOF2')THEN
                DO341II=1,NTEMP2
                  WRITE(ICOUT,343)II,ITEMP2(II),XMAT(II,6)
  343             FORMAT('II,ITEMP2(II),XMAT(II,6)=',2I8,G15.7)
                  CALL DPWRST('XXX','BUG ')
  341           CONTINUE
              ENDIF
C
              NOUT=N
              CALL DPJBS3(XMAT(1,6),NTEMP2,ICASJB,IRESAM,ISEED,
     1                    TEMP1,NOUT,ITEMP1,TEMP4,IBUGA3,IERROR)
C
              IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BOF2')THEN
                DO347II=1,NTEMP2
                  WRITE(ICOUT,348)II,TEMP1(II)
  348             FORMAT('II,TEMP1(II) = ',I8,G15.7)
                  CALL DPWRST('XXX','BUG ')
  347           CONTINUE
              ENDIF
C
              NMAX=N
              CALL SCATTR(NTEMP2,XMAT(1,8),ITEMP2,TEMP1,NMAX,MAXOBV,
     1                    ISUBRO,IBUGA3,IERROR)
C
  331       CONTINUE
C
            DO349J=1,N
              ITEMP1(J)=INT(XMAT(J,8)+0.1)
              TEMP3(J)=Y(ITEMP1(J))
              TEMP2(J)=W(ITEMP1(J))
  349       CONTINUE
            DO351J=1,N
              Y(J)=TEMP3(J)
              W(J)=TEMP2(J)
  351       CONTINUE
          ELSE
            CALL DPJBS3(Y,N,ICASJB,IRESAM,ISEED,
     1                  TEMP1,N2,ITEMP1,TEMP4,IBUGA3,IERROR)
            DO370J=1,N
              Y(J)=TEMP1(J)
              TEMP2(J)=W(ITEMP1(J))
  370       CONTINUE
            DO375J=1,N
              W(J)=TEMP2(J)
  375       CONTINUE
          ENDIF
C
          DO380L=1,NPAR
            DO385J=1,N
              TEMP3(J)=XMAT(ITEMP1(J),L)
  385       CONTINUE
            DO388J=1,N
              XMAT(J,L)=TEMP3(J)
  388       CONTINUE
  380     CONTINUE
C
          CALL LSQRTX(Y,W,N,XMAT,MAXOBV,NPAR,IT,
     1               B,RES,T,VSDPRD,S,RESSSQ,D,RESSD,NDF,SCR,ID,IFITAC,
     1               IBUGA3,ISUBRO,IERROR)
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')THEN
             WRITE(ICOUT,392)
  392        FORMAT('FROM DPBOFI, BEFORE WRITE TO FILES')
             CALL DPWRST('XXX','BUG ')
          ENDIF
C
          WRITE(IOUNI1,'(35E15.7)')(B(LL),LL=1,NPAR)
          WRITE(IOUNI2,'(35E15.7)')(T(LL),LL=1,NPAR)
          WRITE(IOUNI3,'(E15.7)')RESSD
C
          IF(IRESAM.GE.1)THEN
            DO395II=1,N
              APRED=Y(II) - RES(II)
              WRITE(IOUNI5,'(I8,7E15.7)')IRESAM,APRED,RES(II),
     1              (XMAT(II,JJ),JJ=1,NPAR)
  395       CONTINUE
          ENDIF
C
  310   CONTINUE
      ELSE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  BOOTSTRAP FIT BY "RESIDUAL" METHOD             **
C               *****************************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     COMPUTE AND STORE RESIDUALS FROM ORIGINAL FIT
C
        DO401I=1,N
          DSUM1=0.0
          DO405J=1,NPAR
            DSUM1 = DSUM1 + DBLE(BORG(J)*XMAT(I,J))
  405     CONTINUE
          RES1(I) = Y(I) - REAL(DSUM1)
  401   CONTINUE
C
C       RESAMPLE RESIDUALS, COMPUTE NEW Y (XMAT STAYS CONSTANT,
C       SO NO NEED TO SAVE/RELOAD ORIGINAL X MATRIX).
C
        DO410IRESAM=1,NRESAM
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')THEN
             WRITE(ICOUT,422)IRESAM
  422        FORMAT('FROM DPBOFI, IRESAM = ',I8)
             CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(IREPL.EQ.'ON')THEN
            DO431K=1,NDIST
              HOLD=XMAT(K,4)
              NTEMP1=INT(XMAT(K,5)+0.1)
              NTEMP2=0
              DO433I=1,N
                IF(XMAT(I,3).EQ.HOLD)THEN
                  NTEMP2=NTEMP2+1
                  ITEMP2(NTEMP2)=I
                ENDIF
  433         CONTINUE
C
              IF(NTEMP1.NE.NTEMP2)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,221)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,436)HOLD,NTEMP1
  436           FORMAT('      FOR GROUP-ID ',G15.7,' EXPECTED ',I8)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,437)NTEMP2
  437           FORMAT('      ROWS BUT ONLY EXTRACTED ',I8,' ROWS.')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
C             USE GATHER/SCATTER OPERATION TO PUT RESIDUALS IN
C             CORRECT ROW.
C
              IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BOF2')THEN
                DO441II=1,NTEMP2
                  WRITE(ICOUT,443)II,ITEMP2(II)
  443             FORMAT('II,ITEMP2(II) = ',2I8)
                  CALL DPWRST('XXX','BUG ')
  441           CONTINUE
              ENDIF
C
              CALL GATHER(NTEMP2,XMAT(1,6),RES1,ITEMP2,MAXOBV,
     1                    ISUBRO,IBUGA3,IERROR)
              NOUT=N
              CALL DPJBS3(XMAT(1,6),NTEMP2,ICASJB,IRESAM,ISEED,
     1                    RES2,NOUT,ITEMP1,TEMP4,IBUGA3,IERROR)
              NMAX=N
              CALL SCATTR(NTEMP2,RES1,ITEMP2,RES2,NMAX,MAXOBV,
     1                    ISUBRO,IBUGA3,IERROR)
  431       CONTINUE
          ELSE
            CALL DPJBS3(RES1,N,ICASJB,IRESAM,ISEED,RES2,N2,ITEMP1,
     1                  TEMP4,IBUGA3,IERROR)
          ENDIF
C
          DO460I=1,N
            DSUM1=0.0
            DO465J=1,NPAR
              DSUM1 = DSUM1 + DBLE(BORG(J)*XMAT(I,J))
  465       CONTINUE
            TEMP3(I) = RES2(I) + REAL(DSUM1)
  460     CONTINUE
C
          CALL LSQRTX(TEMP3,W,N,XMAT,MAXOBV,NPAR,IT,
     1               B,RES,T,VSDPRD,S,RESSSQ,D,RESSD,NDF,SCR,ID,IFITAC,
     1               IBUGA3,ISUBRO,IERROR)
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')THEN
             WRITE(ICOUT,472)
  472        FORMAT('FROM DPBOF2, BEFORE WRITE TO FILES')
             CALL DPWRST('XXX','BUG ')
          ENDIF
C
          WRITE(IOUNI1,'(35E15.7)')(B(LL),LL=1,NPAR)
          WRITE(IOUNI2,'(35E15.7)')(T(LL),LL=1,NPAR)
          WRITE(IOUNI3,'(E15.7)')RESSD
C
          IF(IRESAM.GE.1)THEN
            DO495II=1,N
              APRED=Y(II) - RES(II)
              WRITE(IOUNI5,'(I8,7E15.7)')IRESAM,APRED,RES(II),
     1              (XMAT(II,JJ),JJ=1,NPAR)
  495       CONTINUE
          ENDIF
C
  410   CONTINUE
      ENDIF
C
      IOP='CLOS'
      IFLG1=1
      IFLG2=1
      IFLG3=1
      IFLG4=0
      IFLG5=1
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
C               *********************************************
C               **  STEP 5--                               **
C               **  COMPUTE AND PRINT SUMMARY INFORMATION. **
C               *********************************************
C
      ISTEPN='85'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C  REOPEN DPST1F.DAT, DPST2F.DAT TO RETRIEVE PARAMETER AND
C  PARAMETER SD ESTIMATES.
C
      IOP='OPEN'
      IFLG1=1
      IFLG2=1
      IFLG3=0
      IFLG4=0
      IFLG5=0
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
      IWRITE='OFF'
      DO8510J=1,NPAR
        DO8520I=1,NRESAM
          READ(IOUNI1,'(35E15.7)',END=8599,ERR=8599)(B(LL),LL=1,NPAR)
          READ(IOUNI2,'(35E15.7)',END=8599,ERR=8599)(T(LL),LL=1,NPAR)
          TEMP1(I)=B(J)
          TEMP2(I)=T(J)
 8520   CONTINUE
        CALL MEDIAN(TEMP1,NRESAM,IWRITE,TEMP3,MAXOBV,XMED,
     1              IBUGA3,IERROR)
        CALL MEAN(TEMP1,NRESAM,IWRITE,XMEAN,IBUGA3,IERROR)
        CALL MEAN(TEMP2,NRESAM,IWRITE,XSD,IBUGA3,IERROR)
        P100=2.5
        CALL PERCEN(P100,TEMP1,NRESAM,IWRITE,TEMP3,MAXOBV,
     1              X025,IBUGA3,IERROR)
        P100=97.5
        CALL PERCEN(P100,TEMP1,NRESAM,IWRITE,TEMP3,MAXOBV,
     1              X975,IBUGA3,IERROR)
        IPARNM(1:3)='A  '
        IF(J.LE.9)THEN
          WRITE(IPARNM(2:2),'(I1)')J-1
          NCVALU(J,1)=2
        ELSE
          NCVALU(J,1)=3
          WRITE(IPARNM(2:3),'(I2)')J-1
        ENDIF
CCCCC   WRITE(ICOUT,8529)IPARNM,BORG(J),TORG(J),XMEAN,XSD,X025,X975
C8529   FORMAT(A3,3X,6(E12.5))
CCCCC   CALL DPWRST('XXX','BUG ')
        IVALUE(J,1)(1:3)=IPARNM(1:3)
        AMAT(J,2)=BORG(J)
        AMAT(J,3)=TORG(J)
        AMAT(J,4)=XMEAN
        AMAT(J,5)=XSD
        AMAT(J,6)=X025
        AMAT(J,7)=X975
        REWIND(IOUNI1)
        REWIND(IOUNI2)
 8510 CONTINUE
 8599 CONTINUE
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
      NUMLIN=2
      ICNT=NPAR
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
      CALL DPDT5B(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGI2,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            NCOLSP,ROWSEP,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
C               ****************************************************
C               **  STEP 6--                                      **
C               **  WRITE INFO OUT TO FILES--                     **
C               **     1) DPST1F.DAT--XXXXX                       **
C               ****************************************************
C
      ISTEPN='81'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8112)
 8112   FORMAT('COEFFICIENT ESTIMATES WRITTEN  TO FILE DPST1F.DAT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8114)
 8114   FORMAT('COEFFICIENT STANDARD DEVIATIONS WRITTEN TO FILE ',
     1         'DPST2F.DAT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8116)
 8116   FORMAT('RESIDUAL STANDARD DEVIATIONS WRITTEN TO FILE ',
     1         'DPST3F.DAT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8118)
 8118   FORMAT('RESIDUAL AND PREDICTED VALUES FOR BOOTSTRAP SAMPLES ',
     1         'WRITTEN TO DPST5F.DAT')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
CCCCC BE SURE TO RESET DPST4F.DAT TO FORMATTED.
C
      IST4FO='FORMATTED'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BOF2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBOF2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBOFP(IHARG,IARGT,IARG,NUMARG,IDEFPA,
     1                  MAXBOX,IBOFPA,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE FILL PATTERN FOR A BOX.
C              THE FILL PATTERN FOR A BOX IS THE PATTERN
C              THAT WILL APPEAR IN THE INSIDE REGION OF THE BOX.
C              THE PATTERN FOR BOX I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE HOLLERITH
C              VECTOR IBOFPA(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFPA
C                     --MAXBOX
C     OUTPUT ARGUMENTS--IBOFPA (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              PATTERN FOR BOX I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--92/8
C     ORIGINAL VERSION--AUGUST    1992.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFPA
      CHARACTER*4 IBOFPA
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION IBOFPA(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'FILL'.AND.
     1   IHARG(2).EQ.'PATT')THEN
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          IHOLD=IDEFPA
        ELSEIF(IHARG(3).EQ.'ON' .OR. IHARG(3).EQ.'SOLI')THEN
          IHOLD='ON'
        ELSEIF(IHARG(3).EQ.'EMPT' .OR. IHARG(3).EQ.'OFF' .OR.
     1         IHARG(3).EQ.'BLAN' .OR. IHARG(3).EQ.'NONE' .OR.
     1         IHARG(3).EQ.'HOLL')THEN
          IHOLD='OFF'
        ELSE
          IHOLD=IHARG(3)
        ENDIF
C
        IFOUND='YES'
        DO1135I=1,MAXBOX
          IBOFPA(I)=IHOLD
 1135   CONTINUE
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        I=1
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,1136)IBOFPA(I)
 1136     FORMAT('ALL BOX FILL PATTERNS HAVE JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
      ELSEIF(NUMARG.GE.3.AND.IHARG(2).EQ.'FILL'.AND.
     1       IHARG(3).EQ.'PATT')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** ERROR IN BOX FILL PATTERN (DPBOFP)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('      IN THE BOX ... FILL PATTERN COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
 1143     FORMAT('      THE BOX IS IDENTIFIED BY A NUMBER, AS IN--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1144)
 1144     FORMAT('      BOX 3 FILL PATTERN ON')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
 1153     FORMAT('      THE NUMBER OF BOXES MUST BE ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXBOX
 1154     FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
 1155     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
 1156     FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1           'BOX.')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        IF(NUMARG.LE.3 .OR. IHARG(4).EQ.'AUTO' .OR.
     1     IHARG(4).EQ.'DEFA')THEN
          IHOLD=IDEFPA
        ELSEIF(IHARG(4).EQ.'ON' .OR. IHARG(4).EQ.'SOLI')THEN
          IHOLD='ON'
        ELSEIF(IHARG(4).EQ.'OFF' .OR. IHARG(4).EQ.'EMPT' .OR.
     1         IHARG(4).EQ.'BLAN' .OR. IHARG(4).EQ.'NONE' .OR.
     1         IHARG(4).EQ.'HOLL')THEN
          IHOLD='OFF'
        ELSE
          IHOLD=IHARG(4)
        ENDIF
C
        IFOUND='YES'
        IBOFPA(I)=IHOLD
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1186)I,IBOFPA(I)
 1186     FORMAT('THE FILL PATTERN FOR BOX ',I8,
     1           ' HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
      ENDIF
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBOFT(IHARG,IARGT,IARG,ARG,NUMARG,PDEFTH,
     1                  MAXBOX,PBOFTH,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE THICKNESS FOR A BOX.
C              THE THICKNESS FOR A BOX IS THE THICKNESS
C              THAT WILL APPEAR IN THE INSIDE REGION OF THE BOX.
C              THE THICKNESS FOR BOX I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE REAL
C              VECTOR PBOFTH(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --ARG    (A REAL VECTOR)
C                     --NUMARG
C                     --PDEFTH
C                     --MAXBOX
C     OUTPUT ARGUMENTS--PBOFTH (A REAL VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              THICKNESS FOR BOX I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--92/8
C     ORIGINAL VERSION--AUGUST    1992.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      REAL        PDEFTH
      REAL        PBOFTH
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      REAL        PHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
      DIMENSION PBOFTH(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'FILL'.AND.
     1   IHARG(2).EQ.'THIC')THEN
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'ON' .OR.
     1     IHARG(3).EQ.'OFF' .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          PHOLD=PDEFTH
        ELSE
          PHOLD=ARG(3)
        ENDIF
C
        IFOUND='YES'
        DO1135I=1,MAXBOX
          PBOFTH(I)=PHOLD
 1135   CONTINUE
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,1136)PBOFTH(I)
 1136     FORMAT('ALL BOX FILL THICKNESSS HAVE JUST BEEN SET TO ',
     1           E15.7)
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
      ELSEIF(NUMARG.GE.3.AND.IHARG(2).EQ.'FILL'.AND.
     1       IHARG(3).EQ.'THIC')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** ERROR IN BOX FILL THICKNESS (DPBOFT)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('      IN THE BOX ... FILL THICKNESS COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
 1143     FORMAT('      THE BOX IS IDENTIFIED BY A NUMBER, AS IN--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1144)
 1144     FORMAT('      BOX 3 FILL THICKNESS 0.3')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
 1153     FORMAT('      THE NUMBER OF BOXES MUST BE ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXBOX
 1154     FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
 1155     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
 1156     FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1           'BOX.')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        IF(NUMARG.LE.3 .OR. IHARG(4).EQ.'ON' .OR.
     1     IHARG(4).EQ.'OFF' .OR. IHARG(4).EQ.'AUTO' .OR.
     1     IHARG(4).EQ.'DEFA')THEN
          PHOLD=PDEFTH
        ELSE
          PHOLD=ARG(4)
        ENDIF
C
        IFOUND='YES'
        PBOFTH(I)=PHOLD
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1186)I,PBOFTH(I)
 1186     FORMAT('THE FILL THICKNESS FOR BOX ',I8,
     1           ' HAS JUST BEEN SET TO ',E15.7)
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
      ENDIF
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBOFG(IHARG,IARGT,IARG,ARG,NUMARG,PDEFGA,
     1                  MAXBOX,PBOPGA,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE GAP FOR A BOX.
C              THE GAP FOR A BOX IS THE GAP
C              BETWEEN THE LINES OF A REGION FILL PATTERN.
C              THE GAP FOR BOX I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE REAL
C              VECTOR PBOPGA(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --ARG    (A REAL VECTOR)
C                     --NUMARG
C                     --PDEFGA
C                     --MAXBOX
C     OUTPUT ARGUMENTS--PBOPGA (A REAL VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              GAP FOR BOX I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--92/8
C     ORIGINAL VERSION--AUGUST    1992.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      REAL        PDEFGA
      REAL        PBOPGA
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      REAL        PHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
      DIMENSION PBOPGA(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'FILL'.AND.
     1   IHARG(2).EQ.'GAP')THEN
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'ON' .OR.
     1     IHARG(3).EQ.'OFF' .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          PHOLD=PDEFGA
        ELSE
          PHOLD=ARG(3)
        ENDIF
C
        IFOUND='YES'
        DO1135I=1,MAXBOX
          PBOPGA(I)=PHOLD
 1135   CONTINUE
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,1136)PBOPGA(I)
 1136     FORMAT('ALL BOX FILL GAPS HAVE JUST BEEN SET TO ',E15.7)
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
      ELSEIF(NUMARG.GE.3.AND.IHARG(2).EQ.'FILL'.AND.
     1       IHARG(3).EQ.'GAP')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** ERROR IN BOX FILL GAP (DPBOFG)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('      IN THE BOX ... FILL GAP COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
 1143     FORMAT('      THE BOX IS IDENTIFIED BY A NUMBER, AS IN--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1144)
 1144     FORMAT('      BOX 3 FILL GAP 1.0')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
 1153     FORMAT('      THE NUMBER OF BOXES MUST BE ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXBOX
 1154     FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
 1155     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
 1156     FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1           'BOX.')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        IF(NUMARG.LE.3 .OR. IHARG(4).EQ.'ON' .OR.
     1     IHARG(4).EQ.'OFF' .OR. IHARG(4).EQ.'AUTO' .OR.
     1     IHARG(4).EQ.'DEFA')THEN
          PHOLD=PDEFGA
        ELSE
          PHOLD=ARG(4)
        ENDIF
C
        IFOUND='YES'
        PBOPGA(I)=PHOLD
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1186)I,PBOPGA(I)
 1186     FORMAT('THE FILL GAP FOR BOX ',I8,
     1           ' HAS JUST BEEN SET TO ',E15.7)
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
      ENDIF
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBOFL(IHARG,IHARG2,IARGT,IARG,NUMARG,IDEFPA,
     1                  MAXBOX,IBOPPA,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LINE PATTERN FOR THE FILL OF
C              A BOX.  THIS ONLY APPLIES FOR NON-SOLID FILL
C              PATTERNS (E.G., HORI, VERT, ETC.)
C              THE PATTERN FOR BOX I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE HOLLERITH
C              VECTOR IBOPPA(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFPA
C                     --MAXBOX
C     OUTPUT ARGUMENTS--IBOPPA (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              PATTERN FOR BOX I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--92/8
C     ORIGINAL VERSION--AUGUST    1992.
C     UPDATED         --AUGUST    1995.  DASH2 BUG
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IHARG2
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFPA
      CHARACTER*4 IBOPPA
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IHARG2(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION IBOPPA(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'FILL'.AND.
     1   IHARG(2).EQ.'LINE')THEN
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          IHOLD=IDEFPA
        ELSEIF(IHARG(3).EQ.'ON' .OR. IHARG(3).EQ.'SOLI')THEN
          IHOLD='SOLI'
        ELSEIF(IHARG(3).EQ.'EMPT' .OR. IHARG(3).EQ.'OFF' .OR.
     1         IHARG(3).EQ.'BLAN' .OR. IHARG(3).EQ.'NONE' .OR.
     1         IHARG(3).EQ.'HOLL')THEN
          IHOLD='BLAN'
        ELSE
          IHOLD=IHARG(3)
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(3).EQ.'2')IHOLD='DA2'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(3).EQ.'3')IHOLD='DA3'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(3).EQ.'4')IHOLD='DA4'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(3).EQ.'5')IHOLD='DA5'
          IF(IHOLD.EQ.'DOTT')IHOLD='DOTT'
        ENDIF
C
        IFOUND='YES'
        DO1135I=1,MAXBOX
          IBOPPA(I)=IHOLD
 1135   CONTINUE
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,1136)IBOPPA(I)
 1136     FORMAT('ALL BOX FILL LINES HAVE JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
      ELSEIF(NUMARG.GE.3.AND.IHARG(2).EQ.'FILL'.AND.
     1       IHARG(3).EQ.'LINE')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** ERROR IN BOX FILL LINE PATTERN (DPBOFL)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('      IN THE BOX ... FILL LINE COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
 1143     FORMAT('      THE BOX IS IDENTIFIED BY A NUMBER, AS IN--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1144)
 1144     FORMAT('      BOX 3 FILL LINE ON')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
 1153     FORMAT('      THE NUMBER OF BOXES MUST BE ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXBOX
 1154     FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
 1155     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
 1156     FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1           'BOX.')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        IF(NUMARG.LE.3 .OR. IHARG(4).EQ.'AUTO' .OR.
     1     IHARG(4).EQ.'DEFA')THEN
          IHOLD=IDEFPA
        ELSEIF(IHARG(4).EQ.'ON' .OR. IHARG(4).EQ.'SOLI')THEN
          IHOLD='SOLI'
        ELSEIF(IHARG(4).EQ.'OFF' .OR. IHARG(4).EQ.'EMPT' .OR.
     1         IHARG(4).EQ.'BLAN' .OR. IHARG(4).EQ.'NONE' .OR.
     1         IHARG(4).EQ.'HOLL')THEN
          IHOLD='BLAN'
        ELSE
          IHOLD=IHARG(4)
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(4).EQ.'2')IHOLD='DA2'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(4).EQ.'3')IHOLD='DA3'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(4).EQ.'4')IHOLD='DA4'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(4).EQ.'5')IHOLD='DA5'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(4).EQ.'5')IHOLD='DOTT'
          IF(IHOLD.EQ.'DOTT')IHOLD='DOTT'
        ENDIF
C
        IFOUND='YES'
        IBOPPA(I)=IHOLD
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1186)I,IBOPPA(I)
 1186     FORMAT('THE FILL LINE FOR BOX ',I8,
     1           ' HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
      ENDIF
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBOPA(IHARG,IHARG2,IARGT,IARG,NUMARG,IDEFPA,
     1                  MAXBOX,IBOFPA,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LINE TYPE FOR THE BORDER BOX.
C              THE PATTERN FOR BOX I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE HOLLERITH
C              VECTOR IBOFPA(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFPA
C                     --MAXBOX
C     OUTPUT ARGUMENTS--IBOFPA (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              PATTERN FOR BOX I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --MAY       1982.
C     UPDATED         --AUGUST    1992.  FORMAT STATEMENTS
C     UPDATED         --AUGUST    1995.  DASH2 BUG
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      CHARACTER*4 IHARG2
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFPA
      CHARACTER*4 IBOFPA
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IHARG2(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION IBOFPA(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'PATT')THEN
        IF(NUMARG.LE.1 .OR. IHARG(2).EQ.'ON' .OR.
     1     IHARG(2).EQ.'OFF' .OR. IHARG(2).EQ.'AUTO' .OR.
     1     IHARG(2).EQ.'DEFA')THEN
          IHOLD=IDEFPA
        ELSE
          IHOLD=IHARG(2)
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(2).EQ.'2')IHOLD='DA2'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(2).EQ.'3')IHOLD='DA3'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(2).EQ.'4')IHOLD='DA4'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(2).EQ.'5')IHOLD='DA5'
          IF(IHOLD.EQ.'DOTT')IHOLD='DOTT'
        ENDIF
C
        IFOUND='YES'
        DO1135I=1,MAXBOX
          IBOFPA(I)=IHOLD
 1135   CONTINUE
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,1136)IBOFPA(I)
          CALL DPWRST('XXX','BUG ')
 1136     FORMAT('ALL BOX BORDER PATTERNS HAVE JUST BEEN SET TO ',A4)
          GOTO1199
        ENDIF
      ELSEIF(NUMARG.GE.2.AND.IHARG(2).EQ.'PATT')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** ERROR IN BOX PATTERN (DPBOPA)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('      IN THE BOX ... PATTERN COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
 1143     FORMAT('      THE BOX IS IDENTIFIED BY A NUMBER, AS IN--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1144)
 1144     FORMAT('      BOX 3 PATTERN SOLID')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
 1153     FORMAT('      THE NUMBER OF BOXES MUST BE ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXBOX
 1154     FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
 1155     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
 1156     FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1           'BOX.')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'ON' .OR.
     1     IHARG(3).EQ.'OFF' .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          IHOLD=IDEFPA
        ELSE
          IHOLD=IHARG(3)
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(3).EQ.'2')IHOLD='DA2'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(3).EQ.'3')IHOLD='DA3'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(3).EQ.'4')IHOLD='DA4'
          IF(IHOLD.EQ.'DASH'.AND.IHARG2(3).EQ.'5')IHOLD='DA5'
          IF(IHOLD.EQ.'DOTT')IHOLD='DOTT'
        ENDIF
C
        IFOUND='YES'
        IBOFPA(I)=IHOLD
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1186)I,IBOFPA(I)
          CALL DPWRST('XXX','BUG ')
 1186     FORMAT('THE BORDER PATTERN FOR BOX ',I8,
     1           ' HAS JUST BEEN SET TO ',A4)
          GOTO1199
        ENDIF
      ENDIF
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBOSS(IHARG,IARGT,IARG,NUMARG,
     1IBOOSS,IDEBOO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BOOTSTRAP SAMPLE SIZE
C              THE SPECIFIED BOOTSTRAP SAMPLE SIZE WILL BE PLACED
C              IN THE INTEGER VARIABLE    IBOOSS
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --IARG    (AN INTEGER VECTOR)
C                     --NUMARG (AN INTEGER VARIABLE)
C     OUTPUT ARGUMENTS--IBOOSS (AN INTEGER VARIABLE)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/2
C     ORIGINAL VERSION--JANUARY   1989.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'=')GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'SAMP')GOTO1110
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'SIZE')GOTO1110
      GOTO1199
C
 1110 CONTINUE
      IF(IHARG(NUMARG).EQ.'SAMP')GOTO1150
      IF(IHARG(NUMARG).EQ.'SIZE')GOTO1150
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1160
      GOTO1120
C
 1120 CONTINUE
      IERROR='YES'
      WRITE(ICOUT,1121)
 1121 FORMAT('***** ERROR IN DPBOSS--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1122)
 1122 FORMAT('      ILLEGAL FORM FOR BOOTSTRAP SAMPLE SIZE ',
     1'COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1124)
 1124 FORMAT('      EXAMPLES OF ALLOWABLE FORMS--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1131)
 1131 FORMAT('          BOOTSTRAP SAMPLE SIZE 200')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1132)
 1132 FORMAT('          BOOTSTRAP SIZE 50')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1133)IDEBOO
 1133 FORMAT('      THE DEFAULT BOOTSTRAP SAMPLE SIZE ',
     1'IS ',I8)
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1150 CONTINUE
      IHOLD=IDEBOO
      GOTO1180
C
 1160 CONTINUE
      IHOLD=IARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      IBOOSS=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBOOSS
 1181 FORMAT('THE BOOTSTRAP SAMPLE SIZE HAS JUST BEEN SET TO ',
     1I8)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBOTH(IHARG,IARGT,IARG,ARG,NUMARG,PDEFTH,
     1                  MAXBOX,PBOFTH,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE THICKNESS FOR A BOX.
C              THE THICKNESS FOR A BOX IS THE THICKNESS
C              OF THE BORDER REGION OF THE BOX.
C              THE THICKNESS FOR BOX I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE REAL
C              VECTOR PBOFTH(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --ARG    (A REAL VECTOR)
C                     --NUMARG
C                     --PDEFTH
C                     --MAXBOX
C     OUTPUT ARGUMENTS--PBOFTH (A REAL VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              THICKNESS FOR BOX I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --MAY       1982.
C     UPDATED         --AUGUST    1992.  FORMAT STATEMENTS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      REAL        PDEFTH
      REAL        PBOFTH
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      REAL        PHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
      DIMENSION PBOFTH(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'THIC')THEN
        IF(NUMARG.LE.1 .OR. IHARG(2).EQ.'ON' .OR.
     1     IHARG(2).EQ.'OFF' .OR. IHARG(2).EQ.'AUTO' .OR.
     1     IHARG(2).EQ.'DEFA')THEN
          PHOLD=PDEFTH
        ELSE
          PHOLD=ARG(2)
        ENDIF
C
        IFOUND='YES'
        DO1135I=1,MAXBOX
          PBOFTH(I)=PHOLD
 1135   CONTINUE
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,1136)PBOFTH(I)
          CALL DPWRST('XXX','BUG ')
 1136     FORMAT('ALL BOX BORDER THICKNESSS HAVE JUST BEEN SET TO ',
     1           E15.7)
          GOTO1199
        ENDIF
      ELSEIF(NUMARG.GE.2.AND.IHARG(2).EQ.'THIC')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** ERROR IN BOX THICKNESS (DPBOTH)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('      IN THE BOX ... THICKNESS COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
 1143     FORMAT('      THE BOX IS IDENTIFIED BY A NUMBER, AS IN--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1144)
 1144     FORMAT('      BOX 3 THICKNESS 0.3')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXBOX)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1152)
 1152     FORMAT('      IN THE BOX ... THICKNESS COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
 1153     FORMAT('      THE NUMBER OF BOXES MUST BE ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXBOX
 1154     FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
 1155     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
 1156     FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1           'BOX.')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'ON' .OR.
     1     IHARG(3).EQ.'OFF' .OR.  IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          PHOLD=PDEFTH
        ELSE
          PHOLD=ARG(3)
        ENDIF
C
        IFOUND='YES'
        PBOFTH(I)=PHOLD
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1186)I,PBOFTH(I)
          CALL DPWRST('XXX','BUG ')
 1186     FORMAT('THE BORDER THICKNESS FOR BOX ',I8,
     1           ' HAS JUST BEEN SET TO ',E15.7)
          GOTO1199
        ENDIF
      ENDIF
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBOX(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                 ICONT,IFENCE,
     1                 IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE ONE OF THE FOLLOWING 2 BOX PLOTS--
C              1) MEDIAN;
C              2) MEAN;
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     REFERENCE--WALKER, DOVOEDO, CHAKRABORTI, AND HILTON (2019),
C                "AN IMPROVED BOXPLOT FOR UNIVARIATE DATA",
C                AMERICAN STATISTICIAN, VOL. 72, NO. 4, PP. 348-353.
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--JANUARY   1981.
C     UPDATED         --AUGUST    1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     2002. SUPPORT FOR FIXED WIDTH BOX PLOT
C     UPDATED         --JUNE      2010. USE DPPARS AND DPPAR3 TO PERFORM
C                                       THE COMMAND PARSING
C     UPDATED         --JUNE      2010. SUPPORT FOR "MULTIPLE" CASE
C     UPDATED         --JUNE      2010. SUPPORT FOR TWO GROUP-ID VARIABLES
C     UPDATED         --JUNE      2016. DON'T STACK FOR MULTIPLE CASE IF
C                                       4 OR FEWER VARIABLES
C     UPDATED         --JUNE      2016. HANDLE DEGENERATE CASE (I.E.,
C                                       WHERE SD IS 0 (N = 1 OR WHEN
C                                       ALL VALUES ARE EQUAL))
C     UPDATED         --JUNE      2016. OPTION TO DRAW LINE AT 1, 5, 10,
C                                       90, 95, 99 PERCENTILE VALUES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 ICONT
      CHARACTER*4 IFENCE
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
      CHARACTER*4 IFOUN1
      CHARACTER*4 IFOUN2
      CHARACTER*4 IWRITE
C
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION X1(MAXOBV)
      DIMENSION X2(MAXOBV)
      DIMENSION X3(MAXOBV)
      DIMENSION X4(MAXOBV)
      DIMENSION X5(MAXOBV)
      DIMENSION X6(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XTEMP3(MAXOBV)
      DIMENSION XTEMP4(MAXOBV)
      DIMENSION XTEMP5(MAXOBV)
      DIMENSION XTEMP6(MAXOBV)
      DIMENSION XTEMP0(MAXOBV)
C
      DIMENSION XIDTEM(MAXOBV)
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),X1(1))
      EQUIVALENCE (GARBAG(IGARB3),X2(1))
      EQUIVALENCE (GARBAG(IGARB4),X3(1))
      EQUIVALENCE (GARBAG(IGARB5),X4(1))
      EQUIVALENCE (GARBAG(IGARB6),X5(1))
      EQUIVALENCE (GARBAG(IGARB7),X6(1))
      EQUIVALENCE (GARBAG(IGARB8),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB9),XTEMP1(1))
      EQUIVALENCE (GARBAG(IGAR10),XTEMP2(1))
      EQUIVALENCE (GARBAG(JGAR11),XTEMP3(1))
      EQUIVALENCE (GARBAG(JGAR12),XTEMP4(1))
      EQUIVALENCE (GARBAG(JGAR13),XTEMP5(1))
      EQUIVALENCE (GARBAG(JGAR14),XTEMP6(1))
      EQUIVALENCE (GARBAG(JGAR15),XTEMP0(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBO'
      ISUBN2='X   '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *******************************
C               **  TREAT THE BOX PLOT CASE  **
C               *******************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PBOX')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBOX--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2,IFENCE
   52   FORMAT('ICASPL,IAND1,IAND2,IFENCE = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICONT,IBUGG2,IBUGG3,IBUGQ
   53   FORMAT('ICONT,IBUGG2,IBUGG3,IBUGQ = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ******************************************************
C               **  STEP 1--                                        **
C               **  EXTRACT THE COMMAND                             **
C               **  LOOK FOR ONE OF THE FOLLOWING COMMANDS:         **
C               **    1) BOX PLOT Y X1 ... X2                       **
C               **    2) MULTIPLE BOX PLOT Y1 ... YK                **
C               **    3) REPLICATED BOX PLOT Y X1 X2                **
C               **  THE "REPLICATION" CASE IS ACTUALLY THE DEFAULT  **
C               **  AND THE KEYWORD "REPLICATION" IS OPTIONAL.      **
C               **  HOWEVER, SUPPORT IT FOR COMPATABILITY WITH      **
C               **  OTHER COMMANDS.                                 **
C               ******************************************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PBOX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICOM.EQ.'BOX')GOTO89
      IF(ICOM.EQ.'MULT')GOTO89
      IF(ICOM.EQ.'REPL')GOTO89
      IF(ICOM.EQ.'MEAN')GOTO89
      IF(ICOM.EQ.'MEDI')GOTO89
      GOTO9000
C
   89 CONTINUE
      ICASPL='MDBP'
      IMULT='OFF'
      IREPL='OFF'
      ILASTC=-9999
C
      IF(ICOM.EQ.'BOX' .AND. IHARG(1).NE.'COX')THEN
        IFOUN1='YES'
      ELSEIF(ICOM.EQ.'MULT')THEN
        IMULT='ON'
      ELSEIF(ICOM.EQ.'REPL')THEN
        IREPL='ON'
      ENDIF
C
      ISTOP=NUMARG-1
      DO90I=1,NUMARG
        IF(IHARG(I).EQ.'PLOT')THEN
          ISTOP=I
          IFOUN2='YES'
          GOTO99
        ENDIF
   90 CONTINUE
   99 CONTINUE
C
      IFOUND='NO'
      DO100I=1,ISTOP
        IF(IHARG(I).EQ.'=')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(IHARG(I).EQ.'BOX' .AND. IHARG(I+1).NE.'COX')THEN
          IFOUN1='YES'
          ILASTC=MAX(ILASTC,I)
        ELSEIF(IHARG(I).EQ.'PLOT')THEN
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
        ELSEIF(IHARG(I).EQ.'MEDI')THEN
          ICASPL='MDBP'
        ELSEIF(IHARG(I).EQ.'MEAN')THEN
          ICASPL='MEBP'
        ELSEIF(IHARG(I).EQ.'REPL')THEN
          IREPL='ON'
        ELSEIF(IHARG(I).EQ.'MULT')THEN
          IMULT='ON'
        ELSEIF(IHARG(I).EQ.'COX')THEN
          IFOUND='NO'
          GOTO9000
        ENDIF
  100 CONTINUE
C
      IF(IFOUN1.EQ.'YES' .AND. IFOUN2.EQ.'YES')IFOUND='YES'
      IF(IFOUND.EQ.'NO')GOTO9000
C
      IF(IMULT.EQ.'ON')THEN
        IF(IREPL.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN BOX PLOT--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,107)
  107     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"REPLICATION" FOR THIS PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      IF(ILASTC.GE.1)THEN
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        ILASTC=0
      ENDIF
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PBOX')THEN
        WRITE(ICOUT,112)ICASPL,IMULT,IREPL
  112   FORMAT('ICASPL,IMULT,IREPL = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PBOX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BOX PLOT'
      MINNA=1
      MAXNA=100
      MINN2=1
      IFLAGE=1
      IF(IMULT.EQ.'ON')THEN
        IFLAGE=0
      ELSE
        IREPL='ON'
      ENDIF
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=2
C
C     NOTE: NEED TO KEEP "BOX PLOT Y" AS VALID SYNTAX, SO
C           MINIMUM NUMBER OF VARIABLES IS 1 EVEN FOR REPLICATION
C           CASE.
C
      IF(IREPL.EQ.'ON')THEN
CCCCC   MINNVA=MINNVA+1
        MAXNVA=7
      ELSEIF(IMULT.EQ.'ON')THEN
        MAXNVA=30
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PBOX')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),IVARTY(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),IVARTY(I) = ',I8,2X,A4,A4,2X,3I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      NRESP=1
C
      NREPL=0
      IF(IMULT.EQ.'ON')THEN
        NRESP=NUMVAR
      ELSE
        NREPL=NUMVAR-NRESP
        IF(NREPL.LT.0 .OR. NREPL.GT.6)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,511)
  511     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,512)
  512     FORMAT('      MUST BE BETWEEN 0 AND 6;  SUCH WAS NOT THE ',
     1           'CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,513)NREPL
  513     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PBOX')THEN
        ISTEPN='6'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,601)NRESP,NREPL
  601   FORMAT('NRESP,NREPL = ',2I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **************************************************
C               **  STEP 7A--                                   **
C               **  CASE 1: NO "MULTIPLE" CASE--CAN HAVE EITHER **
C               **          1, 2, OR 3 VARIABLES.  THE FIRST    **
C               **          VARIABLE IS A RESPONSE VARIABLE     **
C               **          AND THE SECOND AND THIRD VARIABLES  **
C               **          ARE REPLICATION VARIABLES (IF       **
C               **          PRESENT).  NOTE THAT THIS VERSION   **
C               **          DOES NOT ACCEPT MATRIX ARGUMENTS    **
C               **          EVEN IF ONLY A SINGLE ARGUMENT IS   **
C               **          GIVEN (YOU CAN USE THE MULTIPLE     **
C               **          OPTION IN THAT CASE).               **
C               **************************************************
C
      IF(IMULT.EQ.'OFF')THEN
        ISTEPN='7A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PBOX')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        CALL DPPAR5(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1,X1,X2,X3,X4,X5,X6,NLOCAL,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
C       IF THERE ARE TWO OR MORE REPLICATION VARIABLES, COMBINE
C       THEM TO CREATE A SINGLE REPLICATION VARIABLE.
C
        IF(NUMVAR.EQ.3)THEN
          CALL CODCT2(X1,X2,NLOCAL,ICCTOF,ICCTG1,IWRITE,
     1                XTEMP0,XTEMP1,XTEMP2,
     1                IBUGG3,ISUBRO,IERROR)
          DO7011I=1,NLOCAL
            X1(I)=XTEMP0(I)
 7011     CONTINUE
          NUMVAR=2
        ELSEIF(NUMVAR.EQ.4)THEN
          CALL CODCT3(X1,X2,X3,NLOCAL,ICCTOF,ICCTG1,ICCTG2,IWRITE,
     1                XTEMP0,XTEMP1,XTEMP2,XTEMP3,
     1                IBUGG3,ISUBRO,IERROR)
          DO7012I=1,NLOCAL
            X1(I)=XTEMP0(I)
 7012     CONTINUE
          NUMVAR=2
        ELSEIF(NUMVAR.EQ.5)THEN
          CALL CODCT4(X1,X2,X3,X4,NLOCAL,
     1                ICCTOF,ICCTG1,ICCTG2,ICCTG3,IWRITE,
     1                XTEMP0,XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1                IBUGG3,ISUBRO,IERROR)
          DO7013I=1,NLOCAL
            X1(I)=XTEMP0(I)
 7013     CONTINUE
          NUMVAR=2
        ELSEIF(NUMVAR.EQ.6)THEN
          CALL CODCT5(X1,X2,X3,X4,X5,NLOCAL,
     1                ICCTOF,ICCTG1,ICCTG2,ICCTG3,ICCTG4,IWRITE,
     1                XTEMP0,XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                IBUGG3,ISUBRO,IERROR)
          DO7014I=1,NLOCAL
            X1(I)=XTEMP0(I)
 7014     CONTINUE
          NUMVAR=2
        ELSEIF(NUMVAR.EQ.7)THEN
          CALL CODCT6(X1,X2,X3,X4,X5,X6,NLOCAL,
     1                ICCTOF,ICCTG1,ICCTG2,ICCTG3,ICCTG4,ICCTG5,IWRITE,
     1                XTEMP0,XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,XTEMP6,
     1                IBUGG3,ISUBRO,IERROR)
          DO7015I=1,NLOCAL
            X1(I)=XTEMP0(I)
 7015     CONTINUE
          NUMVAR=2
        ENDIF
C
C               *********************************************************
C               **  STEP 7B--                                         **
C               **  COMPUTE THE APPROPRIATE BOX PLOT      STATISTIC-- **
C               **  (MEDIAN OR MEDAN ).                               **
C               **  COMPUTE CONFIDENCE LINES.                         **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS             **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.                **
C               **  DEFINE THE VECTOR D(.) TO 1'S, 2'S, AND 3'S       **
C               **  FOR THE PLOTTED VALUE, THE LOWER CONFIDENCE LINE, **
C               **  AND THE UPPER CONFIDENCE LINE.                    **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).     **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).     **
C               *********************************************************
C
        CALL DPBOX2(Y1,X1,X2,X3,NLOCAL,NLOCAL,NLOCAL,NLOCAL,NUMVAR,
     1              ICASPL,ISIZE,ICONT,MAXOBV,
     1              IFENCE,IBXPWI,IBXPDI,IMULT,IBXPSK,
     1              XIDTEM,XTEMP1,XTEMP2,
     1              Y,X,D,NPLOTP,NPLOTV,
     1              IBUGG3,ISUBRO,IERROR)
C
C               ***********************************************
C               **  STEP 8A--                                **
C               **  CASE 2: MULTIPLE RESPONSE VARIABLES.     **
C               **          THESE CAN BE EITHER VARIABLE OR  **
C               **          MATRIX ARGUMENTS.                **
C               ***********************************************
C
      ELSEIF(IMULT.EQ.'ON')THEN
        ISTEPN='8A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PBOX')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       2016/06: IF THERE ARE 4 OR FEWER RESPONSE VARIABLES, THEN
C                DON'T STACK. 
        ICOL=1
        NUMVA2=NUMVAR
        IF(NUMVA2.GT.4)THEN
          CALL DPPAR8(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                XTEMP1,Y1,X1,NLOCAL,ICASE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
          NUMVAR=2
          IMULT='OFF'
        ELSE
          CALL DPPAR7(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,X1,X2,X3,NLOCAL,NLOCA2,NLOCA3,NLOCA4,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
          NUMVAR=NUMVA2
        ENDIF
        IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************************
C               **  STEP 8B--                                      **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C               *****************************************************
C
        CALL DPBOX2(Y1,X1,X2,X3,NLOCAL,NLOCA2,NLOCA3,NLOCA4,NUMVAR,
     1              ICASPL,ISIZE,ICONT,MAXOBV,
     1              IFENCE,IBXPWI,IBXPDI,IMULT,IBXPSK,
     1              XIDTEM,XTEMP1,XTEMP2,
     1              Y,X,D,NPLOTP,NPLOTV,
     1              IBUGG3,ISUBRO,IERROR)
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PBOX')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBOX--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IFENCE,ISIZE
 9014   FORMAT('IFENCE,ISIZE = ',A4,I8)
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GT.0)THEN
          DO9015I=1,NPLOTP
            WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9015     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBOX2(Y,X,TEMP2,TEMP3,N,N2Z,N3,N4,NUMV2,
     1                  ICASPL,ISIZE,ICONT,MAXNXT,
     1                  IFENCE,IBXPWI,IBXPDI,IMULT,IBXPSK,
     1                  XIDTEM,TEMP,TEMP4,
     1                  Y2,X2,D2,N2,NPLOTV,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE A BOX PLOT
C              OF THE FOLLOWING TYPES--
C                 1) (MEDIAN) BOX PLOT;
C                 2) MEAN BOX PLOT;
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--JUNE      1978.
C     UPDATED         --OCTOBER   1978.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --MARCH     1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --JANUARY   1989. BUG--MULTI-BOX PLOTS W/FENCES (ALAN)
C     UPDATED         --MARCH     2002. SUPPORT FIXED WIDTH BOX PLOTS
C     UPDATED         --JUNE      2016. FOR MULTIPLE CASE, DO NOT STACK
C                                       FOR 4 OR FEWER VARIABLES
C     UPDATED         --JUNE      2016. HANDLE DEGENERATE CASE (I.E.,
C                                       WHERE SD IS 0 (N = 1 OR WHEN
C                                       ALL VALUES ARE EQUAL))
C     UPDATED         --JUNE      2016. OPTION TO DRAW LINE AT 1, 5, 10,
C                                       90, 95, 99 PERCENTILE VALUES
C     UPDATED         --AUGUST    2019. OPTION FOR FENCES FOR SKEWED
C                                       BOX PLOT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICONT
      CHARACTER*4 IFENCE
      CHARACTER*4 IBXPWI
      CHARACTER*4 IBXPDI
      CHARACTER*4 IMULT
      CHARACTER*4 IBXPSK
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISTACK
      CHARACTER*4 IWRITE
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
      DIMENSION XIDTEM(*)
      DIMENSION TEMP(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION TEMP4(*)
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BOX2')THEN
        WRITE(ICOUT,70)
   70   FORMAT('AT THE BEGINNING OF DPBOX2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)N,N2Z,N3,N4,NUMV2,ISIZE
   71   FORMAT('N,N2Z,N3,N4,NUMV2,ISIZE, = ',6I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,IFENCE,IBXPWI,IBXPDI,IBXPSKI,ICONT
   72   FORMAT('ICASPL,IFENCE,IBXPWI,IBXPDI,IBXPSK,ICONT=',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        DO75I=1,N
          WRITE(ICOUT,76)I,Y(I),X(I),TEMP2(I),TEMP3(I)
   76     FORMAT('I,Y(I),X(I),TEMP2(I),TEMP3(I) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
      ENDIF
C
      ISUBN1='DPBO'
      ISUBN2='X2  '
      ISTACK='ON'
      IF(IMULT.EQ.'ON' .AND. NUMV2.LE.4)ISTACK='OFF'
      IWRITE='OFF'
C
      I2=0
      ISIZE2=0
C
      AN=0.0
      SIZE=0.0
      SIZE2=0.0
      XWIDTH=0.0
      XWIDT2=0.0
      YBARI=0.0
      SDI=0.0
      YMED=0.0
C
      H=0.0
      STEP=0.0
      STEPL=0.0
      AINNFU=0.0
      AOUTFU=0.0
      IREV=0
      AINNFL=0.0
      AOUTFL=0.0
C
C  BUG FIX: AUGUST, 1987
C           IF FENCES ON AND MORE THAN ONE SET OF BOX PLOTS DONE,
C           CAN GET GARBAGE.  NEED TO INITIALIZE X2, Y2, D2
C
      DO 10 I=1,MAXOBV
        X2(I)=0.0
        Y2(I)=0.0
        D2(I)=0.0
 10   CONTINUE
C  END FIX
C
C     CHECK THE INPUT ARGUMENTS FOR ERRORS
C
C     2016/06: TREAT CASE WITH EITHER SINGLE OBSERVATION OR SINGLE
C              UNIQUE OBSERVATION AS SPECIAL DEGENERATE CASE.
C
C              FOR NOW, JUST SUPPRESS THIS CHECK.  CHECK FOR DEGENERATE
C              CASE FOR EACH DISTINCT GROUP.
C
      IF(N.LT.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,41)
   41   FORMAT('***** ERROR IN BOX PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,47)
   47   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST ONE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,49)N
   49   FORMAT('      THE NUMBER OF OBSERVATIONS = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
CCCCC HOLD=Y(1)
CCCCC DO60I=1,N
CCCCC   IF(Y(I).NE.HOLD)GOTO69
CCC60 CONTINUE
CCCCC WRITE(ICOUT,999)
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,61)
CCC61 FORMAT('***** WARNING IN BOX PLOT--')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,62)
CCC62 FORMAT('      ALL RESPONSE VARIABLE ELEMENTS ARE IDENTICALLY')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,63)HOLD
CCC63 FORMAT('      EQUAL TO ',G15.7)
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,999)
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC IERROR='YES'
CCCCC GOTO9000
C
C               ******************************************************
C               **  STEP 1--                                        **
C               **  DETERMINE THE NUMBER OF DISTINCT VALUES         **
C               **  FOR VARIABLE 2 (THE GROUP VARIABLE).            **
C               **  IF ALL VALUES ARE DISTINCT, THEN THIS           **
C               **  IMPLIES WE HAVE THE NO REPLICATION CASE         **
C               **  WHICH IS AN ERROR CONDITION FOR A BOX PLOT.     **
C               ******************************************************
C
      ISTEPN='1'
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BOX2')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMV2.EQ.1)THEN
        DO120I=1,N
          X(I)=1.0
  120   CONTINUE
        NUMSET=1
        XIDTEM(1)=X(1)
C
      ELSEIF(NUMV2.EQ.2 .AND. ISTACK.EQ.'ON')THEN
        NUMSET=0
        DO160I=1,N
          IF(NUMSET.EQ.0)GOTO165
          DO170J=1,NUMSET
            IF(X(I).EQ.XIDTEM(J))GOTO160
  170     CONTINUE
  165     CONTINUE
          NUMSET=NUMSET+1
          XIDTEM(NUMSET)=X(I)
  160   CONTINUE
        CALL SORT(XIDTEM,NUMSET,XIDTEM)
C
        XID1=XIDTEM(1)
        XID2=XIDTEM(NUMSET)
C
      ELSE
        IF(NUMV2.EQ.2)THEN
          XIDTEM(1)=1.0
          XIDTEM(2)=2.0
          NUMSET=2
        ELSEIF(NUMV2.EQ.3)THEN
          XIDTEM(1)=1.0
          XIDTEM(2)=2.0
          XIDTEM(3)=3.0
          NUMSET=3
        ELSEIF(NUMV2.EQ.4)THEN
          XIDTEM(1)=1.0
          XIDTEM(2)=2.0
          XIDTEM(3)=3.0
          XIDTEM(4)=4.0
          NUMSET=4
        ENDIF
        XID1=XIDTEM(1)
        XID2=XIDTEM(NUMSET)
      ENDIF
C
      IF(NUMSET.EQ.0)THEN
        WRITE(ICOUT,41)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,191)
  191   FORMAT('      NUMSET = 0')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSEIF(NUMSET.EQ.N)THEN
C
C       2016/06: THIS IS DEGENERATE CASE.  HOWEVER, WE NOW ALLOW EACH
C                GROUP TO CONTAIN A SINGLE VALUE.
C
CCCCC   WRITE(ICOUT,41)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,192)
CC192   FORMAT('      THE NUMBER OF GROUPS EQUALS THE NUMBER OF ',
CCCCC1         'OBSERVATIONS.')
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   IERROR='YES'
CCCCC   GOTO9000
      ENDIF
C
C               **********************************
C               **  STEP 2--                    **
C               **  IF NECESSARY,               **
C               **  COMPUTE AVERAGE CLASS SIZE  **
C               **********************************
C
      ISTEPN='2'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BOX2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ISTACK.EQ.'ON')THEN
        AN=N
        ANUMSE=NUMSET
C
        SIZE=ISIZE
        SIZE2=SIZE
        SIZE2=AN/ANUMSE
        ISIZE2=INT(SIZE2+0.5)
      ELSE
        AN=REAL(N)
        IF(NUMSET.EQ.2)AN=REAL(N+N2Z)
        IF(NUMSET.EQ.3)AN=REAL(N+N2Z+N3)
        IF(NUMSET.EQ.4)AN=REAL(N+N2Z+N3+N4)
        ANUMSE=NUMSET
      ENDIF
C
C               ***********************************
C               **  STEP 3--                     **
C               **  COMPUTE MINIMUM CLASS WIDTH  **
C               ***********************************
C
      ISTEPN='3'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BOX2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMSET.EQ.1)THEN
        XWIDTH=0.10*XIDTEM(1)
      ELSE
        XWIDTH=CPUMAX
        IMAX=NUMSET-1
        DO300I=1,IMAX
          IP1=I+1
          XWIDT2=XIDTEM(IP1)-XIDTEM(I)
          IF(XWIDT2.LT.XWIDTH)XWIDTH=XWIDT2
  300   CONTINUE
      ENDIF
C
C               **************************************
C               **  STEP 4--                        **
C               **  COMPUTE MAXIMUM SUBSAMPLE SIZE  **
C               **************************************
C
      ISTEPN='4'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BOX2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ISTACK.EQ.'ON')THEN
        NIMAX=0
        DO400ISET=1,NUMSET
C
          K=0
          DO420I=1,N
            IF(X(I).EQ.XIDTEM(ISET))K=K+1
            IF(X(I).EQ.XIDTEM(ISET))TEMP(K)=Y(I)
  420     CONTINUE
          NI=K
          IF(NI.GT.NIMAX)NIMAX=NI
C
  400   CONTINUE
        ANIMAX=NIMAX
      ELSE
        NIMAX=N
        IF(NUMSET.GE.2)NIMAX=MAX(NIMAX,N2Z)
        IF(NUMSET.GE.3)NIMAX=MAX(NIMAX,N3)
        IF(NUMSET.GE.4)NIMAX=MAX(NIMAX,N4)
        ANIMAX=NIMAX
      ENDIF
C
C               **************************************************************
C               **  STEP 5--                                                **
C               **  IN ORDER TO DETERMINE THE PROPER PLOT COOORDINATES      **
C               **  FOR THE DESIRED PLOT,                                   **
C               **  FIRST BRANCH TO THE PROPER SUBCASE--                    **
C               **         1) (MEDIAN) BOX PLOT;                            **
C               **         2) MEAN BOX PLOT;                                **
C               **************************************************************
C
      ISTEPN='5'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BOX2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASPL.EQ.'MDBP')GOTO1100
      IF(ICASPL.EQ.'MEBP')GOTO1100
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,261)
  261 FORMAT('***** INTERNAL ERROR IN DPBOX2')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,262)
  262 FORMAT('      AT BRANCH POINT 261--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,263)
  263 FORMAT('      ICASPL NOT EQUAL ONE OF THE ALLOWABLE 2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,264)
  264 FORMAT('      MDBP    OR    MEBP,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,266)ICASPL
  266 FORMAT('      ICASPL = ',A4)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
C               ***************************************************
C               **  STEP 5A--                                    **
C               **  DETERMINE PLOT COORDINATES FOR 2 SUBCASES--  **
C               **      1) (MEDIAN) BOX PLOT;                    **
C               **      2) MEAN BOX PLOT;                        **
C               ***************************************************
C
 1100 CONTINUE
C
      ISTEPN='4A'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'BOX2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMCPL=11
      J=0
      JD=0
      DO1110ISET=1,NUMSET
C
        IF(ISTACK.EQ.'ON')THEN
          K=0
          DO1120I=1,N
            IF(X(I).EQ.XIDTEM(ISET))THEN
              K=K+1
              TEMP(K)=Y(I)
            ENDIF
 1120     CONTINUE
          NI=K
          ANI=NI
        ELSE
          IF(ISET.EQ.1)THEN
            K=N
            DO1131I=1,K
              TEMP(I)=Y(I)
 1131       CONTINUE
          ELSEIF(ISET.EQ.2)THEN
            K=N2Z
            DO1132I=1,K
              TEMP(I)=X(I)
 1132       CONTINUE
          ELSEIF(ISET.EQ.3)THEN
            K=N3
            DO1133I=1,K
              TEMP(I)=TEMP2(I)
 1133       CONTINUE
          ELSEIF(ISET.EQ.4)THEN
            K=N4
            DO1134I=1,K
              TEMP(I)=TEMP3(I)
 1134       CONTINUE
          ENDIF
          NI=K
          ANI=NI
        ENDIF
C
        IF(NI.LE.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** INTERNAL ERROR IN DPBOX2--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('NI FOR SOME CLASS = 0')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)ISET,XIDTEM(ISET),NI
 1143     FORMAT('ISET,XIDTEM(ISET),NI = ',I8,E15.7,I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
C       2016/06: SET IFLAGD TO 1 IF ONLY A SINGLE VALUE OR IF
C                ALL VALUES EQUAL TO SAME VALUE.
C
        CALL SORT(TEMP,NI,TEMP)
        IFLAGD=0
        IF(TEMP(1).EQ.TEMP(NI))IFLAGD=1
C
        XMID=XIDTEM(ISET)
C
C       2016/06: IF "SET BOX PLOT PERCENTILES ON" ENTERED, COMPUTE
C                THE 1, 5, 10, 90, 95, 99 PERCENTILES OF THE DATA.
C
        IF(IBXPDI.EQ.'ON')THEN
          P100=1.0
          CALL PERCEN(P100,TEMP,NI,IWRITE,TEMP4,MAXOBV,
     1                Y01,IBUGG3,IERROR)
          P100=5.0
          CALL PERCEN(P100,TEMP,NI,IWRITE,TEMP4,MAXOBV,
     1                Y05,IBUGG3,IERROR)
          P100=10.0
          CALL PERCEN(P100,TEMP,NI,IWRITE,TEMP4,MAXOBV,
     1                Y10,IBUGG3,IERROR)
          P100=90.0
          CALL PERCEN(P100,TEMP,NI,IWRITE,TEMP4,MAXOBV,
     1                Y90,IBUGG3,IERROR)
          P100=95.0
          CALL PERCEN(P100,TEMP,NI,IWRITE,TEMP4,MAXOBV,
     1                Y95,IBUGG3,IERROR)
          P100=99.0
          CALL PERCEN(P100,TEMP,NI,IWRITE,TEMP4,MAXOBV,
     1                Y99,IBUGG3,IERROR)
        ENDIF
C
C
CCCCC   MARCH 2002: SUPPORT EITHER FIXED OR VARIABLE WIDTH
CCCCC   BOX PLOTS.
        IF(IBXPWI.EQ.'FIXE')THEN
          FACTOR=1.0
        ELSE
          FACTOR=SQRT(ANI/ANIMAX)
        ENDIF
        XLEFT=XMID-(XWIDTH/4.0)*FACTOR
        XRIGHT=XMID+(XWIDTH/4.0)*FACTOR
C
C               ***************************
C               **  STEP 5.1--           **
C               **  COMPUTE THE MAXIMUM  **
C               ***************************
C
        YMAX=TEMP(NI)
C
C               ***********************************************
C               **  STEP 5.2--                               **
C               **  COMPUTE THE POINT AT THE TOP OF THE BOX  **
C               **  (THE UPPER HINGE FOR A MEDIAN BOX PLOT)  **
C               **  (XBAR + 2 STANDARD DEVIATIONS            **
C               **  FOR A MEAN BOX PLOT)                     **
C               ***********************************************
C
C               ***************************************
C               **  STEP 5.3--                       **
C               **  COMPUTE UPPER CONFIDENCE LIMITS  **
C               **  FOR THE MEAN                     **
C               ***************************************
C
        IF(IFLAGD.EQ.1)THEN
          Y75=TEMP(1)
          YUCL=Y75
        ELSEIF(ICASPL.EQ.'MDBP')THEN
          NI2=(NI+1)/2
          IARG1=(NI2+1)/2
          IARG2=(NI2+1)-IARG1
          IARG1R=NI-IARG1+1
          IARG2R=NI-IARG2+1
          Y75=(TEMP(IARG1R)+TEMP(IARG2R))/2.0
          YUCL=YBARI+2.0*SDI/SQRT(ANI)
        ELSEIF(ICASPL.EQ.'MEBP')THEN
          SUM=0.0
          DO1124I=1,NI
            SUM=SUM+TEMP(I)
 1124     CONTINUE
          YBARI=SUM/ANI
C
          SUM=0.0
          DO1126I=1,NI
            SUM=SUM+(TEMP(I)-YBARI)**2
 1126     CONTINUE
          DENOM=ANI-1.0
          VARI=0.0
          IF(NI.GE.2)VARI=SUM/DENOM
          SDI=0.0
          IF(VARI.GT.0.0)SDI=SQRT(VARI)
          Y75=YBARI+2.0*SDI
          YUCL=Y75
        ENDIF
C
C               *********************************
C               **  STEP 5.4--                 **
C               **  COMPUTE THE TYPICAL VALUE  **
C               **  (MEDIAN OR MEAN)           **
C               *********************************
C
C               ****************************************************
C               **  STEP 5.5--                                    **
C               **  COMPUTE LOWER CONFIDENCE LIMITS FOR THE MEAN  **
C               ****************************************************
C
        IF(IFLAGD.EQ.1)THEN
          Y50=TEMP(1)
          YLCL=Y50
        ELSEIF(ICASPL.EQ.'MDBP')THEN
          N50=NI/2
          N50P1=N50+1
          IEVODD=NI-2*(NI/2)
          IF(IEVODD.EQ.0)YMED=(TEMP(N50)+TEMP(N50P1))/2.0
          IF(IEVODD.EQ.1)YMED=TEMP(N50P1)
          Y50=YMED
          YLCL=Y50
        ELSEIF(ICASPL.EQ.'MEBP')THEN
          Y50=YBARI
          YLCL=YBARI-2.0*SDI/SQRT(ANI)
        ENDIF
C
C
C               ****************************************************
C               **  STEP 5.6--                                    **
C               **  COMPUTE THE POINT AT THE BOTTOM OF THE BOX    **
C               **  (THE LOWER HINGE FOR A MEDIAN BOX PLOT)       **
C               **  (XBAR - 2 STANDARD DEVIATIONS                 **
C               **  FOR A MEAN BOX PLOT)                          **
C               ****************************************************
C
        IF(IFLAGD.EQ.1)THEN
          Y25=TEMP(1)
        ELSEIF(ICASPL.EQ.'MDBP')THEN
          NI2=(NI+1)/2
          IARG1=(NI2+1)/2
          IARG2=(NI2+1)-IARG1
          Y25=(TEMP(IARG1)+TEMP(IARG2))/2.0
        ELSEIF(ICASPL.EQ.'MEBP')THEN
          Y25=YBARI-2.0*SDI
        ENDIF
C
C               ***************************
C               **  STEP 5.7--           **
C               **  COMPUTE THE MINIMUM  **
C               ***************************
C
        YMIN=TEMP(1)
C
C               *********************************************************
C               **  STEP 5.7A--                                        **
C               **  FOR THE UPPER HALF OF THE DATA--                   **
C               **  COMPUTE THE OUTER FENCE, THE INNER FENCE, AND THE  **
C               **  ADJACENT VALUE                                     **
C               *********************************************************
C
        IF(IFLAGD.EQ.1)THEN
          AINNFU=TEMP(1)
          AOUTFU=TEMP(1)
          YADJU=TEMP(1)
        ELSE
          H=Y75-Y25
          STEP=1.5*H
C
C         2019/08: SKEWED OPTION FOR FENCES
C
          AINNFU=Y75+STEP
          AOUTFU=Y75+2.0*STEP
          IF(IBXPSK.EQ.'GALT')THEN
            CALL LOWQUA(TEMP,NI,IWRITE,TEMP4,MAXNXT,RIGH1,
     1                  IBUGG3,IERROR)
            CALL UPPQUA(TEMP,NI,IWRITE,TEMP4,MAXNXT,RIGH2,
     1                  IBUGG3,IERROR)
            CALL MEDIAN(TEMP,NI,IWRITE,TEMP4,MAXNXT,RIGH3,
     1                  IBUGG3,IERROR)
            SIQU=RIGH2-RIGH3
            SIQL=RIGH3-RIGH1
            STEPU=STEP*(SIQU/SIQL)
            STEPL=STEP*(SIQL/SIQU)
            AINNFU=Y75+STEPU
            AOUTFU=Y75+2.0*STEPU
          ELSEIF(IBXPSK.EQ.'KIMB')THEN
            CALL LOWQUA(TEMP,NI,IWRITE,TEMP4,MAXNXT,RIGH1,
     1                  IBUGG3,IERROR)
            CALL UPPQUA(TEMP,NI,IWRITE,TEMP4,MAXNXT,RIGH2,
     1                  IBUGG3,IERROR)
            CALL MEDIAN(TEMP,NI,IWRITE,TEMP4,MAXNXT,RIGH3,
     1                  IBUGG3,IERROR)
            STEPL=2.0*(RIGH3-RIGH1)
            STEPU=2.0*(RIGH2-RIGH3)
            AINNFU=Y75+1.5*STEPU
            AOUTFU=Y75+3.0*STEPU
          ENDIF
C
          YADJU=Y75
          DO1155I=1,NI
            IREV=NI-I+1
            IF(TEMP(IREV).LE.AINNFU)GOTO1156
 1155     CONTINUE
          GOTO1159
 1156     CONTINUE
          YADJU=TEMP(IREV)
 1159     CONTINUE
        ENDIF
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BOX2')THEN
          WRITE(ICOUT,1157)Y75,YADJU,TEMP(IREV),IREV
 1157     FORMAT('Y75,YADJU,TEMP(IREV),IREV = ',3E15.7,I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C               *******************************************************
C               **  STEP 5.7B--                                      **
C               **  FOR THE LOWER HALF OF THE DATA--                 **
C               **  COMPUTE THE OUTER FENCE, THE INNER FENCE, AND    **
C               **  THE ADJACENT VALUE                               **
C               *******************************************************
C
        IF(IFLAGD.EQ.1)THEN
          AINNFU=TEMP(1)
          AOUTFU=TEMP(1)
          YADJL=TEMP(1)
        ELSE
          AINNFL=Y25-STEP
          AOUTFL=Y25-2.0*STEP
          IF(IBXPSK.EQ.'GALT')THEN
            AINNFL=Y25-STEPL
            AOUTFL=Y25-2.0*STEPL
          ELSEIF(IBXPSK.EQ.'GALT' .OR. IBXPSK.EQ.'KIMB')THEN
            AINNFL=Y25-1.5*STEPL
            AOUTFL=Y25-3.0*STEPL
          ENDIF
          YADJL=Y25
          DO1165I=1,NI
            I2=I
            IF(TEMP(I2).GE.AINNFL)GOTO1166
 1165     CONTINUE
          GOTO1169
 1166     CONTINUE
          YADJL=TEMP(I2)
 1169     CONTINUE
C
        ENDIF
C
C               ******************************************************
C               **  STEP 6.1--                                      **
C               **  IF IFENCE IS OFF, THEN DEFINE THE CHARACTER AT  **
C               **  THE MAXIMUM.  IF IFENCE IS ON, THEN  DEFINE THE **
C               **  CHARACTER AT THE UPPER ADJACENT VALUE.          **
C               ******************************************************
C
        IF(IFENCE.EQ.'OFF')THEN
          CALL DPCHLI(ICONT,NUMCPL,YMAX,YMAX,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
        ELSEIF(IFENCE.EQ.'ON')THEN
          CALL DPCHLI(ICONT,NUMCPL,YADJU,YADJU,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
        ENDIF
C
C               ****************************************
C               **  STEP 6.2--                        **
C               **  DEFINE THE CHARACTER AT THE TOP   **
C               **  OF THE BOX                        **
C               **  (UPPER HINGE CHARACTER, IF ANY).  **
C               ****************************************
C
        CALL DPCHLI(ICONT,NUMCPL,Y75,Y75,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               *********************************************************
C               **  STEP 6.3--                                         **
C               **  DEFINE THE CHARACTER IN THE BOX BUT TOWARDS THE    **
C               **  TOP OF THE BOX  (SUCH AS AN UPPER CONFIDENCE LIMIT **
C               **  FOR THE MEAN, IF ANY)                              **
C               *********************************************************
C
        CALL DPCHLI(ICONT,NUMCPL,YUCL,YUCL,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               ***************************************
C               **  STEP 6.4--                       **
C               **  DEFINE THE CHARACTER IN THE BOX  **
C               **  NEAR THE MIDDLE                  **
C               **  (SUCH AS THE MEDIAN OR MEAN)     **
C               ***************************************
C
        CALL DPCHLI(ICONT,NUMCPL,Y50,Y50,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               ********************************************************
C               **  STEP 6.5--                                        **
C               **  DEFINE THE CHARACTER IN THE BOX BUT TOWARDS THE   **
C               **  BOX OF THE BOX (SUCH AS A LOWER CONFIDENCE LIMIT  **
C               **  FOR THE MEAN, IF ANY)                             **
C               ********************************************************
C
        CALL DPCHLI(ICONT,NUMCPL,YLCL,YLCL,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               ******************************************
C               **  STEP 6.6--                         **
C               **  DEFINE THE CHARACTER AT THE BOTTOM  **
C               **  OF THE BOX                          **
C               **  (LOWER HINGE CHARACTER, IF ANY).    **
C               ******************************************
C
        CALL DPCHLI(ICONT,NUMCPL,Y25,Y25,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               *****************************************************
C               **  STEP 6.7--                                     **
C               **  IF IFENCE IS OFF, THEN DEFINE THE CHARACTER    **
C               **  AT THE MINIMUM.  IF IFENCE IS ON, THEN DEFINE  **
C               **  THE CHARACTER AT THE LOWER ADJACENT VALUE.     **
C               *****************************************************
C
        IF(IFENCE.EQ.'OFF')THEN
          CALL DPCHLI(ICONT,NUMCPL,YMIN,YMIN,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
        ELSEIF(IFENCE.EQ.'ON')THEN
          CALL DPCHLI(ICONT,NUMCPL,YADJL,YADJL,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
        ENDIF
C
C               ********************************************
C               **  STEP 6.8--                            **
C               **  IF IFENCE IS OFF, THEN DEFINE THE     **
C               **  VERTICAL LINE FROM  THE MAXIMUM VALUE **
C               **  TO THE TOP OF THE BOX  IF IFENCE IS   **
C               **  ON, THEN DEFINE THE VERTICAL LINE     **
C               **  FROM  THE UPPER ADJACENT VALUE TO THE **
C               **  TOP OF THE BOX                        **
C               ********************************************
C
        IF(IFENCE.EQ.'OFF')THEN
          CALL DPCHLI(ICONT,NUMCPL,YMAX,Y75,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
        ELSEIF(IFENCE.EQ.'ON')THEN
          CALL DPCHLI(ICONT,NUMCPL,YADJU,Y75,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
        ENDIF
C
C               *******************************************************
C               **  STEP 6.9--                                      **
C               **  DEFINE THE VERTICAL LINE                         **
C               **  FROM THE TOP OF THE BOX (THE UPPER HINGE POINT)  **
C               **  TO THE POINT IN THE BOX TOWARD THE TOP           **
C               **  (SUCH AS THE UPPER CONFIDENCE LIMIT POINT)       **
C               *******************************************************
C
        CALL DPCHLI(ICONT,NUMCPL,Y75,YUCL,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               **************************************************
C               **  STEP 6.10--                                 **
C               **  DEFINE THE VERTICAL LINE                    **
C               **  FROM THE POINT IN THE BOX TOWARD THE TOP    **
C               **  (SUCH AS THE UPPER CONFIDENCE LIMIT POINT)  **
C               **  TO THE POINT IN THE BOX                     **
C               **  IN THE MIDDLE                               **
C               **  (SUCH AS THE MEDIAN OR MEAN)                **
C               **************************************************
C
        CALL DPCHLI(ICONT,NUMCPL,YUCL,Y50,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               **************************************************
C               **  STEP 6.11--                                 **
C               **  DEFINE THE VERTICAL LINE                    **
C               **  FROM THE POINT IN THE BOX                   **
C               **  IN THE MIDDLE                               **
C               **  (SUCH AS THE MEDIAN OR MEAN)                **
C               **  TO THE POINT IN THE BOX TOWARD THE BOTTOM   **
C               **  (SUCH AS THE LOWER CONFIDENCE LIMIT POINT)  **
C               **************************************************
C
        CALL DPCHLI(ICONT,NUMCPL,Y50,YLCL,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               ********************************************************
C               **  STEP 6.12--                                       **
C               **  DEFINE THE VERTICAL LINE                          **
C               **  FROM THE POINT IN THE BOX TOWARD THE BOTTOM       **
C               **  (SUCH AS THE LOWER CONFIDENCE LIMIT POINT)        **
C               **  TO THE BOTTOM OF THE BOX (THE LOWER HINGE POINT)  **
C               ********************************************************
C
        CALL DPCHLI(ICONT,NUMCPL,YLCL,Y25,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               **********************************
C               **  STEP 6.13--                 **
C               **  IF IFENCE IS OFF, THEN      **
C               **  DEFINE THE VERTICAL LINE    **
C               **  FROM THE BOTTOM OF THE BOX  **
C               **  TO THE MINIMUM VALUE        **
C               **  IF IFENCE IS ON, THEN       **
C               **  DEFINE THE VERTICAL LINE    **
C               **  FROM THE BOTTOM OF THE BOX  **
C               **  TO THE LOWER ADJACENT VALUE **
C               **********************************
C
        IF(IFENCE.EQ.'OFF')THEN
          CALL DPCHLI(ICONT,NUMCPL,Y25,YMIN,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
        ELSEIF(IFENCE.EQ.'ON')THEN
          CALL DPCHLI(ICONT,NUMCPL,Y25,YADJL,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
        ENDIF
C
C               *********************************************
C               **  STEP 6.14--                            **
C               **  DEFINE THE VERTICAL LINE               **
C               **  CONSTITUTING THE LEFT SIDE OF THE BOX  **
C               **  WHICH GOES FROM THE TOP OF THE BOX     **
C               **  TO THE BOTTOM OF THE BOX               **
C               *********************************************
C
        CALL DPCHLI(ICONT,NUMCPL,Y75,Y25,XLEFT,XLEFT,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               **********************************************
C               **  STEP 6.15--                             **
C               **  DEFINE THE VERTICAL LINE                **
C               **  CONSTITUTING THE RIGHT SIDE OF THE BOX  **
C               **  WHICH GOES FROM THE TOP OF THE BOX      **
C               **  TO THE BOTTOM OF THE BOX                **
C               **********************************************
C
        CALL DPCHLI(ICONT,NUMCPL,Y75,Y25,XRIGHT,XRIGHT,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               ***********************************************
C               **  STEP 6.16--                              **
C               **  DEFINE THE HORIZONTAL LINE               **
C               **  AT THE TOP OF THE BOX                    **
C               **  (RUNNING THROUGH THE UPPER HINGE POINT)  **
C               ***********************************************
C
        CALL DPCHLI(ICONT,NUMCPL,Y75,Y75,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               ****************************************************
C               **  STEP 6.17--                                   **
C               **  DEFINE THE HORIZONTAL LINE                    **
C               **  IN THE BOX                                    **
C               **  (RUNNING THROUGH THE UPPER CONFIDENCE LIMIT)  **
C               ****************************************************
C
        CALL DPCHLI(ICONT,NUMCPL,YUCL,YUCL,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               *********************************************
C               **  STEP 6.18--                            **
C               **  DEFINE THE HORIZONTAL LINE             **
C               **  IN THE BOX                             **
C               **  (RUNNING THROUGHT THE MEDIAN OR MEAN)  **
C               *********************************************
C
        CALL DPCHLI(ICONT,NUMCPL,Y50,Y50,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               ****************************************************
C               **  STEP 6.19--                                   **
C               **  DEFINE THE HORIZONTAL LINE                    **
C               **  IN THE BOX                                    **
C               **  (RUNNING THROUGH THE LOWER CONFIDENCE LIMIT)  **
C               ****************************************************
C
        CALL DPCHLI(ICONT,NUMCPL,YLCL,YLCL,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               ***********************************************
C               **  STEP 6.20--                              **
C               **  DEFINE THE HORIZONTAL LINE               **
C               **  AT THE BOTTOM OF THE BOX                 **
C               **  (RUNNING THROUGH THE LOWER HINGE POINT)  **
C               ***********************************************
C
        CALL DPCHLI(ICONT,NUMCPL,Y25,Y25,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1              IERROR)
C
C               *********************************************************
C               **  STEP 6.20B--                                       **
C               **  IF A BOX PLOT WITH NO FENCES HAS BEEN CALLED FOR,  **
C               **  THEN SKIP PAST THE FINAL 4 SPECIFICATIONS.         **
C               *********************************************************
C
CCCCC   IF(IFENCE.EQ.'OFF')GOTO1110
        IF(IFENCE.EQ.'OFF')GOTO1259
C
C               *********************************************************
C               **  STEP 6.21--                                        **
C               **  DEFINE THE CHARACTER FOR THE UPPER FAR OUT VALUES  **
C               **  (BEYOND THE UPPER OUTER FENCE)                     **
C               *********************************************************
C
        YTEMP=Y25
        CALL DPCHLI(ICONT,NUMCPL,YTEMP,YTEMP,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
        JD=JD-1
C
        IPASS=0
        DO1215I=1,NI
          IREV=NI-I+1
          YTEMP=TEMP(IREV)
          IF(YTEMP.LE.AOUTFU)GOTO1219
          IPASS=IPASS+1
          IF(IPASS.EQ.1)J=J-1
          CALL DPCHLI(ICONT,NUMCPL,YTEMP,YTEMP,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
          JD=JD-1
 1215   CONTINUE
 1219   CONTINUE
        JD=JD+1
C
C               *********************************************************
C               **  STEP 6.22--                                        **
C               **  DEFINE THE CHARACTER FOR THE UPPER NEAR OUT VALUES **
C               **  (BETWEEN THE UPPER INNER AND OUTER FENCES)         **
C               *********************************************************
C
        YTEMP=Y25
        CALL DPCHLI(ICONT,NUMCPL,YTEMP,YTEMP,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
        JD=JD-1
C
        IPASS=0
        DO1225I=1,NI
          IREV=NI-I+1
          YTEMP=TEMP(IREV)
          IF(YTEMP.GE.AOUTFU)GOTO1225
          IF(YTEMP.LE.AINNFU)GOTO1229
          IPASS=IPASS+1
          IF(IPASS.EQ.1)J=J-1
          CALL DPCHLI(ICONT,NUMCPL,YTEMP,YTEMP,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
          JD=JD-1
 1225   CONTINUE
 1229   CONTINUE
        JD=JD+1
C
C               *********************************************************
C               **  STEP 6.23--                                        **
C               **  DEFINE THE CHARACTER FOR THE LOWER NEAR OUT VALUES **
C               **  (BETWEEN THE LOWER INNER AND OUTER FENCES)         **
C               *********************************************************
C
        YTEMP=Y25
        CALL DPCHLI(ICONT,NUMCPL,YTEMP,YTEMP,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
        JD=JD-1
C
        IPASS=0
        DO1235I=1,NI
          I2=I
          YTEMP=TEMP(I2)
          IF(YTEMP.LE.AOUTFL)GOTO1235
          IF(YTEMP.GE.AINNFL)GOTO1239
          IPASS=IPASS+1
          IF(IPASS.EQ.1)J=J-1
          CALL DPCHLI(ICONT,NUMCPL,YTEMP,YTEMP,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
          JD=JD-1
 1235   CONTINUE
 1239   CONTINUE
        JD=JD+1
C
C               *********************************************************
C               **  STEP 6.24--                                        **
C               **  DEFINE THE CHARACTER FOR THE LOWER FAR OUT VALUES  **
C               **  (BEYOND THE LOWER OUTER FENCE)                     **
C               *********************************************************
C
        YTEMP=Y25
        CALL DPCHLI(ICONT,NUMCPL,YTEMP,YTEMP,XMID,XMID,J,JD,Y2,X2,D2,
     1              IERROR)
        JD=JD-1
C
        IPASS=0
        DO1245I=1,NI
          I2=I
          YTEMP=TEMP(I2)
          IF(YTEMP.GE.AOUTFL)GOTO1249
          IPASS=IPASS+1
          IF(IPASS.EQ.1)J=J-1
          CALL DPCHLI(ICONT,NUMCPL,YTEMP,YTEMP,XMID,XMID,J,JD,Y2,X2,D2,
     1                IERROR)
          JD=JD-1
 1245   CONTINUE
 1249   CONTINUE
        JD=JD+1
C
C               ********************************************
C               **  STEP 6.25--                           **
C               **  IF SET BOX PLOT PERCENTILES ON IS     **
C               **  GIVEN, THEN DRAW LINES AT PERCENTILES **
C               ********************************************
C
 1259   CONTINUE
C
        IF(IBXPDI.EQ.'ON')THEN
          CALL DPCHLI(ICONT,NUMCPL,Y01,Y01,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1                IERROR)
          CALL DPCHLI(ICONT,NUMCPL,Y05,Y05,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1                IERROR)
          CALL DPCHLI(ICONT,NUMCPL,Y10,Y10,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1                IERROR)
          CALL DPCHLI(ICONT,NUMCPL,Y90,Y90,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1                IERROR)
          CALL DPCHLI(ICONT,NUMCPL,Y95,Y95,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1                IERROR)
          CALL DPCHLI(ICONT,NUMCPL,Y99,Y99,XLEFT,XRIGHT,J,JD,Y2,X2,D2,
     1                IERROR)
        ENDIF
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BOX2')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1251)
 1251     FORMAT('***** FROM THE MIDDLE OF DPBOX2--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1252)ANI,J,JD,XMID
 1252     FORMAT('ANI,J,JD,XMID = ',E15.7,I8,I8,E15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1253)YMAX,Y75,Y50,Y25,YMIN
 1253     FORMAT('YMAX,Y75,Y50,Y25,YMIN = ',5E15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1254)H,STEP,Y75,YADJU,AINNFU,AOUTFU
 1254     FORMAT('H,STEP,Y75,YADJU,AINNFU,AOUTFU = ',6E15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1255)H,STEP,Y25,YADJL,AINNFL,AOUTFL
 1255     FORMAT('H,STEP,Y25,YADJL,AINNFL,AOUTFL = ',6E15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
 1110 CONTINUE
C
      N2=J
      NPLOTV=3
      GOTO9000
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'BOX2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBOX2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,N,NUMSET,N2,IERROR
 9012   FORMAT('ICASPL,N,NUMSET,N2,IERROR = ',A4,3I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IFENCE
 9013   FORMAT('IFENCE = ',A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NUMV2,ISIZE,SIZE,SIZE2,ISIZE2
 9014   FORMAT('NUMV2,ISIZE,SIZE,SIZE2,ISIZE2 = ',2I8,2E15.7,I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)AN,XWIDT2,XWIDTH
 9015   FORMAT('AN,XWIDT2,XWIDTH = ',3E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9021)YMAX,Y75,Y50,Y25,YMIN
 9021   FORMAT('YMAX,Y75,Y50,Y25,YMIN = ',5E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9022)H,STEP,Y75,YADJU,AINNFU,AOUTFU
 9022   FORMAT('H,STEP,Y75,YADJU,AINNFU,AOUTFU = ',6E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9023)H,STEP,Y25,YADJL,AINNFL,AOUTFL
 9023   FORMAT('H,STEP,Y25,YADJL,AINNFL,AOUTFL = ',6E15.7)
        CALL DPWRST('XXX','BUG ')
        DO9035I=1,N2
          WRITE(ICOUT,9036)I,Y2(I),X2(I),D2(I)
 9036     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2E15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9035   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBPCO(IHARG,IARG,NUMARG,IDEBPC,ICASCL,MAXBAR,IRGBMX,
     1                  IBAPCO,IBAPC2,
     1                  IBUGP2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR PATTERN COLORS = THE COLORS
C              OF THE LINES MAKING UP A PATTERN WITHIN A BAR.
C              THESE ARE LOCATED IN THE VECTOR IBAPCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEBPC
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBAPCO (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEBPC
      CHARACTER*4 ICASCL
      CHARACTER*4 IBAPCO
      CHARACTER*4 IBUGP2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARG(*)
      DIMENSION IBAPCO(*)
      DIMENSION IBAPC2(MAXBAR,3)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPBP'
      ISUBN2='CO  '
      IHOLD1='-999'
      IHOLD2='-999'
C
      NUMBAR=0
      JHOLD1=-1
      JHOLD2=-1
      JHOLD3=-1
C
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BPCO')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBPCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGP2,ISUBRO,IFOUND,IERROR
   52   FORMAT('IBUGP2,ISUBRO,IFOUND,IERROR = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)MAXBAR,NUMBAR,NUMARG,IRGBMX
   53   FORMAT('MAXBAR,NUMBAR,NUMARG,IRGBMX = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IHOLD1,IHOLD2,IDEBBC
   54   FORMAT('IHOLD1,IHOLD2,IDEBBC = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        DO65I=1,NUMARG
          WRITE(ICOUT,66)I,IARG(I),IHARG(I)
   66     FORMAT('I,IARG(I),IHARG(I) = ',2I8,2X,A4)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
        DO75I=1,10
          WRITE(ICOUT,76)I,IBAPCO(I),
     1                   IBAPC2(I,1),IBAPC2(I,2),IBAPC2(I,3)
   76     FORMAT('I,IBAPCO(I),IBAPC2(I,1),IBAPC2(I,2),IBAPC2(I,3) = ',
     1           I8,2X,A4,2X,3I5)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
      ENDIF
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(ICASCL.EQ.'RGB ')GOTO2000
C
      IF(NUMARG.EQ.2)THEN
        GOTO1200
      ELSEIF(NUMARG.EQ.3)THEN
        IF(IHARG(3).EQ.'ALL')THEN
          IHOLD1='    '
          GOTO1300
        ENDIF
        GOTO1200
      ELSEIF(NUMARG.EQ.4)THEN
        IF(IHARG(3).EQ.'ALL')THEN
          IHOLD1=IHARG(4)
          GOTO1300
        ELSEIF(IHARG(4).EQ.'ALL')THEN
          IHOLD1=IHARG(3)
          GOTO1300
        ENDIF
        GOTO1200
      ELSE
        GOTO1200
      ENDIF
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
C
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)THEN
        NUMBAR=1
        IBAPCO(1)=IDEBPC
      ELSE
        NUMBAR=NUMARG-2
        IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
        DO1225I=1,NUMBAR
          J=I+2
          IHOLD1=IHARG(J)
          IHOLD2=IHOLD1
          IF(IHOLD1.EQ.'ON')IHOLD2=IDEBPC
          IF(IHOLD1.EQ.'OFF')IHOLD2=IDEBPC
          IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBPC
          IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBPC
          IBAPCO(I)=IHOLD2
 1225   CONTINUE
      ENDIF
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO1278I=1,NUMBAR
          WRITE(ICOUT,1276)I,IBAPCO(I)
 1276     FORMAT('THE COLOR OF BAR PATTERN ',I6,
     1           ' HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
 1278   CONTINUE
      ENDIF
C
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2=IDEBPC
      IF(IHOLD1.EQ.'OFF')IHOLD2=IDEBPC
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBPC
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBPC
      DO1315I=1,NUMBAR
        IBAPCO(I)=IHOLD2
 1315 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,1316)IBAPCO(I)
 1316   FORMAT('THE COLOR OF ALL BAR PATTERNS',
     1         ' HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFOUND='YES'
      GOTO9000
C
 2000 CONTINUE
C
      ISTEPN='4'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      JHOLD1=-1
      JHOLD2=-1
      JHOLD3=-1
      NUMBAR=MAXBAR
      IF(NUMARG.EQ.2)THEN
        GOTO2200
      ELSEIF(NUMARG.EQ.3 .AND. IHARG(3).EQ.'ALL')THEN
        GOTO2200
      ELSEIF(NUMARG.EQ.5)THEN
        IF(IHARG(5).EQ.'ALL')THEN
          JHOLD1=IARG(2)
          JHOLD2=IARG(3)
          JHOLD3=IARG(4)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ELSEIF(IHARG(2).EQ.'ALL')THEN
          JHOLD1=IARG(3)
          JHOLD2=IARG(4)
          JHOLD3=IARG(5)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ENDIF
        GOTO2200
      ELSEIF(NUMARG.EQ.6)THEN
        IF(IHARG(6).EQ.'ALL')THEN
          JHOLD1=IARG(3)
          JHOLD2=IARG(4)
          JHOLD3=IARG(5)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ELSEIF(IHARG(3).EQ.'ALL')THEN
          JHOLD1=IARG(4)
          JHOLD2=IARG(5)
          JHOLD3=IARG(6)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ENDIF
        GOTO2200
      ELSE
        GOTO2200
      ENDIF
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
 2200 CONTINUE
      ISTEPN='5'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)THEN
        NUMBAR=1
        IBAPC2(1,1)=-1
        IBAPC2(1,2)=-1
        IBAPC2(1,3)=-1
      ELSE
        NTEMP=NUMARG-2
        NUMBAR=NTEMP/3
        IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
        IF(NUMBAR.LT.1)THEN
          IBAPC2(1,1)=-1
          IBAPC2(1,2)=-1
          IBAPC2(1,3)=-1
          GOTO2229
        ELSEIF(NUMBAR.GT.MAXBAR)THEN
          NUMBAR=MAXBAR
        ENDIF
        IF(IHARG(1).EQ.'COLO')THEN
          IADD=2
        ELSE
          IADD=3
        ENDIF
        DO2225I=1,NUMBAR
          J1=(I-1)*3+IADD
          J2=J1+1
          J3=J1+2
          JHOLD1=IARG(J1)
          JHOLD2=IARG(J2)
          JHOLD3=IARG(J3)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          IBAPC2(I,1)=JHOLD1
          IBAPC2(I,2)=JHOLD2
          IBAPC2(I,3)=JHOLD3
 2225   CONTINUE
 2229   CONTINUE
      ENDIF
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO2278I=1,NUMBAR
          WRITE(ICOUT,2276)I,IBAPC2(I,1),IBAPC2(I,2),IBAPC2(I,3)
 2276     FORMAT('THE RGB COLOR OF BAR PATTERN ',I6,
     1          ' HAS JUST BEEN SET TO ',3I5)
          CALL DPWRST('XXX','BUG ')
 2278   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 2300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      DO2315I=1,NUMBAR
        IBAPC2(I,1)=JHOLD1
        IBAPC2(I,2)=JHOLD2
        IBAPC2(I,3)=JHOLD3
 2315 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,2316)IBAPC2(I,1),IBAPC2(I,2),IBAPC2(I,3)
 2316   FORMAT('THE RGB COLOR OF ALL BAR PATTERNS HAS JUST BEEN SET ',
     1         'TO ',3I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFOUND='YES'
      GOTO9000
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'BPCO')THEN
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBPCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR,NUMBAR
 9012   FORMAT('IFOUND,IERROR,NUMBAR = ',2(A4,2X),I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IHOLD1,IHOLD2,JHOLD1,JHOLD2,JHOLD3
 9014   FORMAT('IHOLD1,IHOLD2,JHOLD1,JHOLD2,JHOLD3 = ',2(A4,2X),3I5)
        CALL DPWRST('XXX','BUG ')
        DO9035I=1,10
          WRITE(ICOUT,76)I,IBAPCO(I),
     1                   IBAPC2(I,1),IBAPC2(I,2),IBAPC2(I,3)
          CALL DPWRST('XXX','BUG ')
 9035   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBPLI(IHARG,IHARG2,NUMARG,IDEBPL,MAXBAR,IBAPLI,
CCCCC AUGUST 1995.  ADD IHARG2 FOR DASH2, ETC
CCCCC SUBROUTINE DPBPLI(IHARG,NUMARG,IDEBPL,MAXBAR,IBAPLI,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE PATTERN LINES = THE LINES TYPES
C              OF THE PATTERN WITHIN THE BARS.
C              THESE ARE LOCATED IN THE VECTOR IBAPLI(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEBPL
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBAPLI (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED  VERSION--AUGUST    1995.  DASH2 BUG
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      CHARACTER*4 IHARG2
      CHARACTER*4 IDEBPL
      CHARACTER*4 IBAPLI
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      DIMENSION IHARG2(*)
      DIMENSION IBAPLI(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPBP'
      ISUBN2='LI  '
C
      NUMBAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBPLI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEBPL
   55 FORMAT('IDEBPL = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IBAPLI(1)
   70 FORMAT('IBAPLI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IBAPLI(I)
   76 FORMAT('I,IBAPLI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO9000
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      IF(NUMARG.EQ.5)GOTO1150
      GOTO1160
C
 1130 CONTINUE
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(5).EQ.'ALL')IHOLD1='    '
      IF(IHARG(5).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      IF(IHARG(5).EQ.'ALL')THEN
CCCCC APRIL 1996.  CHANGE IHOLD TO IHOLD1
        IHOLD1=IHARG(6)
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'2')IHOLD1='DA2'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'3')IHOLD1='DA3'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'4')IHOLD1='DA4'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'5')IHOLD1='DA5'
        GOTO1300
      ENDIF
      IF(IHARG(6).EQ.'ALL')THEN
        IHOLD1=IHARG(5)
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'2')IHOLD1='DA2'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'3')IHOLD1='DA3'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'4')IHOLD1='DA4'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'5')IHOLD1='DA5'
        GOTO1300
      ENDIF
      GOTO1200
C
 1160 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.3)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      IBAPLI(1)='    '
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-3
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+3
      IHOLD1=IHARG(J)
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'2')IHOLD1='DA2'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'3')IHOLD1='DA3'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'4')IHOLD1='DA4'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'5')IHOLD1='DA5'
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBPL
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBPL
      IBAPLI(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,IBAPLI(I)
 1276 FORMAT('THE LINE TYPE FOR BAR PATTERN ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBPL
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBPL
      DO1315I=1,NUMBAR
      IBAPLI(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IBAPLI(I)
 1316 FORMAT('THE LINE TYPE FOR ALL BAR PATTERNS',
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBPLI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEBPL
 9015 FORMAT('IDEBPL = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IBAPLI(1)
 9030 FORMAT('IBAPLI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IBAPLI(I)
 9036 FORMAT('I,IBAPLI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBPSE(P1,N1,P2,N2,ALPHA,ICASAN,IWRITE,
     1                  STATVA,STATSE,ALOWLM,AUPPLM,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--FOR TWO BINOMIAL PROPORTIONS (P1, N1, P2, N2),
C              COMPUTE THE STANDARD ERROR OF THE PRODUCT P1*P2.
C
C                 SE = SQRT(P2HAT**2*P1HAT*(1 - P1PHAT)/N1 +
C                           P1HAT**2*P2HAT*(1 - P2HAT)/N2)
C
C              WHERE
C
C                 PHAT(i) = (X(i) + 0.5)/(N(i) + 1)
C
C              RETURN THE PRODUCT, THE STANDARD ERROR, AND THE
C              LOWER AND UPPER CONFIDENCE LIMITS.
C     REFERENCE--PRIVATE COMMUNICATION WITH ANDREW RUHKIN AND
C                BILL STRAWDERMAN OF THE NIST STATISTICAL ENGINEERING
C                DIVISION.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2010/7
C     ORIGINAL VERSION--JULY      2010.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      REAL P1
      REAL P2
      REAL STATVA
      REAL STATSE
      REAL ALOWLM
      REAL AUPPLM
      INTEGER N1
      INTEGER N2
C
      DOUBLE PRECISION DTERM1
      DOUBLE PRECISION DTERM2
      DOUBLE PRECISION DDELTA
      DOUBLE PRECISION DP1
      DOUBLE PRECISION DP2
      DOUBLE PRECISION DN1
      DOUBLE PRECISION DN2
      DOUBLE PRECISION DPPF
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPRU'
      ISUBN2='H3  '
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BPSE')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBPSE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ICASAN,IWRITE
   52   FORMAT('IBUGA3,ICASAN,IWRITE = ',2A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)P1,N1,P2,N2,ALPHA
   53   FORMAT('P1,N1,P2,N2 = ',2(G15.7,I8),G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************
C               **  STEP 1--                  **
C               **  CHECK FOR INPUT ERRORS    **
C               ********************************
C
      STATVA=0.0
      STATSE=0.0
      ALOWLM=0.0
      AUPPLM=1.0
C
      IF(N1.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,111)
  111   FORMAT('****** ERROR IN BINOMIAL PRODUCT STANDARD ERROR--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
  113   FORMAT('         THE NUMBER OF OBSERVATIONS FOR THE FIRST ',
     1         'RESPONSE VARIABLE IS LESS THAN 1.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,114)N1
  114   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N2.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,123)
  123   FORMAT('         THE NUMBER OF OBSERVATIONS FOR THE ',
     1         'SECOND RESPONSE VARIABLE IS LESS THAN 1.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,114)N2
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(P1.LT.0.0 .OR. P1.GT.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,162)
  162   FORMAT('      THE BINOMIAL PROBABILITY OF SUCCESS PARAMETER ',
     1         'FOR THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,164)
  164   FORMAT('      FIRST RESPONSE VARIABLE IS OUTSIDE THE ',
     1         '(0,1) INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,167)P1
  167   FORMAT('      THE PROBABILITY OF SUCCESS PARAMETER = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      IF(P2.LT.0.0 .OR. P2.GT.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,162)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,174)
  174   FORMAT('      SECOND RESPONSE VARIABLE IS OUTSIDE THE ',
     1         '(0,1) INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,167)P2
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      ALPHSV=ALPHA
      IF(ALPHA.GT.1.0 .AND. ALPHA.LE.100.0)ALPHA=ALPHA/100.0
      IF(ALPHA.LE.0.0 .OR. ALPHA.GE.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,192)
  192   FORMAT('      THE VALUE OF ALPHA IS OUTSIDE THE (0,1) ',
     1         'INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,197)ALPHA
  197   FORMAT('      THE VALUE OF ALPHA = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
CCCCC FOR THESE FORMULAS, WE WANT ALPHA AS 0.05 RATHER THAN
CCCCC 0.95.
C
CCCCC IF(ALPHA.LT.0.5)ALPHA=1.0 - ALPHA
      IF(ALPHA.GT.0.5)ALPHA=1.0 - ALPHA
C
C               ********************************************
C               **  STEP 2--                              **
C               **  COMPUTE THE PRODUCT OF TWO BINOMOAL   **
C               **  PROPORTIONS CONFIDENCE INTERVAL.      **
C               ********************************************
C
C     DEFINE CORRECTION TERM:
C
C        P(i) = (X(i) + 0.5)/(N(i) + 1)
C
      X1=P1*REAL(N1)
      IX1=INT(X1+0.01)
      X1=REAL(IX1)
      P1=(X1+0.5)/(REAL(N1)+1.0)
      X2=P2*REAL(N2)
      IX2=INT(X2+0.01)
      X2=REAL(IX2)
      P2=(X2+0.5)/(REAL(N2)+1.0)
C
      STATVA=P1*P2
C
      DN1=DBLE(N1)
      DN2=DBLE(N2)
      DP1=DBLE(P1)
      DP2=DBLE(P2)
C
      DTERM1=(DP2**2)*DP1*(1.0D0 - DP1)/DN1
      DTERM2=(DP1**2)*DP2*(1.0D0 - DP2)/DN2
      DDELTA=DSQRT(DTERM1 + DTERM2)
      STATSE=REAL(DDELTA)
C
      ALP2=ALPHA/2.0
      IF(ALP2.LE.0.5)ALP2=1.0 - ALP2
      CALL NODPPF(DBLE(ALP2),DPPF)
      A1=STATVA - REAL(DPPF*DDELTA)
      A2=STATVA + REAL(DPPF*DDELTA)
      ALOWLM=MIN(A1,A2)
      AUPPLM=MAX(A1,A2)
      IF(ALOWLM.LT.0.0)ALOWLM=0.0
      IF(AUPPLM.GT.1.0)AUPPLM=1.0
C
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BPSE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBPSE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA3,IERROR
 9012   FORMAT('IBUGA3,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)STATVA,STATSE,ALP2,DPPF
 9013   FORMAT('STATVA,STATSE,ALP2,DPPF = ',3G15.7,2X,G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)A1,A2,ALOWLM,AUPPLM
 9014   FORMAT('A1,A2,ALOWLM,AUPPLM = ',4(G15.7,2X))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9019)STATVA,STATSE
 9019   FORMAT('STATVA,STATSE = ',2(G15.7,2X))
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBPSP(IHARG,IARGT,ARG,NUMARG,PDEBPS,MAXBAR,PBAPSP,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR PATTERN SPACINGS = THE SPACINGS
C              BETWEEN THE LINES WHICH MAKE UP THE PATTERNS WITHIN THE BARS.
C              THESE ARE LOCATED IN THE VECTOR PBAPSP(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --PDEBPS
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--PBAPSP (A FLOATING POINT VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
      DIMENSION PBAPSP(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBP'
      ISUBN2='SP  '
C
      NUMBAR=0
      IHOLD1='-999'
      HOLD1=-999.0
      HOLD2=-999.0
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBPSP--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,HOLD1,HOLD2
   54 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)PDEBPS
   55 FORMAT('PDEBPS = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)PBAPSP(1)
   70 FORMAT('PBAPSP(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,PBAPSP(I)
   76 FORMAT('I,PBAPSP(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      GOTO1150
C
 1120 CONTINUE
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1='    '
      IF(IHARG(3).EQ.'ALL')HOLD1=PDEBPS
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(4)
      IF(IHARG(3).EQ.'ALL')HOLD1=ARG(4)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      IF(IHARG(4).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(4).EQ.'ALL')HOLD1=ARG(3)
      IF(IHARG(4).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      PBAPSP(1)=PDEBPS
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-2
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+2
      IHOLD1=IHARG(J)
      HOLD1=ARG(J)
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEBPS
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEBPS
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEBPS
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEBPS
      PBAPSP(I)=HOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,PBAPSP(I)
 1276 FORMAT('THE SPACING BETWEEN (LINES WITHIN) PATTERN ',I6,
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEBPS
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEBPS
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEBPS
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEBPS
      DO1315I=1,NUMBAR
      PBAPSP(I)=HOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)PBAPSP(I)
 1316 FORMAT('THE SPACING BETWEEN (LINES WITHIN) ALL PATTERNS',
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBPSP--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,HOLD1,HOLD2
 9014 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)PDEBPS
 9015 FORMAT('PDEBPS = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I),IARGT(I),ARG(I)
 9026 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)PBAPSP(1)
 9030 FORMAT('PBAPSP(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,PBAPSP(I)
 9036 FORMAT('I,PBAPSP(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBPTH(IHARG,IARGT,ARG,NUMARG,PDEBPT,MAXBAR,PBAPTH,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE BAR PATTERN THICKNESSES = THE THICKNESSES
C              OF THE LINES WHICH MAKE UP THE PATTERNS WITHIN THE BARS.
C              THESE ARE LOCATED IN THE VECTOR PBAPTH(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --PDEBPT
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--PBAPTH (A FLOATING POINT VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
      DIMENSION PBAPTH(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBP'
      ISUBN2='TH  '
C
      NUMBAR=0
      IHOLD1='-999'
      HOLD1=-999.0
      HOLD2=-999.0
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBPTH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,HOLD1,HOLD2
   54 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)PDEBPT
   55 FORMAT('PDEBPT = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)PBAPTH(1)
   70 FORMAT('PBAPTH(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,PBAPTH(I)
   76 FORMAT('I,PBAPTH(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      GOTO1150
C
 1120 CONTINUE
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1='    '
      IF(IHARG(3).EQ.'ALL')HOLD1=PDEBPT
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(4)
      IF(IHARG(3).EQ.'ALL')HOLD1=ARG(4)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      IF(IHARG(4).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(4).EQ.'ALL')HOLD1=ARG(2)
      IF(IHARG(4).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      PBAPTH(1)=PDEBPT
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-2
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+2
      IHOLD1=IHARG(J)
      HOLD1=ARG(J)
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEBPT
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEBPT
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEBPT
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEBPT
      PBAPTH(I)=HOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,PBAPTH(I)
 1276 FORMAT('THE THICKNESS OF (LINES WITHIN) PATTERN ',I6,
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEBPT
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEBPT
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEBPT
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEBPT
      DO1315I=1,NUMBAR
      PBAPTH(I)=HOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)PBAPTH(I)
 1316 FORMAT('THE THICKNESS OF (LINES WITHIN) ALL PATTERNS',
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBPTH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,HOLD1,HOLD2
 9014 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)PDEBPT
 9015 FORMAT('PDEBPT = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I),IARGT(I),ARG(I)
 9026 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)PBAPTH(1)
 9030 FORMAT('PBAPTH(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,PBAPTH(I)
 9036 FORMAT('I,PBAPTH(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBPTY(IHARG,NUMARG,IDEBPT,MAXBAR,IBAPTY,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE PATTERN TYPES = THE TYPES
C              OF THE PATTERN WITHIN THE BARS.
C              THESE ARE LOCATED IN THE VECTOR IBAPTY(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEBPT
C                     --MAXBAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IBAPTY (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEBPT
      CHARACTER*4 IBAPTY
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IBAPTY(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPBP'
      ISUBN2='TY  '
C
      NUMBAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPBPTY--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXBAR,NUMBAR
   53 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEBPT
   55 FORMAT('IDEBPT = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IBAPTY(1)
   70 FORMAT('IBAPTY(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IBAPTY(I)
   76 FORMAT('I,IBAPTY(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      GOTO1150
C
 1120 CONTINUE
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1='    '
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(4)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      IF(IHARG(4).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(4).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMBAR=1
      IBAPTY(1)='    '
      GOTO1270
C
 1220 CONTINUE
      NUMBAR=NUMARG-2
      IF(NUMBAR.GT.MAXBAR)NUMBAR=MAXBAR
      DO1225I=1,NUMBAR
      J=I+2
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBPT
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBPT
      IBAPTY(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMBAR
      WRITE(ICOUT,1276)I,IBAPTY(I)
 1276 FORMAT('THE TYPE FOR BAR PATTERN ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMBAR=MAXBAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEBPT
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEBPT
      DO1315I=1,NUMBAR
      IBAPTY(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IBAPTY(I)
 1316 FORMAT('THE TYPE FOR ALL BAR PATTERNS',
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPBPTY--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXBAR,NUMBAR
 9013 FORMAT('MAXBAR,NUMBAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEBPT
 9015 FORMAT('IDEBPT = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IBAPTY(1)
 9030 FORMAT('IBAPTY(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IBAPTY(I)
 9036 FORMAT('I,IBAPTY(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPBRAT(P1,N1,P2,N2,ALPHA,IWRITE,
     1                  ARATIO,ALOWLM,AUPPLM,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--FOR TWO BINOMIAL PROPORTIONS (P1, N1, P2, N2)
C              AND ALPHA, COMPUTE THE CONFIDENCE LIMITS FOR THE
C              RATIO OF THE PROBABILITIES.
C
C              THE BASIC FORMULAT IS:
C
C              (phat/qhat)*EXP{+/-NORPPF(ALPHA/2)*
C              SQRT((1-phat)/(n1*phat) + (1-qhat)/(n2*qhat))}
C
C
C              NOTE THAT PHAT AND QHAT ARE BOTH 1 RESULTS IN  "ZERO"
C              UNCERTAINTY AND THAT PHAT OR QHAT OF 0 RESULTS IN
C              DIVISION BY ZERO.  FOR THAT REASON, WE USE THE
C              BAYES ESTIMATORS OF P AND Q:
C
C                 PHAT = (V + 0.5)/(N1+1)
C                 QHAT = (U + 0.5)/(N2+1)
C
C              WHERE V AND U DENOTE THE NUMBER OF SUCCESSES IN THE
C              BINOMIAL TRIALS.
C
C     REFERENCE--PRIVATE COMMUNICATION WITH ANDREW RUHKIN OF THE
C                NIST STATISTICAL ENGINEERING DIVISION.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/10
C     ORIGINAL VERSION--OCTOBER   2009.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      REAL P1
      REAL P2
      REAL ALPHA
      REAL ALOWLM
      REAL AUPPLM
      INTEGER N1
      INTEGER N2
C
      REAL TERM1
      REAL TERM2
      REAL TERM3
      REAL TERM4
      REAL ARATIO
      REAL PPF
      REAL PHAT
      REAL QHAT
      REAL AN1
      REAL AN2
      INTEGER IV
      INTEGER IU
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBR'
      ISUBN2='AT  '
C
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BRAT')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBRAT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,IWRITE
   52   FORMAT('IBUGA3,ISUBRO,IWRITE = ',2A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)P1,N1,P2,N2,ALPHA
   53   FORMAT('P1,N1,P2,N2,ALPHA = ',2(G15.7,I8),G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************
C               **  STEP 1--                  **
C               **  CHECK FOR INPUT ERRORS    **
C               ********************************
C
      ALOWLM=0.0
      AUPPLM=1.0
C
      IF(N1.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,111)
  111   FORMAT('****** ERROR IN BINOMIAL RATIO CONFIDENCE LIMITS-- ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
  113   FORMAT('         THE NUMBER OF OBSERVATIONS FOR THE FIRST ',
     1         'RESPONSE VARIABLE IS LESS THAN 2.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,114)N1
  114   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N2.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,123)
  123   FORMAT('         THE NUMBER OF OBSERVATIONS FOR THE ',
     1         'SECOND RESPONSE VARIABLE IS LESS THAN 2.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,114)N2
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(P1.LT.0.0 .OR. P1.GT.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,162)
  162   FORMAT('      THE BINOMIAL PROBABILITY OF SUCCESS PARAMETER ',
     1         'FOR THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,164)
  164   FORMAT('      FIRST RESPONSE VARIABLE IS OUTSIDE THE ',
     1         '(0,1) INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,167)P1
  167   FORMAT('      THE PROBABILITY OF SUCCESS PARAMETER = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      IF(P2.LT.0.0 .OR. P2.GT.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,162)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,174)
  174   FORMAT('      SECOND RESPONSE VARIABLE IS OUTSIDE THE ',
     1         '(0,1) INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,167)P2
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      ALPHSV=ALPHA
      IF(ALPHA.GT.1.0 .AND. ALPHA.LE.100.0)ALPHA=ALPHA/100.0
      IF(ALPHA.LE.0.0 .OR. ALPHA.GE.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,192)
  192   FORMAT('      THE VALUE OF ALPHA IS OUTSIDE THE (0,1) ',
     1         'INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,197)ALPHA
  197   FORMAT('      THE VALUE OF ALPHA = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
CCCCC FOR THESE FORMULAS, WE WANT ALPHA AS 0.05 RATHER THAN
CCCCC 0.95.
C
CCCCC IF(ALPHA.LT.0.5)ALPHA=1.0 - ALPHA
      IF(ALPHA.GT.0.5)ALPHA=1.0 - ALPHA
C
C               ********************************************
C               **  STEP 2--                              **
C               **  COMPUTE THE BINOMIAL RATIO            **
C               **  CONFIDENCE INTERVAL.                  **
C               ********************************************
C
      AV=P1*REAL(N1)
      IV=INT(AV+0.01)
      AV=REAL(IV)
      AU=P2*REAL(N2)
      IU=INT(AU+0.01)
      AU=REAL(IU)
      AN1=REAL(N1)
      AN2=REAL(N2)
C
      PHAT=(AV+0.5)/(AN1+1.0)
      QHAT=(AU+0.5)/(AN2+1.0)
      TERM1=(1.0-PHAT)/(AN1*PHAT)
      TERM2=(1.0-QHAT)/(AN2*QHAT)
      TERM3=SQRT(TERM1+TERM2)
C
      ARATIO=PHAT/QHAT
      ALP2=1.0 - (ALPHA/2.0)
      CALL NORPPF(ALP2,PPF)
      TERM4=PPF*TERM3
      ALOWLM=ARATIO*EXP(-TERM4)
      AUPPLM=ARATIO*EXP(TERM4)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BRAT')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBRAT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA3,IERROR
 9012   FORMAT('IBUGA3,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)TERM1,TERM2,TERM3,TERM4
 9013   FORMAT('TERM1,TERM2,TERM3,TERM4 = ',4(G15.7,2X))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)AV,AU,PHAT,QHAT
 9014   FORMAT('AV,AU,PHAT,QHAT = ',4(G15.7,2X))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)ARATIO,ALP2,PPF,ALOWLM,AUPPLM
 9015   FORMAT('ARATIO,ALP2,PPF,ALOWLM,AUPPLM = ',5(G15.7,2X))
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBSCL(IHARG,NUMARG,IDBSCO,IBSPCO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE COLOR FOR THE 3-D BASEPLANE.
C              THE COLOR FOR THE BASEPLANE WILL BE PLACED
C              IN THE CHARACTER VARIABLE IBSPCO.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDBSCO
C     OUTPUT ARGUMENTS--IBSPCO
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     NOTE--THIS SUBROUTINE ASSUMES A
C           COMPLICATED-TO-SIMPLE CHECKING ORDER
C           (IN MAIPC4) OF THE VARIOUS BASEPLANE COMMANDS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDBSCO
      CHARACTER*4 IBSPCO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.EQ.1)GOTO1150
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      GOTO1160
C
 1150 CONTINUE
      IBSPCO=IDBSCO
      GOTO1180
C
 1160 CONTINUE
      IBSPCO=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBSPCO
 1181 FORMAT('THE (3-D) BASEPLANE COLOR ',
     1'HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBSGC(IHARG,NUMARG,IDBSGC,IBSPGC,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE COLOR FOR THE 3-D BASEPLANE GRID.
C              THE COLOR FOR THE BASEPLANE GRID WILL BE PLACED
C              IN THE CHARACTER VARIABLE IBSPGC.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDBSGC
C     OUTPUT ARGUMENTS--IBSPGC
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     NOTE--THIS SUBROUTINE ASSUMES A
C           COMPLICATED-TO-SIMPLE CHECKING ORDER
C           (IN MAIPC4) OF THE VARIOUS BASEPLANE COMMANDS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 WASHINGPON, D. C. 20234
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDBSGC
      CHARACTER*4 IBSPGC
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.1)GOTO1199
      IF(NUMARG.EQ.2)GOTO1150
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      GOTO1160
C
 1150 CONTINUE
      IBSPGC=IDBSGC
      GOTO1180
C
 1160 CONTINUE
      IBSPGC=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBSPGC
 1181 FORMAT('THE (3-D) BASEPLANE GRID COLOR ',
     1'HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBSGP(IHARG,NUMARG,IDBSGP,IBSPGP,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE PATTERN FOR THE 3-D BASEPLANE GRID.
C              THE PATTERN FOR THE BASEPLANE GRID WILL BE PLACED
C              IN THE CHARACTER VARIABLE IBSPGP.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDBSGP
C     OUTPUT ARGUMENTS--IBSPGP
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     NOTE--THIS SUBROUTINE ASSUMES A
C           COMPLICATED-TO-SIMPLE CHECKING ORDER
C           (IN MAIPC4) OF THE VARIOUS BASEPLANE COMMANDS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 WASHINGPON, D. C. 20234
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDBSGP
      CHARACTER*4 IBSPGP
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.1)GOTO1199
      IF(NUMARG.EQ.2)GOTO1160
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1160
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1170
      GOTO1175
C
 1150 CONTINUE
      IBSPGP='SOLI'
      GOTO1180
C
 1160 CONTINUE
      IBSPGP='BLAN'
      GOTO1180
C
 1170 CONTINUE
      IBSPGP=IDBSGP
      GOTO1180
C
 1175 CONTINUE
      IBSPGP=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBSPGP
 1181 FORMAT('THE (3-D) BASEPLANE GRID PATTERN ',
     1'HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBSGR(IHARG,NUMARG,IDBSGR,IBSPGR,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE 3-D BASEPLANE GRID SWITCH IBSPGR.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDBSGR
C     OUTPUT ARGUMENTS--IBSPGR   ('ON'  OR 'OFF')
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     NOTE--THIS SUBROUTINE ASSUMES A
C           COMPLICATED-TO-SIMPLE CHECKING ORDER
C           (IN MAIPC4) OF THE VARIOUS BASEPLANE COMMANDS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDBSGR
      CHARACTER*4 IBSPGR
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.EQ.1)GOTO1150
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1160
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1170
      GOTO1199
C
 1150 CONTINUE
      IBSPGR='ON'
      GOTO1180
C
 1160 CONTINUE
      IBSPGR='OFF'
      GOTO1180
C
 1170 CONTINUE
      IBSPGR=IDBSGR
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBSPGR
 1181 FORMAT('THE (3-D) BASEPLANE GRID SWITCH ',
     1'HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBSP(IHARG,NUMARG,IBSPSW,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE 3-D BASEPLANE SWITCH IBSPSW.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--IBSPSW   ('ON'  OR 'OFF')
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     NOTE--THIS SUBROUTINE ASSUMES A
C           COMPLICATED-TO-SIMPLE CHECKING ORDER
C           (IN MAIPC4) OF THE VARIOUS BASEPLANE COMMANDS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/10
C     ORIGINAL VERSION--SEPTEMBER 1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IBSPSW
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1150
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1160
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1160
      GOTO1199
C
 1150 CONTINUE
      IBSPSW='ON'
      GOTO1180
C
 1160 CONTINUE
      IBSPSW='OFF'
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IBSPSW
 1181 FORMAT('THE (3-D) BASEPLANE SWITCH ',
     1'HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPBSHW(IHARG,IARGT,IARG,ARG,NUMARG,PDEFSH,PDEFSW,
     1                  MAXBOX,PBOSHE,PBOSWI,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE SHADOW HEIGHT & WIDTH FOR A BOX.
C              THE SHADOW HEIGHT & WIDTH FOR A BOX IS THE THICKNESS
C              OF THE SHADOW THAT WILL APPEAR BELOW AND TO THE RIGHT
C              OF THE BOX.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --ARG    (A REAL VECTOR)
C                     --NUMARG
C                     --PDEFSH
C                     --PDEFSW
C                     --MAXBOX
C     OUTPUT ARGUMENTS--PBOSHE (A REAL VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              SHADOW HEIGHT FOR BOX I)
C                     --PBOSWI (A REAL VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              SHADOW WIDTH FOR BOX I)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--92/9
C     ORIGINAL VERSION--AUGUST    1992.
C     UPDATED         --DECEMBER  1999. ADD "OFF" OPTION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      REAL        PDEFSH
      REAL        PDEFSW
      REAL        PBOSHE
      REAL        PBOSWI
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      REAL        PHOLDH
      REAL        PHOLDW
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
C
      DIMENSION PBOSHE(*)
      DIMENSION PBOSWI(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      PHOLDW=CPUMIN
C
C               **************************************************
C               **  STEP 1--                                    **
C               **  TREAT THE BOX SHADOW HEIGHT           CASE  **
C               **************************************************
C
      IF(NUMARG.GE.2)THEN
         IF(IHARG(1).EQ.'SHAD')THEN
            IF(IHARG(2).EQ.'HEIG')THEN
               IF(NUMARG.EQ.2)THEN
                  PHOLDH=PDEFSH
                  GOTO1100
               ELSE IF(IHARG(3).EQ.'ON'.OR.
     1         IHARG(3).EQ.'AUTO'.OR. IHARG(3).EQ.'DEFA')THEN
                  PHOLDH=PDEFSH
                  GOTO1100
               ELSE IF(IHARG(3).EQ.'OFF')THEN
                  PHOLDH=0.0
                  GOTO1100
               ELSE IF(IHARG(3).EQ.'?')THEN
                  GOTO1150
               ELSE
                  PHOLDH=ARG(3)
                  GOTO1100
               ENDIF
            ELSEIF(IHARG(2).EQ.'OFF')THEN
              PHOLDH=0.0
              GOTO3100
            ENDIF
         ENDIF
      ENDIF
      GOTO1190
C
 1100 CONTINUE
      IFOUND='YES'
      DO1110I=1,MAXBOX
         PBOSHE(I)=PHOLDH
 1110 CONTINUE
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1130)PBOSHE(1)
 1130   FORMAT('ALL BOX SHADOW HEIGHTS ',
     1         'HAVE JUST BEEN SET TO ',F10.4)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
 1150 CONTINUE
      IFOUND='YES'
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1160)PBOSHE(1)
 1160   FORMAT('ALL BOX SHADOW HEIGHTS ',
     1         'HAVE THE CURRENT VALUE ',F10.4)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
 1190 CONTINUE
C
C               **************************************************
C               **  STEP 2--                                    **
C               **  TREAT THE BOX SHADOW WIDTH            CASE  **
C               **************************************************
C
      IF(NUMARG.GE.2)THEN
         IF(IHARG(1).EQ.'SHAD')THEN
            IF(IHARG(2).EQ.'WIDT')THEN
               IF(NUMARG.EQ.2)THEN
                  PHOLDW=PDEFSW
                  GOTO2100
               ELSE IF(IHARG(3).EQ.'ON'.OR.
     1         IHARG(3).EQ.'AUTO'.OR. IHARG(3).EQ.'DEFA')THEN
                  PHOLDW=PDEFSW
                  GOTO2100
               ELSE IF(IHARG(3).EQ.'OFF')THEN
                  PHOLDW=0.0
                  GOTO2100
               ELSE IF(IHARG(3).EQ.'?')THEN
                  GOTO2150
               ELSE
                  PHOLDW=ARG(3)
                  GOTO2100
               ENDIF
            ENDIF
         ENDIF
      ENDIF
      GOTO2190
C
 2100 CONTINUE
      IFOUND='YES'
      DO2110I=1,MAXBOX
         PBOSWI(I)=PHOLDW
 2110 CONTINUE
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2130)PBOSWI(1)
 2130   FORMAT('ALL BOX SHADOW WIDTHS  ',
     1         'HAVE JUST BEEN SET TO ',F10.4)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
 2150 CONTINUE
      IFOUND='YES'
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2160)PBOSWI(1)
 2160   FORMAT('ALL BOX SHADOW WIDTHS  ',
     1         'HAVE THE CURRENT VALUE ',F10.4)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
 2190 CONTINUE
C
C               **************************************************
C               **  STEP 3--                                    **
C               **  TREAT THE BOX SHADOW HEIGHT AND WIDTH CASE  **
C               **************************************************
C
      IF(NUMARG.GE.2)THEN
         IF(IHARG(1).EQ.'SHAD')THEN
            IF(IHARG(2).EQ.'HW')THEN
               IF(NUMARG.EQ.2)THEN
                  PHOLDH=PDEFSH
                  PHOLDW=PDEFSW
                  GOTO3100
               ELSE IF(IHARG(3).EQ.'ON'.OR.
     1         IHARG(3).EQ.'AUTO'.OR. IHARG(3).EQ.'DEFA')THEN
                  PHOLDH=PDEFSH
                  PHOLDW=PDEFSW
                  GOTO3100
               ELSE IF(IHARG(3).EQ.'OFF')THEN
                  PHOLDH=0.0
                  PHOLDW=0.0
                  GOTO3100
               ELSE IF(IHARG(3).EQ.'?')THEN
                  GOTO3150
               ELSE
                  PHOLDH=ARG(3)
                  IF(NUMARG.LE.3)PHOLDW=ARG(3)
                  IF(NUMARG.GE.4)PHOLDW=ARG(4)
                  GOTO3100
               ENDIF
            ELSEIF(IHARG(2).EQ.'HW')THEN
              PHOLDH=0.0
              PHOLDW=0.0
              GOTO3100
            ENDIF
         ENDIF
      ENDIF
      GOTO3190
C
 3100 CONTINUE
      IFOUND='YES'
      DO3110I=1,MAXBOX
         PBOSHE(I)=PHOLDH
         PBOSWI(I)=PHOLDW
 3110 CONTINUE
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3131)PBOSHE(1)
 3131   FORMAT('ALL BOX SHADOW HEIGHTS ',
     1         'HAVE JUST BEEN SET TO ',F10.4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3132)PBOSWI(1)
 3132   FORMAT('ALL BOX SHADOW WIDTHS  ',
     1         'HAVE JUST BEEN SET TO ',F10.4)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
 3150 CONTINUE
      IFOUND='YES'
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3161)PBOSHE(1)
 3161   FORMAT('ALL BOX SHADOW HEIGHTS ',
     1         'HAVE THE CURRENT VALUE ',F10.4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3162)PBOSWI(1)
 3162   FORMAT('ALL BOX SHADOW WIDTHS  ',
     1         'HAVE THE CURRENT VALUE ',F10.4)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
 3190 CONTINUE
C
C               **************************************************
C               **  STEP 4--                                    **
C               **  TREAT THE BOX ... SHADOW HEIGHT       CASE  **
C               **************************************************
C
      IF(NUMARG.GE.3)THEN
         IF(IHARG(2).EQ.'SHAD')THEN
            IF(IHARG(3).EQ.'HEIG')THEN
               IF(NUMARG.EQ.3)THEN
                  PHOLDH=PDEFSH
                  GOTO4100
               ELSE IF(IHARG(4).EQ.'ON'.OR.
     1         IHARG(4).EQ.'AUTO'.OR. IHARG(4).EQ.'DEFA')THEN
                  PHOLDH=PDEFSH
                  GOTO4100
               ELSE IF(IHARG(4).EQ.'OFF')THEN
                  PHOLDH=0.0
                  GOTO4100
               ELSE IF(IHARG(4).EQ.'?')THEN
                  GOTO4150
               ELSE
                  PHOLDH=ARG(4)
                  GOTO4100
               ENDIF
            ENDIF
         ENDIF
      ENDIF
      GOTO4190
C
 4100 CONTINUE
      IF(IARGT(1).EQ.'NUMB')THEN
         I=IARG(1)
         IF(1.LE.I.AND.I.LE.MAXBOX)THEN
            IFOUND='YES'
            IF(IFEEDB.EQ.'ON')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,4110)I,PBOSHE(1)
 4110         FORMAT('THE SHADOW HEIGHT FOR BOX ',I8,
     1               ' HAS JUST BEEN SET TO ',F10.4)
              CALL DPWRST('XXX','BUG ')
              GOTO9000
           ENDIF
         ELSE
            GOTO8200
         ENDIF
      ENDIF
      GOTO8100
C
 4150 CONTINUE
      IF(IARGT(1).EQ.'NUMB')THEN
         I=IARG(1)
         IF(1.LE.I.AND.I.LE.MAXBOX)THEN
            IFOUND='YES'
            IF(IFEEDB.EQ.'ON')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,4160)I,PBOSHE(I)
 4160         FORMAT('THE SHADOW HEIGHT FOR BOX ',I8,
     1               ' HAS THE CURRENT VALUE ',F10.4)
              CALL DPWRST('XXX','BUG ')
              GOTO9000
           ENDIF
         ELSE
            GOTO8200
         ENDIF
      ENDIF
      GOTO8100
C
 4190 CONTINUE
C
C               **************************************************
C               **  STEP 5--                                    **
C               **  TREAT THE BOX ... SHADOW WIDTH        CASE  **
C               **************************************************
C
      IF(NUMARG.GE.3)THEN
CCCCC    IF(IHARG(1).EQ.'SHAD')THEN
         IF(IHARG(2).EQ.'SHAD')THEN
            IF(IHARG(3).EQ.'WIDT')THEN
               IF(NUMARG.EQ.3)THEN
                  PHOLDW=PDEFSW
                  GOTO5100
               ELSE IF(IHARG(4).EQ.'ON'.OR.
     1         IHARG(4).EQ.'AUTO'.OR. IHARG(4).EQ.'DEFA')THEN
                  PHOLDW=PDEFSW
                  GOTO5100
               ELSE IF(IHARG(4).EQ.'OFF')THEN
                  PHOLDW=0.0
                  GOTO5100
               ELSE IF(IHARG(4).EQ.'?')THEN
                  GOTO5150
               ELSE
                  PHOLDW=ARG(4)
                  GOTO5100
               ENDIF
            ENDIF
         ENDIF
      ENDIF
      GOTO5190
C
 5100 CONTINUE
      IF(IARGT(1).EQ.'NUMB')THEN
         I=IARG(1)
         IF(1.LE.I.AND.I.LE.MAXBOX)THEN
            IFOUND='YES'
            PBOSWI(I)=PHOLDW
            IF(IFEEDB.EQ.'ON')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,5110)I,PBOSWI(1)
 5110         FORMAT('THE SHADOW WIDTH  FOR BOX ',I8,
     1               ' HAS JUST BEEN SET TO ',F10.4)
              CALL DPWRST('XXX','BUG ')
              GOTO9000
           ENDIF
         ELSE
            GOTO8200
         ENDIF
      ENDIF
      GOTO8100
C
 5150 CONTINUE
      IF(IARGT(1).EQ.'NUMB')THEN
         I=IARG(1)
         IF(1.LE.I.AND.I.LE.MAXBOX)THEN
            IFOUND='YES'
            IF(IFEEDB.EQ.'ON')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,5160)I,PBOSWI(I)
 5160         FORMAT('THE SHADOW WIDTH  FOR BOX ',I8,
     1               ' HAS THE CURRENT VALUE ',F10.4)
              CALL DPWRST('XXX','BUG ')
              GOTO9000
           ENDIF
         ELSE
            GOTO8200
         ENDIF
      ENDIF
      GOTO8100
C
 5190 CONTINUE
C
C               **************************************************
C               **  STEP 6--                                    **
C               **  TREAT THE BOX ... SHADOW HEIGHT & WIDTH CASE**
C               **************************************************
C
      IF(NUMARG.GE.3)THEN
         IF(IHARG(2).EQ.'SHAD')THEN
            IF(IHARG(3).EQ.'HW')THEN
               IF(NUMARG.EQ.3)THEN
                  PHOLDH=PDEFSH
                  PHOLDW=PDEFSW
                  GOTO6100
               ELSE IF(IHARG(4).EQ.'ON'.OR.
     1         IHARG(4).EQ.'AUTO'.OR. IHARG(4).EQ.'DEFA')THEN
                  PHOLDH=PDEFSH
                  PHOLDW=PDEFSW
                  GOTO6100
               ELSE IF(IHARG(4).EQ.'OFF')THEN
                  PHOLDH=PDEFSH
                  PHOLDW=PDEFSW
                  GOTO6100
               ELSE IF(IHARG(4).EQ.'?')THEN
                  GOTO6150
               ELSE
                  PHOLDH=ARG(4)
                  IF(NUMARG.LE.4)PHOLDW=ARG(4)
                  IF(NUMARG.GE.5)PHOLDW=ARG(5)
                  GOTO6100
               ENDIF
            ELSEIF(IHARG(3).EQ.'OFF')THEN
              PHOLDH=PDEFSH
              PHOLDW=PDEFSW
              GOTO6100
            ENDIF
         ENDIF
      ENDIF
      GOTO6190
C
 6100 CONTINUE
      IF(IARGT(1).EQ.'NUMB')THEN
         I=IARG(1)
         IF(1.LE.I.AND.I.LE.MAXBOX)THEN
            IFOUND='YES'
            PBOSHE(I)=PHOLDH
            PBOSWI(I)=PHOLDW
            IF(IFEEDB.EQ.'ON')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,6110)I,PBOSHE(1)
 6110         FORMAT('THE SHADOW HEIGHT FOR BOX ',I8,
     1               ' HAS JUST BEEN SET TO ',F10.4)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,6120)I,PBOSWI(1)
 6120         FORMAT('THE SHADOW WIDTH  FOR BOX ',I8,
     1               ' HAS JUST BEEN SET TO ',F10.4)
              CALL DPWRST('XXX','BUG ')
              GOTO9000
           ENDIF
         ELSE
            GOTO8200
         ENDIF
      ENDIF
      GOTO8100
C
 6150 CONTINUE
      IF(IARGT(1).EQ.'NUMB')THEN
         I=IARG(1)
         IF(1.LE.I.AND.I.LE.MAXBOX)THEN
            IFOUND='YES'
            IF(IFEEDB.EQ.'ON')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,6161)I,PBOSHE(I)
 6161         FORMAT('THE SHADOW HEIGHT FOR BOX ',I8,
     1               ' HAS THE CURRENT VALUE ',F10.4)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,6162)I,PBOSWI(I)
 6162         FORMAT('THE SHADOW WIDTH  FOR BOX ',I8,
     1               ' HAS THE CURRENT VALUE ',F10.4)
              CALL DPWRST('XXX','BUG ')
              GOTO9000
           ENDIF
         ELSE
            GOTO8200
         ENDIF
      ENDIF
      GOTO8100
C
 6190 CONTINUE
      GOTO9000
C
C               **************************************************
C               **  STEP 11--                                   **
C               **  WRITE OUT MESSAGES FOR ERROR CONDITIONS
C               **************************************************
C
 8100 CONTINUE
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8111)
 8111 FORMAT('***** ERROR IN BOX SHADOW (DPBSHW)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8112)
 8112 FORMAT('      IN THE BOX ... HEIGHT COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8113)
 8113 FORMAT('      IN THE BOX ... WIDTH  COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8114)
 8114 FORMAT('      IN THE BOX ... HW COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8115)
 8115 FORMAT('      THE BOX MUST BE IDENTIFIED BY A NUMBER,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8116)
 8116 FORMAT('      AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8117)
 8117 FORMAT('      BOX 3 HW 1 .8')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 8200 CONTINUE
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8111)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8212)
 8212 FORMAT('      IN THE BOX ... HEIGHT COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8213)
 8213 FORMAT('      IN THE BOX ... WIDTH  COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8214)
 8214 FORMAT('      IN THE BOX ... HW COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8216)
 8216 FORMAT('      THE NUMBER OF BOXES MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8217)MAXBOX
 8217 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8218)
 8218 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8219)I
 8219 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'BOX.')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPBTES(XTEMP1,MAXNXT,
     1                  ICASAN,ICAPSW,IFORSW,IMULT,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT BARTLETT TEST
C              (K-SAMPLE HOMOGENEITY OF VARIANCES)
C     EXAMPLE--BARTLETT TEST Y X
C     REFERENCE--DIXON & MASSEY, PAGE 179-180
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--94/12
C     ORIGINAL VERSION--DECEMBER  1994.
C     UPDATED         --MAY       1995.  BUG FIX
C     UPDATED         --AUGUST    1999.  CHANGE DEFINITION TO USE
C                                        MORE COMMONLY ACCEPTED 
C                                        FORM.  ADD "DIXON BARTLETT
C                                        TEST" TO USE PREVIOUS
C                                        DEFINITION.
C     UPDATED         --MAY       2011.  SUPPORT FOR HTML, RTF AND LATEX
C                                        OUTPUT
C     UPDATED         --MAY       2011.  USE DPPARS
C     UPDATED         --MAY       2011.  SUPPORT FOR "MULTIPLE" CASE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IMULT
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICASE
      CHARACTER*4 IFLAGU
C
      LOGICAL IFRST
      LOGICAL ILAST
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      DIMENSION XTEMP1(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBT'
      ISUBN2='ES  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IFOUND='YES'
      IERROR='NO'
C
C               **************************************
C               **  TREAT THE BARTLETT TEST CASE    **
C               **************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'BTES')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBTES--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)IMULT,MAXNXT
   55   FORMAT('IMULT,MAXNXT = ',A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 1--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BTES')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BARTLETT TEST'
      MAXNA=100
      MINNVA=1
      MAXNVA=100
      MINNA=1
      IFLAGE=1
      IFLAGM=0
      IF(IMULT.EQ.'ON')THEN
        IFLAGE=0
        IFLAGM=1
      ENDIF
      MINN2=2
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BTES')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,181)
  181   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,182)NQ,NUMVAR,IMULT
  182   FORMAT('NQ,NUMVAR,IMULT = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO185I=1,NUMVAR
            WRITE(ICOUT,187)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  187       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  185     CONTINUE
        ENDIF
      ENDIF
C
C               *******************************************************
C               **  STEP 3--                                         **
C               **  GENERATE THE BARTLETT       TEST FOR THE VARIOUS **
C               **  CASES                                            **
C               *******************************************************
C
      ISTEPN='3'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BTES')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *****************************************
C               **  STEP 3A--                          **
C               **  CASE 1: TWO RESPONSE VARIABLES     **
C               **          WITH NO REPLICATION        **
C               *****************************************
C
      IF(IMULT.EQ.'OFF')THEN
        ISTEPN='3A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BTES')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        NUMVA2=2
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y,X,XTEMP1,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
C
C               ********************************************
C               **  STEP 3B--                             **
C               **  PREPARE FOR ENTRANCE INTO DPBTES--    **
C               ********************************************
C
        ISTEPN='3B'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BTES')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,331)
  331     FORMAT('***** FROM DPBTES, AS WE ARE ABOUT TO CALL DPBTE2--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,332)NLOCAL
  332     FORMAT('NLOCAL = ',I8)
          CALL DPWRST('XXX','BUG ')
          DO335I=1,NLOCAL
            WRITE(ICOUT,336)I,Y(I),X(I)
  336       FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
  335     CONTINUE
        ENDIF
C
        CALL DPBTE2(Y,X,NLOCAL,IVARN1,IVARN2,ICASAN,
     1              STATVA,STATCD,PVAL,STANU1,STANU2,
     1              CUT0,CUT50,CUT75,CUT90,CUT95,CUT99,CUT999,
     1              ICAPSW,ICAPTY,IFORSW,IMULT,
     1              IBUGA3,ISUBRO,IERROR)
C
C               ***************************************
C               **  STEP 8C--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
          ISTEPN='8C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BTES')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLAGU='ON'
          IFRST=.TRUE.
          ILAST=.TRUE.
          CALL DPFRT5(STATVA,STATCD,PVAL,
     1                CUT0,CUT50,CUT75,CUT90,CUT95,
     1                CUT975,CUT99,CUT999,
     1                IFLAGU,IFRST,ILAST,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
C
C               *******************************************************
C               **  STEP 4A--                                        **
C               **  CASE 2: MULTIPLE RESPONSE VARIABLES.  NOTE THAT  **
C               **          FOR F LOCATION     TEST, THE MULTIPLE    **
C               **          LABS ARE CONVERTED INTO A "Y X" STACKED  **
C               **          PAIR WHERE "X" IS THE LAB-ID VARIABLE.   **
C               *******************************************************
C
      ELSEIF(IMULT.EQ.'ON')THEN
        ISTEPN='4A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'FLTE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        NUMVA2=NUMVAR
        CALL DPPAR8(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              XTEMP1,Y,X,NLOCAL,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        NUMVAR=2
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'FLTE')THEN
          ISTEPN='4B'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,442)
  442     FORMAT('***** FROM THE MIDDLE  OF DPFLTE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,443)ICASAN,NUMVAR,NLOCAL
  443     FORMAT('ICASAN,NUMVAR,NLOCAL = ',A4,2I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO445I=1,NLOCAL
              WRITE(ICOUT,446)I,Y(I),X(I)
  446         FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
              CALL DPWRST('XXX','BUG ')
  445       CONTINUE
          ENDIF
        ENDIF
C
        CALL DPBTE2(Y,X,NLOCAL,IVARN1,IVARN2,ICASAN,
     1              STATVA,STATCD,PVAL,STANU1,STANU2,
     1              CUT0,CUT50,CUT75,CUT90,CUT95,CUT99,CUT999,
     1              ICAPSW,ICAPTY,IFORSW,IMULT,
     1              IBUGA3,ISUBRO,IERROR)
C
C         ***************************************
C         **  STEP 8C--                        **
C         **  UPDATE INTERNAL DATAPLOT TABLES  **
C         ***************************************
C
          ISTEPN='8C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BTES')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLAGU='ON'
          IFRST=.TRUE.
          ILAST=.TRUE.
          CALL DPFRT5(STATVA,STATCD,PVAL,
     1                CUT0,CUT50,CUT75,CUT90,CUT95,
     1                CUT975,CUT99,CUT999,
     1                IFLAGU,IFRST,ILAST,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'BTES')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBTES--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NLOCAL,STATVA,STATCD
 9014   FORMAT('NLOCAL,STATVA,STATCD = ',I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBTE2(Y,TAG,N,IVARID,IVARI2,ICASAN,
     1                  STATVA,STATCD,PVAL,STANU1,STANU2,
     1                  CUT0,CUT50,CUT75,CUT90,CUT95,CUT99,CUT999,
     1                  ICAPSW,ICAPTY,IFORSW,IMULT,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--THIS ROUTINE CARRIES OUT BARTLETT'S TEST
C              (K-SAMPLE HOMOSCEDASTICITY TEST)
C     EXAMPLE--BARTLETT'S TEST Y TAG
C     REFERENCE--DIXON & MASSEY, PAGE 179-180
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--94/2
C     ORIGINAL VERSION--FEBRUARY  1994.
C     UPDATED         --AUGUST    1999.  ADD NEW DEFINITION
C     UPDATED         --MAY       2011. USE DPTAB1 AND DPDTA4 TO PRINT
C                                       OUTPUT TABLES.  THIS ADDS
C                                       HTML/LATEX/RTF SUPPORT AS WELL.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IMULT
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION TAG(*)
C
      DIMENSION DTAG(1000)
      DIMENSION YTEMP(1000)
      DIMENSION ANI(1000)
      DIMENSION VARI(1000)
C
      PARAMETER (NUMALP=8)
      REAL ALPHA(NUMALP)
C
      PARAMETER(NUMCLI=4)
      PARAMETER(MAXLIN=1)
      PARAMETER (MAXROW=15)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*1  ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      DATA ALPHA/
     1 0.0, 50.0, 75.0, 90.0, 95.0, 97.5, 99.0, 99.9/
C
      ISUBN1='DPBT'
      ISUBN2='E2  '
C
      IERROR='NO'
      IWRITE='OFF'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BTE2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPBTE2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASAN,N
   52   FORMAT('IBUGA3,ISUBRO,ICASAN,N = ',3(A4,2X),I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I),TAG(I)
   57     FORMAT('I,Y(I),TAG(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N.LE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1111)
 1111   FORMAT('***** ERROR IN BARTLETT TEST--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1113)
 1113   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE RESPONSE ',
     1         'VARIABLE IS LESS THAN 2.')
        WRITE(ICOUT,1115)N
 1115   FORMAT('      THE SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO1135I=2,N
        IF(Y(I).NE.HOLD)GOTO1139
 1135 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1111)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1133)HOLD
 1133 FORMAT('      THE RESPONSE VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      GOTO9000
 1139 CONTINUE
C
      HOLD=TAG(1)
      DO1235I=2,N
        IF(TAG(I).NE.HOLD)GOTO1239
 1235 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1111)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1231)HOLD
 1231 FORMAT('      THE GROUP-ID VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      GOTO9000
 1239 CONTINUE
C
C               **************************************************
C               **  STEP 21--                                   **
C               **  CARRY OUT CALCULATIONS FOR BARTLETT'S TEST  **
C               **  THAT ARE COMMON TO BOTH THE DIXON-MASSEY    **
C               **  DEFINITION AND THE STANDARD DEFINITION.     **
C               **************************************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DISTIN(TAG,N,IWRITE,DTAG,NUMDIS,IBUGA3,IERROR)
C
      KPRIME=0
      NPRIME=0
      DO2120IDIS=1,NUMDIS
        J=0
        DO2130I=1,N
          IF(TAG(I).EQ.DTAG(IDIS))THEN
            J=J+1
            YTEMP(J)=Y(I)
          ENDIF
 2130   CONTINUE
        ANI(IDIS)=J
        IF(J.GE.2)THEN
          KPRIME=KPRIME+1
          NPRIME=NPRIME+J
          CALL VAR(YTEMP,J,IWRITE,VARI(IDIS),IBUGA3,IERROR)
        ENDIF
 2120 CONTINUE
      ANPRIM=NPRIME
      AKPRIM=KPRIME
C
      TERM1=0.0
      TERM2=0.0
      TERM3=0.0
      DO2140IDIS=1,NUMDIS
        J=INT(ANI(IDIS)+0.5)
        IF(J.GE.2)THEN
          TERM1=TERM1+(ANI(IDIS)-1.0)*VARI(IDIS)
          TERM2=TERM2+(ANI(IDIS)-1.0)*LOG(VARI(IDIS))
          TERM3=TERM3+(1.0/(ANI(IDIS)-1.0))
        ENDIF
 2140 CONTINUE
C
      ANUM=TERM1
      ADEN=NPRIME-KPRIME
      VARPOO=ANUM/ADEN
C
      AM=(ANPRIM-AKPRIM)*LOG(VARPOO)-TERM2
C
      TERM4=1.0/(3.0*(AKPRIM-1.0))
      TERM5=1.0/(ANPRIM-AKPRIM)
      A=TERM4*(TERM3-TERM5)
C
      ANU1=AKPRIM-1.0
      NU1=INT(ANU1+0.5)
      ANU1=REAL(NU1)
      STANU1=ANU1
C
C               **************************************************
C               **  STEP 22--                                   **
C               **  CARRY OUT CALCULATIONS FOR BARTLETT'S TEST  **
C               **  DIXON-MASSEY DEFINITION                     **
C               **************************************************
C
      IF(ICASAN.EQ.'DMBT')THEN
        ISTEPN='22'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BTE2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ANU2=(AKPRIM+1.0)/(A**2)
        NU2=INT(ANU2+0.5)
        ANU2=REAL(NU2)
        STANU2=ANU2
C
        B=ANU2/(1.0-A+(2.0/ANU2))
C
        ANUM=ANU2*AM
        ADEN=ANU1*(B-AM)
        STATVA=ANUM/ADEN
        CALL FCDF(STATVA,NU1,NU2,STATCD)
        PVAL=1.0 - STATCD
        CUT0=0.0
        CALL FPPF(.50,NU1,NU2,CUT50)
        CALL FPPF(.75,NU1,NU2,CUT75)
        CALL FPPF(.90,NU1,NU2,CUT90)
        CALL FPPF(.95,NU1,NU2,CUT95)
        CALL FPPF(.975,NU1,NU2,CUT975)
        CALL FPPF(.99,NU1,NU2,CUT99)
        CALL FPPF(.999,NU1,NU2,CUT999)
C
C               **************************************************
C               **  STEP 23--                                   **
C               **  CARRY OUT CALCULATIONS FOR BARTLETT'S TEST  **
C               **  STANDARD     DEFINITION                     **
C               **************************************************
      ELSE
C
        ISTEPN='23'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BTE2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ANU2=0.0
        NU2=0
        STANU2=ANU2
C
        C=1.0 + A
        STATVA=AM/C
C
        CUT0=0.0
        CALL CHSCDF(STATVA,NU1,STATCD)
        PVAL=1.0 - STATCD
        CALL CHSPPF(.50,NU1,CUT50)
        CALL CHSPPF(.75,NU1,CUT75)
        CALL CHSPPF(.90,NU1,CUT90)
        CALL CHSPPF(.95,NU1,CUT95)
        CALL CHSPPF(.975,NU1,CUT975)
        CALL CHSPPF(.99,NU1,CUT99)
        CALL CHSPPF(.999,NU1,CUT999)
      ENDIF
C
C               ******************************
C               **   STEP 42--              **
C               **   WRITE OUT EVERYTHING   **
C               **   FOR   BARTLETT'S TEST  **
C               ******************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Bartlett Test for Homogeneous Variance'
      NCTITL=38
      IF(ICASAN.EQ.'DMBT')THEN
        ITITLZ='(Dixon-Massey Definition)'
        NCTITZ=25
      ELSE
        ITITLZ='(Standard Definition)'
        NCTITZ=21
      ENDIF
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      IF(IMULT.EQ.'OFF')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Response Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
C
        ICNT=ICNT+1
        ITEXT(ICNT)='Group-ID Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(2)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(2)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='H0: Groups are Homogeneous with'
      NCTEXT(ICNT)=31
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='    Respect to Variance'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Ha: Groups are Not Homogeneous with'
      NCTEXT(ICNT)=35
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='    Respect to Variance'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Total Number of Observations:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Groups:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=REAL(NUMDIS)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Bartlett Test Statistic Value:'
      NCTEXT(ICNT)=30
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='CDF of Test Statistic:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=STATCD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='P-Value:'
      NCTEXT(ICNT)=8
      AVALUE(ICNT)=PVAL
      IDIGIT(ICNT)=NUMDIG
C
      NUMROW=ICNT
      DO4210I=1,NUMROW
        NTOT(I)=15
 4210 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='42A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITLE=' '
      NCTITL=0
C
      ITITL9=' '
      NCTIT9=0
      IF(ICASAN.EQ.'DMBT')THEN
        ITITLE(1:55)=
     1  'Percent Points of the F Reference Distribution'
        NCTITL=46
      ELSE
        ITITLE(1:55)=
     1  'Percent Points of the Chi-Square Reference Distribution'
        NCTITL=55
      ENDIF
      NUMLIN=1
      NUMROW=8
      NUMCOL=3
      ITITL2(1,1)='Percent Point'
      ITITL2(1,2)=' '
      ITITL2(1,3)='Value'
      NCTIT2(1,1)=13
      NCTIT2(1,2)=1
      NCTIT2(1,3)=5
C
      NMAX=0
      DO4221I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.2)NTOT(I)=5
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=NUMDIG
        ITYPCO(I)='NUME'
 4221 CONTINUE
      ITYPCO(2)='ALPH'
      IDIGIT(1)=1
      IDIGIT(3)=3
      DO4223I=1,NUMROW
        DO4225J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          NCVALU(I,J)=0
          AMAT(I,J)=0.0
          IF(J.EQ.1)THEN
            AMAT(I,J)=ALPHA(I)
          ELSEIF(J.EQ.2)THEN
            IVALUE(I,J)='='
            NCVALU(I,J)=1
          ELSEIF(J.EQ.3)THEN
            IF(I.EQ.1)THEN
              AMAT(I,J)=RND(CUT0,IDIGIT(J))
            ELSEIF(I.EQ.2)THEN
              AMAT(I,J)=RND(CUT50,IDIGIT(J))
            ELSEIF(I.EQ.3)THEN
              AMAT(I,J)=RND(CUT75,IDIGIT(J))
            ELSEIF(I.EQ.4)THEN
              AMAT(I,J)=RND(CUT90,IDIGIT(J))
            ELSEIF(I.EQ.5)THEN
              AMAT(I,J)=RND(CUT95,IDIGIT(J))
            ELSEIF(I.EQ.6)THEN
              AMAT(I,J)=RND(CUT975,IDIGIT(J))
            ELSEIF(I.EQ.7)THEN
              AMAT(I,J)=RND(CUT99,IDIGIT(J))
            ELSEIF(I.EQ.8)THEN
              AMAT(I,J)=RND(CUT999,IDIGIT(J))
            ENDIF
          ENDIF
 4225   CONTINUE
 4223 CONTINUE
C
      IWHTML(1)=150
      IWHTML(2)=50
      IWHTML(3)=150
      IWRTF(1)=2000
      IWRTF(2)=IWRTF(1)+500
      IWRTF(3)=IWRTF(2)+2000
      IFRST=.TRUE.
      ILAST=.FALSE.
C
      ISTEPN='42C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='42D'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CDF1=CUT90
      CDF2=CUT95
      CDF3=CUT975
      CDF4=CUT99
C
      ITITL9=' '
      NCTIT9=0
      ITITLE='Conclusions (Upper 1-Tailed Test)'
      NCTITL=33
      NUMLIN=1
      NUMROW=4
      NUMCOL=4
      ITITL2(1,1)='Alpha'
      ITITL2(1,2)='CDF'
      ITITL2(1,3)='Critical Value'
      ITITL2(1,4)='Conclusion'
      NCTIT2(1,1)=5
      NCTIT2(1,2)=3
      NCTIT2(1,3)=14
      NCTIT2(1,4)=10
C
      NMAX=0
      DO4321I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1 .OR. I.EQ.2)NTOT(I)=7
        IF(I.EQ.3)NTOT(I)=17
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=3
        ITYPCO(I)='ALPH'
 4321 CONTINUE
      ITYPCO(3)='NUME'
      IDIGIT(1)=0
      IDIGIT(2)=0
      DO4323I=1,NUMROW
        DO4325J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          NCVALU(I,J)=0
          AMAT(I,J)=0.0
 4325   CONTINUE
 4323 CONTINUE
      IVALUE(1,1)='10%'
      IVALUE(2,1)='5%'
      IVALUE(3,1)='2.5%'
      IVALUE(4,1)='1%'
      IVALUE(1,2)='90%'
      IVALUE(2,2)='95%'
      IVALUE(3,2)='97.5%'
      IVALUE(4,2)='99%'
      NCVALU(1,1)=3
      NCVALU(2,1)=2
      NCVALU(3,1)=4
      NCVALU(4,1)=2
      NCVALU(1,2)=3
      NCVALU(2,2)=3
      NCVALU(3,2)=5
      NCVALU(4,2)=3
      IVALUE(1,4)='Accept H0'
      IVALUE(2,4)='Accept H0'
      IVALUE(3,4)='Accept H0'
      IVALUE(4,4)='Accept H0'
      NCVALU(1,4)=9
      NCVALU(2,4)=9
      NCVALU(3,4)=9
      NCVALU(4,4)=9
      IF(STATVA.GT.CUT90)IVALUE(1,4)='Reject H0'
      IF(STATVA.GT.CUT95)IVALUE(2,4)='Reject H0'
      IF(STATVA.GT.CUT975)IVALUE(3,4)='Reject H0'
      IF(STATVA.GT.CUT99)IVALUE(4,4)='Reject H0'
      AMAT(1,3)=RND(CUT90,IDIGIT(3))
      AMAT(2,3)=RND(CUT95,IDIGIT(3))
      AMAT(3,3)=RND(CUT975,IDIGIT(3))
      AMAT(4,3)=RND(CUT99,IDIGIT(3))
C
      IWHTML(1)=150
      IWHTML(2)=150
      IWHTML(3)=150
      IWHTML(4)=150
      IWRTF(1)=1500
      IWRTF(2)=IWRTF(1)+1500
      IWRTF(3)=IWRTF(2)+2000
      IWRTF(4)=IWRTF(3)+2000
      IFRST=.FALSE.
      ILAST=.TRUE.
C
      ISTEPN='42E'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'BTE2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBTE2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)IERROR,STATVA,STATCD,PVAL
 9012   FORMAT('IERROR,STATVA,STATCD,PVAL = ',A4,2X,3G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBUGS(IBUGS2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--DISPLAY CONTENTS OF DATAPLOT BUGS FILE.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--86/1
C     ORIGINAL VERSION--OCTOBER   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --DECEMBER  1985.
C     UPDATED         --APRIL     1992.  COMMENT OUT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGS2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      INCLUDE 'DPCOPA.INC'
C
      CHARACTER (LEN=MAXFNC) :: IFILE
      CHARACTER*12 ISTAT
      CHARACTER*12 IFORM
      CHARACTER*12 IACCES
      CHARACTER*12 IPROT
      CHARACTER*12 ICURST
      CHARACTER*4 IENDFI
      CHARACTER*4 IREWIN
      CHARACTER*4 ISUBN0
      CHARACTER*4 IERRFI
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER (LEN=MAXFNC) :: ISTRIN
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOF2.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBU'
      ISUBN2='GS  '
      ISUBN0='BUGS'
      IFOUND='YES'
      IERROR='NO'
C
      IF(IBUGS2.EQ.'ON' .OR. ISUBRO.EQ.'BUGS')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBUGS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGS2,ISUBRO,IERROR,IBUGNU
   53   FORMAT('IBUGS2,ISUBRO,IERROR,IBUGNU = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,62)IBUGNA(1:80)
   62   FORMAT('IBUGNA = ',A80)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)IBUGST,IBUGFO,IBUGAC,IBUGCS
   63   FORMAT('IBUGST,IBUGFO,IBUGAC,IBUGCS = ',3(A12,2X),A12)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **************************
C               **  STEP 11--           **
C               **  COPY OVER VARIABLES **
C               **************************
C
      ISTEPN='11'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'BUGS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOUNIT=IBUGNU
      IFILE=IBUGNA
      ISTAT=IBUGST
      IFORM=IBUGFO
      IACCES=IBUGAC
      IPROT=IBUGPR
      ICURST=IBUGCS
C
      IERRFI='NO'
C
      IF(IBUGS2.EQ.'ON' .OR. ISUBRO.EQ.'BUGS')THEN
        WRITE(ICOUT,1193)ISUBN0,IERRFI,IOUNIT
 1193   FORMAT('ISUBB0,IERRFI,IOUNIT = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1194)IFILE(1:80)
 1194   FORMAT('IFILE = ',A80)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1195)ISTAT,IFORM,IACCES,IPROT,ICURST
 1195   FORMAT('ISTAT,IFORM,IACCES,IPROT,ICURST = ',4(A12,2X),A12)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 12--                         **
C               **  CHECK TO SEE IF BUGS FILE EXISTS  **
C               ****************************************
C
      ISTEPN='12'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'BUGS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ISTAT.EQ.'NONE')THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1211)
 1211   FORMAT('***** ERROR IN DPBUGS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1212)
 1212   FORMAT('      THE DESIRED BUGS FILE CANNOT BE LISTED BECAUSE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1214)
 1214   FORMAT('      THE REQUIRED SYSTEM MASS STORAGE FILE WHICH ',
     1         'STORES ANY BUGS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1216)
 1216   FORMAT('      IS NOT AVAILABLE AT THIS INSTALLATION.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1217)ISTAT,IBUGST
 1217   FORMAT('ISTAT,IBUGST = ',A12,2X,A12)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
C               *********************
C               **  STEP 31--      **
C               **  OPEN THE FILE  **
C               *********************
C
      ISTEPN='31'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'BUGS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IREWIN='ON'
      CALL DPOPFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
      IF(IERRFI.EQ.'YES')GOTO9000
C
C               ******************************
C               **  STEP 41--               **
C               **  READ THE FILE.          **
C               **  WRITE OUT THE BUGS.     **
C               ******************************
C
      ISTEPN='41'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MESS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ANUMLI=0.0
      READ(IOUNIT,4111,END=4190)ANUMLI
 4111 FORMAT(F10.0)
      NUMLIN=INT(ANUMLI+0.5)
C
      IF(NUMLIN.GT.1)THEN
        DO4120I=1,NUMLIN
          READ(IOUNIT,4121,END=4190)(ISTRIN(J:J),J=1,80)
 4121     FORMAT(80A1)
          NMAX=80
          CALL DPDB80(ISTRIN,JMAX,NMAX,IBUGS2,ISUBRO,IERROR)
          IF(JMAX.GE.1)THEN
            WRITE(ICOUT,4122)(ISTRIN(J:J),J=1,JMAX)
 4122       FORMAT(5X,80A1)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ENDIF
 4120   CONTINUE
      ENDIF
C
 4190 CONTINUE
C
C               ***********************
C               **  STEP 51--        **
C               **  CLOSE THE FILE.  **
C               ***********************
C
      ISTEPN='51'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'BUGS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IENDFI='OFF'
      IREWIN='ON'
      CALL DPCLFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1IENDFI,IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGS2.EQ.'ON' .OR. ISUBRO.EQ.'BUGS')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBUGS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBWCO(XTEMP1,XTEMP2,MAXNXT,ICASAN,
     1                  ICAPSW,IFORSW,IMULT,IREPL,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE (SYMMETRIC) CONFIDENCE LIMITS FOR THE MEAN
C              FOR PROBABILITY VALUE P = .90, .95, .99, .999, AND .9999.
C              BASED ON BIWEIGHT LOCATION AND SCALE ESTIMATES.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     REFERENCE--"DATA ANALYSIS AND RGRESSION: A SECOND COURSE IN
C                STATISTICS", MOSTELLER AND TUKEY, ADDISON-WESLEY,
C                1977.
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2001/11
C     ORIGINAL VERSION--NOVEMBER  2001.
C     UPDATED         --OCTOBER   2003. ADD SUPPORT FOR HTML, LATEX OUTPUT
C     UPDATED         --MARCH     2010. USE DPPARS
C     UPDATED         --MARCH     2010. USE DPDTA1, DPDTA4 TO GENERATE
C                                       HTML, LATEX, RTF FORMAT
C     UPDATED         --MARCH     2010. SUPPORT FOR MULTIPLE RESPONSE
C                                       VARIABLES AND FOR GROUP-ID
C                                       VARIABLES (I.E., REPLICATION
C                                       CASE)
C     UPDATED         --MARCH     2010. USE DPPAR3 TO EXTRACT EITHER A
C                                       RESPONSE VARIABLE OR A MATRIX
C                                       NAME
C     UPDATED         --AUGUST    2019. ADD CTL999, CTU999
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASEQ
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IFLAGU
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
C
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      CHARACTER*4 IVARID(MAXSPN)
      CHARACTER*4 IVARI2(MAXSPN)
      REAL PVAR(MAXSPN)
      REAL PID(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION W(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
C
      DIMENSION XDESGN(MAXOBV,6)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XIDTE3(MAXOBV)
      DIMENSION XIDTE4(MAXOBV)
      DIMENSION XIDTE5(MAXOBV)
      DIMENSION XIDTE6(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB2),XIDTE2(1))
      EQUIVALENCE (GARBAG(IGARB3),XIDTE3(1))
      EQUIVALENCE (GARBAG(IGARB4),XIDTE4(1))
      EQUIVALENCE (GARBAG(IGARB5),XIDTE5(1))
      EQUIVALENCE (GARBAG(IGARB6),XIDTE6(1))
      EQUIVALENCE (GARBAG(IGARB7),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB8),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB9),W(1))
      EQUIVALENCE (GARBAG(IGAR10),XDESGN(1,1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPBW'
      ISUBN2='CO  '
      IFOUND='YES'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *************************************************
C               **  TREAT THE BIWEIGHT CONFIDENCE LIMITS CASE  **
C               *************************************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBWCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ICASAN,MAXNXT
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ICASAN,MAXNXT = ',4(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 1--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='BIWEIGHT CONFIDENCE LIMITS'
      MAXNA=100
      MINNVA=1
      MAXNVA=100
      MINNA=1
      IFLAGE=1
      IF(IREPL.EQ.'ON')THEN
        MAXNVA=7
      ELSE
        MAXNVA=100
        IFLAGE=0
      ENDIF
      MINN2=2
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(NUMVAR.GT.1 .AND. IREPL.EQ.'OFF')IMULT='ON'
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,181)
  181   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,182)NQ,NUMVAR,IMULT,IREPL
  182   FORMAT('NQ,NUMVAR,IMULT,IREPL = ',2I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO185I=1,NUMVAR
            WRITE(ICOUT,187)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  187       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  185     CONTINUE
        ENDIF
      ENDIF
C
C               ***********************************************
C               **  STEP 2--                                 **
C               **  DETERMINE:                               **
C               **  1) NUMBER OF REPLICATION VARIABLES (0-6) **
C               **  2) NUMBER OF RESPONSE    VARIABLES (>= 1)**
C               ***********************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NRESP=0
      NREPL=0
C
      IF(IMULT.EQ.'ON')THEN
        NRESP=NUMVAR
      ELSEIF(IREPL.EQ.'ON')THEN
        NRESP=1
        NREPL=NUMVAR-NRESP
        IF(NREPL.LT.1 .OR. NREPL.GT.6)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN BIWEIGHT CONFIDENCE LIMITS--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
  211     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,213)NREPL
  213     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ELSE
        NRESP=1
      ENDIF
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')THEN
        WRITE(ICOUT,221)NRESP,NREPL
  221   FORMAT('NRESP,NREPL = ',2I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ******************************************************
C               **  STEP 3--                                        **
C               **  GENERATE THE CONFIDENCE LIMITS FOR THE VARIOUS  **
C               **  CASES                                           **
C               ******************************************************
C
      ISTEPN='3'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *****************************************
C               **  STEP 3A--                          **
C               **  CASE 1: SINGLE RESPONSE VARIABLE   **
C               **          WITH NO REPLICATION        **
C               *****************************************
C
      IF(IMULT.EQ.'OFF' .AND. NREPL.EQ.0)THEN
        ISTEPN='3A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        PID(1)=CPUMIN
        IVARID(1)=IVARN1(1)
        IVARI2(1)=IVARN2(1)
        IF(ICASAN.EQ.'TWOV')THEN
          PID(2)=CPUMIN
          IVARID(2)=IVARN1(2)
          IVARI2(2)=IVARN2(2)
        ENDIF
C
        ICOL=1
        NUMVA2=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y,XTEMP1,XTEMP2,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(ICASAN.EQ.'TWOV')THEN
          ICOL=2
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                X,XTEMP1,XTEMP2,NLOCA2,NLOCA3,NLOCA3,ICASE,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
        ENDIF
C
C               ******************************************************
C               **  STEP 3B--
C               **  PREPARE FOR ENTRANCE INTO DPBWC2--
C               **  SET THE WEIGHT VECTOR TO UNITY THROUGHOUT.
C               ******************************************************
C
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')THEN
          ISTEPN='3B'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,331)
  331     FORMAT('***** FROM DPBWCO, AS WE ARE ABOUT TO CALL DPBWC2--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,332)NLOCAL,NLOCA2,MAXN
  332     FORMAT('NLOCAL,NLOCA2,MAXN = ',3I8)
          CALL DPWRST('XXX','BUG ')
          DO335I=1,N
            WRITE(ICOUT,336)I,Y(I)
  336       FORMAT('I,Y(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
  335     CONTINUE
        ENDIF
C
        CALL DPBWC2(Y,NLOCAL,X,NLOCA2,W,
     1              XTEMP1,XTEMP2,MAXNXT,
     1              PID,IVARID,IVARI2,NREPL,
     1              CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1              CTL999,CTU999,
     1              ICAPSW,ICAPTY,IFORSW,
     1              ICASAN,ISUBRO,IBUGA3,IERROR)
C
        IFLAGU='ON'
        IFRST=.FALSE.
        ILAST=.FALSE.
        CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1              CTL999,CTU999,
     1              IFLAGU,IFRST,ILAST,ICASAN,
     1              IBUGA2,IBUGA3,ISUBRO,IERROR)
C
C               *******************************************
C               **  STEP 4A--                            **
C               **  CASE 2: MULTIPLE RESPONSE VARIABLES  **
C               *******************************************
C
      ELSEIF(IMULT.EQ.'ON' .AND. ICASAN.EQ.'ONEV')THEN
        ISTEPN='4A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
        NCURVE=0
        DO410IRESP=1,NRESP
          NCURVE=NCURVE+1
C
          IINDX=ICOLR(IRESP)
          PID(1)=CPUMIN
          IVARID(1)=IVARN1(IRESP)
          IVARI2(1)=IVARN2(IRESP)
C
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,411)IRESP,NCURVE
  411       FORMAT('IRESP,NCURVE = ',2I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y,XTEMP1,XTEMP2,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C         *****************************************************
C         **  STEP 4B--                                      **
C         *****************************************************
C
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'BWCO')THEN
            ISTEPN='4B'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,422)
  422       FORMAT('***** FROM THE MIDDLE  OF DPBWCO--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,423)ICASAN,NUMVAR,NLOCAL,IRESP
  423       FORMAT('ICASAN,NUMVAR,NLOCAL,IRESP = ',A4,3I8)
            CALL DPWRST('XXX','BUG ')
            IF(NLOCAL.GE.1)THEN
              DO425I=1,NLOCAL
                WRITE(ICOUT,426)I,Y(I)
  426           FORMAT('I,Y(I) = ',I8,F12.5)
                CALL DPWRST('XXX','BUG ')
  425         CONTINUE
            ENDIF
          ENDIF
C
          CALL DPBWC2(Y,NLOCAL,X,NLOCA2,W,
     1                XTEMP1,XTEMP2,MAXNXT,
     1                PID,IVARID,IVARI2,NREPL,
     1                CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                CTL999,CTU999,
     1                ICAPSW,ICAPTY,IFORSW,
     1                ICASAN,ISUBRO,IBUGA3,IERROR)
C
          IFLAGU='FILE'
          IFRST=.FALSE.
          ILAST=.FALSE.
          IF(IRESP.EQ.1)IFRST=.TRUE.
          IF(IRESP.EQ.NRESP)ILAST=.TRUE.
          CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                CTL999,CTU999,
     1                IFLAGU,IFRST,ILAST,ICASAN,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
C
  410   CONTINUE
C
C               ****************************************************
C               **  STEP 5A--                                     **
C               **  CASE 3: ONE OR MORE REPLICATION VARIABLES.    **
C               **          FOR THIS CASE, ALL VARIABLES MUST     **
C               **          HAVE THE SAME LENGTH.                 **
C               ****************************************************
C
      ELSEIF(IREPL.EQ.'ON')THEN
        ISTEPN='5A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        J=0
        IMAX=NRIGHT(1)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO510I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO510
          J=J+1
C
C         RESPONSE VARIABLE IN Y
C
          ICOLC=1
          IJ=MAXN*(ICOLR(ICOLC)-1)+I
          IF(ICOLR(ICOLC).LE.MAXCOL)Y(J)=V(IJ)
          IF(ICOLR(ICOLC).EQ.MAXCP1)Y(J)=PRED(I)
          IF(ICOLR(ICOLC).EQ.MAXCP2)Y(J)=RES(I)
          IF(ICOLR(ICOLC).EQ.MAXCP3)Y(J)=YPLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP4)Y(J)=XPLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP5)Y(J)=X2PLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP6)Y(J)=TAGPLO(I)
C
C         SECOND RESPONSE VARIABLE FOR DIFFERENCE OF MEANS CASE
C
          IF(ICASAN.EQ.'TWOV')THEN
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)X(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)X(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)X(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)X(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)X(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)X(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)X(J)=TAGPLO(I)
          ELSE
            X(J)=0.0
          ENDIF
C
          IF(NREPL.GE.1)THEN
            DO520IR=1,MIN(NREPL,6)
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)XDESGN(J,IR)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XDESGN(J,IR)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XDESGN(J,IR)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XDESGN(J,IR)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XDESGN(J,IR)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XDESGN(J,IR)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XDESGN(J,IR)=TAGPLO(I)
  520       CONTINUE
          ENDIF
C
  510   CONTINUE
        NLOCAL=J
C
        ISTEPN='5B'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'CONF')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        PID(1)=CPUMIN
        IVARID(1)=IVARN1(1)
        IVARI2(1)=IVARN2(1)
        IADD=1
        IF(ICASAN.EQ.'TWOV')THEN
          IADD=2
          PID(2)=CPUMIN
          IVARID(2)=IVARN1(2)
          IVARI2(2)=IVARN2(2)
        ENDIF
        DO540II=1,NREPL
          IVARID(II+IADD)=IVARN1(II+IADD)
          IVARI2(II+IADD)=IVARN2(II+IADD)
  540   CONTINUE
C
C       *****************************************************
C       **  STEP 5C--                                      **
C       **                                                 **
C       **  FOR THIS CASE, WE NEED TO LOOP THROUGH THE     **
C       **  VARIOUS REPLICATIONS.                          **
C       *****************************************************
C
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'CONF')THEN
          ISTEPN='5C'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,541)
  541     FORMAT('***** FROM THE MIDDLE  OF DPCONF--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,542)ICASAN,NUMVAR,NLOCAL,NLOCA2,NREPL
  542     FORMAT('ICASAN,NUMVAR,NLOCAL,NLOCA2,NREPL = ',A4,2X,4I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO545I=1,NLOCAL
              WRITE(ICOUT,546)I,Y(I),X(I),XDESGN(I,1),XDESGN(I,2)
  546         FORMAT('I,Y(I),X(I),XDESGN(I,1),XDESGN(I,2) = ',
     1               I8,4F12.5)
              CALL DPWRST('XXX','BUG ')
  545       CONTINUE
          ENDIF
        ENDIF
C
C       *****************************************************
C       **  STEP 5C--                                      **
C       **  FIND THE DISTINCT VALUES IN EACH OF THE        **
C       **  REPLICATION VARIABLES.                         **
C       *****************************************************
C
        CALL DPPP5(XDESGN(1,1),XDESGN(1,2),XDESGN(1,3),
     1             XDESGN(1,4),XDESGN(1,5),XDESGN(1,6),
     1             NREPL,NLOCAL,MAXOBV,
     1             XIDTEM,XIDTE2,XIDTE3,XIDTE4,XIDTE5,XIDTE6,
     1             XTEMP1,XTEMP2,
     1             NUMSE1,NUMSE2,NUMSE3,NUMSE4,NUMSE5,NUMSE6,
     1             IBUGA3,ISUBRO,IERROR)
C
C       *****************************************************
C       **  STEP 5D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        NPLOTP=0
        NCURVE=0
        IF(NREPL.EQ.1)THEN
          J=0
          DO1110ISET1=1,NUMSE1
            K=0
            PID(IADD+1)=XIDTEM(ISET1)
            DO1130I=1,NLOCAL
              IF(XIDTEM(ISET1).EQ.XDESGN(I,1))THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1130       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBWC2(TEMP1,NTEMP,TEMP2,NTEMP,W,
     1                    XTEMP1,XTEMP2,MAXNXT,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ICASAN,ISUBRO,IBUGA3,IERROR)
            ENDIF
C
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1110     CONTINUE
        ELSEIF(NREPL.EQ.2)THEN
          J=0
          NTOT=NUMSE1*NUMSE2
          DO1210ISET1=1,NUMSE1
          DO1220ISET2=1,NUMSE2
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            DO1290I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1290       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NTEMP.GT.0)THEN
              CALL DPBWC2(TEMP1,NTEMP,TEMP2,NTEMP,W,
     1                    XTEMP1,XTEMP2,MAXNXT,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ICASAN,ISUBRO,IBUGA3,IERROR)
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1220     CONTINUE
 1210     CONTINUE
        ELSEIF(NREPL.EQ.3)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3
          DO1310ISET1=1,NUMSE1
          DO1320ISET2=1,NUMSE2
          DO1330ISET3=1,NUMSE3
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            DO1390I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1390       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBWC2(TEMP1,NTEMP,TEMP2,NTEMP,W,
     1                    XTEMP1,XTEMP2,MAXNXT,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ICASAN,ISUBRO,IBUGA3,IERROR)
            ENDIF
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1330     CONTINUE
 1320     CONTINUE
 1310     CONTINUE
        ELSEIF(NREPL.EQ.4)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4
          DO1410ISET1=1,NUMSE1
          DO1420ISET2=1,NUMSE2
          DO1430ISET3=1,NUMSE3
          DO1440ISET4=1,NUMSE4
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            PID(4+IADD)=XIDTE4(ISET4)
            DO1490I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1490       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBWC2(TEMP1,NTEMP,TEMP2,NTEMP,W,
     1                    XTEMP1,XTEMP2,MAXNXT,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ICASAN,ISUBRO,IBUGA3,IERROR)
            ENDIF
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1440     CONTINUE
 1430     CONTINUE
 1420     CONTINUE
 1410     CONTINUE
        ELSEIF(NREPL.EQ.5)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5
          DO1510ISET1=1,NUMSE1
          DO1520ISET2=1,NUMSE2
          DO1530ISET3=1,NUMSE3
          DO1540ISET4=1,NUMSE4
          DO1550ISET5=1,NUMSE5
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            PID(4+IADD)=XIDTE4(ISET4)
            PID(5+IADD)=XIDTE5(ISET4)
            DO1590I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1590       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBWC2(TEMP1,NTEMP,TEMP2,NTEMP,W,
     1                    XTEMP1,XTEMP2,MAXNXT,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ICASAN,ISUBRO,IBUGA3,IERROR)
            ENDIF
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1550     CONTINUE
 1540     CONTINUE
 1530     CONTINUE
 1520     CONTINUE
 1510     CONTINUE
        ELSEIF(NREPL.EQ.6)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5*NUMSE6
          DO1610ISET1=1,NUMSE1
          DO1620ISET2=1,NUMSE2
          DO1630ISET3=1,NUMSE3
          DO1640ISET4=1,NUMSE4
          DO1650ISET5=1,NUMSE5
          DO1660ISET6=1,NUMSE6
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            PID(4+IADD)=XIDTE4(ISET4)
            PID(5+IADD)=XIDTE5(ISET4)
            PID(6+IADD)=XIDTE6(ISET4)
            DO1690I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5) .AND.
     1           XIDTE6(ISET6).EQ.XDESGN(I,6)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1690       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPBWC2(TEMP1,NTEMP,TEMP2,NTEMP,W,
     1                    XTEMP1,XTEMP2,MAXNXT,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ICASAN,ISUBRO,IBUGA3,IERROR)
            ENDIF
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1660     CONTINUE
 1650     CONTINUE
 1640     CONTINUE
 1630     CONTINUE
 1620     CONTINUE
 1610     CONTINUE
        ENDIF
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BWCO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBWCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)ICASEQ,NRIGHT(1),NS
 9014   FORMAT('ICASEQ,NRIGHT(1),NS = ',A4,2X,2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBWC2(Y,N,X,N2,W,
     1                  XTEMP1,XTEMP2,MAXNXT,
     1                  PID,IVARID,IVARI2,NREPL,
     1                  CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  ICASAN,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE GENERATES BIWEIGHT CONFIDENCE LIMITS
C              FOR THE DATA IN THE INPUT VECTOR Y.
C     NOTE--ASSUMPTION--MODEL IS   RESPONSE = CONSTANT + ERROR.
C     NOTE--WEIGHTS AND TWO VARIABLE (=DIFFERENCE OF TWO MEANS)
C           NOT YET SUPPORTED.  ARGUMENTS PASSED FOR POSSIBLE
C           FUTURE IMPLEMENTATION.
C     INPUT  ARGUMENTS--Y      = THE SINGLE PRECISION VECTOR
C                                OF OBSERVATIONS
C                       N      = THE INTEGER NUMBER OF
C                                OBSERVATIONS IN THE VECTOR Y.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2001/11
C     ORIGINAL VERSION--NOVEMBER  2001.
C     UPDATED         --OCTOBER   2003. ADD SUPPORT FOR HTML, LATEX
C                                       OUTPUT
C     UPDATED         --OCTOBER   2006. CALL LIST TO TPPF
C     UPDATED         --MARCH     2010. USE DPDTA2 AND DPDTA4 TO
C                                       GENERATE OUTPUT (ADDS RTF
C                                       SUPPORT)
C     UPDATED         --MARCH     2010. SOME MODIFICATIONS TO THE
C                                       OUTPUT (AESTHETIC, NOT
C                                       SUBSTANTIVE)
C     UPDATED         --AUGUST    2019. ADD CTL999, CTU999
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASA2
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
C
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION W(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION PID(*)
C
      PARAMETER (NCONF=8)
C
      DIMENSION CONF(NCONF)
      DIMENSION T(NCONF)
      DIMENSION TSDM(NCONF)
      DIMENSION ALOWER(NCONF)
      DIMENSION AUPPER(NCONF)
C
      PARAMETER(NUMCLI=5)
      PARAMETER(MAXLIN=2)
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(ICASAN.EQ.'TWOV')GOTO9000
C
      ISUBN1='DPBW'
      ISUBN2='C2  '
      IERROR='NO'
      IWRITE='OFF'
      ICASA2='BWCO'
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BWC2')THEN
        ISTEPN='1'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPBWC2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)N,N2,NUMDIG,IBUGA3,ICASAN
   52   FORMAT('N,N2,NUMDIG,IBUGA3,ICASAN = ',3I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I),W(I),X(I)
   57     FORMAT('I,Y(I),W(I),X(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
C
      IF(N.LE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,111)
  111   FORMAT('***** ERROR IN BIWEIGHT CONFIDENCE LIMITS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,112)
  112   FORMAT('      THE NUMBER OF OBSERVATIONS IN THE RESPONSE ',
     1         'VARIABLE IS LESS THAN TWO.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,113)N
  113   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO135I=2,N
      IF(Y(I).NE.HOLD)GOTO139
  135 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,111)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,131)HOLD
  131 FORMAT('      THE RESPONSE VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      GOTO9000
  139 CONTINUE
C
C               ***************************************************
C               **  STEP 3--                                     **
C               **  COMPUTE THE BIWEIGHT LOCATION ESTIMATE       **
C               **  COMPUTE THE BIWEIGHT SCALE ESTIMATE          **
C               **  COMPUTE THE SQRT(BIWEIGHT SCALE/N).          **
C               ***************************************************
C
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BWC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL BIWLOC(Y,N,IWRITE,XTEMP1,XTEMP2,MAXNXT,YBW,IBUGA3,IERROR)
      CALL BIWSCA(Y,N,IWRITE,XTEMP1,XTEMP2,MAXNXT,YBSC,IBUGA3,IERROR)
      AN1=N
      YSTERR=SQRT(YBSC/AN1)
C
      V=0.7*(AN1-1.0)
      IV=INT(V+0.5)
C
C               ***************************************
C               **  STEP 4--                         **
C               **  COMPUTE CONFIDENCE LIMITS        **
C               **  FOR VARIOUS PROBABILITY VALUES.  **
C               ***************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BWC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CONF(1)=50.0
      CONF(2)=75.0
      CONF(3)=90.0
      CONF(4)=95.0
      CONF(5)=99.0
      CONF(6)=99.9
      CONF(7)=99.99
      CONF(8)=99.999
C
      DO1400I=1,8
        PCONF=CONF(I)/100.0
        CDF=0.5+PCONF/2.0
        CALL TPPF(CDF,REAL(IV),T(I))
        TSDM(I)=T(I)*YSTERR
        ALOWER(I)=YBW-TSDM(I)
        AUPPER(I)=YBw+TSDM(I)
 1400 CONTINUE
      CUTL90=ALOWER(3)
      CUTU90=AUPPER(3)
      CUTL95=ALOWER(4)
      CUTU95=AUPPER(4)
      CUTL99=ALOWER(5)
      CUTU99=AUPPER(5)
      CTL999=ALOWER(6)
      CTU999=AUPPER(6)
C
C     ADD A FUDGE FACTOR SO THAT CONFIDENCE LEVEL WILL
C     BE PRINTED CORRECTLY TO 3 DECIMAL PLACES.
C
      CONF(1)=50.0001
      CONF(2)=75.0001
      CONF(3)=90.0001
      CONF(4)=95.0001
      CONF(5)=99.0001
      CONF(6)=99.9001
      CONF(7)=99.9901
      CONF(8)=99.9991
C
C               ****************************
C               **  STEP 7--              **
C               **  WRITE EVERYTHING OUT  **
C               ****************************
C
      ISTEPN='7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BWC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      ITITLE='Confidence Limits for Biweight Location'
      NCTITL=39
      ITITLZ='(Two-Sided)'
      NCTITZ=11
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Response Variable: '
      WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
      WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IF(NREPL.GT.0)THEN
        NRESP=1
        DO4101I=1,NREPL
          ICNT=ICNT+1
          ITEMP=I+NRESP
          ITEXT(ICNT)='Factor Variable  : '
          WRITE(ITEXT(ICNT)(17:17),'(I1)')I
          WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(ITEMP)(1:4)
          WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(ITEMP)(1:4)
          NCTEXT(ICNT)=27
          AVALUE(ICNT)=PID(ITEMP)
          IDIGIT(ICNT)=NUMDIG
 4101   CONTINUE
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Biweight Location:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=YBW
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Biweight Scale:'
      NCTEXT(ICNT)=21
      AVALUE(ICNT)=YBSC
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Standard Error:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=YSTERR
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Degrees of Freedom:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=REAL(IV)
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO4210I=1,NUMROW
        NTOT(I)=15
 4210 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='5A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BWC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='5B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'CNF2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDT11(CONF,T,TSDM,ALOWER,AUPPER,
     1            ICASA2,ICAPSW,ICAPTY,NUMDIG,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'BWC2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBWC2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)N,IBUGA3,IERROR
 9012   FORMAT('N,IBUGA3,IERROR = ',I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)YBW,YBSC,YSTERR,IV
 9013   FORMAT('YBW,YBSC,YSTERR,IV = ',3G15.7,I8)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBX(IHARG,IARGT,ARG,NUMARG,
     1                PXSTAR,PYSTAR,PXEND,PYEND,
     1                IBOBPA,IBOBCO,IBOBC2,MAXBXZ,PBOPTH,
     1                AREGBA,IREBLI,IREBCO,IREBC2,MAXRGZ,PREBTH,
     1                IREFSW,IREFCO,IREFC2,
     1                IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1                PBOSHE,PBOSWI,
     1                PTEXHE,PTEXWI,PTEXVG,PTEXHG,
     1                IGRASW,IDIASW,
     1                PGRAXF,PGRAYF,PDIAXC,PDIAYC,PDIAX2,PDIAY2,
     1                PDIAHE,PDIAWI,PDIAVG,PDIAHG,
     1                NUMDEV,IDMANU,IDMODE,IDMOD2,IDMOD3,
     1                IDPOWE,IDCONT,IDCOLO,IDNVPP,IDNHPP,IDUNIT,
     1                IDNVOF,IDNHOF,IDFONT,UNITSW,PDSCAL,
     1                IBACCO,IBACC2,
     1                IBUGD2,IFOUND,IERROR)
C
C     PURPOSE--DRAW ONE OR MORE BOXES (DEPENDING ON HOW MANY NUMBERS ARE
C              PROVIDED).  THE COORDINATES ARE IN STANDARDIZED UNITS OF
C              0 TO 100.
C     NOTE--THE INPUT COORDINATES DEFINE THE OPPOSING CORNERS OF THE BOX.
C     NOTE-THE USUAL INPUT NUMBER OF COORDINATES IS 2 AND THEREFORE THE
C          USUAL INPUT NUMBER OF NUMBERS IS 2*2 = 4.
C     NOTE--IF 2 NUMBERS ARE PROVIDED, THEN THE DRAWN BOX WILL GO FROM
C           THE LAST CURSOR POSITION TO THE (X,Y) POINT (EITHER ABSOLUTE
C           OR RELATIVE) AS DEFINED BY THE 2 NUMBERS.
C     NOTE--IF 4 NUMBERS ARE PROVIDED, THEN THE DRAWN BOX WILL GO FROM
C           THE ABSOLUTE (X,Y) POSITION AS DEFINED BY THE FIRST 2 NUMBERS
C           TO THE (X,Y) POINT (EITHER ABSOLUTE OR RELATIVE) AS DEFINED
C           BY THE THIRD AND FOURTH NUMBERS.
C     NOTE--IF 6 NUMBERS ARE PROVIDED, THEN THE DRAWN BOX WILL GO FROM
C           THE (X,Y) POSITION AS RESULTING FROM THE THIRD AND FOURTH
C           NUMBERS TO THE (X,Y) POINT (EITHER ABSOLUTE OR RELATIVE)
C           AS DEFINED BY THE FIFTH AND SIXTH NUMBERS.
C     NOTE--AND SO FORTH FOR 8, 10, 12, ... NUMBERS.
C     INPUT  ARGUMENTS--IHARG
C                     --IARGT
C                     --ARG
C                     --NUMARG
C                     --PXSTAR
C                     --PYSTAR
C     OUTPUT ARGUMENTS--PXEND
C                     --PYEND
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --NOVEMBER  1982.
C     UPDATED         --JANUARY   1989.  CALL LIST FOR OFFSET VAR (ALAN)
C     UPDATED         --JANUARY   1989.  USE COMMON PARAMETERS (ALAN)
C     UPDATED         --MARCH     1993. ADD BOX SHADOW, PATTERN LINE
C     UPDATED         --MARCH     1993. GLOBALLY RENAMED IBOFPA, IBOFCO
C                                       PBOFTH TO IBOBPA, IBOBCO, PBOPTH
C     UPDATED         --MARCH     1997. SUPPORT FOR DEVICE FONT (ALAN)
C     UPDATED         --JULY      1997. SUPPORT FOR "DATA" UNITS (ALAN)
C     UPDATED         --APRIL     2010. SUPPORT FOR "DSDS" AND
C                                       "SDSD" UNITS (ALAN)
C                                       THIS ALLOWS X AND Y TO USE
C                                       DIFFERENT SETTINGS FOR
C                                       "SCREEN" AND "DATA" (HOWEVER,
C                                       CURRENTLY CANNOT SPECIFY
C                                       DIFFERENTLY FOR X1 AND X2 OR
C                                       Y1 AND Y2)
C     UPDATED         --DECEMBER  2018. SUPPORT FOR "DEVICE ... SCALE"
C                                       COMMAND
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----NON-COMMON VARIABLES-----------------------------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IBOBPA
      CHARACTER*4 IBOBCO
C
      CHARACTER*4 IREBLI
      CHARACTER*4 IREBCO
      CHARACTER*4 IREFSW
      CHARACTER*4 IREFCO
      CHARACTER*4 IREPTY
      CHARACTER*4 IREPLI
      CHARACTER*4 IREPCO
C
      CHARACTER*4 IGRASW
      CHARACTER*4 IDIASW
C
      CHARACTER*4 IDMANU
      CHARACTER*4 IDMODE
      CHARACTER*4 IDMOD2
      CHARACTER*4 IDMOD3
      CHARACTER*4 IDPOWE
      CHARACTER*4 IDCONT
      CHARACTER*4 IDCOLO
CCCCC ADD FOLLOWING LINE MARCH 1997.
      CHARACTER*4 IDFONT
CCCCC ADD FOLLOWING LINE JULY 1997.
      CHARACTER*4 UNITSW
      CHARACTER*4 UNITSX
      CHARACTER*4 UNITSY
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IBUGD2
      CHARACTER*4 IERROR
      CHARACTER*4 ISUBRO
C
      CHARACTER*4 IFIG
      CHARACTER*4 IBELSW
      CHARACTER*4 IERASW
      CHARACTER*4 IBACCO
      CHARACTER*4 ICOPSW
      CHARACTER*4 ITYPEO
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
      DIMENSION IBOBPA(*)
      DIMENSION IBOBCO(*)
      DIMENSION IBOBC2(MAXBXZ,3)
      DIMENSION PBOPTH(*)
C
      DIMENSION AREGBA(*)
      DIMENSION IREBLI(*)
      DIMENSION IREBCO(*)
      DIMENSION IREBC2(MAXRGZ,3)
      DIMENSION PREBTH(*)
      DIMENSION IREFSW(*)
      DIMENSION IREFCO(*)
      DIMENSION IREFC2(MAXBXZ,3)
      DIMENSION IREPTY(*)
      DIMENSION IREPLI(*)
      DIMENSION IREPCO(*)
      DIMENSION IREPC2(MAXBXZ,3)
      DIMENSION PREPTH(*)
      DIMENSION PREPSP(*)
CCCCC MARCH 1993.  ADD FOLLOWING 2 LINES
      DIMENSION PBOSHE(*)
      DIMENSION PBOSWI(*)
      DIMENSION PDSCAL(*)
C
      DIMENSION IDMANU(*)
      DIMENSION IDMODE(*)
      DIMENSION IDMOD2(*)
      DIMENSION IDMOD3(*)
      DIMENSION IDPOWE(*)
      DIMENSION IDCONT(*)
      DIMENSION IDCOLO(*)
CCCCC ADD FOLLOWING LINE MARCH 1997.
      DIMENSION IDFONT(*)
      DIMENSION IDNVPP(*)
      DIMENSION IDNHPP(*)
      DIMENSION IDUNIT(*)
C
      DIMENSION IDNVOF(*)
      DIMENSION IDNHOF(*)
      DIMENSION IBACC2(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOGR.INC'
      INCLUDE 'DPCOBE.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      IERRG4=IERROR
CCCCC IBUGG4=IBUGD2
CCCCC ISUBG4=ISUBRO
C
      IF(UNITSW.EQ.'DATA')THEN
        UNITSX='DATA'
        UNITSY='DATA'
      ELSEIF(UNITSW.EQ.'SCRE')THEN
        UNITSX='SCRE'
        UNITSY='SCRE'
      ELSEIF(UNITSW(1:2).EQ.'SD')THEN
        UNITSX='SCRE'
        UNITSY='DATA'
      ELSEIF(UNITSW(1:2).EQ.'DS')THEN
        UNITSX='DATA'
        UNITSY='SCRE'
      ENDIF
C
      ILOCFN=0
      NUMNUM=0
C
      X1=0.0
      Y1=0.0
      X2=0.0
      Y2=0.0
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'BX')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBX--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)NUMARG,NUMDEV
   53   FORMAT('NUMARG,NUMDEV = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMARG
          WRITE(ICOUT,56)I,IHARG(I),IARGT(I),ARG(I)
   56     FORMAT('I,IHARG(I),IARGT(I),ARG(I) = ',I8,2(2X,A4),G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)PXSTAR,PYSTAR,PXEND,PYEND
   57   FORMAT('PXSTAR,PYSTAR,PXEND,PYEND = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,61)IBOBPA(1),IBOBCO(1),PBOPTH(1)
   61   FORMAT('IBOBPA(1),IBOBCO(1),PBOPTH(1) = ',
     1         2(A4,2X),G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)IREBLI(1),IREBCO(1),PREBTH(1),AREGBA(1)
   63   FORMAT('IREBLI(1),IREBCO(1),PREBTH(1),AREGBA(1) = ',
     1         2(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,64)IREFSW(1),IREFCO(1)
   64   FORMAT('IREFSW(1),IREFCO(1) = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,65)IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1)
   65   FORMAT('IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1) = ',
     1         3(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,69)PTEXHE,PTEXWI,PTEXVG,PTEXHG
   69   FORMAT('PTEXHE,PTEXWI,PTEXVG,PTEXHG = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,76)IGRASW,IDIASW
   76   FORMAT('IGRASW,IDIASW = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,77)PGRAXF,PGRAYF,PDIAXC,PDIAYC
   77   FORMAT('PGRAXF,PGRAYF,PDIAXC,PDIAYC = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,78)PDIAHE,PDIAWI,PDIAVG,PDIAHG
   78   FORMAT('PDIAHE,PDIAWI,PDIAVG,PDIAHG = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        DO81I=1,NUMDEV
          WRITE(ICOUT,82)IDMANU(I),IDMODE(I),IDMOD2(I),IDMOD3(I)
   82     FORMAT('IDMANU(I),IDMODE(I),IDMOD2(I),IDMOD3(I) = ',
     1           3(A4,2X),A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,83)IDPOWE(I),IDCONT(I),IDCOLO(I)
   83     FORMAT('IDPOWE(I),IDCONT(I),IDCOLO(I) = ',2(A4,2X),A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,84)IDNVPP(I),IDNHPP(I),IDUNIT(I)
   84     FORMAT('IDNVPP(I),IDNHPP(I),IDUNIT(I) = ',3I8)
          CALL DPWRST('XXX','BUG ')
   81   CONTINUE
        WRITE(ICOUT,88)IBUGG4,ISUBG4,IERRG4,IBUGD2,IFOUND,IERROR
   88   FORMAT('IBUGG4,ISUBG4,IERRG4,IBUGD2,IFOUND,IERROR = ',
     1         5(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFIG='BOX'
      NUMPT=2
      NUMPT2=2*NUMPT
C
C               ********************************
C               **  STEP 0--                  **
C               **  STEP THROUGH EACH DEVICE  **
C               ********************************
C
      IF(NUMDEV.LE.0)GOTO9000
      DO8000IDEVIC=1,NUMDEV
C
      IF(IDPOWE(IDEVIC).EQ.'OFF')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'OFF')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'NULL')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'NONE')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'DISC')GOTO8000
C
      IMANUF=IDMANU(IDEVIC)
      IMODEL=IDMODE(IDEVIC)
      IMODE2=IDMOD2(IDEVIC)
      IMODE3=IDMOD3(IDEVIC)
      IGCONT=IDCONT(IDEVIC)
      IGCOLO=IDCOLO(IDEVIC)
      IGFONT=IDFONT(IDEVIC)
      NUMVPP=IDNVPP(IDEVIC)
      NUMHPP=IDNHPP(IDEVIC)
      ANUMVP=NUMVPP
      ANUMHP=NUMHPP
      IOFFSV=IDNVOF(IDEVIC)
      IOFFSH=IDNHOF(IDEVIC)
      IGUNIT=IDUNIT(IDEVIC)
      PCHSCA=PDSCAL(IDEVIC)
C
C               ************************************
C               **  STEP 1--                      **
C               **  CARRY OUT OPENING OPERATIONS  **
C               **  ON THE GRAPHICS DEVICES       **
C               ************************************
C
      CALL DPOPDE
C
      IBELSW='OFF'
      NUMRIN=0
      IERASW='OFF'
C
      CALL DPOPPL(IGRASW,IBELSW,NUMRIN,IERASW,IBACCO,IBACC2)
C
C               *****************************************
C               **  STEP 2--                           **
C               **  SEARCH FOR COMMAND SPECIFICATIONS  **
C               *****************************************
C
      IF(NUMARG.GE.2.AND.
     1IARGT(1).EQ.'NUMB'.AND.IARGT(2).EQ.'NUMB')
     1GOTO1111
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'ABSO'.AND.
     1IARGT(2).EQ.'NUMB'.AND.IARGT(3).EQ.'NUMB')
     1GOTO1112
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'RELA'.AND.
     1IARGT(2).EQ.'NUMB'.AND.IARGT(3).EQ.'NUMB')
     1GOTO1113
      GOTO1130
C
 1111 CONTINUE
      ITYPEO='ABSO'
      ILOCFN=1
      GOTO1119
C
 1112 CONTINUE
      ITYPEO='ABSO'
      ILOCFN=2
      GOTO1119
C
 1113 CONTINUE
      ITYPEO='RELA'
      ILOCFN=2
      GOTO1119
 1119 CONTINUE
C
      IF(ILOCFN.GT.NUMARG)GOTO1129
      DO1120I=ILOCFN,NUMARG
      IF(IARGT(I).EQ.'NUMB')GOTO1120
      GOTO1129
 1120 CONTINUE
      IFOUND='YES'
      GOTO1149
 1129 CONTINUE
      GOTO1130
C
 1130 CONTINUE
      IERRG4='YES'
      WRITE(ICOUT,1131)
 1131 FORMAT('***** ERROR IN DPBX--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1132)
 1132 FORMAT('      ILLEGAL FORM FOR BOX COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1134)
 1134 FORMAT('      TEST EXAMPLE TO DEMONSTRATE THE ',
     1'PROPER FORM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1135)
 1135 FORMAT('      SUPPOSE IT IS DESIRED TO DRAW A BOX ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1136)
 1136 FORMAT('      WITH ONE CORNER AT THE POINT 20 20 ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1137)
 1137 FORMAT('      AND WITH OPPOSITE CORNER AT THE POINT 40 60')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('      THEN THE ALLOWABLE FORMS ARE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      BOX 20 20 40 60 ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      BOX ABSOLUTE 20 20 40 60 ')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
 1149 CONTINUE
C
C               ****************************
C               **  STEP 3--              **
C               **  DRAW OUT THE LINE(S)  **
C               ****************************
C
      NUMNUM=NUMARG-ILOCFN+1
      IF(NUMNUM.LT.NUMPT2)GOTO1151
      GOTO1152
C
 1151 CONTINUE
      J=ILOCFN-1
      X1=PXSTAR
      Y1=PYSTAR
      GOTO1159
C
 1152 CONTINUE
      J=ILOCFN
      IF(J.GT.NUMARG)GOTO1190
      X1=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
CCCCC IF(UNITSW.EQ.'DATA')CALL DPCODS('X',X1,X1,IBUGD2,ISUBRO,IERROR)
      IF(UNITSX.EQ.'DATA')CALL DPCODS('X',X1,X1,IBUGD2,ISUBRO,IERROR)
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      Y1=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
CCCCC IF(UNITSW.EQ.'DATA')CALL DPCODS('Y',Y1,Y1,IBUGD2,ISUBRO,IERROR)
      IF(UNITSY.EQ.'DATA')CALL DPCODS('Y',Y1,Y1,IBUGD2,ISUBRO,IERROR)
      GOTO1159
 1159 CONTINUE
C
 1160 CONTINUE
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      X2=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
CCCCC IF(UNITSW.EQ.'DATA')CALL DPCODS('X',X2,X2,IBUGD2,ISUBRO,IERROR)
      IF(UNITSX.EQ.'DATA')CALL DPCODS('X',X2,X2,IBUGD2,ISUBRO,IERROR)
      IF(ITYPEO.EQ.'RELA')X2=X1+X2
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      Y2=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
CCCCC IF(UNITSW.EQ.'DATA')CALL DPCODS('Y',Y2,Y2,IBUGD2,ISUBRO,IERROR)
      IF(UNITSY.EQ.'DATA')CALL DPCODS('Y',Y2,Y2,IBUGD2,ISUBRO,IERROR)
      IF(ITYPEO.EQ.'RELA')Y2=Y1+Y2
C
      CALL DPBX2(X1,Y1,X2,Y2,
     1           IFIG,
     1           IBOBPA,IBOBCO,IBOBC2,MAXBXZ,PBOPTH,
     1           AREGBA,IREBLI,IREBCO,IREBC2,MAXRGZ,PREBTH,
     1           IREFSW,IREFCO,IREFC2,
     1           IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1           PBOSHE,PBOSWI,
     1           PTEXHE,PTEXWI,PTEXVG,PTEXHG)
C
      X1=X2
      Y1=Y2
C
      GOTO1160
 1190 CONTINUE
C
      PXEND=X2
      PYEND=Y2
C
C               ************************************
C               **  STEP 4--                      **
C               **  CARRY OUT CLOSING OPERATIONS  **
C               **  ON THE GRAPHICS DEVICES       **
C               ************************************
C
      ICOPSW='OFF'
      NUMCOP=0
      CALL DPCLPL(ICOPSW,NUMCOP,
     1            PGRAXF,PGRAYF,
     1            IGRASW,PDIAXC,PDIAYC,PDIAX2,PDIAY2,
     1            PDIAHE,PDIAWI,PDIAVG,PDIAHG)
C
      CALL DPCLDE
C
 8000 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'BX')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBX--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ILOCFN,NUMNUM
 9012   FORMAT('ILOCFN,NUMNUM = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)X1,Y1,X2,Y2
 9013   FORMAT('X1,Y1,X2,Y2 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)PXSTAR,PYSTAR,PXEND,PYEND
 9015   FORMAT('PXSTAR,PYSTAR,PXEND,PYEND = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9027)IFOUND,IERROR
 9027   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPBX2(X1,Y1,X2,Y2,
     1                 IFIG,
     1                 IBOBPA,IBOBCO,IBOBC2,MAXBX,PBOPTH,
     1                 AREGBA,
     1                 IREBLI,IREBCO,IREBC2,MAXRG,PREBTH,
     1                 IREFSW,IREFCO,IREFC2,
     1                 IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
CCCCC                  MARCH 1993.  BOX SHADOW PARAMETERS
     1                 PBOSHE,PBOSWI,
     1                 PTEXHE,PTEXWI,PTEXVG,PTEXHG)
C
C     PURPOSE--DRAW A BOX
C              WITH ONE END OF THE DIAGONAL AT (X1,Y1)
C              AND THE OTHER END AT (X2,Y2).
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --JANUARY   1989. MODIFY CALLS TO DPDRPL (ALAN)
C     UPDATED         --JANUARY   1989. MODIFY CALL  TO DPFIRE (ALAN)
C     UPDATED         --JANUARY   1989. USE COMMON PARAMETERS (ALAN)
C     UPDATED         --MARCH     1993. BOX SHADOW, PATTERN LINE TYPE
C     UPDATED         --MARCH     1993. GLOBALLY RENAMED IBOFPA, IBOFCO
C                                       PBOFTH TO IBOBPA, IBOBCO, PBOPTH
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----NON-COMMON VARIABLES-------------------------------------
C
      CHARACTER*4 IFIG
      CHARACTER*4 IPATT2
C
      CHARACTER*4 IBOBPA
      CHARACTER*4 IBOBCO
C
      CHARACTER*4 IREBLI
      CHARACTER*4 IREBCO
      CHARACTER*4 IREFSW
      CHARACTER*4 IREFCO
      CHARACTER*4 IREPTY
      CHARACTER*4 IREPLI
      CHARACTER*4 IREPCO
C
      CHARACTER*4 IPATT
      CHARACTER*4 ICOLF
      CHARACTER*4 ICOLP
      CHARACTER*4 ICOL
      CHARACTER*4 IFLAG
C
      DIMENSION PX(10)
      DIMENSION PY(10)
CCCCC DIMENSION PX3(10)
CCCCC DIMENSION PY3(10)
C
      DIMENSION IBOBPA(*)
      DIMENSION IBOBCO(*)
      DIMENSION IBOBC2(MAXBX,3)
      DIMENSION PBOPTH(*)
C
      DIMENSION AREGBA(*)
      DIMENSION IREBLI(*)
      DIMENSION IREBCO(*)
      DIMENSION IREBC2(MAXRG,3)
      DIMENSION PREBTH(*)
      DIMENSION IREFSW(*)
      DIMENSION IREFCO(*)
      DIMENSION IREFC2(MAXBX,3)
      DIMENSION IREPTY(*)
      DIMENSION IREPLI(*)
      DIMENSION IREPCO(*)
      DIMENSION IREPC2(MAXBX,3)
      DIMENSION PREPTH(*)
      DIMENSION PREPSP(*)
CCCCC MARCH 1993.  ADD FOLLOWING 2 LINES
      DIMENSION PBOSHE(*)
      DIMENSION PBOSWI(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOGR.INC'
      INCLUDE 'DPCOBE.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'BX2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPBX2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)X1,Y1,X2,Y2
   53   FORMAT('X1,Y1,X2,Y2 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,59)IFIG
   59   FORMAT('IFIG = ',A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,61)IBOBPA(1),IBOBCO(1),PBOPTH(1)
   61   FORMAT('IBOBPA(1),IBOBCO(1),PBOPTH(1) = ',2(A4,2X),G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)IREBLI(1),IREBCO(1),PREBTH(1),AREGBA(1)
   63   FORMAT('IREBLI(1),IREBCO(1),PREBTH(1),AREGBA(1) = ',
     1         2(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,64)IREFSW(1),IREFCO(1)
   64   FORMAT('IREFSW(1),IREFCO(1) = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,65)IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1)
   65   FORMAT('IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1) = ',
     1         3(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,69)PTEXHE,PTEXWI,PTEXVG,PTEXHG
   69   FORMAT('PTEXHE,PTEXWI,PTEXVG,PTEXHG = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,79)IBUGG4,ISUBG4,IERRG4
   79   FORMAT('IBUGG4,ISUBG4,IERRG4 = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 1--                   **
C               **  DETERMINE THE COORDINATES  **
C               **  FOR THE BOX                **
C               *********************************
C
      PX(1)=X1
      PY(1)=Y1
C
      PX(2)=X2
      PY(2)=Y1
C
      PX(3)=X2
      PY(3)=Y2
C
      PX(4)=X1
      PY(4)=Y2
C
      PX(5)=X1
      PY(5)=Y1
C
      NP=5
C
C               ***********************
C               **  STEP 2--         **
C               **  FILL THE FIGURE  **
C               **  (IF CALLED FOR)  **
C               ***********************
C
CCCCC FOLLOWING BLOCK MODIFIED MARCH 1993.
CCCCC USE BOX PARAMETERS RATHER THAN REGION PARAMETERS.
CCCCC IF(IREFSW(1).EQ.'OFF')GOTO2190
      IPATT=IREPTY(1)
      IF(IPATT.EQ.'OFF')GOTO2190
      IF(IPATT.EQ.'EMPT')GOTO2190
      IF(IPATT.EQ.'    ')GOTO2190
      IF(IPATT.EQ.'NONE')GOTO2190
      IF(IPATT.EQ.'BLAN')GOTO2190
      IF(IPATT.EQ.'BLAN')GOTO2190
      IF(IPATT.EQ.'ON')IPATT='SOLI'
CCCCC IPATT2='SOLI'
      IPATT2=IREPLI(1)
      PTHICK=PREPTH(1)
      PXGAP=PREPSP(1)
      PYGAP=PREPSP(1)
CCCCC ICOLF=IREFCO(1)
CCCCC ICOLP=IREPCO(1)
      ICOLF=IREPCO(1)
      ICOLFR=IREFC2(1,1)
      ICOLFG=IREFC2(1,2)
      ICOLFB=IREFC2(1,3)
      ICOLP=ICOLF
      ICOLPR=IREPC2(1,1)
      ICOLPG=IREPC2(1,2)
      ICOLPB=IREPC2(1,3)
      ICOLBR=IREBC2(1,1)
      ICOLBG=IREBC2(1,2)
      ICOLBB=IREBC2(1,3)
      CALL DPFIRE(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,PXGAP,PYGAP,
     1            ICOLF,ICOLFR,ICOLFG,ICOLFB,
     1            ICOLP,ICOLFR,ICOLFG,ICOLFB,
     1            IPATT2)
 2190 CONTINUE
C
C               ***************************
C               **  STEP 3--             **
C               **  DRAW OUT THE FIGURE  **
C               ***************************
C
      IPATT=IBOBPA(1)
      PTHICK=PBOPTH(1)
      ICOL=IBOBCO(1)
      ICOLR=IBOBC2(1,1)
      ICOLG=IBOBC2(1,2)
      ICOLB=IBOBC2(1,3)
      IFLAG='ON'
      CALL DPDRPL(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,
     1            ICOL,ICOLR,ICOLG,ICOLB,
     1            JPATT,JTHICK,PTHIC2,JCOL,IFLAG)
C
CCCCC THE FOLLOWING 2 SECTIONS WERE ADDED
CCCCC TO ADD A SHADOW TO THE BOX   MARCH 1993
C               ***************************
C               **  STEP 4--             **
C               **  DRAW THE BOX SHADOW  **
C               ***************************
C
C
      PSH=PBOSHE(1)
      PSW=PBOSWI(1)
      EPSBS=0.000001
      IF(PSH.LT.EPSBS.AND.PSW.LT.EPSBS)GOTO4190
      PLEFT=X1
      PRIGHT=X2
      IF(X2.LT.X1)THEN
         PLEFT=X2
         PRIGHT=X1
      ENDIF
      PBOTTO=Y1
      PTOP=Y2
      IF(Y2.LT.Y1)THEN
         PBOTTO=Y2
         PTOP=Y1
      ENDIF
      PX(1)=PLEFT+PSW
      PY(1)=PBOTTO-PSH
      PX(2)=PRIGHT+PSW
      PY(2)=PBOTTO-PSH
      PX(3)=PRIGHT+PSW
      PY(3)=PBOTTO
      PX(4)=PLEFT+PSW
      PY(4)=PBOTTO
      PX(5)=PLEFT+PSW
      PY(5)=PBOTTO-PSH
      NP=5
      IPATT='SOLI'
      IPATT2='SOLI'
      ICOLF=IBOBCO(1)
      ICOLFR=IBOBC2(1,1)
      ICOLFG=IBOBC2(1,2)
      ICOLFB=IBOBC2(1,3)
      ICOLP=ICOLF
      ICOLPR=ICOLFR
      ICOLPG=ICOLFG
      ICOLPB=ICOLFB
      CALL DPFIRE(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,PXSPA,PYSPA,
     1            ICOLF,ICOLFR,ICOLFG,ICOLFB,
     1            ICOLP,ICOLPR,ICOLPG,ICOLPB,
     1            IPATT2)
C
      PX(1)=PRIGHT
      PY(1)=PBOTTO-PSH
      PX(2)=PRIGHT+PSW
      PY(2)=PBOTTO-PSH
      PX(3)=PRIGHT+PSW
      PY(3)=PTOP-PSH
      PX(4)=PRIGHT
      PY(4)=PTOP-PSH
      PX(5)=PRIGHT
      PY(5)=PBOTTO-PSH
      CALL DPFIRE(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,PXSPA,PYSPA,
     1            ICOLF,ICOLFR,ICOLFG,ICOLFB,
     1            ICOLP,ICOLPR,ICOLPG,ICOLPB,
     1            IPATT2)
C
 4190 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'BX2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPBX2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IERRG4,NP
 9013   FORMAT('IERRG4,NP = ',A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NP
          WRITE(ICOUT,9016)I,PX(I),PY(I)
 9016     FORMAT('I,PX(I),PY(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
