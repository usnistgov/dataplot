      SUBROUTINE DPSP(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                MAXNXT,ISEED,
     1                ICONT,ISUBRO,IBUGG2,IBUGG3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A STATISTIC PLOT FOR ONE OF DATAPLOT'S--
C              SUPPORTED STATISTICS.
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/1
C     ORIGINAL VERSION--JANUARY   1988.
C     UPDATED         --MARCH     1988.  LINEAR INTERCEPT & SLOPE PLOTS
C     UPDATED         --MARCH     1988.  LINEAR RESSD AND CORRELATION PLOTS
C     UPDATED         --AUGUST    1988.  TAGUCHI SIGNAL-TO-NOISE PLOTS
C     UPDATED         --MAY       1989.  CAN OMIT 'TAGUCHI' IN SN.. PLOTS
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C     UPDATED         --SEPTEMBER 1992. FIX DEBUG SECTION AT EXIT
C     UPDATED         --SEPTEMBER 1993. CP PLOT
C     UPDATED         --SEPTEMBER 1993. CPK PLOT
C     UPDATED         --SEPTEMBER 1993. PERCENT DEFECTIVE PLOT
C     UPDATED         --SEPTEMBER 1993. EXPECTED LOSS PLOT
C     UPDATED         --DECEMBER  1993. SYNONYMS FOR TAGUCHI S/N PLOTS
C     UPDATED         --FEBRUARY  1994. CHANGE ICASPL: SDM => SDME
C     UPDATED         --FEBRUARY  1994. CHANGE ICASPL: VM => VAME
C     UPDATED         --FEBRUARY  1994. CHANGE ICASPL: RSD => RESD
C     UPDATED         --FEBRUARY  1994. CHANGE ICASPL: RVAR => REVA
C     UPDATED         --FEBRUARY  1994. ALLOW SD MEAN
C     UPDATED         --FEBRUARY  1994. ADD VARI OF MEAN
C     UPDATED         --FEBRUARY  1994. ADD EXTREME
C     UPDATED         --FEBRUARY  1994. ADD NORMAL PPCC
C     UPDATED         --MARCH     1994. WINSORIZED MEAN AS SYNONYM TO
C                                       WINDSORIZED MEAN.
C     UPDATED         --MARCH     1995. ADD AAD AND MAD
C     UPDATED         --JANUARY   1998. NAME CONFLICT FOR MINIMUM AND
C                                       MAXIMUM WITH BLOCK PLOT
C     UPDATED         --NOVEMBER  1998. ADD PERCENTILE PLOT
C     UPDATED         --NOVEMBER  1998. ADD CPM PLOT, CC PLOT
C     UPDATED         --MARCH     1999. ADD GEOMETRIC MEAN PLOT
C     UPDATED         --MARCH     1999. ADD GEOMETRIC STANDARD DEVIATION PLOT
C     UPDATED         --MARCH     1999. ADD HARMONIC MEAN PLOT
C     UPDATED         --OCTOBER   1999. SAVE INTERNAL PARAMETER
C                                       ALOWHIGH
C     UPDATED         --APRIL     2001. ADD CPL PLOT, CPU PLOT
C     UPDATED         --SEPTEMBER 2001. ADD IQ RANGE PLOT
C     UPDATED         --NOVEMBER  2001. ADD BIWEIGHT LOCATION PLOT
C     UPDATED         --NOVEMBER  2001. ADD BIWEIGHT SCALE PLOT
C     UPDATED         --JULY      2002. ADD WINSORIZED VARIANCE PLOT
C     UPDATED         --JULY      2002. ADD WINSORIZED SD PLOT
C     UPDATED         --JULY      2002. ADD WINSORIZED COVARIANCE PLOT
C     UPDATED         --JULY      2002. ADD WINSORIZED CORRELATION PLOT
C     UPDATED         --JULY      2002. ADD BIWEIGHT MIDVARIANCE PLOT
C     UPDATED         --JULY      2002. ADD BIWEIGHT MIDCOVARIANCE PLOT
C     UPDATED         --JULY      2002. ADD BIWEIGHT MIDCORRELATION PLOT
C     UPDATED         --JULY      2002. ADD PERCENTAGE BEND MIDVARIANCE
C                                           PLOT
C     UPDATED         --JULY      2002. ADD PERCENTAGE BEND CORRELATION
C                                           PLOT
C     UPDATED         --JULY      2002. ADD HODGES LEHMAN PLOT
C     UPDATED         --JULY      2002. ADD QUANTILE PLOT
C     UPDATED         --JULY      2002. ADD QUANTILE STANDARD ERROR PLOT
C     UPDATED         --JULY      2002. ADD TRIMMED MEAN STANDARD ERROR
C                                           PLOT
C     UPDATED         --MARCH     2003. ADD 35 "DIFFERENCE OF" STATISTICS
C     UPDATED         --MARCH     2003. ADD WEIGHTED MEAN, WEIGHTED SD,
C                                       WEIGHTED VARIANCE
C     UPDATED         --APRIL     2003. ADD SN AND QN (AND DIFFERENCE
C                                       OF), REQUIRED ADDITIONAL
C                                       SCRATCH ARRAYS
C     UPDATED         --MAY       2003. ADD WEIGHTED TRIMMED MEAN
C     UPDATED         --OCTOBER   2004. ADD KENDELL TAU
C     UPDATED         --FEBRUARY  2005. ADD REPEATABILITY SD
C     UPDATED         --FEBRUARY  2005. ADD REPRODUCABILITY SD
C     UPDATED         --SEPTEMBER 2005. ADD RATIO (SUM1/SUM2)
C     UPDATED         --MARCH     2007. ADD RELATIVE RISK
C     UPDATED         --MARCH     2007. ADD CRAMER CONTINGENCY COEFFICIENT
C     UPDATED         --MARCH     2007. ADD PEARSON CONTINGENCY COEFFICIENT
C     UPDATED         --MARCH     2007. ADD FALSE POSITIVE
C     UPDATED         --MARCH     2007. ADD FALSE NEGATIVE
C     UPDATED         --MARCH     2007. ADD TRUE POSITIVE
C     UPDATED         --MARCH     2007. ADD TRUE NEGATIVE
C     UPDATED         --MARCH     2007. ADD TEST SENSITIVITY
C     UPDATED         --MARCH     2007. ADD TEST SPECIFICITY
C     UPDATED         --APRIL     2007. ADD POSITIVE PREDICTIVE VALUE
C     UPDATED         --APRIL     2007. ADD NEGATIVE PREDICTIVE VALUE
C     UPDATED         --APRIL     2007. ADD LOG ODDS RATIO
C     UPDATED         --APRIL     2007. ADD LOG ODDS RATIO
C                                           STANDARD ERROR
C     UPDATED         --MAY       2007. ADD TRIMMED STANDARD DEVIATION
C     UPDATED         --AUGUST    2007. MOVE STORAGE OF SEVERAL
C                                       ARRAYS FROM MAINGR TO COMMON
C     UPDATED         --NOVEMBER  2007. DOUBLE PRECISION ARRAYS FOR
C                                       CMPSTA
C     UPDATED         --NOVEMBER  2007. ADD LP LOCATION
C     UPDATED         --NOVEMBER  2007. ADD VARIANCE OF LP LOCATION
C     UPDATED         --NOVEMBER  2007. ADD SD OF LP LOCATION
C     UPDATED         --NOVEMBER  2007. ADD DIFFERENCE OF LP LOCATION
C     UPDATED         --NOVEMBER  2007. ADD DIFFERENCE OF VARIANCE OF
C                                           LP LOCATION
C     UPDATED         --NOVEMBER  2007. ADD DIFFERENCE OF SD OF
C                                           LP LOCATION
C     UPDATED         --SEPTEMBER 2008. ADD BINOMIAL PROBABILITY
C     UPDATED         --SEPTEMBER 2008. ADD DIFFERENCE OF BINOMIAL
C                                           PROBABILITY
C     UPDATED         --FEBRUARY  2009. ADD INDEX MINIMUM
C     UPDATED         --FEBRUARY  2009. ADD INDEX MAXIMUM
C     UPDATED         --FEBRUARY  2009. ADD INDEX EXTREME
C     UPDATED         --FEBRUARY  2009. ADD GRUBB
C     UPDATED         --FEBRUARY  2009. ADD GRUBB CDF
C     UPDATED         --FEBRUARY  2009. ADD GRUBB DIRECTION
C     UPDATED         --FEBRUARY  2009. ADD GRUBB INDEX
C     UPDATED         --FEBRUARY  2009. ADD:
C                                       ONE SAMPLE T-TEST,
C                                       ONE SAMPLE T-TEST CDF,
C                                       CHI-SQUARE SD TEST,
C                                       CHI-SQUARE SD TEST CDF,
C                                       FREQUENCY TEST,
C                                       FREQUENCY TEST CDF,
C                                       FREQUENCY WITHIN A BLOCK TEST,
C                                       FREQUENCY WITHIN A BLOCK TEST CDF
C     UPDATED         --MARCH     2009. SUPPORT FOR MULTIPLE RESPONSE
C                                       VARIABLES
C     UPDATED         --MARCH     2009. UPDATE PARSING:
C                                       1) USE "EXTSTA"
C                                       2) USE DPPARS
C     UPDATED         --MARCH     2009. "Z-SCORE" AND "U-SCORE"
C                                       OPTIONS
C     UPDATED         --JUNE      2010. CMPSTA SUPPORTS 3-VARIABLE
C                                       STATISTICS
C     UPDATED         --JANUARY   2013. CHECK FOR "PPCC STAT" CASE
C     UPDATED         --FEBRUARY  2015. CHECK FOR "AD STAT" CASE
C     UPDATED         --FEBRUARY  2018. "TAG PLOT" CASE
C     UPDATED         --JULY      2019. TWEAK SCRATCH SPACE
C     UPDATED         --AUGUST    2023. CALL LIST TO CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 ICONT
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IERRO2
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IGROUP
C
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
      CHARACTER*40 INAME
      CHARACTER*60 ISTANM
      CHARACTER*4  ISTADF
      CHARACTER*4  ISTARA
C
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION TEMP(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XTEMP3(MAXOBV)
      DIMENSION XTEMP4(MAXOBV)
      DIMENSION XTEMP5(MAXOBV)
      DIMENSION TAG(MAXOBV)
C
      PARAMETER (MAXRES=25)
      DIMENSION Z(MAXOBV,MAXRES)
C
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),XTEMP3(1))
      EQUIVALENCE (GARBAG(IGARB2),TEMP(1))
      EQUIVALENCE (GARBAG(IGARB3),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB4),TEMP3(1))
      EQUIVALENCE (GARBAG(IGARB5),XTEMP1(1))
      EQUIVALENCE (GARBAG(IGARB6),XTEMP2(1))
      EQUIVALENCE (GARBAG(IGARB7),TEMP4(1))
      EQUIVALENCE (GARBAG(IGARB8),TAG(1))
      EQUIVALENCE (GARBAG(IGARB9),XTEMP4(1))
      EQUIVALENCE (GARBAG(IGAR10),XTEMP5(1))
      EQUIVALENCE (GARBAG(JGAR11),Z(1,1))
C
CCCCC JULY 2002. ADD INTEGER ARRAYS FOR HODGES-LEHMAN PLOT.
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCOZD.INC'
C
      INTEGER ITEMP1(MAXOBV)
      INTEGER ITEMP2(MAXOBV)
      INTEGER ITEMP3(MAXOBV)
      INTEGER ITEMP4(MAXOBV)
      INTEGER ITEMP5(MAXOBV)
      INTEGER ITEMP6(MAXOBV)
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1(1))
      EQUIVALENCE (IGARBG(IIGAR2),ITEMP2(1))
      EQUIVALENCE (IGARBG(IIGAR3),ITEMP3(1))
      EQUIVALENCE (IGARBG(IIGAR4),ITEMP4(1))
      EQUIVALENCE (IGARBG(IIGAR5),ITEMP5(1))
      EQUIVALENCE (IGARBG(IIGAR6),ITEMP6(1))
C
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
      DOUBLE PRECISION DTEMP3(MAXOBV)
      EQUIVALENCE (DGARBG(IDGAR1),DTEMP1(1))
      EQUIVALENCE (DGARBG(IDGAR2),DTEMP2(1))
      EQUIVALENCE (DGARBG(IDGAR3),DTEMP3(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPSP'
      ISUBN2='    '
      IGROUP='OFF'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      MINN2=2
      IMAXIN=0
      IMININ=0
C
C               ************************************
C               **  TREAT THE STATISTIC PLOT CASE  **
C               ************************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPSP')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICONT,ISUBRO,IBUGG2,IBUGG3,IBUGQ
   52   FORMAT('ICONT,ISUBRO,IBUGG2,IBUGG3,IBUGQ  = ',
     1         4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2,NUMARG
   53   FORMAT('ICASPL,IAND1,IAND2,NUMARG = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMARG
          WRITE(ICOUT,57)I,IHARG(I),IHARG2(I)
   57     FORMAT('I,IHARG(I),IHARG2(I) = ',I8,2(2X,A4))
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPSP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
C
C     EXTRACT THE DESIRED STATISTIC
C
C       2013/04: CHECK FOR CONFLICT BETWEEN "QUANTILE PLOT" AND
C                "QUANTILE-QUANTILE PLOT".
C
      IF(ICOM.EQ.'QUAN' .AND. IHARG(1).EQ.'QUAN')GOTO9000
C
      JMIN=0
      JMAX=NUMARG
      IFLAGZ=0
      IFLAGU=0
C
      DO200I=1,NUMARG
        IF((IHARG(I).EQ.'TAG '.OR.IHARG(I).EQ.'CHAR').AND.
     1      IHARG(I+1).EQ.'PLOT')THEN
          IF(JMAX.EQ.NUMARG)JMAX=I-1
          ILASTC=I+1
          IGROUP='ON'
          GOTO209
        ELSEIF(IHARG(I).EQ.'PLOT')THEN
          IF(JMAX.EQ.NUMARG)JMAX=I-1
          ILASTC=I
          GOTO209
C
C       2013/01: NOTE THE COMMANDS
C
C                  TUKEY LAMBDA PPCC STATISTIC PLOT
C                  WEIBULL      PPCC STATISTIC PLOT
C
C                NEED TO INCLUDE THE "STATISTIC" IN ORDER TO
C                DISTINGUISH THEM FROM THE STANDARD PPCC PLOT
C                CASE.  SO CHECK FOR THE WORD "PPCC".
C
C       2015/02: SIMILAR CHECK FOR "ANDERSON DARLING" OR "AD"
C
C       2015/02: SIMILAR CHECK FOR "JSCORE STATISTIC"
C
C       2013/04: CHECK FOR CONFLICT BETWEEN "QUANTILE PLOT" AND
C                "QUANTILE-QUANTILE PLOT".
C
        ELSEIF(I.LT.NUMARG.AND.IHARG(I).EQ.'STAT'.AND.
     1         IHARG(I+1).EQ.'PLOT')THEN
          IF(IHARG(I-1).EQ.'PPCC')THEN
            IF(JMAX.EQ.NUMARG)JMAX=I
          ELSEIF(IHARG(I-1).EQ.'AD')THEN
            IF(JMAX.EQ.NUMARG)JMAX=I
          ELSEIF(IHARG(I-2).EQ.'ANDE' .AND. IHARG(I-1).EQ.'DARL')THEN
            IF(JMAX.EQ.NUMARG)JMAX=I
          ELSEIF(ICOM.EQ.'JSCO')THEN
            JMAX=I
          ELSE
            IF(JMAX.EQ.NUMARG)JMAX=I-1
          ENDIF
          ILASTC=I+1
          GOTO209
        ELSEIF(I.LT.NUMARG-1.AND.IHARG(I).EQ.'STAT'.AND.
     1         IHARG(I+1).EQ.'TAG '.AND.IHARG(I+2).EQ.'PLOT')THEN
          IF(IHARG(I-1).EQ.'PPCC')THEN
            IF(JMAX.EQ.NUMARG)JMAX=I
          ELSEIF(IHARG(I-1).EQ.'AD')THEN
            IF(JMAX.EQ.NUMARG)JMAX=I
          ELSEIF(IHARG(I-2).EQ.'ANDE' .AND. IHARG(I-1).EQ.'DARL')THEN
            IF(JMAX.EQ.NUMARG)JMAX=I
          ELSEIF(ICOM.EQ.'JSCO')THEN
            JMAX=I
          ELSE
            IF(JMAX.EQ.NUMARG)JMAX=I-1
          ENDIF
          ILASTC=I+2
          GOTO209
        ELSEIF(IHARG(I).EQ.'ZSCO')THEN
          JMAX=I-1
          IFLAGZ=1
        ELSEIF(I.LT.NUMARG.AND.IHARG(I).EQ.'Z   '.AND.
     1         IHARG(I+1).EQ.'SCOR')THEN
          JMAX=I-1
          IFLAGZ=1
        ELSEIF(IHARG(I).EQ.'USCO')THEN
          JMAX=I-1
          IFLAGU=1
        ELSEIF(I.LT.NUMARG.AND.IHARG(I).EQ.'U   '.AND.
     1         IHARG(I+1).EQ.'SCOR')THEN
          JMAX=I-1
          IFLAGU=1
        ELSEIF(I.GT.1 .AND. IHARG(I).EQ.'QUAN'.AND.
     1         IHARG(I-1).EQ.'QUAN')THEN
          GOTO9000
        ENDIF
  200 CONTINUE
      GOTO9000
  209 CONTINUE
C
      CALL EXTSTA(ICOM,ICOM2,IHARG,IHARG2,IARGT,ARG,NUMARG,JMIN,JMAX,
     1            ICASPL,ISTANM,ISTANR,ISTADF,ISTARA,
     1            IFOUND,ILOCV,
     1            ISUBRO,IBUGG3,IERROR)
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPSP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,251)
  251   FORMAT('***** AFTER CALL EXTSTA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,252)ICASPL,IFOUND,ISTANR,ILOCV
  252   FORMAT('ICASPL,IFOUND,ISTANR,ILOCV = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFOUND.EQ.'NO')GOTO9000
C
C     2020/07: "SKEW NORMAL PPCC PLOT" BEING MATCHED TO
C              "SKEWNESS" STATISTIC.
C
      IF(ICASPL.EQ.'SKEW')THEN
        IF(IHARG(1).EQ.'NORM' .AND. IHARG(2).EQ.'PPCC')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(IHARG(1).EQ.'NORM' .AND. IHARG(2).EQ.'AD  ')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(IHARG(1).EQ.'NORM' .AND. IHARG(2).EQ.'ANDE' .AND.
     1         IHARG(3).EQ.'DARL')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(IHARG(1).EQ.'NORM' .AND. IHARG(2).EQ.'KS  ')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(IHARG(1).EQ.'NORM' .AND. IHARG(2).EQ.'KOLM' .OR.
     1         IHARG(3).EQ.'SMIR')THEN
          IFOUND='NO'
          GOTO9000
        ENDIF
      ENDIF
C
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      INAME='STATISTIC PLOT'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=-99
      MAXNVA=-99
      IF(IGROUP.EQ.'ON')THEN
        MINNA=2
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPSP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,2A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C     NEED FOLLOWING VARIABLES:
C     1) GROUP-ID VARIABLE
C     2) AT LEAST ONE RESPONSE VARIABLE FOR STATISTICS
C        THAT REQUIRE ONE VARIABLE
C     3) AT LEAST TWO RESPONSE VARIABLES FOR STATISTICS
C        THAT REQUIRE TWO VARIABLES
C     4) AT LEAST THREE RESPONSE VARIABLES FOR STATISTICS
C        THAT REQUIRE THREE VARIABLES
C     5) IF 
C     IF THE PARAMETER "NI" IS SPECIFIED, THEN IF NUMVAR = MINVAR - 1,
C     THEN WE CAN AUTOMATICALLY CREATE THE GROUP-ID VARIABLE.
C
      ISIZE=-99
      ITGVAR=0
      IF(IGROUP.EQ.'ON')ITGVAR=1
      MINVAR=1+ISTANR+ITGVAR
      IF(NUMVAR.LT.MINVAR)THEN
C
        IF(NUMVAR.EQ.MINVAR-1)THEN
          IH='NI  '
          IH2='    '
          IHWUSE='P'
          MESSAG='NO'
          CALL CHECKN(IH,IH2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERRO2)
          IF(IERROR.EQ.'NO')THEN
            ISIZE=INT(VALUE(ILOCP)+0.5)
            GOTO219
          ENDIF
        ENDIF
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)ISTANA
  211   FORMAT('***** ERROR IN ',A60,'PLOT COMMAND--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,212)MINVAR
  212   FORMAT('      AT LEAST ',I5,' VARIABLES REQUIRED, BUT ONLY')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,213)NUMVAR
  213   FORMAT('      ',I8,' VARIABLES WERE GIVEN.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,215)
  215   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,216)(IANS(J),J=1,MIN(80,IWIDTH))
  216     FORMAT('      ',80A1)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
  219 CONTINUE
C
      NTEMP=NUMVAR-1-ITGVAR
      IF(ISTANR.EQ.2 .AND. MOD(NTEMP,2).EQ.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)ISTANA
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,222)
  222   FORMAT('      THE NUMBER OF RESPONSE VARIABLES IS EVEN, BUT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,223)
  223   FORMAT('      IT SHOULD BE ODD WHEN THE STATISTIC REQUIRES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,224)
  224   FORMAT('      TWO VARIABLES TO COMPUTE (2*NUMBER OF PAIRS + ',
     1         'GROUP-ID VARIABLE)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,215)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,216)(IANS(J),J=1,MIN(80,IWIDTH))
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      IF(ISTANR.EQ.3 .AND. MOD(NTEMP,3).GT.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)ISTANA
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,232)
  232   FORMAT('      THE NUMBER OF RESPONSE VARIABLES IS NOT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,233)
  233   FORMAT('      DIVISIBLE BY 3 WHEN THE STATISTIC REQUIRES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,234)
  234   FORMAT('      THREE VARIABLES TO COMPUTE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,215)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,216)(IANS(J),J=1,MIN(80,IWIDTH))
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C               *********************************
C               **  STEP 3--                   **
C               **  EXTRACT THE DATA           **
C               *********************************
C
      NTEMP=NRIGHT(1)
      DO300K=1,NUMVAR
C
        J=0
        IMAX=NTEMP
        IF(NQ.LT.NTEMP)IMAX=NQ
        DO310I=1,IMAX
          IF(ISUB(I).EQ.1)THEN
            J=J+1
            IJ=MAXN*(ICOLR(K)-1)+I
C
            IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPSP')THEN
              WRITE(ICOUT,311)I,J,MAXN,ICOLR(K),IJ,NRIGHT(K),NQ,IMAX
  311         FORMAT('I,J,MAXN,ICOLR(K),IJ,NRIGHT(K),NQ,IMAX = ',8I8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            IF(ICOLR(K).LE.MAXCOL)Z(J,K)=V(IJ)
            IF(ICOLR(K).EQ.MAXCP1)Z(J,K)=PRED(I)
            IF(ICOLR(K).EQ.MAXCP2)Z(J,K)=RES(I)
            IF(ICOLR(K).EQ.MAXCP3)Z(J,K)=YPLOT(I)
            IF(ICOLR(K).EQ.MAXCP4)Z(J,K)=XPLOT(I)
            IF(ICOLR(K).EQ.MAXCP5)Z(J,K)=X2PLOT(I)
            IF(ICOLR(K).EQ.MAXCP6)Z(J,K)=TAGPLO(I)
          ENDIF
  310   CONTINUE
        IF(K.EQ.1)NLOCAL=J
  300   CONTINUE
C
C               ********************************************************
C               **  STEP 27--                                         **
C               **  CREATE A GROUP-ID VARIABLE BASED ON NI IF NEEDED  **
C               ********************************************************
C
      ISTEPN='3B'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPSP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ISIZE.GT.0)THEN
        IF(IGROUP.EQ.'OFF')THEN
          NUMVAR=NUMVAR+1
          DO360J=1,NLOCAL
            ITEMP=MOD(J,ISIZE)
            IF(ITEMP.EQ.0)ITEMP=ISIZE
            Z(J,NUMVAR)=REAL(ITEMP)
  360     CONTINUE
        ELSE
          NUMVAR=NUMVAR+1
          DO363J=1,NLOCAL
            ITEMP=MOD(J,ISIZE)
            IF(ITEMP.EQ.0)ITEMP=ISIZE
            Z(J,NUMVAR)=Z(J,NUMVAR-1)
            Z(J,NUMVAR-1)=REAL(ITEMP)
  363     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************************
C               **  STEP 4--                                          **
C               **  COMPUTE THE APPROPRIATE STATISTIC PLOT STATISTIC--**
C               **  (MEAN, STANDARD DEVIATION, RANGE, OR CUSUM).      **
C               **  COMPUTE CONFIDENCE LINES.                         **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS             **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.                **
C               **  DEFINE THE VECTOR D(.) TO 1'S, 2'S, AND 3'S       **
C               **  FOR THE PLOTTED VALUE, THE LOWER CONFIDENCE LINE, **
C               **  AND THE UPPER CONFIDENCE LINE.                    **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).     **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).     **
C               ********************************************************
C
      ISTEPN='4'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPSP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPSP2(Z,MAXOBV,MAXRES,NLOCAL,NUMVAR,ISTANR,IFLAGZ,IFLAGU,
     1           ICASPL,ISTARA,ISIZE,ICONT,
     1           TEMP,TEMP2,TEMP3,TEMP4,TAG,XTEMP1,XTEMP2,XTEMP3,
     1           XTEMP4,XTEMP5,MAXNXT,
     1           ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1           DTEMP1,DTEMP2,DTEMP3,
     1           IQUAME,IQUASE,PSTAMV,ISTAFO,ISTASM,ISPLRL,IGROUP,
     1           Y,X,D,NPLOTP,NPLOTV,NUMSET,GRAND,
     1           ISUBRO,IBUGG3,IERROR)
C
C
C               *************************************************
C               **  STEP 29--                                  **
C               **  SAVE DIFFERENCE BETWEEN HIGHEST VALUE AND  **
C               **  LOWEST VALUE OF STATISTIC IN INTERNAL      **
C               **  PARAMETER ALOWHIGH                         **
C               *************************************************
      AMINS=CPUMAX
      AMAXS=CPUMIN
      ANUMSE=1.0
      IF(IGROUP.EQ.'ON')ANUMSE=REAL(NUMSET)
      DO2910I=1,NPLOTP
        IF(D(I).GT.ANUMSE)GOTO2910
        IF(Y(I).GT.AMAXS)THEN
          AMAXS=Y(I)
          IMAXIN=I
        ENDIF
        IF(Y(I).LT.AMINS)THEN
          AMINS=Y(I)
          IMININ=I
        ENDIF
 2910 CONTINUE
      ADIFF=AMAXS-AMINS
      IF(IMAXIN.GT.IMININ)ADIFF=-ADIFF
C
      ISUBN0='DPSP'
C
      IH='ALOW'
      IH2='HIGH'
      VALUE0=ADIFF
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,IERROR)
C
      IF(GRAND.NE.CPUMIN)THEN
        IH='GRAN'
        IH2='DSTA'
        VALUE0=GRAND
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPSP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IFOUND,IERROR
 9013   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(IFOUND.EQ.'NO')GOTO9099
        WRITE(ICOUT,9014)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9014   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',3I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)NUMVAR,ISIZE
 9016   FORMAT('NUMVAR,ISIZE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(IFOUND.EQ.'NO'.OR.NPLOTP.LE.0)THEN
          DO9025I=1,NPLOTP
            WRITE(ICOUT,9026)I,Y(I),X(I),D(I)
 9026       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9025     CONTINUE
        ENDIF
      ENDIF
 9099 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPSP2(Z,MAXOBV,MAXRES,N,NUMV2,ISTANR,IFLAGZ,IFLAGU,
     1                 ICASPL,ISTARA,ISIZE,ICONT,
     1                 TEMP,TEMPZ,TEMPZ2,XIDTEM,TAG,
     1                 XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,MAXNXT,
     1                 ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                 DTEMP1,DTEMP2,DTEMP3,
     1                 IQUAME,IQUASE,PSTAMV,ISTAFO,ISTASM,ISPLRL,IGROUP,
     1                 Y2,X2,D2,N2,NPLOTV,NUMSET,GRAND,
     1                 ISUBRO,IBUGG3,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE A <STAT> PLOT
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     REFERENCE--ASTM MANUAL STP-15D, PAGES 78-84, 100-105
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--JANUARY   1988.
C     UPDATED         --MARCH     1988.   LINEAR INTERCEPT & SLOPE PLOTS
C     UPDATED         --MARCH     1988.   LINEAR RESSD & CORRELATION PLOTS
C     UPDATED         --AUGUST    1988.   TAGUCHI SIGNAL TO NOISE PLOTS
C     UPDATED         --SEPTEMBER 1988.   4 MISSING CHARACTER*4 STATEMENTS
C     UPDATED         --MAY       1989.   CHANGE TAGUCHI S/N DESIGNATIONS
C     UPDATED         --SEPTEMBER 1993. CP PLOT
C     UPDATED         --SEPTEMBER 1993. CPK PLOT
C     UPDATED         --SEPTEMBER 1993. PERCENT DEFECTIVE PLOT
C     UPDATED         --SEPTEMBER 1993. EXPECTED LOSS PLOT
C     UPDATED         --DECEMBER  1993. LINFIT ARGS
C     UPDATED         --DECEMBER  1993. LINFIT ARGS; PROTECT RESSD/DF
C     UPDATED         --FEBRUARY  1994. IFLAG='ACTU'
C     UPDATED         --FEBRUARY  1994. CHANGE ICASPL: SDM => SDME
C     UPDATED         --FEBRUARY  1994. CHANGE ICASPL: VM => VAME
C     UPDATED         --FEBRUARY  1994. CHANGE ICASPL: RSD => RESD
C     UPDATED         --FEBRUARY  1994. CHANGE ICASPL: RVAR => REVA
C     UPDATED         --FEBRUARY  1994. ALLOW SD MEAN
C     UPDATED         --FEBRUARY  1994. ADD VARI OF MEAN
C     UPDATED         --FEBRUARY  1994. ADD VARI OF MEAN
C     UPDATED         --FEBRUARY  1994. ADD NORMAL PPCC
C     UPDATED         --NOVEMBER  1998. ADD PERCENTILE
C     UPDATED         --NOVEMBER  1998. ADD CPM, CC
C     UPDATED         --MARCH     1999. ADD CNPK
C     UPDATED         --MARCH     1999. ADD GEOMETRIC MEAN
C     UPDATED         --MARCH     1999. ADD GEOMETRIC STANDARD DEVIATION
C     UPDATED         --APRIL     2001. ARGUMENT LIST TO CP, CPK, CPM
C     UPDATED         --SEPTEMBER 2001. ADD IQ RANGE
C     UPDATED         --NOVEMBER  2001. ADD BIWEIGHT LOCATION
C     UPDATED         --NOVEMBER  2001. ADD BIWEIGHT SCALE
C     UPDATED         --JULY      2002. ADD WINSORIZED VARIANCE
C     UPDATED         --JULY      2002. ADD WINSORIZED SD
C     UPDATED         --JULY      2002. ADD WINSORIZED COVARIANCE PLOT
C     UPDATED         --JULY      2002. ADD WINSORIZED CORRELATION PLOT
C     UPDATED         --JULY      2002. ADD BIWEIGHT MIDVARIANCE PLOT
C     UPDATED         --JULY      2002. ADD BIWEIGHT MIDCOVARIANCE PLOT
C     UPDATED         --JULY      2002. ADD BIWEIGHT MIDCORRELATION PLOT
C     UPDATED         --JULY      2002. ADD PERCENTAGE BEND MIDVARIANCE
C                                           PLOT
C     UPDATED         --JULY      2002. ADD PERCENTAGE BEND CoRRELATION
C                                           PLOT
C     UPDATED         --JULY      2002. ADD HODGES LEHMAN PLOT
C     UPDATED         --AUGUST    2002. USE "CMPSTA" TO COMPUTE THE
C                                       STATISTIC
C     UPDATED         --APRIL     2003. ADD SN AND QN (AND DIFFERENCE
C                                       OF), REQUIRED ADDITIONAL
C                                       SCRATCH ARRAY
C     UPDATED         --OCTOBER   2004. ADD KENDELL TAU
C     UPDATED         --FEBRUARY  2005. ADD REPEATABILITY SD
C     UPDATED         --FEBRUARY  2005. ADD REPRODUCABILITY SD
C     UPDATED         --SEPTEMBER 2005. ADD RATIO
C     UPDATED         --MARCH     2007. ADD ODDS RATIO
C     UPDATED         --MARCH     2007. ADD ODDS RATIO STANDARD ERROR
C     UPDATED         --MARCH     2009. SUPPORT FOR MULTIPLE RESPONSE
C                                       VARIABLES
C     UPDATED         --MARCH     2009. ZSCORE/USCORE OPTIONS
C     UPDATED         --APRIL     2015. ISPLRL (REFERENCE LINE)
C     UPDATED         --FEBRUARY  2018. SUPPORT FOR "TAG" VARIABLE
C     UPDATED         --OCTOBER   2018. RETURN STATISTIC VALUE FOR
C                                       FULL DATA SET
C     UPDATED         --AUGUST    2023. CALL LIST TO CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ISTARA
      CHARACTER*4 ICONT
      CHARACTER*4 ISPLRL
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGG3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 IQUAME
      CHARACTER*4 IQUASE
      CHARACTER*4 ISTAFO
      CHARACTER*4 ISTAFZ
      CHARACTER*4 ISTASM
      CHARACTER*4 IGROUP
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Z(MAXOBV,MAXRES)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
C
      DIMENSION TEMP(*)
      DIMENSION TEMPZ(*)
      DIMENSION TEMPZ2(*)
      DIMENSION XIDTEM(*)
      DIMENSION TAG(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
C
      INTEGER ITEMP1(*)
      INTEGER ITEMP2(*)
      INTEGER ITEMP3(*)
      INTEGER ITEMP4(*)
      INTEGER ITEMP5(*)
      INTEGER ITEMP6(*)
C
      DOUBLE PRECISION DTEMP1(*)
      DOUBLE PRECISION DTEMP2(*)
      DOUBLE PRECISION DTEMP3(*)
C
C-----COMMON----------------------------------------------------------
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPSP'
      ISUBN2='2   '
      IWRITE='OFF'
C
      GRAND=CPUMIN
      I2=0
      ISIZE2=0
      ITAG=0
      IF(IGROUP.EQ.'ON')ITAG=1
      AGROUP=0.0
C
C     CHECK THE INPUT ARGUMENTS FOR ERRORS
C
      IF(N.LT.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN <STATISTIC> PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS IS NON-POSITIVE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PSP2')THEN
        WRITE(ICOUT,70)
   70   FORMAT('AT THE BEGINNING OF DPSP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)IBUGG3,ISUBRO,ICASPL,ICONT
   71   FORMAT('IBUGG3,ISUBRO,ICASPL,ICONT = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)N,NUMV2,ISIZE,ITAG
   72   FORMAT('N,NUMV2,ISIZE,ITAG = ',4I8)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,(Z(I,J),J=1,NUMV2)
   74     FORMAT('I, (Z(I,J),J=1,NUMV2) = ',I8,25F15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
        WRITE(ICOUT,78)IQUAME,IQUASE,PSTAMV
   78   FORMAT('IQUAME,IQUASE,PSTAMV = ',2(A4,2X),G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************************************
C               **  STEP 1--                                          **
C               **  DETERMINE THE NUMBER OF DISTINCT VALUES           **
C               **  FOR THE GROUP VARIABLE (USUALLY VAR. 2)           **
C               **  IF ALL VALUES ARE DISTINCT, THEN THIS             **
C               **  IMPLIES WE HAVE THE NO REPLICATION CASE           **
C               **  WHICH IS AN ERROR CONDITION FOR A PLOT.           **
C               ********************************************************
C
      ISTEPN='1'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PSP2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ITAG.EQ.1)THEN
        DO103II=1,N
          TEMP(II)=Z(II,NUMV2)
  103   CONTINUE
        CALL CODE(TEMP,N,IWRITE,TAG,TEMPZ,MAXOBV,IBUGG3,IERROR)
C
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PSP2')THEN
          WRITE(ICOUT,104)
  104     FORMAT('TAG CASE AFTER CALL CODE')
          CALL DPWRST('XXX','BUG ')
          DO105II=1,N
            WRITE(ICOUT,106)II,Z(II,NUMV2),TAG(II)
  106       FORMAT('II,Z(II,NUMV2),TAG(II) = ',I8,2F10.2)
            CALL DPWRST('XXX','BUG ')
  105     CONTINUE
        ENDIF
C
      ELSE
        DO107II=1,N
          TAG(II)=1.0
  107   CONTINUE
      ENDIF
C
      NUMSET=0
      NCOL=NUMV2-ITAG
      DO111I=1,N
        IF(NUMSET.GE.1)THEN
          DO112J=1,NUMSET
            IF(Z(I,NCOL).EQ.XIDTEM(J))GOTO111
  112     CONTINUE
        ENDIF
        NUMSET=NUMSET+1
        XIDTEM(NUMSET)=Z(I,NCOL)
  111 CONTINUE
      CALL SORT(XIDTEM,NUMSET,XIDTEM)
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PSP2')THEN
        DO115II=1,NUMSET
          WRITE(ICOUT,114)II,XIDTEM(II)
  114     FORMAT('II,XIDTEM(II) = ',I8,F10.2)
          CALL DPWRST('XXX','BUG ')
  115   CONTINUE
      ENDIF
C
      IF(NUMSET.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,122)
  122   FORMAT('      NUMBER OF SETS    NUMSET = 0 ')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
C
CCCC    JANUARY 2005.  IF NUMBER OF SETS EQUAL NUMBER OF OBSERVATIONS
CCCCC                  (I.E., ALL GROUPS HAVE 1 OBSERVATION), TREAT AS
CCCCC                  A WARNING RATHER THAN AN ERROR.  NOTE THAT SOME
CCCCC                  STATISTICS MAY SUBSEQUENTLY GENERATE AN ERROR
CCCCC                  MESSAGE FOR EACH GROUP.
C
      ELSEIF(NUMSET.EQ.N)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,135)
  135   FORMAT('***** WARNING IN <STAT> PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,136)NUMSET
  136   FORMAT('      THE NUMBER OF SETS ',I8,' IS IDENTICAL TO ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,137)N
  137   FORMAT('      THE NUMBER OF OBSERVATIONS  ',I8,'.')
        CALL DPWRST('XXX','BUG ')
CCCCC   IERROR='YES'
CCCCC   GOTO9000
      ENDIF
C
      AN=N
      ANUMSE=NUMSET
C
C               ********************************************************
C               **  STEP 1B--                                         **
C               **  SCALE BY Z-SCORE OR U-SCORE IF REQUESTED          **
C               ********************************************************
C
      ISTEPN='1B'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PSP2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFLAGZ.EQ.1)THEN
        DO160K=1,NUMV2-1-ITAG
          CALL MEAN(Z(1,K),N,IWRITE,XMEAN,IBUGG3,IERROR)
          CALL SD(Z(1,K),N,IWRITE,XSD,IBUGG3,IERROR)
          IF(XSD.GT.0.0)THEN
            DO165I=1,N
              Z(I,K)=(Z(I,K)-XMEAN)/XSD
  165       CONTINUE
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,135)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,166)K
  166       FORMAT('      UNABLE TO STANDARDIZE RESPONSE VARIABLE ',
     1             I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
  160   CONTINUE
      ELSEIF(IFLAGU.EQ.1)THEN
        DO170K=1,NUMV2-1-ITAG
          CALL MINIM(Z(1,K),N,IWRITE,XMIN,IBUGG3,IERROR)
          CALL MAXIM(Z(1,K),N,IWRITE,XMAX,IBUGG3,IERROR)
          IF(XMIN.NE.XMAX)THEN
            DO175I=1,N
              Z(I,K)=(Z(I,K)-XMIN)/(XMAX-XMIN)
  175       CONTINUE
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,135)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,176)K
  176       FORMAT('      UNABLE TO STANDARDIZE RESPONSE VARIABLE ',
     1             I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
  170   CONTINUE
      ENDIF
C
C               ******************************************
C               **  STEP 1C--                           **
C               **  COMPUTE THE SPECIFIED STATISTIC     **
C               **  FOR EACH SUBSET OF THE DATA, AND    **
C               **  THEN FOR THE FULL DATA SET          **
C               ******************************************
C
      ISTEPN='1C'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PSP2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     MARCH 2009: IF NUMBER OF RESPONSE VARIABLES IS > 1,
C                 THEN CODE THE GROUP-ID VARIABLE.  ALSO,
C                 SUPPORT BOTH AN "OVERLAY" AND A "DEX"
C                 FORMAT FOR MULTIPLE RESPONSE CASE.
C
C                 FOR SUMMARY STATISTIC AND MULTIPLE RESPONSES,
C                 SUPPORT EITHER "GROUP" OR "COLUMNS" OPTION.
C                 COLUMN OPTION SUMMARIZES BY VARIABLE (OVER
C                 ALL GROUPS) WHILE GROUP OPTION SUMMARIZES BY
C                 VALUE OF GROUP-ID VARIABLE.
C
      NCURV=(NUMV2-1-ITAG)/ISTANR
      IF(NCURV.GT.1)THEN
        CALL CODE(XIDTEM,NUMSET,IWRITE,XTEMP1,XTEMP2,MAXOBV,
     1            IBUGG3,IERROR)
        DO200I=1,N
          HOLD=Z(I,NUMV2-ITAG)
          DO210J=1,NUMSET
            IF(HOLD.EQ.XIDTEM(J))Z(I,NUMV2-ITAG)=XTEMP1(J)
  210     CONTINUE
  200   CONTINUE
        DO220I=1,NUMSET
          XIDTEM(I)=XTEMP1(I)
  220   CONTINUE
        ISTAFZ=ISTAFO
      ELSE
        ISTAFZ='OVER'
      ENDIF
C
      IF(NCURV.EQ.1)THEN
        ASTRT=0.0
        AINC=0.0
      ELSE
        ASTRT=0.4
        AINC=0.8/REAL(NCURV-1)
      ENDIF
C
      J2=0
      DO10000KK=1,NCURV
C
        NV1=(KK-1)*ISTANR + 1
        J=0
        ISETMX=NUMSET+1
        IF(NCURV.GT.1 .AND. ISTASM.EQ.'GROU')THEN
          ISETMX=NUMSET
CCCCC   ELSEIF(ICASPL.EQ.'REPE' .OR. ICASPL.EQ.'REPR' .AND.
CCCCC1         ISPLRL.EQ.'OVER')THEN
CCCCC     ISETMX=NUMSET
CCCCC   ELSEIF(ISPLRL.EQ.'MEAN' .OR. ISPLRL.EQ.'MEDI')THEN
CCCCC     ISETMX=NUMSET
        ENDIF
C
        DO11000ISET=1,ISETMX
C
          IF(ISET.LE.NUMSET)THEN
            K=0
            DO11011I=1,N
              IF(Z(I,NUMV2-ITAG).EQ.XIDTEM(ISET))THEN
                K=K+1
                TEMP(K)=Z(I,NV1)
                IF(ISTANR.EQ.1)THEN
                  TEMPZ(K)=Z(I,NV1)
                  TEMPZ2(K)=Z(I,NV1)
                ELSEIF(ISTANR.EQ.2)THEN
                  TEMPZ(K)=Z(I,NV1+1)
                  TEMPZ2(K)=Z(I,NV1+1)
                ELSEIF(ISTANR.EQ.3)THEN
                  TEMPZ(K)=Z(I,NV1+1)
                  TEMPZ2(K)=Z(I,NV1+2)
                ENDIF
                IF(ITAG.EQ.1)THEN
                  IF(K.EQ.1)THEN
                    AGROUP=TAG(I)
                  ENDIF
                ELSE
                  AGROUP=1.0
                ENDIF
              ENDIF
11011       CONTINUE
            NS2=K
          ELSE
C
CCCCC       FEBRUARY 2005: FOR REPEATABILITY SD AND REPRODUCABILITY
CCCCC                      SD, OMIT FULL SAMPLE COMPUTATION (SINCE
CCCCC                      FULL SAMPLE STATISTIC IS NOT MEANINGFUL
CCCCC                      AND DISTORTS THE PLOT).
C
            IF(ISPLRL.EQ.'MEAN' .OR. ISPLRL.EQ.'MEDI')THEN
              IF(ISPLRL.EQ.'MEAN')THEN
                 CALL MEAN(Y2,NUMSET,IWRITE,RIGHT2,IBUGG3,IERROR)
              ELSEIF(ISPLRL.EQ.'MEDI')THEN
                 CALL MEDIAN(Y2,NUMSET,IWRITE,XTEMP1,MAXNXT,RIGHT2,
     1                       IBUGG3,IERROR)
              ENDIF
              GOTO11013
            ELSE
              DO11021I=1,N
                TEMP(I)=Z(I,NV1)
                IF(ISTANR.EQ.1)THEN
                  TEMPZ(I)=Z(I,NV1)
                  TEMPZ2(I)=Z(I,NV1)
                ELSEIF(ISTANR.EQ.2)THEN
                  TEMPZ(I)=Z(I,NV1+1)
                  TEMPZ2(I)=Z(I,NV1+1)
                ELSEIF(ISTANR.EQ.3)THEN
                  TEMPZ(I)=Z(I,NV1+1)
                  TEMPZ2(I)=Z(I,NV1+2)
                ENDIF
11021         CONTINUE
              NS2=N
            ENDIF
          ENDIF
C
          IF(NS2.LT.1)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,11081)
11081       FORMAT('***** INTERNAL ERROR IN DPSP2--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,11082)
11082       FORMAT('NS FOR SOME CLASS = 0')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,11083)ISET,XIDTEM(ISET),NS
11083       FORMAT('ISET,XIDTEM(ISET),NS = ',I8,G15.7,I8)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
C
CCCCC     AUGUST 2002: USE SUBROUTINE TO COMPUTE THE STATISTIC
CCCCC                  RATHER THAN CODING HERE.
C
          CALL CMPSTA(TEMP,TEMPZ,TEMPZ2,XTEMP1,XTEMP2,XTEMP3,
     1                XTEMP4,XTEMP5,MAXNXT,
     1                NS2,NS2,NS2,ISTANR,ICASPL,ISTARA,
     1                ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                DTEMP1,DTEMP2,DTEMP3,
CCCCC1                IQUAME,IQUASE,PSTAMV,
     1                RIGHT,
     1                ISUBRO,IBUGG3,IERROR)
C
           GRAND=RIGHT
C
C         ---------------------------
C
CCCCC     NOTE: FOR DEX MODE, MAKE "OVERALL PLOT" CONTAIN 4
CCCCC           POINTS: AT X = XIDTEM(1) AND X = XIDTEM(NUMSET)
CCCCC           AND AT X = XIDTEM(1) - ASTRT AND
CCCCC           X = XIDTEM(NUMSET) + ASTRT.  THIS IS SO THAT
CCCCC           THE DPDEDL ROUTINE WILL INCLUDE THESE POINTS
CCCCC           WHEN COMPUTING THE DATA/FRAME LIMITS WHEN THE
CCCCC           XLIMITS ARE SET TO X = XIDTEM(1) AND X = XIDTEM(NUMSET)
CCCCC           (WHICH WILL BE FREQUENT FOR THIS COMMAND).
C
11013     CONTINUE
C
          IF(ISET.LE.NUMSET)THEN
            J2=J2+1
            Y2(J2)=RIGHT
            IF(ISTAFZ.EQ.'DEX')THEN
              X2(J2)=XIDTEM(ISET) - ASTRT + REAL(KK-1)*AINC
C
C             TAG CASE NOT SUPPORTED FOR SYNTAX WITH MULTIPLE RESPONSE
C             VARIABLES, SO DON'T ADJUST D2 FOR THIS CASE.
C
              D2(J2)=REAL(ISET)
            ELSE
              X2(J2)=XIDTEM(ISET)
C
C             TAG CASE NOT SUPPORTED FOR SYNTAX WITH MULTIPLE RESPONSE
C             VARIABLES, SO IF TAG ON WILL GET UNPREDICTABLE RESULTS
C             FOR D2.
C
              IF(ITAG.EQ.0 .OR. KK.GT.1)THEN
                D2(J2)=REAL(KK)
              ELSE
                D2(J2)=AGROUP
              ENDIF
            ENDIF
          ELSE
C
C           CHECK IF MEAN OR MEDIAN BEING USED FOR REFERENCE LINE
C
            IF(ISPLRL.EQ.'MEAN' .OR. ISPLRL.EQ.'MEDI')THEN
              RIGHT=RIGHT2
            ENDIF
C
            IF(ISTAFZ.EQ.'DEX')THEN
              J2=J2+1
              Y2(J2)=RIGHT
              X2(J2)=XIDTEM(1) - ASTRT
              D2(J2)=REAL(NUMSET+KK)
              J2=J2+1
              Y2(J2)=RIGHT
              X2(J2)=XIDTEM(1)
              D2(J2)=REAL(NUMSET+KK)
              J2=J2+1
              Y2(J2)=RIGHT
              X2(J2)=XIDTEM(NUMSET)
              D2(J2)=REAL(NUMSET+KK)
              J2=J2+1
              Y2(J2)=RIGHT
              X2(J2)=XIDTEM(NUMSET) + ASTRT
              D2(J2)=REAL(NUMSET+KK)
            ELSE
              J2=J2+1
              Y2(J2)=RIGHT
              X2(J2)=XIDTEM(1)
              IF(ITAG.EQ.0)THEN
                D2(J2)=REAL(NCURV+KK)
              ELSE
                D2(J2)=AGROUP+1.0
              ENDIF
              J2=J2+1
              Y2(J2)=RIGHT
              X2(J2)=XIDTEM(NUMSET)
              IF(ITAG.EQ.0)THEN
                D2(J2)=REAL(NCURV+KK)
              ELSE
                D2(J2)=AGROUP+1.0
              ENDIF
            ENDIF
          ENDIF
C
11000 CONTINUE
10000 CONTINUE
C
C     FOR MULTIPLE RESPONSES, IF "STAT PLOT SUMMARY" = "GROUP",
C     THEN COMPUTE STATISTIC FOR ALL VALUES OF EACH GROUP.
C
C     NOTE THAT TAG VARIABLE NOT SUPPORTED FOR THIS CASE, SO
C     DON'T MODIFY THIS CODE.
C
      IF(NCURV.GT.1 .AND. ISTASM.EQ.'GROU')THEN
        K=0
        DO2000ISET=1,NUMSET
          DO2100I=1,N
            IF(Z(I,NUMV2).EQ.XIDTEM(ISET))THEN
              DO2200KK=1,NCURV
                NV1=(KK-1)*ISTANR + 1
                K=K+1
                IF(K.LE.MAXOBV)THEN
                  TEMP(K)=Z(I,NV1)
                  IF(ISTANR.EQ.1)THEN
                    TEMPZ(K)=Z(I,NV1)
                    TEMPZ2(K)=Z(I,NV1)
                  ELSEIF(ISTANR.EQ.2)THEN
                    TEMPZ(K)=Z(I,NV1+1)
                    TEMPZ2(K)=Z(I,NV1+1)
                  ELSEIF(ISTANR.EQ.3)THEN
                    TEMPZ(K)=Z(I,NV1+1)
                    TEMPZ2(K)=Z(I,NV1+2)
                  ENDIF
                ELSE
                  WRITE(ICOUT,999)
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,2201)
 2201             FORMAT('***** WARNING IN <STAT> PLOT--')
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,2203)
 2203             FORMAT('      UNABLE TO GENERATE SUMMARY STATISTICS',
     1                   'FOR GROUPS.')
                  CALL DPWRST('XXX','BUG ')
                  GOTO9000
                ENDIF
 2200         CONTINUE
            ENDIF
 2100     CONTINUE
C
          NS2=K
          CALL CMPSTA(TEMP,TEMPZ,TEMPZ2,
     1                XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,MAXNXT,
     1                NS2,NS2,NS2,ISTANR,ICASPL,ISTARA,
     1                ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                DTEMP1,DTEMP2,DTEMP3,
CCCCC1                IQUAME,IQUASE,PSTAMV,
     1                RIGHT,
     1                ISUBRO,IBUGG3,IERROR)
          IF(ISTAFZ.EQ.'DEX')THEN
            J2=J2+1
            Y2(J2)=RIGHT
            X2(J2)=XIDTEM(ISET) - ASTRT
            D2(J2)=REAL(NUMSET+ISET)
            J2=J2+1
            Y2(J2)=RIGHT
            X2(J2)=XIDTEM(ISET) + ASTRT
            D2(J2)=REAL(NUMSET+ISET)
          ELSE
            J2=J2+1
            Y2(J2)=RIGHT
            X2(J2)=XIDTEM(ISET)
            D2(J2)=REAL(NCURV+1)
            J2=J2+1
            Y2(J2)=RIGHT
            X2(J2)=XIDTEM(ISET)
            D2(J2)=REAL(NCURV+1)
          ENDIF
C
 2000   CONTINUE
      ENDIF
C
      N2=J2
      NPLOTV=3
      GOTO9000
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PSP2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGG3,ISUBRO
 9012   FORMAT('IBUGG3,ISUBRO = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)ICASPL,N,NUMSET,N2,IERROR
 9013   FORMAT('ICASPL,N,NUMSET,N2,IERROR = ',A4,3I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NUMV2,ISIZE
 9014   FORMAT('NUMV2,ISIZE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,N2
          WRITE(ICOUT,9021)I,Y2(I),X2(I),D2(I)
 9021     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2E15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPAC(IHARG,NUMARG,IDEFSP,ITEXSP,
     1                  IBUGD2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE SPACING TYPE (FIXED OR PROPORTIONAL) FOR
C              TITLE, LABEL, AND LEGEND SCRIPT
C              ON A PLOT.
C              THE SPACING FOR THE SCRIPT WILL BE PLACED
C              IN THE CHARACTER VARIABLE ITEXSP.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEFSP
C                     --IBUGD2
C     OUTPUT ARGUMENTS--ITEXSP
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --APRIL     1981.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEFSP
      CHARACTER*4 ITEXSP
      CHARACTER*4 IBUGD2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(IBUGD2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPSPAC--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)IDEFSP
   53 FORMAT('IDEFSP = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)NUMARG
   54 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO55I=1,NUMARG
      WRITE(ICOUT,56)I,IHARG(I)
   56 FORMAT('I,IHARG(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   55 CONTINUE
   90 CONTINUE
C
C               ***************************
C               **  TREAT THE SPACING CASE  **
C               ***************************
C
      IF(NUMARG.LE.0)GOTO1120
      IF(IHARG(NUMARG).EQ.'ON')GOTO1120
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1120
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1120
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1120
      GOTO1140
C
 1120 CONTINUE
      ITEXSP=IDEFSP
      GOTO1180
C
 1140 CONTINUE
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'EQUA')GOTO1141
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'FIXE')GOTO1141
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'PROP')GOTO1142
C
      IERROR='YES'
      WRITE(ICOUT,1131)
 1131 FORMAT('***** ERROR IN DPSPAC--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1132)
 1132 FORMAT('      ILLEGAL ENTRY FOR SPACING ',
     1'COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1133)
 1133 FORMAT('      TEST EXAMPLE TO DEMONSTRATE THE ',
     1'PROPER FORM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1134)
 1134 FORMAT('      SUPPOSE THE THE ANALYST WISHES ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1135)
 1135 FORMAT('      TO SET THE SPACING TO PROPORTIONAL ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1136)
 1136 FORMAT('      FOR PLOT TITLES, LABELS, ETC.,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1137)
 1137 FORMAT('      THEN 2 ALLOWABLE FORMS ARE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1138)
 1138 FORMAT('            SPACING PROPORTIONAL ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1139)
 1139 FORMAT('            SPACING PROP ')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 1141 CONTINUE
      ITEXSP='FIXE'
      GOTO1180
C
 1142 CONTINUE
      ITEXSP='PROP'
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE SPACING (FIXED OR PROPORTIONAL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)
 1182 FORMAT('FOR PLOT SCRIPT AND TEXT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1183)ITEXSP
 1183 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGD2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPSPAC--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGD2,ISUBRO,IFOUND,IERROR
 9012 FORMAT('IBUGD2,ISUBRO,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)IDEFSP,ITEXSP
 9013 FORMAT('IDEFSP,ITEXSP = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPSPBA(ADEFSB,MAXSPI,ASPIBA,
CCCCC SUBROUTINE DPSPBA(IHARG,IARGT,ARG,NUMARG,ADEFSB,MAXSPI,ASPIBA,
     1                  IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE SPIKE BASES.
C              THESE ARE LOCATED IN THE VECTOR ASPIBA(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --ADEFSB
C                     --MAXSPI
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--ASPIBA (A FLOATING POINT VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --APRIL     2008. SPIKE BASE AUTOMATIC
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
CCCCC CHARACTER*4 IHARG
CCCCC CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASEQ
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGQ
C
CCCCC DIMENSION IHARG(*)
CCCCC DIMENSION IARGT(*)
CCCCC DIMENSION ARG(*)
      DIMENSION ASPIBA(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPSP'
      ISUBN2='BA  '
C
      NUMSPI=0
      IHOLD1='-999'
      HOLD1=-999.0
      HOLD2=-999.0
C
      IF(IBUGP2.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSPBA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52   FORMAT('IBUGP2,IFOUND,IERROR = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)MAXSPI,NUMSPI,NUMARG,ADEFSB,ASPIBA(1)
   53   FORMAT('MAXSPI,NUMSPI,NUMARG,ADEFSB,ASPIBA(1) = ',3I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IHOLD1,HOLD1,HOLD2
   54   FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO65I=1,NUMARG
          WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66     FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
        DO75I=1,10
          WRITE(ICOUT,76)I,ASPIBA(I)
   76     FORMAT('I,ASPIBA(I) = ',I8,2X,E15.7)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
      ENDIF
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
CCCCC APRIL 2008.  ADD SPIKE BASE AUTOMATIC <VAR>
      IF(NUMARG.GE.3.AND.IHARG(2).EQ.'AUTO')GOTO3000
      IF(NUMARG.GE.4.AND.IHARG(3).EQ.'AUTO')GOTO3000
C
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='    '
      IF(IHARG(2).EQ.'ALL')HOLD1=ADEFSB
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')HOLD1=ARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')HOLD1=ARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE INDIVIDUAL SPECIFICATIONS CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMSPI=1
      ASPIBA(1)=ADEFSB
      GOTO1270
C
 1220 CONTINUE
      NUMSPI=NUMARG-1
      IF(NUMSPI.GT.MAXSPI)NUMSPI=MAXSPI
      DO1225I=1,NUMSPI
        J=I+1
        IHOLD1=IHARG(J)
        HOLD1=ARG(J)
        HOLD2=HOLD1
        IF(IHOLD1.EQ.'ON')HOLD2=ADEFSB
        IF(IHOLD1.EQ.'OFF')HOLD2=ADEFSB
        IF(IHOLD1.EQ.'AUTO')HOLD2=ADEFSB
        IF(IHOLD1.EQ.'DEFA')HOLD2=ADEFSB
        ASPIBA(I)=HOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO1278I=1,NUMSPI
          WRITE(ICOUT,1276)I,ASPIBA(I)
 1276     FORMAT('SPIKE BASE ',I6,' HAS JUST BEEN SET TO ',G15.7)
          CALL DPWRST('XXX','BUG ')
 1278   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 2--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMSPI=MAXSPI
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=ADEFSB
      IF(IHOLD1.EQ.'OFF')HOLD2=ADEFSB
      IF(IHOLD1.EQ.'AUTO')HOLD2=ADEFSB
      IF(IHOLD1.EQ.'DEFA')HOLD2=ADEFSB
      DO1315I=1,NUMSPI
        ASPIBA(I)=HOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,1316)ASPIBA(I)
 1316   FORMAT('ALL SPIKE BASES HAVE JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               ******************************************************
C               **  STEP 30--                                       **
C               **  TREAT THE SPIKE BASE AUTOMATIC <VARIABLE>   CASE**
C               ******************************************************
C
 3000 CONTINUE
C
C               **********************************************
C               **  STEP 31--                               **
C               **  CHECK THE VALIDITY OF ARGUMENT 2 (OR 3) **
C               **  (THIS WILL BE THE RESPONSE VARIABLE)    **
C               **********************************************
C
      ISTEPN='31'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(3)
      IHLEF2=IHARG2(3)
      IF(IHARG(3).EQ.'DIST'.AND.IHARG2(3).EQ.'INCT')THEN
        IHLEFT=IHARG(4)
        IHLEF2=IHARG2(4)
      ENDIF
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHLEFT,IHLEF2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      ICOLL=IVALUE(ILOCV)
      NLEFT=IN(ILOCV)
C
C               *****************************************
C               **  STEP 32--                          **
C               **  CHECK TO SEE THE TYPE CASE--       **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET/EXCEPT; OR             **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='32'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO3290
      DO3200J=1,NUMARG
      J1=J
      IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ') GOTO3210
      IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ') GOTO3210
      IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ') GOTO3220
 3200 CONTINUE
      GOTO3290
 3210 CONTINUE
      ICASEQ='SUBS'
      ILOCQ=J1
      GOTO3290
 3220 CONTINUE
      ICASEQ='FOR'
      ILOCQ=J1
      GOTO3290
 3290 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO3295
      WRITE(ICOUT,3291)NUMARG,ILOCQ
 3291 FORMAT('NUMARG,ILOCQ = ',2I8)
      CALL DPWRST('XXX','BUG ')
 3295 CONTINUE
C
C               *********************************************
C               **  STEP 33--                              **
C               **  TEMPORARILY FORM THE VARIABLE Y(.)     **
C               **  WHICH WILL HOLD THE RESPONSE VARIABLE. **
C               **  FORM THIS VARIABLE BY                  **
C               **  BRANCHING TO THE APPROPRIATE SUBCASE   **
C               **  (FULL, SUBSET, OR FOR).                **
C               *********************************************
C
      ISTEPN='33'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASEQ.EQ.'FULL')GOTO3310
      IF(ICASEQ.EQ.'SUBS')GOTO3320
      IF(ICASEQ.EQ.'FOR')GOTO3330
C
 3310 CONTINUE
      DO3315I=1,NLEFT
        ISUB(I)=1
 3315 CONTINUE
      NQ=NLEFT
      GOTO3350
C
 3320 CONTINUE
      NIOLD=NLEFT
      CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERROR)
      NQ=NIOLD
      GOTO3350
C
 3330 CONTINUE
      NIOLD=NLEFT
      CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,
     1NLOCAL,ILOCS,NS,IBUGQ,IERROR)
      NQ=NFOR
      GOTO3350
C
 3350 CONTINUE
      MINN2=1
      IF(NQ.LT.MINN2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3351)
 3351   FORMAT('***** ERROR IN SPIKE BASE AUTOMATIC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3352)
 3352   FORMAT('      AFTER THE APPROPRIATE SUBSET HAS BEEN ',
     1         'EXTRACTED,')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3353)IHLEFT,IHLEF2
 3353   FORMAT('      THE NUMBER OF OBSERVATIONS REMAINING',
     1         'FROM VARIABLE ',A4,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3354)
 3354   FORMAT('      (FOR WHICH SPIKE BASE DEFINITIONS ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3355)
 3355   FORMAT('      ARE TO BE GENERATED)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3356)MINN2
 3356   FORMAT('      MUST BE ',I8,' OR LARGER;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3357)
 3357   FORMAT('      SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3358)
 3358   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,3359)(IANS(I),I=1,MIN(80,IWIDTH))
 3359     FORMAT('      ',80A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
      ENDIF
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
      J=0
      IMAX=NLEFT
      IF(NQ.LT.NLEFT)IMAX=NQ
      DO3370I=1,IMAX
        IF(ISUB(I).EQ.0)GOTO3370
        J=J+1
C
        IJ=MAXN*(ICOLL-1)+I
        IF(ICOLL.LE.MAXCOL)Y(J)=V(IJ)
        IF(ICOLL.EQ.MAXCP1)Y(J)=PRED(I)
        IF(ICOLL.EQ.MAXCP2)Y(J)=RES(I)
        IF(ICOLL.EQ.MAXCP3)Y(J)=YPLOT(I)
        IF(ICOLL.EQ.MAXCP4)Y(J)=XPLOT(I)
        IF(ICOLL.EQ.MAXCP5)Y(J)=X2PLOT(I)
        IF(ICOLL.EQ.MAXCP6)Y(J)=TAGPLO(I)
C
 3370 CONTINUE
      NS=J
      NY=J
C
C               *****************************************
C               **  STEP 34--                          **
C               **  IF HAVE THE FORM--                 **
C               **  SPIKE BASE AUTOMATIC DISTINCT X    **
C               **  EXTRACT THE DISTINCT VALUES        **
C               **  FROM THE TARGET VARIABLE Y(.)   .  **
C               **  STORE THEM IN X(.)   .             **
C               **  IF HAVE THE FORM--                 **
C               **  SPIKE BASE AUTOMATIC X             **
C               **  DO NOTHING                         **
C               *****************************************
C
      IF(IHARG(3).EQ.'DIST'.AND.IHARG2(3).EQ.'INCT')THEN
        IWRITE='OFF'
        CALL DISTIN(Y,NY,IWRITE,X,NX,IBUGP2,IERROR)
      ELSE
        DO3411I=1,NY
          X(I)=Y(I)
 3411   CONTINUE
        NX=NY
      ENDIF
C
C               ******************************************
C               **  STEP 36--                           **
C               **  COPY VALUES IN X(.) TO ASPIBA       **
C               **        MAX NUMBER OF BARS    = 100   **
C               ******************************************
C
      IMAX=NX
      IF(IMAX.GT.MAXSPI)IMAX=MAXSPI
      DO3650I=1,IMAX
        ASPIBA(I)=X(I)
 3650 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO3675I=1,IMAX
          WRITE(ICOUT,3676)I,ASPIBA(I)
 3676     FORMAT('SPIKE BASE ',I6,' HAS JUST BEEN SET TO ',G15.7)
          CALL DPWRST('XXX','BUG ')
 3675   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'ON')THEN
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPBA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012   FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IHOLD1,HOLD1,HOLD2
 9014   FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
        CALL DPWRST('XXX','BUG ')
        DO9025I=1,NUMARG
          WRITE(ICOUT,9026)IHARG(I),IARGT(I),ARG(I)
 9026     FORMAT('IHARG(I),IARGT(I),ARG(I) = ',2(A4,2X),I8)
         CALL DPWRST('XXX','BUG ')
 9025   CONTINUE
        DO9035I=1,10
          WRITE(ICOUT,9036)I,ASPIBA(I)
 9036     FORMAT('I,ASPIBA(I) = ',I8,2X,G15.7)
          CALL DPWRST('XXX','BUG ')
 9035   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPCO(IHARG,IARG,NUMARG,IDEFSC,MAXSPI,ISPICO,
     1                  ISPIC2,IRGBMX,ICASCL,
     1                  IBUGP2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE SPIKE COLORS.
C              THESE ARE LOCATED IN THE VECTOR ISPICO(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEFSC
C                     --MAXSPI
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--ISPICO (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEFSC
      CHARACTER*4 ISPICO
      CHARACTER*4 ICASCL
      CHARACTER*4 IBUGP2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARG(*)
      DIMENSION ISPICO(*)
      DIMENSION ISPIC2(MAXSPI,3)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPSP'
      ISUBN2='CO  '
C
      NUMSPI=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'SPCO')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSPCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGP2,ISUBRO,IFOUND,IERROR
   52   FORMAT('IBUGP2,ISUBRO,IFOUND,IERROR = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)MAXSPI,NUMARG
   53   FORMAT('MAXSPI,NUMARG = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IHOLD1,IHOLD2,IDEFSC
   54   FORMAT('IHOLD1,IHOLD2,IDEFSC = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        DO65I=1,NUMARG
          WRITE(ICOUT,66)I,IARG(I),IHARG(I)
   66     FORMAT('I,IARG(I),IHARG(I) = ',2I8,2X,A4)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
        DO75I=1,10
          WRITE(ICOUT,76)I,ISPICO(I),ISPIC2(I,1),ISPIC2(I,2),ISPIC2(I,3)
   76     FORMAT('I,ISPICO(I),ISPIC2(I,1),ISPIC2(I,2),ISPIC2(I,3) = ',
     1           I8,2X,A4,2X,3I5)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
      ENDIF
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'SPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
      IF(ICASCL.EQ.'RGB ')GOTO2000
      IF(NUMARG.EQ.1)THEN
        GOTO1200
      ELSEIF(NUMARG.EQ.2)THEN
        IF(IHARG(2).EQ.'ALL')THEN
          IHOLD1=IDEFSC
          GOTO1300
        ELSE
          GOTO1200
        ENDIF
      ELSEIF(NUMARG.EQ.3)THEN
        IF(IHARG(2).EQ.'ALL')THEN
          IHOLD1=IHARG(3)
          GOTO1300
        ELSEIF(IHARG(3).EQ.'ALL')THEN
          IHOLD1=IHARG(2)
          GOTO1300
        ELSE
          GOTO1200
        ENDIF
      ELSE
        GOTO1200
      ENDIF
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE INDIVIDUAL SPECIFICATIONS CASE   **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'SPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)THEN
        NUMSPI=1
        ISPICO(1)=IDEFSC
      ELSE
        NUMSPI=NUMARG-1
        IF(NUMSPI.GT.MAXSPI)NUMSPI=MAXSPI
        DO1225I=1,NUMSPI
          J=I+1
          IHOLD1=IHARG(J)
          IHOLD2=IHOLD1
          IF(IHOLD1.EQ.'ON')IHOLD2=IDEFSC
          IF(IHOLD1.EQ.'OFF')IHOLD2=IDEFSC
          IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFSC
          IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFSC
          ISPICO(I)=IHOLD2
 1225   CONTINUE
      ENDIF
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO1278I=1,NUMSPI
          WRITE(ICOUT,1276)I,ISPICO(I)
 1276     FORMAT('SPIKE COLOR ',I6,' HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
 1278   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 2--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'SPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMSPI=MAXSPI
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2=IDEFSC
      IF(IHOLD1.EQ.'OFF')IHOLD2=IDEFSC
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFSC
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFSC
      DO1315I=1,NUMSPI
        ISPICO(I)=IHOLD2
 1315 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,1316)ISPICO(I)
 1316   FORMAT('ALL SPIKE COLORS HAVE JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C     RGB COLORS CASE: 3 COLORS SHOULD BE GIVEN
C
C                      SPIKE COLOR
C                      SPIKE COLOR IRED IBLUE IGREEN
C                      SPIKE COLOR IRED IBLUE IGREEN ALL
C                      SPIKE COLOR ALL IRED IBLUE IGREEN
C                      SPIKE COLOR IRED1 IBLUE1 IGREEN1 IRED2 ...
C
C                      THE "RGB" KEYWORD HAS ALREADY BEEN STRIPPED
C                      OUT.  NOTE THAT THE DEFAULT COLOR IS -1
C                      (I.E., NO RGB COLOR VALUES SPECIFIED).
C
 2000 CONTINUE
C
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'SPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      JHOLD1=-1
      JHOLD2=-1
      JHOLD3=-1
      NUMSPI=MAXSPI
C
      IF(NUMARG.EQ.2 .AND. IHARG(2).EQ.'ALL')THEN
        GOTO2300
      ELSEIF(NUMARG.EQ.5)THEN
        IF(IHARG(2).EQ.'ALL')THEN
          JHOLD1=IARG(3)
          JHOLD2=IARG(4)
          JHOLD3=IARG(5)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ELSEIF(IHARG(5).EQ.'ALL')THEN
          JHOLD1=IARG(2)
          JHOLD2=IARG(3)
          JHOLD3=IARG(4)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD1=-1
          GOTO2300
        ENDIF
      ENDIF
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
      ISTEPN='2A'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'SPCO')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)THEN
        NUMSPI=1
        ISPIC2(1,1)=-1
        ISPIC2(1,2)=-1
        ISPIC2(1,3)=-1
      ELSE
        NTEMP=NUMARG-1
        NUMSPI=NTEMP/3
        IF(NUMSPI.LT.1)THEN
          NUMSPI=1
          ISPIC2(1,1)=-1
          ISPIC2(1,2)=-1
          ISPIC2(1,3)=-1
        ELSEIF(NUMSPI.GT.MAXSPI)THEN
          NUMSPI=MAXSPI
        ENDIF
        DO2225I=1,NUMSPI
          J1=(I-1)*3+2
          J2=J1+1
          J3=J1+2
          JHOLD1=IARG(J1)
          JHOLD2=IARG(J2)
          JHOLD3=IARG(J3)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
          ISPIC2(I,1)=JHOLD1
          ISPIC2(I,2)=JHOLD2
          ISPIC2(I,3)=JHOLD3
 2225   CONTINUE
      ENDIF
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO2278I=1,NUMSPI
          WRITE(ICOUT,2276)I,ISPIC2(I,1),ISPIC2(I,2),ISPIC2(I,3)
 2276     FORMAT('THE RGB COLORS OF SPIKE ',I6,
     1           ' HAVE JUST BEEN SET TO ',3I8)
          CALL DPWRST('XXX','BUG ')
 2278   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 2300 CONTINUE
      ISTEPN='2B'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'SPCO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO2315I=1,NUMSPI
        ISPIC2(I,1)=JHOLD1
        ISPIC2(I,2)=JHOLD2
        ISPIC2(I,3)=JHOLD3
 2315 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,2316)ISPIC2(I,1),ISPIC2(I,2),ISPIC2(I,3)
 2316   FORMAT('THE RGB COLORS OF ALL SPIKES HAVE JUST ',
     1         'BEEN SET TO ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'SPCO')THEN
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR,NUMSPI
 9012   FORMAT('IFOUND,IERROR,NUMSPI = ',2(A4,2X),I5)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014   FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO9075I=1,10
          WRITE(ICOUT,76)I,ISPICO(I),ISPIC2(I,1),ISPIC2(I,2),ISPIC2(I,3)
          CALL DPWRST('XXX','BUG ')
 9075   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPDI(IHARG,NUMARG,IDEFSD,MAXSPI,ISPIDI,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE SPIKE DIRECTION--
C              VERT = VERTICAL
C              HORI = HORIZONTAL
C              HOR2 = HORIZONTAL TOWARD X2-X3 PLANE (FOR 3D PLOTS)
C              THESE ARE LOCATED IN THE VECTOR ISPIDI(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEFSD
C                     --MAXSPI
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--ISPIDI (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--87/5
C     ORIGINAL VERSION--MAY       1987.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEFSD
      CHARACTER*4 ISPIDI
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION ISPIDI(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPSP'
      ISUBN2='DI  '
C
      NUMSPI=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPSPDI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXSPI,NUMSPI
   53 FORMAT('MAXSPI,NUMSPI = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEFSD
   55 FORMAT('IDEFSD = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)ISPIDI(1)
   70 FORMAT('ISPIDI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,ISPIDI(I)
   76 FORMAT('I,ISPIDI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='VERT'
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION   CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMSPI=1
      ISPIDI(1)='VERT'
      GOTO1270
C
 1220 CONTINUE
      NUMSPI=NUMARG-1
      IF(NUMSPI.GT.MAXSPI)NUMSPI=MAXSPI
      DO1225I=1,NUMSPI
      J=I+1
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
C???? IF(IHOLD1.EQ.'VERT')IHOLD2='VERT'
C???? IF(IHOLD1.EQ.'3')IHOLD2='3'
CCCCC IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFSD
CCCCC IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFSD
      ISPIDI(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMSPI
      WRITE(ICOUT,1276)I,ISPIDI(I)
 1276 FORMAT('SPIKE DIRECTION ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMSPI=MAXSPI
      IHOLD2=IHOLD1
C???? IF(IHOLD1.EQ.'2')IHOLD2='2'
C???? IF(IHOLD1.EQ.'3')IHOLD2='3'
CCCCC IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFSD
CCCCC IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFSD
      DO1315I=1,NUMSPI
      ISPIDI(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)ISPIDI(I)
 1316 FORMAT('ALL SPIKE DIRECTIONS',
     1'HAVE JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPSPDI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXSPI,NUMSPI
 9013 FORMAT('MAXSPI,NUMSPI = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEFSD
 9015 FORMAT('IDEFSD = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)ISPIDI(1)
 9030 FORMAT('ISPIDI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,ISPIDI(I)
 9036 FORMAT('I,ISPIDI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPSPE2(Y1,Y2,N,NCURVE,ICASPL,NUMLAG,MAXN,
     1                  COV11,COV22,COV12,COV21,
     1                  Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE
C              1) AUTOSPECTRUM
C              2) CO-SPECTRUM;
C              3) QUADRATURE SPECTRUM;
C              4) CROSS-SPECTRUM (CO-SPECTRUM AND CROSS-SPECTRUM);
C              5) COHERENCY DIAGRAM;
C              6) AMPLITUDE DIAGRAM;
C              7) PHASE DIAGRAM;
C              8) GAIN DIAGRAM;
C              9) ARGAND DIAGRAM.
C      NOTE--FOR THE AUTOSPECTRAL PLOT, IN ORDER THAT THE RESULTS OF
C            THE TIME SERIES ANALYSIS BE VALID AND PROPERLY INTERPRETED,
C            THE INPUT DATA IN Y1 SHOULD BE EQUI-SPACED IN TIME
C            (OR WHATEVER VARIABLE CORRESPONDS TO TIME).
C
C              THE HORIZONTAL AXIS OF THE SPECTRA PRODUCED
C              BY THIS SUBROUTINE IS FREQUENCY.
C              THIS FREQUENCY IS MEASURED IN UNITS OF
C              CYCLES PER 'DATA POINT' OR, MORE PRECISELY, IN
C              CYCLES PER UNIT TIME WHERE
C              'UNIT TIME' IS DEFINED AS THE
C              ELAPSED TIME BETWEEN ADJACENT OBSERVATIONS.
C              THE RANGE OF THE FREQUENCY AXIS IS 0.0 TO 0.5.
C
C     INPUT ARGUMENTS--Y1     = THE SINGLE PRECISION VECTOR OF
C                               (UNSORTED) OBSERVATIONS
C                               FOR THE FIRST  VARIABLE.
C                    --Y2     = THE SINGLE PRECISION VECTOR OF
C                               (UNSORTED) OBSERVATIONS.
C                               FOR THE SECOND VARIABLE.
C                      N      = THE INTEGER NUMBER OF OBSERVATIONS
C                               IN THE VECTOR X.
C     PRINTING--YES.
C     RESTRICTIONS--THE SAMPLE SIZE N MUST BE
C                   SMALLER THAN OR EQUAL TO 1000.
C                 --THE SAMPLE SIZE N MUST BE GREATER
C                   THAN OR EQUAL TO 3.
C     OTHER DATAPAC   SUBROUTINES NEEDED--PLOTC0, PLOTSP, AND CHSPPF.
C     FORTRAN LIBRARY SUBROUTINES NEEDED--SQRT.
C     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
C     LANGUAGE--ANSI FORTRAN (1977)
C     COMMENT--THE 'FAST FOURIER TRANSFORM' IS NOT USED IN THIS VERSION,
C              BUT MAY BE IMPLEMENTED IN A FUTURE VEERSION.
C            --THE USUAL MAXIMUM NUMBER OF LAGS FOR WHICH THE
C              SPECTRUM IS COMPUTED IS N/4 WHERE N IS THE SAMPLE SIZE.
C              THIS RULE IS OVERRIDDEN IN LARGE DATA SETS AND IS
C              REPLACED BY THE RULE THAT THE MAXIMUM NUMBER OF
C              LAGS = 500.  IF MORE LAGS ARE DESIRED, CHANGE THE VALUE
C              OF THE VARIABLE     MAXLAG   WITHIN THIS SUBROUTINE
C              FROM 500 TO WHATEVER DESIRED, AND ALSO CHANGE THE
C              DIMENSION OF THE VECTOR R FROM ITS PRESENT 500 TO HOWEVER
C              MANY LAGS ARE DESIRED.
C            --IF THE INPUT OBSERVATIONS IN X ARE CONSIDERED
C              TO HAVE BEEN COLLECTED 1 SECOND APART IN TIME,
C              THEN THE FREQUENCY AXIS OF THE RESULTING
C              SPECTRA WOULD BE IN UNITS OF HERTZ
C              (= CYCLES PER SECOND).
C            --THE FREQUENCY OF 0.0 CORRESPONDS TO A CYCLE IN THE DATA
C              OF INFINITE (= 1/(0.0)) LENGTH OR PERIOD.
C              THE FREQUENCY OF 0.5 CORRESPONDS TO A CYCLE
C              IN THE DATA OF LENGTH = 1/(0.5) = 2 DATA POINTS.
C            --ANY EQUI-SPACED TIME SERIES ANALYSIS IS
C              INTRINSICALLY LIMITED TO DETECTING FREQUENCIES
C              NO LARGER THAN 0.5 CYCLES PER DATA POINT;
C              THIS CORRESPONDS TO THE FACT THAT THE
C              SMALLEST DETECTABLE CYCLE IN THE DATA
C              IS 2 DATA POINTS PER CYCLE.
C     REFERENCES--JENKINS AND WATTS, ESPECIALLY PAGE 290.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1966)
C               EXCEPTION--HOLLERITH STRINGS IN FORMAT STATEMENTS
C                          DENOTED BY QUOTES RATHER THAN NH.
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--MAY       1978.
C     UPDATED         --JULY      1979.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --JANUARY   1988. (SPECTRUM POINTS FROM 120 TO
C                                       N/2 TO 1000
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION D(*)
C
      DIMENSION COV11(*)
      DIMENSION COV22(*)
      DIMENSION COV12(*)
      DIMENSION COV21(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----DATA STATEMENTS-------------------------------------------------
C
      DATA PI/3.14159265359/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPSP'
      ISUBN2='E2  '
      IERROR='NO'
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'SPE2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPSPE2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)ICASPL,N,NUMLAG,MAXN
   71   FORMAT('ICASPL,N,NUMLAG,MAXN = ',A4,2X,3I8)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,Y1(I),Y2(I)
   74     FORMAT('I, Y1(I), Y2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
      ENDIF
C
      KMAX=0
      Y2BAR=0.0
      VARBY2=0.0
      COVB12=0.0
      ALK=0.0
      QK=0.0
      AMPLIT=0.0
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.3)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN SPECTRAL PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 2.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE NUMBER OF OBSERVATIONS = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y1(1)
      DO60I=1,N
        IF(Y1(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,31)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)HOLD
   62 FORMAT('      ALL ELEMENTS IN Y1 ARE IDENTICALLY EQUAL TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   69 CONTINUE
C
C
C               ************************************************
C               **  STEP 1--                                  **
C               **  COMPUTE THE SAMPLE MEAN, VARIANCE AND     **
C               **  SUM OF SQUARED DEVIATIONS.                **
C               ************************************************
C
      AN=N
      SUM=0.0
      DO100I=1,N
       SUM=SUM+Y1(I)
  100 CONTINUE
      Y1BAR=SUM/AN
      SUM=0.0
      DO200I=1,N
        SUM=SUM+(Y1(I)-Y1BAR)*(Y1(I)-Y1BAR)
  200 CONTINUE
      SSQY1=SUM
      VARBY1=SSQY1/AN
      VARY1=SSQY1/(AN-1.0)
      SDY1=0.0
      IF(VARY1.GT.0.0)SDY1=SQRT(VARY1)
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,203)Y1BAR,SDY1
  203   FORMAT('SAMPLE 1: Y1BAR,SDY1 = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASPL.NE.'AUSP' .AND. ICASPL.NE.'AUPE')THEN
        SUM=0.0
        DO110I=1,N
          SUM=SUM+Y2(I)
  110   CONTINUE
        Y2BAR=SUM/AN
        SUM=0.0
        DO210I=1,N
          SUM=SUM+(Y2(I)-Y2BAR)*(Y2(I)-Y2BAR)
  210   CONTINUE
        SSQY2=SUM
        VARBY2=SSQY2/AN
        VARY2=SSQY2/(AN-1.0)
        SDY2=0.0
        IF(VARY2.GT.0.0)SDY2=SQRT(VARY2)
C
        SUM=0.0
        DO220I=1,N
          SUM=SUM+(Y1(I)-Y1BAR)*(Y2(I)-Y2BAR)
  220   CONTINUE
        SSQ12=SUM
        COVB12=SSQ12/AN
        COVB21=COVB12
C
        IF(IBUGG3.EQ.'ON')THEN
          WRITE(ICOUT,223)Y2BAR,SDY2,COVB12,COVB21
  223     FORMAT('SAMPLE 2: Y2BAR,SDY2,COVB12,COVB21 = ',4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      ENDIF
C
C               *********************************************
C               **  STEP 3--                               **
C               **  IF NECESSARY, COMPUTE THE MAXIMUM LAG  **
C               *********************************************
C
      MAXLAG=MAXN
      IF(NUMLAG.GE.1)KMAX=NUMLAG
      IF(NUMLAG.LE.0)KMAX=N/4
      IF(NUMLAG.LE.0.AND.N.LE.32)KMAX=N/2
      IF(NUMLAG.LE.0.AND.N.LE.16)KMAX=N
      IF(KMAX.GT.MAXLAG)KMAX=MAXLAG
      NM1=N-1
      IF(KMAX.GT.NM1)KMAX=NM1
      KMAXM1=KMAX-1
      AKMAXM=KMAXM1
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  COMPUTE THE AUTOCORRELATIONS FOR THE Y1 DATA.  **
C               **  REFERENCE--JENKINS AND WATTS, PAGE 382 (9.3.1) **
C               **  IF NECESSRY,                                   **
C               **  COMPUTE THE AUTOCORRELATIONS FOR THE Y2 DATA.  **
C               **  REFERENCE--JENKINS AND WATTS, PAGE 382 (9.3.3) **
C               **  IF NECESSRY,                                   **
C               **  COMPUTE THE SAMPLE CROSS-CORRELATIONS          **
C               **  REFERENCE--JENKINS AND WATTS, PAGE 383 (9.3.5) **
C               *****************************************************
C
      COV110=VARBY1
      COV220=VARBY2
      COV120=COVB12
      COV210=COVB12
      DO340K=1,KMAXM1
        SUM11=0.0
        SUM22=0.0
        SUM12=0.0
        SUM21=0.0
        NMK=N-K
        DO350I=1,NMK
          J=I+K
          SUM11=SUM11+(Y1(I)-Y1BAR)*(Y1(J)-Y1BAR)
          IF(ICASPL.NE.'AUSP' .AND. ICASPL.NE.'AUPE')THEN
            SUM22=SUM22+(Y2(I)-Y2BAR)*(Y2(J)-Y2BAR)
            SUM12=SUM12+(Y1(I)-Y1BAR)*(Y2(J)-Y2BAR)
            SUM21=SUM21+(Y2(I)-Y2BAR)*(Y1(J)-Y1BAR)
          ENDIF
  350   CONTINUE
        COV11(K)=SUM11/AN
        IF(ICASPL.NE.'AUSP' .AND. ICASPL.NE.'AUPE')THEN
          COV22(K)=SUM22/AN
          COV12(K)=SUM12/AN
          COV21(K)=SUM21/AN
        ENDIF
  340 CONTINUE
C
C               **************************************
C               **  STEP 4--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **  AND DETERMINE PLOT COORDINATES  **
C               **************************************
C
C               ********************************************************
C               **  STEP 4.1--                                        **
C               **  COMPUTE AUTOSPECTRA FOR Y1                        **
C               **  REFERENCE--JENKINS AND WATTS--PAGES 382 AND 383   **
C               **             (9.3.2 AND 9)                          **
C               ********************************************************
C
      IMAX=(N/2)
      IF(IMAX.LT.120)IMAX=120
      IF(IMAX.GT.1000)IMAX=1000
      AIMAX=IMAX
      NUMFRE=IMAX+1
C
      IF(ICASPL.EQ.'AUSP')THEN
C
        J=0
        DO1110IP1=2,NUMFRE
          J=J+1
          I=IP1-1
          AI=I
          SUM11=0.0
C
          DO1120K=1,KMAXM1
            AK=K
            ARG1=PI*AK/AKMAXM
            ARG2=PI*AI*AK/AIMAX
            WK=0.5*(1.0+COS(ARG1))
            AFACT=WK*COS(ARG2)
            SUM11=SUM11+COV11(K)*AFACT
 1120     CONTINUE
C
          FREQJ=0.5*AI/AIMAX
          SP11J=2.0*(COV110+2.0*SUM11)
          IF(SP11J.LE.0.0)SP11J=0.000001
C
          Y(J+NPLOTP)=SP11J
          X(J+NPLOTP)=FREQJ
          D(J+NPLOTP)=REAL(NCURVE)
C
 1110   CONTINUE
        NPLOTP=NPLOTP+J
        NPLOTV=2
C
C               ******************************************************
C               **  STEP 4.1--                                      **
C               **  COMPUTE AUTOPERIODOGRAM FOR Y1                  **
C               **  REFERENCE--JUNKINS AND WATTS--PAGES 21 AND 22   **
C               **             (2.1.12)                             **
C               ******************************************************
C
      ELSEIF(ICASPL.EQ.'AUPE')THEN
        NHALF=N/2
        NHALFP=NHALF+1
        IMAX=NHALFP
        IF(NHALFP.GT.MAXN)IMAX=MAXN
        IEVODD=N-2*(N/2)
        DEL=(AN+1.0)/2.0
        IF(IEVODD.EQ.0)DEL=(AN+2.0)/2.0
C
        J=0
        DO1610IP1=2,IMAX
          J=J+1
          I=IP1-1
          AI=I
          FREQI=AI/AN
          SUMA=0.0
          SUMB=0.0
C
          DO1620K=1,N
            AK=K
            OMEGA=2.0*PI*(AI/AN)
            SUMA=SUMA+Y1(K)*COS(OMEGA*(AK-DEL))
            SUMB=SUMB+Y1(K)*SIN(OMEGA*(AK-DEL))
            Z=AK-DEL
 1620     CONTINUE
          AICOEF=SUMA/AN
          BICOEF=SUMB/AN
          RSQ=AICOEF*AICOEF+BICOEF*BICOEF
          POWERI=2.0*RSQ
          IF(I.EQ.0)POWERI=POWERI/2.0
          IF(I.EQ.NHALF.AND.IEVODD.EQ.0)POWERI=POWERI/2.0
C
          IF(IBUGG3.EQ.'ON')THEN
            WRITE(ICOUT,1621)J,I,AI,AICOEF,BICOEF,RSQ,POWERI
 1621       FORMAT('J,I,AI,AICOEF,BICOEF,RSQ,POWERI = ',2I8,5G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          Y(NPLOTP+J)=POWERI
          X(NPLOTP+J)=FREQI
          D(NPLOTP+J)=REAL(NCURVE)
C
 1610   CONTINUE
        NPLOTP=NPLOTP+J
        NPLOTV=2
      ELSE
C
C               *******************************************************
C               **  COMPUTE COSPECTRUM AND QUADRATURE SPECTRUM.      **
C               **  REFERENCE--JENKINS AND WATTS--PAGE 383           **
C               **             (9.3.8,9.3.9, 9.3.10, 9.3.11)         **
C               **  REFERENCE--GRANGER AND HATANAKA, PAGE 77-79.     **
C               **  COMPUTE COHERENCY PLOT.                          **
C               **  COMPUTE AMPLITUDE PLOT.                          **
C               **  COMPUTE PHASE PLOT.                              **
C               **  COMPUTE GAIN PLOT.                               **
C               **  COMPUTE ARGAND PLOT.                             **
C               *******************************************************
C
        J=0
        JPF=0
        DO2010IP1=1,NUMFRE
          J=J+1
          I=IP1-1
          AI=I
          SUM11=0.0
          SUM22=0.0
          SUM12=0.0
          SUM21=0.0
          AL0=(COV120+COV210)/2.0
          Q0=(COV120-COV210)/2.0
C
          DO2020K=1,KMAXM1
            AK=K
            ARG1=PI*AK/AKMAXM
            ARG2=PI*AI*AK/AIMAX
            WK=0.5*(1.0+COS(ARG1))
            AFACTC=WK*COS(ARG2)
            AFACTS=WK*SIN(ARG2)
            SUM11=SUM11+COV11(K)*AFACTC
            SUM22=SUM22+COV22(K)*AFACTC
            ALK=(COV12(K)+COV21(K))/2.0
            QK=(COV12(K)-COV21(K))/2.0
            SUM12=SUM12+ALK*AFACTC
            SUM21=SUM21+QK*AFACTS
 2020     CONTINUE
C
          FREQJ=0.5*AI/AIMAX
          SP11J=2.0*(COV110+2.0*SUM11)
          SP22J=2.0*(COV220+2.0*SUM22)
          COSPJ=2.0*(AL0+2.0*SUM12)
          QUSPJ=2.0*(Q0+2.0*SUM21)
C
          IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'SPE2')THEN
            WRITE(ICOUT,2121)IP1,ALK,QK,SP11J,SP22J,COSPJ,QUSPJ
 2121       FORMAT('IP1,ALK,QK,SP11J,SP22J,COSPJ,QUSPJ = ',I8,6F10.5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(ICASPL.EQ.'COSP')THEN
            Y(NPLOTP+J)=COSPJ
            X(NPLOTP+J)=FREQJ
            D(NPLOTP+J)=REAL(NCURVE)
          ELSEIF(ICASPL.EQ.'QUSP')THEN
            Y(NPLOTP+J)=QUSPJ
            X(NPLOTP+J)=FREQJ
            D(NPLOTP+J)=REAL(NCURVE)
          ELSEIF(ICASPL.EQ.'CRSP')THEN
            Y(NPLOTP+J)=COSPJ
            X(NPLOTP+J)=FREQJ
            IVAL=(NCURVE-1)*2+1
            D(NPLOTP+J)=REAL(IVAL)
            JPF=J+NUMFRE
            Y(JPF)=QUSPJ
            X(JPF)=FREQJ
            D(JPF)=REAL(IVAL+1)
          ELSEIF(ICASPL.EQ.'COHE')THEN
            ARG=(COSPJ**2)+(QUSPJ**2)
            AMPLIT=0.0
            IF(ARG.GT.0.0)AMPLIT=SQRT(ARG)
            Y(NPLOTP+J)=AMPLIT*AMPLIT/(SP11J*SP22J)
            X(NPLOTP+J)=FREQJ
            D(NPLOTP+J)=REAL(NCURVE)
          ELSEIF(ICASPL.EQ.'AMPL')THEN
            ARG=(COSPJ**2)+(QUSPJ**2)
            Y(NPLOTP+J)=0.0
            IF(ARG.GT.0.0)Y(NPLOTP+J)=SQRT(ARG)
            X(NPLOTP+J)=FREQJ
            D(NPLOTP+J)=REAL(NCURVE)
          ELSEIF(ICASPL.EQ.'PHAS')THEN
            ARG=-QUSPJ/COSPJ
            Y(NPLOTP+J)=ATAN(ARG)
            X(NPLOTP+J)=FREQJ
            D(NPLOTP+J)=REAL(NCURVE)
          ELSEIF(ICASPL.EQ.'GAIN')THEN
            ARG=(COSPJ**2)+(QUSPJ**2)
            AMPLIT=0.0
            IF(ARG.GT.0.0)AMPLIT=SQRT(ARG)
            Y(NPLOTP+J)=AMPLIT/SP11J
            X(NPLOTP+J)=FREQJ
            D(NPLOTP+J)=REAL(NCURVE)
          ELSEIF(ICASPL.EQ.'ARGA')THEN
            Y(NPLOTP+J)=COSPJ/SP11J
            X(NPLOTP+J)=QUSPJ/SP22J
            D(NPLOTP+J)=REAL(NCURVE)
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,31)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2312)
 2312       FORMAT('      AT BRANCH POINT 681--ICASPL NOT EQUAL TO')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2314)
 2314       FORMAT('      ONE OF THE ALLOWABLE 9--AUSP, COSP, QUSP,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2315)
 2315       FORMAT('      CRSP, COHE, AMPL, PHAS, GAIN, ARGA.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2316)ICASPL
 2316       FORMAT('      ICASPL = ',A4)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
C
 2010   CONTINUE
C
        NPLOTP=J
        IF(ICASPL.EQ.'CRSP')NPLOTP=JPF
        NPLOTV=2
        IF(ICASPL.EQ.'CRSP')NPLOTV=3
      ENDIF
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'SPE2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPE2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,IERROR,NPLOTP,NPLOTV
 9012   FORMAT('ICASPL,IERROR,NPLOTP,NPLOTV = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NPLOTP
          WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016     FORMAT('I,Y(I),X(I),D(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPEC(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--FORM
C              1) AUTOSPECTRUM
C              2) CO-SPECTRUM;
C              3) QUADRATURE SPECTRUM;
C              4) CROSS-SPECTRUM (CO-SPECTRUM AND CROSS-SPECTRUM);
C              5) COHERENCY DIAGRAM;
C              6) AMPLITUDE DIAGRAM;
C              7) PHASE DIAGRAM;
C              8) GAIN DIAGRAM;
C              9) ARGAND DIAGRAM.
C             10) PERIODOGRAM
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--MAY       1978.
C     UPDATED         --JUNE      1978.
C     UPDATED         --JULY      1979.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C     UPDATED         --JANUARY   2012. USE DPPARS
C     UPDATED         --JANUARY   2012. SUPPORT FOR MULTIPLE AND
C                                       REPLICATION OPTIONS
C     UPDATED         --JANUARY   2012. ADD PERIODOGRAM HERE
C     UPDATED         --OCTOBER   2014. SPECTRAL PLOT AS SYNONYM FOR
C                                       SPECTRUM
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IFOUN1
      CHARACTER*4 IFOUN2
      CHARACTER*4 CARG0
      CHARACTER*4 CARG1
      CHARACTER*4 CARG12
      CHARACTER*4 CARG2
      CHARACTER*4 CARG3
C
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION COV11(MAXOBV)
      DIMENSION COV22(MAXOBV)
      DIMENSION COV12(MAXOBV)
      DIMENSION COV21(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XIDTE3(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION ZY1(MAXOBV)
      DIMENSION ZY2(MAXOBV)
      DIMENSION XDESGN(MAXOBV,2)
C
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y2(1))
      EQUIVALENCE (GARBAG(IGARB3),COV11(1))
      EQUIVALENCE (GARBAG(IGARB4),COV22(1))
      EQUIVALENCE (GARBAG(IGARB5),COV12(1))
      EQUIVALENCE (GARBAG(IGARB6),COV21(1))
      EQUIVALENCE (GARBAG(IGARB7),XTEMP1(1))
      EQUIVALENCE (GARBAG(IGARB8),XTEMP2(1))
      EQUIVALENCE (GARBAG(IGARB9),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGAR10),XIDTE2(1))
      EQUIVALENCE (GARBAG(JGAR11),XIDTE3(1))
      EQUIVALENCE (GARBAG(JGAR12),ZY1(1))
      EQUIVALENCE (GARBAG(JGAR13),ZY2(1))
      EQUIVALENCE (GARBAG(JGAR14),XDESGN(1,1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      IMULT='OFF'
      IREPL='OFF'
      ISUBN1='DPSP'
      ISUBN2='EC  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *********************************************************
C               **  TREAT THE FOLLOWING CASES--                         *
C               **        1) AUTOSPECTRUM                               *
C               **        2) CO-SPECTRUM;                               *
C               **        3) QUADRATURE SPECTRUM;                       *
C               **        4) CROSS-SPECTRUM (CO-SPECTRUM AND            *
C               **           CROSS-SPECTRUM);                           *
C               **        5) COHERENCY DIAGRAM;                         *
C               **        6) PHASE DIAGRAM;                             *
C               **        7) GAIN DIAGRAM;                              *
C               **        8) ARGAND DIAGRAM.                            *
C               *********************************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'SPEC')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSPEC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2,MAXCOL
   52   FORMAT('ICASPL,IAND1,IAND2,MAXCOL = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPEC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ******************************************************
C               **  STEP 1--                                        **
C               **  EXTRACT THE COMMAND                             **
C               **  LOOK FOR ONE OF THE FOLLOWING COMMANDS:         **
C               **    1) SPECTRAL PLOT Y                            **
C               **    2) MULTIPLE SPECTRAL PLOT Y1 ... YK           **
C               **    3) REPLICATED SPECTAL PLOT Y X1  X2           **
C               ******************************************************
C
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPEC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILASTC=-9999
      ISTOP=MIN(5,NUMARG-1)
      DO90I=1,NUMARG
        IF(IHARG(I).EQ.'PLOT' .OR. IHARG(1).EQ.'DIAG')THEN
          ISTOP=I
          GOTO99
        ELSEIF(IHARG(I).EQ.'SUBS' .AND. IHARG2(I).EQ.'ET  ')THEN
          ISTOP=I
          GOTO99
        ELSEIF(IHARG(I).EQ.'EXCE' .AND. IHARG2(I).EQ.'PT  ')THEN
          ISTOP=I
          GOTO99
        ELSEIF(IHARG(I).EQ.'FOR ')THEN
          ISTOP=I
          GOTO99
        ENDIF
   90 CONTINUE
   99 CONTINUE
C
      IFOUND='NO'
      DO100I=0,ISTOP
        IF(I.EQ.0)THEN
          CARG0='    '
          CARG1=ICOM
          CARG12=ICOM2
          CARG2=IHARG(I+1)
          CARG3=IHARG(I+2)
        ELSE
          IF(I.EQ.1)THEN
            CARG0=ICOM
          ELSE
            CARG0=IHARG(I-1)
          ENDIF
          CARG1=IHARG(I)
          CARG12=IHARG2(I)
          CARG2=IHARG(I+1)
          CARG3=IHARG(I+2)
        ENDIF
C
        IF(IHARG(I).EQ.'=')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(CARG1.EQ.'AUTO' .AND. CARG2.EQ.'SPEC')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I+1)
          ICASPL='AUSP'
        ELSEIF(CARG1.EQ.'AUTO' .AND. CARG2.EQ.'PERI')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I+1)
          ICASPL='AUPE'
        ELSEIF(CARG1.EQ.'PERI')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='AUPE'
        ELSEIF(CARG1.EQ.'AUTO')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='AUSP'
        ELSEIF(CARG1.EQ.'CO  ' .AND. CARG2.EQ.'SPEC')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I+1)
          ICASPL='COSP'
        ELSEIF(CARG1.EQ.'COSP')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='COSP'
        ELSEIF(CARG1.EQ.'QUAD' .AND. CARG2.EQ.'SPEC')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I+1)
          ICASPL='QUSP'
        ELSEIF(CARG1.EQ.'QUAD'.AND.CARG12.EQ.'RATU')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='QUSP'
        ELSEIF(CARG1.EQ.'CROS' .AND. CARG2.EQ.'SPEC')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I+1)
          ICASPL='CRSP'
        ELSEIF(CARG1.EQ.'CROS' .AND. CARG12.EQ.'SSPE')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='CRSP'
        ELSEIF(CARG1.EQ.'COHE' .AND. CARG2.EQ.'SPEC')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I+1)
          ICASPL='COHE'
        ELSEIF(CARG1.EQ.'COHE')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='COHE'
        ELSEIF(CARG1.EQ.'AMPL' .AND. CARG2.EQ.'SPEC')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I+1)
          ICASPL='AMPL'
        ELSEIF(CARG1.EQ.'AMPL')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='AMPL'
        ELSEIF(CARG1.EQ.'PHAS' .AND. CARG2.EQ.'SPEC')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I+1)
          ICASPL='PHAS'
        ELSEIF(CARG1.EQ.'PHAS')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='PHAS'
        ELSEIF(CARG1.EQ.'GAIN' .AND. CARG2.EQ.'SPEC')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I+1)
          ICASPL='GAIN'
        ELSEIF(CARG1.EQ.'GAIN')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='GAIN'
        ELSEIF(CARG1.EQ.'ARGA' .AND. CARG2.EQ.'SPEC')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I+1)
          ICASPL='ARGA'
        ELSEIF(CARG1.EQ.'ARGA')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='ARGA'
        ELSEIF(CARG1.EQ.'SPEC' .AND. CARG0.NE.'CO  ' .AND.
     1         CARG0.NE.'QUAD' .AND. CARG0.NE.'CROS' .AND.
     1         CARG0.NE.'COHE' .AND. CARG0.NE.'AMPL' .AND.
     1         CARG0.NE.'PHAS' .AND. CARG0.NE.'GAIN' .AND.
     1         CARG0.NE.'ARGA')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
          ICASPL='AUSP'
        ELSEIF(CARG1.EQ.'PLOT' .OR. CARG1.EQ.'DIAG')THEN
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
        ELSEIF(CARG1.EQ.'REPL')THEN
          IREPL='ON'
        ELSEIF(CARG1.EQ.'MULT')THEN
          IMULT='ON'
        ENDIF
  100 CONTINUE
C
      IF(IFOUN1.EQ.'YES' .AND. IFOUN2.EQ.'YES')IFOUND='YES'
      IF(IFOUND.EQ.'NO')GOTO9000
C
      IF(IMULT.EQ.'ON')THEN
        IF(IREPL.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN SPECTRAL/PERIODOGRAM PLOT--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,102)
  102     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"REPLICATION" FOR THE SPECTRAL PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        IF(ICASPL.NE.'AUSP' .AND. ICASPL.NE.'AUPE')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,107)
  107     FORMAT('      THE "MULTIPLE" OPTION IS ONLY SUPPORTED FOR')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,109)
  109     FORMAT('      AUTO SPECTRAL PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      IF(ILASTC.GE.1)THEN
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        ILASTC=0
      ENDIF
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'SPEC')THEN
        WRITE(ICOUT,112)ICASPL,IMULT,IREPL
  112   FORMAT('ICASPL,IMULT,IREPL = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPEC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='SPECTRAL PLOT'
      IF(ICASPL.EQ.'AUPE')INAME='PERIODOGRAM'
      MINNA=1
      MAXNA=100
      MINN2=1
      IFLAGE=1
      IF(IMULT.EQ.'ON')IFLAGE=0
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      IF(ICASPL.EQ.'AUSP' .OR. ICASPL.EQ.'AUPE')THEN
        MINNVA=1
        MAXNVA=1
      ELSE
        MINNVA=2
        MAXNVA=2
      ENDIF
      IF(IREPL.EQ.'ON')THEN
        MINNVA=MINNVA+1
        MAXNVA=MAXNVA+2
      ELSEIF(IMULT.EQ.'ON')THEN
        MINNVA=1
        MAXNVA=MAXSPN
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPEC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      NRESP=0
      NREPL=0
      IF(ICASPL.EQ.'AUSP' .OR. ICASPL.EQ.'AUPE')THEN
        IF(IREPL.EQ.'OFF' .AND. NUMVAR.GT.1)IMULT='ON'
      ENDIF
      IF(IMULT.EQ.'ON')THEN
        NRESP=NUMVAR
      ELSEIF(IREPL.EQ.'ON')THEN
        NRESP=1
        NREPL=NUMVAR-NRESP
        IF(NREPL.LT.1 .OR. NREPL.GT.2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,511)
  511     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,512)
  512     FORMAT('      MUST BE BETWEEN 1 AND 2;  SUCH WAS NOT THE ',
     1           'CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,513)NREPL
  513     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ELSE
        NRESP=1
      ENDIF
C
C               **********************************************************
C               **  STEP 3--                                            **
C               **  DETERMINE IF THE ANALYST HAS SPECIFIED THE NUMBER   **
C               **  OF LAGS DESIRED FOR THE CROSS-SPECTRAL ANALYSIS.    **
C               **  SEARCH FOR THE USER DEFINED PARAMETERS LAGS, LAG,   **
C               **  INTERNAL TABLE FOR THE PARAMETER NAMES              **
C               **  OR NUMLAG (WITH THE SEARCH CONDUCTED IN THAT ORDER  **
C               **  AND WITH THE FIRST FIND TERMINATING THE SEARCH.     **
C               **  IF FOUND, USE THE SPECIFIED VALUE (WHICH MUST BE    **
C               **  BETWEEN 1 AND 1000, INCLUSIVE);  IF NOT FOUUND, USE **
C               **  THE DEFAULT VALUE (USUALLY NS/4) WHICH WILL BE      **
C               **  DEFINED IN THE SUBROUTINE DPSPE2.                   **
C               **********************************************************
C
      ISTEPN='3'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPEC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMLAG=0
      IF(ICASPL.EQ.'AUPE')GOTO390
C
      IH='LAGS'
      IH2='    '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'NO')THEN
        NUMLAG=INT(VALUE(ILOCV)+0.5)
        GOTO390
      ENDIF
C
      IH='LAG '
      IH2='    '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'NO')THEN
        NUMLAG=INT(VALUE(ILOCV)+0.5)
        GOTO390
      ENDIF
C
      IH='NUML'
      IH2='AG  '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'NO')NUMLAG=INT(VALUE(ILOCV)+0.5)
C
  390 CONTINUE
C
C               ********************************************
C               **  STEP 6--                              **
C               **  GENERATE THE SPECTRAL       PLOTS FOR **
C               **  THE VARIOUS CASES.                    **
C               ********************************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPEC')THEN
        ISTEPN='6'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,601)NRESP,NREPL
  601   FORMAT('NRESP,NREPL = ',2I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NREPL.EQ.0)THEN
        ISTEPN='8A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPEC')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
        NPLOTP=0
        DO810IRESP=1,NRESP
          NCURVE=IRESP
C
          IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPEC')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,811)IRESP,NCURVE
  811       FORMAT('IRESP,NCURVE = ',2I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=2
          IF(ICASPL.EQ.'AUSP' .OR. ICASPL.EQ.'AUPE')NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,Y2,XTEMP2,NS,NS,NS,ICASE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************************
C               **  STEP 8B--                                      **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C               *****************************************************
C
          CALL DPSPE2(Y1,Y2,NS,NCURVE,ICASPL,NUMLAG,MAXN,
     1                COV11,COV22,COV12,COV21,
     1                Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
  810   CONTINUE
C
C               *****************************************************
C               **  STEP 9A--                                      **
C               **  CASE 3: ONE OR TWO  REPLICATION VARIABLES.     **
C               **          FOR THIS CASE, THE NUMBER OF RESPONSE  **
C               **          VARIABLES MUST BE EXACTLY 1.           **
C               *****************************************************
C
      ELSEIF(NREPL.GE.1)THEN
        ISTEPN='9A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPEC')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        J=0
        IMAX=NRIGHT(1)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO910I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO910
          J=J+1
C
C         RESPONSE VARIABLE IN Y1
C
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
          ICOLC=1
C
C         SECOND RESPONSE VARIABLE IN Y2
C
          IF(ICASPL.NE.'AUSP' .AND. ICASPL.NE.'AUPE')THEN
            IJ=MAXN*(ICOLR(2)-1)+I
            IF(ICOLR(2).LE.MAXCOL)Y2(J)=V(IJ)
            IF(ICOLR(2).EQ.MAXCP1)Y2(J)=PRED(I)
            IF(ICOLR(2).EQ.MAXCP2)Y2(J)=RES(I)
            IF(ICOLR(2).EQ.MAXCP3)Y2(J)=YPLOT(I)
            IF(ICOLR(2).EQ.MAXCP4)Y2(J)=XPLOT(I)
            IF(ICOLR(2).EQ.MAXCP5)Y2(J)=X2PLOT(I)
            IF(ICOLR(2).EQ.MAXCP6)Y2(J)=TAGPLO(I)
            ICOLC=2
          ENDIF
C
          DO920IR=1,MIN(NREPL,2)
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XDESGN(J,IR)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XDESGN(J,IR)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XDESGN(J,IR)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XDESGN(J,IR)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XDESGN(J,IR)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XDESGN(J,IR)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XDESGN(J,IR)=TAGPLO(I)
  920     CONTINUE
C
  910   CONTINUE
        NLOCAL=J
C
C       *****************************************************
C       **  STEP 9B--                                      **
C       **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C       **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C       **                                                 **
C       **  FOR THIS CASE, WE NEED TO LOOP THROUGH THE     **
C       **  VARIOUS REPLICATIONS.                          **
C       *****************************************************
C
        ISTEPN='9B'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPEC')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,931)
  931     FORMAT('***** FROM THE MIDDLE  OF DPSPEC--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,932)ICASPL,NUMVAR,NLOCAL
  932     FORMAT('ICASPL,NUMVAR,NQ = ',A4,2I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO935I=1,NLOCAL
              WRITE(ICOUT,936)I,Y1(I),XDESGN(I,1),XDESGN(I,2)
  936         FORMAT('I,Y1(I),XDESGN(I,1),XDESGN(I,2) = ',I8,3F12.5)
              CALL DPWRST('XXX','BUG ')
  935       CONTINUE
          ENDIF
        ENDIF
C
C       *****************************************************
C       **  STEP 9C--                                      **
C       **  FIND THE DISTINCT VALUES IN EACH OF THE        **
C       **  REPLICATION VARIABLES.                         **
C       *****************************************************
C
        CALL DPFRE5(XDESGN(1,1),XDESGN(1,2),
     1             NREPL,NLOCAL,MAXOBV,
     1             XIDTEM,XIDTE2,
     1             XTEMP1,XTEMP2,
     1             NUMSE1,NUMSE2,
     1             IBUGG3,ISUBRO,IERROR)
C
C       *****************************************************
C       **  STEP 9D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        NPLOTP=0
        NCURVE=0
        IF(NREPL.EQ.1)THEN
          J=0
          DO1110ISET1=1,NUMSE1
            K=0
            DO1130I=1,NLOCAL
              IF(XIDTEM(ISET1).EQ.XDESGN(I,1))THEN
                K=K+1
                ZY1(K)=Y1(I)
                ZY2(K)=Y2(I)
              ENDIF
 1130       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPSPE2(ZY1,ZY2,NTEMP,NCURVE,ICASPL,NUMLAG,MAXN,
     1                    COV11,COV22,COV12,COV21,
     1                    Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
            ENDIF
 1110     CONTINUE
        ELSEIF(NREPL.EQ.2)THEN
          J=0
          NTOT=NUMSE1*NUMSE2
          DO1210ISET1=1,NUMSE1
          DO1220ISET2=1,NUMSE2
            K=0
            DO1290I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2)
     1          )THEN
                K=K+1
                ZY1(K)=Y1(I)
                ZY2(K)=Y2(I)
              ENDIF
 1290       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPSPE2(ZY1,ZY2,NTEMP,NCURVE,ICASPL,NUMLAG,MAXN,
     1                    COV11,COV22,COV12,COV21,
     1                    Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
            ENDIF
 1220     CONTINUE
 1210     CONTINUE
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'SPEC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPEC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR,NUMLAG,MAXN
 9012   FORMAT('IFOUND,IERROR,NUMLAG,MAXN = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',3I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GE.1)THEN
          DO9015I=1,NPLOTP
            WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9015     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPL(IBUGA2,IBUGA3,IBUGQ,ISUBRO,
     1                 ICASAN,ICAPSW,IFORSW,
     1                 IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT A SPLINE FIT (ANY DEGREE FROM 1 TO 10).
C     NOTE--FOR A GIVEN DEGREE, ALL LOW-ORDER DERIVATIVES WILL BE SET
C           SO THAT THE FUNCTION WILL BE SMOOTH AT THE KNOTS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1978.
C     UPDATED         --JUNE      1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --OCTOBER   1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --MARCH     1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --AUGUST    1981.
C     UPDATED         --SEPTEMBER 1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     1988. ADD LOFCDF
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE
C                                       COMMON
C                                       MOVE SOME DIMENSIONS TO DPSPL
C     UPDATED         --MAY       2009. REPLACE USE OF DPSWAP WITH
C                                       BUILT-IN SWAP SPACE
C     UPDATED         --JULY      2019. TWEAK STORAGE SPACE
C
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASSF
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IH 
      CHARACTER*4 IH2
      CHARACTER*4 IREPU
      CHARACTER*4 IRESU
      CHARACTER*4 IBUGJU
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION B(100)
      DIMENSION SDB(100)
      DIMENSION B2(100)
      DIMENSION SDB2(100)
      DIMENSION BTEMP(100)
      DIMENSION EKNOT(200)
      DIMENSION XPY(50)
      DIMENSION RIGHT(50)
      DIMENSION XPX(50,50)
      DIMENSION SSQ(50,50)
      DIMENSION A(50,50)
C
      DIMENSION PRED2(MAXOBV)
      DIMENSION RES2(MAXOBV)
      DIMENSION XKNOT(MAXOBV)
      DIMENSION W(MAXOBV)
      DIMENSION VSCRT(10*MAXOBV)
      DIMENSION V1(MAXOBV)
      DIMENSION V2(MAXOBV)
      DIMENSION DUM1(MAXOBV)
      DIMENSION DUM2(MAXOBV)
      DIMENSION AJUNK(MAXOBV)
C
      EQUIVALENCE (XKNOT(1),X3D(1))
      EQUIVALENCE (W(1),D(1))
      EQUIVALENCE (GARBAG(IGARB1),PRED2(1))
      EQUIVALENCE (GARBAG(IGARB2),RES2(1))
      EQUIVALENCE (GARBAG(IGARB3),V1(1))
      EQUIVALENCE (GARBAG(IGARB4),V2(1))
      EQUIVALENCE (GARBAG(IGARB5),DUM1(1))
      EQUIVALENCE (GARBAG(IGARB6),DUM2(1))
      EQUIVALENCE (GARBAG(IGARB7),AJUNK(1))
      EQUIVALENCE (GARBAG(IGARB8),SDB(1))
      EQUIVALENCE (GARBAG(IGARB8+100),SDB2(1))
      EQUIVALENCE (GARBAG(IGARB8+200),B(1))
      EQUIVALENCE (GARBAG(IGARB8+300),B2(1))
      EQUIVALENCE (GARBAG(IGARB8+400),XPY(1))
      EQUIVALENCE (GARBAG(IGARB8+500),RIGHT(1))
      EQUIVALENCE (GARBAG(IGARB8+600),BTEMP(1))
      EQUIVALENCE (GARBAG(IGARB8+700),EKNOT(1))
      EQUIVALENCE (GARBAG(IGARB9),XPX(1,1))
      EQUIVALENCE (GARBAG(IGARB9+5000),SSQ(1,1))
      EQUIVALENCE (GARBAG(IGARB9+10000),A(1,1))
      EQUIVALENCE (GARBAG(IGAR10),VSCRT(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPSP'
      ISUBN2='L   '
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *********************************
C               **  TREAT THE SPLINE FIT CASE  **
C               *********************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PSPL')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGA2,IBUGA3,IBUGQ,ISUBRO,ICASAN
   53   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO,ICASAN = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PSPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *********************************
C               **  STEP 1.1--                 **
C               **  SEARCH FOR SPLINE FIT      **
C               **  (WITH UNSPECIFIED DEGREE)  **
C               *********************************
C
C
      IF(ICOM.EQ.'SPLI'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'FIT')THEN
        ICASSF='SF'
        ILASTC=1
C
C               *********************************************
C               **  STEP 1.21--                            **
C               **  SEARCH FOR 1-ST DEGREE SPLINE FITTING  **
C               *********************************************
C
      ELSEIF(NUMARG.GE.4.AND.
     1       ICOM.EQ.'1'.AND.IHARG(1).EQ.'ST'.AND.
     1       IHARG(2).EQ.'DEGR'.AND.IHARG(3).EQ.'SPLI'.AND.
     1       IHARG(4).EQ.'FIT')THEN
        ICASSF='1SF'
        ILASTC=4
      ELSEIF(NUMARG.GE.3.AND.
     1      (ICOM.EQ.'1ST' .OR. ICOM.EQ.'FIRS' .OR. ICOM.EQ.'1' .OR.
     1       ICOM.EQ.'ONE').AND.
     1       IHARG(1).EQ.'DEGR'.AND.IHARG(2).EQ.'SPLI'.AND.
     1       IHARG(3).EQ.'FIT')THEN
        ICASSF='1SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.
     1       ICOM.EQ.'DEGR'.AND.
     1       (IHARG(1).EQ.'1' .OR. IHARG(1).EQ.'ONE').AND.
     1       IHARG(2).EQ.'SPLI'.AND.IHARG(3).EQ.'FIT')THEN
        ICASSF='1SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.
     1       ICOM.EQ.'LINE'.AND.IHARG(1).EQ.'SPLI'.AND.
     1       IHARG(2).EQ.'FIT')THEN
        ICASSF='1SF'
        ILASTC=2
C
C               *********************************************
C               **  STEP 1.22--                            **
C               **  SEARCH FOR 2-ND DEGREE SPLINE FITTING  **
C               *********************************************
C
      ELSEIF(NUMARG.GE.4.AND.
     1       ICOM.EQ.'2'.AND.IHARG(1).EQ.'ND'.AND.
     1       IHARG(2).EQ.'DEGR'.AND.IHARG(3).EQ.'SPLI'.AND.
     1       IHARG(4).EQ.'FIT')THEN
        ICASSF='2SF'
        ILASTC=4
      ELSEIF(NUMARG.GE.3.AND.
     1      (ICOM.EQ.'2ND' .OR. ICOM.EQ.'SECO' .OR. ICOM.EQ.'2' .OR.
     1       ICOM.EQ.'TWO').AND.
     1       IHARG(1).EQ.'DEGR'.AND.IHARG(2).EQ.'SPLI'.AND.
     1       IHARG(3).EQ.'FIT')THEN
        ICASSF='2SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.
     1       ICOM.EQ.'DEGR'.AND.
     1       (IHARG(1).EQ.'2' .OR. IHARG(1).EQ.'SECO').AND.
     1       IHARG(2).EQ.'SPLI'.AND.IHARG(3).EQ.'FIT')THEN
        ICASSF='2SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.
     1       ICOM.EQ.'QUAD'.AND.IHARG(1).EQ.'SPLI'.AND.
     1       IHARG(2).EQ.'FIT')THEN
        ICASSF='2SF'
        ILASTC=2
C
C               *********************************************
C               **  STEP 1.23--                            **
C               **  SEARCH FOR 3-RD DEGREE SPLINE FITTING  **
C               *********************************************
C
C
      ELSEIF(NUMARG.GE.4.AND.
     1       ICOM.EQ.'3'.AND.IHARG(1).EQ.'RD'.AND.
     1       IHARG(2).EQ.'DEGR'.AND.IHARG(3).EQ.'SPLI'.AND.
     1       IHARG(4).EQ.'FIT')THEN
        ICASSF='3SF'
        ILASTC=4
      ELSEIF(NUMARG.GE.3.AND.
     1      (ICOM.EQ.'3RD' .OR. ICOM.EQ.'THIR' .OR. ICOM.EQ.'3' .OR.
     1       ICOM.EQ.'THRE').AND.
     1       IHARG(1).EQ.'DEGR'.AND.IHARG(2).EQ.'SPLI'.AND.
     1       IHARG(3).EQ.'FIT')THEN
        ICASSF='3SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.
     1       ICOM.EQ.'DEGR'.AND.
     1       (IHARG(1).EQ.'3' .OR. IHARG(1).EQ.'THIR').AND.
     1       IHARG(2).EQ.'SPLI'.AND.IHARG(3).EQ.'FIT')THEN
        ICASSF='3SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.
     1       ICOM.EQ.'CUBI'.AND.IHARG(1).EQ.'SPLI'.AND.
     1       IHARG(2).EQ.'FIT')THEN
        ICASSF='3SF'
        ILASTC=2
C
C               *********************************************
C               **  STEP 1.24--                            **
C               **  SEARCH FOR 4-TH DEGREE SPLINE FITTING  **
C               *********************************************
C
      ELSEIF(NUMARG.GE.4.AND.
     1       ICOM.EQ.'4'.AND.IHARG(1).EQ.'TH'.AND.
     1       IHARG(2).EQ.'DEGR'.AND.IHARG(3).EQ.'SPLI'.AND.
     1       IHARG(4).EQ.'FIT')THEN
        ICASSF='4SF'
        ILASTC=4
      ELSEIF(NUMARG.GE.3.AND.
     1      (ICOM.EQ.'4TH' .OR. ICOM.EQ.'FOUR' .OR. ICOM.EQ.'4').AND.
     1       IHARG(1).EQ.'DEGR'.AND.IHARG(2).EQ.'SPLI'.AND.
     1       IHARG(3).EQ.'FIT')THEN
        ICASSF='4SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.
     1       ICOM.EQ.'DEGR'.AND.
     1       (IHARG(1).EQ.'4' .OR. IHARG(1).EQ.'FOUR').AND.
     1       IHARG(2).EQ.'SPLI'.AND.IHARG(3).EQ.'FIT')THEN
        ICASSF='4SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.
     1       ICOM.EQ.'QUAR'.AND.IHARG(1).EQ.'SPLI'.AND.
     1       IHARG(2).EQ.'FIT')THEN
        ICASSF='4SF'
        ILASTC=2
C
C               *********************************************
C               **  STEP 1.25--                            **
C               **  SEARCH FOR 5-TH DEGREE SPLINE FITTING  **
C               *********************************************
C
      ELSEIF(NUMARG.GE.4.AND.
     1       ICOM.EQ.'5'.AND.IHARG(1).EQ.'TH'.AND.
     1       IHARG(2).EQ.'DEGR'.AND.IHARG(3).EQ.'SPLI'.AND.
     1       IHARG(4).EQ.'FIT')THEN
        ICASSF='5SF'
        ILASTC=4
      ELSEIF(NUMARG.GE.3.AND.
     1      (ICOM.EQ.'5TH' .OR. ICOM.EQ.'FIVE' .OR. ICOM.EQ.'5').AND.
     1       IHARG(1).EQ.'DEGR'.AND.IHARG(2).EQ.'SPLI'.AND.
     1       IHARG(3).EQ.'FIT')THEN
        ICASSF='5SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.
     1       ICOM.EQ.'DEGR'.AND.
     1       (IHARG(1).EQ.'5' .OR. IHARG(1).EQ.'FIVE').AND.
     1       IHARG(2).EQ.'SPLI'.AND.IHARG(3).EQ.'FIT')THEN
        ICASSF='5SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.
     1       ICOM.EQ.'QUIN'.AND.IHARG(1).EQ.'SPLI'.AND.
     1       IHARG(2).EQ.'FIT')THEN
        ICASSF='5SF'
        ILASTC=2
C
C               *********************************************
C               **  STEP 1.26--                            **
C               **  SEARCH FOR 6-TH DEGREE SPLINE FITTING  **
C               *********************************************
C
      ELSEIF(NUMARG.GE.4.AND.
     1       ICOM.EQ.'6'.AND.IHARG(1).EQ.'TH'.AND.
     1       IHARG(2).EQ.'DEGR'.AND.IHARG(3).EQ.'SPLI'.AND.
     1       IHARG(4).EQ.'FIT')THEN
        ICASSF='6SF'
        ILASTC=4
      ELSEIF(NUMARG.GE.3.AND.
     1      (ICOM.EQ.'6TH' .OR. ICOM.EQ.'SIX ' .OR. ICOM.EQ.'6').AND.
     1       IHARG(1).EQ.'DEGR'.AND.IHARG(2).EQ.'SPLI'.AND.
     1       IHARG(3).EQ.'FIT')THEN
        ICASSF='6SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.
     1       ICOM.EQ.'DEGR'.AND.
     1       (IHARG(1).EQ.'6' .OR. IHARG(1).EQ.'SIX').AND.
     1       IHARG(2).EQ.'SPLI'.AND.IHARG(3).EQ.'FIT')THEN
        ICASSF='6SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.
     1       ICOM.EQ.'SEXT'.AND.IHARG(1).EQ.'SPLI'.AND.
     1       IHARG(2).EQ.'FIT')THEN
        ICASSF='6SF'
        ILASTC=2
C
C               *********************************************
C               **  STEP 1.27--                            **
C               **  SEARCH FOR 7-TH DEGREE SPLINE FITTING  **
C               *********************************************
C
      ELSEIF(NUMARG.GE.4.AND.
     1       ICOM.EQ.'7'.AND.IHARG(1).EQ.'TH'.AND.
     1       IHARG(2).EQ.'DEGR'.AND.IHARG(3).EQ.'SPLI'.AND.
     1       IHARG(4).EQ.'FIT')THEN
        ICASSF='7SF'
        ILASTC=4
      ELSEIF(NUMARG.GE.3.AND.
     1      (ICOM.EQ.'7TH' .OR. ICOM.EQ.'SEVE' .OR. ICOM.EQ.'7').AND.
     1       IHARG(1).EQ.'DEGR'.AND.IHARG(2).EQ.'SPLI'.AND.
     1       IHARG(3).EQ.'FIT')THEN
        ICASSF='7SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.
     1       ICOM.EQ.'DEGR'.AND.
     1       (IHARG(1).EQ.'7' .OR. IHARG(1).EQ.'SEVE').AND.
     1       IHARG(2).EQ.'SPLI'.AND.IHARG(3).EQ.'FIT')THEN
        ICASSF='7SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.
     1       ICOM.EQ.'SEPT'.AND.IHARG(1).EQ.'SPLI'.AND.
     1       IHARG(2).EQ.'FIT')THEN
        ICASSF='7SF'
        ILASTC=2
C
C               *********************************************
C               **  STEP 1.28--                            **
C               **  SEARCH FOR 8-TH DEGREE SPLINE FITTING  **
C               *********************************************
C
      ELSEIF(NUMARG.GE.4.AND.
     1       ICOM.EQ.'8'.AND.IHARG(1).EQ.'TH'.AND.
     1       IHARG(2).EQ.'DEGR'.AND.IHARG(3).EQ.'SPLI'.AND.
     1       IHARG(4).EQ.'FIT')THEN
        ICASSF='8SF'
        ILASTC=4
      ELSEIF(NUMARG.GE.3.AND.
     1      (ICOM.EQ.'8TH' .OR. ICOM.EQ.'EIGH' .OR. ICOM.EQ.'8').AND.
     1       IHARG(1).EQ.'DEGR'.AND.IHARG(2).EQ.'SPLI'.AND.
     1       IHARG(3).EQ.'FIT')THEN
        ICASSF='8SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.
     1       ICOM.EQ.'DEGR'.AND.
     1       (IHARG(1).EQ.'8' .OR. IHARG(1).EQ.'EIGH').AND.
     1       IHARG(2).EQ.'SPLI'.AND.IHARG(3).EQ.'FIT')THEN
        ICASSF='8SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.
     1       ICOM.EQ.'OCTI'.AND.IHARG(1).EQ.'SPLI'.AND.
     1       IHARG(2).EQ.'FIT')THEN
        ICASSF='8SF'
        ILASTC=2
C
C               *********************************************
C               **  STEP 1.29--                            **
C               **  SEARCH FOR 9-TH DEGREE SPLINE FITTING  **
C               *********************************************
C
      ELSEIF(NUMARG.GE.4.AND.
     1       ICOM.EQ.'9'.AND.IHARG(1).EQ.'TH'.AND.
     1       IHARG(2).EQ.'DEGR'.AND.IHARG(3).EQ.'SPLI'.AND.
     1       IHARG(4).EQ.'FIT')THEN
        ICASSF='9SF'
        ILASTC=4
      ELSEIF(NUMARG.GE.3.AND.
     1      (ICOM.EQ.'9TH' .OR. ICOM.EQ.'NINE' .OR. ICOM.EQ.'9' .OR.
     1       ICOM.EQ.'NINT').AND.
     1       IHARG(1).EQ.'DEGR'.AND.IHARG(2).EQ.'SPLI'.AND.
     1       IHARG(3).EQ.'FIT')THEN
        ICASSF='9SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.
     1       ICOM.EQ.'DEGR'.AND.
     1       (IHARG(1).EQ.'9' .OR. IHARG(1).EQ.'NINE').AND.
     1       IHARG(2).EQ.'SPLI'.AND.IHARG(3).EQ.'FIT')THEN
        ICASSF='9SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.
     1       ICOM.EQ.'NONI'.AND.IHARG(1).EQ.'SPLI'.AND.
     1       IHARG(2).EQ.'FIT')THEN
        ICASSF='9SF'
        ILASTC=2
C
C               *********************************************
C               **  STEP 1.30--                            **
C               **  SEARCH FOR 10-TH DEGREE SPLINE FITTING **
C               *********************************************
C
      ELSEIF(NUMARG.GE.4.AND.
     1       ICOM.EQ.'10'.AND.IHARG(1).EQ.'TH'.AND.
     1       IHARG(2).EQ.'DEGR'.AND.IHARG(3).EQ.'SPLI'.AND.
     1       IHARG(4).EQ.'FIT')THEN
        ICASSF='10SF'
        ILASTC=4
      ELSEIF(NUMARG.GE.3.AND.
     1      (ICOM.EQ.'10TH' .OR. ICOM.EQ.'TENT' .OR. ICOM.EQ.'10') .AND.
     1       IHARG(1).EQ.'DEGR'.AND.IHARG(2).EQ.'SPLI'.AND.
     1       IHARG(3).EQ.'FIT')THEN
        ICASSF='10SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.
     1       ICOM.EQ.'DEGR'.AND.
     1       (IHARG(1).EQ.'10' .OR. IHARG(1).EQ.'TEN ').AND.
     1       IHARG(2).EQ.'SPLI'.AND.IHARG(3).EQ.'FIT')THEN
        ICASSF='10SF'
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.
     1       ICOM.EQ.'DEXI'.AND.IHARG(1).EQ.'SPLI'.AND.
     1       IHARG(2).EQ.'FIT')THEN
        ICASSF='10SF'
C
C               ********************************************
C               **  STEP 1.31--                           **
C               **  SINCE VALID COMMAND NOT FOUND, EXIT.  **
C               ********************************************
C
      ELSE
        ICASSF='    '
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      IFOUND='YES'
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PSPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='SPLINE FIT'
      MINN2=2
      MINNA=1
      MAXNA=100
      MINNVA=2
      MAXNVA=3
      IFLAGE=99
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PSPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,181)
  181   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,182)IFOUND,IERROR,NQ,NUMVAR
  182   FORMAT('IFOUND,IERROR,NQ,NUMVAR = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO185I=1,NUMVAR
            WRITE(ICOUT,187)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  187       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  185     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************************
C               **  STEP 33--                               **
C               **  FORM THE SUBSETTED VARIABLES            **
C               **       Y(.)                               **
C               **       X(.)                               **
C               **********************************************
C
      ISTEPN='33'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PSPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOL=1
      NUMVA2=2
      CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y,X,AJUNK,NS,NS,NS,ICASE,
     1            IBUGA3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      N34=0
      IF(NUMVAR.EQ.3)THEN
        ICOL=3
        NUMVA2=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              XKNOT,AJUNK,AJUNK,N34,NTEMP,NTEMP,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ELSE
        IF(IKNOT1.NE.'    ')THEN
          IHWUSE='V'
          MESSAG='NO'
          CALL CHECKN(IKNOT1,IKNOT2,IHWUSE,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1                ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
C
          IF(IERROR.EQ.'NO')THEN
            ICOLT=IVALUE(ILOCV)
            N34=IN(ILOCV)
            ICNT=0
            DO210I=1,N34
              IJ=MAXN*(ICOLT-1)+I
              ICNT=ICNT+1
              IF(ICOLT.LE.MAXCOL)XKNOT(ICNT)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XKNOT(ICNT)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XKNOT(ICNT)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XKNOT(ICNT)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XKNOT(ICNT)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XKNOT(ICNT)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XKNOT(ICNT)=TAGPLO(I)
              ICNT=ICNT-1
  210       CONTINUE
          ENDIF
        ENDIF
C
        IF(N34.LE.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,301)
  301     FORMAT('***** ERROR IN SPLINE FIT--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,303)
  303     FORMAT('      THE KNOTS VARIABLE WAS NOT SPECIFIED ON EITHER')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,305)
  305     FORMAT('      THE SPLINE FIT COMMAND OR THE KNOTS COMMAND.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
C               ***************************************************
C               **  STEP 7--                                     **
C               **  EXTRACT THE DEGREE OF THE SPLINE FUNCTION.   **
C               **  CHECK THAT THE DEGREE IS IN THE VALID RANGE  **
C               **  (1 TO 10).                                   **
C               ***************************************************
C
      ISTEPN='7'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PSPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MINDEG=1
      MAXDEG=10
      IDEGRE=3
      IF(ICASSF.EQ.'SF'.AND.IDEG.GE.MINDEG.AND.IDEG.LE.MAXDEG)
     1IDEGRE=IDEG
      IF(ICASSF.EQ.'0SF')IDEGRE=0
      IF(ICASSF.EQ.'1SF')IDEGRE=1
      IF(ICASSF.EQ.'2SF')IDEGRE=2
      IF(ICASSF.EQ.'3SF')IDEGRE=3
      IF(ICASSF.EQ.'4SF')IDEGRE=4
      IF(ICASSF.EQ.'5SF')IDEGRE=5
      IF(ICASSF.EQ.'6SF')IDEGRE=6
      IF(ICASSF.EQ.'7SF')IDEGRE=7
      IF(ICASSF.EQ.'8SF')IDEGRE=8
      IF(ICASSF.EQ.'9SF')IDEGRE=9
      IF(ICASSF.EQ.'10FI')IDEGRE=10
      IF(ICASSF.EQ.'10SF')IDEGRE=10
C
      IF(IDEGRE.LT.MINDEG .OR. IDEGRE.GT.MAXDEG)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,301)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,703)
  703   FORMAT('      THE DEGREE FOR A SPLINE FIT MUST BE BETWEEN ',
     1         I8,' AND ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,705)
  705   FORMAT('      (INCLUSIVELY);  SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,707)IDEGRE
  707   FORMAT('      THE SPECIFIED DEGREE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,709)
  709   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,711)(IANS(I),I=1,MIN(IWIDTH,80))
  711     FORMAT('      ',80A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
      NKNOT=N34
      K=IDEGRE+NKNOT+1
C
      IF(NS.LT.K)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,301)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,902)
  902   FORMAT('      FOR A SPLINE FIT, THE NUMBER OF ELEMENTS IN THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,904)
  904   FORMAT('      FIRST VARIABLE (THAT IS, THE NUMBER OF POINTS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,905)
  905   FORMAT('      TO BE FITTED) MUST BE EQUAL TO OR GREATER THAN')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,906)
  906   FORMAT('      THE NUMBER OF COEFFICIENTS TO BE ESTIMATED')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,907)
  907   FORMAT('      (THAT IS, MUST BE EQUAL TO OR GREATER THAN')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,908)
  908   FORMAT('      (SPLINE DEGREE + NUMBER OF KNOTS + 1));')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,909)
  909   FORMAT('      SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,910)NS
  910   FORMAT('      NUMBER OF FIT POINTS FROM FIRST VARIABLE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,911)K
  911   FORMAT('      NUMBER OF ESTIMATED COEFFICIENTS         = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,912)IDEGRE
  912   FORMAT('      DEGREE OF SPLINE                         = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,913)NKNOT
  913   FORMAT('      NUMBER OF KNOTS                          = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,709)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,711)(IANS(I),I=1,MIN(IWIDTH,80))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ******************************************************
C               **  STEP 9--                                        **
C               **  CHECK THAT THE PRODUCT OF THE NUMBER OF POINTS  **
C               **  TO BE FITTED (NS) AND THE NUMBER OF B-SPLINE    **
C               **  COEFFICIENTS TO BE ESTIMATED (K)                **
C               **  DOES NOT EXCEED MAXNK--THUS THE ARRAY Z2(.)     **
C               **  IN THE SUBROUTINE DPSPL2 WILL NOT OVERFLOW.     **
C               ******************************************************
C
      INK=NS*K
      IF(INK.GT.MAXNK)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,301)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,922)
  922   FORMAT('      AN INTERNAL ARRAY WILL OVERFLOW IF THE PRODUCT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,924)
  924   FORMAT('      OF THE NUMBER OF POINTS TO BE FITTED AND THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,925)
  925   FORMAT('      NUMBER OF B-SPLINE COEFFICIENTS TO BE ESTIMATED')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,927)MAXNK
  927   FORMAT('      EXCEEDS ',I8,'.  SUCH WOULD BE THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,928)NS,K,INK
  928   FORMAT('      N = ',I8,' K = ',I8,' N*K = ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               **************************************************
C               **  STEP 10--                                   **
C               **  PREPARE FOR ENTRANCE INTO DPSPL2--          **
C               **  SET THE WEIGHT VECTOR TO UNITY THROUGHOUT.  **
C               **************************************************
C
      ISTEPN='10'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PSPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO970I=1,NS
        W(I)=1.0
  970 CONTINUE
C
C               *********************
C               **  STEP 12-       **
C               **  ENTER DPSPL2.  **
C               *********************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PSPL')THEN
        ISTEPN='12'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6081)
 6081   FORMAT('***** FROM DPSPL, AS WE ARE ABOUT TO CALL DPSPL2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6082)MAXN,NS,NKNOT
 6082   FORMAT('NUMCHA,MAXN,NKNOT = ',3I8)
        CALL DPWRST('XXX','BUG ')
        DO6083I=1,NS
          WRITE(ICOUT,6084)I,Y(I),X(I),W(I)
 6084     FORMAT('I,Y(I),X(I),W(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
 6083   CONTINUE
      ENDIF
C
CCCCC JUNE, 1990.  MOVE SOME DIMENSIONS FROM DPSPL2 TO DPSPL
CCCCC CALL DPSPL2(Y,X,W,NS,XKNOT,NKNOT,IDEGRE,V,
      CALL DPSPL2(Y,X,W,NS,XKNOT,NKNOT,IDEGRE,VSCRT,
     1            B,SDB,B2,SDB2,PRED2,RES2,
     1            REPSD,REPDF,RESSD,RESDF,ALFCDF,
     1            V1,V2,DUM1,DUM2,AJUNK,
     1            XPX,SSQ,A,XPY,RIGHT,BTEMP,EKNOT,
     1            ICAPSW,ICAPTY,IFORSW,
     1            IBUGA3,ISUBRO,IERROR)
C
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ***************************************
C               **  STEP 14--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='14'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PSPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOLPR=MAXCP1
      ICOLRE=MAXCP2
      IREPU='ON'
      IRESU='ON'
      CALL UPDAPR(ICOLPR,ICOLRE,PRED2,RES2,PRED,RES,ISUB,NS,
     1IREPU,REPSD,REPDF,IRESU,RESSD,RESDF,ALFCDF,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,ILOCN,IBUGA3,IERROR)
C
      ISTEPN='14B'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PSPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IBUGJU='OFF'
C
      L=0
      IKNMAX=NKNOT+1
      JMAX=IDEGRE+1
      DO7500IKN=1,IKNMAX
        DO7600J=1,JMAX
          L=L+1
          JM1=J-1
          CALL COENAM(IKN,JM1,IH,IH2,IBUGJU,IERROR)
C
          DO7650I=1,NUMNAM
            I2=I
            IF(IH.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I).AND.
     1         IUSE(I).EQ.'P')THEN
              VALUE(I2)=B2(L)
              GOTO7600
            ENDIF
 7650     CONTINUE
C
          IF(NUMNAM.GT.MAXNAM)THEN
            WRITE(ICOUT,301)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7652)
 7652       FORMAT('      THE TOTAL NUMBER OF (VARIABLE + PARAMETER)')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7653)MAXNAM
 7653       FORMAT('      NAMES MUST BE AT MOST ',I8)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7654)
 7654       FORMAT('      SUCH WAS NOT THE CASE HERE--THE MAXIMUM')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7655)
 7655       FORMAT('      ALLOWABLE NUMBER OF NAMES WAS JUST EXCEEDED.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7657)
 7657       FORMAT('      SUGGESTED ACTION--ENTER  STAT  TO DETERMINE')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7659)
 7659       FORMAT('      THE IMPORTANT (VERSUS UNIMPORTANT) VARIABLES')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7660)
 7660       FORMAT('      AND PARAMETERS, AND THEN REUSE SOME OF THE ',
     1             'NAMES.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,709)
            CALL DPWRST('XXX','BUG ')
            IF(IWIDTH.GE.1)THEN
              WRITE(ICOUT,711)(IANS(I),I=1,MIN(IWIDTH,80))
              CALL DPWRST('XXX','BUG ')
            ENDIF
            IERROR='YES'
            GOTO9000
          ELSE
            NUMNAM=NUMNAM+1
            ILOC=NUMNAM
            IHNAME(ILOC)=IH
            IHNAM2(ILOC)=IH2
            IUSE(ILOC)='P'
            VALUE(ILOC)=B2(L)
          ENDIF
C
 7600   CONTINUE
 7500 CONTINUE
C
C               ***************************************
C               **  STEP 15--                        **
C               **  ENTER A NOTE IN MODEL(.)         **
C               **  STATING THAT THE LAST FIT        **
C               **  WAS A SPLINE FIT                 **
C               **  OF WHATEVER DEGREE.              **
C               ***************************************
C
      ISTEPN='15'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PSPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO8100I=1,IWIDTH
        MODEL(I)=IANS(I)
 8100 CONTINUE
      NUMCHA=IWIDTH
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PSPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NS,NKNOT,IDEGRE,ICASSF
 9014   FORMAT('NS,NKNOT,IDEGRE,ICASSF = ',3I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPL2(Y,X,W,N,XKNOT,NKNOT,IDEGRE,Z2,
     1                  B,SDB,B2,SDB2,PRED2,RES2,
     1                  REPSD,REPDF,RESSD,RESDF,ALFCDF,
     1                  V1,V2,DUM1,DUM2,AJUNK,
     1                  XPX,SSQ,A,XPY,RIGHT,BTEMP,EKNOT,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--THIS SUBROUTINE COMPUTES A LEAST SQUARES SPLINE FIT
C              FOR ANY DEGREE--LINEAR, QUADRATIC, CUBIC, ETC.
C     ALGORITHM USED--B-SPLINES (MODIFIED SO THAT SOME ELEMENTS
C                   SET = 0 RATHER THAN COMPUTED AS 0)
C     REFERENCE--WOLD, TECHNOMETRICS, 1974, PAGE 2
C     INPUT  ARGUMENTS--Y      = SINGLE PRECISION VECTOR OF
C                                RESPONSE DATA (THAT IS, THE
C                                DEPENDENT VARIABLE).
C                       X      = SINGLE PRECISION MATRIX OF
C                                THE DEPENDENT VARIABLE.
C                       W      = THE SINGLE PRECISION VECTOR
C                                OF WEIGHTS FOR THE RESPONSE
C                                VARIABLE.
C                       N      = THE INTEGER VALUE OF THE SAMPLE SIZE.
C                       XKNOT  = THE SINGLE PRECISION VECTOR OF KNOTS.
C                       NKNOT  = THE INTEGER NUMBER OF SPECIFIED KNOTS.
C                       IDEGRE = THE INTEGER DEGREE OF THE SPLINE.
C     OUTPUT ARGUMENTS--B      = THE SINGLE PRECISION VECTOR OF
C                                ESTIMATED REGRESSION COEFFICIENTS.
C                       SDB    = THE SINGLE PRECISION VECTOR OF
C                                ESTIMATED STANDARD DEVIATIONS OF THE
C                                ESTIMATED REGRESSION COEFFICIENTS.
C                       RESSD  = THE ESTIMATED RESIDUAL STANDARD
C                                DEVIATION.
C                       PRED2  = THE SINGLE PRECISION VECTOR OF
C                                PREDICTED VALUES.
C                       RES2   = THE SINGLE PRECISION VECTOR OF
C                                RESIDUALS FROM THE LEAST SQUARES FIT.
C     SUBROUTINES NEEDED--DECOMP, INVXWX, AND DOT.
C     NOTE--CODE MODIFIED SO THAT NUMBER OF KNOTS SHOULD NOT
C           EXCEED 50
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--MARCH     1975.
C     UPDATED         --NOVEMBER  1975.
C     UPDATED         --MAY       1976.
C     UPDATED         --DECEMBER  1978.
C     UPDATED         --AUGUST    1979.
C     UPDATED         --MARCH     1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --AUGUST    1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     1988. ADD LOFCDF
C     UPDATED         --JANUARY   1989. DECLARE AJUNK AS ARRAY (DIM. 1) (ALAN)
C     UPDATED         --MAY       1989. INCREACED DIMENSION FOR V1 AND V2
C                                       MOVE SOME DIMENSIONS
C     UPDATED         --FEBRUARY  2012. USE DPDTA1 TO PRINT OUTPUT
C     UPDATED         --JULY      2019. CALL LIST TO DPREPS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IREP
      CHARACTER*4 IBUGJU
      CHARACTER*4 IH
      CHARACTER*4 IH2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION W(*)
      DIMENSION XKNOT(*)
C
      DIMENSION B(*)
      DIMENSION SDB(*)
      DIMENSION PRED2(*)
      DIMENSION RES2(*)
      DIMENSION B2(*)
      DIMENSION SDB2(*)
      DIMENSION Z2(*)
      DIMENSION V1(*)
      DIMENSION V2(*)
      DIMENSION DUM1(*)
      DIMENSION DUM2(*)
      DIMENSION AJUNK(*)
C
      DIMENSION XPX(50,50)
      DIMENSION SSQ(50,50)
      DIMENSION A(50,50)
      DIMENSION XPY(*)
      DIMENSION RIGHT(*)
      DIMENSION BTEMP(*)
      DIMENSION EKNOT(*)
C
      PARAMETER(NUMCLI=4)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=60)
      CHARACTER*40 ITITLE
      CHARACTER*40 ITITLZ
      CHARACTER*40 ITITL9
      CHARACTER*40 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      IDIGI2(MAXROW,NUMCLI)
      INTEGER      ROWSEP(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*40 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(MAXROW,NUMCLI)
      CHARACTER*4  ITYPC2(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCOLSP(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPSP'
      ISUBN2='L2  '
C
      CDF2=CPUMIN
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      IERROR='NO'
      K2=0
      DIJ=0.0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSPL2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,N,NKNOT,IDEGRE,AJUNK(1)
   52   FORMAT('IBUGA3,ISUBRO,N,NKNOT,IDEGRE,AJUNK(1) = ',
     1         2(A4,2X),3I8,G15.7)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,Y(I),X(I),W(I),XKNOT(I)
   56     FORMAT('I,Y(I),X(I),W(I),XKNOT(I) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
      AN=N
      K=NKNOT+IDEGRE+1
      AK=K
      DEG=IDEGRE
      KMAX=50
C
C               ***************************
C               **  STEP 1--             **
C               **  WRITE OUT THE TITLE  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *****************************************
C               **  STEP 2--                           **
C               **  CHECK THE INPUT ARGUMENTS N AND K  **
C               *****************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(K.LT.1 .OR. K.GT.KMAX)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,151)
  151   FORMAT('***** ERROR IN SPLINE FIT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,152)
  152   FORMAT('      THE NUMBER OF SPLINE COEFFICIENTS (K = NDEG+1)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,153)
  153   FORMAT('      IS NON-POSITIVE OR LARGER THAN ALLOWABLE MAX')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,154)K,KMAX
  154   FORMAT('      K,KMAX = ',I8,I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(K.GT.N)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,151)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,162)
  162   FORMAT('      THE NUMBER OF SPLINE COEFFICIENTS (K = NDEG+1)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,163)
  163   FORMAT('      IS LARGER THAN THE NUMBER OF DATA POINTS (N).')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,164)K,N
  164   FORMAT('      K,N = ',I8,I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NKNOT.GT.50)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,151)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,172)NKNOT
  172   FORMAT('      THE NUMBER OF KNOTS (= ',I8,') HAS JUST EXCEEDED')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,174)
  174   FORMAT('      THE ALLOWABLE MAXIMUM (= 50).')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ********************************************************
C               **  STEP 3--                                          **
C               **  INSPECT THE WEIGHT VECTOR W--IF ALL ELEMENTS ARE  **
C               **  IDENTICAL, THEN RESET ALL ELEMENTS TO 1.0.  THIS  **
C               **  AVOIDS THE PROBLEM OF AN UNDEFINED EMPTY WEIGHT   **
C               **  VECTOR W WHEN IN FACT AN EQUAL WEIGHTING SCHEME   **
C               **  IS DESIRED.                                       **
C               ********************************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWFLAG=0
      WHOLD=W(1)
      DO600I=1,N
        IF(W(I).EQ.WHOLD)GOTO600
        GOTO850
  600 CONTINUE
      IWFLAG=1
  850 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
         IF(IWFLAG.EQ.0)THEN
            WRITE(ICOUT,851)
  851       FORMAT('      UNEQUAL WEIGHTS CASE')
            CALL DPWRST('XXX','BUG ')
         ENDIF
         IF(IWFLAG.EQ.1)THEN
            WRITE(ICOUT,852)
  852       FORMAT('      EQUAL WEIGHTS CASE')
            CALL DPWRST('XXX','BUG ')
         ENDIF
      ENDIF
C
C               ********************************************************
C               **  STEP 3.5--                                        **
C               **  CHECK FOR REPLICATION AND IF EXISTENT COMPUTE A   **
C               **  (MODEL-FREE) REPLICATION STANDARD DEVIATION.      **
C               ********************************************************
C
      ISTEPN='3.5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMVAR=1
C
      IREP='NO'
      REPSD=0.0
      REPDF=0.0
      IREPDF=INT(REPDF+0.5)
      RESSD=0.0
      RESDF=0.0
      ALFCDF=(-999.99)
      CALL DPREPS(Y,X,N,N,NUMVAR,DUM1,DUM2,
     1            IREP,REPSS,REPMS,REPSD,REPDF,NUMSET,IBUGA3,IERROR)
      IREPDF=INT(REPDF+0.5)
C
C               *********************************************************
C               **  STEP 4--                                           **
C               **  FORM THE MATRIX X2 (WHICH CORRESPONDS TO THE USUAL **
C               **  X MATRIX IN THE FIT SUBROUTINE BUT IS HERE CALLED  **
C               **  X2 BECAUSE OF A CONFLICT DUE TO THE INPUT VECTOR   **
C               **  X).  B-SPLINES ARE USED HEREIN.                    **
C               **  REFERENCE--WOLD, TECHNOMETRICS, 1974, PAGE 2.      **
C               *********************************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               **********************************
C               **  STEP 4.1--                  **
C               **  DETERMINE THE MIN X VALUE.  **
C               **  DETERMINE THE MAX X VALUE.  **
C               **********************************
C
      ISTEPN='4.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      XMIN=X(1)
      XMAX=X(1)
      DO900I=1,N
        IF(X(I).LT.XMIN)XMIN=X(I)
        IF(X(I).GT.XMAX)XMAX=X(I)
  900 CONTINUE
C
C               ************************************
C               **  STEP 4.2--                    **
C               **  DEFINE EXTENDED KNOTS         **
C               **  (ON EITHER END OF THE DATA).  **
C               **  THE NUMBER OF SUCH KNOTS      **
C               **  ON EACH SIDE WILL BE          **
C               **  DEGREE + 1.                   **
C               ************************************
C
      ISTEPN='4.2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL SORT(XKNOT,NKNOT,XKNOT)
C
      IF(XKNOT(1).EQ.XMIN)THEN
        RANGE=XMAX-XMIN
        DEL=RANGE/100.0
      ELSE
        DEL=XKNOT(1)-XMIN
        DEL=ABS(DEL)
      ENDIF
C
      L=0
C
      IMAX=IDEGRE+1
      DO940I=1,IMAX
        L=L+1
        AIREV=IMAX-I+1
        EKNOT(L)=XKNOT(1)-AIREV*DEL
  940 CONTINUE
C
      DO950I=1,NKNOT
        L=L+1
        EKNOT(L)=XKNOT(I)
  950 CONTINUE
C
      IF(XKNOT(NKNOT).EQ.XMAX)THEN
        RANGE=XMAX-XMIN
        DEL=RANGE/100.0
      ELSE
        DEL=XMAX-XKNOT(NKNOT)
        DEL=ABS(DEL)
      ENDIF
C
      IMAX=IDEGRE+1
      DO990I=1,IMAX
        L=L+1
        AI=I
        EKNOT(L)=XKNOT(NKNOT)+AI*DEL
  990 CONTINUE
C
      NKNOT2=L
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,991)NKNOT,NKNOT2
  991   FORMAT('NKNOT,NKNOT2 = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,992)XMIN,XKNOT(1),XKNOT(NKNOT),XMAX,DEL
  992   FORMAT('XMIN,XKNOT(1),XKNOT(NKNOT),XMAX,DEL = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
        DO993I=1,NKNOT2
          WRITE(ICOUT,994)I,EKNOT(I)
  994     FORMAT('I, EKNOT(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
  993   CONTINUE
      ENDIF
C
C               *******************************************
C               **  STEP 4.4--                           **
C               **  FORM THE LINEAR REGRESSION X MATRIX  **
C               **  (HERE CALLED X2)                     **
C               **  WHICH WILL CONTAIN THE B-SPLINE      **
C               **  REPRESENTATION OF THE SPLINE         **
C               **  PROBLEM.                             **
C               **  NOTE THAT K = THE NUMBER             **
C               **  OF ORIGINAL KNOTS + IDEGRE + 1.      **
C               *******************************************
C
      ISTEPN='4.4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1500I=1,N
        DO1600J=1,K
C
          IJ=(I-1)*K+J
          Z2(IJ)=0.0
          LMAX=IDEGRE+J+1
          IF(X(I).LT.EKNOT(J).OR.X(I).GT.EKNOT(LMAX))GOTO1600
C
          SUM=0.0
          DO1700L=J,LMAX
            IF(X(I).LE.EKNOT(L))GOTO1700
            XI=X(I)
            EKNOL=EKNOT(L)
            ANUM=(XI-EKNOL)**DEG
            PROD=1.0
            DO1800M=J,LMAX
              IF(M.EQ.L)GOTO1800
              EKNOL=EKNOT(L)
              EKNOM=EKNOT(M)
              PROD=PROD*(EKNOL-EKNOM)
 1800       CONTINUE
            ADEN=PROD
C
            RATIO=ANUM/ADEN
            SUM=SUM+RATIO
C
            IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
              WRITE(ICOUT,1811)ANUM,ADEN,RATIO,SUM
 1811         FORMAT('ANUM,ADEN,RATIO,SUM = ',4G15.7)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
 1700     CONTINUE
          IJ=(I-1)*K+J
          Z2(IJ)=SUM
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
            WRITE(ICOUT,1711)I,J,Z2(IJ)
 1711       FORMAT('I, J, Z2(IJ) = ',2I8,G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 1600   CONTINUE
 1500 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
        WRITE(ICOUT,1901)
 1901   FORMAT('AFTER STEP 4.4 IN DPSPL2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1902)
 1902   FORMAT('Z2(.,.) = ')
        CALL DPWRST('XXX','BUG ')
        DO1910I=1,N
          IJMIN=(I-1)*K+1
          IJMAX=I*K
          WRITE(ICOUT,1911)(Z2(IJ),IJ=IJMIN,IJMAX)
 1911     FORMAT(8G15.7)
          CALL DPWRST('XXX','BUG ')
 1910   CONTINUE
      ENDIF
C
C               *******************************
C               **  STEP 5--                 **
C               **  FORM THE X'X MATRIX      **
C               **  (HERE CALLED XPX)        **
C               **  THIS WILL HAVE K ROWS    **
C               **  AND K COLUMNS            **
C               **  WHERE K = THE NUMBER OF  **
C               **  ORIGINAL KNOTS + 4.      **
C               *******************************
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO2100I=1,K
        DO2200J=1,K
          DO2300L=1,N
            LI=(L-1)*K+I
            V1(L)=Z2(LI)
            LJ=(L-1)*K+J
            V2(L)=Z2(LJ)
 2300     CONTINUE
          CALL DOTPRO(V1,V2,N,RESULT)
          XPX(I,J)=RESULT
          IJ=(I-1)*K+J
 2200   CONTINUE
 2100 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
        WRITE(ICOUT,2301)
 2301   FORMAT('AFTER STEP 5 IN DPSPL2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2302)
 2302   FORMAT('Z2(.,.) = ')
        CALL DPWRST('XXX','BUG ')
        DO2310I=1,N
          JMIN=(I-1)*K+1
          JMAX=I*K
          WRITE(ICOUT,2311)(Z2(IJ),IJ=JMIN,JMAX)
 2311     FORMAT(8E15.7)
          CALL DPWRST('XXX','BUG ')
 2310   CONTINUE
        WRITE(ICOUT,2342)
 2342   FORMAT('XPX(.,.) = ')
        CALL DPWRST('XXX','BUG ')
        DO2350I=1,N
          WRITE(ICOUT,2351)(XPX(I,J),J=1,K)
 2351     FORMAT(8G15.7)
          CALL DPWRST('XXX','BUG ')
 2350   CONTINUE
      ENDIF
C
C               *****************************************
C               **  STEP 6--                           **
C               **  FORM THE INVERSE MATRIX (X'X)**-1  **
C               **  (HERE CALLED SSQ).                **
C               **  THIS WILL HAVE K ROWS              **
C               **  AND K COLUMNS                      **
C               **  WHERE K = THE NUMBER OF            **
C               **  ORIGINAL KNOTS + 4.                **
C               *****************************************
C
      ISTEPN='6'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        DO2610I=1,K
          DO2620J=1,K
            WRITE(ICOUT,2621)I,J,XPX(I,J)
 2621       FORMAT('I,J,XPX(I,J) = ',2I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 2620     CONTINUE
 2610   CONTINUE
      ENDIF
C
      CALL MATI50(XPX,K,SSQ)
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO2710I=1,K
          DO2720J=1,K
            WRITE(ICOUT,2721)I,J,SSQ(I,J)
 2721       FORMAT('I,J,SSQ(I,J) = ',2I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 2720     CONTINUE
 2710   CONTINUE
      ENDIF
C
C               *********************************************
C               **  STEP 7--                               **
C               **  COMPUTE THE K REGRESSION COEFFICIENTS. **
C               *********************************************
C
      ISTEPN='7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO3100I=1,K
        DO3200L=1,N
          LI=(L-1)*K+I
          V1(L)=Z2(LI)
          V2(L)=Y(L)
 3200   CONTINUE
        CALL DOTPRO(V1,V2,N,XPY(I))
 3100 CONTINUE
C
      DO3600I=1,K
        DO3700L=1,K
          V1(L)=SSQ(L,I)
          V2(L)=XPY(L)
 3700   CONTINUE
        CALL DOTPRO(V1,V2,K,B(I))
 3600 CONTINUE
C
C               *********************************
C               **  STEP 8--                   **
C               **  COMPUTE PREDICTED VALUES.  **
C               **  COMPUTE RESIDUALS.         **
C               *********************************
C
      ISTEPN='8'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO4100I=1,N
        DO4200L=1,K
          IL=(I-1)*K+L
          V1(L)=Z2(IL)
          V2(L)=B(L)
 4200   CONTINUE
        CALL DOTPRO(V1,V2,K,PRED2(I))
 4100 CONTINUE
C
      DO4600I=1,N
        RES2(I)=Y(I)-PRED2(I)
 4600 CONTINUE
C
C               ********************************************
C               **  STEP 9--                              **
C               **  COMPUTE RESIDUAL STANDARD DEVIATION.  **
C               ********************************************
C
      ISTEPN='9'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      SUM=0.0
      DO5100I=1,N
        SUM=SUM+RES2(I)**2
 5100 CONTINUE
      RESSS=SUM
      IRESDF=N-K
      RESDF=IRESDF
      IF(IRESDF.LE.0)THEN
        RESSS=0.0
        RESVAR=0.0
        RESSD=0.0
      ELSE
        RESVAR=RESSS/RESDF
        RESSD=0.0
        IF(RESVAR.GT.0.0)RESSD=SQRT(RESVAR)
      ENDIF
C
C               **************************************
C               **  STEP 10--                       **
C               **  COMPUTE THE COVARIANCE MATRIX   **
C               **  OF THE COEFFICIENTS.            **
C               **  COMPUTE THE CORRELATION MATRIX  **
C               **  OF THE COEFFICIENTS.            **
C               **************************************
C
      ISTEPN='10'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC DO6100I=1,K
CCCCC DO6200J=1,K
CCCCC COV(I,J)=SSQ(I,J)*RESSD*RESSD
C6200 CONTINUE
C6100 CONTINUE
C
CCCCC DO6600I=1,K
CCCCC DO6700J=1,K
CCCCC ANUM=SSQ(I,J)
CCCCC ADEN=SQRT(SSQ(I,I)*SSQ(J,J))
CCCCC CORR(I,J)=ANUM/ADEN
C6700 CONTINUE
C6600 CONTINUE
C
C               ***************************************************
C               **  STEP 11--                                    **
C               **  COMPUTE STANDARD DEVIATION OF COEFFICIENTS.  **
C               ***************************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO7100I=1,K
        SDB(I)=0.0
        IF(SSQ(I,I).GT.0.0)SDB(I)=RESSD*SQRT(SSQ(I,I))
 7100 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7205)RESSD
 7205   FORMAT('S = ',E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO7210I=1,K
          WRITE(ICOUT,7211)I,B(I),SDB(I)
 7211     FORMAT('I, B(I), SDB(I) = ',I8,2E15.7)
          CALL DPWRST('XXX','BUG ')
 7210   CONTINUE
      ENDIF
C
C               ******************************************************
C               **  STEP 12--                                       **
C               **  COMPUTE COEFFICIENTS FOR THE SPLINE POLYNOMIAL  **
C               **  OVER EACH INDIVIDUAL REGION (BETWEEN KNOTS).    **
C               ******************************************************
C
      ISTEPN='12'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ******************************************
C               **  STEP 12.1--                         **
C               **  LOOP THROUGH THE NKNOT+1 INTERVALS  **
C               ******************************************
C
      L3=0
      IKNMAX=NKNOT+1
      IMAX=IDEGRE+1
      DO8100IKN=1,IKNMAX
        IKN2=IKN+(IDEGRE+1)
        IKN2M1=IKN2-1
C
C               **************************************************
C               **  STEP 12.2--                                 **
C               **  FOR A GIVEN INTERVAL,                       **
C               **  FORM THE MATRIX OF COEFFICIENTS             **
C               **  FOR THE POLYNOMIALS IN THE INTERVAL         **
C               **  AND FOR THE DERIVATIVES OF THE POLYNOMIALS  **
C               **  WE ARE MERELY EXTRACTING COEFFICIENTS       **
C               **  OF POLYNOMIALS VIA DIFFERENTIATION.         **
C               **  EVALUATE THE DERIVATIVES AT THE MIDPOINTS   **
C               **  BETWEEN KNOTS.                              **
C               **************************************************
C
        DO8200I=1,IMAX
          IM1=I-1
          DO8300J=1,IMAX
            A(I,J)=0.0
            IF(I.GT.J)GOTO8300
            PROD=1.0
            IF(IM1.LT.1)GOTO8450
            AJ=J
            DO8400L=1,IM1
              AL=L
              PROD=PROD*(AJ-AL)
 8400       CONTINUE
C
 8450       CONTINUE
            CIJ=PROD
            XI=(EKNOT(IKN2)+EKNOT(IKN2M1))/2.0
            IF(I.EQ.J)DIJ=1.0
            IF(I.NE.J)DIJ=XI**(J-I)
            A(I,J)=CIJ*DIJ
 8300     CONTINUE
 8200   CONTINUE
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
          WRITE(ICOUT,8201)IKN
 8201     FORMAT('IN THE MIDDLE OF STEP 12 IN SPLINE. IKN = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,8202)
 8202     FORMAT('A(.,.) = ')
          CALL DPWRST('XXX','BUG ')
          IDEGP1=IDEGRE+1
          DO8210I=1,IDEGP1
            WRITE(ICOUT,8211)(A(I,J),J=1,IDEGP1)
 8211       FORMAT(8E15.7)
            CALL DPWRST('XXX','BUG ')
 8210     CONTINUE
        ENDIF
C
        I=IKN
CCCCC   XI=EKNOT(IKN2)
        XI=(EKNOT(IKN2)+EKNOT(IKN2M1))/2.0
C
C       IF I = 1, MAKE ALL EVALUATIONS BETWEEN KNOT 0 AND KNOT 1;
C       IF I = 2, MAKE ALL EVALUATIONS BETWEEN KNOT 1 AND KNOT 2;
C       IF I = 3, MAKE ALL EVALUATIONS BETWEEN KNOT 2 AND KNOT 3; ETC.
C
C               ********************************************************
C               **  STEP 12.3--                                       **
C               **  COMPUTE THE RIGHT SIDE OF THE MATRIX EQUATION.    **
C               **  COMPUTE PREDICTED VALUES AND DERIVATIES OF        **
C               **  PREDICTED VALUES AT SELECTED POINTS (HALF WAY     **
C               **  BETWEEN KNOTS).                                   **
C               ********************************************************
C
        IROWMX=IDEGRE+1
        DO8500IROW=1,IROWMX
C
C         IF IROW = 1, EVALUATE S(X);
C         IF IROW = 2, EVALUATE S'(X);
C         IF IROW = 3, EVALUATE S''(X); ETC.
C         FOR DEGREE K, STOP (INCLUSIVELY) AT THE K-TH DERIVATIVE.
C
          RIGHT(IROW)=0.0
          DO8600J=1,K
C
            LMAX=IDEGRE+J+1
            IF(XI.LT.EKNOT(J).OR.XI.GT.EKNOT(LMAX))GOTO8600
C
            SUM=0.0
            DO8700L=J,LMAX
              IF(XI.LE.EKNOT(L))GOTO8700
              EKNOL=EKNOT(L)
C
              PROD=1.0
              NUMTER=IROW-1
              IF(NUMTER.LT.1)GOTO8770
              DO8760L2=1,NUMTER
                AL2=L2
                PROD=PROD*(DEG-AL2+1.0)
 8760         CONTINUE
 8770       CONTINUE
            CIJ=PROD
            IPOWER=IDEGRE-(IROW-1)
            DPOWER=IPOWER
            DIJ=(XI-EKNOL)**DPOWER
            ANUM=CIJ*DIJ
C
            IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
              WRITE(ICOUT,8771)IROW,DEG,IPOWER,XI,CIJ,DIJ,ANUM
 8771         FORMAT('XI,IROW,DEG,IPOWER,XI,CIJ,DIJ,ANUM = ',I8,E15.7,
     1               I8,4E15.7)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            PROD=1.0
            DO8800M=J,LMAX
              IF(M.EQ.L)GOTO8800
              EKNOL=EKNOT(L)
              EKNOM=EKNOT(M)
              PROD=PROD*(EKNOL-EKNOM)
 8800       CONTINUE
            ADEN=PROD
            RATIO=ANUM/ADEN
            SUM=SUM+RATIO
C
            IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
              WRITE(ICOUT,8811)ANUM,ADEN,RATIO,SUM
 8811         FORMAT('ANUM,ADEN,RATIO,SUM = ',4E15.8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
 8700     CONTINUE
C
          RIGHT(IROW)=RIGHT(IROW)+B(J)*SUM
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
            WRITE(ICOUT,8812)IROW,J,RIGHT(IROW),B(J),SUM
 8812       FORMAT('IROW,J,RIGHT(IROW),B(J),SUM = ',2I8,3E15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,8812)IROW,J,RIGHT(IROW),B(J),SUM
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 8600   CONTINUE
 8500 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
        WRITE(ICOUT,8901)
 8901   FORMAT('AFTER STEP 12 IN DPSPL2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8902)
 8902   FORMAT('A(.,.), RIGHT(.) = ')
        CALL DPWRST('XXX','BUG ')
        DO8910I=1,IDEGP1
          WRITE(ICOUT,8911) (A(I,J),J=1,IDEGP1),RIGHT(I)
 8911     FORMAT(8E15.7)
          CALL DPWRST('XXX','BUG ')
 8910   CONTINUE
      ENDIF
C
      IDEGP1=IDEGRE+1
      CALL BACK50(A,IDEGP1,IDEGP1,RIGHT,BTEMP,IBUGA3)
C
      DO8950I=1,IDEGP1
        L3=L3+1
        B2(L3)=BTEMP(I)
 8950 CONTINUE
C
 8100 CONTINUE
      K2=L3
C
C               *********************************************
C               **  STEP 13--                              **
C               **  PRINT OUT GOODNESS OF FIT INFORMATION  **
C               *********************************************
C
      IFITDF=IRESDF-IREPDF
      IF(IREP.EQ.'YES')THEN
        FITDF=IFITDF
        FITSS=RESSS-REPSS
        FITMS=FITSS/FITDF
        FSTAT=FITMS/REPMS
        CALL FCDF(FSTAT,IFITDF,IREPDF,CDF)
        CDF2=100.0*CDF
CCCCC   THE FOLLOWING LINE WAS INSERTED MARCH 1988.
        ALFCDF=CDF
      ENDIF
C
      IF(IPRINT.EQ.'ON')THEN
        ITITLE='Least Squares Spline Fit'
        NCTITL=24
        ITITLZ=' '
        NCTITZ=0
C
        ICNT=1
        IF(IDEGRE.EQ.1)THEN
          ITEXT(ICNT)='Model--Linear Spline'
          NCTEXT(ICNT)=20
        ELSEIF(IDEGRE.EQ.2)THEN
          ITEXT(ICNT)='Model--Quadratic Spline'
          NCTEXT(ICNT)=23
        ELSEIF(IDEGRE.EQ.3)THEN
          ITEXT(ICNT)='Model--Cubic Spline'
          NCTEXT(ICNT)=19
        ELSEIF(IDEGRE.EQ.4)THEN
          ITEXT(ICNT)='Model--4-th Degree Spline'
          NCTEXT(ICNT)=25
        ELSEIF(IDEGRE.EQ.5)THEN
          ITEXT(ICNT)='Model--5-th Degree Spline'
          NCTEXT(ICNT)=25
        ELSEIF(IDEGRE.EQ.6)THEN
          ITEXT(ICNT)='Model--6-th Degree Spline'
          NCTEXT(ICNT)=25
        ELSEIF(IDEGRE.EQ.7)THEN
          ITEXT(ICNT)='Model--7-th Degree Spline'
          NCTEXT(ICNT)=25
        ELSEIF(IDEGRE.EQ.8)THEN
          ITEXT(ICNT)='Model--8-th Degree Spline'
          NCTEXT(ICNT)=25
        ELSEIF(IDEGRE.EQ.9)THEN
          ITEXT(ICNT)='Model--9-th Degree Spline'
          NCTEXT(ICNT)=25
        ELSEIF(IDEGRE.EQ.10)THEN
          ITEXT(ICNT)='Model--10-th Degree Spline'
          NCTEXT(ICNT)=26
        ENDIF
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
C
        ICNT=ICNT+1
        ITEXT(ICNT)='Sample Size:'
        NCTEXT(ICNT)=12
        AVALUE(ICNT)=REAL(N)
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Number of Knots:'
        NCTEXT(ICNT)=16
        AVALUE(ICNT)=REAL(NKNOT)
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
C
        ICNT=ICNT+1
        ITEXT(ICNT)='Residual Standard Deviation:'
        NCTEXT(ICNT)=28
        AVALUE(ICNT)=RESSD
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Residual Degrees of Freedom:'
        NCTEXT(ICNT)=28
        AVALUE(ICNT)=REAL(IRESDF)
        IDIGIT(ICNT)=0
C
        IF(IREP.EQ.'NO')THEN
          ICNT=ICNT+1
          ITEXT(ICNT)=' '
          NCTEXT(ICNT)=0
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
          ICNT=ICNT+1
          ITEXT(ICNT)='No Replication Case'
          NCTEXT(ICNT)=19
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
        ELSEIF(IREP.EQ.'YES')THEN
          ICNT=ICNT+1
          ITEXT(ICNT)='Replication Standard Deviation:'
          NCTEXT(ICNT)=31
          AVALUE(ICNT)=REPSD
          IDIGIT(ICNT)=NUMDIG
          ICNT=ICNT+1
          ITEXT(ICNT)='Replication Degrees of Freedom:'
          NCTEXT(ICNT)=31
          AVALUE(ICNT)=REAL(IREPDF)
          IDIGIT(ICNT)=0
          ICNT=ICNT+1
          ITEXT(ICNT)='Number of Distinct Subsets:'
          NCTEXT(ICNT)=27
          AVALUE(ICNT)=REAL(NUMSET)
          IDIGIT(ICNT)=0
C
          IFITDF=IRESDF-IREPDF
          IF(IFITDF.LT.1)THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='The Lack of Fit F Test cannot be done'
            NCTEXT(ICNT)=37
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='because there are 0 degrees of freedom'
            NCTEXT(ICNT)=38
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='in the numerator of the F ratio.  This'
            NCTEXT(ICNT)=38
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='This happens when the number of'
            NCTEXT(ICNT)=31
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='parameters fitted is identical to the'
            NCTEXT(ICNT)=37
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='number of distinct subsets.'
            NCTEXT(ICNT)=27
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ELSE
            ICNT=ICNT+1
            ITEXT(ICNT)='Lack of Fit F Ratio:'
            NCTEXT(ICNT)=20
            AVALUE(ICNT)=FSTAT
            IDIGIT(ICNT)=NUMDIG
            ICNT=ICNT+1
            ITEXT(ICNT)='Lack of Fit F CDF (%):'
            NCTEXT(ICNT)=22
            AVALUE(ICNT)=CDF2
            IDIGIT(ICNT)=NUMDIG
            ICNT=ICNT+1
            ITEXT(ICNT)='Lack of Fit Degrees of Freedom 1:'
            NCTEXT(ICNT)=33
            AVALUE(ICNT)=REAL(IFITDF)
            IDIGIT(ICNT)=0
            ICNT=ICNT+1
            ITEXT(ICNT)='Lack of Fit Degrees of Freedom 2:'
            NCTEXT(ICNT)=33
            AVALUE(ICNT)=REAL(IREPDF)
            IDIGIT(ICNT)=0
          ENDIF
        ENDIF
C
        NUMROW=ICNT
        DO5410I=1,NUMROW
          NTOT(I)=15
 5410   CONTINUE
C
        IFRST=.TRUE.
        ILAST=.TRUE.
        CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,
     1              NCTEXT,AVALUE,IDIGIT,
     1              NTOT,NUMROW,
     1              ICAPSW,ICAPTY,ILAST,IFRST,
     1              ISUBRO,IBUGA3,IERROR)
C
        ITITLE=' '
        NCTITL=0
        ITITL9='Intervals'
        NCTIT9=9
C
        ITITL2(1,1)=' '
        NCTIT2(1,1)=0
        ITITL2(1,2)=' '
        NCTIT2(1,2)=0
        ITITL2(1,3)=' '
        NCTIT2(1,3)=0
        ITITL2(1,4)='Number of'
        NCTIT2(1,4)=9
C
        ITITL2(2,1)='Interval'
        NCTIT2(2,1)=8
        ITITL2(2,2)='Lower'
        NCTIT2(2,2)=5
        ITITL2(2,3)='Upper'
        NCTIT2(2,3)=5
        ITITL2(2,4)='Observations'
        NCTIT2(2,4)=12
C
        ITITL2(3,1)='Number'
        NCTIT2(3,1)=6
        ITITL2(3,2)='Knot'
        NCTIT2(3,2)=4
        ITITL2(3,3)='Knot'
        NCTIT2(3,3)=4
        ITITL2(3,4)='in Interval'
        NCTIT2(3,4)=11
C
        NMAX=0
        NUMCOL=4
        DO4210I=1,NUMCOL
          VALIGN(I)='b'
          ALIGN(I)='r'
          NTOT(I)=15
          IF(I.EQ.1)NTOT(I)=12
          NMAX=NMAX+NTOT(I)
          DO4211J=1,MAXROW
            ITYPCO(J,I)='NUME'
 4211     CONTINUE
          IDIGIT(I)=NUMDIG
          IF(I.EQ.1)THEN
            IDIGIT(I)=0
          ELSEIF(I.EQ.4)THEN
            IDIGIT(I)=0
          ENDIF
          IWHTML(1)=125
          IWHTML(2)=150
          IWHTML(3)=150
          IWHTML(4)=150
          IINC=1400
          IINC3=2200
          IWRTF(1)=IINC
          IWRTF(2)=IWRTF(1)+IINC3
          IWRTF(3)=IWRTF(2)+IINC3
          IWRTF(4)=IWRTF(3)+IINC3
 4210   CONTINUE
C
        L=1
        ISUM=0
        DO1100I=1,N
          IF(X(I).LT.XKNOT(1))ISUM=ISUM+1
 1100   CONTINUE
C
        ITYPCO(1,2)='ALPH'
        AMAT(L,1)=REAL(L)
        AMAT(L,2)=0.0
        AMAT(L,3)=XKNOT(L)
        AMAT(L,4)=REAL(ISUM)
        IVALUE(L,1)=' '
        NCVALU(L,1)=0
        IVALUE(L,2)='-Infinity'
        NCVALU(L,2)=9
        IVALUE(L,3)=' '
        NCVALU(L,3)=0
        IVALUE(L,4)=' '
        NCVALU(L,4)=0
C
        IF(NKNOT.GE.2)THEN
          DO1200L=2,NKNOT
            LM1=L-1
            ISUM=0
            DO1300I=1,N
              IF(XKNOT(LM1).LE.X(I).AND.X(I).LT.XKNOT(L))ISUM=ISUM+1
 1300       CONTINUE
            ITYPCO(L,2)='NUME'
            AMAT(L,1)=REAL(L)
            AMAT(L,2)=XKNOT(LM1)
            AMAT(L,3)=XKNOT(L)
            AMAT(L,4)=REAL(ISUM)
            IVALUE(L,1)=' '
            NCVALU(L,1)=0
            IVALUE(L,2)=' '
            NCVALU(L,2)=0
            IVALUE(L,3)=' '
            NCVALU(L,3)=0
            IVALUE(L,4)=' '
            NCVALU(L,4)=0
 1200     CONTINUE
        ENDIF
C
        L=NKNOT+1
        ISUM=0
        DO1400I=1,N
          IF(XKNOT(NKNOT).LE.X(I))ISUM=ISUM+1
 1400   CONTINUE
C
        ITYPCO(L,2)='NUME'
        ITYPCO(L,3)='ALPH'
        AMAT(L,1)=REAL(L)
        AMAT(L,2)=XKNOT(NKNOT)
        AMAT(L,3)=0.0
        AMAT(L,4)=REAL(ISUM)
        IVALUE(L,1)=' '
        NCVALU(L,1)=0
        IVALUE(L,2)=' '
        NCVALU(L,2)=0
        IVALUE(L,3)='+Infinity'
        NCVALU(L,3)=9
        IVALUE(L,4)=' '
        NCVALU(L,4)=0
C
        ICNT=L
        NUMLIN=3
        NUMCOL=4
        IFRST=.TRUE.
        ILAST=.TRUE.
        IFLAGS=.TRUE.
        IFLAGE=.TRUE.
        CALL DPDT5C(ITITLE,NCTITL,
     1              ITITL9,NCTIT9,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              IFLAGS,IFLAGE,
     1              ISUBRO,IBUGA3,IERROR)
C
C       **********************************
C       **  STEP 14--                   **
C       **  WRITE OUT THE COEFFICIENTS  **
C       **********************************
C
        ISTEPN='13'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SPL2')
     1     CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IBUGJU='OFF'
C
        ITITLE=' '
        NCTITL=0
        ITITL9='Estimation'
        NCTIT9=10
C
        ITITL2(1,1)='Interval'
        NCTIT2(1,1)=8
        NCOLSP(1,1)=1
        ITITL2(1,2)='Parameter'
        NCTIT2(1,2)=9
        NCOLSP(1,2)=1
        ITITL2(1,3)='Estimate'
        NCTIT2(1,3)=8
        NCOLSP(1,3)=1
C
        NMAX=0
        NUMCOL=3
        DO5210I=1,NUMCOL
          VALIGN(I)='b'
          ALIGN(I)='r'
          NTOT(I)=15
          IF(I.EQ.1)NTOT(I)=12
          NMAX=NMAX+NTOT(I)
          ITYPC2(I)='NUME'
          IF(I.EQ.2)ITYPC2(I)='ALPH'
          IWHTML(1)=125
          IWHTML(2)=150
          IWHTML(3)=150
          IINC=1400
          IINC3=2200
          IWRTF(1)=IINC
          IWRTF(2)=IWRTF(1)+IINC3
          IWRTF(3)=IWRTF(2)+IINC3
 5210   CONTINUE
C
        NUMLIN=1
        NUMCOL=3
        ICNT2=0
        L=0
        IKNMAX=NKNOT+1
        JMAX=IDEGRE+1
        DO7500IKN=1,IKNMAX
C
          IF(L+JMAX+1.GT.MAXROW)THEN
            IFRST=.TRUE.
            ILAST=.TRUE.
            IFLAGS=.TRUE.
            IF(ICNT2.GT.0)IFLAGS=.FALSE.
            IFLAGE=.TRUE.
            ICNT=L
            CALL DPDT5B(ITITLE,NCTITL,
     1                  ITITL9,NCTIT9,ITITL2,NCTIT2,
     1                  MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1                  IVALUE,NCVALU,AMAT,ITYPC2,MAXROW,ICNT,
     1                  IDIGI2,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1                  NCOLSP,ROWSEP,
     1                  ICAPSW,ICAPTY,IFRST,ILAST,
     1                  IFLAGS,IFLAGE,
     1                  ISUBRO,IBUGA3,IERROR)
          ENDIF
C
          DO7600J=1,JMAX
            L=L+1
            JM1=J-1
            CALL COENAM(IKN,JM1,IH,IH2,IBUGJU,IERROR)
            AMAT(L,1)=REAL(IKN)
            AMAT(L,2)=0.0
            AMAT(L,3)=B2(L)
            IVALUE(L,1)=' '
            NCVALU(L,1)=0
            IVALUE(L,2)(1:4)=IH(1:4)
            IVALUE(L,2)(5:8)=IH2(1:4)
            NCVALU(L,2)=8
            IVALUE(L,3)=' '
            NCVALU(L,3)=0
            IDIGI2(L,1)=0
            IDIGI2(L,2)=0
            IDIGI2(L,3)=NUMDIG
            ROWSEP(L)=0
 7600     CONTINUE
          L=L+1
          ROWSEP(L)=0
          DO7620JJ=1,3
            AMAT(L,JJ)=0.0
            IVALUE(L,JJ)=' '
            NCVALU(L,JJ)=0
            IDIGI2(L,JJ)=-1
 7620     CONTINUE
 7500   CONTINUE
C
        ICNT=L
        IF(ICNT.GT.0)THEN
          IFRST=.TRUE.
          ILAST=.TRUE.
          IFLAGS=.TRUE.
          IF(ICNT2.GT.0)IFLAGS=.FALSE.
          IFLAGE=.TRUE.
          CALL DPDT5B(ITITLE,NCTITL,
     1                ITITL9,NCTIT9,ITITL2,NCTIT2,
     1                MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1                IVALUE,NCVALU,AMAT,ITYPC2,MAXROW,ICNT,
     1                IDIGI2,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1                NCOLSP,ROWSEP,
     1                ICAPSW,ICAPTY,IFRST,ILAST,
     1                IFLAGS,IFLAGE,
     1                ISUBRO,IBUGA3,IERROR)
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SPL2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPL2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IERROR,N,NKNOT,IDEGRE,K2
 9013   FORMAT('IERROR,N,NKNOT,IDEGRE,K2 = ',A4,2X,4I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,K2
          WRITE(ICOUT,9016)I,B2(I),SDB2(I)
 9016     FORMAT('I,B2(I),SDB2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        WRITE(ICOUT,9021)IREP,NUMVAR
 9021   FORMAT('IREP,NUMVAR = ',A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9023)REPSS,REPMS,REPSD,REPDF,NUMSET
 9023   FORMAT('REPSS,REPMS,REPSD,REPDF,NUMSET = ',4G15.7,I8)
        CALL DPWRST('XXX','BUG ')
        DO9025I=1,N
          WRITE(ICOUT,9026)I,Y(I),X(I),W(I),PRED2(I),RES2(I)
 9026     FORMAT('I,Y(I),X(I),W(I),PRED2(I),RES2(I) = ',I8,5G15.7)
          CALL DPWRST('XXX','BUG ')
 9025   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPLC(IANS,IWIDTH,ITERCH,
     1IANSV,IWIDSV,IBUGGC,IERROR)
C
C     PURPOSE--SEARCH THE VECTOR IANS(.) FOR THE
C              SEPARATOR CHARACTOR.
C              REFORM IANS(.) AND IWIDTH BY OMITTING
C              FROM IANS(.) ALL CHARACTERS
C              FROM THE FIRST SEPARATOR CHARACTOR TO THE END
C              (THE SEPARATOR CHARACTOR ITSELF WILL BE OMITTED).
C              FORM IANSV(.) AND IWIDSV BY
C              SAVING ALL CHARACTERS IN THE ORIGINAL IANS(.)
C              AFTER THE FIRST SEPARATOR CHARACTOR.
C              THE ORIGINAL COMMAND LINE HAS THUS BEEN SPLIT INTO
C              2 PARTS WITH THE FIRST SEPARATOR CHARACTOR AS THE PARTITION.
C              THE FIRST PART WILL REMAIN IN IANS(.);
C              THE SECOND PART WILL BE SAVED IN IANSV(.).
C     NOTE--IANS AND IWIDTH ARE BOTH INPUT AND OUTPUT ARGUMENTS.
C           THE INPUT ARGUMENTS IANS AND IWIDTH BOTH GET CHANGED
C           DURING THE EXECUTION OF THIS SUBROUTINE.
C     INPUT  ARGUMENTS--IANS   (A  HOLLERITH VECTOR WHOSE
C                              I-TH ELEMENT CONTAINS THE
C                              I-TH CHARACTER OF THE
C                              ORIGINAL INPUT COMMAND LINE.
C                     --IWIDTH (AN INTEGER VARIABLE WHICH
C                              CONTAINS THE NUMBER OF CHARACTERS
C                              IN THE ORIGINAL COMMAND LINE.
C                     --ITERCH (A  HOLLERITH VARIABLE WHICH
C                              CONTAINS THE TERMINATORCHARACTER.
C     OUTPUT ARGUMENTS--IANS   (A  HOLLERITH VECTOR WHOSE
C                              I-TH ELEMENT CONTAINS THE
C                              I-TH CHARACTER OF THE
C                              FIRST PART OF THE ORIGINAL COMMAND LINE
C                              (UP TO BUT EXCLUDING THE TERMINATORCHARACTOR).
C                     --IWIDTH (AN INTEGER VARIABLE WHICH
C                              CONTAINS THE NUMBER OF CHARACTERS
C                              IN THE FIRST PART OF THE ORIGINAL COMMAND LINE.
C                     --IANSV  (A  HOLLERITH VECTOR WHOSE
C                              I-TH ELEMENT CONTAINS THE
C                              I-TH CHARACTER OF THE
C                              SECOND PART OF THE COMMAND LINE
C                              (STARTING WITH THE CHARACTER AFTER
C                              THE TERMINATORCHARACTER).
C                     --IWIDSV (AN INTEGER VARIABLE WHICH
C                              CONTAINS THE NUMBER OF CHARACTERS
C                              IN THE SECOND PART OF THE ORIGINAL COMMAND LINE.
C                     --IBUGGC   (A HOLLERITH VARIABLE
C                              FOR DEBUGGING
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1980.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IANS
      CHARACTER*4 ITERCH
      CHARACTER*4 IANSV
      CHARACTER*4 IBUGGC
      CHARACTER*4 IERROR
C
      CHARACTER*4 IBLANK
C
C---------------------------------------------------------------------
C
      DIMENSION IANS(*)
      DIMENSION IANSV(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
C
      IF(IBUGGC.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
  101   FORMAT('AT THE BEGINNING OF DPSPLC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,102)(IANS(I),I=1,MIN(120,IWIDTH))
  102   FORMAT('IANS(.) = ',120A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,103)IWIDTH,IWIDSV,ITERCH
  103   FORMAT('IWIDTH,IWIDSV,ITERCH = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,105)(IANSV(I),I=1,MIN(120,IWIDSV))
  105   FORMAT('IANSV(.) = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *************************************
C               **  STEP 1--                       **
C               **  TRIM THE VALUE OF IWIDTH       **
C               **  BY IGNORING BLANKS ON THE END  **
C               **  OF IANS(.)                     **
C               *************************************
C
      DO150I=1,IWIDTH
      IREV=IWIDTH-I+1
      IF(IANS(IREV).NE.' ')GOTO160
  150 CONTINUE
      IWIDTH=0
      IWIDSV=0
      GOTO900
  160 CONTINUE
      IWIDTH=IREV
C
C               *************************************
C               **  STEP 2--                       **
C               **  BLANK OUT THE IANSV(.) VECTOR. **
C               **  NOTE THAT THIS NEED ONLY BE    **
C               **  DONE OUT TO IWIDTH ELEMENTS    **
C               **  SINCE IANSV(.) WILL NEVER      **
C               **  BE LARGER THAN IANS(.)         **
C               *************************************
C
      IBLANK=' '
      DO200I=1,IWIDTH
      IANSV(I)=IBLANK
  200 CONTINUE
C
C               **********************************
C               **  STEP 3--                    **
C               **  SCAN THE IANS(.) VECTOR TO  **
C               **  SEARCH FOR THE TERMINATOR   **
C               **********************************
C
      DO300I=1,IWIDTH
      ILOCSP=I
      IF(IANS(I).EQ.ITERCH)GOTO390
  300 CONTINUE
      ILOCSP=IWIDTH+1
  390 CONTINUE
C
C               ***********************************
C               **  STEP 4--                     **
C               **  COMPUTE IANSV(.) AND IWIDSV  **
C               ***********************************
C
      J=0
      IMIN=ILOCSP+1
      IMAX=IWIDTH
      IF(IMIN.GT.IMAX)GOTO450
      DO400I=IMIN,IMAX
      J=J+1
      IANSV(J)=IANS(I)
  400 CONTINUE
  450 CONTINUE
      IWIDSV=J
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  RECOMPUTE THE VALUE OF IWIDTH--                **
C               **  FIRST BY DEFINING IT TO BE                     **
C               **  IMMEDIATELY BEFORE THE TERMINATOR CHARACTOR,   **
C               **  AND THEN TRIMMING IT FURTHER BY                **
C               **  IGNORING ANY BLANKS AT THE NEW END OF IANS(.)  **
C               *****************************************************
C
      IWIDTH=ILOCSP-1
C
      DO510I=1,IWIDTH
        IREV=IWIDTH-I+1
        IF(IANS(IREV).NE.' ')GOTO520
  510 CONTINUE
      IREV=0
  520 CONTINUE
      IWIDTH=IREV
C
C               ****************
C               **  STEP 9--  **
C               **  EXIT      **
C               ****************
C
  900 CONTINUE
      IF(IBUGGC.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,901)
  901   FORMAT('AT THE END OF DPSPLC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,902)(IANS(I),I=1,MIN(120,IWIDTH))
  902   FORMAT('IANS(.) = ',120A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,903)IWIDTH,IWIDSV,ITERCH
  903   FORMAT('IWIDTH,IWIDSV,ITERCH = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,905)(IANSV(I),I=1,MIN(120,IWIDSV))
  905   FORMAT('IANSV(.) = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPLI(IHARG,IHARG2,NUMARG,IDEFSL,MAXSPI,ISPILI,
CCCCC AUGUST 1995.  ADD IHARG2 FOR DASH2, ETC
CCCCC SUBROUTINE DPSPLI(IHARG,NUMARG,IDEFSL,MAXSPI,ISPILI,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE SPIKE LINE TYPES.
C              THESE ARE LOCATED IN THE VECTOR ISPILI(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEFSL
C                     --MAXSPI
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--ISPILI (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --AUGUST    1995.  DASH2 BUG
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      CHARACTER*4 IHARG2
      CHARACTER*4 IDEFSL
      CHARACTER*4 ISPILI
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      DIMENSION IHARG2(*)
      DIMENSION ISPILI(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPSP'
      ISUBN2='LI  '
C
      NUMSPI=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPSPLI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXSPI,NUMSPI
   53 FORMAT('MAXSPI,NUMSPI = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEFSL
   55 FORMAT('IDEFSL = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)ISPILI(1)
   70 FORMAT('ISPILI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,ISPILI(I)
   76 FORMAT('I,ISPILI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='    '
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
CCCCC IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
CCCCC IF(IHARG(2).EQ.'ALL')GOTO1300
CCCCC IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
CCCCC IF(IHARG(3).EQ.'ALL')GOTO1300
CCCCC APRIL 1996.  CHANGE IHOLD TO IHOLD1 BELOW
      IF(IHARG(2).EQ.'ALL')THEN
        IHOLD1=IHARG(3)
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(3).EQ.'2')IHOLD1='DA2'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(3).EQ.'3')IHOLD1='DA3'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(3).EQ.'4')IHOLD1='DA4'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(3).EQ.'5')IHOLD1='DA5'
        GOTO1300
      ENDIF
      IF(IHARG(3).EQ.'ALL')THEN
        IHOLD1=IHARG(2)
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(2).EQ.'2')IHOLD1='DA2'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(2).EQ.'3')IHOLD1='DA3'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(2).EQ.'4')IHOLD1='DA4'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(2).EQ.'5')IHOLD1='DA5'
        GOTO1300
      ENDIF
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE INDIVIDUAL SPECIFICATIONS CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMSPI=1
      ISPILI(1)='    '
      GOTO1270
C
 1220 CONTINUE
      NUMSPI=NUMARG-1
      IF(NUMSPI.GT.MAXSPI)NUMSPI=MAXSPI
      DO1225I=1,NUMSPI
      J=I+1
      IHOLD1=IHARG(J)
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'2')IHOLD1='DA2'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'3')IHOLD1='DA3'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'4')IHOLD1='DA4'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'5')IHOLD1='DA5'
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFSL
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFSL
      ISPILI(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMSPI
      WRITE(ICOUT,1276)I,ISPILI(I)
 1276 FORMAT('SPIKE LINE ',I6,' HAS JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 2--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMSPI=MAXSPI
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFSL
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFSL
      DO1315I=1,NUMSPI
      ISPILI(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)ISPILI(I)
 1316 FORMAT('ALL SPIKE LINES HAVE JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPSPLI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXSPI,NUMSPI
 9013 FORMAT('MAXSPI,NUMSPI = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEFSL
 9015 FORMAT('IDEFSL = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)ISPILI(1)
 9030 FORMAT('ISPILI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,ISPILI(I)
 9036 FORMAT('I,ISPILI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPSPMA(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IANGLU,MAXNPP,MAXNXT,
     1                  CLLIMI,CLWIDT,
     1                  ICONT,NUMHPP,NUMVPP,IMANUF,
     1                  XMATN,YMATN,XMITN,YMITN,
     1                  ISQUAR,IVGMSW,IHGMSW,
     1                  IMPSW,IMPNR,IMPNC,IMPCO,
     1                  PMXMIN,PMXMAX,PMYMIN,PMYMAX,
CCCCC1                  TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,
     1                  ALOWFR,ALOWDG,IFORSW,ICAPSW,
     1                  ANOPL1,ANOPL2,ISEED,IBOOSS,BARHEF,BARWEF,
     1                  IBUGG2,IBUGG3,IBUGCO,IBUGEV,IBUGQ,
     1                  IBUGUG,IBUGU2,IBUGU3,IBUGU4,ISUBRO,
     1                  IFOUND,IERROR)
C
C     PURPOSE--GENERATE A SCATTER PLOT MATRIX
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/9
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--SEPTEMBER 1999.
C     UPDATED--AUGUST      2007. CALL LIST TO MAINGR
C     UPDATED--AUGUST      2011. USE DPPARS TO PARSE COMMAND LINE
C     UPDATED--AUGUST      2011. USE DPAUFI TO OPEN/CLOSE TEMPORARY FILES
C     UPDATED--AUGUST      2011. SAVE/RESTORE PLOT CONTROL SETTINGS
C                                USING DPSPM5
C     UPDATED--JUNE        2014. WRITE YPLOT, XPLOT, TAGPLOT TO
C                                FILE
C     UPDATED--OCTOBER     2018. ISSUE WITH "TO" SYNTAX
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES---------------
C
      REAL CLLIMI(*)
      REAL CLWIDT(*)
C
      INCLUDE 'DPCOPA.INC'
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICONT
      CHARACTER*4 IPOWE
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IANGLU
      CHARACTER*4 IFORSW
C
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGUG
      CHARACTER*4 IBUGU2
      CHARACTER*4 IBUGU3
      CHARACTER*4 IBUGU4
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IBUGQ
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISQUAR
      CHARACTER*4 IVGMSW
      CHARACTER*4 IHGMSW
      CHARACTER*4 IREPCH
      CHARACTER*4 IMPSW
C
      CHARACTER*4 IPLOTT
      CHARACTER*4 ICT
      CHARACTER*4 IC2T
      CHARACTER*4 IHT(5)
      CHARACTER*4 IH2T(5)
      CHARACTER*4 ICBT
      CHARACTER*4 IC2BT
      CHARACTER*4 IHBT(5)
      CHARACTER*4 IH2BT(5)
C
      CHARACTER*4 ISPMTZ
      CHARACTER*4 ISPMFZ
      CHARACTER*4 ISPMPZ
      CHARACTER*4 ISPMLZ
      CHARACTER*4 ISPML2
      CHARACTER*4 ISPMZT
      CHARACTER*4 ISPMZ2
      CHARACTER*4 ISPMZ3
      CHARACTER*4 ISPMZ4
      CHARACTER*4 ISPMXZ
      CHARACTER*4 ISPMYZ
      CHARACTER*4 ISPMDZ
      CHARACTER*4 ISUBSZ
C
      CHARACTER*4 ISUBZZ
      CHARACTER*4 IREFZZ
C
      CHARACTER*4 IFEED9
      CHARACTER*4 IMANUF
      CHARACTER*4 IEMPTY
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      PARAMETER(MAXY=25)
      CHARACTER*40 INAME
      CHARACTER*4 IVARN1(MAXY)
      CHARACTER*4 IVARN2(MAXY)
      CHARACTER*4 IVARTY(MAXY)
      DIMENSION ILIS(MAXY)
      DIMENSION PVAR(MAXY)
      DIMENSION NRIGHT(MAXY)
      DIMENSION ICOLL(MAXY)
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IOP
      CHARACTER*4 IFITA2
C
      DIMENSION TEMP(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
C
C-----COMMON------------------------------------------------------
C
      INCLUDE 'DPCOZ3.INC'
CCCCC INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOPC.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOSP.INC'
C
      EQUIVALENCE (G3RBAG(KGARB1),TEMP(1))
      EQUIVALENCE (G3RBAG(KGARB2),TEMP2(1))
      EQUIVALENCE (G3RBAG(KGARB3),TEMP3(1))
      EQUIVALENCE (G3RBAG(KGARB4),XTEMP1(1))
      EQUIVALENCE (G3RBAG(KGARB5),XTEMP2(1))
C
C-----COMMON VARIABLES (GENERAL)----------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-------------------------------------------------
C
      IFOUND='YES'
      IERROR='NO'
      ISUBN1='DPSP'
      ISUBN2='    '
      ICASPL='SPMA'
      NDONE=0
      IPOS1=0
      IPOS2=0
C
C     WRITE XPLOT, YPLOT, TAGPLOT TO "dpst5f.dat"
C
      IOP='OPEN'
      IFLG11=0
      IFLG21=0
      IFLG31=0
      IFLAG4=0
      IFLAG5=1
      CALL DPAUFI(IOP,IFLG11,IFLG21,IFLG31,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGG2,ISUBRO,IERROR)
      ICNTPL=0
      IFITA2=IFITAU
      IFITAU='OFF'
      IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************
C               **  TREAT THE SCATTER PLOT MATRIX CASE **
C               *****************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'SPMA')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSPMA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2,NUMARG
   52   FORMAT('ICASPL,IAND1,IAND2,NUMARG = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GT.0)THEN
          DO61I=1,NUMARG
            WRITE(ICOUT,62)I,IHARG(I),IARGT(I)
   62       FORMAT('I,IHARG(I),IARGT(I) = ',I8,2X,A4,2X,A4)
            CALL DPWRST('XXX','BUG ')
   61     CONTINUE
        ENDIF
        WRITE(ICOUT,71)CLLIMI(1),CLWIDT(1)
   71   FORMAT('CLLIMI(1),CLWIDT(1) = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *******************************************************
C               **  STEP 1--                                         **
C               **  SHIFT COMMAND LINE ARGMENTS                      **
C               *******************************************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPMA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISHIFT=0
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'PLOT'.AND.
     1   IHARG(2).EQ.'MATR')THEN
        ISHIFT=2
      ELSEIF(NUMARG.GE.1.AND.IHARG(1).EQ.'PLOT')THEN
        ISHIFT=1
      ELSEIF(NUMARG.GE.2.AND.ICOM.EQ.'YOUD'.AND.IHARG(1).EQ.'MATR'.AND.
     1   IHARG(2).EQ.'PLOT')THEN
        ISHIFT=2
        ISPMPZ=ISPMPT
        ISPMPT='YOUD'
      ELSEIF(NUMARG.GE.2.AND.ICOM.EQ.'DEX '.AND.IHARG(1).EQ.'INTE'.AND.
     1   IHARG2(1).EQ.'RACT'.AND.IHARG(2).EQ.'PLOT')THEN
        ISHIFT=2
        ISPMPZ=ISPMPT
        ISPMPT='DEXI'
        ISPMTZ=ISPMTA
        ISPMTA='OFF'
      ELSEIF(NUMARG.GE.4.AND.ICOM.EQ.'DEX '.AND.IHARG(2).EQ.'INTE'.AND.
     1   IHARG(3).EQ.'EFFE'.AND.IHARG(4).EQ.'PLOT')THEN
        ISHIFT=4
        ISPMPZ=ISPMPT
        ISPMPT='DEXS'
        ISPMTZ=ISPMTA
        ISPMTA='OFF'
        ISPMZT=ISPMST
        ISPMZ2=ISPMS2
        ISPMZ3=ISPMS3
        ISPMZ4=ISPMS4
        ISPMST=IHARG(1)
        ISPMS2=IHARG2(1)
        ISPMS3='    '
        ISPMS4='    '
      ELSEIF(NUMARG.GE.3.AND.ICOM.EQ.'DEX '.AND.IHARG(2).EQ.'INTE'.AND.
     1   IHARG(3).EQ.'PLOT')THEN
        ISHIFT=3
        ISPMPZ=ISPMPT
        ISPMPT='DEXS'
        ISPMTZ=ISPMTA
        ISPMTA='OFF'
        ISPMZT=ISPMST
        ISPMZ2=ISPMS2
        ISPMZ3=ISPMS3
        ISPMZ4=ISPMS4
        ISPMST=IHARG(1)
        ISPMS2=IHARG2(1)
        ISPMS3='    '
        ISPMS4='    '
      ELSEIF(NUMARG.GE.5.AND.ICOM.EQ.'DEX '.AND.IHARG(3).EQ.'INTE'.AND.
     1   IHARG(4).EQ.'EFFE'.AND.IHARG(5).EQ.'PLOT')THEN
        ISHIFT=5
        ISPMPZ=ISPMPT
        ISPMPT='DEXS'
        ISPMTZ=ISPMTA
        ISPMTA='OFF'
        ISPMZT=ISPMST
        ISPMZ2=ISPMS2
        ISPMZ3=ISPMS3
        ISPMZ4=ISPMS4
        ISPMST=IHARG(1)
        ISPMS2=IHARG2(1)
        ISPMS3=IHARG(2)
        ISPMS4=IHARG2(2)
      ELSEIF(NUMARG.GE.4.AND.ICOM.EQ.'DEX '.AND.IHARG(3).EQ.'INTE'.AND.
     1   IHARG(4).EQ.'PLOT')THEN
        ISHIFT=4
        ISPMPZ=ISPMPT
        ISPMPT='DEXS'
        ISPMTZ=ISPMTA
        ISPMTA='OFF'
        ISPMZT=ISPMST
        ISPMZ2=ISPMS2
        ISPMZ3=ISPMS3
        ISPMZ4=ISPMS4
        ISPMST=IHARG(1)
        ISPMS2=IHARG2(1)
        ISPMS3=IHARG(2)
        ISPMS4=IHARG2(2)
      ENDIF
C
      IF(ISHIFT.GT.0)THEN
        CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
      ICOM='PLOT'
      ICOM2='    '
      IFOUND='YES'
C
C               *******************************************************
C               **  STEP 2--                                         **
C               **  CHECK FOR THE PROPER NUMBER OF INPUT ARGUMENTS.  **
C               *******************************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPMA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='SCATTER PLOT MATRIX'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IF(ISPMPT.EQ.'BIHI')IFLAGE=0
      IF(ISPMPT.EQ.'QQPL')IFLAGE=0
      IF(ISPMPT.EQ.'DEXC')IFLAGE=99
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=2
      MAXNVA=MAXY
C
C     2018/10: CHECK IF "TO" SYNTAX IS USED.  IDENTIFY POSITION
C              (AND ASSUME THERE IS ONLY ONE OCCURENCE.
C
      IPOSTO=-1
      DO110II=2,NUMARG-1
        IF(IHARG(II).EQ.'TO' .AND. IHARG2(II).EQ.'    ')THEN
          IPOSTO=II
          GOTO119
        ENDIF
  110 CONTINUE
  119 CONTINUE
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXY,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLL,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C     IF(IPOSTO.GT.0)THEN
        IHRIGH=IHARG(IPOSTO-1)
        IHRIG2=IHARG2(IPOSTO-1)
        DO120II=1,NUMVAR
          IF(IHRIGH.EQ.IVARN1(II) .AND. IHRIG2.EQ.IVARN2(II))THEN
            IPOS1=II
            GOTO129
           ENDIF
  120   CONTINUE
  129   CONTINUE
C
        IHRIGH=IHARG(IPOSTO+1)
        IHRIG2=IHARG2(IPOSTO+1)
        DO130II=1,NUMVAR
          IF(IHRIGH.EQ.IVARN1(II) .AND. IHRIG2.EQ.IVARN2(II))THEN
            IPOS2=II
            GOTO139
           ENDIF
  130   CONTINUE
  139   CONTINUE
C
        IDIFF=IPOS2-IPOS1
        IF(IDIFF.EQ.2)THEN
          IHARG(IPOSTO)=IVARN1(IPOS1+1)
          IHARG2(IPOSTO)=IVARN2(IPOS1+1)
        ELSEIF(IDIFF.EQ.1)THEN
          IHARG(IPOSTO)=IVARN1(IPOS2)
          IHARG2(IPOSTO)=IVARN2(IPOS2)
          IF(IPOSTO+1.EQ.NUMARG)THEN
            NUMARG=NUMARG-1
          ELSEIF(IPOSTO+1.LT.NUMARG)THEN
            DO140II=IPOSTO+1,NUMARG
              IHARG(II-1)=IHARG(II)
              IHARG2(II-1)=IHARG2(II)
  140       CONTINUE
            NUMARG=NUMARG-1
        ELSEIF(IDIFF.GT.2)THEN
          NINS=IPOS2-IPOS1-1
          NADD=NINS-1
          DO150II=NUMARG,IPOSTO+1,-1
            IHARG(II+NADD)=IHARG(II)
            IHARG2(II+NADD)=IHARG2(II)
  150     CONTINUE
          DO160II=IPOSTO,IPOSTO+NADD
            IHARG(II+NADD)=IVARN1(IPOS1+II-1)
            IHARG2(II+NADD)=IVARN2(IPOS1+II-1)
  160     CONTINUE
        ENDIF
      ENDIF
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPMA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLL(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLL(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               **************************************************
C               **   STEP 1--                                   **
C               **   SAVE INITIAL SETTINGS                      **
C               **************************************************
C
      ISTEPN='1'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'SPMA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFLAG=1
      CALL DPSPM5(IFLAG,IMPSW,IMPCO,IMPNR,IMPNC,
     1            IBUGG2,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      ISPMTZ=ISPMTA
      ISPMFZ=ISPMFR
      ISPMPZ=ISPMPT
      ISPMLZ=ISPMLD
      ISPML2=ISPMLA
      ISPMZT=ISPMST
      ISPMZ2=ISPMS2
      ISPMZ3=ISPMS3
      ISPMZ4=ISPMS4
      ISPMXZ=ISPMXA
      ISPMYZ=ISPMYA
      ISPMDZ=ISPMDI
C
      IF(ISPMLA.EQ.'BOX'.AND.ISPMPT.EQ.'BIHI')ISPMLA='ON'
      IF(ISPMFR.EQ.'USER'.AND.ISPMLA.EQ.'BOX')ISPMLA='ON'
      IF(ISPMFR.EQ.'CONN')ISPMFR='DEFA'
      IF(ISPMLA.EQ.'BOX ')THEN
        ISPMLD='ON'
CCCCC   ISPMXA='BOTT'
CCCCC   ISPMYA='LEFT'
        IF(ISPMDI.EQ.'BLAN')ISPMDI='LINE'
      ENDIF
C
      IOPTN=1
      IDX=0
      IDY=0
      CALL DPSPM4(ICASPL,IOPTN,IDX,IDY,
     1            ISUBNU,ISUBSW,
     1            ASUBXL,ASUBXU,ASUBYL,ASUBYU,
     1            ISUBN9,ISUBSZ,
     1            ASBXL2,ASBXU2,ASBYL2,ASBYU2,
     1            PSPLSL,PSPLSU,PSPLSL,PSPLSU,
     1            IBUGG2,ISUBRO,IERROR)
C
      IFEED9=IFEEDB
C
      IF(ISPMPT.EQ.'YOUD'.OR.ISPMPT.EQ.'DEXC')THEN
        ISPMTA='ON'
      ENDIF
C
      IF(ISPMTA.EQ.'ON')THEN
        ISHIFT=ILOCQ-1
        CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        ISHIFT=NUMVAR-1
        CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        DO1509I=1,NUMVAR-1
          IHARG(I)=IVARN1(I)
          IHARG2(I)=IVARN2(I)
 1509   CONTINUE
        NUMVAR=NUMVAR-1
        IF(NUMVAR.LT.2)GOTO9000
      ENDIF
C
      IMPSW3=IMPSW
      IMPCO2=IMPCO
      IMPNR2=IMPNR
      IMPNC2=IMPNC
      IMPSW='ON'
      IMPCO=1
      IMPCO9=IMPCO
      IMPNR=NUMVAR
      IMPNC=NUMVAR
      NPLOTS=IMPNR*IMPNC
C
C               *************************************
C               **   STEP 21--                     **
C               **   GENERATE THE SCATTER PLOTS    **
C               *************************************
C
      ISTEPN='21'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'DPSPMA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISHIFT=NUMVAR
      CALL ADJUST(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      ISHIFT=2
      CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1IBUGG2,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IHARG(1)=IVARN1(1)
      IHARG2(1)=IVARN2(1)
      IHARG(2)=IVARN1(1)
      IHARG2(2)=IVARN2(1)
C
      IF(ISPMLA.EQ.'BOX')THEN
        IMPNR=NUMVAR+1
        IMPNC=NUMVAR+1
      ENDIF
C
      IF(ISPMPT.EQ.'BIHI')THEN
        ICT='RELA'
        IC2T='TIVE'
        IHT(1)='BIHI'
        IH2T(1)='STOG'
        NCCOMM=1
        ICBT='RELA'
        IC2BT='TIVE'
        IHBT(1)='HIST'
        IH2BT(1)='OGRA'
        NCCOM2=1
        IPLOTT='BIHI'
        GOTO5000
      ELSEIF(ISPMPT.EQ.'DEXI')THEN
        ICT='INTE'
        IC2T='RACT'
        NCCOMM=1
        IHT(NCCOMM)='PLOT'
        IH2T(NCCOMM)='    '
        ICBT=ICT
        IC2BT=IC2T
        NCCOM2=NCCOMM
        DO2105II=1,NCCOMM
          IHBT(II)=IHT(II)
          IH2BT(II)=IH2T(II)
 2105   CONTINUE
        IPLOTT='DEXI'
        IRESP=1
        GOTO6599
      ELSEIF(ISPMPT.EQ.'DEXS')THEN
        IF(ISPMST.NE.'    ')THEN
          ICT=ISPMST
          IC2T=ISPMS2
          NCCOMM=0
          IF(ISPMS3.NE.'    ')THEN
            IHT(1)=ISPMS3
            IH2T(1)=ISPMS4
            NCCOMM=1
          ENDIF
        ELSE
          ICT='MEAN'
          IC2T='    '
          NCCOMM=0
        ENDIF
        NCCOMM=NCCOMM+1
        IHT(NCCOMM)='INTE'
        IH2T(NCCOMM)='RACT'
        NCCOMM=NCCOMM+1
        IHT(NCCOMM)='PLOT'
        IH2T(NCCOMM)='    '
        ICBT=ICT
        IC2BT=IC2T
        NCCOM2=NCCOMM
        DO2108II=1,NCCOMM
          IHBT(II)=IHT(II)
          IH2BT(II)=IH2T(II)
 2108   CONTINUE
        IPLOTT='DEXS'
        IRESP=1
        GOTO6599
      ELSEIF(ISPMPT.EQ.'CROS')THEN
        IF(ISPMST.NE.'    ')THEN
          ICT='CROS'
          IC2T='S   '
          IHT(1)='TABU'
          IH2T(1)='LATE'
          IHT(2)=ISPMST
          IH2T(2)=ISPMS2
          NCCOMM=2
          IF(ISPMS3.NE.'    ')THEN
            IHT(3)=ISPMS3
            IH2T(3)=ISPMS4
            NCCOMM=3
          ENDIF
          NCCOMM=NCCOMM+1
          IHT(NCCOMM)='PLOT'
          IH2T(NCCOMM)='    '
          ICBT=ISPMST
          IC2BT=ISPMS2
          NCCOM2=0
          IF(ISPMS3.NE.'    ')THEN
            IHT(1)=ISPMS3
            IH2T(1)=ISPMS4
            NCCOM2=1
          ENDIF
          NCCOM2=NCCOM2+1
          IHBT(NCCOM2)='PLOT'
          IH2BT(NCCOM2)='    '
          IPLOTT='CRO2'
          IRESP=1
        ELSE
          ICT='CROS'
          IC2T='S   '
          IHT(1)='TABU'
          IH2T(1)='LATE'
          IHT(2)='PLOT'
          IH2T(2)='    '
          NCCOMM=2
          ICBT='PLOT'
          IC2BT='    '
          NCCOM2=0
          IPLOTT='CROS'
          IRESP=0
        ENDIF
        GOTO6599
      ELSEIF(ISPMPT.EQ.'DEXC')THEN
        ICT='DEX '
        IC2T='    '
        IHT(1)='CONT'
        IH2T(1)='OUR '
        IHT(2)='PLOT'
        IH2T(2)='    '
        NCCOMM=2
        ICBT='DEX '
        IC2BT='    '
        IHBT(1)='CONT'
        IH2BT(1)='OUR '
        IHBT(2)='PLOT'
        IH2BT(2)='    '
        NCCOM2=2
        IPLOTT='DEXC'
        IRESP=1
        GOTO6599
      ELSEIF(ISPMPT.EQ.'QQPL')THEN
        ICT='QUAN'
        IC2T='TILE'
        IHT(1)='QUAN'
        IH2T(1)='TILE'
        IHT(2)='PLOT'
        IH2T(2)='    '
        NCCOMM=2
        ICBT='PERC'
        IC2BT='ENT '
        IHBT(1)='POIN'
        IH2BT(1)='    '
        IHBT(2)='PLOT'
        IH2BT(2)='    '
        NCCOM2=2
        IPLOTT='QQSP'
        IPPTBI='UNBI'
        GOTO5000
      ELSEIF(ISPMPT.EQ.'CORR')THEN
        ICT='CROS'
        IC2T='S   '
        IHT(1)='CORR'
        IH2T(1)='ELAT'
        IHT(2)='PLOT'
        IH2T(2)='    '
        NCCOMM=2
        ICBT='AUTO'
        IC2BT='CORR'
        IHBT(1)='PLOT'
        IH2BT(1)='    '
        NCCOM2=1
        IPLOTT='CCOR'
        GX1MIN=0.0
        IX1MIN='FIXE'
        GOTO5000
      ELSEIF(ISPMPT.EQ.'SPEC')THEN
        ICT='CROS'
        IC2T='S   '
        IHT(1)='SPEC'
        IH2T(1)='TRAL'
        IHT(2)='PLOT'
        IH2T(2)='    '
        NCCOMM=2
        ICBT='SPEC'
        IC2BT='TRAL'
        IHBT(1)='PLOT'
        IH2BT(1)='    '
        NCCOM2=1
        IPLOTT='CSPE'
        ISPMFZ=ISPMFR
        IF(IY1MIN.NE.'FIXE'.OR.IY1MAX.NE.'FIXE'.OR.
     1     IY2MIN.NE.'FIXE'.OR.IY2MAX.NE.'FIXE')THEN
           ISPMFR='USER'
        ENDIF
        GOTO5000
      ELSEIF(ISPMPT.EQ.'LAG ')THEN
        ICT='CROS'
        IC2T='S   '
        IHT(1)='LAG '
        IH2T(1)='    '
        IHT(2)='PLOT'
        IH2T(2)='    '
        NCCOMM=2
        ICBT='LAG '
        IC2BT='    '
        IHBT(1)='PLOT'
        IH2BT(1)='    '
        NCCOM2=1
        IPLOTT='CLAG'
        GOTO5000
      ENDIF
C
C               *************************************
C               **   SCATTER PLOT CASE             **
C               *************************************
C
      IF(ISPMTA.EQ.'ON')THEN
        ISHIFT=1
        CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        IHARG(3)=IVARN1(NUMVAR+1)
        IHARG2(3)=IVARN2(NUMVAR+1)
      ENDIF
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'DPSPMA')THEN
        WRITE(ICOUT,1720)NUMVAR
 1720 FORMAT('      NUMVAR = ',I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      NARGT=NUMARG
      DO3000IROW=1,IMPNR
        DO4000ITEMP1=1,IMPNC
C
          IF(IROW.LE.NUMVAR)THEN
            IHARG(1)=IVARN1(IROW)
            IHARG2(1)=IVARN2(IROW)
            IDX=IROW
          ELSE
            IHARG(1)=IVARN1(NUMVAR)
            IHARG2(1)=IVARN2(NUMVAR)
            IDX=NUMVAR
          ENDIF
          ICOL=ITEMP1
          IEMPTY='NO'
          IF(ISPMLA.EQ.'BOX')THEN
            ICOL=ITEMP1-1
            IF(ICOL.EQ.0)IEMPTY='YES'
            IF(IROW.EQ.IMPNR)IEMPTY='YES'
          ENDIF
C
          IF(IROW.GT.ICOL.AND.ISPMLD.EQ.'OFF')THEN
            IMPCO=IMPCO+1
            GOTO4000
          ENDIF
C
          IF(ICOL.EQ.0)THEN
            IHARG(2)=IVARN1(1)
            IHARG2(2)=IVARN2(1)
            IDY=1
          ELSE
            IHARG(2)=IVARN1(ICOL)
            IHARG2(2)=IVARN2(ICOL)
            IDY=ICOL
          ENDIF
C
          IF(IEMPTY.EQ.'YES')THEN
            DO3104I=1,MAXSUB
              ISU2SW(I)=ISUBSW(I)
              ISUBSW(I)='OFF'
 3104       CONTINUE
          ENDIF
          IOPTN=3
          CALL DPSPM4(ICASPL,IOPTN,IDX,IDY,
     1                ISUBNU,ISUBSW,
     1                ASUBXL,ASUBXU,ASUBYL,ASUBYU,
     1                ISUBN9,ISUBSZ,
     1                ASBXL2,ASBXU2,ASBYL2,ASBYU2,
     1                PSPLSL,PSPLSU,PSPLSL,PSPLSU,
     1                IBUGG2,ISUBRO,IERROR)
C
          ICASPL='SPMA'
          CALL DPSPM1(ICASPL,IVARN1,IVARN2,ICOLL,
     1                IMPNR,IMPNC,IROW,ICOL,IROW,ICOL,IPLOT,
     1                NPLOTS,NUMVAR,
     1                ICHAP2,ILINP2,
     1                GY1MNS,GY1MXS,GY2MNS,GY2MXS,
     1                GX1MNS,GX1MXS,GX2MNS,GX2MXS,
     1                IY1MNS,IY1MXS,IY2MNS,IY2MXS,
     1                IX1MNS,IX1MXS,IX2MNS,IX2MXS,
     1                IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                PX1LD2,PX2LD2,
     1                IY1LJ2,IY1LD2,PY1LD2,PY1LA2,
     1                IX1LT2,IX2LT2,IY1LT2,IY2LT2,
     1                NCX1L2,NCX2L2,NCY1L2,NCY2L2,
     1                PSPLLL,PSPLUL,PSPLLL,PSPLUL,ICOL,
     1                ISPMLA,ISPMLD,ISPMPT,ISPMFR,ISPMXA,ISPMYA,
     1                ISPMDI,ISPX1L,
     1                ISPMXT,ISPMXL,ISPMYT,ISPMYL,
     1                ISPMTD,PSPMTD,IVNMEX,
     1                IBUGG2,ISUBRO)
          IERROR='NO'
C
          IF(IEMPTY.EQ.'YES')THEN
            DO3106I=1,100
              ICHAPA(I)='BLAN'
              ILINPA(I)='BLAN'
              ISPISW(I)='OFF'
              IBARSW(I)='OFF'
 3106        CONTINUE
             CALL MAINGR(ANOPL1,ANOPL2,NPLOTV,NPLOTP,NS,ICASPL,
     1                   MAXNPP,ISEED,IBOOSS,
     1                   IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                   IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                   BARHEF,BARWEF,
     1                   IRHSTG,IHSTCW,IHSTEB,IHSTOU,IASHWT,
     1                   IHSTMC,IHSTOP,
     1                   ICAPSW,IFORSW,
     1                   IGUIFL,IERRFA,IFRALI,
     1                   IAND1,IAND2,ICONT,NUMHPP,NUMVPP,
CCCCC1                   TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,MAXNXT,
     1                   MAXNXT,
     1                   ISUBRO,IFOUND,IERROR)
             GOTO4089
          ENDIF
C
          IF(IROW.EQ.ICOL)THEN
            IF(ISPMDI.NE.'LINE')THEN
               DO3110I=1,100
                 ICHAPA(I)='BLAN'
                 ILINPA(I)='BLAN'
                 ISPISW(I)='OFF'
                 IBARSW(I)='OFF'
 3110          CONTINUE
            ENDIF
            CALL MAINGR(ANOPL1,ANOPL2,NPLOTV,NPLOTP,NS,ICASPL,
     1                   MAXNPP,ISEED,IBOOSS,
     1                   IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                   IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                   BARHEF,BARWEF,
     1                   IRHSTG,IHSTCW,IHSTEB,IHSTOU,IASHWT,
     1                   IHSTMC,IHSTOP,
     1                   ICAPSW,IFORSW,
     1                   IGUIFL,IERRFA,IFRALI,
     1                   IAND1,IAND2,ICONT,NUMHPP,NUMVPP,
CCCCC1                   TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,MAXNXT,
     1                   MAXNXT,
     1                   ISUBRO,IFOUND,IERROR)
            IF(IERROR.EQ.'YES')GOTO4000
            ICONT=IDCONT(1)
            IPOWE=IDPOWE(1)
            NUMHPP=IDNHPP(1)
            IMPARG=2
            CALL DPGRAP(Y,X,X3D,D,N,NPLOTP,ICASPL,ICONT,IPOWE,NUMHPP,
     1                  XMATN,YMATN,XMITN,YMITN,
     1                  ISQUAR,
     1                  IVGMSW,IHGMSW,
     1                  IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,
     1                  IVSTAR,IVSTOP,IFUNC,NUMCHF,IREPCH,
     1                  YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                  IMPSW,IMPNR,IMPNC,IMPCO,IMPCO9,
     1                  IMPARG,
     1                  PMXMIN,PMXMAX,PMYMIN,PMYMAX,
     1                  MAXCOL,
     1                  DSIZE,DSYMB,DCOLOR,DFILL,
     1                  ICAPSW,
     1                  IBUGUG,IBUGU2,IBUGU3,IBUGU4,ISUBRO,
     1                  IERROR)
C
            ICNTPL=ICNTPL+1
            IF(N.GT.0)THEN
              DO3115II=1,N
                WRITE(IOUNI5,3118)ICNTPL,Y(II),X(II),D(II)
 3115         CONTINUE
 3118         FORMAT(I12,3E15.7)
            ENDIF
C
            IF(IERROR.EQ.'NO')IAND1=IAND2
            DO3120I=1,100
              ICHAPA(I)=ICHAP2(I)
              ILINPA(I)=ILINP2(I)
              ISPISW(I)=ISPIS2(I)
              IBARSW(I)=IBARS2(I)
 3120       CONTINUE
            IERASW='OFF'
            IF(ISPMDI.EQ.'LINE'.OR.ISPMDI.EQ.'BLAN')GOTO4000
            IX1TSW='OFF'
            IX1ZSW='OFF'
            IX2TSW='OFF'
            IX2ZSW='OFF'
            IY1TSW='OFF'
            IY1ZSW='OFF'
            IY2TSW='OFF'
            IY2ZSW='OFF'
C
            IF(ISPMDI.EQ.'BOXP'.AND.ISPMTA.EQ.'ON')THEN
              IMPCO=IMPCO-1
              DO3130I=1,100
                ICHAPA(I)='BLAN'
                ILINPA(I)='BLAN'
                IBARSW(I)='OFF'
                ISPISW(I)='OFF'
 3130         CONTINUE
              ICHAPA(1)='X'
              ICHAPA(4)='X'
              ICHAPA(7)='X'
              ICHAPA(21)='CIRC'
              ICHAPA(22)='CIRC'
              ICHAPA(23)='CIRC'
              ICHAPA(24)='CIRC'
              ILINPA(8)='SOLI'
              ILINPA(13)='SOLI'
              ILINPA(14)='SOLI'
              ILINPA(15)='SOLI'
              ILINPA(16)='SOLI'
              ILINPA(20)='SOLI'
              IFENSW='ON'
              GY1MIN=FY1MNZ
              GY1MAX=FY1MXZ
              GY2MIN=GY1MIN
              GY2MAX=GY1MAX
              IY1MIN='FIXE'
              IY1MAX='FIXE'
              IY2MIN='FIXE'
              IY2MAX='FIXE'
              IX1MIN='FLOA'
              IX1MAX='FLOA'
              IX2MIN='FLOA'
              IX2MAX='FLOA'
              IX1TSW='OFF'
              IX1ZSW='OFF'
              IX2TSW='OFF'
              IX2ZSW='OFF'
              IY1TSW='OFF'
              IY1ZSW='OFF'
              IY2TSW='OFF'
              IY2ZSW='OFF'
              ICOM='BOX '
              ICOM2='    '
              IHARG(1)='PLOT'
              IHARG2(1)='    '
              IHARG(2)=IVARN1(IROW)
              IHARG2(2)=IVARN2(IROW)
              IHARG(3)=IVARN1(NUMVAR+1)
              IHARG2(3)=IVARN2(NUMVAR+1)
              CALL MAINGR(ANOPL1,ANOPL2,NPLOTV,NPLOTP,NS,ICASPL,
     1                   MAXNPP,ISEED,IBOOSS,
     1                   IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                   IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                   BARHEF,BARWEF,
     1                   IRHSTG,IHSTCW,IHSTEB,IHSTOU,IASHWT,
     1                   IHSTMC,IHSTOP,
     1                   ICAPSW,IFORSW,
     1                   IGUIFL,IERRFA,IFRALI,
     1                   IAND1,IAND2,ICONT,NUMHPP,NUMVPP,
CCCCC1                   TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,MAXNXT,
     1                   MAXNXT,
     1                   ISUBRO,IFOUND,IERROR)
              ISHIFT=1
              CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                    IBUGG2,IERROR)
              ICOM='PLOT'
              ICOM2='    '
              IHARG(1)=IVARN1(IROW)
              IHARG2(1)=IVARN2(IROW)
              IHARG(2)=IVARN1(ICOL)
              IHARG2(2)=IVARN2(ICOL)
              IHARG(3)=IVARN1(NUMVAR+1)
              IHARG2(3)=IVARN2(NUMVAR+1)
              GOTO4089
            ELSEIF(ISPMDI.EQ.'HIST')THEN
              IMPCO=IMPCO-1
              ICOM='HIST'
              ICOM2='    '
              ISHIFT=1
              IF(ISPMTA.EQ.'ON')ISHIFT=2
              CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                    IBUGG2,IERROR)
              IHARG(1)=IVARN1(IROW)
              IHARG2(1)=IVARN2(IROW)
              CALL MAINGR(ANOPL1,ANOPL2,NPLOTV,NPLOTP,NS,ICASPL,
     1                   MAXNPP,ISEED,IBOOSS,
     1                   IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                   IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                   BARHEF,BARWEF,
     1                   IRHSTG,IHSTCW,IHSTEB,IHSTOU,IASHWT,
     1                   IHSTMC,IHSTOP,
     1                   ICAPSW,IFORSW,
     1                   IGUIFL,IERRFA,IFRALI,
     1                   IAND1,IAND2,ICONT,NUMHPP,NUMVPP,
CCCCC1                   TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,MAXNXT,
     1                   MAXNXT,
     1                   ISUBRO,IFOUND,IERROR)
              ISHIFT=1
              IF(ISPMTA.EQ.'ON')ISHIFT=2
              CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                    IBUGG2,IERROR)
              ICOM='PLOT'
              ICOM2='    '
              IHARG(1)=IVARN1(ICOL)
              IHARG2(1)=IVARN2(ICOL)
              IHARG(2)=IVARN1(ICOL)
              IHARG2(2)=IVARN2(ICOL)
              IF(ISPMTA.EQ.'ON')THEN
                IHARG(3)=IVARN1(NUMVAR+1)
                IHARG2(3)=IVARN2(NUMVAR+1)
              ENDIF
              IY1MIN='FLOA'
              IY1MAX='FLOA'
              IY2MIN='FLOA'
              IY2MAX='FLOA'
              IX1MIN='FLOA'
              IX1MAX='FLOA'
              IX2MIN='FLOA'
              IX2MAX='FLOA'
              GOTO4089
            ENDIF
            GOTO4000
          ENDIF 
C
          CALL MAINGR(ANOPL1,ANOPL2,NPLOTV,NPLOTP,NS,ICASPL,
     1                   MAXNPP,ISEED,IBOOSS,
     1                   IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                   IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                   BARHEF,BARWEF,
     1                   IRHSTG,IHSTCW,IHSTEB,IHSTOU,IASHWT,
     1                   IHSTMC,IHSTOP,
     1                   ICAPSW,IFORSW,
     1                   IGUIFL,IERRFA,IFRALI,
     1                   IAND1,IAND2,ICONT,NUMHPP,NUMVPP,
CCCCC1                   TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,MAXNXT,
     1                   MAXNXT,
     1                   ISUBRO,IFOUND,IERROR)
          IF(IEMPTY.EQ.'NO')THEN
            IF(
     1       (IROW.NE.ICOL.AND.(ISPX2L.EQ.'CORR'.OR.ISPX2L.EQ.'PCOR'))
     1       .OR.ISPX2L.EQ.'PACC'.OR.
     1       ISPX2L.EQ.'NACC'.OR.ISPX2L.EQ.'ATP '.OR.
     1       ISPX2L.EQ.'AT  ')
     1       CALL DPSPM3(ICASPL,IOUNI5,
     1                   IROW,ICOL,
     1                   PX2LD2,NPLOTP,
     1                   IFORSW,
     1                   ISPX2L,ISPX2P,ISPX2S,
     1                   IHRIGH,IHRIG2,IHWUSE,
     1                   ISUBN1,ISUBN2,MESSAG,
     1                   IBUGG2,ISUBRO,IERROR)
          ENDIF
C
          IF(IERROR.EQ.'YES')THEN
            IMPCO=IMPCO+1
            GOTO4000
          ENDIF
C
 4089     CONTINUE
          ICONT=IDCONT(1)
          IPOWE=IDPOWE(1)
          NUMHPP=IDNHPP(1)
          IMPARG=2
          CALL DPGRAP(Y,X,X3D,D,N,NPLOTP,ICASPL,ICONT,IPOWE,NUMHPP,
     1                XMATN,YMATN,XMITN,YMITN,
     1                ISQUAR,
     1                IVGMSW,IHGMSW,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,
     1                IVSTAR,IVSTOP,IFUNC,NUMCHF,IREPCH,
     1                YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                IMPSW,IMPNR,IMPNC,IMPCO,IMPCO9,
     1                IMPARG,
     1                PMXMIN,PMXMAX,PMYMIN,PMYMAX,
     1                MAXCOL,
     1                DSIZE,DSYMB,DCOLOR,DFILL,
     1                ICAPSW,
     1                IBUGUG,IBUGU2,IBUGU3,IBUGU4,ISUBRO,
     1                IERROR)
C
            ICNTPL=ICNTPL+1
            IF(N.GT.0)THEN
              DO33115II=1,N
                WRITE(IOUNI5,3118)ICNTPL,Y(II),X(II),D(II)
33115         CONTINUE
            ENDIF
C
          IF(IERROR.EQ.'NO')IAND1=IAND2
          IF(ISPMFI.EQ.'NONE')GOTO4090
          IF(IEMPTY.EQ.'YES')GOTO4090
          IF(IROW.EQ.ICOL)GOTO4090
          IMPCO=IMPCO-1
          IF(IMPCO.LE.1)IERASW='OFF'
          IF(IERROR.EQ.'YES')GOTO4000
C
          CALL DPSPM2(ICASPL,IVARN1,IVARN2,ICOLL,NUMVAR,NPLOTP,
     1                IROW,ICOL,
     1                TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,MAXNXT,
     1                ALOWFR,ALOWDG,
     1                IANGLU,MAXNPP,IAND1,IAND2,
     1                ISPMFI,ISPMTA,
     1                XMATN,YMATN,XMITN,YMITN,
     1                ISQUAR,
     1                IVGMSW,IHGMSW,
     1                IMPSW,IMPNR,IMPNC,IMPCO,IMPCO9,
     1                IREPCH,
     1                PMXMIN,PMXMAX,PMYMIN,PMYMAX,
     1                ICNTPL,IOUNI5,
     1                IBUGG2,IBUGG3,IBUGCO,IBUGEV,IBUGQ,
     1                IBUGUG,IBUGU2,IBUGU3,IBUGU4,
     1                ISUBRO,IFOUND,IERROR)
C
 4090     CONTINUE
          PX1LDS=PX1LD2
          GX1MIN=GX1MNS
          GX1MAX=GX1MXS
          GX2MIN=GX2MNS
          GX2MAX=GX2MXS
          GY1MIN=GY1MNS
          GY1MAX=GY1MXS
          GY2MIN=GY2MNS
          GY2MAX=GY2MXS
          IX1MIN=IX1MNS
          IX1MAX=IX1MXS
          IX2MIN=IX2MNS
          IX2MAX=IX2MXS
          IY1MIN=IY1MNS
          IY1MAX=IY1MXS
          IY2MIN=IY2MNS
          IY2MAX=IY2MXS
          PX1ZDS=PX1ZD2
          PX2ZDS=PX2ZD2
          PY1ZDS=PY1ZD2
          PY2ZDS=PY2ZD2
          IF(IEMPTY.EQ.'YES')THEN
            DO4907I=1,MAXSUB
              ISUBSW(I)=ISU2SW(I)
 4907       CONTINUE
          ENDIF
          DO4098I=1,100
            ICHAPA(I)=ICHAP2(I)
            ILINPA(I)=ILINP2(I)
            ISPISW(I)=ISPIS2(I)
            IBARSW(I)=IBARS2(I)
 4098     CONTINUE
          ISHIFT=NARGT-NUMARG
          IF(ISHIFT.GT.0)THEN
            CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                IBUGG2,IERROR)
          ELSEIF(ISHIFT.LT.0)THEN
            ISHIFT=-ISHIFT
            CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                IBUGG2,IERROR)
          ENDIF
          ICOM='PLOT'
          ICOM2='    '
          IHARG(1)=IVARN1(ICOL)
          IHARG2(1)=IVARN2(ICOL)
          IHARG(2)=IVARN1(ICOL)
          IHARG2(2)=IVARN2(ICOL)
          IF(ISPMTA.EQ.'ON')THEN
            IHARG(3)=IVARN1(NUMVAR+1)
            IHARG2(3)=IVARN2(NUMVAR+1)
          ENDIF
C
 4000   CONTINUE
 3000 CONTINUE
      GOTO8000
C
C               *********************************************
C               **   BIHISTOGRAM           CASE            **
C               **   QUANTILE-QUANTILE     CASE            **
C               **   CROSS-CORRELATION     CASE            **
C               **   CROSS-SPECTRUM        CASE            **
C               **   CROSS-LAG             CASE            **
C               **   FOLLOWING ALL USE A SIMILAR STRUCTURE **
C               *********************************************
 5000 CONTINUE
      NARGT=NUMARG
      DO5100IROW=1,IMPNR
        DO5200ITEMP1=1,IMPNC
C
          ICOL=ITEMP1
          IEMPTY='NO'
          IF(ISPMLA.EQ.'BOX')THEN
            ICOL=ITEMP1-1
            IF(ICOL.EQ.0)IEMPTY='YES'
            IF(IROW.EQ.IMPNR)IEMPTY='YES'
          ENDIF
C
          IF(IROW.GT.ICOL.AND.ISPMLD.EQ.'OFF')THEN
            IMPCO=IMPCO+1
            GOTO5200
          ENDIF
C
          IF(IROW.LE.NUMVAR)THEN
            IHARG(1)=IVARN1(IROW)
            IHARG2(1)=IVARN2(IROW)
            IDX=IROW
          ELSE
            IHARG(1)=IVARN1(NUMVAR)
            IHARG2(1)=IVARN2(NUMVAR)
            IDX=NUMVAR
          ENDIF
          IF(ICOL.EQ.0)THEN
            IHARG(2)=IVARN1(1)
            IHARG2(2)=IVARN2(1)
            IDY=1
          ELSE
            IHARG(2)=IVARN1(ICOL)
            IHARG2(2)=IVARN2(ICOL)
            IDY=ICOL
          ENDIF
C
          IF(IEMPTY.EQ.'YES')THEN
            DO5104I=1,MAXSUB
              ISU2SW(I)=ISUBSW(I)
              ISUBSW(I)='OFF'
 5104       CONTINUE
          ENDIF
          IOPTN=3
          CALL DPSPM4(ICASPL,IOPTN,IDX,IDY,
     1                ISUBNU,ISUBSW,
     1                ASUBXL,ASUBXU,ASUBYL,ASUBYU,
     1                ISUBN9,ISUBSZ,
     1                ASBXL2,ASBXU2,ASBYL2,ASBYU2,
     1                PSPLSL,PSPLSU,PSPLSL,PSPLSU,
     1                IBUGG2,ISUBRO,IERROR)
C
          ICASPL='SPMA'
          CALL DPSPM1(ICASPL,IVARN1,IVARN2,ICOLL,
     1                IMPNR,IMPNC,IROW,ICOL,IROW,ICOL,IPLOT,
     1                NPLOTS,NUMVAR,
     1                ICHAP2,ILINP2,
     1                GY1MNS,GY1MXS,GY2MNS,GY2MXS,
     1                GX1MNS,GX1MXS,GX2MNS,GX2MXS,
     1                IY1MNS,IY1MXS,IY2MNS,IY2MXS,
     1                IX1MNS,IX1MXS,IX2MNS,IX2MXS,
     1                IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                PX1LD2,PX2LD2,
     1                IY1LJ2,IY1LD2,PY1LD2,PY1LA2,
     1                IX1LT2,IX2LT2,IY1LT2,IY2LT2,
     1                NCX1L2,NCX2L2,NCY1L2,NCY2L2,
     1                PSPLLL,PSPLUL,PSPLLL,PSPLUL,ICOL,
     1                ISPMLA,ISPMLD,IPLOTT,ISPMFR,ISPMXA,ISPMYA,
     1                ISPMDI,ISPX1L,
     1                ISPMXT,ISPMXL,ISPMYT,ISPMYL,
     1                ISPMTD,PSPMTD,IVNMEX,
     1                IBUGG2,ISUBRO)
C
          IF(IEMPTY.EQ.'YES')THEN
            DO5106I=1,100
              ICHAPA(I)='BLAN'
              ILINPA(I)='BLAN'
              ISPISW(I)='OFF'
              IBARSW(I)='OFF'
 5106       CONTINUE
          ENDIF
          IF(IROW.EQ.ICOL)THEN
            ISHIFT=1
            CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                  IBUGG2,IERROR)
            ISHIFT=NCCOM2
            IF(NCCOM2.GT.0)
     1      CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                  IBUGG2,IERROR)
            ICOM=ICBT
            ICOM2=IC2BT
            IF(NCCOM2.GT.0)THEN
              DO5120II=1,NCCOM2
                IHARG(II)=IHBT(II)
                IHARG2(II)=IH2BT(II)
 5120         CONTINUE
            ENDIF
          ELSE
            ISHIFT=NCCOMM
            IF(NCCOMM.GT.0)
     1      CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                  IBUGG2,IERROR)
            ICOM=ICT
            ICOM2=IC2T
            IF(NCCOMM.GT.0)THEN
              DO5130II=1,NCCOMM
                IHARG(II)=IHT(II)
                IHARG2(II)=IH2T(II)
 5130         CONTINUE
            ENDIF
          ENDIF
          CALL MAINGR(ANOPL1,ANOPL2,NPLOTV,NPLOTP,NS,ICASPL,
     1                MAXNPP,ISEED,IBOOSS,
     1                IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                BARHEF,BARWEF,
     1                IRHSTG,IHSTCW,IHSTEB,IHSTOU,IASHWT,
     1                IHSTMC,IHSTOP,
     1                ICAPSW,IFORSW,
     1                IGUIFL,IERRFA,IFRALI,
     1                IAND1,IAND2,ICONT,NUMHPP,NUMVPP,
CCCCC1                TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,MAXNXT,
     1                MAXNXT,
     1                ISUBRO,IFOUND,IERROR)
          IF(IEMPTY.EQ.'NO')THEN
            IF(
     1         ISPX2L.EQ.'PACC'.OR.
     1         ISPX2L.EQ.'NACC'.OR.ISPX2L.EQ.'ATP '.OR.
     1         ISPX2L.EQ.'AT  ')
     1         CALL DPSPM3(ICASPL,IOUNI5,
     1                     IROW,ICOL,
     1                     PX2LD2,NPLOTP,
     1                     IFORSW,
     1                     ISPX2L,ISPX2P,ISPX2S,
     1                     IHRIGH,IHRIG2,IHWUSE,
     1                     ISUBN1,ISUBN2,MESSAG,
     1                     IBUGG2,ISUBRO,IERROR)
          ENDIF
C
          ISHIFT=NARGT-NUMARG
          IF(ISHIFT.GT.0)THEN
            CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                IBUGG2,IERROR)
          ELSEIF(ISHIFT.LT.0)THEN
            ISHIFT=-ISHIFT
            CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                IBUGG2,IERROR)
          ENDIF
          ICOM='PLOT'
          ICOM2='    '
          IHARG(1)=IVARN1(ICOL)
          IHARG2(1)=IVARN2(ICOL)
          IHARG(2)=IVARN1(ICOL)
          IHARG2(2)=IVARN2(ICOL)
C
C               **************************************************
C               **   STEP 25--                                  **
C               **   PLOT THE CURRENT PLOT                      **
C               **************************************************
          ICONT=IDCONT(1)
          IPOWE=IDPOWE(1)
          NUMHPP=IDNHPP(1)
          IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'SPMA')THEN
            WRITE(ICOUT,5107)IMANUF,NUMDEV,IDMANU(1)
 5107       FORMAT('IMANUF,NUMDEV,IDMANU(1) = ',A4,I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IMPARG=2
          CALL DPGRAP(Y,X,X3D,D,N,NPLOTP,ICASPL,ICONT,IPOWE,NUMHPP,
     1                XMATN,YMATN,XMITN,YMITN,
     1                ISQUAR,
     1                IVGMSW,IHGMSW,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,
     1                IVSTAR,IVSTOP,IFUNC,NUMCHF,IREPCH,
     1                YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                IMPSW,IMPNR,IMPNC,IMPCO,IMPCO9,
     1                IMPARG,
     1                PMXMIN,PMXMAX,PMYMIN,PMYMAX,
     1                MAXCOL,
     1                DSIZE,DSYMB,DCOLOR,DFILL,
     1                ICAPSW,
     1                IBUGUG,IBUGU2,IBUGU3,IBUGU4,ISUBRO,
     1                IERROR)
C
            ICNTPL=ICNTPL+1
            IF(N.GT.0)THEN
              DO5217II=1,N
                WRITE(IOUNI5,3118)ICNTPL,Y(II),X(II),D(II)
 5217         CONTINUE
            ENDIF
C
          IF(IERROR.EQ.'NO')IAND1=IAND2
          IF(IEMPTY.EQ.'YES')THEN
            DO5207I=1,MAXSUB
              ISUBSW(I)=ISU2SW(I)
 5207       CONTINUE
          ENDIF
          PX1LDS=PX1LD2
          GX1MIN=GX1MNS
          GX1MAX=GX1MXS
          GX2MIN=GX2MNS
          GX2MAX=GX2MXS
          GY1MIN=GY1MNS
          GY1MAX=GY1MXS
          GY2MIN=GY2MNS
          GY2MAX=GY2MXS
          IX1MIN=IX1MNS
          IX1MAX=IX1MXS
          IX2MIN=IX2MNS
          IX2MAX=IX2MXS
          IY1MIN=IY1MNS
          IY1MAX=IY1MXS
          IY2MIN=IY2MNS
          IY2MAX=IY2MXS
          PX1ZDS=PX1ZD2
          PX2ZDS=PX2ZD2
          PY1ZDS=PY1ZD2
          PY2ZDS=PY2ZD2
C
 5200   CONTINUE
 5100 CONTINUE
      GOTO8000
C
C               *********************************************
C               **   CROSS TABULATE <STAT> PLOTS  CASE     **
C               **   DEX <STAT> PLOTS             CASE     **
C               **   DEX <STAT> INTERACTION PLOTS CASE     **
C               **   3D-PLOT                PLOTS CASE     **
C               **   DEX CONTOUR            PLOTS CASE     **
C               **   ALL OF THESE USE SIMILAR STRUCTURE    **
C               *********************************************
C
 6599 CONTINUE
C
      IF(IRESP.EQ.1)THEN
        ISHIFT=1
        CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        IHARG(1)=IVARN1(1)
        IHARG2(1)=IVARN2(1)
        IMPNR=IMPNR-1
        IMPNC=IMPNC-1
      ENDIF
C
      IF(ISPMPT.EQ.'DEXC')THEN
        GY1MIN=-2.0
        GY1MAX=2.0
        GY2MIN=-2.0
        GY2MAX=2.0
        IY1MIN='FIXE'
        IY1MAX='FIXE'
        IY2MIN='FIXE'
        IY2MAX='FIXE'
        GX1MIN=-2.0
        GX1MAX=2.0
        GX2MIN=-2.0
        GX2MAX=2.0
        IX1MIN='FIXE'
        IX1MAX='FIXE'
        IX2MIN='FIXE'
        IX2MAX='FIXE'
        ISHIFT=1
        CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        IHARG(4)=IVARN1(NUMVAR+1)
        IHARG2(4)=IVARN2(NUMVAR+1)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
      NARGT=NUMARG
C
      NPLOTS=IMPNR
      NPLOT2=IMPNR*IMPNC
      DO6600IROW=1,NPLOTS
        DO6700ITEMP1=1,NPLOTS
C
          ICOL=ITEMP1
          IFACT=ICOL+IRESP
          IEMPTY='NO'
          IF(ISPMLA.EQ.'BOX')THEN
            ICOL=ITEMP1-1
            IF(ICOL.EQ.0)IEMPTY='YES'
            IF(IROW.EQ.IMPNR)IEMPTY='YES'
          ENDIF
C
          IF(IROW.EQ.ICOL.AND.ISPMPT.NE.'DEXC')THEN
            ISHIFT=1
            CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                  IBUGG2,IERROR)
          ENDIF
C
          IFRST=0
          IF(IRESP.EQ.1)THEN
            IHARG(1)=IVARN1(1)
            IHARG2(1)=IVARN2(1)
            IFRST=1
          ENDIF
C
          IRES=IROW+IRESP
          IFRST=IFRST+1
          IF(IRES.LE.NUMVAR)THEN
            IHARG(IFRST)=IVARN1(IRES)
            IHARG2(IFRST)=IVARN2(IRES)
          ELSE
            IHARG(IFRST)=IVARN1(NUMVAR)
            IHARG2(IFRST)=IVARN2(NUMVAR)
          ENDIF
C
          IF(IROW.GT.ICOL.AND.ISPMLD.EQ.'OFF')THEN
            IMPCO=IMPCO+1
            GOTO6700
          ENDIF
C
          IF(IROW.NE.ICOL.OR.ISPMPT.EQ.'DEXC')THEN
            IFRST=IFRST+1
            IF(ICOL.EQ.0)THEN
              IHARG(IFRST)=IVARN1(2)
              IHARG2(IFRST)=IVARN2(2)
            ELSE
              IHARG(IFRST)=IVARN1(IFACT)
              IHARG2(IFRST)=IVARN2(IFACT)
            ENDIF
          ENDIF
C
          IF(ISPMPT.EQ.'DEXC')THEN
            IFRST=IFRST+1
            IHARG(IFRST)=IVARN1(NUMVAR+1)
            IHARG2(IFRST)=IVARN2(NUMVAR+1)
          ENDIF
C
          IF(ISPMPT.EQ.'DEXC'.AND.IROW.EQ.ICOL)IEMPTY='YES'
          IF(IEMPTY.EQ.'YES')THEN
            DO6604I=1,MAXSUB
              ISU2SW(I)=ISUBSW(I)
              ISUBSW(I)='OFF'
 6604       CONTINUE
          ENDIF
          IOPTN=3
          IDY=1
          IDX=2
          CALL DPSPM4(ICASPL,IOPTN,IDX,IDY,
     1                ISUBNU,ISUBSW,
     1                ASUBXL,ASUBXU,ASUBYL,ASUBYU,
     1                ISUBN9,ISUBSZ,
     1                ASBXL2,ASBXU2,ASBYL2,ASBYU2,
     1                PSPLSL,PSPLSU,PSPLSL,PSPLSU,
     1                IBUGG2,ISUBRO,IERROR)
C
C         2015/03: OPTION FOR SHADING DIAGONAL ELEMENTS OF SCATTER
C                  PLOT MATRIX.
C
          ISUBZZ=ISUBSW(1)
          IREFZZ=IREFSW(1)
          IF(ISPMDS.EQ.'ON')THEN
            IF(IROW.NE.ITEMP1)THEN
              ISUBSW(1)='OFF'
              IREFSW(1)='OFF'
            ELSE
              ISUBSW(1)='ON'
              IREFSW(1)='ON'
            ENDIF
          ENDIF
C
          CALL DPSPM1(ICASPL,IVARN1,IVARN2,ICOLL,
     1                IMPNR,IMPNC,IROW,ICOL,IRES,IFACT,IPLOT,
     1                NPLOT2,NUMVAR,
     1                ICHAP2,ILINP2,
     1                GY1MNS,GY1MXS,GY2MNS,GY2MXS,
     1                GX1MNS,GX1MXS,GX2MNS,GX2MXS,
     1                IY1MNS,IY1MXS,IY2MNS,IY2MXS,
     1                IX1MNS,IX1MXS,IX2MNS,IX2MXS,
     1                IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                PX1LD2,PX2LD2,
     1                IY1LJ2,IY1LD2,PY1LD2,PY1LA2,
     1                IX1LT2,IX2LT2,IY1LT2,IY2LT2,
     1                NCX1L2,NCX2L2,NCY1L2,NCY2L2,
     1                PSPLLL,PSPLUL,PSPLLL,PSPLUL,ICOL,
     1                ISPMLA,ISPMLD,IPLOTT,ISPMFR,ISPMXA,ISPMYA,
     1                ISPMDI,ISPX1L,
     1                ISPMXT,ISPMXL,ISPMYT,ISPMYL,
     1                ISPMTD,PSPMTD,IVNMEX,
     1                IBUGG2,ISUBRO)
C
          IF(IEMPTY.EQ.'YES')THEN
            DO6606I=1,100
              ICHAPA(I)='BLAN'
              ILINPA(I)='BLAN'
              ISPISW(I)='OFF'
              IBARSW(I)='OFF'
 6606        CONTINUE
          ENDIF
          IF(IROW.EQ.ICOL.AND.ISPMPT.EQ.'CROS'.AND.ISPMST.EQ.'    ')
     1    THEN
            ILINPA(1)='BLAN'
            ICHAPA(1)='BLAN'
            ISPISW(1)='OFF'
            IBARSW(1)='OFF'
          ENDIF
          IF(IROW.EQ.ICOL)THEN
            ISHIFT=NCCOM2
            IF(NCCOM2.GT.0)
     1      CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                  IBUGG2,IERROR)
            ICOM=ICBT
            ICOM2=IC2BT
            IF(NCCOM2.GT.0)THEN
              DO6620II=1,NCCOM2
                IHARG(II)=IHBT(II)
                IHARG2(II)=IH2BT(II)
 6620         CONTINUE
            ENDIF
          ELSE
            ISHIFT=NCCOMM
            IF(NCCOMM.GT.0)
     1      CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                  IBUGG2,IERROR)
            ICOM=ICT
            ICOM2=IC2T
            IF(NCCOMM.GT.0)THEN
              DO6630II=1,NCCOMM
                IHARG(II)=IHT(II)
                IHARG2(II)=IH2T(II)
 6630         CONTINUE
            ENDIF
          ENDIF
          IF(IEMPTY.EQ.'YES'.AND.ISPMPT.EQ.'DEXC')THEN
            ISHIFT=NUMARG-2
            IF(ISHIFT.GT.0)THEN
              CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                    IBUGG2,IERROR)
            ENDIF
            ICOM='PLOT'
            ICOM2='    '
            IHARG(1)=IVARN1(IRES)
            IHARG2(1)=IVARN2(IRES)
            IHARG(2)=IVARN1(IFACT)
            IHARG2(2)=IVARN2(IFACT)
          ENDIF
          CALL MAINGR(ANOPL1,ANOPL2,NPLOTV,NPLOTP,NS,ICASPL,
     1                MAXNPP,ISEED,IBOOSS,
     1                IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                BARHEF,BARWEF,
     1                IRHSTG,IHSTCW,IHSTEB,IHSTOU,IASHWT,
     1                IHSTMC,IHSTOP,
     1                ICAPSW,IFORSW,
     1                IGUIFL,IERRFA,IFRALI,
     1                IAND1,IAND2,ICONT,NUMHPP,NUMVPP,
CCCCC1                TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,MAXNXT,
     1                MAXNXT,
     1                ISUBRO,IFOUND,IERROR)
          IF(IEMPTY.EQ.'NO')THEN
            CALL DPSPM3(ICASPL,IOUNI5,
     1                  IROW,ICOL,
     1                  PX2LD2,NPLOTP,
     1                  IFORSW,
     1                  ISPX2L,ISPX2P,ISPX2S,
     1                  IHRIGH,IHRIG2,IHWUSE,
     1                  ISUBN1,ISUBN2,MESSAG,
     1                  IBUGG2,ISUBRO,IERROR)
          ENDIF
C
          ISHIFT=NARGT-NUMARG
          IF(ISHIFT.GT.0)THEN
            CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                IBUGG2,IERROR)
          ELSEIF(ISHIFT.LT.0)THEN
            ISHIFT=-ISHIFT
            CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1                IBUGG2,IERROR)
          ENDIF
          IF(IERROR.EQ.'YES')GOTO6699
          ICOM='PLOT'
          ICOM2='    '
          IF(IRESP.EQ.0)THEN
            IHARG(1)=IVARN1(ICOL)
            IHARG2(1)=IVARN2(ICOL)
            IHARG(2)=IVARN1(ICOL)
            IHARG2(2)=IVARN2(ICOL)
          ELSE
            IHARG(1)=IVARN1(1)
            IHARG2(1)=IVARN2(1)
            IHARG(2)=IVARN1(ICOL)
            IHARG2(2)=IVARN2(ICOL)
            IHARG(3)=IVARN1(ICOL)
            IHARG2(3)=IVARN2(ICOL)
          ENDIF
          IF(ISPMPT.EQ.'DEXC')THEN
            IHARG(4)=IVARN1(NUMVAR+1)
            IHARG2(4)=IVARN2(NUMVAR+1)
          ENDIF
          GOTO6690
C
 6690     CONTINUE
          ICONT=IDCONT(1)
          IPOWE=IDPOWE(1)
          NUMHPP=IDNHPP(1)
          IMPARG=2
          CALL DPGRAP(Y,X,X3D,D,N,NPLOTP,ICASPL,ICONT,IPOWE,NUMHPP,
     1                XMATN,YMATN,XMITN,YMITN,
     1                ISQUAR,
     1                IVGMSW,IHGMSW,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,
     1                IVSTAR,IVSTOP,IFUNC,NUMCHF,IREPCH,
     1                YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                IMPSW,IMPNR,IMPNC,IMPCO,IMPCO9,
     1                IMPARG,
     1                PMXMIN,PMXMAX,PMYMIN,PMYMAX,
     1                MAXCOL,
     1                DSIZE,DSYMB,DCOLOR,DFILL,
     1                ICAPSW,
     1                IBUGUG,IBUGU2,IBUGU3,IBUGU4,ISUBRO,
     1                IERROR)
C
          ICNTPL=ICNTPL+1
          IF(N.GT.0)THEN
            DO6671II=1,N
              WRITE(IOUNI5,3118)ICNTPL,Y(II),X(II),D(II)
 6671       CONTINUE
          ENDIF
C
 6699     CONTINUE
          IF(IERROR.EQ.'NO')IAND1=IAND2
          IF(IEMPTY.EQ.'YES')THEN
            DO6207I=1,MAXSUB
              ISUBSW(I)=ISU2SW(I)
 6207       CONTINUE
          ENDIF
          PX1LDS=PX1LD2
          GX1MIN=GX1MNS
          GX1MAX=GX1MXS
          GX2MIN=GX2MNS
          GX2MAX=GX2MXS
          GY1MIN=GY1MNS
          GY1MAX=GY1MXS
          GY2MIN=GY2MNS
          GY2MAX=GY2MXS
          IX1MIN=IX1MNS
          IX1MAX=IX1MXS
          IX2MIN=IX2MNS
          IX2MAX=IX2MXS
          IY1MIN=IY1MNS
          IY1MAX=IY1MXS
          IY2MIN=IY2MNS
          IY2MAX=IY2MXS
          PX1ZDS=PX1ZD2
          PX2ZDS=PX2ZD2
          PY1ZDS=PY1ZD2
          PY2ZDS=PY2ZD2
C
          ISUBSW(1)=ISUBZZ
          IREFSW(1)=IREFZZ
C
 6700   CONTINUE
 6600 CONTINUE
      GOTO8000
C
C               **************************************************
C               **   STEP 25--                                  **
C               **   PLOT THE CURRENT PLOT                      **
C               **************************************************
          ICONT=IDCONT(1)
          IPOWE=IDPOWE(1)
          NUMHPP=IDNHPP(1)
          IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'SPMA')THEN
            WRITE(ICOUT,7907)IMANUF,NUMDEV,IDMANU(1)
 7907       FORMAT('IMANUF,NUMDEV,IDMANU(1) = ',A4,I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IMPARG=2
          CALL DPGRAP(Y,X,X3D,D,N,NPLOTP,ICASPL,ICONT,IPOWE,NUMHPP,
     1                XMATN,YMATN,XMITN,YMITN,
     1                ISQUAR,
     1                IVGMSW,IHGMSW,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,
     1                IVSTAR,IVSTOP,IFUNC,NUMCHF,IREPCH,
     1                YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                IMPSW,IMPNR,IMPNC,IMPCO,IMPCO9,
     1                IMPARG,
     1                PMXMIN,PMXMAX,PMYMIN,PMYMAX,
     1                MAXCOL,
     1                DSIZE,DSYMB,DCOLOR,DFILL,
     1                ICAPSW,
     1                IBUGUG,IBUGU2,IBUGU3,IBUGU4,ISUBRO,
     1                IERROR)
C
          ICNTPL=ICNTPL+1
          IF(N.GT.0)THEN
            DO7917II=1,N
              WRITE(IOUNI5,3118)ICNTPL,Y(II),X(II),D(II)
 7917       CONTINUE
          ENDIF
C
          IF(IERROR.EQ.'NO')IAND1=IAND2
          IF(IERROR.EQ.'YES')GOTO7900
          PX1LDS=PX1LD2
          GX1MIN=GX1MNS
          GX1MAX=GX1MXS
          GX2MIN=GX2MNS
          GX2MAX=GX2MXS
          GY1MIN=GY1MNS
          GY1MAX=GY1MXS
          GY2MIN=GY2MNS
          GY2MAX=GY2MXS
          IX1MIN=IX1MNS
          IX1MAX=IX1MXS
          IX2MIN=IX2MNS
          IX2MAX=IX2MXS
          IY1MIN=IY1MNS
          IY1MAX=IY1MXS
          IY2MIN=IY2MNS
          IY2MAX=IY2MXS
          PX1ZDS=PX1ZD2
          PX2ZDS=PX2ZD2
          PY1ZDS=PY1ZD2
          PY2ZDS=PY2ZD2
C
 7900   CONTINUE
        ISPMFR=ISPMFZ
C
C               **************************************************
C               **   STEP 28--                                  **
C               **   REINSTATE INITIAL SETTINGS                 **
C               **************************************************
C
 8000 CONTINUE
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'4PLO')THEN
        ISTEPN='28'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,8807)IMANUF,NUMDEV,IDMANU(1)
 8807   FORMAT('IMANUF,NUMDEV,IDMANU(1) = ',A4,I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFLAG=2
      CALL DPSPM5(IFLAG,IMPSW,IMPCO,IMPNR,IMPNC,
     1            IBUGG2,ISUBRO,IFOUND,IERROR)
      ISPMTA=ISPMTZ
      ISPMFR=ISPMFZ
      ISPMPT=ISPMPZ
      ISPMLD=ISPMLZ
      ISPMLA=ISPML2
      ISPMXA=ISPMXZ
      ISPMYA=ISPMYZ
      ISPMDI=ISPMDZ
      ISPMST=ISPMZT
      ISPMS2=ISPMZ2
      ISPMS3=ISPMZ3
      ISPMS4=ISPMZ4
C
      IOPTN=2
      IDX=0
      IDY=0
      CALL DPSPM4(ICASPL,IOPTN,IDX,IDY,
     1            ISUBNU,
     1            ISUBSW,
     1            ASUBXL,ASUBXU,ASUBYL,ASUBYU,
     1            ISUBN9,
     1            ISUBSZ,
     1            ASBXL2,ASBXU2,ASBYL2,ASBYU2,
     1            PSPLSL,PSPLSU,PSPLSL,PSPLSU,
     1            IBUGG2,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IFEEDB=IFEED9
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLG11,IFLG21,IFLG31,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGG2,ISUBRO,IERROR)
      IFITAU=IFITA2
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'SPMA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPMA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',3I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPM1(ICASPL,IVARN1,IVARN2,ICOLL,
     1                  IMPNR,IMPNC,IROW,ICOL,IRES,
     1                  IFACT,IPLOT,NPLOTS,NUMVAR,
     1                  ICHAP2,ILINP2,
     1                  GY1MNS,GY1MXS,GY2MNS,GY2MXS,
     1                  GX1MNS,GX1MXS,GX2MNS,GX2MXS,
     1                  IY1MNS,IY1MXS,IY2MNS,IY2MXS,
     1                  IX1MNS,IX1MXS,IX2MNS,IX2MXS,
     1                  IX1TSV,IX2TSV,IY1TSV,IY2TSV,
     1                  IX1ZSV,IX2ZSV,IY1ZSV,IY2ZSV,
     1                  PX1LD2,PX2LD2,
     1                  IY1LJ2,IY1LD2,PY1LD2,PY1LA2,
     1                  IX1LT2,IX2LT2,IY1LT2,IY2LT2,
     1                  NCX1L2,NCX2L2,NCY1L2,NCY2L2,
     1                  PSPXLL,PSPXUL,PSPYLL,PSPYUL,IXLIST,
     1                  ISPMLA,ISPMLD,ISPMPT,ISPMFR,ISPMXA,
     1                  ISPMYA,ISPMDI,ISPX1L,
     1                  ISPMXT,ISPMXL,ISPMYT,ISPMYL,
     1                  ISPMTD,PSPMTD,IVNMEX,
     1                  IBUGG2,ISUBRO)
C
C     PURPOSE--UTILTY ROUTINE FOR SCATTER PLOT MATRIX.  GENERATE
C              TIC MARKS, TIC MARK LABELS, AXIS LABELS.  ALSO
C              USED BY FACTOR AND CONDITIONING PLOTS.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/11
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--NOVEMBER 1999.
C     UPDATED       --JUNE       2002.  UPDATES FOR PARTIAL REGRESSION
C     UPDATED       --JUNE       2002.  UPDATES FOR PARTIAL RESIDUAL
C     UPDATED       --JUNE       2002.  UPDATES FOR PARTIAL LEVERAGE
C     UPDATED       --MAY        2007.  UPDATES FOR BINARY TABULATION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES---------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOPC.INC'
      INCLUDE 'DPCOHK.INC'
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGG2
C
      CHARACTER*4 ISUBRO
C
      CHARACTER*4 ISPMLA
      CHARACTER*4 ISPMLD
      CHARACTER*4 ISPMPT
      CHARACTER*4 ISPMFR
      CHARACTER*4 ISPMXA
      CHARACTER*4 ISPMYA
      CHARACTER*4 ISPMDI
      CHARACTER*4 ISPMTD
      CHARACTER*4 IVNMEX
      CHARACTER*4 ISPX1L
      CHARACTER*4 ISPMXT
      CHARACTER*4 ISPMXL
      CHARACTER*4 ISPMYT
      CHARACTER*4 ISPMYL
C
      CHARACTER*105 IXT
      CHARACTER*52 IX2T
      CHARACTER*52 IY1T
      CHARACTER*4 IXLABT(52)
      CHARACTER*4 IXLAB2(52)
      CHARACTER*4 IYLABT(52)
C
      CHARACTER*24 ICHAP2(100)
      CHARACTER*4 ILINP2(100)
      CHARACTER*4 IY1MNS
      CHARACTER*4 IY1MXS
      CHARACTER*4 IY2MNS
      CHARACTER*4 IY2MXS
      CHARACTER*4 IY1LJ2
      CHARACTER*4 IY1LD2
      CHARACTER*4 IX1MNS
      CHARACTER*4 IX1MXS
      CHARACTER*4 IX2MNS
      CHARACTER*4 IX2MXS
      CHARACTER*4 IX1TSV
      CHARACTER*4 IX2TSV
      CHARACTER*4 IY1TSV
      CHARACTER*4 IY2TSV
      CHARACTER*4 IX1ZSV
      CHARACTER*4 IX2ZSV
      CHARACTER*4 IY1ZSV
      CHARACTER*4 IY2ZSV
      CHARACTER*4 IX1LT2(*)
      CHARACTER*4 IX2LT2(*)
      CHARACTER*4 IY1LT2(*)
      CHARACTER*4 IY2LT2(*)
C
      CHARACTER*4 IVARN1
      CHARACTER*4 IVARN2
C
      DIMENSION ICOLL(*)
      DIMENSION IVARN1(*)
      DIMENSION IVARN2(*)
      DIMENSION PSPXLL(*)
      DIMENSION PSPXUL(*)
      DIMENSION PSPYLL(*)
      DIMENSION PSPYUL(*)
C
C-----COMMON------------------------------------------------------
C
C-----COMMON VARIABLES (GENERAL)----------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-------------------------------------------------
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPM1')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1011)
 1011   FORMAT('***** AT THE BEGINNING OF DPSPM1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1013)IX1MNS,IX1MXS,IX2MNS,IX2MXS
 1013   FORMAT('IX1MNS,IX1MXS,IX2MNS,IX2MXS = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1015)IY1MNS,IY1MXS,IY2MNS,IY2MXS
 1015   FORMAT('IY1MNS,IY1MXS,IY2MNS,IY2MXS = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ITEMP=0
C
C               ***************************************
C               **  STEP 1--                         **
C               **  TURN EVERYTHING OFF IF DATAPLOT  **
C               **  DETERMINES AXIS APPEARANCE AND   **
C               **  RESET DEFAULTS WHERE APPROPRIATE **
C               ***************************************
C
C
      DO10I=1,52
        IXLABT(I)=' '
        IXLAB2(I)=' '
        IYLABT(I)=' '
   10 CONTINUE
      DO15I=1,MAXCH
        IX1LTE(I)=IX1LT2(I)
        IX2LTE(I)=IX2LT2(I)
        IY1LTE(I)=IY1LT2(I)
        IY2LTE(I)=IY2LT2(I)
   15 CONTINUE
      IXT=' '
      IX2T=' '
      IY1T=' '
      NCX1LA=NCX1L2
      NCX2LA=NCX2L2
      NCY1LA=NCY1L2
      NCY2LA=NCY2L2
C
      IF(ISPMFR.EQ.'DEFA')THEN
        IX1TSW='OFF'
        IX1ZSW='OFF'
        IX2TSW='OFF'
        IX2ZSW='OFF'
        IY1TSW='OFF'
        IY1ZSW='OFF'
        IY2TSW='OFF'
        IY2ZSW='OFF'
        DO105I=1,MAXCH
          IX1LTE(I)='    '
          IX2LTE(I)='    '
          IY1LTE(I)='    '
          IY2LTE(I)='    '
  105   CONTINUE
        NCX1LA=0
        NCY1LA=0
        NCY2LA=0
        PX1LDS=PX1LD2
        PY1LDS=PY1LD2
        PY1LAN=PY1LA2
        IY1LJU=IY1LJ2
        IY1LDI=IY1LD2
      ELSE
        IX1TSW=IX1TSV
        IX1ZSW=IX1ZSV
        IX2TSW=IX2TSV
        IX2ZSW=IX2ZSV
        IY1TSW=IY1TSV
        IY1ZSW=IY1ZSV
        IY2TSW=IY2TSV
        IY2ZSW=IY2ZSV
      ENDIF
C
      DO110I=1,100
        ICHAPA(I)=ICHAP2(I)
        ILINPA(I)=ILINP2(I)
  110 CONTINUE
C
C               ***************************************
C               **  STEP 2--                         **
C               **  DETERMINE Y AXIS LIMITS (I.E.,   **
C               **  DEFAULT OR USER SPECIFIED)       **
C               ***************************************
C
      IF(IRES.GT.0)THEN
        YLOWL=PSPYLL(IRES)
        YUPPL=PSPYUL(IRES)
      ELSE
        YLOWL=CPUMIN
        YUPPL=CPUMIN
      ENDIF
      IF(IXLIST.GT.0)THEN
        XLOWL=PSPXLL(IXLIST)
        XUPPL=PSPXUL(IXLIST)
      ELSE
        XLOWL=CPUMIN
        XUPPL=CPUMIN
      ENDIF
      IF(YLOWL.NE.CPUMIN.AND.YUPPL.NE.CPUMIN)THEN
        GY1MIN=YLOWL
        GY1MAX=YUPPL
        GY2MIN=YLOWL
        GY2MAX=YUPPL
        IY1MIN='FIXE'
        IY1MAX='FIXE'
        IY2MIN='FIXE'
        IY2MAX='FIXE'
      ELSE
        IF(IY1MIN.NE.'FIXE')GY1MIN=GY1MNS
        IF(IY2MIN.NE.'FIXE')GY2MIN=GY2MNS
        IF(IY1MAX.NE.'FIXE')GY1MAX=GY1MXS
        IF(IY2MAX.NE.'FIXE')GY2MAX=GY2MXS
      ENDIF
C
C               ***************************************
C               **  STEP 3--                         **
C               **  DETERMINE X AXIS LIMITS (I.E.,   **
C               **  DEFAULT OR USER SPECIFIED)       **
C               ***************************************
C
      IF(XLOWL.NE.CPUMIN.AND.XUPPL.NE.CPUMIN)THEN
        GX1MIN=XLOWL
        GX1MAX=XUPPL
        GX2MIN=XLOWL
        GX2MAX=XUPPL
        IX1MIN='FIXE'
        IX1MAX='FIXE'
        IX2MIN='FIXE'
        IX2MAX='FIXE'
      ELSE
        IF(IX1MIN.NE.'FIXE')GX1MIN=GX1MNS
        IF(IX2MIN.NE.'FIXE')GX2MIN=GX2MNS
        IF(IX1MAX.NE.'FIXE')GX1MAX=GX1MXS
        IF(IX2MAX.NE.'FIXE')GX2MAX=GX2MXS
      ENDIF
C
C               ***************************************
C               **  STEP 4--                         **
C               **  DETERMINE TEXT FOR X AND Y AXIS  **
C               **  LABELS.  DO ONCE HERE TO SIMPLIFY**
C               **  CODE BELOW.                      **
C               ***************************************
C
      IF(ISPMLA.EQ.'OFF')GOTO9000
CCCCC IF(ISPMLA.EQ.'ROSE')GOTO9000
CCCCC IF(ISPMLA.EQ.'ROS2')GOTO9000
C
      IF(ISPMPT.EQ.'PLOT'.OR.ISPMPT.EQ.'QQSP'.OR.ISPMPT.EQ.'CROS')THEN
        IXT=' '
        NX1=-1
        IX1DS=1
        IX2T=' '
        NX2=0
        IX2DS=0
        IY1T=' '
        NY1=-1
      ELSEIF(ISPMPT.EQ.'BITA' .OR. ISPMPT.EQ.'BIPL')THEN
        IXT=' '
        NX1=0
        IX1DS=0
        IX2T=' '
        NX2=0
        IX2DS=0
        IY1T=' '
        NY1=0
      ELSEIF(ISPMPT.EQ.'PREG')THEN
        IXT=' '
        IXT='Res: '
        NX1=5
        NX1=NX1+1
        IXT(NX1:NX1+3)=IVARN1(IPLOT+1)(1:4)
        IXT(NX1+4:NX1+7)=IVARN2(IPLOT+1)(1:4)
        DO140I=NX1+7,NX1,-1
          NXTEMP=I
          IF(IXT(I:I).NE.'    ')GOTO145
  140   CONTINUE
  145   CONTINUE
        NX1=NXTEMP
        NX1=NX1+1
        NXTEMP=NX1+14
        IXT(NX1:NXTEMP)=' versus other X'
        NX1=NXTEMP
C
        IX1DS=1
        IX2T=' '
        NX2=0
        IX2DS=0
C
        NY1=5
        IY1T(1:NY1)='Res: '
        NY1=NY1+1
        IY1T(NY1:NY1+3)=IVARN1(IPLOT+1)(1:4)
        IY1T(NY1+4:NY1+7)=IVARN2(IPLOT+1)(1:4)
        DO130I=NY1+7,NY1,-1
          NYTEMP=I
          IF(IY1T(I:I).NE.'    ')GOTO135
  130   CONTINUE
  135   CONTINUE
        NY1=NYTEMP
        NY1=NY1+1
        NYTEMP=NY1+7
        IY1T(NY1:NYTEMP)=' Removed'
        NY1=NYTEMP
      ELSEIF(ISPMPT.EQ.'PLEV')THEN
        IXT=' '
        NX1=5
        IXT(1:NX1)='Index'
C
        IX1DS=1
        IX2T=' '
        NX2=0
        IX2DS=0
C
        IY1T=' '
        IY1T='Partial Leverage: '
        NY1=18
        NY1=NY1+1
        IY1T(NY1:NY1+3)=IVARN1(IPLOT+1)(1:4)
        IY1T(NY1+4:NY1+7)=IVARN2(IPLOT+1)(1:4)
        DO170I=NY1+7,NY1,-1
          NYTEMP=I
          IF(IY1T(I:I).NE.'    ')GOTO175
  170   CONTINUE
  175   CONTINUE
        NY1=NYTEMP
      ELSEIF(ISPMPT.EQ.'PRES'.OR.ISPMPT.EQ.'CCPR')THEN
        NX1=1
        IXT(NX1:NX1+3)=IVARN1(IPLOT+1)(1:4)
        IXT(NX1+4:NX1+7)=IVARN2(IPLOT+1)(1:4)
        DO150I=NX1+7,NX1,-1
          NXTEMP=I
          IF(IXT(I:I).NE.'    ')GOTO155
  150   CONTINUE
  155   CONTINUE
        NX1=NXTEMP
C
        IX1DS=1
        IX2T=' '
        NX2=0
        IX2DS=0
C
        IY1T=' '
        IY1T='Residuals + A'
        NY1=13
        IF(IPLOT.LE.9)THEN
          NY1=NY1+1
          WRITE(IY1T(NY1:NY1),'(I1)')IPLOT
        ELSE
          NY1=NY1+1
          NYTEMP=NY1+1
          WRITE(IY1T(NY1:NYTEMP),'(I2)')IPLOT
          NY1=NYTEMP
        ENDIF
        NY1=NY1+1
        IY1T(NY1:NY1)='*'
        NY1=NY1+1
        IY1T(NY1:NY1+3)=IVARN1(IPLOT+1)(1:4)
        IY1T(NY1+4:NY1+7)=IVARN2(IPLOT+1)(1:4)
        DO160I=NY1+7,NY1,-1
          NYTEMP=I
          IF(IY1T(I:I).NE.'    ')GOTO165
  160   CONTINUE
  165   CONTINUE
        NY1=NYTEMP
      ELSEIF(ISPMPT.EQ.'DEXS'.OR.ISPMPT.EQ.'DEXI'.OR.
     1       ISPMPT.EQ.'CRO2')THEN
        IXT=' '
        NX1=-2
        IF(ISPMXA.EQ.'TOP' .OR. ISPMXA.EQ.'TORI')NX1=-1
        IF(ISPX1L.EQ.'FILL')NX1=-3
        IX1DS=-1
        IX2T=' '
        NX2=0
        IX2DS=0
        IY1T=' '
        NY1=-1
      ELSEIF(ISPMPT.EQ.'DEXC')THEN
        IXT=' '
        NX1=-2
        IF(ISPX1L.EQ.'FILL')NX1=-3
        IX1DS=-1
        IX2T=' '
        NX2=0
        IX2DS=0
        IY1T=' '
        NY1=0
      ELSEIF(ISPMPT.EQ.'BIHI')THEN
        IXT=' '
        NX1=-1
        IX1DS=-1
        IX2T=' '
        NX2=-1
        IX2DS=-2
        IY1T='Frequency'
        NY1=9
      ELSEIF(ISPMPT.EQ.'CCOR')THEN
        IXT='Lag'
        NX1=3
        IX1DS=1
        IX2T=' '
        NX2=-2
        IX2DS=-1
        IY1T='Correlation'
        NY1=11
      ELSEIF(ISPMPT.EQ.'CSPE')THEN
        IXT='Frequency'
        NX1=9
        IX1DS=1
        IX2T=' '
        NX2=-2
        IX2DS=-1
        IY1T='Power'
        NY1=5
      ELSEIF(ISPMPT.EQ.'CLAG')THEN
        IXT='I+1'
        NX1=3
        IX1DS=1
        IX2T=' '
        NX2=-2
        IX2DS=-1
        IY1T='I'
        NY1=1
      ELSEIF(ISPMPT.EQ.'FPLO'.OR.ISPMPT.EQ.'QQFP'.OR.
     1       ISPMPT.EQ.'STAT')THEN
        IXT=' '
        NX1=-1
        IX1DS=-1
        IX2T=' '
        NX2=0
        IX2DS=0
        IY1T=' '
        NY1=-1
      ELSEIF(ISPMPT.EQ.'BOXC')THEN
        IXT='Alpha'
        NX1=5
        IX1DS=1
        IX2T=' '
        NX2=-1
        IX2DS=-1
        IY1T='Correlation'
        NY1=11
      ELSEIF(ISPMPT.EQ.'CBXC')THEN
        IXT='Alpha'
        NX1=5
        IX1DS=1
        IX2T=' '
        NX2=-2
        IX2DS=-1
        IY1T='Correlation'
        NY1=11
      ELSEIF(ISPMPT.EQ.'HIST')THEN
        IXT=' '
        NX1=-1
        IX1DS=-1
        IX2T=' '
        NX2=0
        IX2DS=-1
        IY1T='Frequency'
        NY1=9
      ELSEIF(ISPMPT.EQ.'CDEN' .OR. ISPMPT.EQ.'KERN')THEN
        IXT=' '
        NX1=-1
        IX1DS=-1
        IX2T=' '
        NX2=0
        IX2DS=-1
        IY1T='Density'
        NY1=7
      ELSEIF(ISPMPT.EQ.'RUNS')THEN
        IXT='Sequence'
        NX1=8
        IX1DS=1
        IX2T=' '
        NX2=-1
        IX2DS=-1
        IY1T=' '
        NY1=0
      ELSEIF(ISPMPT.EQ.'LAG ')THEN
        IXT='I+1'
        NX1=3
        IX1DS=1
        IX2T=' '
        NX2=0
        IX2DS=-1
        IY1T='I'
        NY1=1
      ELSEIF(ISPMPT.EQ.'PERC')THEN
        IXT='Percentile'
        NX1=10
        IX1DS=1
        IX2T=' '
        NX2=-1
        IX2DS=-1
        IY1T=' '
        NY1=0
      ELSEIF(ISPMPT.EQ.'CPER')THEN
        IXT='Percentile'
        NX1=10
        IX1DS=1
        IX2T=' '
        NX2=0
        IX2DS=-1
        IY1T=' '
        NY1=-1
      ELSEIF(ISPMPT.EQ.'AUTO')THEN
        IXT='Lag'
        NX1=3
        IX1DS=1
        IX2T=' '
        NX2=-1
        IX2DS=-1
        IY1T='Frequency'
        NY1=9
      ELSEIF(ISPMPT.EQ.'SPEC')THEN
        IXT='Frequency'
        NX1=9
        IX1DS=1
        IX2T=' '
        NX2=-1
        IX2DS=-1
        IY1T='Power'
        NY1=5
      ELSEIF(ISPMPT.EQ.'PROB')THEN
        IXT='Theoretical'
        NX1=11
        IX1DS=1
        IX2T=' '
        NX2=-1
        IX2DS=-1
        IY1T='Data'
        NY1=4
      ELSEIF(ISPMPT.EQ.'PPCC')THEN
        IXT='Parameter'
        NX1=9
        IX1DS=1
        IX2T=' '
        NX2=-1
        IX2DS=-1
        IY1T='Correlation'
        NY1=11
      ELSEIF(ISPMPT.EQ.'ROSE' .OR. ISPMPT.EQ.'ROS2')THEN
        IXT=' '
        NX1=1
        IX1DS=1
        IX2T=' '
        NX2=1
        IX2DS=-1
        IY1T=' '
        NY1=1
      ELSE
        IXT=' '
        NX1=-1
        IX1DS=1
        IX2T=' '
        NX2=0
        IX2DS=0
        IY1T=' '
        NY1=1
      ENDIF
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPM1')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1012)
 1012   FORMAT('***** FINISH SECTION 1--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C  X1LABEL
C
C  1) IF NX1 > 0, USE USER SPECIFIED LABEL IF ALREADY DEFINED,
C     OTHERWISE, DEFAULT TO A DATAPLOT SPECIFIED LABEL.
C  2) IF NX1 = 0, USE USER SPECIFIED LABEL IF ALREADY DEFINED,
C     BUT NO DEFAULT PROVIDED.
C  3) IF NX1 = -1, USE VARIABLE NAME (AND SUBSTITUTE VARIABLE
C     LABEL IF PROVIDED).
C  4) IF NX1 = -2, USE: VARIABLE1 * VARIABLE2 (AND SUBSTITUTE
C     VARIABLE LABEL IF PROVIDED).
C  5) IF NX1 = -3, USE: 1*2 (AND SUBSTITUTE
C     VARIABLE LABEL IF PROVIDED).
C
      IF(ICOL.EQ.0)THEN
        NCXLA=0
        GOTO299
      ENDIF
C
      IF(NX1.GE.0)THEN
        IF(NCX1L2.GT.0)THEN
          DO210I=1,NCX1L2
            IXLABT(I)=IX1LT2(I)
  210     CONTINUE
          NCXLA=NCX1L2
        ELSE
          NCXLA=0
          IF(NX1.GT.0)THEN
            DO220I=1,NX1
              IXLABT(I)(1:1)=IXT(I:I)
  220       CONTINUE
            NCXLA=NX1
          ENDIF
        ENDIF
      ELSEIF(NX1.LT.0)THEN
        ITEMP=IFACT
        IF(NX1.EQ.-2 .OR. NX2.EQ.-2)ITEMP=IRES
        IF(ISPMPT.EQ.'BIHI')ITEMP=IRES
        ICOLID=ICOLL(ITEMP)
        IF(IVARLB(ICOLID).EQ.' '.OR.IVNMEX.EQ.'OFF')THEN
          DO230I=1,4
            IXLABT(I)=IVARN1(ITEMP)(I:I)
            IXLABT(I+4)=IVARN2(ITEMP)(I:I)
  230     CONTINUE
          NCXLA=8
          DO240I=8,1,-1
            NCXLA=I
            IF(IXLABT(I).NE.'    ')GOTO245
  240     CONTINUE
  245     CONTINUE
        ELSE
          ILAST=40
          DO250I=40,1,-1
            IF(IVARLB(ICOLID)(I:I).NE.' ')THEN
              ILAST=I
              GOTO259
            ENDIF
  250     CONTINUE
  259     CONTINUE
          DO270I=1,ILAST
            IXLABT(I)(1:1)=IVARLB(ICOLID)(I:I)
  270     CONTINUE
          NCXLA=ILAST
        ENDIF
        IF(NX1.EQ.-1 .OR. IRES.EQ.IFACT)GOTO299
        NCXLA=NCXLA+1
        IXLABT(NCXLA)='*'
        ITEMP=IFACT
        ICOLID=ICOLL(ITEMP)
        IF(IVARLB(ICOLID).EQ.' ')THEN
          DO280I=1,4
            IXLABT(NCXLA+I)=IVARN1(ITEMP)(I:I)
            IXLABT(NCXLA+I+4)=IVARN2(ITEMP)(I:I)
  280     CONTINUE
          ILAST=NCXLA+8
          DO285I=ILAST,1,-1
            NCXLA=I
            IF(IXLABT(I).NE.'    ')GOTO288
  285     CONTINUE
  288     CONTINUE
        ELSE
          ILAST=40
          DO290I=40,1,-1
            IF(IVARLB(ICOLID)(I:I).NE.' ')THEN
              ILAST=I
              GOTO293
            ENDIF
  290     CONTINUE
  293     CONTINUE
          DO295I=1,ILAST
            NCXLA=NCXLA+1
            IXLABT(NCXLA)(1:1)=IVARLB(ICOLID)(I:I)
  295     CONTINUE
        ENDIF
      ENDIF
  299 CONTINUE
C
C  X2LABEL
C
C  1) IF NX2 > 0, USE USER SPECIFIED LABEL IF ALREADY DEFINED,
C     OTHERWISE, DEFAULT TO A DATAPLOT SPECIFIED LABEL.
C  2) IF NX2 = 0, USE USER SPECIFIED LABEL IF ALREADY DEFINED,
C     BUT NO DEFAULT PROVIDED.
C  3) IF NX2 = -1, USE VARIABLE NAME (AND SUBSTITUTE VARIABLE
C     LABEL IF PROVIDED).
C  4) IF NX2 = -2, USE: VARIABLE1 * VARIABLE2 (AND SUBSTITUTE
C     VARIABLE LABEL IF PROVIDED).
C
      IF(ICOL.EQ.0)THEN
        NCXLA2=0
        GOTO399
      ENDIF
C
      IF((NX1.EQ.-1.AND.NX2.EQ.-1).AND.IRES.EQ.IFACT)THEN
         NCXLA2=0
         GOTO399
      ENDIF
      IF(NX2.GE.0)THEN
        IF(NCX2L2.GT.0)THEN
          DO310I=1,NCX2L2
            IXLAB2(I)=IX2LT2(I)
  310     CONTINUE
          NCXLA2=NCX2L2
        ELSE
          NCXLA2=0
          IF(NX2.GT.0)THEN
            DO320I=1,NX2
              IXLAB2(I)(1:1)=IX2T(I:I)
  320       CONTINUE
            NCXLA2=NX2
          ENDIF
        ENDIF
      ELSEIF(NX2.LT.0)THEN
        ITEMP=IFACT
        IF(NX2.EQ.-2)ITEMP=IRES
        IF(ISPMPT.EQ.'BIHI')ITEMP=IFACT
        ICOLID=ICOLL(ITEMP)
        IF(IVARLB(ICOLID).EQ.' '.OR.IVNMEX.EQ.'OFF')THEN
          DO330I=1,4
            IXLAB2(I)=IVARN1(ITEMP)(I:I)
            IXLAB2(I+4)=IVARN2(ITEMP)(I:I)
  330     CONTINUE
          NCXLA2=8
          DO340I=8,1,-1
            NCXLA2=I
            IF(IXLAB2(I).NE.'    ')GOTO345
  340     CONTINUE
  345     CONTINUE
        ELSE
          ILAST=40
          DO350I=40,1,-1
            IF(IVARLB(ICOLID)(I:I).NE.' ')THEN
              ILAST=I
              GOTO359
            ENDIF
  350     CONTINUE
  359     CONTINUE
          DO370I=1,ILAST
            IXLAB2(I)(1:1)=IVARLB(ICOLID)(I:I)
  370     CONTINUE
          NCXLA2=ILAST
        ENDIF
        IF(NX2.EQ.-1.OR.IRES.EQ.IFACT)GOTO399
        NCXLA2=NCXLA2+1
        IXLAB2(NCXLA2)='*'
        ITEMP=IFACT
        ICOLID=ICOLL(ITEMP)
        IF(IVARLB(ICOLID).EQ.' ')THEN
          DO380I=1,4
            IXLAB2(NCXLA2+I)=IVARN1(ITEMP)(I:I)
            IXLAB2(NCXLA2+I+4)=IVARN2(ITEMP)(I:I)
  380     CONTINUE
          ILAST=NCXLA2+8
          DO385I=ILAST,1,-1
            NCXLA2=I
            IF(IXLAB2(I).NE.'    ')GOTO388
  385     CONTINUE
  388     CONTINUE
        ELSE
          ILAST=40
          DO390I=40,1,-1
            IF(IVARLB(ICOLID)(I:I).NE.' ')THEN
              ILAST=I
              GOTO393
            ENDIF
  390     CONTINUE
  393     CONTINUE
          DO395I=1,ILAST
            NCXLA2=NCXLA2+1
            IXLAB2(NCXLA2)(1:1)=IVARLB(ICOLID)(I:I)
  395     CONTINUE
        ENDIF
      ENDIF
  399 CONTINUE
C
C  Y1LABEL
C
C  1) IF NY1 > 0, USE USER SPECIFIED LABEL IF ALREADY DEFINED,
C     OTHERWISE, DEFAULT TO A DATAPLOT SPECIFIED LABEL.
C  2) IF NY1 = 0, USE USER SPECIFIED LABEL IF ALREADY DEFINED,
C     BUT NO DEFAULT PROVIDED.
C  3) IF NY1 = -1, USE VARIABLE NAME (AND SUBSTITUTE VARIABLE
C     LABEL IF PROVIDED).
C
      IF(ISPMLA.EQ.'BOX'.AND.IROW.EQ.IMPNR)THEN
        NCYLA=0
        GOTO599
      ENDIF
C
      IF(NY1.GE.0)THEN
        IF(NCY1L2.GT.0)THEN
          DO510I=1,NCY1L2
            IYLABT(I)=IY1LT2(I)
  510     CONTINUE
          NCYLA=NCY1L2
        ELSE
          NCYLA=0
          IF(NY1.GT.0)THEN
            DO520I=1,NY1
              IYLABT(I)(1:1)=IY1T(I:I)
  520       CONTINUE
            NCYLA=NY1
          ENDIF
        ENDIF
      ELSEIF(NY1.LT.0)THEN
        ITEMP=IRES
        IF(ISPMPT.EQ.'DEXI'.OR.ISPMPT.EQ.'DEXS')ITEMP=1
        ICOLID=ICOLL(ITEMP)
        IF(IVARLB(ICOLID).EQ.' '.OR.IVNMEX.EQ.'OFF')THEN
          DO530I=1,4
            IYLABT(I)=IVARN1(ITEMP)(I:I)
            IYLABT(I+4)=IVARN2(ITEMP)(I:I)
  530     CONTINUE
          NCYLA=8
          DO540I=8,1,-1
            NCYLA=I
            IF(IYLABT(I).NE.'    ')GOTO545
  540     CONTINUE
  545     CONTINUE
        ELSE
          ILAST=40
          DO560I=40,1,-1
            IF(IVARLB(ICOLID)(I:I).NE.' ')THEN
              ILAST=I
              GOTO569
            ENDIF
  560     CONTINUE
  569     CONTINUE
          DO570I=1,ILAST
            IYLABT(I)(1:1)=IVARLB(ICOLID)(I:I)
  570     CONTINUE
          NCYLA=ILAST
        ENDIF
      ENDIF
  599 CONTINUE
C
C               ***************************************
C               **  STEP 5--                         **
C               **  USER SPECIFIES AXIS ATTRIBUTES,  **
C               **  BUT DATAPLOT MAY SUBSTITUTE      **
C               **  VARIABLE NAME (OR LABEL) FOR     **
C               **  X1LABEL AND Y1LABEL              **
C               ***************************************
C
      IF(ISPMFR.EQ.'USER')THEN
        NCX1LA=NCXLA
        IF(NCX1LA.LE.0)GOTO1119
        DO1110I=1,NCX1LA
          IX1LTE(I)=IXLABT(I)
 1110   CONTINUE
 1119   CONTINUE
        IF(IX1DS.LT.0)PX1LDS=-((PYMAX-PYMIN)-PX1LD2)
        NCY1LA=NCYLA
        IF(NCY1LA.LE.0)GOTO1129
        DO1120I=1,NCY1LA
          IY1LTE(I)=IYLABT(I)
 1120   CONTINUE
 1129   CONTINUE
        NCX2LA=NCXLA2
        IF(NCX2LA.LE.0)GOTO1139
        DO1130I=1,NCX2LA
          IX2LTE(I)=IXLAB2(I)
 1130   CONTINUE
        PX2LDS=-((PYMAX-PYMIN)-PX2LD2)
        IF(IX2DS.EQ.-2)PX2LDS=-PX2LD2
 1139   CONTINUE
C
C               *******************************************
C               **  STEP 6--                             **
C               **  DATAPLOT SPECIFIES AXIS ATTRIBUTES   **
C               *******************************************
C
      ELSEIF(ISPMFR.EQ.'DEFA')THEN
C
        ITEMP1=MOD(ICOL,2)
        ITEMP2=MOD(IROW,2)
        IROWL=IMPNR
        IF(ISPMLA.EQ.'BOX'.AND.ICASPL.EQ.'SPMA')IROWL=NUMVAR+1
        ICOLF=1
        ICOLLA=IMPNC
        IF(ISPMLA.EQ.'BOX')ICOLF=0
C
C  IX1DS < 0 OR IX2DS < 0 SPECIFIES THAT THIS LABEL IS DRAWN
C  ON ALL PLOTS (AND DISPLACEMENT IS DISTANCE FROM TOP FRAME)
C
        IF(IX1DS.LT.0.AND.ISPMLA.NE.'BOX')THEN
          NCX1LA=NCXLA
          IF(NCX1LA.GT.0)THEN
            DO1505I=1,NCX1LA
              IX1LTE(I)=IXLABT(I)
 1505       CONTINUE
          ENDIF
          PX1LDS=-((PYMAX-PYMIN)-PX1LD2)
        ENDIF
        IF(IX2DS.LT.0.AND.ISPMLA.NE.'BOX')THEN
          NCX2LA=NCXLA2
          IF(NCX2LA.GT.0)THEN
            DO1508I=1,NCX2LA
              IX2LTE(I)=IXLAB2(I)
 1508       CONTINUE
          ENDIF
          PX2LDS=-((PYMAX-PYMIN)-PX2LD2)
          IF(IX2DS.EQ.-2)PX2LDS=-PX1LD2
        ENDIF
C
        IF(ISPMXA.EQ.'YON')GOTO1499
        IF(ISPMXA.EQ.'ALTE')THEN
          IF((IROW.EQ.IROWL.AND.ITEMP1.EQ.1).OR.
     1       (ISPMLD.EQ.'OFF'.AND.ITEMP1.EQ.1.AND.IROW.EQ.ICOL).OR.
     1       (IROW.EQ.IMPNR-1.AND.ICOL.EQ.IMPNC.AND.ITEMP.EQ.1.AND.
     1       NPLOTS.LT.IMPNR*IMPNC).OR.
     1       (ISPMLA.EQ.'BOX'.AND.IROW.EQ.IROWL)
     1       )THEN
            IF(ISPMLA.EQ.'BOX'.AND.ICOL.EQ.0)GOTO1519
            IF(ISPMLA.EQ.'BOX'.AND.ITEMP1.EQ.0)GOTO1512
            IF(ISPMLA.EQ.'YON')THEN
              IX1TSW='OFF'
              IX1ZSW='OFF'
            ELSE
              IX1TSW='ON'
              IX1ZSW='ON'
            ENDIF
            IX2TSW='OFF'
            IX2ZSW='OFF'
 1512       CONTINUE
            IFLAG=0
            IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1        ISPMDI.EQ.'BLAN')IFLAG=1
            IF(IX1DS.LT.0.AND.ISPMLA.NE.'BOX')IFLAG=1
            IFLAG2=0
            IF(IX2DS.LT.0.AND.ISPMLA.NE.'BOX')IFLAG2=1
            IF(IFLAG.EQ.0)THEN
              NCX1LA=NCXLA
              IF(NCX1LA.GT.0)THEN
                DO1510I=1,NCX1LA
                IX1LTE(I)=IXLABT(I)
 1510           CONTINUE
              ENDIF
            ENDIF
            IF(IFLAG2.EQ.0)THEN
              NCX2LA=NCXLA2
              IF(NCX2LA.GT.0)THEN
                DO1516I=1,NCX2LA
                IX2LTE(I)=IXLAB2(I)
 1516           CONTINUE
              ENDIF
            ENDIF
 1519       CONTINUE
            IF(ISPMLA.EQ.'BOX')PX1LDS=-((PYMAX-PYMIN)/2.0)
          ENDIF
C
          IF(IROW.EQ.1.AND.ITEMP1.EQ.0)THEN
            IF(ISPMLA.EQ.'BOX'.AND.ICOL.EQ.0)GOTO1529
            IX1TSW='OFF'
            IX1ZSW='OFF'
            IF(ISPMLA.EQ.'YON')THEN
              IX2TSW='OFF'
              IX2ZSW='OFF'
            ELSE
              IX2TSW='ON'
              IX2ZSW='ON'
            ENDIF
            IFLAG=0
            IF(ISPMLA.EQ.'BOX')IFLAG=1
            IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1        ISPMDI.EQ.'BLAN')IFLAG=1
            IF(IX1DS.LT.0)IFLAG=1
            IFLAG2=0
            IF(IX2DS.LT.0)IFLAG2=1
            IF(IFLAG.EQ.0)THEN
              NCX1LA=NCXLA
              IF(NCX1LA.GT.0)THEN
                DO1520I=1,NCX1LA
                IX1LTE(I)=IXLABT(I)
 1520           CONTINUE
              ENDIF
            ENDIF
            IF(IFLAG2.EQ.0)THEN
              NCX2LA=NCXLA2
              IF(NCX2LA.GT.0)THEN
                DO1526I=1,NCX2LA
                IX2LTE(I)=IXLAB2(I)
 1526           CONTINUE
              ENDIF
            ENDIF
 1529       CONTINUE
            IF(IX1DS.GT.0)PX1LDS=-((PYMAX-PYMIN)+PX1LD2)
            IF(ISPMLA.EQ.'BOX')PX1LDS=-((PYMAX-PYMIN)/2.0)
          ENDIF
        ELSEIF(ISPMXA.EQ.'BOTT' .OR. ISPMXA.EQ.'BOLE' .OR.
     1         ISPMXA.EQ.'BORI')THEN
C
          IF(ISPMXA.EQ.'BOLE')THEN
            IF(ISPMLD.EQ.'ON')THEN
              IF(ICOL.NE.1 .OR. IROW.NE.IROWL)THEN
                NCXLA=0
                NCX1LA=NCXLA
                GOTO1618
              ENDIF
            ELSE
              IF(ICOL.NE.1 .OR. IROW.NE.1)THEN
                NCXLA=0
                NCX1LA=NCXLA
                GOTO1618
              ENDIF
            ENDIF
          ELSEIF(ISPMXA.EQ.'BORI')THEN
            IF(ICOL.NE.ICOLLA .OR. IROW.NE.IROWL)THEN
              NCXLA=0
              NCX1LA=NCXLA
              IF(ISPMXT.EQ.'OFF')IX1TSW='OFF'
              IF(ISPMXL.EQ.'OFF')IX1ZSW='OFF'
              GOTO1618
            ENDIF
          ELSE
            IF(ISPMLD.EQ.'ON')THEN
              IF(IROW.NE.IROWL)THEN
                NCXLA=0
                NCX1LA=NCXLA
                GOTO1618
              ENDIF
            ELSE
              IF(IROW.NE.ICOL)THEN
                NCXLA=0
                NCX1LA=NCXLA
                GOTO1618
              ENDIF
            ENDIF
          ENDIF
C
          IF((ISPMLD.EQ.'ON'.AND.IROW.EQ.IROWL) .OR.
     1       (ISPMLD.EQ.'OFF'.AND.IROW.EQ.ICOL))THEN
            IF(ISPMLA.EQ.'BOX'.AND.ICOL.EQ.0)GOTO1619
            IF(ISPMLA.EQ.'YON')THEN
              IX1TSW='OFF'
              IX1ZSW='OFF'
            ELSE
              IX1TSW='ON'
              IX1ZSW='ON'
              IF(ISPMXT.EQ.'OFF')IX1TSW='OFF'
              IF(ISPMXL.EQ.'OFF')IX1ZSW='OFF'
            ENDIF
            IF(ISPMTD.EQ.'STAG'.AND.ITEMP1.EQ.0)PX1ZDS=PSPMTD
            IX2TSW='OFF'
            IX2ZSW='OFF'
            IFLAG=0
            IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1        ISPMDI.EQ.'BLAN')IFLAG=1
            IF(IX1DS.LT.0.AND.ISPMLA.NE.'BOX')IFLAG=1
            IFLAG2=0
            IF(IX2DS.LT.0.AND.ISPMLA.NE.'BOX')IFLAG2=1
            IF(IFLAG.EQ.0)THEN
              NCX1LA=NCXLA
              IF(NCX1LA.GT.0)THEN
                DO1610I=1,NCX1LA
                IX1LTE(I)=IXLABT(I)
 1610           CONTINUE
              ENDIF
            ENDIF
            IF(IFLAG2.EQ.0)THEN
              NCX2LA=NCXLA2
              IF(NCX2LA.GT.0)THEN
                DO1616I=1,NCX2LA
                IX2LTE(I)=IXLAB2(I)
 1616           CONTINUE
              ENDIF
            ENDIF
 1619       CONTINUE
            IF(ISPMLA.EQ.'BOX')PX1LDS=-((PYMAX-PYMIN)/2.0)
          ENDIF
 1618     CONTINUE
        ELSEIF(ISPMXA.EQ.'TOP' .OR. ISPMXA.EQ.'TOLE' .OR.
     1         ISPMXA.EQ.'TORI')THEN
C
          IF(ISPMXA.EQ.'TOLE')THEN
            IF(IROW.NE.1 .OR. ICOL.NE.1)THEN
                NCXLA=0
                NCX1LA=NCXLA
                GOTO1728
            ENDIF
          ELSEIF(ISPMXA.EQ.'TORI')THEN
            IF(IROW.NE.1 .OR. ICOL.NE.ICOLLA)THEN
              NCXLA=0
              NCX1LA=NCXLA
              GOTO1728
            ENDIF
          ELSE
            IF(IROW.NE.1)THEN
                NCXLA=0
                NCX1LA=NCXLA
                GOTO1728
            ENDIF
          ENDIF
C
          IF(IROW.EQ.1)THEN
            IF(ISPMLA.EQ.'BOX'.AND.ICOL.EQ.0)GOTO1719
            IX1TSW='OFF'
            IX1ZSW='OFF'
            IF(ISPMLA.EQ.'YON')THEN
              IX2TSW='OFF'
              IX2ZSW='OFF'
            ELSE
              IX2TSW='ON'
              IX2ZSW='ON'
              IF(ISPMXT.EQ.'OFF')IX2TSW='OFF'
              IF(ISPMXL.EQ.'OFF')IX2ZSW='OFF'
            ENDIF
            IF(ISPMTD.EQ.'STAG'.AND.ITEMP1.EQ.0)PX2ZDS=PSPMTD
            IFLAG=0
            IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1        ISPMDI.EQ.'BLAN')IFLAG=1
            IF(IX1DS.LT.0)IFLAG=1
            IF(ISPMLA.EQ.'BOX')GOTO1719
            IFLAG2=0
            IF(IX2DS.LT.0)IFLAG2=1
            IF(IFLAG.EQ.0)THEN
              NCX1LA=NCXLA
              IF(NCX1LA.GT.0)THEN
                DO1710I=1,NCX1LA
                IX1LTE(I)=IXLABT(I)
 1710           CONTINUE
              ENDIF
            ENDIF
            IF(IFLAG2.EQ.0)THEN
              NCX2LA=NCXLA2
              IF(NCX2LA.GT.0)THEN
                DO1716I=1,NCX2LA
                IX2LTE(I)=IXLAB2(I)
 1716           CONTINUE
              ENDIF
            ENDIF
 1719       CONTINUE
            PX1LDS=-(100.0+PX1LD2)
          ENDIF
C
          IF(ISPMLA.EQ.'BOX'.AND.IROW.EQ.IROWL.AND.ICOL.GT.0)THEN
            IFLAG=0
            IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1        ISPMDI.EQ.'BLAN')IFLAG=1
            IF(IX1DS.LT.0.AND.ISPMLA.NE.'BOX')IFLAG=1
            IFLAG2=0
            IF(IX2DS.LT.0.AND.ISPMLA.NE.'BOX')IFLAG2=1
            IF(IFLAG.EQ.0)THEN
              NCX1LA=NCXLA
              IF(NCX1LA.GT.0)THEN
                DO1720I=1,NCX1LA
                IX1LTE(I)=IXLABT(I)
 1720           CONTINUE
              ENDIF
            ENDIF
            PX1LDS=-(100.0+PX1LD2)
          ENDIF
 1728     CONTINUE
        ENDIF
C
 1499   CONTINUE
        IF(ISPMYA.EQ.'OFF')GOTO1699
        IF(ISPMYA.EQ.'ALTE')THEN
          IF((ICOL.EQ.IMPNC.AND.ITEMP2.EQ.0).OR.
     1       (ISPMLA.EQ.'BOX'.AND.ICOL.EQ.IMPNC-1.AND.ITEMP2.EQ.0).OR.
     1       (IPLOT.EQ.NPLOTS.AND.ITEMP2.EQ.0))THEN
            IY1TSW='OFF'
            IY1ZSW='OFF'
            IF(ISPMLA.EQ.'XON')THEN
              IY2TSW='OFF'
              IY2ZSW='OFF'
            ELSE
              IY2TSW='ON'
              IY2ZSW='ON'
            ENDIF
            IFLAG=0
            IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1        ISPMDI.EQ.'BLAN')IFLAG=1
            IF(ISPMLA.EQ.'BOX')IFLAG=1
            IF(IFLAG.EQ.0)THEN
              NCY2LA=NCYLA
              IF(NCY2LA.LE.0)GOTO1539
              DO1530I=1,NCY2LA
                IY2LTE(I)=IYLABT(I)
 1530         CONTINUE
 1539         CONTINUE
            ENDIF
          ENDIF
C
          IF(ICOL.EQ.ICOLF.AND.ITEMP2.EQ.1.OR.
     1      (ISPMLA.EQ.'BOX'.AND.ICOL.EQ.ICOLF).OR.
     1      (ISPMLD.EQ.'OFF'.AND.ITEMP2.EQ.1.AND.IROW.EQ.ICOL))THEN
            IF(ISPMLA.EQ.'BOX'.AND.IROW.EQ.IROWL)GOTO1549
            IF(ISPMLA.EQ.'BOX'.AND.ITEMP2.EQ.0)GOTO1542
            IF(ISPMLA.EQ.'XON')THEN
              IY1TSW='OFF'
              IY1ZSW='OFF'
            ELSE
              IY1TSW='ON'
              IY1ZSW='ON'
            ENDIF
            IY2TSW='OFF'
            IY2ZSW='OFF'
 1542       CONTINUE
            IFLAG=0
            IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1        ISPMDI.EQ.'BLAN')IFLAG=1
            IF(IFLAG.EQ.0)THEN
              NCY1LA=NCYLA
              IF(NCY1LA.LE.0)GOTO1549
              DO1540I=1,NCY1LA
                IY1LTE(I)=IYLABT(I)
 1540         CONTINUE
            ENDIF
            IF(ISPMLA.EQ.'BOX')THEN
              IY1LJU='CENT'
              PY1LDS=-((PXMAX-PXMIN)/2.0)
              PY1LAN=0.0
              IY1LDI='HORI'
            ENDIF
 1549       CONTINUE
          ENDIF
        ELSEIF(ISPMYA.EQ.'LEFT' .OR. ISPMYA.EQ.'LETO' .OR.
     1         ISPMYA.EQ.'LEBO')THEN
          IF(ISPMYA.EQ.'LETO' .AND. IROW.NE.1)GOTO1648
          IF(ISPMYA.EQ.'LEBO' .AND. IROW.NE.IROWL)GOTO1648
          IF(ICOL.EQ.ICOLF.OR.(ISPMLD.EQ.'OFF'.AND.IROW.EQ.ICOL))THEN
            IF(ISPMLA.EQ.'BOX'.AND.IROW.EQ.IROWL)GOTO1649
            IF(ISPMLA.EQ.'XON')THEN
              IY1TSW='OFF'
              IY1ZSW='OFF'
            ELSE
              IY1TSW='ON'
              IY1ZSW='ON'
              IF(ISPMYT.EQ.'OFF')IY1TSW='OFF'
              IF(ISPMYL.EQ.'OFF')IY1ZSW='OFF'
            ENDIF
            IF(ISPMTD.EQ.'STAG'.AND.ITEMP2.EQ.0)PY1ZDS=PSPMTD
            IY2TSW='OFF'
            IY2ZSW='OFF'
            IFLAG=0
            IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1        ISPMDI.EQ.'BLAN')IFLAG=1
            IF(IFLAG.EQ.0)THEN
              NCY1LA=NCYLA
              IF(NCY1LA.LE.0)GOTO1649
              DO1640I=1,NCY1LA
                IY1LTE(I)=IYLABT(I)
 1640         CONTINUE
            ENDIF
 1649       CONTINUE
            IF(ISPMLA.EQ.'BOX')THEN
              IY1LJU='CENT'
              PY1LDS=-((PXMAX-PXMIN)/2.0)
              PY1LAN=0.0
              IY1LDI='HORI'
            ENDIF
          ENDIF
 1648     CONTINUE
        ELSEIF(ISPMYA.EQ.'RIGH' .OR. ISPMYA.EQ.'RITO' .OR.
     1         ISPMYA.EQ.'RIBO')THEN
          IF(ISPMYA.EQ.'RITO' .AND. IROW.NE.1)GOTO1848
          IF(ISPMYA.EQ.'RIBO' .AND. IROW.NE.IROWL)GOTO1848
          IF(ICOL.EQ.IMPNC)THEN
            IF(ISPMLA.EQ.'BOX'.AND.IROW.EQ.IROWL)GOTO1839
            IY1TSW='OFF'
            IY1ZSW='OFF'
            IF(ISPMLA.EQ.'XON')THEN
              IY2TSW='OFF'
              IY2ZSW='OFF'
            ELSE
              IY2TSW='ON'
              IY2ZSW='ON'
              IF(ISPMYT.EQ.'OFF')IY2TSW='OFF'
              IF(ISPMYL.EQ.'OFF')IY2ZSW='OFF'
            ENDIF
            IF(ISPMTD.EQ.'STAG'.AND.ITEMP2.EQ.0)PY2ZDS=PSPMTD
            IFLAG=0
            IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1        ISPMDI.EQ.'BLAN')IFLAG=1
            IF(ISPMLA.EQ.'BOX')IFLAG=1
            IF(IFLAG.EQ.0)THEN
              NCY2LA=NCYLA
              IF(NCY2LA.LE.0)GOTO1839
              DO1830I=1,NCY2LA
                IY2LTE(I)=IYLABT(I)
 1830         CONTINUE
            ENDIF
 1839       CONTINUE
          ENDIF
C
          IF(ISPMLA.EQ.'BOX'.AND.ICOL.EQ.ICOLF.AND.IROW.LT.IROWL)THEN
            IFLAG=0
            IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1        ISPMDI.EQ.'BLAN')IFLAG=1
            IF(IFLAG.EQ.0)THEN
              NCY1LA=NCYLA
              IF(NCY1LA.LE.0)GOTO1849
              DO1840I=1,NCY1LA
                IY1LTE(I)=IYLABT(I)
 1840         CONTINUE
            ENDIF
 1849       CONTINUE
          ENDIF
 1848     CONTINUE
        ENDIF
C
        IF(ICASPL.EQ.'SPMA'.AND.ISPMPT.EQ.'PLOT'.AND.
     1    ISPMDI.EQ.'BLAN'.AND.IROW.EQ.ICOL)THEN
          NCX1LA=NCXLA
          NCY1LA=0
          NCY2LA=0
          IF(NCX1LA.LE.0)GOTO1919
          DO1910I=1,NCX1LA
            IX1LTE(I)=IXLABT(I)
 1910     CONTINUE
 1919     CONTINUE
          PX1LDS=-((PYMAX-PYMIN)/2.0)
        ENDIF
 1699   CONTINUE
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPM1')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPM1--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPM2(ICASPL,IVARN1,IVARN2,ICOLL,NUMVAR,NPLOTP,
     1                  IROW,ICOL,
     1                  TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,MAXNXT,
     1                  ALOWFR,ALOWDG,
     1                  IANGLU,MAXNPP,IAND1,IAND2,
     1                  ISPMFI,ISPMTA,
     1                  XMATN,YMATN,XMITN,YMITN,
     1                  ISQUAR,
     1                  IVGMSW,IHGMSW,
     1                  IMPSW,IMPNR,IMPNC,IMPCO,IMPCO9,
     1                  IREPCH,
     1                  PMXMIN,PMXMAX,PMYMIN,PMYMAX,
     1                  ICNTPL,IOUNI5,
     1                  IBUGG2,IBUGG3,IBUGCO,IBUGEV,IBUGQ,
     1                  IBUGUG,IBUGU2,IBUGU3,IBUGU4,
     1                  ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--UTILTY ROUTINE FOR SCATTER PLOT MATRIX.  GENERATE
C              OVERLAID SMOOTH OR FITTED CURVE ON PLOT.  ALSO
C              USED BY FACTOR AND CONDITIONING PLOTS.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/11
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--NOVEMBERR 1999.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES---------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOPC.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOSP.INC'
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASAN
      CHARACTER*4 IANGLU
      CHARACTER*4 IMPSW
      CHARACTER*4 IREPCH
      CHARACTER*4 ISQUAR
      CHARACTER*4 IVGMSW
      CHARACTER*4 IHGMSW
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IFTEXP
      CHARACTER*4 IFTORD
      CHARACTER*4 IOPTME
      CHARACTER*4 IOPTHE
C
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGUG
      CHARACTER*4 IBUGU2
      CHARACTER*4 IBUGU3
      CHARACTER*4 IBUGU4
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IBUGQ
C
      CHARACTER*4 ICONT
      CHARACTER*4 IPOWE
      CHARACTER*4 IWRITE
      CHARACTER*4 IFOUND
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISPMFI
      CHARACTER*4 ISPMTA
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICASP2
      CHARACTER*4 IFORSW
      CHARACTER*4 ICOMT
      CHARACTER*4 ICOM2T
C
      CHARACTER*4 IVARN1
      CHARACTER*4 IVARN2
C
      DIMENSION ICOLL(*)
      DIMENSION IVARN1(*)
      DIMENSION IVARN2(*)
C
      DIMENSION TEMP(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
C
      PARAMETER (MAXART=20)
      CHARACTER*4 ITHARG
      CHARACTER*4 ITHAR2
      CHARACTER*4 ITARGT
      CHARACTER*4 IANST
      DIMENSION ITHARG(MAXART)
      DIMENSION ITHAR2(MAXART)
      DIMENSION ITARG(MAXART)
      DIMENSION TARG(MAXART)
      DIMENSION ITARGT(MAXART)
      DIMENSION IANST(MAXSTR)
C
C-----COMMON VARIABLES (GENERAL)----------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-------------------------------------------------
C
      DO11I=1,MAXNXT
        TEMP(I)=0.0
        TEMP2(I)=0.0
        TEMP3(I)=0.0
        XTEMP1(I)=0.0
        XTEMP2(I)=0.0
   11 CONTINUE
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPM2')THEN
        WRITE(ICOUT,12)ICASPL,IVARN1(1),IVARN2(1)
   12   FORMAT('ICASPL,IVARN1(1),IVARN2(1) = ',A4,2X,2A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,14)ICOLL(1),NUMVAR,NPLOTP,IROW,ICOL
   14   FORMAT('ICOLL(1),NUMVAR,NPLOTP,IROW,ICOL = ',5I6)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
CCCCC NOTE: CURRENTLY, LOWESS (AND OTHER) TYPE FITS ONLY
CCCCC       USED FOR "PLOT Y X" TYPE COMMANDS.  NOTE THAT
CCCCC       SOME OF THE LOGIC OF THIS ROUTINE WILL NEED TO
CCCCC       BE UPDATED IF THIS CAPABILITY IS EXTENDED TO
CCCCC       ADDITIONAL PLOT TYPES (I.E., SOME CARE NEEDS TO BE 
CCCCC       TAKEN TO ENSURE THAT SUBSET CLAUSES ARE CARRIED 
CCCCC       ALONG PROPERLY).
C
C               ***************************************
C               **  STEP 1--                         **
C               ***************************************
C
      ICAPSW='OFF'
      IFORSW='-7'
      IERROR='NO'
C
C     PARTIAL REGRESSION, PARTIAL RESIDUAL, AND PARTIAL
C     LEVERAGE PLOT ALLOW FITTED CURVE TO OVERLAID.
C
      IF(ICASPL.EQ.'PREG' .OR. ICASPL.EQ.'PRES' .OR.
     1   ICASPL.EQ.'PLEV')THEN
        ICASP2='PLOT'
      ELSE
        IF(ICOM.NE.'PLOT')GOTO9000
      ENDIF
C
      ICOMT=ICOM
      ICOM2T=ICOM2
      ICASP2=ICASPL
      NUMART=NUMARG
      DO100I=1,NUMARG
        ITHARG(I)=IHARG(I)
        ITHAR2(I)=IHARG2(I)
        ITARG(I)=IARG(I)
        TARG(I)=ARG(I)
        ITARGT(I)=IARGT(I)
  100 CONTINUE
      DO102I=1,MAXSTR
        IANST(I)=IANS(I)
  102 CONTINUE
      IWIDT=IWIDTH
C
      IFLAG=3
      CALL DPSPM5(IFLAG,IMPSW,IMPCO,IMPNR,IMPNC,
     1            IBUGG2,ISUBRO,IFOUND,IERROR)
C
      IF(ISPMTA.EQ.'ON')THEN
        ISHIFT=1
        CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        ITAGCO=3
        DO119I=1,NUMARG
          IF(I.EQ.ITAGCO)GOTO119
          IHARG(I)=ITHARG(I)
          IHARG2(I)=ITHAR2(I)
          IARG(I)=ITARG(I)
          ARG(I)=TARG(I)
          IARGT(I)=ITARGT(I)
  119   CONTINUE
      ENDIF
C
      IF(ICASPL.EQ.'PREG' .OR. ICASPL.EQ.'PRES' .OR.
     1   ICASPL.EQ.'PLEV')THEN
         NUMARG=2
         ICOM='PLOT'
         ICOM2='    '
         IHARG(1)='YPLO'
         IHARG2(1)='T   '
         IHARG(2)='XPLO'
         IHARG2(2)='T   '
      ENDIF
C
      IF(ISPMFI.EQ.'LOES')THEN
        ICOM='LOWE'
        ICOM2='SS  '
        CALL DPLOW(ALOWFR,ALOWDG,ICAPSW,IFORSW,
     1             TEMP,TEMP2,XTEMP1,XTEMP2,MAXNXT,
     1             IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      ELSEIF(ISPMFI.EQ.'LINE')THEN
        ICOM='FIT '
        ICOM2='    '
        ICASAN='FIT'
        CALL DPFIT(ICAPSW,IFORSW,
     1             IBUGG2,IBUGG3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,
     1             IFOUND,IERROR)
      ELSEIF(ISPMFI.EQ.'QUAD')THEN
        ISHIFT=1
        CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGG2,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        ICOM='QUAD'
        ICOM2='RATI'
        IHARG(1)='FIT '
        IHARG2(1)='    '
        ICASAN='FIT'
        CALL DPFIT(ICAPSW,IFORSW,
     1             IBUGG2,IBUGG3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,
     1             IFOUND,IERROR)
      ELSEIF(ISPMFI.EQ.'SMOO')THEN
        ICOM='SMOO'
        ICOM2='TH  '
        ICASAN='SMOO'
        CALL DPSMOO(IBUGG2,IBUGG3,IBUGQ,IFOUND,IERROR)
      ENDIF
C
      ICOM='PLOT'
      ICOM2='    '
      ISHIFT=1
      IF(ISHIFT.GT.0)THEN
        CALL SHIFTR(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGG2,IERROR)
      ELSEIF(ISHIFT.LT.0)THEN
        CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGG2,IERROR)
      ENDIF
      IF(ISPMTA.EQ.'OFF')THEN
        ITEMP=2
      ELSE
        IWRITE='OFF'
        CALL MAXIM(TAGPLO,NPLOTP,IWRITE,XMAX,IBUGG3,IERROR)
        ITEMP=1+INT(XMAX)
        IF(ITEMP.LT.1.OR.ITEMP.GT.100)ITEMP=2
      ENDIF
C
      IF(ICASPL.EQ.'PREG' .OR. ICASPL.EQ.'PRES' .OR.
     1   ICASPL.EQ.'PLEV')THEN
        NUMARG=3
        ICOM='LET '
        ICOM2='    '
        IHARG(1)='XTEM'
        IHARG2(1)='P   '
        IHARG(2)='=   '
        IHARG2(2)='    '
        IHARG(3)='XPLO'
        IHARG2(3)='T   '
        IANS(1)='L   '
        IANS(2)='E   '
        IANS(3)='T   '
        IANS(4)='    '
        IANS(5)='X   '
        IANS(6)='T   '
        IANS(7)='E   '
        IANS(8)='M   '
        IANS(9)='P   '
        IANS(10)='    '
        IANS(11)='=   '
        IANS(12)='    '
        IANS(13)='X   '
        IANS(14)='P   '
        IANS(15)='L   '
        IANS(16)='O   '
        IANS(17)='T   '
        IWIDTH=17
        CALL DPLET(IANGLU,ISEED,IBUGG2,IBUGG3,IBUGCO,IBUGEV,IBUGQ,
     1             TEMP,TEMP2,XTEMP1,XTEMP2,MAXNXT,
     1             IFTEXP,IFTORD,IFORSW,
     1             ROOTAC,OPTACC,IOPTME,IOPTHE,
     1             ISUBRO,IFOUND,IERROR)
C
        IF(IERROR.EQ.'YES')GOTO9000
        ICOM='PLOT'
        ICOM2='    '
        IHARG(1)='PRED'
        IHARG2(1)='    '
        IHARG(2)='VS  '
        IHARG2(2)='    '
        IHARG(3)='XTEM'
        IHARG2(3)='P   '
      ELSE
        IHARG(1)='PRED'
        IHARG2(1)='    '
        IHARG(2)='VS  '
        IHARG2(2)='    '
        IHARG(3)=IVARN1(ICOL)
        IHARG2(3)=IVARN2(ICOL)
      ENDIF
      CALL DPPLOT(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1            IANGLU,MAXNPP,
     1            IBUGG2,IBUGG3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,
     1            IFOUND,IERROR)
      ICASPL=ICASP2
C
C
C               **************************************************
C               **   STEP 25--                                  **
C               **   PLOT THE CURRENT PLOT                      **
C               **************************************************
C
      ICONT=IDCONT(1)
      IPOWE=IDPOWE(1)
      NUMHPP=IDNHPP(1)
      IMPARG=2
      CALL DPGRAP(Y,X,X3D,D,N,NPLOTP,ICASPL,ICONT,IPOWE,NUMHPP,
     1            XMATN,YMATN,XMITN,YMITN,
     1            ISQUAR,
     1            IVGMSW,IHGMSW,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,
     1            IVSTAR,IVSTOP,IFUNC,NUMCHF,IREPCH,
     1            YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            IMPSW,IMPNR,IMPNC,IMPCO,IMPCO9,
     1            IMPARG,
     1            PMXMIN,PMXMAX,PMYMIN,PMYMAX,
     1            MAXCOL,
     1            DSIZE,DSYMB,DCOLOR,DFILL,
     1            ICAPSW,
     1            IBUGUG,IBUGU2,IBUGU3,IBUGU4,ISUBRO,
     1            IERROR)
C
      ICNTPL=ICNTPL+1
      IF(N.GT.0 .AND. IOUNI5.GT.0)THEN
        DO3115II=1,N
          WRITE(IOUNI5,3118)ICNTPL,Y(II),X(II),D(II)
 3115   CONTINUE
 3118   FORMAT(I12,3E15.7)
      ENDIF
C
      IF(IERROR.EQ.'NO')IAND1=IAND2
      IERROR='NO'
C
      NUMARG=NUMART
      ICOM=ICOMT
      ICOM2=ICOM2T
      DO900I=1,NUMARG
        IHARG(I)=ITHARG(I)
        IHARG2(I)=ITHAR2(I)
        IARG(I)=ITARG(I)
        ARG(I)=TARG(I)
        IARGT(I)=ITARGT(I)
  900 CONTINUE
      DO902I=1,MAXSTR
        IANS(I)=IANST(I)
  902 CONTINUE
      IWIDTH=IWIDT
C
      IFLAG=4
      CALL DPSPM5(IFLAG,IMPSW,IMPCO,IMPNR,IMPNC,
     1            IBUGG2,ISUBRO,IFOUND,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPM2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPM2--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPM3(ICASPL,IOUNI5,
     1                  IROW,ICOL,
     1                  PX2LD2,NPLOTP,
     1                  IFORSW,
     1                  ISPX2L,ISPX2P,ISPX2S,
     1                  IHRIGH,IHRIG2,IHWUSE,
     1                  ISUBN1,ISUBN2,MESSAG,
     1                  IBUGG2,ISUBRO,IERROR)
C
C     PURPOSE--UTILTY ROUTINE FOR SCATTER PLOT MATRIX.  GENERATE
C              AN X2LABEL BASED ON CORRELATION, EFFECT SIZE, OR
C              NUMBER OF DEFECTIVES.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/11
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--NOVEMBERR 1999.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES---------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOPC.INC'
      INCLUDE 'DPCOHK.INC'
C
      CHARACTER*4 IBUGG2
      CHARACTER*4 ICASPL
      CHARACTER*4 IFORSW
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISPX2L
      CHARACTER*16 ISPX2P
      CHARACTER*16 ISPX2S
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHWUSE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 MESSAG
      CHARACTER*4 IXVAL
C
C-----COMMON VARIABLES (GENERAL)----------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-------------------------------------------------
C
C               ***************************************
C               **  STEP 1--                         **
C               ***************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'SPM3')THEN
        WRITE(ICOUT,12)ICASPL,NPLOTP
   12   FORMAT('ICASPL,NPLOTP = ',A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IERROR='NO'
      IF(ISPX2L.EQ.'OFF ')GOTO9000
      IF(ISPX2L.EQ.'NONE')GOTO9000
      IF(ISPX2L.EQ.'BLAN')GOTO9000
C
      ALOWH=0.0
      ACORR=0.0
      GRAND=CPUMIN
      NACC=0
      NREJ=0
C
      IHRIGH='ALOW'
      IHRIG2='HIGH'
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHRIGH,IHRIG2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'NO')ALOWH=VALUE(ILOCP)
C
      IHRIGH='PLOT'
      IHRIG2='CORR'
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHRIGH,IHRIG2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'NO')ACORR=VALUE(ILOCP)
C
      IHRIGH='NACC'
      IHRIG2='EPT '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHRIGH,IHRIG2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'NO')NACC=INT(VALUE(ILOCP)+0.5)
C
      IHRIGH='NREJ'
      IHRIG2='ECT '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHRIGH,IHRIG2,IHWUSE,
     1             IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1             ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IERROR='NO'
C
      IHRIGH='GRAN'
      IHRIG2='DSTA'
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHRIGH,IHRIG2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'NO')GRAND=VALUE(ILOCP)
C
      NUMDIG=-1
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'10')NUMDIG=10
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      IF(ISPX2L.EQ.'CORR'.OR.ISPX2L.EQ.'PCOR')THEN
        IWRITE='OFF'
        IF(ISPX2P.EQ.'DEFAULT')THEN
          IX2LTE(1)='C'
          IX2LTE(2)='O'
          IX2LTE(3)='R'
          IX2LTE(4)='R'
          IX2LTE(5)=' '
          IX2LTE(6)='='
          IX2LTE(7)=' '
          NCX2LA=7
        ELSEIF(ISPX2P.EQ.' ')THEN
          NCX2LA=0
        ELSE
          DO110I=16,1,-1
            IF(ISPX2P(I:I).NE.' ')THEN
              NCX2LA=I
              DO120J=1,NCX2LA
                IX2LTE(J)(1:1)=ISPX2P(J:J)
  120         CONTINUE
              GOTO129
            ENDIF
  110     CONTINUE
  129     CONTINUE
        ENDIF
        CONST=0.5
        IF(ACORR.LT.0.0)CONST=-0.5
        IF(ISPX2L.EQ.'PCOR')ACORR=100.0*ACORR
        IF(IOUNI5.GT.0)WRITE(IOUNI5,'(G15.7)')ACORR
        NDEF=3
        IF(ISPX2L.EQ.'PCOR')NDEF=1
        IF(NUMDIG.LT.0)THEN
          ICORR=INT(ACORR*10**NDEF + CONST)
          ACORR=REAL(ICORR)/(10**NDEF)
        ELSE
          ICORR=INT(ACORR*10**NUMDIG + CONST)
          ACORR=REAL(ICORR)/(10**NUMDIG)
        ENDIF
        NCX2LA=NCX2LA+1
        CALL DPCONH(ICORR,ACORR,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
        NCX2LA=NCX2LA+NH
        IF(ISPX2S.EQ.'DEFAULT')THEN
          IF(ISPX2L.EQ.'PCOR')THEN
            NCX2LA=NCX2LA+1
            IX2LTE(NCX2LA)='%'
          ENDIF
        ELSEIF(ISPX2S.NE.' ')THEN
          DO210I=16,1,-1
            IF(ISPX2S(I:I).NE.' ')THEN
              NTEMP=I
              DO220J=1,NTEMP
                NCX2LA=NCX2LA+1
                IX2LTE(NCX2LA)(1:1)=ISPX2S(J:J)
  220         CONTINUE
              GOTO229
            ENDIF
  210     CONTINUE
  229     CONTINUE
        ENDIF
        CONST=0.5
        PX2LDS=-((PYMAX-PYMIN)-PX2LD2)
      ELSEIF(ISPX2L.EQ.'PACC')THEN
        IF(ISPX2P.EQ.'DEFAULT')THEN
          NCX2LA=0
        ELSEIF(ISPX2P.EQ.' ')THEN
          NCX2LA=0
        ELSE
          DO310I=16,1,-1
            IF(ISPX2P(I:I).NE.' ')THEN
              NCX2LA=I
              DO320J=1,NCX2LA
                IX2LTE(J)(1:1)=ISPX2P(J:J)
  320         CONTINUE
              GOTO329
            ENDIF
  310     CONTINUE
  329     CONTINUE
        ENDIF
        CONST=0.5
        AV=REAL(NACC)/REAL(NACC+NREJ)
        AV=100.0*AV
        IF(IOUNI5.GT.0)WRITE(IOUNI5,'(G15.7)')AV
        IF(AV.LT.0.0)CONST=-0.5
        IF(NUMDIG.GE.0)THEN
          IVAL=INT(AV*10**NUMDIG + CONST)
          AV=REAL(IVAL)/(10**NUMDIG)
        ENDIF
        NCX2LA=NCX2LA+1
        CALL DPCONH(IVAL,AV,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
        NCX2LA=NCX2LA+NH
        IF(ISPX2S.EQ.'DEFAULT')THEN
          CONTINUE
        ELSEIF(ISPX2P.NE.' ')THEN
          DO360I=16,1,-1
            IF(ISPX2S(I:I).NE.' ')THEN
              NTEMP=I
              DO370J=1,NTEMP
                NCX2LA=NCX2LA+1
                IX2LTE(NCX2LA)(1:1)=ISPX2P(J:J)
  370         CONTINUE
              GOTO379
            ENDIF
  360     CONTINUE
  379     CONTINUE
        ENDIF
        CONST=0.5
        PX2LDS=-((PYMAX-PYMIN)-PX2LD2)
C
      ELSEIF(ISPX2L.EQ.'NACC')THEN
        IF(ISPX2P.EQ.'DEFAULT')THEN
          NCX2LA=0
        ELSEIF(ISPX2P.EQ.' ')THEN
          NCX2LA=0
        ELSE
          DO410I=16,1,-1
            IF(ISPX2P(I:I).NE.' ')THEN
              NCX2LA=I
              DO420J=1,NCX2LA
                IX2LTE(J)(1:1)=ISPX2P(J:J)
  420         CONTINUE
              GOTO429
            ENDIF
  410     CONTINUE
  429     CONTINUE
        ENDIF
        CONST=0.5
        AV=REAL(NACC)
        IF(IOUNI5.GT.0)WRITE(IOUNI5,'(G15.7)')AV
        IF(AV.LT.0.0)CONST=-0.5
        IF(NUMDIG.GE.0)THEN
          IVAL=INT(AV*10**NUMDIG + CONST)
          AV=REAL(IVAL)/(10**NUMDIG)
        ENDIF
        NCX2LA=NCX2LA+1
        CALL DPCONH(IVAL,AV,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
        NCX2LA=NCX2LA+NH
        IF(ISPX2S.EQ.'DEFAULT')THEN
          CONTINUE
        ELSEIF(ISPX2P.NE.' ')THEN
          DO460I=16,1,-1
            IF(ISPX2S(I:I).NE.' ')THEN
              NTEMP=I
              DO470J=1,NTEMP
                NCX2LA=NCX2LA+1
                IX2LTE(NCX2LA)(1:1)=ISPX2P(J:J)
  470         CONTINUE
              GOTO479
            ENDIF
  460     CONTINUE
  479     CONTINUE
        ENDIF
        CONST=0.5
        PX2LDS=-((PYMAX-PYMIN)-PX2LD2)
C
      ELSEIF(ISPX2L.EQ.'AT  ')THEN
        IF(ISPX2P.EQ.'DEFAULT')THEN
          NCX2LA=0
        ELSEIF(ISPX2P.EQ.' ')THEN
          NCX2LA=0
        ELSE
          DO810I=16,1,-1
            IF(ISPX2P(I:I).NE.' ')THEN
              NCX2LA=I
              DO820J=1,NCX2LA
                IX2LTE(J)(1:1)=ISPX2P(J:J)
  820         CONTINUE
              GOTO829
            ENDIF
  810     CONTINUE
  829     CONTINUE
        ENDIF
        CONST=0.5
        AV=REAL(NACC)
        AV1=AV
        IF(AV.LT.0.0)CONST=-0.5
        IF(NUMDIG.GE.0)THEN
          IVAL=INT(AV*10**NUMDIG + CONST)
          AV=REAL(IVAL)/(10**NUMDIG)
        ENDIF
        NCX2LA=NCX2LA+1
        CALL DPCONH(IVAL,AV,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
        NCX2LA=NCX2LA+NH
        NCX2LA=NCX2LA+1
        IX2LTE(NCX2LA)(1:1)='/'
        AV=REAL(NACC+NREJ)
        IF(IOUNI5.GT.0)WRITE(IOUNI5,'(2G15.7)')AV1,AV
        IF(AV.LT.0.0)CONST=-0.5
        IF(NUMDIG.GE.0)THEN
          IVAL=INT(AV*10**NUMDIG + CONST)
          AV=REAL(IVAL)/(10**NUMDIG)
        ENDIF
        NCX2LA=NCX2LA+1
        CALL DPCONH(IVAL,AV,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
        NCX2LA=NCX2LA+NH
        IF(ISPX2S.EQ.'DEFAULT')THEN
          CONTINUE
        ELSEIF(ISPX2P.NE.' ')THEN
          DO860I=16,1,-1
            IF(ISPX2S(I:I).NE.' ')THEN
              NTEMP=I
              DO870J=1,NTEMP
                NCX2LA=NCX2LA+1
                IX2LTE(NCX2LA)(1:1)=ISPX2P(J:J)
  870         CONTINUE
              GOTO879
            ENDIF
  860     CONTINUE
  879     CONTINUE
        ENDIF
        CONST=0.5
        PX2LDS=-((PYMAX-PYMIN)-PX2LD2)
C
      ELSEIF(ISPX2L.EQ.'ATP ')THEN
        IF(ISPX2P.EQ.'DEFAULT')THEN
          NCX2LA=0
        ELSEIF(ISPX2P.EQ.' ')THEN
          NCX2LA=0
        ELSE
          DO710I=16,1,-1
            IF(ISPX2P(I:I).NE.' ')THEN
              NCX2LA=I
              DO720J=1,NCX2LA
                IX2LTE(J)(1:1)=ISPX2P(J:J)
  720         CONTINUE
              GOTO729
            ENDIF
  710     CONTINUE
  729     CONTINUE
        ENDIF
        CONST=0.5
        AV=REAL(NACC)
        AV1=AV
        IF(AV.LT.0.0)CONST=-0.5
        IF(NUMDIG.GE.0)THEN
          IVAL=INT(AV*10**NUMDIG + CONST)
          AV=REAL(IVAL)/(10**NUMDIG)
        ENDIF
        NCX2LA=NCX2LA+1
        CALL DPCONH(IVAL,AV,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
        NCX2LA=NCX2LA+NH
        NCX2LA=NCX2LA+1
        IX2LTE(NCX2LA)(1:1)='/'
        AV=REAL(NACC+NREJ)
        AV2=AV
        IF(AV.LT.0.0)CONST=-0.5
        IF(NUMDIG.GE.0)THEN
          IVAL=INT(AV*10**NUMDIG + CONST)
          AV=REAL(IVAL)/(10**NUMDIG)
        ENDIF
        NCX2LA=NCX2LA+1
        CALL DPCONH(IVAL,AV,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
        NCX2LA=NCX2LA+NH
        NCX2LA=NCX2LA+1
        IX2LTE(NCX2LA)(1:1)=' '
        NCX2LA=NCX2LA+1
        IX2LTE(NCX2LA)(1:1)='='
        NCX2LA=NCX2LA+1
        IX2LTE(NCX2LA)(1:1)=' '
        AV=REAL(NACC)/REAL(NACC+NREJ)
        AV=100.0*AV
        IF(IOUNI5.GT.0)WRITE(IOUNI5,'(3G15.7)')AV1,AV2,AV
        IF(AV.LT.0.0)CONST=-0.5
        IF(NUMDIG.GE.0)THEN
          IVAL=INT(AV*10**NUMDIG + CONST)
          AV=REAL(IVAL)/(10**NUMDIG)
        ENDIF
        NCX2LA=NCX2LA+1
        CALL DPCONH(IVAL,AV,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
        NCX2LA=NCX2LA+NH
        IF(ISPX2S.EQ.'DEFAULT')THEN
          CONTINUE
        ELSEIF(ISPX2P.NE.' ')THEN
          DO760I=16,1,-1
            IF(ISPX2S(I:I).NE.' ')THEN
              NTEMP=I
              DO770J=1,NTEMP
                NCX2LA=NCX2LA+1
                IX2LTE(NCX2LA)(1:1)=ISPX2P(J:J)
  770         CONTINUE
              GOTO779
            ENDIF
  760     CONTINUE
  779     CONTINUE
        ENDIF
        CONST=0.5
        PX2LDS=-((PYMAX-PYMIN)-PX2LD2)
C
      ELSEIF(ISPX2L.EQ.'EFFE' .OR. ISPX2L.EQ.'REFF')THEN
        IF(ISPX2P.EQ.'DEFAULT')THEN
          IX2LTE(1)='E'
          IX2LTE(2)='F'
          IX2LTE(3)='F'
          IX2LTE(4)='E'
          IX2LTE(5)='C'
          IX2LTE(6)='T'
          IX2LTE(7)=' '
          IX2LTE(8)='='
          IX2LTE(9)=' '
          NCX2LA=9
        ELSEIF(ISPX2P.EQ.' ')THEN
          NCX2LA=0
        ELSE
          DO610I=16,1,-1
            IF(ISPX2P(I:I).NE.' ')THEN
              NCX2LA=I
              DO620J=1,NCX2LA
                IX2LTE(J)(1:1)=ISPX2P(J:J)
  620         CONTINUE
              GOTO629
            ENDIF
  610     CONTINUE
  629     CONTINUE
        ENDIF
        CONST=0.5
C
C       2018/04: SIGN IS WRONG DIRECTION
C
CCCCC   AVAL=ALOWH
        AVAL=-ALOWH
        IF(IOUNI5.GT.0)WRITE(IOUNI5,'(G15.7)')AVAL
        IF(AVAL.LT.0.0)CONST=-0.5
        IF(NUMDIG.GE.0)THEN
          IVAL=INT(AVAL*10**NUMDIG + CONST)
          AVAL=REAL(IVAL)/(10**NUMDIG)
        ENDIF
        NCX2LA=NCX2LA+1
        CALL DPCONH(IVAL,AVAL,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
        NCX2LA=NCX2LA+NH
        IF(ISPX2S.EQ.'DEFAULT')THEN
          CONTINUE
        ELSEIF(ISPX2P.NE.' ')THEN
          DO660I=16,1,-1
            IF(ISPX2S(I:I).NE.' ')THEN
              NTEMP=I
              DO670J=1,NTEMP
                NCX2LA=NCX2LA+1
                IX2LTE(NCX2LA)(1:1)=ISPX2P(J:J)
  670         CONTINUE
              GOTO679
            ENDIF
  660     CONTINUE
  679     CONTINUE
        ENDIF
        CONST=0.5
        PX2LDS=-((PYMAX-PYMIN)-PX2LD2)
C
C       NOW ADD RELATIVE EFFECTS IF REQUESTED
C
        AVAL=GRAND
        IF(ISPX2L.EQ.'REFF' .AND. AVAL.NE.CPUMIN)THEN
          CONST=0.5
          IF(AVAL.LT.0.0)CONST=-0.5
          IVAL=INT(AVAL*10**2 + CONST)
          AVAL=REAL(IVAL)/(10**2)
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)=' '
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)=' '
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)='('
          NCX2LA=NCX2LA+1
          CALL DPCONH(IVAL,AVAL,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
          NCX2LA=NCX2LA+NH
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)='%'
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)=')'
        ENDIF
C
      ELSEIF(ISPX2L.EQ.'FILL' .OR. ISPX2L.EQ.'FREF')THEN
        NCX2LA=0
        IF(IROW.LE.9)THEN
          NCX2LA=NCX2LA+1
          WRITE(IX2LTE(NCX2LA)(1:1),'(I1)')IROW
        ELSEIF(IROW.LE.99)THEN
          WRITE(IXVAL(1:2),'(I2)')IROW
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)=IXVAL(1:1)
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)=IXVAL(2:2)
        ENDIF
        IF(IROW.NE.ICOL)THEN
          IF(ICOL.LE.9)THEN
            NCX2LA=NCX2LA+1
            WRITE(IX2LTE(NCX2LA)(1:1),'(I1)')ICOL
          ELSEIF(ICOL.LE.99)THEN
            WRITE(IXVAL(1:2),'(I2)')ICOL
            NCX2LA=NCX2LA+1
            IX2LTE(NCX2LA)(1:1)=IXVAL(1:1)
            NCX2LA=NCX2LA+1
            IX2LTE(NCX2LA)(1:1)=IXVAL(2:2)
          ENDIF
        ENDIF
        NCX2LA=NCX2LA+1
        IX2LTE(NCX2LA)(1:1)=':'
        NCX2LA=NCX2LA+1
        NCX2LA=NCX2LA+1
        IX2LTE(NCX2LA)(1:1)=' '
        CONST=0.5
CCCCC   AVAL=ALOWH
        AVAL=-ALOWH
        IF(IOUNI5.GT.0)WRITE(IOUNI5,'(G15.7)')AVAL
        IF(AVAL.LT.0.0)CONST=-0.5
        IF(NUMDIG.GE.0)THEN
          IVAL=INT(AVAL*10**NUMDIG + CONST)
          AVAL=REAL(IVAL)/(10**NUMDIG)
        ENDIF
        NCX2LA=NCX2LA+1
        CALL DPCONH(IVAL,AVAL,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
        NCX2LA=NCX2LA+NH
        CONST=0.5
        PX2LDS=-((PYMAX-PYMIN)-PX2LD2)
C
C       NOW ADD RELATIVE EFFECTS IF REQUESTED
C
        AVAL2=GRAND
        IF(AVAL2.NE.0.0)THEN
          AVAL=100.0*(AVAL/AVAL2)
        ELSE
          AVAL=CPUMIN
        ENDIF
        IF(ISPX2L.EQ.'FREF' .AND. AVAL.NE.CPUMIN)THEN
          CONST=0.5
          IF(AVAL.LT.0.0)CONST=-0.5
          IVAL=INT(100.0*AVAL + CONST)
          AVAL=REAL(IVAL)/100.0
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)=' '
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)=' '
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)='('
          NCX2LA=NCX2LA+1
          CALL DPCONH(IVAL,AVAL,IX2LTE(NCX2LA),NH,IBUGG2,IERROR)
          NCX2LA=NCX2LA+NH
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)='%'
          NCX2LA=NCX2LA+1
          IX2LTE(NCX2LA)(1:1)=')'
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPM3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPM3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)J,NCX2LA,PX2LDS
 9013   FORMAT('J,NCX2LA,PX2LDS = ',2I8,G15.7)
        CALL DPWRST('XXX','BUG ')
        IF(NCX2LA.GT.0)THEN
          DO9014I=1,NCX2LA
            WRITE(ICOUT,9015)I,IX2LTE(I)(1:1)
 9015       FORMAT('I,IX2LTE(J)(1:1) = ',I6,A1)
            CALL DPWRST('XXX','BUG ')
 9014     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPM4(ICASPL,IOPTN,IDX,IDY,
     1                  ISUBNU,
     1                  ISUBSW,
     1                  ASUBXL,ASUBXU,ASUBYL,ASUBYU,
     1                  ISUBN9,
     1                  ISUBSZ,
     1                  ASBXL2,ASBXU2,ASBYL2,ASBYU2,
     1                  PSPXSL,PSPXSU,PSPYSL,PSPYSU,
     1                  IBUGG2,ISUBRO,IERROR)
C
C     PURPOSE--UTILTY ROUTINE FOR SCATTER PLOT MATRIX.  SET SUBREGION
C              LIMITS (IF SPECIFIED BY USER).
C              IOPTN = 1  - SAVE CURENT SETTINGS
C              IOPTN = 2  - RESTORE CURENT SETTINGS
C              IOPTN = 3  - SET SUBREGION LIMITS FOR GIVEN Y, X
C                           PAIR OF VARIABLES.  NOTE IF LIMIT SET TO
C                           CPUMIN OR CPUMAX, THEN NOTHING SET.
C                           ALSO, MATRIX PLOTS ONLY RESET FIRST
C                           SUBREGION (OTHERS ARE LEFT AS IS)
C              IDX   = SETTING OF PSPXSL, PSPXSU TO USE
C              IDY   = SETTING OF PSPYSL, PSPYSU TO USE
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/12
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--DECEMBER  1999.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES---------------
C
      CHARACTER*4 IBUGG2
      CHARACTER*4 ICASPL
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBSW
      CHARACTER*4 ISUBSZ
C
      DIMENSION ISUBSW(*)
      DIMENSION ASUBXL(*)
      DIMENSION ASUBXU(*)
      DIMENSION ASUBYL(*)
      DIMENSION ASUBYU(*)
      DIMENSION PSPXSL(*)
      DIMENSION PSPXSU(*)
      DIMENSION PSPYSL(*)
      DIMENSION PSPYSU(*)
C
C-----COMMON VARIABLES (GENERAL)----------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-------------------------------------------------
C
      IF(ISUBRO.EQ.'SPM4')THEN
        WRITE(ICOUT,12)ICASPL,IFOUND
   12   FORMAT('ICASPL,IFOUND = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IERROR='NO'
C
C               ***************************************
C               **  STEP 1--SAVE INITIAL SETTINGS    **
C               ***************************************
C
      IF(IOPTN.EQ.1)THEN
        ISUBSZ=ISUBSW(1)
        ASBXL2=ASUBXL(1)
        ASBXU2=ASUBXU(1)
        ASBYL2=ASUBYL(1)
        ASBYU2=ASUBYU(1)
        ISUBN9=ISUBNU
      ELSEIF(IOPTN.EQ.2)THEN
        ISUBSW(1)=ISUBSZ
        ASUBXL(1)=ASBXL2
        ASUBXU(1)=ASBXU2
        ASUBYL(1)=ASBYL2
        ASUBYU(1)=ASBYU2
        ISUBNU=ISUBN9
      ELSEIF(IOPTN.EQ.3)THEN
        IF(PSPXSL(IDX).NE.CPUMIN .AND. PSPXSU(IDX).NE.CPUMIN)THEN
          ISUBSW(1)='ON'
          IF(ISUBNU.EQ.0)ISUBNU=1
          ASUBXL(1)=PSPXSL(IDX)
          ASUBXU(1)=PSPXSU(IDX)
        ENDIF
        IF(PSPYSL(IDY).NE.CPUMIN .AND. PSPYSU(IDY).NE.CPUMIN)THEN
          ISUBSW(1)='ON'
          IF(ISUBNU.EQ.0)ISUBNU=1
          ASUBYL(1)=PSPYSL(IDY)
          ASUBYU(1)=PSPYSU(IDY)
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPM4')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPM4--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPM5(IFLAG,IMPSW,IMPCO,IMPNR,IMPNC,
     1                  IBUGG2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--UTILTY ROUTINE FOR SCATTER PLOT MATRIX.  DO ONE OF THE
C              FOLLOWING:
C                 1) SAVE CURRENT PLOT CONTROL SETTINGS FOR PLOT
C                 2) RESTORE CURRENT PLOT CONTROL SETTINGS FOR PLOT
C                 3) SAVE CURRENT PLOT CONTROL SETTINGS FOR OVERLAID FIT
C                 4) RESTORE CURRENT PLOT CONTROL SETTINGS FOR OVERLAID FIT
C               ALSO USED BY CONDITION PLOT AND FACTOR PLOT
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/7
C     ORIGINAL VERSION--JULY 2011.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES---------------
C
      CHARACTER*4 IMPSW
      CHARACTER*4 IBUGG2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C-----COMMON VARIABLES (GENERAL)----------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOPC.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOSP.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-------------------------------------------------
C
      IFOUND='YES'
      IERROR='NO'
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPM5')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSPM5--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************************************
C               **  STEP 0--SAVE/RESTORE PLOT CONTROL SETTINGS THAT ARE **
C               **          COMMON TO BOTH CASES.                       **
C               **********************************************************
C
      IF(IFLAG.EQ.1 .OR. IFLAG.EQ.3)THEN
C
        GY1MNS=GY1MIN
        GY1MXS=GY1MAX
        GY2MNS=GY2MIN
        GY2MXS=GY2MAX
        GX1MNS=GX1MIN
        GX1MXS=GX1MAX
        GX2MNS=GX2MIN
        GX2MXS=GX2MAX
C
        IY1MNS=IY1MIN
        IY1MXS=IY1MAX
        IY2MNS=IY2MIN
        IY2MXS=IY2MAX
        IX1MNS=IX1MIN
        IX1MXS=IX1MAX
        IX2MNS=IX2MIN
        IX2MXS=IX2MAX
C
C           **********************************************************
C           **  STEP 1--SAVE PLOT CONTROL SETTINGS FOR INITIAL PLOT **
C           **********************************************************
C
        IF(IFLAG.EQ.1)THEN
C
          PXMN2=PXMIN
          PXMX2=PXMAX
          PYMN2=PYMIN
          PYMX2=PYMAX
          PWXMN2=PWXMIN
          PWXMX2=PWXMAX
          PWYMN2=PWYMIN
          PWYMX2=PWYMAX
          IF(ISPMFR.EQ.'DEFA')THEN
            PXMIN=0.0
            PXMAX=100.0
            PYMIN=0.0
            PYMAX=100.0
          ENDIF
C
          IFENC2=IFENSW
          IERAS2=IERASW
          IPPTB2=IPPTBI
          ISORS2=ISORSW
C
          IX1TSV=IX1TSW
          IX2TSV=IX2TSW
          IY1TSV=IY1TSW
          IY2TSV=IY2TSW
          IX1ZSV=IX1ZSW
          IX2ZSV=IX2ZSW
          IY1ZSV=IY1ZSW
          IY2ZSV=IY2ZSW
          PX1LD2=PX1LDS
          PX2LD2=PX2LDS
          PY1LD2=PY1LDS
          PY1LA2=PY1LAN
          IY1LJ2=IY1LJU
          IY1LD2=IY1LDI
          IX1FSV=IX1FSW
          IX2FSV=IX2FSW
          IY1FSV=IY1FSW
          IY2FSV=IY2FSW
          PX1ZD2=PX1ZDS
          PX2ZD2=PX2ZDS
          PY1ZD2=PY1ZDS
          PY2ZD2=PY2ZDS
          DO1010I=1,100
            ICHAP2(I)=ICHAPA(I)
            ILINP2(I)=ILINPA(I)
            IBARS2(I)=IBARSW(I)
            ISPIS2(I)=ISPISW(I)
 1010     CONTINUE
C
          DO1020I=1,MAXCH
            IX1LT2(I)=IX1LTE(I)
            IX2LT2(I)=IX2LTE(I)
            IY1LT2(I)=IY1LTE(I)
            IY2LT2(I)=IY2LTE(I)
 1020     CONTINUE
          NCX1L2=NCX1LA
          NCX2L2=NCX2LA
          NCY1L2=NCY1LA
          NCY2L2=NCY2LA
C
          DO1030I=1,MAXCH
            ITITSV(I)=ITITTE(I)
 1030     CONTINUE
          NCTITS=NCTITL
          PTITDZ=PTITDS
C
C           **********************************************************
C           **  STEP 3--SAVE PLOT CONTROL SETTINGS FOR OVERLAID PLOT *
C           **********************************************************
C
        ELSEIF(IFLAG.EQ.3)THEN
C
          DO3010I=1,MAXSUB
            ISU2SW(I)=ISUBSW(I)
            ISUBSW(I)='OFF'
 3010     CONTINUE
C
          DO3020I=1,100
            ILI2CO(I)=ILINCO(I)
            PLI2TH(I)=PLINTH(I)
            ICH2PO(I)=ICHAPO(I)
            ICH2FO(I)=ICHAFO(I)
            ICH2CA(I)=ICHACA(I)
            ICH2JU(I)=ICHAJU(I)
            ICH2DI(I)=ICHADI(I)
            ICH2FI(I)=ICHAFI(I)
            ICH2CO(I)=ICHACO(I)
            PCH2HE(I)=PCHAHE(I)
            PCH2WI(I)=PCHAWI(I)
            PCH2VG(I)=PCHAVG(I)
            PCH2HG(I)=PCHAHG(I)
            PCH2HO(I)=PCHAHO(I)
            PCH2VO(I)=PCHAVO(I)
            ACH2AN(I)=ACHAAN(I)
 3020     CONTINUE
C
          GY1MIN=FY1MNZ
          GY1MAX=FY1MXZ
          GY2MIN=GY1MIN
          GY2MAX=GY1MAX
          GX1MIN=FX1MNZ
          GX1MAX=FX1MXZ
          GX2MIN=GX1MIN
          GX2MAX=GX1MAX
          IY1MIN='FIXE'
          IY1MAX='FIXE'
          IY2MIN='FIXE'
          IY2MAX='FIXE'
          IX1MIN='FIXE'
          IX1MAX='FIXE'
          IX2MIN='FIXE'
          IX2MAX='FIXE'
          IX1TSW='OFF'
          IX1ZSW='OFF'
          IX2TSW='OFF'
          IX2ZSW='OFF'
          IY1TSW='OFF'
          IY1ZSW='OFF'
          IY2TSW='OFF'
          IY2ZSW='OFF'
C
CCCCC     NOTE: SHOULD ITEMP BE PASSED AS ARGUMENT?  NEED TO
CCCCC           INVESTIGATE THIS FURTHER.
C
          ITEMP=1
          ICHAPA(1)=ICHAP2(ITEMP)
          ILINPA(1)=ILINP2(ITEMP)
          ILINCO(1)=ILI2CO(ITEMP)
          PLINTH(1)=PLI2TH(ITEMP)
          ICHAPO(1)=ICH2PO(ITEMP)
          ICHAFO(1)=ICH2FO(ITEMP)
          ICHACA(1)=ICH2CA(ITEMP)
          ICHAJU(1)=ICH2JU(ITEMP)
          ICHADI(1)=ICH2DI(ITEMP)
          ICHAFI(1)=ICH2FI(ITEMP)
          ICHACO(1)=ICH2CO(ITEMP)
          PCHAHE(1)=PCH2HE(ITEMP)
          PCHAWI(1)=PCH2WI(ITEMP)
          PCHAVG(1)=PCH2VG(ITEMP)
          PCHAHG(1)=PCH2HG(ITEMP)
          PCHAHO(1)=PCH2HO(ITEMP)
          PCHAVO(1)=PCH2VO(ITEMP)
          ACHAAN(1)=ACH2AN(ITEMP)
        ENDIF
      ELSEIF(IFLAG.EQ.2 .OR. IFLAG.EQ.4)THEN
C
        GX1MIN=GX1MNS
        GX1MAX=GX1MXS
        GX2MIN=GX2MNS
        GX2MAX=GX2MXS
        GY1MIN=GY1MNS
        GY1MAX=GY1MXS
        GY2MIN=GY2MNS
        GY2MAX=GY2MXS
C
        IX1MIN=IX1MNS
        IX1MAX=IX1MXS
        IX2MIN=IX2MNS
        IX2MAX=IX2MXS
        IY1MIN=IY1MNS
        IY1MAX=IY1MXS
        IY2MIN=IY2MNS
        IY2MAX=IY2MXS
C
C         *********************************************************
C         **  STEP 2--RESTORE PLOT CONTROL SETTINGS FOR INITIAL  **
C         **          PLOT                                       **
C         *********************************************************
C
        IF(IFLAG.EQ.2)THEN
C
          PWXMIN=PWXMN2
          PWXMAX=PWXMX2
          PWYMIN=PWYMN2
          PWYMAX=PWYMX2
          PXMIN=PXMN2
          PXMAX=PXMX2
          PYMIN=PYMN2
          PYMAX=PYMX2
C
          IERASW=IERAS2
          IFENSW=IFENC2
          ISORSW=ISORS2
          IPPTBI=IPPTB2
C
          IX1TSW=IX1TSV
          IX2TSW=IX2TSV
          IY1TSW=IY1TSV
          IY2TSW=IY2TSV
          IX1ZSW=IX1ZSV
          IX2ZSW=IX2ZSV
          IY1ZSW=IY1ZSV
          IY2ZSW=IY2ZSV
          PX1LDS=PX1LD2
          PX2LDS=PX2LD2
          PY1LDS=PY1LD2
          PY1LAN=PY1LA2
          IY1LJU=IY1LJ2
          IY1LDI=IY1LD2
          PX1ZDS=PX1ZD2
          PX2ZDS=PX2ZD2
          PY1ZDS=PY1ZD2
          PY2ZDS=PY2ZD2
C
          DO2010I=1,100
            ICHAPA(I)=ICHAP2(I)
            ILINPA(I)=ILINP2(I)
            IBARSW(I)=IBARS2(I)
            ISPISW(I)=ISPIS2(I)
 2010   CONTINUE
C
          IMPSW='OFF'
          IMPCO=1
          IMPNR=IMPNR2
          IMPNC=IMPNC2
C
          DO2020I=1,MAXCH
            IX1LTE(I)=IX1LT2(I)
            IX2LTE(I)=IX2LT2(I)
            IY1LTE(I)=IY1LT2(I)
            IY2LTE(I)=IY2LT2(I)
 2020   CONTINUE
          NCX1LA=NCX1L2
          NCX2LA=NCX2L2
          NCY1LA=NCY1L2
          NCY2LA=NCY2L2
          DO2030I=1,MAXCH
            ITITTE(I)=ITITSV(I)
 2030     CONTINUE
          NCTITL=NCTITS
          PTITDS=PTITDZ
C
C           **********************************************************
C           **  STEP 4--RESTORE PLOT CONTROL SETTINGS FOR OVERLAID  **
C           **          PLOT                                        **
C           **********************************************************
C
        ELSEIF(IFLAG.EQ.4)THEN
C
          DO4010I=1,100
            ILINCO(I)=ILI2CO(I)
            PLINTH(I)=PLI2TH(I)
            ICHAPO(I)=ICH2PO(I)
            ICHAFO(I)=ICH2FO(I)
            ICHACA(I)=ICH2CA(I)
            ICHAJU(I)=ICH2JU(I)
            ICHADI(I)=ICH2DI(I)
            ICHAFI(I)=ICH2FI(I)
            ICHACO(I)=ICH2CO(I)
            PCHAHE(I)=PCH2HE(I)
            PCHAWI(I)=PCH2WI(I)
            PCHAVG(I)=PCH2VG(I)
            PCHAHG(I)=PCH2HG(I)
            PCHAHO(I)=PCH2HO(I)
            PCHAVO(I)=PCH2VO(I)
            ACHAAN(I)=ACH2AN(I)
 4010     CONTINUE
        ENDIF
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'SPM2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPM5--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPPA(IHARG,IHARG2,NUMARG,IDEFSL,MAXSPI,ISPILI,
CCCCC AUGUST 1995.  ADD IHARG2 FOR DASH2, ETC
CCCCC SUBROUTINE DPSPPA(IHARG,NUMARG,IDEFSL,MAXSPI,ISPILI,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE SPIKE LINE PATTERNS.
C              THESE ARE LOCATED IN THE VECTOR ISPILI(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEFSL
C                     --MAXSPI
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--ISPILI (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --AUGUST    1995.  DASH2 BUG
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      CHARACTER*4 IHARG2
      CHARACTER*4 IDEFSL
      CHARACTER*4 ISPILI
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      DIMENSION IHARG2(*)
      DIMENSION ISPILI(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPSP'
      ISUBN2='PA  '
C
      NUMSPI=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPSPPA--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXSPI,NUMSPI
   53 FORMAT('MAXSPI,NUMSPI = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEFSL
   55 FORMAT('IDEFSL = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)ISPILI(1)
   70 FORMAT('ISPILI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,ISPILI(I)
   76 FORMAT('I,ISPILI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO1100
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      GOTO1130
C
 1100 CONTINUE
      GOTO1200
C
 1110 CONTINUE
      IF(IHARG(1).EQ.'ALL')IHOLD1='    '
      IF(IHARG(1).EQ.'ALL')GOTO1300
      GOTO1200
C
 1120 CONTINUE
CCCCC IF(IHARG(1).EQ.'ALL')IHOLD1=IHARG(2)
CCCCC IF(IHARG(1).EQ.'ALL')GOTO1300
CCCCC IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(1)
CCCCC IF(IHARG(2).EQ.'ALL')GOTO1300
CCCCC APRIL 1996.  CHANGE IHOLD TO IHOLD1 BELOW
      IF(IHARG(1).EQ.'ALL')THEN
        IHOLD1=IHARG(2)
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(2).EQ.'2')IHOLD1='DA2'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(2).EQ.'3')IHOLD1='DA3'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(2).EQ.'4')IHOLD1='DA4'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(2).EQ.'5')IHOLD1='DA5'
        GOTO1300
      ENDIF
      IF(IHARG(2).EQ.'ALL')THEN
        IHOLD1=IHARG(1)
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(1).EQ.'2')IHOLD1='DA2'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(1).EQ.'3')IHOLD1='DA3'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(1).EQ.'4')IHOLD1='DA4'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(1).EQ.'5')IHOLD1='DA5'
        GOTO1300
      ENDIF
      GOTO1200
C
 1130 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE INDIVIDUAL SPECIFICATIONS CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMSPI=1
      ISPILI(1)='    '
      GOTO1270
C
 1220 CONTINUE
      NUMSPI=NUMARG
      IF(NUMSPI.GT.MAXSPI)NUMSPI=MAXSPI
      DO1225I=1,NUMSPI
      J=I
      IHOLD1=IHARG(J)
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'2')IHOLD1='DA2'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'3')IHOLD1='DA3'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'4')IHOLD1='DA4'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'5')IHOLD1='DA5'
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFSL
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFSL
      ISPILI(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMSPI
      WRITE(ICOUT,1276)I,ISPILI(I)
 1276 FORMAT('SPIKE ',I6,' HAS JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 2--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMSPI=MAXSPI
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFSL
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFSL
      DO1315I=1,NUMSPI
      ISPILI(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)ISPILI(I)
 1316 FORMAT('ALL SPIKES HAVE JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPSPPA--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXSPI,NUMSPI
 9013 FORMAT('MAXSPI,NUMSPI = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEFSL
 9015 FORMAT('IDEFSL = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)ISPILI(1)
 9030 FORMAT('ISPILI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,ISPILI(I)
 9036 FORMAT('I,ISPILI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPSPSM(X,N,XS,ICHANG,IBUGG3,IERROR)
C
C     PURPOSE--THIS SUBROUTINE TAKES THE DATA IN THE VECTOR X,
C              DETERMINES THE VARIOUS MESAS,
C              AND APPLIES A 3-TERM MEDIAN SMOOTH TO THE DATA
C              BETWEEN EACH MESA.
C     OUTPUT ARGUMENTS--XS     = THE SINGLE PRECISION VECTOR
C                                CONTAINING SMOOTHED VALUES.
C                     --ICHANG = THE CHARACTER VARIABLE
C                                CONTAINING EITHER YES OR NO
C                                DEPENDING ON WHETHER OR NOT THE
C                                SMOOTHED DATA IS CHANGED OR NOT
C                                FROM THE ORIGINAL DATA.
C     OUTPUT--THE COMPUTED SINGLE PRECISION VECTOR
C             OF SMOOTHED VALUES.
C     NOTE--THE VECTOR X REMAINS UNCHANGED.
C     ASSUMPTION--THE VECTOR X HAS AT LEAST 3 VALUES.
C     LANGUAGE--ANSI FORTRAN (1977)
C     REFERENCES--MCNEIL, INTERACTIVE DATA ANALYSIS
C                 1977, PAGE 146
C                 (= SOURCE OF ALGORITHM).
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     VERSION NUMBER--83.6
C     ORIGINAL VERSION--JULY      1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICHANG
C
      CHARACTER*4 IBUGG3
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION X(*)
      DIMENSION XS(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
C
      IF(IBUGG3.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPSPSM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGG3
   52 FORMAT('IBUGG3 = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)N
   53 FORMAT('N = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO55I=1,N
      WRITE(ICOUT,56)I,X(I)
   56 FORMAT('I,X(I) = ',I8,E15.7)
      CALL DPWRST('XXX','BUG ')
   55 CONTINUE
   90 CONTINUE
C
C               *********************************************
C               **  SPLIT THE DATA AT EACH MESA            **
C               **  AND THEN APPLY A 3-TERM MEDIAN SMOOTH  **
C               **  TO THE SUBSET OF THE DATA              **
C               **  BETWEEN EACH MESA.                     **
C               *********************************************
C
C               ****************************************
C               **  STEP 1--                          **
C               **  COPY THE DATA FROM X(.) TO XS(.)  **
C               ****************************************
C
      DO1100I=1,N
      XS(I)=X(I)
 1100 CONTINUE
C
C               ********************************
C               **  STEP 2--                  **
C               **  SEARCH FOR A MESA IN THE  **
C               **  FIRST 3 OBSERVATIONS      **
C               ********************************
C
      IF(X(2).NE.X(3))GOTO1290
      IF(X(1).LE.X(2).AND.X(3).LE.X(4))GOTO1290
      IF(X(1).GE.X(2).AND.X(3).GE.X(4))GOTO1290
      XS(2)=X(1)
      ARG1=X(3)
      ARG2=X(4)
      ARG3=3*X(4)-2*X(5)
      CALL DPMED3(ARG1,ARG2,ARG3,XMED3,IBUGG3,IERROR)
      XS(3)=XMED3
 1290 CONTINUE
C
C               ***********************************
C               **  STEP 3--                     **
C               **  SEARCH FOR MESAS             **
C               **  IN THE MIDDLE OF THE SERIES  **
C               ***********************************
C
      NM2=N-2
      IF(3.GT.NM2)GOTO1390
      DO1300I=3,NM2
C
      IM2=I-2
      IM1=I-1
      IP1=I+1
      IP2=I+2
      IP3=I+3
C
      IF(X(I).NE.X(IP1))GOTO1300
      IF(X(IM1).LE.X(I).AND.X(IP1).LE.X(IP2))GOTO1300
      IF(X(IM1).GE.X(I).AND.X(IP1).GE.X(IP2))GOTO1300
C
      ARG1=X(I)
      ARG2=X(IM1)
      ARG3=3*X(IM1)-2*X(IM2)
      CALL DPMED3(ARG1,ARG2,ARG3,XMED3,IBUGG3,IERROR)
      XS(I)=XMED3
C
      ARG1=X(IP1)
      ARG2=X(IP2)
      ARG3=3*X(IP2)-2*X(IP3)
      CALL DPMED3(ARG1,ARG2,ARG3,XMED3,IBUGG3,IERROR)
      XS(IP1)=XMED3
C
 1300 CONTINUE
 1390 CONTINUE
C
C               ********************************
C               **  STEP 4--                  **
C               **  SEARCH FOR A MESA IN THE  **
C               **  LAST  3 OBSERVATIONS      **
C               ********************************
C
      NM1=N-1
      NM2=N-2
      NM3=N-3
      NM4=N-4
      IF(X(NM1).NE.X(NM2))GOTO1490
      IF(X(N).LE.X(NM1).AND.X(NM2).LE.X(NM3))GOTO1490
      IF(X(N).GE.X(NM1).AND.X(NM2).GE.X(NM3))GOTO1490
      XS(NM1)=X(N)
      ARG1=X(NM2)
      ARG2=X(NM3)
      ARG3=3*X(NM3)-2*X(NM4)
      CALL DPMED3(ARG1,ARG2,ARG3,XMED3,IBUGG3,IERROR)
      XS(NM2)=XMED3
 1490 CONTINUE
C               *********************************************
C               **  STEP 5--                               **
C               **  CHECK TO SEE IF A CHANGE HAS OCCURRED  **
C               **  BETWEEN THE RAW DATA AND               **
C               **  THE SPLIT & SMOOTHED DATA.             **
C               *********************************************
C
      ICHANG='NO'
      DO1500I=1,N
      IF(XS(I).NE.X(I))GOTO1510
 1500 CONTINUE
      GOTO1590
 1510 CONTINUE
      ICHANG='YES'
 1590 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSPSM--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGG3,ICHANG,N
 9012   FORMAT('IBUGG3,ICHANG,N = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N
          WRITE(ICOUT,9016)I,X(I),XS(I)
 9016     FORMAT('I,X(I),XS(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSPSW(IHARG,NUMARG,IDEFSS,MAXSPI,ISPISW,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE SPIKE SWITCHES.
C              THESE ARE LOCATED IN THE VECTOR ISPISW(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEFSS
C                     --MAXSPI
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--ISPISW (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEFSS
      CHARACTER*4 ISPISW
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION ISPISW(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPSP'
      ISUBN2='SW  '
C
      NUMSPI=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPSPSW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXSPI,NUMSPI
   53 FORMAT('MAXSPI,NUMSPI = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEFSS
   55 FORMAT('IDEFSS = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)ISPISW(1)
   70 FORMAT('ISPISW(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,ISPISW(I)
   76 FORMAT('I,ISPISW(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO1100
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      GOTO1130
C
 1100 CONTINUE
      GOTO1200
C
 1110 CONTINUE
      IF(IHARG(1).EQ.'ALL')IHOLD1='OFF'
      IF(IHARG(1).EQ.'ALL')GOTO1300
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(1).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(1).EQ.'ALL')GOTO1300
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(1)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE INDIVIDUAL SPECIFICATIONS CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMSPI=1
      ISPISW(1)='ON'
      GOTO1270
C
 1220 CONTINUE
      NUMSPI=NUMARG
      IF(NUMSPI.GT.MAXSPI)NUMSPI=MAXSPI
      DO1225I=1,NUMSPI
      J=I
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='ON'
      IF(IHOLD1.EQ.'OFF')IHOLD2='OFF'
CCCCC IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFSS
CCCCC IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFSS
      ISPISW(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMSPI
      WRITE(ICOUT,1276)I,ISPISW(I)
 1276 FORMAT('SPIKE ',I6,' HAS JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 2--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMSPI=MAXSPI
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='ON'
      IF(IHOLD1.EQ.'OFF')IHOLD2='OFF'
CCCCC IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEFSS
CCCCC IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEFSS
      DO1315I=1,NUMSPI
      ISPISW(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)ISPISW(I)
 1316 FORMAT('ALL SPIKES HAVE JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPSPSW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXSPI,NUMSPI
 9013 FORMAT('MAXSPI,NUMSPI = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEFSS
 9015 FORMAT('IDEFSS = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)ISPISW(1)
 9030 FORMAT('ISPISW(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,ISPISW(I)
 9036 FORMAT('I,ISPISW(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPSPTH(IHARG,IARGT,ARG,NUMARG,PDEFST,MAXSPI,PSPITH,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE SPIKE THICKNESSES.
C              THESE ARE LOCATED IN THE VECTOR PSPITH(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --PDEFST
C                     --MAXSPI
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--PSPITH (A FLOATING POINT VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --JANUARY   1989.  ERROR IN FORMAT STATEMENT (ALAN)
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
      DIMENSION PSPITH(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPSP'
      ISUBN2='TH  '
C
      NUMSPI=0
      IHOLD1='-999'
      HOLD1=-999.0
      HOLD2=-999.0
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPSPTH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXSPI,NUMSPI
   53 FORMAT('MAXSPI,NUMSPI = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,HOLD1,HOLD2
   54 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)PDEFST
   55 FORMAT('PDEFST = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)PSPITH(1)
   70 FORMAT('PSPITH(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,PSPITH(I)
   76 FORMAT('I,PSPITH(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='    '
      IF(IHARG(2).EQ.'ALL')HOLD1=PDEFST
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')HOLD1=ARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')HOLD1=ARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE INDIVIDUAL SPECIFICATIONS CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMSPI=1
      PSPITH(1)=PDEFST
      GOTO1270
C
 1220 CONTINUE
      NUMSPI=NUMARG-1
      IF(NUMSPI.GT.MAXSPI)NUMSPI=MAXSPI
      DO1225I=1,NUMSPI
      J=I+1
      IHOLD1=IHARG(J)
      HOLD1=ARG(J)
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEFST
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEFST
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEFST
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEFST
      PSPITH(I)=HOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMSPI
      WRITE(ICOUT,1276)I,PSPITH(I)
 1276 FORMAT('SPIKE THICKNESS ',I6,' HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 2--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMSPI=MAXSPI
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEFST
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEFST
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEFST
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEFST
      DO1315I=1,NUMSPI
      PSPITH(I)=HOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)PSPITH(I)
 1316 FORMAT('ALL SPIKE THICKNESSES HAVE JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPSPTH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXSPI,NUMSPI
 9013 FORMAT('MAXSPI,NUMSPI = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,HOLD1,HOLD2
 9014 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)PDEFST
 9015 FORMAT('PDEFST = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I),IARGT(I),ARG(I)
 9026 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)PSPITH(1)
 9030 FORMAT('PSPITH(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,PSPITH(I)
 9036 FORMAT('I,PSPITH(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPSQRA(MAXNXT,ICAPSW,IFORSW,
     1                  ISUBRO,IBUGA2,IBUGA3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT NONPARAMETRIC SQUARED RANKS TEST TO TEST FOR
C              EQUAL VARIANCES AMONG K GROUPS.
C     EXAMPLE--SQUARED RANKS TEST Y X
C     REFERENCE--CONOVER (1999), "PRACTICAL NONPARAMETRIC STATISTICS",
C                THIRD EDITION, WILEY, PP. 300-310.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/6
C     ORIGINAL VERSION--JUNE      2011.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IMULT
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASA2
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICTMP1
      CHARACTER*4 ICTMP2
      CHARACTER*4 ICTMP3
      CHARACTER*4 IFLAGU
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZD.INC'
C
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
C
      EQUIVALENCE(GARBAG(IGARB1),TEMP1(1))
      EQUIVALENCE(GARBAG(IGARB2),TEMP2(1))
      EQUIVALENCE(GARBAG(IGARB3),TEMP3(1))
      EQUIVALENCE(GARBAG(IGARB4),TEMP4(1))
      EQUIVALENCE(DGARBG(IDGAR1),DTEMP1(1))
      EQUIVALENCE(DGARBG(IDGAR2),DTEMP2(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPSQ'
      ISUBN2='RA  '
      IFOUND='YES'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ******************************************
C               **  TREAT THE SQUARED RANKS TEST CASE  **
C               ******************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'SQRA')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSQRA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)IMULT,IKRUGS,MAXNXT
   55   FORMAT('IMULT,IKRUGS,MAXNXT = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************************
C               **  STEP 1--                                           **
C               **  EXTRACT THE COMMAND                                **
C               *********************************************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'SQRA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILASTZ=9999
      ICASAN='SQRA'
      ICASA2='TWOT'
      IMULT='OFF'
C
C     LOOK FOR:
C
C          SQUARED RANKS TEST
C          LOWER TAILED
C          UPPER TAILED
C          MULTIPLE
C
      DO100I=0,NUMARG-1
C
        IF(I.EQ.0)THEN
          ICTMP1=ICOM
        ELSE
          ICTMP1=IHARG(I)
        ENDIF
        ICTMP2=IHARG(I+1)
        ICTMP3=IHARG(I+2)
C
        IF(ICTMP1.EQ.'=')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(ICTMP1.EQ.'SQUA' .AND. ICTMP2.EQ.'RANK' .AND.
     1         ICTMP3.EQ.'TEST')THEN
          IFOUND='YES'
          ICASAN='SQRA'
          ILASTZ=I+2
        ELSEIF(ICTMP1.EQ.'SQUA' .AND. ICTMP2.EQ.'RANK')THEN
          IFOUND='YES'
          ICASAN='SQRA'
          ILASTZ=I+1
        ELSEIF(ICTMP1.EQ.'LOWE' .AND. ICTMP2.EQ.'TAIL')THEN
          ICASA2='LOWE'
          ILASTZ=MAX(ILASTZ,I+1)
        ELSEIF(ICTMP1.EQ.'UPPE' .AND. ICTMP2.EQ.'TAIL')THEN
          ICASA2='UPPE'
          ILASTZ=MAX(ILASTZ,I+1)
        ELSEIF(ICTMP1.EQ.'MULT')THEN
          IMULT='ON'
          ILASTZ=MAX(ILASTZ,I+1)
        ENDIF
  100 CONTINUE
C
      IF(IFOUND.EQ.'NO')GOTO9000
C
      ISHIFT=ILASTZ
      CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGA2,IERROR)
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'SQRA')THEN
        WRITE(ICOUT,91)ICASAN,ICASA2,IMULT,ISHIFT
   91   FORMAT('DPSQRA: ICASAN,ICASA2,IMULT,ISHIFT = ',
     1         3(A4,2X),I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'SQRA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='SQARED RANK TEST'
      MAXNA=100
      MINNVA=2
      MAXNVA=MAXSPN
      MINNA=1
      IFLAGE=1
      IFLAGM=0
      IF(IMULT.EQ.'ON')THEN
        IFLAGE=0
        IFLAGM=1
        MAXNVA=MAXSPN
      ENDIF
      MINN2=2
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'SQRA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,181)
  181   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,182)NQ,NUMVAR,IMULT
  182   FORMAT('NQ,NUMVAR,IMULT = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO185I=1,NUMVAR
            WRITE(ICOUT,187)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  187       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  185     CONTINUE
        ENDIF
      ENDIF
C
C               *******************************************************
C               **  STEP 3--                                         **
C               **  GENERATE THE SQUARED RANK   TEST FOR THE VARIOUS **
C               **  CASES                                            **
C               *******************************************************
C
      ISTEPN='3'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'SQRA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *****************************************
C               **  STEP 3A--                          **
C               **  CASE 1: TWO RESPONSE VARIABLES     **
C               **          WITH NO REPLICATION        **
C               *****************************************
C
      IF(IMULT.EQ.'OFF')THEN
        ISTEPN='3A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'SQRA')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        NUMVA2=2
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y,X,X,NLOCAL,NLOCA2,NLOCA2,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
C
C               ******************************************************
C               **  STEP 3B--
C               **  PREPARE FOR ENTRANCE INTO DPSQR2--
C               ******************************************************
C
        ISTEPN='3B'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'SQRA')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,331)
  331     FORMAT('***** FROM DPSQRA, AS WE ARE ABOUT TO CALL DPSQR2--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,332)NLOCAL
  332     FORMAT('NLOCAL = ',I8)
          CALL DPWRST('XXX','BUG ')
          DO335I=1,NLOCAL
            WRITE(ICOUT,336)I,Y(I),X(I)
  336       FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
  335     CONTINUE
        ENDIF
C
        CALL DPSQR2(Y,X,NLOCAL,IVARN1,IVARN2,ICASA2,MAXNXT,
     1              TEMP1,TEMP2,TEMP3,TEMP4,DTEMP1,DTEMP2,
     1              STATVA,STATCD,PVAL,PVALLT,PVALUT,NDIST,
     1              CUT0,CUT50,CUT75,CUT90,CUT95,CUT975,
     1              CUT99,CUT999,
     1              CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1              CTL200,CTL500,
     1              CTU999,CTU995,CTU990,CT975,CTU950,CTU900,
     1              CTU800,CTU500,
     1              ICAPSW,ICAPTY,IFORSW,IMULT,IKRUGS,
     1              ISUBRO,IBUGA3,IERROR)
C
C               ***************************************
C               **  STEP 8C--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
          ISTEPN='8C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'SQRA')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLAGU='ON'
          IFRST=.TRUE.
          ILAST=.TRUE.
          IF(NDIST.EQ.2)THEN
            CALL DPMNN5(ICASA2,
     1                  STATVA,STATCD,
     1                  PVAL2T,PVALLT,PVALUT,
     1                  CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1                  CTU999,CTU995,CTU990,CT975,CTU950,CTU900,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
          ELSEIF(NDIST.GE.3)THEN
            CALL DPFRT5(STATVA,STATCD,PVAL,
     1                  CUT0,CUT50,CUT75,CUT90,CUT95,
     1                  CUT975,CUT99,CUT999,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
          ENDIF
C
C               *******************************************************
C               **  STEP 4A--                                        **
C               **  CASE 2: MULTIPLE RESPONSE VARIABLES.  NOTE THAT  **
C               **          FOR SQUARED RANKS TEST, THE MULTIPLE     **
C               **          LABS ARE CONVERTED INTO A "Y X" STACKED  **
C               **          PAIR WHERE "X" IS THE LAB-ID VARIABLE.   **
C               *******************************************************
C
      ELSEIF(IMULT.EQ.'ON')THEN
        ISTEPN='4A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'SQRA')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        NUMVA2=NUMVAR
        CALL DPPAR8(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              TEMP1,Y,X,NLOCAL,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        NUMVAR=2
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'SQRA')THEN
          ISTEPN='4B'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,442)
  442     FORMAT('***** FROM THE MIDDLE  OF DPSQRA--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,443)ICASAN,NUMVAR,NLOCAL
  443     FORMAT('ICASAN,NUMVAR,NLOCAL = ',A4,2I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO445I=1,NLOCAL
              WRITE(ICOUT,446)I,Y(I),X(I)
  446         FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
              CALL DPWRST('XXX','BUG ')
  445       CONTINUE
          ENDIF
        ENDIF
C
        CALL DPSQR2(Y,X,NLOCAL,IVARN1,IVARN2,ICASA2,MAXNXT,
     1              TEMP1,TEMP2,TEMP3,TEMP4,DTEMP1,DTEMP2,
     1              STATVA,STATCD,PVAL,PVALLT,PVALUT,NDIST,
     1              CUT0,CUT50,CUT75,CUT90,CUT95,CUT975,
     1              CUT99,CUT999,
     1              CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1              CTL200,CTL500,
     1              CTU999,CTU995,CTU990,CT975,CTU950,CTU900,
     1              CTU800,CTU500,
     1              ICAPSW,ICAPTY,IFORSW,IMULT,IKRUGS,
     1              ISUBRO,IBUGA3,IERROR)
C
C         ***************************************
C         **  STEP 8C--                        **
C         **  UPDATE INTERNAL DATAPLOT TABLES  **
C         ***************************************
C
          ISTEPN='8C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'SQRA')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLAGU='ON'
          IFRST=.TRUE.
          ILAST=.TRUE.
          IF(NDIST.EQ.2)THEN
            CALL DPMNN5(ICASA2,
     1                  STATVA,STATCD,
     1                  PVAL2T,PVALLT,PVALUT,
     1                  CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1                  CTU999,CTU995,CTU990,CT975,CTU950,CTU900,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
          ELSEIF(NDIST.GE.3)THEN
            CALL DPFRT5(STATVA,STATCD,PVAL,
     1                  CUT0,CUT50,CUT75,CUT90,CUT95,
     1                  CUT975,CUT99,CUT999,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
          ENDIF
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'SQRA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSQRA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NLOCAL,STATVA,STATCD
 9014   FORMAT('NLOCAL,STATVA,STATCD = ',I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSQR2(Y,TAG,N,IVARID,IVARI2,ICASAN,MAXNXT,
     1                  TEMP1,TEMP2,TEMP3,TEMP4,DSUMSQ,DN,
     1                  STATVA,STATCD,PVAL2P,PVALLP,PVALUP,NDIST,
     1                  CUT0,CUT50,CUT75,CUT90,CUT95,CUT975,
     1                  CUT99,CUT999,
     1                  CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1                  CTL200,CTL500,
     1                  CTU999,CTU995,CTU990,CTU975,CTU950,CTU900,
     1                  CTU800,CTU500,
     1                  ICAPSW,ICAPTY,IFORSW,IMULT,IKRUGS,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE CARRIES OUT A NONPARAMETRIC SQUARED RANKS
C              TEST FOR EQUAL VARIANCES
C     EXAMPLE--SQUARED RANK TEST Y TAG
C     REFERENCE--W. J. CONOVER, "PRACTICAL NONPARAMETRIC
C                STATISTICS", THIRD EDITION, 1999, WILEY,
C                PP. 300-310.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/6
C     ORIGINAL VERSION--JUNE      2011.
C     UPDATED         --DECEMBER  2021. ADD P-VALUES TO MULTIPLE
C                                       COMPARISONS TABLE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IMULT
      CHARACTER*4 IKRUGS
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 IWRITE
      CHARACTER*3 IATEMP
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IOP
C
      DOUBLE PRECISION DNTOT
      DOUBLE PRECISION D2
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION TAG(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION TEMP4(*)
C
      DOUBLE PRECISION DSUMSQ(*)
      DOUBLE PRECISION DN(*)
C
C---------------------------------------------------------------------
C
      PARAMETER (NUMALP=8)
      PARAMETER (NUMAL2=4)
      REAL ALPHA(NUMALP)
      REAL ALPHA2(NUMAL2)
C
      PARAMETER(NUMCLI=7)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=50)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      DATA ALPHA/
     1 0.0, 50.0, 75.0, 90.0, 95.0, 97.5, 99.0, 99.9/
      DATA ALPHA2/0.80, 0.90, 0.95, 0.99/
C
      ISUBN1='DPSQ'
      ISUBN2='R2  '
      ISUBN0='    '
      IWRITE='OFF'
      IERROR='NO'
C
      PVAL=CPUMIN
      PVALLT=CPUMIN
      PVALUT=CPUMIN
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SQR2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPSQR2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,N
   52   FORMAT('IBUGA3,ISUBRO,N = ',2(A4,2X),I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I),TAG(I)
   57     FORMAT('I,Y(I),TAG(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ****************************************************
C               **  STEP 1--                                      **
C               **  CARRY OUT CALCULATIONS FOR SQUARED RANK TEST  **
C               **  (COMPUTATIONS PERFORMED IN DPSQR3)            **
C               ****************************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPSQR3(Y,TAG,N,
     1            TEMP1,TEMP2,TEMP3,TEMP4,MAXNXT,
     1            DSUMSQ,DN,
     1            STATVA,STATCD,PVAL2P,PVALLP,PVALUP,
     1            IDF,NDIST,D2,
     1            IBUGA3,ISUBRO,IERROR)
C
      IF(NDIST.GE.3)THEN
        CUT0=0.0
        CALL CHSPPF(.50,IDF,CUT50)
        CALL CHSPPF(.75,IDF,CUT75)
        CALL CHSPPF(.90,IDF,CUT90)
        CALL CHSPPF(.95,IDF,CUT95)
        CALL CHSPPF(.975,IDF,CUT975)
        CALL CHSPPF(.99,IDF,CUT99)
        CALL CHSPPF(.999,IDF,CUT999)
        ALPHAT=0.05
        CALL TPPF(1.0-ALPHAT/2.0,REAL(IDF),AT95)
        ALPHAT=0.10
        CALL TPPF(1.0-ALPHAT/2.0,REAL(IDF),AT90)
        ALPHAT=0.01
        CALL TPPF(1.0-ALPHAT/2.0,REAL(IDF),AT99)
        DNTOT=DBLE(N)
        AFACT2=REAL(DSQRT(D2*(DNTOT-1.0D0-STATVA)/DBLE(N-NDIST)))
C
      ELSEIF(NDIST.EQ.2)THEN
        CALL NORPPF(.001,CTL001)
        CALL NORPPF(.005,CTL005)
        CALL NORPPF(.010,CTL010)
        CALL NORPPF(.025,CTL025)
        CALL NORPPF(.050,CTL050)
        CALL NORPPF(.100,CTL100)
        CALL NORPPF(.200,CTL200)
        CALL NORPPF(.500,CTL500)
        CALL NORPPF(.500,CTU500)
        CALL NORPPF(.800,CTU800)
        CALL NORPPF(.900,CTU900)
        CALL NORPPF(.950,CTU950)
        CALL NORPPF(.975,CTU975)
        CALL NORPPF(.990,CTU990)
        CALL NORPPF(.995,CTU995)
        CALL NORPPF(.995,CTU999)
      ENDIF
C
      IF(NDIST.GE.3)THEN
        IOP='OPEN'
        IFLG1=1
        IFLG2=0
        IFLG3=0
        IFLG4=0
        IFLG5=0
        CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        WRITE(IOUNI1,2305)
 2305   FORMAT('     I       J    ',
     1       '|Si/Ni-Sj/nj|      ',
     1       '90% CV        ',
     1       '95% CV        ',
     1       '99% CV        ',
     1       '     P-Value  ')
C
        DO2330I=1,NDIST
          DO2339J=1,NDIST
            IF(I.LT.J)THEN
              AFACT3=REAL(DSQRT((1.0D0/DN(I)) + (1.0D0/DN(J))))
              ADIFF=REAL(DABS((DSUMSQ(I)/DN(I)) - (DSUMSQ(J)/DN(J))))
              ACV90=AT90*AFACT2*AFACT3
              ACV95=AT95*AFACT2*AFACT3
              ACV99=AT99*AFACT2*AFACT3
              AVAL=ADIFF/(AFACT2*AFACT3)
              CALL TCDF(AVAL,REAL(IDF),ACDF)
              PVAL=2.0*(1.0 - ACDF)
              IATEMP='   '
              IF(ADIFF.GE.ACV90)IATEMP(1:1)='*'
              IF(ADIFF.GE.ACV95)IATEMP(2:2)='*'
              IF(ADIFF.GE.ACV99)IATEMP(3:3)='*'
              WRITE(IOUNI1,2337)I,J,ADIFF,ACV90,ACV95,ACV99,IATEMP,
     1                          PVAL
CCCCC         WRITE(IOUNI1,2337)I,J,ADIFF,ACV90,ACV95,ACV99,IATEMP
C2337         FORMAT(I6,2X,I6,2X,4E15.7,A3)
 2337         FORMAT(I6,2X,I6,2X,4E15.7,A3,F12.5)
C
              IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR2')THEN
                WRITE(ICOUT,2341)I,J,DN(I),DN(J),DSUMSQ(I),DSUMSQ(J)
 2341           FORMAT('I,J,DN(I),DN(J),DSUMSQ(I),DSUMSQ(J) = ',
     1                 2I8,4G15.7)
                CALL DPWRST('XXX','WRIT')
                WRITE(ICOUT,2343)AFACT2,AFACT3,ADIFF
 2343           FORMAT('AFACT2,AFACT3,ADIFF = ',3G15.7)
                CALL DPWRST('XXX','WRIT')
              ENDIF
C
            ENDIF
 2339     CONTINUE
 2330   CONTINUE
C
        IOP='CLOS'
        CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
C               ********************************
C               **   STEP 42--                **
C               **   WRITE OUT EVERYTHING     **
C               **   FOR SQUARED RANKS TEST   **
C               ********************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Squared Ranks Test'
      NCTITL=18
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      IF(IMULT.EQ.'OFF')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Response Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
C
        ICNT=ICNT+1
        ITEXT(ICNT)='Group-ID Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(2)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(2)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
C     IF REQUESTED, PRINT OUT GROUP INFORMATION.  SINCE NUMBER
C     OF GROUPS IS UNKNOWN (AND POTENTIALLY LARGE, PRINT EACH
C     GROUP AS A SEPARATE TABLE.
C
      IF(IKRUGS.EQ.'ON')THEN
C
CCCCC   DO2060I=1,NUMDIS
        DO2060I=1,NDIST
C
          NUMROW=ICNT
          DO2065II=1,NUMROW
            NTOT(II)=15
 2065     CONTINUE
C
          IFRST=.TRUE.
          ILAST=.TRUE.
C
          CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1                AVALUE,IDIGIT,
     1                NTOT,NUMROW,
     1                ICAPSW,ICAPTY,ILAST,IFRST,
     1                ISUBRO,IBUGA3,IERROR)
          ICNT=0
          ITITLE=' '
          NCTITL=0
          ITITLZ=' '
          NCTITZ=0
C
          ICNT=ICNT+1
          ITEXT(ICNT)=' '
          NCTEXT(ICNT)=1
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
C
          IF(IMULT.EQ.'ON')THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='Group Variable: '
            WRITE(ITEXT(ICNT)(17:20),'(A4)')IVARID(I)(1:4)
            WRITE(ITEXT(ICNT)(21:24),'(A4)')IVARI2(I)(1:4)
            NCTEXT(ICNT)=24
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ELSE
            ICNT=ICNT+1
            ITEXT(ICNT)='Group    '
            WRITE(ITEXT(ICNT)(7:9),'(I3)')I
            NCTEXT(ICNT)=9
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ENDIF
          ICNT=ICNT+1
          ITEXT(ICNT)='Number of Observations:'
          NCTEXT(ICNT)=23
          AVALUE(ICNT)=REAL(DN(I))
          IDIGIT(ICNT)=0
          ICNT=ICNT+1
          ITEXT(ICNT)='Sum of Squared Ranks:'
          NCTEXT(ICNT)=21
          AVALUE(ICNT)=REAL(DSUMSQ(I))
          IDIGIT(ICNT)=NUMDIG
 2060   CONTINUE
C
        IF(ICNT.GT.0)THEN
          NUMROW=ICNT
          DO2068II=1,NUMROW
            NTOT(II)=15
 2068     CONTINUE
C
          IFRST=.TRUE.
          ILAST=.TRUE.
C
          CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1                AVALUE,IDIGIT,
     1                NTOT,NUMROW,
     1                ICAPSW,ICAPTY,ILAST,IFRST,
     1                ISUBRO,IBUGA3,IERROR)
          ICNT=0
        ENDIF
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='H0: Samples Have Equal Variability'
      NCTEXT(ICNT)=34
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Ha: Samples Do Not Have Equal Variability'
      NCTEXT(ICNT)=41
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Total Number of Observations:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Groups:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=REAL(NDIST)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Squared Ranks Test Statistic Value:'
      NCTEXT(ICNT)=35
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='CDF of Test Statistic:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=STATCD
      IDIGIT(ICNT)=NUMDIG
      IF(NDIST.GE.3)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='P-Value:'
        NCTEXT(ICNT)=8
        AVALUE(ICNT)=PVAL2P
        IDIGIT(ICNT)=NUMDIG
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='Two-Tailed P-Value:'
        NCTEXT(ICNT)=19
        AVALUE(ICNT)=PVAL2P
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Lower Tailed P-Value:'
        NCTEXT(ICNT)=21
        AVALUE(ICNT)=PVALLP
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Upper Tailed P-Value:'
        NCTEXT(ICNT)=21
        AVALUE(ICNT)=PVALUP
        IDIGIT(ICNT)=NUMDIG
      ENDIF
C
      NUMROW=ICNT
      DO4210I=1,NUMROW
        NTOT(I)=15
 4210 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='42A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      IF(NDIST.EQ.2)GOTO5000
C
      ITITLE=' '
      NCTITL=0
      ITITL9=' '
      NCTIT9=0
      ITITLE(1:55)=
     1'Percent Points of the Chi-Square Reference Distribution'
      NCTITL=55
      NUMLIN=1
      NUMROW=8
      NUMCOL=3
      ITITL2(1,1)='Percent Point'
      ITITL2(1,2)=' '
      ITITL2(1,3)='Value'
      NCTIT2(1,1)=13
      NCTIT2(1,2)=1
      NCTIT2(1,3)=5
C
      NMAX=0
      DO4221I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.2)NTOT(I)=5
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=NUMDIG
        ITYPCO(I)='NUME'
 4221 CONTINUE
      ITYPCO(2)='ALPH'
      IDIGIT(1)=1
      IDIGIT(3)=3
      DO4223I=1,NUMROW
        DO4225J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          NCVALU(I,J)=0
          AMAT(I,J)=0.0
          IF(J.EQ.1)THEN
            AMAT(I,J)=ALPHA(I)
          ELSEIF(J.EQ.2)THEN
            IVALUE(I,J)='='
            NCVALU(I,J)=1
          ELSEIF(J.EQ.3)THEN
            IF(I.EQ.1)THEN
              AMAT(I,J)=RND(CUT0,IDIGIT(J))
            ELSEIF(I.EQ.2)THEN
              AMAT(I,J)=RND(CUT50,IDIGIT(J))
            ELSEIF(I.EQ.3)THEN
              AMAT(I,J)=RND(CUT75,IDIGIT(J))
            ELSEIF(I.EQ.4)THEN
              AMAT(I,J)=RND(CUT90,IDIGIT(J))
            ELSEIF(I.EQ.5)THEN
              AMAT(I,J)=RND(CUT95,IDIGIT(J))
            ELSEIF(I.EQ.6)THEN
              AMAT(I,J)=RND(CUT975,IDIGIT(J))
            ELSEIF(I.EQ.7)THEN
              AMAT(I,J)=RND(CUT99,IDIGIT(J))
            ELSEIF(I.EQ.8)THEN
              AMAT(I,J)=RND(CUT999,IDIGIT(J))
            ENDIF
          ENDIF
 4225   CONTINUE
 4223 CONTINUE
C
      IWHTML(1)=150
      IWHTML(2)=50
      IWHTML(3)=150
      IWRTF(1)=2000
      IWRTF(2)=IWRTF(1)+500
      IWRTF(3)=IWRTF(2)+2000
      IFRST=.TRUE.
      ILAST=.FALSE.
C
      ISTEPN='42C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='42D'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ITITLE='Upper-Tailed Test: Chi-Square Approximation'
      NCTITL=43
      ITITL9='H0: Variances Are Equal; Ha: Variance Are Not Equal'
      NCTIT9=51
C
      DO2130J=1,NUMCLI
        DO2140I=1,MAXLIN
          ITITL2(I,J)=' '
          NCTIT2(I,J)=0
 2140   CONTINUE
 2130 CONTINUE
C
      NUMCOL=4
      ITITL2(2,1)='Significance'
      NCTIT2(2,1)=12
      ITITL2(3,1)='Level'
      NCTIT2(3,1)=5
C
      ITITL2(2,2)='Test '
      NCTIT2(2,2)=4
      ITITL2(3,2)='Statistic'
      NCTIT2(3,2)=9
C
      ITITL2(2,3)='Critical'
      NCTIT2(2,3)=8
      ITITL2(3,3)='Value (>)'
      NCTIT2(3,3)=9
C
      ITITL2(1,4)='Null'
      NCTIT2(1,4)=4
      ITITL2(2,4)='Hypothesis'
      NCTIT2(2,4)=10
      ITITL2(3,4)='Conclusion'
      NCTIT2(3,4)=10
C
      NMAX=0
      DO2150I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        IDIGIT(I)=NUMDIG
        IF(I.EQ.1 .OR. I.EQ.4)THEN
          ITYPCO(I)='ALPH'
        ENDIF
 2150 CONTINUE
C
      IWHTML(1)=125
      IWHTML(2)=175
      IWHTML(3)=175
      IWHTML(4)=175
      IINC=1800
      IINC2=1400
      IWRTF(1)=IINC
      IWRTF(2)=IWRTF(1)+IINC
      IWRTF(3)=IWRTF(2)+IINC
      IWRTF(4)=IWRTF(3)+IINC
C
      ICNT=NUMAL2
      DO2160J=1,NUMAL2
C
        AMAT(J,2)=STATVA
        ALPHAT=ALPHA2(J)
        CALL CHSPPF(ALPHAT,IDF,CUTTMP)
        AMAT(J,3)=CUTTMP
        IVALUE(J,4)(1:6)='REJECT'
        IF(ABS(STATVA).LT.AMAT(J,3))THEN
          IVALUE(J,4)(1:6)='ACCEPT'
        ENDIF
        NCVALU(J,4)=6
C
        AVAL=100.0*ALPHAT
        WRITE(IVALUE(J,1)(1:4),'(F4.1)')AVAL
        IVALUE(J,1)(5:5)='%'
        NCVALU(J,1)=5
 2160 CONTINUE
C
      NUMLIN=3
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
C
      CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITLE(1:26)='Multiple Comparisons Table'
      NCTITL=26
      ITITL9=' '
      NCTIT9=0
C
      ITITL2(1,1)='I'
      NCTIT2(1,1)=1
      ITITL2(1,2)='J'
      NCTIT2(1,2)=1
      ITITL2(1,3)='|Si/Ni - Sj/Nj|'
      NCTIT2(1,3)=15
      ITITL2(1,4)='90% CV'
      NCTIT2(1,4)=6
      ITITL2(1,5)='95% CV'
      NCTIT2(1,5)=6
      ITITL2(1,6)='99% CV'
      NCTIT2(1,6)=6
      ITITL2(1,7)='P-Value'
      NCTIT2(1,7)=7
C
      NMAX=0
      NUMCOL=7
      DO4010I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        ITYPCO(I)='NUME'
        IDIGIT(I)=NUMDIG
        NTOT(I)=15
        IF(I.EQ.1 .OR. I.EQ.2)THEN
          NTOT(I)=5
          IDIGIT(I)=0
        ELSEIF(I.EQ.3)THEN
          NTOT(I)=17
        ENDIF
        NMAX=NMAX+NTOT(I)
 4010 CONTINUE
      IWHTML(1)=50
      IWHTML(2)=50
      IWHTML(3)=150
      IWHTML(4)=150
      IWHTML(5)=150
      IWHTML(6)=150
      IWHTML(7)=150
      IINC=1600
      IINC2=200
      IINC3=1000
      IWRTF(1)=IINC2
      IWRTF(2)=IWRTF(1)+IINC2
      IWRTF(3)=IWRTF(2)+IINC
      IWRTF(4)=IWRTF(3)+IINC
      IWRTF(5)=IWRTF(4)+IINC
      IWRTF(6)=IWRTF(5)+IINC
      IWRTF(7)=IWRTF(6)+IINC
C
      ICNT=0
      DO4081I=1,NDIST
        DO4083J=1,NDIST
          IF(I.LT.J)THEN
C
            AFACT3=REAL(DSQRT((1.0D0/DN(I)) + (1.0D0/DN(J))))
            ADIFF=REAL(DABS((DSUMSQ(I)/DN(I)) - (DSUMSQ(J)/DN(J))))
            ACV90=AT90*AFACT2*AFACT3
            ACV95=AT95*AFACT2*AFACT3
            ACV99=AT99*AFACT2*AFACT3
            AVAL=ADIFF/(AFACT2*AFACT3)
            CALL TCDF(AVAL,REAL(IDF),ACDF)
            PVAL=2.0*(1.0 - ACDF)
            IATEMP='   '
            IF(ADIFF.GE.ACV90)IATEMP(1:1)='*'
            IF(ADIFF.GE.ACV95)IATEMP(2:2)='*'
            IF(ADIFF.GE.ACV99)IATEMP(3:3)='*'
C
            IF(ICNT.GE.MAXROW)THEN
              NUMLIN=1
              IFRST=.TRUE.
              ILAST=.TRUE.
              IFLAGS=.TRUE.
              IFLAGE=.TRUE.
              CALL DPDTA5(ITITLE,NCTITL,
     1                    ITITL9,NCTIT9,ITITL2,NCTIT2,
     1                    MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1                    IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1                    IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1                    ICAPSW,ICAPTY,IFRST,ILAST,
     1                    IFLAGS,IFLAGE,
     1                    ISUBRO,IBUGA3,IERROR)
              ICNT=0
            ENDIF
C
            ICNT=ICNT+1
            IVALUE(ICNT,1)=' '
            NCVALU(ICNT,1)=0
            AMAT(ICNT,1)=REAL(I)
            IVALUE(ICNT,2)=' '
            NCVALU(ICNT,2)=0
            AMAT(ICNT,2)=REAL(J)
            IVALUE(ICNT,3)=' '
            NCVALU(ICNT,3)=0
            AMAT(ICNT,3)=ADIFF
            IVALUE(ICNT,4)=' '
            NCVALU(ICNT,4)=0
            AMAT(ICNT,4)=ACV90
            IVALUE(ICNT,5)=' '
            NCVALU(ICNT,5)=0
            AMAT(ICNT,5)=ACV95
            IVALUE(ICNT,6)=' '
            NCVALU(ICNT,6)=0
            AMAT(ICNT,6)=ACV99
            IVALUE(ICNT,7)=' '
            NCVALU(ICNT,7)=0
            AMAT(ICNT,7)=PVAL
          ENDIF
 4083   CONTINUE
 4081 CONTINUE
C
      IF(ICNT.GE.1)THEN
        NUMLIN=1
        IFRST=.TRUE.
        ILAST=.TRUE.
        IFLAGS=.TRUE.
        IFLAGE=.TRUE.
        CALL DPDTA5(ITITLE,NCTITL,
     1              ITITL9,NCTIT9,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              IFLAGS,IFLAGE,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
      GOTO9000
C
 5000 CONTINUE
C
      ITITLE='Two-Tailed Test: Normal Approximation'
      NCTITL=37
      ITITL9='H0: Var(Y1) = Var(Y2); Ha: Var(Y1) <> Var(Y2)'
      NCTIT9=45
C
      DO5130J=1,NUMCLI
        DO5140I=1,MAXLIN
          ITITL2(I,J)=' '
          NCTIT2(I,J)=0
 5140   CONTINUE
 5130 CONTINUE
C
      NUMCOL=4
      ITITL2(2,1)='Significance'
      NCTIT2(2,1)=12
      ITITL2(3,1)='Level'
      NCTIT2(3,1)=5
C
      ITITL2(2,2)='Test '
      NCTIT2(2,2)=4
      ITITL2(3,2)='Statistic'
      NCTIT2(3,2)=9
C
      ITITL2(2,3)='Critical'
      NCTIT2(2,3)=8
      ITITL2(3,3)='Value (+/-)'
      NCTIT2(3,3)=11
C
      ITITL2(1,4)='Null'
      NCTIT2(1,4)=4
      ITITL2(2,4)='Hypothesis'
      NCTIT2(2,4)=10
      ITITL2(3,4)='Conclusion'
      NCTIT2(3,4)=10
C
      NMAX=0
      DO5150I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        IDIGIT(I)=NUMDIG
        IF(I.EQ.1 .OR. I.EQ.4)THEN
          ITYPCO(I)='ALPH'
        ENDIF
 5150 CONTINUE
C
      IWHTML(1)=125
      IWHTML(2)=175
      IWHTML(3)=175
      IWHTML(4)=175
      IINC=1800
      IINC2=1400
      IWRTF(1)=IINC
      IWRTF(2)=IWRTF(1)+IINC
      IWRTF(3)=IWRTF(2)+IINC
      IWRTF(4)=IWRTF(3)+IINC
C
      ICNT=NUMAL2
      DO5160J=1,NUMAL2
C
        AMAT(J,2)=STATVA
        ALPHAT=ALPHA2(J)
        ATEMP=(1.0 - ALPHAT)/2.0
        ATEMP=1.0 - ATEMP
        CALL NORPPF(ATEMP,CUTTMP)
        AMAT(J,3)=CUTTMP
        IVALUE(J,4)(1:6)='REJECT'
        IF(ABS(STATVA).LT.AMAT(J,3))THEN
          IVALUE(J,4)(1:6)='ACCEPT'
        ENDIF
        NCVALU(J,4)=6
C
        WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
        IVALUE(J,1)(5:5)='%'
        NCVALU(J,1)=5
 5160 CONTINUE
C
      NUMLIN=3
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
C
      IF(ICASAN.EQ.'TWOT')THEN
        CALL DPDTA5(ITITLE,NCTITL,
     1              ITITL9,NCTIT9,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              IFLAGS,IFLAGE,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
C
      IF(ICASAN.EQ.'LOWE')THEN
C
        ITITLE='Lower-Tailed Test: Normal Approximation'
        NCTITL=39
        ITITL9='H0: Var(Y1) = Var(Y2); Ha: Var(Y1) < Var(Y2)'
        NCTIT9=44
C
        ITITL2(2,3)='Critical'
        NCTIT2(2,3)=8
        ITITL2(3,3)='Value (<)'
        NCTIT2(3,3)=9
        NUMCOL=4
C
        NMAX=0
        DO5250I=1,NUMCOL
          NTOT(I)=15
          NMAX=NMAX+NTOT(I)
 5250   CONTINUE
C
        ICNT=NUMALP
        DO5260J=1,NUMALP
C
          AMAT(J,2)=STATVA
          ALPHAT=ALPHA(J)
          ATEMP=(1.0 - ALPHAT)
          CALL NORPPF(ATEMP,CUTTMP)
          AMAT(J,3)=CUTTMP
          IVALUE(J,4)(1:6)='ACCEPT'
          IF(ABS(STATVA).LT.AMAT(J,3))THEN
            IVALUE(J,4)(1:6)='REJECT'
          ENDIF
          NCVALU(J,4)=6
          WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
          IVALUE(J,1)(5:5)='%'
          NCVALU(J,1)=5
 5260   CONTINUE
C
        NUMLIN=3
        IFRST=.TRUE.
        ILAST=.TRUE.
        IFLAGS=.TRUE.
        IFLAGE=.TRUE.
        CALL DPDTA5(ITITLE,NCTITL,
     1              ITITL9,NCTIT9,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              IFLAGS,IFLAGE,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
C
      IF(ICASAN.EQ.'UPPE')THEN
C
        ITITLE='Upper-Tailed Test: Normal Approximation'
        NCTITL=39
        ITITL9='H0: Var(Y1) = Var(Y2); Ha: Var(Y1) > Var(Y2)'
        NCTIT9=44
C
        ITITL2(2,3)='Critical'
        NCTIT2(2,3)=8
        ITITL2(3,3)='Value (>)'
        NCTIT2(3,3)=9
        NUMCOL=4
C
        NMAX=0
        DO5350I=1,NUMCOL
          NTOT(I)=15
          NMAX=NMAX+NTOT(I)
 5350   CONTINUE
C
        ICNT=NUMALP
        DO5360J=1,NUMALP
C
          AMAT(J,2)=STATVA
          ALPHAT=ALPHA(J)
          ATEMP=ALPHAT
          CALL NORPPF(ATEMP,CUTTMP)
          AMAT(J,3)=CUTTMP
          IVALUE(J,4)(1:6)='ACCEPT'
          IF(ABS(STATVA).GT.AMAT(J,3))THEN
            IVALUE(J,4)(1:6)='REJECT'
          ENDIF
          NCVALU(J,4)=6
          WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
          IVALUE(J,1)(5:5)='%'
          NCVALU(J,1)=5
 5360   CONTINUE
C
        NUMLIN=3
        IFRST=.TRUE.
        ILAST=.TRUE.
        IFLAGS=.TRUE.
        IFLAGE=.TRUE.
        CALL DPDTA5(ITITLE,NCTITL,
     1              ITITL9,NCTIT9,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              IFLAGS,IFLAGE,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SQR2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSQR2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9025)STATVA,STATCD
 9025   FORMAT('STATVA,STATCD = ',2G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSQR3(Y,X,N,
     1                  TEMP1,TEMP2,YRANK,XIDTEM,MAXNXT,
     1                  DSUMSQ,DN,
     1                  STATVA,STATCD,PVALUE,PVALLT,PVALUT,
     1                  IDF,NDIST,D2,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--THIS ROUTINE COMPUTES THE SQUARED RANKS K-SAMPLE TEST
C              STATISTIC FOR EQUAL VARIANCES AND ASSOCIATED CDF AND
C              P-VALUES.
C
C              THIS PART IS EXTRACTED FROM DPSQR2 IN ORDER TO
C              ALLOW IT TO BE COMPUTED FROM THE "STATISTICS" ROUTINES
C              (E.G., STATISTIC PLOT, BOOTSTRAP).
C
C     EXAMPLE--SQUARED RANKS TEST Y X
C     REFERENCE--CONOVER (1999), "PRACTICAL NONPARAMETRIC STATISTICS",
C                THIRD EDITION, WILEY, PP. 300 - 310.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/6
C     ORIGINAL VERSION--JUNE      2011.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DOUBLE PRECISION DSUM1
      DOUBLE PRECISION DSUM2
      DOUBLE PRECISION DSUM3
      DOUBLE PRECISION DSUM4
      DOUBLE PRECISION D2
      DOUBLE PRECISION SBAR
      DOUBLE PRECISION DTERM1
      DOUBLE PRECISION DNUM
      DOUBLE PRECISION DENOM
      DOUBLE PRECISION C1
      DOUBLE PRECISION C2
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION YRANK(*)
      DIMENSION XIDTEM(*)
C
      DOUBLE PRECISION DSUMSQ(*)
      DOUBLE PRECISION DN(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPSQ'
      ISUBN2='R3  '
      IERROR='NO'
      IWRITE='OFF'
C
      STATVA=CPUMIN
      STATCD=CPUMIN
      PVALUE=CPUMIN
      IDF=-99
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPSQR3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,N
   52   FORMAT('IBUGA3,ISUBRO,N = ',2(A4,2X),I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I),X(I)
   57     FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 01--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='01'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N.LE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN SQUARED RANKS TEST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,112)
  112   FORMAT('      THE INPUT NUMBER OF OBSERVATIONS FOR THE ',
     1         'RESPONSE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
  113   FORMAT('      VARIABLES MUST BE 2 OR LARGER.  SUCH WAS NOT ',
     1         'THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,117)N
  117   FORMAT('      THE INPUT NUMBER OF OBSERVATIONS   = ',I8,'.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO135I=2,N
        IF(Y(I).NE.HOLD)GOTO139
  135 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,131)HOLD
  131 FORMAT('      THE RESPONSE VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      IERROR='YES'
      GOTO9000
  139 CONTINUE
C
      HOLD=X(1)
      DO145I=2,N
        IF(X(I).NE.HOLD)GOTO149
  145 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,141)HOLD
  141 FORMAT('      THE GROUP-ID VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      IERROR='YES'
      GOTO9000
  149 CONTINUE
C
C               *************************************
C               **   STEP 11--                     **
C               **   COMPUTE SQUARED RANKS   TEST  **
C               *************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     DETERMINE DISTINCT VALUES OF GROUP-ID VARIABLE.  SUBTRACT
C     GROUP MEANS FROM VARIABLE.
C
      CALL DISTIN(X,N,IWRITE,XIDTEM,NDIST,IBUGA3,IERROR)
      DO1010K=1,NDIST
        HOLD=XIDTEM(K)
        NTEMP=0
        DO1020I=1,N
          IF(X(I).EQ.HOLD)THEN
            NTEMP=NTEMP+1
            TEMP2(NTEMP)=Y(I)
          ENDIF
 1020   CONTINUE
        CALL MEAN(TEMP2,NTEMP,IWRITE,YMEAN,IBUGA3,IERROR)
        YRANK(K)=YMEAN
 1010 CONTINUE
C
      DO1030I=1,N
        DO1040K=1,NDIST
          IF(XIDTEM(K).EQ.X(I))THEN
            TEMP1(I)=ABS(Y(I) - REAL(YRANK(K)))
            GOTO1049
          ENDIF
 1040   CONTINUE
 1049   CONTINUE
 1030 CONTINUE
C
C     COMPUTE RANKS, BUT SUBTRACT MEANS FROM DATA FIRST
C
      CALL RANK(TEMP1,N,IWRITE,YRANK,TEMP2,MAXNXT,IBUGA3,IERROR)
C
      DSUM1=0.0D0
      DSUM2=0.0D0
      DSUM4=0.0D0
      DO1050I=1,N
        DSUM1=DSUM1 + YRANK(I)**2
        DSUM2=DSUM2 + DBLE(YRANK(I))**4
        IF(X(I).EQ.XIDTEM(1))DSUM4=DSUM4 + DBLE(YRANK(I))**2
 1050 CONTINUE
      SBAR=DSUM1/DBLE(N)
C
      DSUM1=0.0D0
      DO1060K=1,NDIST
        HOLD=XIDTEM(K)
        NTEMP=0
        DSUM3=0.0D0
        DO1070I=1,N
          IF(XIDTEM(K).EQ.X(I))THEN
            NTEMP=NTEMP+1
            DSUM3=DSUM3 + DBLE(YRANK(I))**2
          ENDIF
 1070   CONTINUE
        DSUM1=DSUM1 + DSUM3**2/DBLE(NTEMP)
        DSUMSQ(K)=DSUM3
        DN(K)=DBLE(NTEMP)
 1060 CONTINUE
C
C     COMPUTE SQUARED RANKS TEST STATISTIC:
C
C         T = (1/D**2)*{SUM[i=1 to k][S(i)**2/n(i)] - N*SBAR**2}
C
C     WHERE
C
C         S(i) = SUM OF SQUARE RANKS IN SUBSAMPLE i
C         n(i) = NUMBER OF OBSERVATIONS IN SUBSAMPLE i
C         D**2 = (1/(N-1))*{SUM[i=1 to N][R(i)**4] - N*SBAR**2}
C         SBAR = (1/N)*SUM[j=1 to k][S(k)]
C              = (1/N)*SUM[i=1 to N][S(k)]
C
C     FOR 2-SAMPLE CASE, THE FORMULA IS
C
C        T1 = {T - N1*SBAR**2}/
C             SQRT{(N1*N2)/(N*(N-1))}*SUM[i=1 to N][R(i)**4] -
C             (N1*N2/(N-1))*(SBAR)**2}
C
      ISTEPN='12'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NDIST.GT.2)THEN
        D2=(DSUM2 - DBLE(N)*SBAR**2)/DBLE(N-1)
        DTERM1=(DSUM1 - DBLE(N)*SBAR**2)/D2
        STATVA=REAL(DTERM1)
C
C       CDF AND P-VALUES COMPUTED FROM CHI-SQUARE APPROXIMATION
C
        IDF=NDIST-1
        CALL CHSCDF(STATVA,IDF,STATCD)
        PVALUE=1.0 - STATCD
        PVALLT=CPUMIN
        PVALUT=CPUMIN
      ELSE
        DNUM=DSUM4 - DN(1)*SBAR
        C1=DN(1)*DN(2)/(DBLE(N)*DBLE(N-1))
        C2=DN(1)*DN(2)/DBLE(N-1)
        DENOM=DSQRT(C1*DSUM2 - C2*SBAR**2)
        STATVA=REAL(DNUM/DENOM)
        CALL NORCDF(STATVA,STATCD)
        PVALLT=STATCD
        PVALUT=1.0 - STATCD
        PVALUE=2.0*MIN(PVALLT,PVALUT)
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SQR3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSQR3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)STATVA,STATCD,PVALUE,IDF
 9013   FORMAT('STATVA,STATCD,PVALUE,IDF = ',3G15.7,I8)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9014)SBAR,D2,DSUM1,DSUM2,DSUM3
 9014   FORMAT('SBAR,D2,DSUM1,DSUM2,DSUM3 = ',5G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSQUE(PX,PY,NP,PXMIN,PXMAX,PYMIN,PYMAX)
C
C     PURPOSE--SCAN EACH VALUE OF PX(.) AND COMPARE IT TO (PXMIN,PXMAX).
C              IF ONLY SLIGHTLY SMALLER THAN PXMIN, THEN CHANGE PX(I) TO
C              PXMIN.  IF ONLY SLIGHTLY LARGER THAN PXMAX, THEN CHANGE
C              PX(I) TO PXMAX.  SIMILARLY, SCAN EACH VALUE OF PY(.) AND
C              COMPARE IT TO (PYMIN,PYMAX).  IF ONLY SLIGHTLY SMALLER
C              THAN PYMIN, THEN CHANGE PY(I) TO PYMIN.  IF ONLY SLIGHTLY
C              LARGER THAN PYMAX, THEN CHANGE PY(I) TO PYMAX.
C     NOTE--THIS SUBROUTINE COUNTERACTS INCORRECT COORDINATE CALCULATIONS
C           FOR P WHICH ARE INCORRECT DUE TO ROUNDOFF ERROR AND SQUEEZES
C           THEM BACK TO THEIR PROPER VALUE.
C     DANGER--PX(.) AND PY(.) SERVE AS BOTH INPUT AND
C             OUTPUT ARGUMENTS IN THIS SUBROUTINE.
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--83.6
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--MAY       1983.
C
C--------------------------------------------------------
C
      DIMENSION PX(*)
      DIMENSION PY(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'SQUE')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSQUE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)PXMIN,PXMAX,PYMIN,PYMAX
   52   FORMAT('PXMIN,PXMAX,PYMIN,PYMAX = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)NP
   54   FORMAT('NP = ',I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NP
          DELXMN=PXMIN-PX(I)
          DELXMX=PX(I)-PXMAX
          DELYMN=PYMIN-PY(I)
          DELYMX=PY(I)-PYMAX
          WRITE(ICOUT,56)I,PX(I),PY(I)
   56     FORMAT('I,PX(I),PY(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,57)DELXMN,DELXMX,DELYMN,DELYMN
   57     FORMAT('DELXMN,DELXMX,DELYMN,DELYMN = ',4G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,59)IBUGG4,ISUBG4,IERRG4
   59   FORMAT('IBUGG4,ISUBG4,IERRG4 = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *************************************************
C               **  STEP 1--                                   **
C               **  CHECK TO SEE IF PX(.) NEAR PXMIN OR PXMAX  **
C               *************************************************
C
      IF(NP.GE.1)THEN
        DO1100I=1,NP
C
          IF(PX(I).LT.PXMIN)THEN
            DELMIN=PXMIN-PX(I)
            IF(DELMIN.LE.0.0001)PX(I)=PXMIN
          ELSEIF(PX(I).GT.PXMAX)THEN
            DELMAX=PX(I)-PXMAX
            IF(DELMAX.LE.0.0001)PX(I)=PXMAX
          ENDIF
 1100   CONTINUE
      ENDIF
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  CHECK TO SEE IF PY(.) NEAR PYMIN OR PYMAX  **
C               *************************************************
C
      IF(NP.GE.1)THEN
        DO1200I=1,NP
C
          IF(PY(I).LT.PYMIN)THEN
            DELMIN=PYMIN-PY(I)
            IF(DELMIN.LE.0.0001)PY(I)=PYMIN
          ELSEIF(PY(I).GT.PYMAX)THEN
            DELMAX=PY(I)-PYMAX
            IF(DELMAX.LE.0.0001)PY(I)=PYMAX
          ENDIF
 1200   CONTINUE
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'SQUE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSQUE--')
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NP
          DELXMN=PXMIN-PX(I)
          DELXMX=PX(I)-PXMAX
          DELYMN=PYMIN-PY(I)
          DELYMX=PY(I)-PYMAX
          WRITE(ICOUT,9016)I,PX(I),PY(I)
 9016     FORMAT('I,PX(I),PY(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,9017)DELXMN,DELXMX,DELYMN,DELYMN
 9017     FORMAT('DELXMN,DELXMX,DELYMN,DELYMN = ',4G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSRC2(Y1,N1,Y2,N2,IVARID,IVARI2,TEMP1,
     1                  ICASE,IFTESH,IFTEDI,PFTEPV,PFTEPM,
     1                  CUTL50,CUTU50,CUTL80,CUTU80,
     1                  CUTL90,CUTU90,CUTL95,CUTU95,
     1                  CUTL99,CUTU99,CTL999,CTU999,
     1                  ICAPSW,ICAPTY,IFORSW,MAXNXT,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE GENERATES CONFIDENCE LIMITS FOR THE RATIO OF
C              TWO STANDARD DEVIATIONS (OR VARIANCES) , I.E., S(Y1)/S(Y2)
C              (NOT S(Y1/Y2) FOR THE DATA IN THE INPUT VECTORS Y1 AND Y2.
C              THE Y1 AND Y2 DATA SETS ARE NOT ASSUMED TO BE PAIRED AND
C              DO NOT HAVE TO HAVE THE SAME NUMBER OF OBSERVATIONS.
C
C              BY DEFAULT, THE STANDARD F-BASED INTERVAL IS GENERATED.
C              THIS IS KNOWN TO BE VERY SENSITIVE TO NON-NORMALITY.
C              THE USER CAN REQUEST A MODIFICATION DUE TO SHOEMAKR
C              THAT ADJUSTS THE DEGREES OF FREEDOM TO MAKE THE TEST
C              MORE ROBUST.  BONETT HAS SUGGESTED A MODIFICATION TO
C              SHOEMAKER AND ALSO SUGGESTS ANOTHER METHOD TO MAKE
C              THE INTERVAL MORE ROBUST.
C     INPUT  ARGUMENTS--Y1     = THE SINGLE PRECISION VECTOR OF
C                                OBSERVATIONS FOR THE NUMERATOR
C                                VARIABLE.
C                     --N1     = THE INTEGER NUMBER OF
C                                OBSERVATIONS IN THE VECTOR Y1.
C                     --Y2     = THE SINGLE PRECISION VECTOR OF
C                                OBSERVATIONS FOR THE DENOMINATOR
C                                VARIABLE.
C                     --N2     = THE INTEGER NUMBER OF
C                                OBSERVATIONS IN THE VECTOR Y2.
C     REFERENCES--BONETT (2006), "ROBUST CONFIDENCE INTERVALS FOR A
C                 RATIO OF STANDARD DEVIATIONS," APPLIED PYSCHOLOGICAL
C                 MEASUREMENT, Vol. 30, No. 5, PP. 432-439.
C               --SHOEMAKER (2003), "FIXING THE F TEST FOR EQUAL
C                 VARIANCES," THE AMERICAN STATISTICIAN, VOL. 57,
C                 PP. 105-114.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2023/06
C     ORIGINAL VERSION--JUNE      2023.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASE
      CHARACTER*4 IFTESH
      CHARACTER*4 IFTEDI
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
C
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICASA2
C
C---------------------------------------------------------------------
C
      REAL Y1(*)
      REAL Y2(*)
      REAL TEMP1(*)
C
      PARAMETER (NUMALP=6)
C
      REAL ALPHA(NUMALP)
      REAL CONF(NUMALP)
      REAL T(NUMALP)
      REAL LOWLIM(NUMALP)
      REAL UPPLIM(NUMALP)
C
      PARAMETER(NUMCLI=5)
      PARAMETER(MAXLIN=2)
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPSR'
      ISUBN2='C2  '
      IERROR='NO'
      IWRITE='OFF'
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      CONF(1)=50.0
      CONF(2)=80.0
      CONF(3)=90.0
      CONF(4)=95.0
      CONF(5)=99.0
      CONF(6)=99.9
      DO40II=1,NUMALP
        ALPHA(II)=CONF(II)/100.
   40 CONTINUE
C
      CUTL50=CPUMIN
      CUTU50=CPUMIN
      CUTL80=CPUMIN
      CUTU80=CPUMIN
      CUTL90=CPUMIN
      CUTU90=CPUMIN
      CUTL95=CPUMIN
      CUTU95=CPUMIN
      CUTL99=CPUMIN
      CUTU99=CPUMIN
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SRC2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPSRC2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASE,N1,N2
   52   FORMAT('IBUGA3,ISUBRO,ICASE,N1,N2 = ',3(2X,A4),2I8)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,54)IFTESH,IFTEDI,PFTEPV,PFTEPM
   54   FORMAT('IFTESH,N1,N2 = ',2(2X,A4),2G15.7)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N1
          WRITE(ICOUT,57)I,Y1(I)
   57     FORMAT('I,Y1(I) = ',I8,G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
        DO66I=1,N2
          WRITE(ICOUT,67)I,Y2(I)
   67     FORMAT('I,Y2(I) = ',I8,G15.7)
          CALL DPWRST('XXX','WRIT')
   66   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='6'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NMIN=4
      IF(N1.LT.NMIN .OR. N2.LT.NMIN)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN RATIO OF STANDARD DEVIATIONS ',
     1         'CONFIDENCE LIMITS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,103)NMIN
  103   FORMAT('      THE RESPONSE VARIABLES MUST HAVE AT LEAST ',
     1         I5,' OBSERVATIONS.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,105)IVARID(1),IVARI2(1),N1
  105   FORMAT('      SAMPLE SIZE FOR ',2A4,' = ',I8)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,105)IVARID(2),IVARI2(2),N2
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ***************************************
C               **  STEP 2--                         **
C               **  COMPUTE CONFIDENCE LIMITS        **
C               **  FOR VARIOUS PROBABILITY VALUES.  **
C               ***************************************
C
      ISTEPN='8'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPSRC3(Y1,N1,Y2,N2,MAXNXT,
     1            IFTESH,IFTEDI,PFTEPV,PFTEPM,
     1            ICASE,ALPHA,NUMALP,TEMP1,
     1            Y1MEAN,Y1SD,Y2MEAN,Y2SD,LOWLIM,UPPLIM,
     1            IDFNUM,IDFDEN,ADFNUM,ADFDEN,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      CUTL50=LOWLIM(1)
      CUTU50=UPPLIM(1)
      CUTL80=LOWLIM(2)
      CUTU80=UPPLIM(2)
      CUTL90=LOWLIM(3)
      CUTU90=UPPLIM(3)
      CUTL95=LOWLIM(4)
      CUTU95=UPPLIM(4)
      CUTL99=LOWLIM(5)
      CUTU99=UPPLIM(5)
      CTL999=LOWLIM(6)
      CTU999=UPPLIM(6)
C
C               ****************************
C               **  STEP 3--              **
C               **  WRITE EVERYTHING OUT  **
C               ****************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      IF(ICASE.EQ.'SD  ')THEN
        ITITLE='Confidence Limits for the Ratio of Standard Deviations'
        NCTITL=54
      ELSE
        ITITLE='Confidence Limits for the Ratio of Variances'
        NCTITL=44
      ENDIF
C
      IF(IFTESH.EQ.'SHOE')THEN
        ITITLZ='(Use Shoemaker Modifications to Degrees of Freedom)'
        NCTITZ=51
      ELSEIF(IFTESH.EQ.'SHO2')THEN
        ITITLZ=
     1  '(Shoemaker Modifications with Rounded Degrees of Freedom)'
        NCTITZ=57
      ELSEIF(IFTESH.EQ.'BONE')THEN
        ITITLZ='(Bonett Method for Robustness)'
        NCTITZ=30
      ELSE
        ITITLZ=' '
        NCTITZ=0
      ENDIF
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Numerator Variable:   '
      WRITE(ITEXT(ICNT)(23:26),'(A4)')IVARID(1)(1:4)
      WRITE(ITEXT(ICNT)(27:30),'(A4)')IVARI2(1)(1:4)
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Denominator Variable: '
      WRITE(ITEXT(ICNT)(23:26),'(A4)')IVARID(2)(1:4)
      WRITE(ITEXT(ICNT)(27:30),'(A4)')IVARI2(2)(1:4)
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics for Numerator Variable:'
      NCTEXT(ICNT)=42
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N1)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Mean:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=Y1MEAN
      IDIGIT(ICNT)=NUMDIG
      IF(ICASE.EQ.'SD  ')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Sample Standard Deviation:'
        NCTEXT(ICNT)=26
        AVALUE(ICNT)=Y1SD
        IDIGIT(ICNT)=NUMDIG
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='Sample Variance:'
        NCTEXT(ICNT)=16
        AVALUE(ICNT)=Y1SD
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics for Variable 2:'
      NCTEXT(ICNT)=34
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N2)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Mean:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=Y2MEAN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      IF(ICASE.EQ.'SD  ')THEN
        ITEXT(ICNT)='Sample Standard Deviation:'
        NCTEXT(ICNT)=26
        AVALUE(ICNT)=Y2SD
        IDIGIT(ICNT)=NUMDIG
      ELSE
        ITEXT(ICNT)='Sample Variance:'
        NCTEXT(ICNT)=16
        AVALUE(ICNT)=Y2SD
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
C     NOTE: BONETT'S METHOD IS BASED ON A NORMAL DISTRIBUTION, SO
C           NO DEGREES OF FREEDOM ARE PRINTED.
C
      IF(IFTESH.EQ.'SHOE')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Degrees of Freedom (Numerator):'
        NCTEXT(ICNT)=31
        AVALUE(ICNT)=ADFNUM
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Degrees of Freedom (Denomerator):'
        NCTEXT(ICNT)=33
        AVALUE(ICNT)=ADFDEN
        IDIGIT(ICNT)=NUMDIG
      ELSEIF(IFTESH.EQ.'DEFA' .OR. IFTESH.EQ.'SHO2')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Degrees of Freedom (Numerator):'
        NCTEXT(ICNT)=31
        AVALUE(ICNT)=IDFNUM
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Degrees of Freedom (Denomerator):'
        NCTEXT(ICNT)=33
        AVALUE(ICNT)=IDFDEN
        IDIGIT(ICNT)=0
      ENDIF
C
      IF(ICASE.EQ.'SD  ')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Ratio of Standard Deviations:'
        NCTEXT(ICNT)=29
        AVALUE(ICNT)=Y1SD/Y2SD
        IDIGIT(ICNT)=NUMDIG
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='Ratio of Variances:'
        NCTEXT(ICNT)=19
        AVALUE(ICNT)=Y1SD**2/Y2SD**2
        IDIGIT(ICNT)=NUMDIG
      ENDIF
C
      NUMROW=ICNT
      DO5210I=1,NUMROW
        NTOT(I)=15
 5210 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='9B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASA2='SRC2'
      IF(ICASE.EQ.'SD  ')THEN
        DO390II=1,NUMALP
          T(II)=Y1SD/Y2SD
  390   CONTINUE
      ELSE
        DO395II=1,NUMALP
          T(II)=Y1SD**2/Y2SD**2
  395   CONTINUE
      ENDIF
      CALL DPDT11(CONF,T,T,LOWLIM,UPPLIM,
     1            ICASA2,ICAPSW,ICAPTY,NUMDIG,
     1            ISUBRO,IBUGA3,IERROR)
C
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SRC2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSRC2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSRC3(Y1,N1,Y2,N2,MAXNXT,
     1                  IFTESH,IFTEDI,PFTEPV,PFTEPM,
     1                  ICASE,ALPHA,NUMALP,TEMP1,
     1                  Y1MEAN,Y1SD,Y2MEAN,Y2SD,LOWLIM,UPPLIM,
     1                  IDF1,IDF2,ADF1,ADF2,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--THIS ROUTINE GENERATES A CONFIDENCE INTERVAL FOR THE
C              RATIO OF TWO STANDARD DEVIATIONS (OR VARIANCES).
C
C              THIS CAN GENERATE THE WELL KNOWN CONFIDENCE LIMITS
C              BASED ON THE F DISTRIBUTION.  THIS TEST IS KNOWN
C              TO BE VERY SENSITIVE TO DEPARTURES FROM NORMALITY.
C              VARIANTS FROM SHOEMAKER AND BONETT THAT MAKE THE
C              CONFIDENCE LIMIT MORE ROBUST ARE ALSO AVAILABLE.
C     EXAMPLE--STANDARD DEVIATION CONFIDENCE LIMITS Y1 Y2
C              VARIANCE CONFIDENCE LIMITS Y1 Y2
C     REFERENCES--BONETT (2006), "ROBUST CONFIDENCE INTERVALS FOR A
C                 RATIO OF STANDARD DEVIATIONS," APPLIED PYSCHOLOGICAL
C                 MEASUREMENT, Vol. 30, No. 5, PP. 432-439.
C               --SHOEMAKER (2003), "FIXING THE F TEST FOR EQUAL
C                 VARIANCES," THE AMERICAN STATISTICIAN, VOL. 57,
C                 PP. 105-114.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2023/06
C     ORIGINAL VERSION--JUNE      2023.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IFTESH
      CHARACTER*4 IFTEDI
      CHARACTER*4 ICASE
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      REAL Y1(*)
      REAL Y2(*)
      REAL ALPHA(*)
      REAL TEMP1(*)
      REAL LOWLIM(*)
      REAL UPPLIM(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPSR'
      ISUBN2='C3  '
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SRC3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPSRC3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,IFTESH,IFTEDI,ICASE
   52   FORMAT('IBUGA3,ISUBRO,IFTESH,IFTEDI,ICASE= ',5(A4,2X))
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,53)N1,N2,MAXNXT,NUMALP,PFTEPV,PFTEPM
   53   FORMAT('N1,N2,MAXNXT,NUMALP,PFTEPV,PFTEPM = ',4I8,2G15.7)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N1
          WRITE(ICOUT,57)I,Y1(I)
   57     FORMAT('I,Y1(I) = ',I8,G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
        DO66I=1,N2
          WRITE(ICOUT,67)I,Y2(I)
   67     FORMAT('I,Y2(I) = ',I8,G15.7)
          CALL DPWRST('XXX','WRIT')
   66   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N1.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1111)
 1111   FORMAT('***** ERROR IN F-TEST')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1113)
 1113   FORMAT('      THE NUMBER OF OBSERVATIONS IN THE FIRST ',
     1         'RESPONSE VARIABLE IS LESS THAN TWO.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1115)N1
 1115   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ELSEIF(N2.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1111)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1123)
 1123   FORMAT('      THE NUMBER OF OBSERVATIONS IN THE SECOND ',
     1         'RESPONSE VARIABLE IS LESS THAN TWO.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1115)N2
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y1(1)
      DO1135I=2,N1
        IF(Y1(I).NE.HOLD)GOTO1139
 1135 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1111)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1131)HOLD
 1131 FORMAT('      THE FIRST RESPONSE VARIABLE HAS ALL ELEMENTS = ',
     1       G15.7)
      CALL DPWRST('XXX','WRIT')
      IERROR='YES'
      GOTO9000
 1139 CONTINUE
C
      HOLD=Y2(1)
      DO1145I=2,N2
        IF(Y2(I).NE.HOLD)GOTO1149
 1145 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1111)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1141)HOLD
 1141 FORMAT('      THE SECOND RESPONSE VARIABLE HAS ALL ELEMENTS = ',
     1       G15.7)
      CALL DPWRST('XXX','WRIT')
      IERROR='YES'
      GOTO9000
 1149 CONTINUE
C
C               ********************************
C               **  STEP 21--                 **
C               **  CARRY OUT CALCULATIONS    **
C               **  FOR THE CONFIDENCE LIMIT  **
C               ********************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWRITE='OFF'
C
      CALL MEAN(Y1,N1,IWRITE,Y1MEAN,IBUGA3,IERROR)
      CALL SD(Y1,N1,IWRITE,Y1SD,IBUGA3,IERROR)
      Y1VAR=Y1SD**2
C
      CALL MEAN(Y2,N2,IWRITE,Y2MEAN,IBUGA3,IERROR)
      CALL SD(Y2,N2,IWRITE,Y2SD,IBUGA3,IERROR)
      Y2VAR=Y2SD**2
C
      AN1=N1
      AN2=N2
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SRC3')THEN
        WRITE(ICOUT,1161)Y1MEAN,Y2MEAN,Y1SD,Y2SD,Y1VAR,Y2VAR
 1161   FORMAT('Y1MEAN,Y2MEAN,Y1SD,Y2SD,Y1VAR,Y2VAR = ',6G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      IF(IFTESH.EQ.'DEFA')THEN
C
C       STANDARD F TEST
C
        ISTEPN='22A'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC3')
     1     CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        RATIO=Y1VAR/Y2VAR
        IDF1=N1-1
        IDF2=N2-1
        DO2210I=1,NUMALP
          ALPHAT=ALPHA(I)
          IF(ALPHAT.GE.1.0)ALPHAT=ALPHAT/100.
          IF(ALPHAT.GT.0.5)ALPHAT=1.0-ALPHAT
          ALPHAT=ALPHAT/2.0
          ALPHAT=1.0-ALPHAT
          CALL FPPF(ALPHAT,IDF2,IDF1,FPPFL)
          CALL FPPF(ALPHAT,IDF1,IDF2,FPPFU)
          LOWLIM(I)=RATIO/FPPFL
          UPPLIM(I)=RATIO*FPPFU
          IF(ICASE.EQ.'SD  ')THEN
            LOWLIM(I)=SQRT(LOWLIM(I))
            UPPLIM(I)=SQRT(UPPLIM(I))
          ENDIF
 2210   CONTINUE
      ELSEIF(IFTESH.EQ.'SHOE' .OR. IFTESH.EQ.'SHO2')THEN
C
C       SHOEMAKER METHOD
C
C       DEGREES OF FREEDOM FOR SHOEMAKER'S MODIFICATION
C
C       SHOEMAKER'S FORMULA FOR THE DEGREES OF FREEDOM IS:
C
C           r(i) = 2*N(i)/[(mu4/sigma**4) - (N(i)-3)/(N(i)-1)]
C
C       WHERE
C
C           mu4 = SUM[i=1 to 2][SUM[j=1 to N(i)]
C                 [[(X(ij) - XBAR(i))**4]]/(N1+N2)
C
C           sigma**2 = (N1-1)*S1**2 + (N2-1)**S2**2/(N1+N2)
C
        ISTEPN='22B'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC3')
     1     CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        RATIO=Y1VAR/Y2VAR
        DEN=AN1+AN2
C
C       NOTE THAT THE BIASED VARIANCE ESTIMATOR IS USED.
C       ADJUST Y1VAR BY (N(i)-1)/N(i) (HIS EXAMPLE USING POOLED
C       VARIANCE SEEMS TO USE UNBIASED VARIANCE, SO COMMENT
C       THIS OUT FOR NOW).
C
C       ALLOW USER SPECIFIED POOLED VARIANCE AND POOLED MU
C       (E.G., IF THERE ARE MORE THAN TWO SETS OF DATA, MIGHT WANT
C       TO USE ALL SETS FOR POOLED MU AND VARIANCE EVEN THOUGH
C       ONLY TWO SETS ARE BEING COMPARED HERE).
C
        IF(PFTEPV.GT.0.0 .AND. PFTEPM.NE.CPUMIN)THEN
          Y1VARB=0.0
          Y2VARB=0.0
          SIGMA2=PFTEPV
          SIGMA4=SIGMA2**2
          U4=PFTEPM
        ELSE
CCCCC     Y1VARB=((AN1-1.0)/AN1)*Y1VAR
CCCCC     Y2VARB=((AN2-1.0)/AN2)*Y2VAR
          Y1VARB=Y1VAR
          Y2VARB=Y2VAR
          SIGMA2=(AN1-1.0)*Y1VARB + (AN2-1.0)*Y2VARB
          SIGMA2=SIGMA2/DEN
          SIGMA4=SIGMA2**2
          SUM1=0.0
          DO2310II=1,N1
            SUM1=SUM1 + ((Y1(II) - Y1MEAN)**4)
 2310     CONTINUE
          DO2320II=1,N2
            SUM1=SUM1 + ((Y2(II) - Y2MEAN)**4)
 2320     CONTINUE
          U4=SUM1/DEN
        ENDIF
        AK4=U4/SIGMA4
        ANUM=2.0*AN1
        ADEN=AK4 - ((AN1-3.0)/(AN1-1.0))
        R1=ANUM/ADEN
        IF(R1.LE.1.0)R1=1.0
        ANUM=2.0*AN2
        ADEN=AK4 - ((AN2-3.0)/(AN2-1.0))
        R2=ANUM/ADEN
        IF(R2.LE.1.0)R2=1.0
        ADF1=R1
        ADF2=R2
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC3')THEN
          WRITE(ICOUT,2331)RATIO,Y1VARB,Y2VARB,SIGMA2,SIGMA4
 2331     FORMAT('SHOEMAKER METHOD: RATIO,Y1VARB,Y2VARB,SIGMA2,',
     1           'SIGMA4 = ',5G15.7)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,2333)U4,AK4,R1,R2,ANUM,ADEN
 2333     FORMAT('U4,AK4,R1,R2,ANUM,ADEN = ',6G15.7)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
        IF(IFTESH.EQ.'SHOE')THEN
          DO2340I=1,NUMALP
            ALPHAT=ALPHA(I)
            IF(ALPHAT.GE.1.0)ALPHAT=ALPHAT/100.
            IF(ALPHAT.GT.0.5)ALPHAT=1.0-ALPHAT
            ALPHAT=ALPHAT/2.0
            ALPHAT=1.0-ALPHAT
            CALL F2PPF(ALPHAT,ADF2,ADF1,FPPFL)
            CALL F2PPF(ALPHAT,ADF1,ADF2,FPPFU)
            LOWLIM(I)=RATIO/FPPFL
            UPPLIM(I)=RATIO*FPPFU
            IF(ICASE.EQ.'SD  ')THEN
              LOWLIM(I)=SQRT(LOWLIM(I))
              UPPLIM(I)=SQRT(UPPLIM(I))
            ENDIF
 2340     CONTINUE
        ELSE
          IDF1=INT(ADF1+0.99)
          IDF2=INT(ADF2)
          IF(IDF2.LT.1)IDF2=1
          DO2350I=1,NUMALP
            ALPHAT=ALPHA(I)
            IF(ALPHAT.GE.1.0)ALPHAT=ALPHAT/100.
            IF(ALPHAT.GT.0.5)ALPHAT=1.0-ALPHAT
            ALPHAT=ALPHAT/2.0
            ALPHAT=1.0-ALPHAT
            CALL FPPF(ALPHAT,IDF2,IDF1,FPPFL)
            CALL FPPF(ALPHAT,IDF1,IDF2,FPPFU)
            LOWLIM(I)=RATIO/FPPFL
            UPPLIM(I)=RATIO*FPPFU
            IF(ICASE.EQ.'VARI')THEN
              LOWLIM(I)=LOWLIM(I)**2
              UPPLIM(I)=UPPLIM(I)**2
            ENDIF
 2350     CONTINUE
        ENDIF
      ELSEIF(IFTESH.EQ.'BONE')THEN
C
C       BONETT SUGGESTS THE FOLLOWING 2 METHODS:
C
C       1. FOR SHOEMAKER'S METHOD, ROUND R1 UP TO THE NEAREST INTEGER
C          AND ROUND R2 DOWN TO THE NEAREST INTEGER (BUT NOT LOWER
C          THAN 1).  IMPLEMENTED ABOVE
C
C       2. BONETT RECOMMENDS THE FOLLOWING INTERVAL:
C
C             EXP[LN(C*S1**2/S2**2)/(MU4/SIGMA4] +/- Z(ALPHA/2)*SE
C
C          WHERE
C
C              C = {N1*(1-Z(ALPHA/2)}/{N2*(N2-Z(ALPHA/2))}
C
C              SE = SQRT{((MU4/SIGMA**4) - K1).(N1-1) +
C                        ((MU4/SIGMA**4) - K2)/(N2-1)}
C
C              K1 = (N1-3)/N1
C              K2 = (N2-3)/N2
C
C          NOTE THAT C DEPENDS ON THE VALUE OF ALPHA.
C
C          ALSO, NOTE THAT FOR THE BONETT METHOD, MU4 SUBTRACTS THE
C          TRIMMED MEAN RATHER THAN THE REGULAR MEAN WITH TRIMMING
C          PROPORTION EQUAL TO  1/SQRT{2*(N-4)}.
C
        AN=AN1+AN2
        AVAL=1.0/(2.0*SQRT(AN-4.0))
        AVAL=100.*AVAL
        IVAL=INT(AVAL)
        AVAL=REAL(IVAL)
        P1=AVAL/2.0
        P2=P1
        NTRIM1=0
        NTRIM2=0
        CALL TRIMME(Y1,N1,P1,P2,NTRIM1,NTRIM2,IWRITE,TEMP1,
     1              MAXNXT,Y1TRME,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')Y1TRME=Y1MEAN
        NTRIM1=0
        NTRIM2=0
        CALL TRIMME(Y2,N2,P1,P2,NTRIM1,NTRIM2,IWRITE,TEMP1,
     1              MAXNXT,Y2TRME,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')Y2TRME=Y2MEAN
C
        SUM1=0.0
        SUM2=0.0
        DO2410II=1,N1
          SUM1=SUM1 + ((Y1(II) - Y1TRME)**4)
          SUM2=SUM2 + ((Y1(II) - Y1MEAN)**2)
 2410   CONTINUE
        DO2420II=1,N2
          SUM1=SUM1 + (Y2(II) - Y2TRME)**4
          SUM2=SUM2 + ((Y2(II) - Y2MEAN)**2)
 2420   CONTINUE
        U4=SUM1
        SIGMA2=SUM2
        SIGMA4=SUM2**2
        DEN=AN1+AN2
        AK4=DEN*(U4/SIGMA4)
C
        DO2430I=1,NUMALP
C
          ALPHAT=ALPHA(I)
          IF(ALPHAT.GE.1.0)ALPHAT=ALPHAT/100.
          IF(ALPHAT.GT.0.5)ALPHAT=1.0-ALPHAT
          ALPHAT=ALPHAT/2.0
          CALL NORPPF(ALPHAT,ANPPF)
          ANPPF=ABS(ANPPF)
          AK1=(AN1-3.0)/AN1
          AK2=(AN2-3.0)/AN2
C
          TERM1=AN1/(AN1-ANPPF)
          TERM2=AN2/(AN2-ANPPF)
          IF(TERM1.LE.0.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1111)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,2131)HOLD
 2131       FORMAT('      THE SAMPLE SIZE FOR SAMPLE 1 IS TOO SMALL ',
     1             'FOR BONETT METHOD.')
            CALL DPWRST('XXX','WRIT')
            IERROR='YES'
            GOTO9000
          ENDIF
          IF(TERM2.LE.0.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1111)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,2133)HOLD
 2133       FORMAT('      THE SAMPLE SIZE FOR SAMPLE 1 IS TOO SMALL ',
     1             'FOR BONETT METHOD.')
            CALL DPWRST('XXX','WRIT')
            IERROR='YES'
            GOTO9000
          ENDIF
C
          C=TERM1/TERM2
C
          DEN=AN1+AN2
          TERM3=(AK4 - AK1)/(AN1-1.0)
          TERM4=(AK4 - AK2)/(AN2-1.0)
          SE=SQRT(TERM3 + TERM4)
C
          TERM5=LOG(C*Y1VAR/Y2VAR)
          STATVA=EXP(TERM5)
          LOWLIM(I)=STATVA - ANPPF*SE
          UPPLIM(I)=STATVA + ANPPF*SE
          IF(ICASE.EQ.'SD  ')THEN
            LOWLIM(I)=SQRT(LOWLIM(I))
            UPPLIM(I)=SQRT(UPPLIM(I))
          ENDIF
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SRC3')THEN
            WRITE(ICOUT,2431)ALPHAT,ANPPF,AK1,AK2,C,DEN
 2431       FORMAT('BONETT METHOD: ALPHAT,ANPPF,AK1,AK2,C,DEN = ',
     1             6G15.7)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,2432)SUM1,SUM2,U4,SIGMA2,SIGMA4,AK4
 2432       FORMAT('SUM1,SUM2,U4,SIGMA2,SIGMA4,AK4 = ',6G15.7)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,2434)TERM1,TERM2,TERM3,TERM4,TERM5,SE,STATVA
 2434       FORMAT('TERM1,TERM2,TERM3,TERM4,TERM5,SE,STATVA = ',7G15.7)
            CALL DPWRST('XXX','WRIT')
          ENDIF
 2430   CONTINUE
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SRC3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSRC3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','WRIT')
        DO9020I=1,NUMALP
          WRITE(ICOUT,9022)I,LOWLIM(I),UPPLIM(I)
 9022     FORMAT('I,LOWLIM(I),UPPLIM(I) = ',I5,2G15.7)
          CALL DPWRST('XXX','WRIT')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSSPL(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--SPLIT A STRING INTO SEPARATE WORDS.
C     EXAMPLE--LET SBASE = STRING SPLIT SORG
C
C              THAT IS, SORG WILL BE SPLIT INTO SEPARATE WORDS WHICH
C              WILL BE SAVED TO STRINGS SBASE1, SBASE2, ...
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018/09
C     ORIGINAL VERSION--SEPTEMBER 2018.
C     UPDATED         --AUGUST    2020. SAVE THE NUMBER OF WORDS
C                                       IN INTERNAL PARAMETER "NUMBWORD"
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*8 IHLEFT
      CHARACTER*8 ISTRIN
      CHARACTER*4 IHLEF3
      CHARACTER*4 IHLEF4
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISTEPN
C
      CHARACTER*40 ISTRZZ
      CHARACTER*4  ISTRZ2(1000)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPSS'
      ISUBN2='PL  '
      IERROR='NO'
C
      ILOC3=0
      ISTRT=0
      ISTOP=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SSPL')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSSPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,2A4,2X,A4,2I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *************************************
C               **  STEP 1--                       **
C               **  CHECK IF VARIABLE ON RHS IS    **
C               **  A CURRENTLY EXISTING STRING.   **
C               *************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SSPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(5)
      IHRIG2=IHARG2(5)
C
      DO110II=1,NUMNAM
        I2=II
        IF(IHRIGH.EQ.IHNAME(I2).AND.
     1     IHRIG2.EQ.IHNAM2(I2))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            ISTRT=IVSTAR(I2)
            ISTOP=IVSTOP(I2)
            NLEN=ISTOP-ISTRT+1
            GOTO119
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,121)
  121       FORMAT('****** ERROR IN STRING SPLIT--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,113)IHRIGH,IHRIG2
  113       FORMAT('      THE NAME ',2A4,' ALREADY EXISTS, BUT NOT ',
     1             'AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,115)
  115       FORMAT('      THE STRING SPLIT WILL NOT BE PERFORMED.')
            CALL DPWRST('XXX','BUG ')
            GOTO9000
          ENDIF
        ENDIF
  110 CONTINUE
  119 CONTINUE
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  EXTRACT THE BASE NAME ON THE LHS OF THE    **
C               **  EQUAL SIGN AND THEN LOOP THROUGH THE       **
C               **  NUMBER OF STRINGS TO CREATE.               **
C               *************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SSPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT(1:4)=IHARG(1)
      IHLEFT(5:8)=IHARG2(1)
      NBASE=1
      DO210I=8,1,-1
        IF(IHLEFT(I:I).NE.' ')THEN
          NBASE=I
          GOTO219
        ENDIF
  210 CONTINUE
  219 CONTINUE
C
C
C               **********************************
C               **  STEP 3--                    **
C               **  SCAN STRING AND SPLIT INTO  **
C               **  SEPARATE WORDS.             **
C               **********************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SSPL')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,301)ISTRT,ISTOP,ILISTL,NLEN
  301   FORMAT('ISTRT,ISTOP,ILISTL,NLEN = ',4I6)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFLAG=0
      IFLAGQ=0
      NSTR=0
      ICNT=0
      ISTRIN=' '
      ISTRZZ=' '
C
C     IFLAG  = 0 => LOOKING FOR FIRST NON-BLANK CHARACTER
C            = 1 => ADD TO NEXT SUB-STRING
C            = 2 => CURENT SUB-STRING IS EMPTY (I.E., LOOKING
C                   FOR FIRST NON-DELIMITER CHARACTER)
C     IFLAGQ = 0 => NO QUOTES CURRENTLY ACTIVE
C            = 1 => CURRENTLY IN QUOTED SECTION (SO
C                   IGNORE WORD DELIMITER)
C
      DO310II=ISTRT,ISTOP
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SSPL')THEN
          WRITE(ICOUT,311)II,IFLAG
  311     FORMAT('II,IFLAG = ',2I5)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(IFLAG.EQ.0)THEN
          IF(IFUNC(II).EQ.' ')THEN
            GOTO310
          ELSEIF(IFUNC(II).EQ.IWRDDL(1:1))THEN
            GOTO310
          ELSE
            IFLAG=1
            IF(IFUNC(II).EQ.'"')THEN
              IFLAGQ=1
            ELSE
              ICNT=ICNT+1
              ISTRZZ(ICNT:ICNT)=IFUNC(II)(1:1)
            ENDIF
          ENDIF
          GOTO310
        ENDIF
C
        IF(IFUNC(II).EQ.'"')THEN
          IF(IFLAGQ.EQ.0)THEN
            IFLAGQ=1
            GOTO310
          ELSE
            IF(II.LT.ISTOP)THEN
              IFLAGQ=0
              GOTO310
            ENDIF
          ENDIF
        ENDIF
C
        IF(IFLAG.EQ.2)THEN
C
          IF(IFUNC(II)(1:1).EQ.IWRDDL(1:1) .AND. IFLAGQ.EQ.0)THEN
            GOTO310
          ELSE
            IFLAG=1
            ICNT=ICNT+1
            ISTRZZ(ICNT:ICNT)=IFUNC(II)(1:1)
          ENDIF
        ELSEIF(IFLAG.EQ.1)THEN
          IF(II.EQ.ISTOP)THEN
            IF(IFLAGQ.EQ.1 .AND. IFUNC(II).EQ.'"')THEN
              CONTINUE
            ELSE
              ICNT=ICNT+1
              ISTRZZ(ICNT:ICNT)=IFUNC(II)(1:1)
            ENDIF
          ENDIF
          IF((IFUNC(II)(1:1).EQ.IWRDDL(1:1) .AND. IFLAGQ.EQ.0) .OR.
     1        II.EQ.ISTOP)THEN
C
C           CREATE NAME FOR NEW STRING
C
            IF(ICNT.LE.0)THEN
              ISTRZZ=' '
              ICNT=0
              IFLAG=2
              GOTO310
            ENDIF
C
            NSTR=NSTR+1
            IF(NSTR.GT.999)GOTO319
            IF(NSTR.LE.9)THEN
              IF(NBASE.GT.7)NBASE=7
            ELSEIF(NSTR.LE.99)THEN
              IF(NBASE.GT.6)NBASE=6
            ELSE
              IF(NBASE.GT.5)NBASE=5
            ENDIF
C
            ISTRIN=' '
            ISTRIN(1:NBASE)=IHLEFT(1:NBASE)
            IF(NSTR.LE.9)THEN
              WRITE(ISTRIN(NBASE+1:NBASE+1),'(I1)')NSTR
            ELSEIF(NSTR.LE.99)THEN
              WRITE(ISTRIN(NBASE+1:NBASE+2),'(I2)')NSTR
            ELSE
              WRITE(ISTRIN(NBASE+1:NBASE+3),'(I3)')NSTR
            ENDIF
C
            IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SSPL')THEN
              WRITE(ICOUT,345)NSTR,ICNT,ISTRIN,ISTRZZ(1:ICNT)
  345         FORMAT('NSTR,ICNT,ISTRIN,ISTRZZ = ',2I6,A8,2X,A40)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
C           NOW UPDATE THE NEW STRING IN THE NAME/FUNCTION TABLES
C
            NEWNAM='NO'
            NEWCOL='NO'
            ICASEL='UNKN'
            NIOLD1=0
            ICOLL=0
C
            DO510JJ=1,NUMNAM
              I2=JJ
              IF(ISTRIN(1:4).EQ.IHNAME(I2).AND.
     1           ISTRIN(5:8).EQ.IHNAM2(I2))THEN
                IF(IUSE(I2).EQ.'F')THEN
                  ICASEL='STRI'
                  ILISTL=I2
                  GOTO519
                ELSE
                  WRITE(ICOUT,999)
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,121)
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,513)ISTRIN
  513             FORMAT('      THE NAME ',A8,' ALREADY EXISTS, BUT ',
     1               'NOT AS A STRING.')
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,515)
  515             FORMAT('      THIS STRING WILL NOT BE CREATED.')
                  CALL DPWRST('XXX','BUG ')
                  GOTO599
                ENDIF
              ENDIF
  510       CONTINUE
            NEWNAM='YES'
            ICASEL='STRI'
C
            ILISTL=NUMNAM+1
            IF(ILISTL.GT.MAXNAM)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,121)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,522)
  522         FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1               'FUNCTION')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,524)MAXNAM
  524         FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
              CALL DPWRST('XXX','BUG ')
              GOTO599
            ENDIF
C
  519       CONTINUE
            IHLEF3=ISTRIN(1:4)
            IHLEF4=ISTRIN(5:8)
            DO551J=1,ICNT
              ISTRZ2(J)=' '
              ISTRZ2(J)(1:1)=ISTRZZ(J:J)
  551       CONTINUE
C
            CALL DPINFU(ISTRZ2,ICNT,IHNAME,IHNAM2,IUSE,IN,
     1                  IVSTAR,IVSTOP,
     1                  NUMNAM,IANS,IWIDTH,IHLEF3,IHLEF4,ILISTL,
     1                  NEWNAM,MAXNAM,
     1                  IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
C
C           RESET SOME PARAMETERS
C
  599       CONTINUE
            ISTRZZ=' '
            ICNT=0
            IFLAG=2
          ELSE
            ICNT=ICNT+1
            ISTRZZ(ICNT:ICNT)=IFUNC(II)(1:1)
          ENDIF
        ENDIF
 310  CONTINUE
 319  CONTINUE
C
C     SAVE NUMBER OF STRINGS IN PARAMETER "NUMBWORD"
C
      IHLEF3='NUMB'
      IHLEF4='WORD'
      VALUE0=REAL(NSTR)
      CALL DPADDP(IHLEF3,IHLEF4,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGA3,IERROR)
C
C               *****************************************************
C               **  STEP 7--                                       **
C               **  PRINT FEEDBACK MESSAGE                         **
C               *****************************************************
C
      ISTEPN='7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'SSPL')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,710)NSTR
  710   FORMAT(I5,' STRINGS HAVE BEEN CREATED FROM THE STRING SPLIT.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'SSPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSSPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NSTR
 9013   FORMAT('NSTR = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTAC(ICASL8,ILOCV,ISTANR,ISTARA,
     1                  IFOUNZ,IBEGIN,IEND,ITYPE,IHOL,IHOL2,INT1,
     1                  FLOAT1,IERRO1,
     1                  TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,XTEMP3,
     1                  XTEMP4,XTEMP5,MAXNXT,
CCCCC                   JULY 2002.  ADD ISEED FOR HODHES-LEHMAN
     1                  ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                  DTEMP1,DTEMP2,DTEMP3,
     1                  IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--COMPUTE A LET STATISTIC SUB-COMMAND (HELP STATISTIC FOR
C              THE LIST OF CURRENTLY SUPPORTED STATISTICS).
C     NOTE--THIS SUBROUTINE OPERATES ON A VECTOR AND PRODUCES A
C           PARAMETER (= A SCALAR).
C     NOTE-INPUT WILL BE A VECTOR (OR 2 OR 3 VECTORS).
C          OUTPUT WILL BE A SCALAR--
C               1) PARAMETER, OR
C               2) ELEMENT OF A VECTOR.
C          THE STATISTICS CAN BE CALCULATED ON A FULL VARIABLE
C          OR ON A PARTIAL VARIABLE.
C     EXAMPLE--LET A    = MEAN X                      (A FULL VARIABLE)
C            --LET Y(4) = MEAN X                      (A FULL VARIABLE)
C            --LET A    = MEAN X   SUBSET 2 3 5       (A PARTIAL VAR.)
C            --LET Y(4) = MEAN X   SUBSET 2 3 5       (A PARTIAL VAR.)
C            --LET A    = MEAN X   FOR I = 1 2 10     (A PARTIAL VAR.)
C            --LET Y(4) = MEAN X   FOR I = 1 2 10     (A PARTIAL VAR.)
C            --LET A    = CORRELATION X Y              (A FULL VARIABLE
C            --LET Y(4) = CORRELATION X Y              (A FULL VARIABLE
C            --LET A    = CORRELATION X Y  SUBSET 2 3 5     (A PARTIAL
C            --LET Y(4) = CORRELATION X Y  SUBSET 2 3 5     (A PARTIAL
C            --LET A    = CORRELATION X Y  FOR I = 1 2 10   (A PARTIAL
C            --LET Y(4) = CORRELATION X Y  FOR I = 1 2 10   (A PARTIAL
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION (AS A PART OF DPLET)--DECEMBER 1977.
C     UPDATED         --MAY       1982.
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--MARCH 1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --MARCH     1979.
C     UPDATED         --APRIL     1979.
C     UPDATED         --JULY      1979.
C     UPDATED         --JUNE      1981.
C     UPDATED         --SEPTEMBER 1981.
C     UPDATED         --OCTOBER   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --NOVEMBER  1987. (EXIT OUT IF ERROR)
C     UPDATED         --AUGUST    1988. (WEIGHTED MEAN, MEDIAN, SD, VARIANCE)
C     UPDATED         --DECEMBER  1988. LET Y(K) = MEAN X INSIDE LOOP
C     UPDATED         --JANUARY   1989. TRY TO REUSE A PARAM. AS A VAR.
C     UPDATED         --FEBRUARY  1989. AVERAGE ABSOLUTE DEVIATION (ALAN)
C     UPDATED         --APRIL     1990. EXTREME
C     UPDATED         --SEPTEMBER 1990. CP, CPK, % DEF, EXP. LOSS
C     UPDATED         --AUGUST    1991. COMOVEMENT
C     UPDATED         --FEBRUARY  1994. CHANGE ICASL8: RSD => RESD
C     UPDATED         --FEBRUARY  1994. CHANGE ICASL8: SDM => SDME
C     UPDATED         --FEBRUARY  1994. RELATIVE VARIANCE
C     UPDATED         --FEBRUARY  1994. VARIANCE OF THE MEAN
C     UPDATED         --FEBRUARY  1994. NORMAL PPCC
C     UPDATED         --FEBRUARY  1994. TAGUCHI SN- SN0 SN+ SN00
C     UPDATED         --NOVEMBER  1994. DISTINGUISH RELATIVE SD AND
C                                       COEF OF VARIATION CASES.
C     UPDATED         --MARCH     1995. MAD
C     UPDATED         --NOVEMBER  1998. <VALUE> PERCENTILE
C     UPDATED         --NOVEMBER  1998. CPM, CC
C     UPDATED         --MARCH     1999. CNPK
C     UPDATED         --MARCH     1999. GEOMETRIC MEAN
C     UPDATED         --MARCH     1999. GEOMETRIC STANDARD DEVIATION
C     UPDATED         --APRIL     2001. ARGUMENT LIST TO CP, CPK, CPM
C     UPDATED         --APRIL     2001. CPL, CPU
C     UPDATED         --AUGUST    2001. COMMON DIGITS
C     UPDATED         --AUGUST    2001. NUMBER OF COMMON DIGITS
C     UPDATED         --SEPTEMBER 2001. IQ RANGE
C     UPDATED         --NOVEMBER  2001. BIWEIGHT LOCATION
C     UPDATED         --NOVEMBER  2001. BIWEIGHT SCALE
C     UPDATED         --JULY      2002. WINSORIZED VARIANCE
C     UPDATED         --JULY      2002. WINSORIZED SD
C     UPDATED         --JULY      2002. WINSORIZED COVARIANCE
C     UPDATED         --JULY      2002. WINSORIZED CORRELATION
C     UPDATED         --JULY      2002. HODGES LEHMAN
C     UPDATED         --JULY      2002. PERCENTAGE BEND MIDVARIANCE
C     UPDATED         --JULY      2002. PERCENTAGE BEND CORRELATION
C     UPDATED         --JULY      2002. BIWEIGHT MIDVARIANCE
C     UPDATED         --JULY      2002. BIWEIGHT MIDCOVARIANCE
C     UPDATED         --JULY      2002. BIWEIGHT MIDCORRELATION
C     UPDATED         --JULY      2002. TRIMMED MEAN STANDARD ERROR
C     UPDATED         --JULY      2002. QUANTILE STANDARD ERROR
C     UPDATED         --JULY      2002. QUANTILE
C     UPDATED         --MARCH     2003. ADD 32 "DIFFERENCE OF"
C                                       STATISTICS
C     UPDATED         --APRIL     2003. ADD SN AND QN (AND DIFFERENCE
C                                       OF).  REQUIRED ADDITIONAL
C                                       SCRATCH ARRAYS.
C     UPDATED         --MAY       2003. ADD WEIGHTED TRIMMED MEAN
C     UPDATED         --DECEMBER  2003. BUG IN INTEGRAL (DETERMINE
C                                       WHETHER 1 OR 2 VARIABLES
C                                       SPECIFIED)
C     UPDATED         --OCTOBER   2004. KENDELLS TAU
C     UPDATED         --FEBRUARY  2005. REPEATABILITY SD
C     UPDATED         --FEBRUARY  2005. REPRODUCABILITY SD
C     UPDATED         --SEPTEMBER 2005. RATIO
C     UPDATED         --MARCH     2007. RELATIVE RISK
C     UPDATED         --MARCH     2007. CRAMER CONTINGENCY COEFFICENT
C     UPDATED         --MARCH     2007. PEARSON CONTINGENCY COEFFICENT
C     UPDATED         --APRIL     2007. POSITIVE PREDICTIVE VALUE
C     UPDATED         --APRIL     2007. NEGATIVE PREDICTIVE VALUE
C     UPDATED         --APRIL     2007. ODDS RATIO
C     UPDATED         --APRIL     2007. STANDARD ERROR ODDS RATIO
C     UPDATED         --APRIL     2007. LOG ODDS RATIO
C     UPDATED         --APRIL     2007. LOG STANDARD ERROR ODDS RATIO
C     UPDATED         --MAY       2007. TRIMMED STANDARD DEVIATION
C     UPDATED         --NOVEMBER  2007. DOUBLE PRECISION ARRAYS FOR
C                                       CMPSTA
C     UPDATED         --NOVEMBER  2007. LP LOCATION
C     UPDATED         --NOVEMBER  2007. VARIANCE OF LP LOCATION
C     UPDATED         --NOVEMBER  2007. SD OF LP LOCATION
C     UPDATED         --NOVEMBER  2007. DIFFERENCE OF LP LOCATION
C     UPDATED         --NOVEMBER  2007. DIFFERENCE OF VARI LP LOCATION
C     UPDATED         --NOVEMBER  2007. DIFFERENCE OF SD LP LOCATION
C     UPDATED         --SEPTEMBER 2008. BINOMIAL PROBABILITY
C     UPDATED         --SEPTEMBER 2008. DIFFERENCE OF BINOMIAL PROB
C     UPDATED         --JANUARY   2010. PASS ISTANR ARGUMENT
C     UPDATED         --JUNE      2010. CALL LIST TO CMPSTA
C     UPDATED         --JUNE      2011. ACCEPT MATRIX ARGUMENTS
C     UPDATED         --JANUARY   2012. ACCEPT PARAMETER ARGUMENTS
C     UPDATED         --APRIL     2014. IVALUE FOR NEGATIVE NUMBERS
C                                       BUG FIX
C     UPDATED         --AUGUST    2021. FOR SIZE STATISTIC DO NOT
C                                       TREAT EMPTY (I.E., NOT
C                                       EXISTING) NAME AS AN ERROR
C                                       (JUST RETURN A "0")
C     UPDATED         --SEPTEMBER 2021. IF PARAMETER ON LHS IS A
C                                       PREVIOUSLY DEFINED STRING,
C                                       RETURN AN ERROR
C     UPDATED         --AUGUST    2023. CALL LIST TO CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASL8
      CHARACTER*4 ISTARA
      CHARACTER*4 IFOUNZ
      CHARACTER*4 ITYPE
      CHARACTER*4 IHOL
      CHARACTER*4 IHOL2
      CHARACTER*4 IERRO1
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASEQ
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IWRITE
      CHARACTER*4 IHARG3
      CHARACTER*4 IHARG4
      CHARACTER*4 IHARG5
      CHARACTER*4 IHARG6
      CHARACTER*4 ILEFT
      CHARACTER*4 ILEFT2
      CHARACTER*4 ISUBSF
      CHARACTER*4 IFORF
      CHARACTER*4 IARG4T
      CHARACTER*4 IARG4F
      CHARACTER*4 IHSET
      CHARACTER*4 IHSET2
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IFLAGD
C
C---------------------------------------------------------------------
C
      DIMENSION IFOUNZ(*)
      DIMENSION IBEGIN(*)
      DIMENSION IEND(*)
      DIMENSION ITYPE(*)
      DIMENSION IHOL(*)
      DIMENSION IHOL2(*)
      DIMENSION INT1(*)
      DIMENSION FLOAT1(*)
      DIMENSION IERRO1(*)
C
      DIMENSION TEMP(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
C
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
C
      DIMENSION ITEMP1(*)
      DIMENSION ITEMP2(*)
      DIMENSION ITEMP3(*)
      DIMENSION ITEMP4(*)
      DIMENSION ITEMP5(*)
      DIMENSION ITEMP6(*)
C
      DOUBLE PRECISION DTEMP1(*)
      DOUBLE PRECISION DTEMP2(*)
      DOUBLE PRECISION DTEMP3(*)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='AC  '
      IFOUND='NO'
      IERROR='NO'
      ICASEL='UNKN'
      NEWNAM='NO'
      NEWCOL='NO'
      IFLAGD='OFF'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      ICOLL=0
      ICOL2=0
      ICOL3=0
      ICOL22=0
      ICOL32=0
      NIRIG2=0
      ILOCSV=0
CCCCC FEBRUARY 1998.  ADD FOLLOWING LINE.  CAUSED A PROBLEM IN
CCCCC SOME CASES (RS_6000 COMPILED WITH f2c)
      NIOLD=0
      NCOL=0
      NCOL2=0
      NCOL3=0
      IFLGP1=0
      IFLGP2=0
      IFLGP3=0
      NUMVAR=1
      ICOLR=0
      ICOLR2=0
      ILISTL=0
C
      AVAL1=0.0
      AVAL2=0.0
      AVAL3=0.0
C
C               **********************************************************
C               **  TREAT THE SUBCASE OF CALCULATING CERTAIN            **
C               **  ELEMENTARY STATISTICS (MEAN, SD, ETC.)              **
C               **       1) FOR A FULL VARIABLE, OR                     **
C               **       2) FOR PART OF A VARIABLE.                     **
C               **********************************************************
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STAC')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTAC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,IBUGQ,ICASL8,IERRO1(1)
   52   FORMAT('IBUGA3,IBUGQ,ICASL8,IERRO1(1) = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ILOCV,ISTANR,IBEGIN(1),IEND(1),FLOAT1(1)
   53   FORMAT('ILOCV,ISTANR,IBEGIN(1),IEND(1),FLOAT1(1) = ',4I8,G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C
C               *********************************************************
C               **  STEP 2--                                            *
C               **  EXAMINE THE LEFT-HAND SIDE--                        *
C               **  IS THE PARAMETER OR VARIABLE NAME TO LEFT OF = SIGN *
C               **  ALREADY IN THE NAME LIST?                           *
C               **  NOTE THAT     ILEFT     IS THE NAME OF THE VARIABLE *
C               **  ON THE LEFT.                                        *
C               **  NOTE THAT     ILISTL    IS THE LINE IN THE TABLE    *
C               **  OF THE NAME ON THE LEFT.                            *
C               **  NOTE THAT     ICOLL    IS THE DATA COLUMN (1 TO 12) *
C               **  FOR THE NAME OF THE LEFT.                           *
C               *********************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILEFT=IHOL(2)
      ILEFT2=IHOL2(2)
      DO200I=1,NUMNAM
        I2=I
C
C       2021/09: CHECK FOR NAME BEING A PREVIOUSLY DEFINED STRING
C                OR MATRIX
C
        IF(ILEFT.EQ.IHNAME(I).AND.ILEFT2.EQ.IHNAM2(I).AND.
     1     IUSE(I).EQ.'F')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,221)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,217)IHOL(2),IHOL2(2)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
  211     FORMAT('      EVEN THOUGH IT ALREADY EXISTS AS A STRING.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO19000
        ELSEIF(ILEFT.EQ.IHNAME(I).AND.ILEFT2.EQ.IHNAM2(I).AND.
     1         IUSE(I).EQ.'M')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,221)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,217)IHOL(2),IHOL2(2)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,213)
  213     FORMAT('      EVEN THOUGH IT ALREADY EXISTS AS A MATRIX.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO19000
        ENDIF
C
        IF(ILEFT.EQ.IHNAME(I).AND.ILEFT2.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'P')THEN
          ILISTL=I2
CCCCC     THE FOLLOWING LINE WAS COMMENTED OUT (JANUARY 1989)
CCCCC     AND REPLACED BY THE SUCCEEDING 12 LINES (JANUARY 1989)
CCCCC     TO FIX PROBLEM OF REUSING A PARAMETER AS A VARIABLE
CCCCC     (JANUARY 1989)
CCCCC     GOTO290
          IF(IFOUNZ(4).EQ.'NO')GOTO290
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,221)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,217)IHOL(2),IHOL2(2)
  217     FORMAT('      AN ATTEMPT WAS MADE TO USE ',2A4,' AS A ',
     1           'VARIABLE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,218)
  218     FORMAT('      EVEN THOUGH IT ALREADY EXISTS AS A PARAMETER.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSEIF(ILEFT.EQ.IHNAME(I).AND.ILEFT2.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'V')THEN
          ILISTL=I2
          ICOLL=IVALUE(ILISTL)
          NIOLD=IN(ILISTL)
          GOTO290
        ENDIF
  200 CONTINUE
C
      ISTEPN='2B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='YES'
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,221)
  221   FORMAT('***** ERROR IN DPSTAC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,222)
  222   FORMAT('      THE NUMBER OF VARIABLE AND/OR PARAMETER NAMES ',
     1         'HAS JUST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,223)MAXNAM
  223   FORMAT('      EXCEEDED THE MAX ALLOWABLE ',I8,'  .  ',
     1         'SUGGESTED ACTION--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,225)
  225   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,226)
  226   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,227)
  227   FORMAT('      THEN REDEFINE (REUSE) SOME OF THE ALREADY-USED',
     1         'NAMES')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO19000
      ENDIF
C
      ISTEPN='2C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IARG4F=IFOUNZ(4)
      ISUBSF=IFOUNZ(11)
      IFORF=IFOUNZ(21)
      IF(IARG4F.EQ.'NO')GOTO290
      NIOLD=0
      ICOLL=NUMCOL+1
C
      IF(ICOLL.GT.MAXCOL)THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,242)
  242   FORMAT('      THE NUMBER OF DATA COLUMNS HAS JUST EXCEEDED THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,243)MAXCOL
  243   FORMAT('      MAX ALLOWABLE ',I8,'  .  SUGGESTED ACTION--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,245)
  245   FORMAT('      ENTER      STATUS VARIABLES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,246)
  246   FORMAT('      TO FIND OUT THE FULL LIST OF USED COLUMNS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,247)
  247   FORMAT('      AND THEN OVERWRITE SOME COLUMNS.   EXAMPLE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,248)
  248   FORMAT('      IF (E.G.)   LET Y(3) = MEAN X          FAILED')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,249)
  249   FORMAT('      THEN ONE MIGHT ENTER     NAME Y 7')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,250)
  250   FORMAT('      (THEREBY EQUATING THE NAME Y WITH COLUMN 7')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,251)
  251   FORMAT('      FOLLOWED BY              LET Y(3) = MEAN X ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,252)
  252   FORMAT('      (WHICH WILL ACTUALLY OVERWRITE ROW 3 ',
     1         'OF COLUMN 7')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,253)
  253   FORMAT('      WITH THE CALCULATED MEAN OF VARIABLE X)')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO19000
      ENDIF
C
      ISTEPN='2D'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MAXNI=0
      DO235I=1,12
        IF(IUSE(I).EQ.'V')THEN
          IF(IN(I).GT.MAXNI)MAXNI=IN(I)
        ENDIF
  235 CONTINUE
      IF(MAXNI.EQ.0)MAXNI=MAXN
C
  290 CONTINUE
C
      ISTEPN='2E'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *********************************************************
C               **  STEP 3--                                            *
C               **  EXAMINE THE RIGHT-HAND SIDE--                       *
C               **  HAS THE VARIABLE OR COLUMN ON THE RIGHT             *
C               **  ALREADY BEEN DEFINED?                               *
C               **  NOTE THAT     IRIGHT    IS THE NAME OF THE VARIABLE *
C               **  ON THE RIGHT.                                       *
C               **  NOTE THAT     ILISTR    IS THE LINE IN THE TABLE    *
C               **  OF THE VARIABLE OR COLUMN ON THE RIGHT.             *
C               **  NOTE THAT     ICOLR    IS THE DATA COLUMN (1 TO 12) *
C               **  FOR THE VARIABLE OR COLUMN ON THE RIGHT.            *
C               *********************************************************
C
C
C               ********************************************
C               **  STEP 4--                              **
C               **  BRANCH BETWEEN 1-VARIABLE STATISTICS  **
C               **  (E.G., MEAN, SD, MIN, ETC.)           **
C               **  AND 2-VARIABLE STATISTICS             **
C               **  (CORRELATION AND RANK CORRELATION).   **
C               ********************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMVIN=1
      IF(ICASL8.EQ.'WEME' .OR. ICASL8.EQ.'WEMD' .OR.
     1   ICASL8.EQ.'WESD' .OR. ICASL8.EQ.'WEVA' .OR.
     1   ICASL8.EQ.'WETM' .OR. ICASL8.EQ.'INTE')THEN
        ILOCVP=ILOCV+1
        IH=IHARG(ILOCVP)
        IH2=IHARG2(ILOCVP)
        IF(ILOCVP.GT.NUMARG)THEN
          NUMVIN=1
        ELSEIF(IH.EQ.'SUBS'.AND.IH2.EQ.'ET  ')THEN
          NUMVIN=1
        ELSEIF(IH.EQ.'EXCE'.AND.IH2.EQ.'PT  ')THEN
          NUMVIN=1
        ELSEIF(IH.EQ.'FOR '.AND.IH2.EQ.'    ')THEN
          NUMVIN=1
        ELSE
          NUMVIN=2
        ENDIF
      ELSEIF(ISTANR.EQ.2)THEN
        NUMVIN=2
      ELSEIF(ISTANR.EQ.3)THEN
        NUMVIN=3
      ELSE
        NUMVIN=1
      ENDIF
C
C     DIFFERENCE OF INTEGRAL CAN HAVE EITHER 2 OR 3 RESPONSE VARIABLES
C     (THE THIRD VARIABLE IS AN OPTIONAL X-COORDINATE VARIABLE)
C
      IF(ICASL8.EQ.'DINT')THEN
        ILOCVP=ILOCV+2
        IH=IHARG(ILOCVP)
        IH2=IHARG2(ILOCVP)
        IF(ILOCVP.GT.NUMARG)THEN
          NUMVIN=2
        ELSEIF(IH.EQ.'SUBS'.AND.IH2.EQ.'ET  ')THEN
          NUMVIN=2
        ELSEIF(IH.EQ.'EXCE'.AND.IH2.EQ.'PT  ')THEN
          NUMVIN=2
        ELSEIF(IH.EQ.'FOR '.AND.IH2.EQ.'    ')THEN
          NUMVIN=2
        ELSE
          NUMVIN=3
        ENDIF
      ENDIF
C
C
C               ***************************************
C               **  STEP 5--                         **
C               **  EXTRACT THE FIRST VARIABLE       **
C               ***************************************
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IH=IHARG(ILOCV)
      IH2=IHARG2(ILOCV)
      DO1110I=1,NUMNAM
        I2=I
        IF(IH.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'V')THEN
          ILISTR=I2
          ICOLR=IVALUE(ILISTR)
          NIRIGH=IN(ILISTR)
          ICOLR2=-99
          GOTO2000
        ELSEIF(IH.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'M')THEN
          ILISTR=I2
          ICOLR=IVALUE(ILISTR)
          ICOLR2=IVALU2(ILISTR)
          NIRIGH=IN(ILISTR)
          NCOL=(ICOLR2 - ICOLR) + 1
          GOTO2000
        ELSEIF(IH.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'P')THEN
          IFLGP1=1
          ILISTR=I2
          AVAL1=VALUE(ILISTR)
          NIRIGH=1
          GOTO2000
CCCCC     WRITE(ICOUT,999)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,221)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,1152)
C1152     FORMAT('      THE SPECIFIED ARGUMENT (VARIABLE NAME OR ',
CCCCC1           'COLUMN')
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,1154)
C1154     FORMAT('      NUMBER) ON THE RIGHT OF THE = SIGN WAS FOUND')
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,1155)
C1155     FORMAT('      IN THE INTERNAL NAME LIST, BUT AS A PARAMETER')
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,1157)
C1157     FORMAT('      AND NOT AS A VARIABLE AS IT SHOULD BE HERE.')
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,1158)
 1158     FORMAT('      THE COMMAND LINE WAS AS FOLLOWS--')
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,1159)(IANS(II),II=1,MIN(80,IWIDTH))
 1159     FORMAT(80A1)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     IERROR='YES'
CCCCC     GOTO19000
        ENDIF
 1110 CONTINUE
C
      IF(ICASL8.EQ.'NUMB')THEN
        ILISTR=I2
        ICOLR=-99
        NIRIGH=0
        ICOLR2=-99
        GOTO2000
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1112)
 1112   FORMAT('      THE SPECIFIED ARGUMENT (VARIABLE NAME OR COLUMN')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1114)
 1114   FORMAT('      NUMBER) ON THE RIGHT OF THE = SIGN WAS NOT FOUND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1115)
 1115   FORMAT('      IN THE INTERNAL NAME LIST.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO19000
      ENDIF
C
C               ************************************************
C               **  STEP 6.2--                                **
C               **  EXTRACT THE SECOND VARIABLE               **
C               ************************************************
C
 2000 CONTINUE
C
      ISTEPN='6.2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMVIN.LT.2)GOTO700
C
      NUMVAR=2
      ILOCVP=ILOCV+1
      IF(ILOCVP.GT.NUMARG)THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2302)
 2302   FORMAT('      NO SECOND VARIABLE NAME OR COLUMN NUMBER WAS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2303)
 2303   FORMAT('      WAS GIVEN AFTER THE STATISTIC CALCULATION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO19000
      ENDIF
C
      IHARG3=IHARG(ILOCVP)
      IHARG4=IHARG2(ILOCVP)
      DO2310I=1,NUMNAM
        I2=I
        IF(IHARG3.EQ.IHNAME(I).AND.IHARG4.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'V')THEN
          ILIST2=I2
          ICOL2=IVALUE(ILIST2)
          NIRIG2=IN(ILIST2)
          ICOL22=-99
          GOTO2390
        ELSEIF(IHARG3.EQ.IHNAME(I).AND.IHARG4.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'M')THEN
          ILIST2=I2
          ICOL2=IVALUE(ILIST2)
          ICOL22=IVALU2(ILIST2)
          NIRIG2=IN(ILIST2)
          NCOL2=(ICOL22 - ICOL2) + 1
          GOTO2390
        ELSEIF(IHARG3.EQ.IHNAME(I).AND.IHARG4.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'P')THEN
          IFLGP2=1
          ILIST2=I2
          AVAL2=VALUE(ILIST2)
          NIRIG2=1
          GOTO2390
CCCCC     WRITE(ICOUT,999)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,221)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,2322)
C2322     FORMAT('      THE SPECIFIED SECOND ARGUMENT VARIABLE NAME OR')
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,2324)
C2324     FORMAT('      COLUMN NUMBER) ON THE RIGHT OF THE = SIGN ',
CCCCC1           'WAS FOUND')
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,2325)
C2325     FORMAT('      IN THE INTERNAL NAME LIST, BUT AS A PARAMETER')
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,2327)
C2327     FORMAT('      AND NOT AS A VARIABLE AS IT SHOULD BE HERE.')
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,1158)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     IF(IWIDTH.GE.1)THEN
CCCCC       WRITE(ICOUT,1159)(IANS(II),II=1,MIN(80,IWIDTH))
CCCCC       CALL DPWRST('XXX','BUG ')
CCCCC     ENDIF
CCCCC     IERROR='YES'
CCCCC     GOTO19000
        ENDIF
 2310 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,221)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2312)
 2312 FORMAT('      THE SPECIFIED SECOND ARGUMENT (VARIABLE NAME OR')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2314)
 2314 FORMAT('      COLUMN NUMBER) ON THE RIGHT OF THE = SIGN')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2315)
 2315 FORMAT('      WAS NOT FOUND IN THE INTERNAL NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1158)
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO19000
C
 2390 CONTINUE
C
C
C               ******************************************************
C               **  STEP 6.4--                                      **
C               **  CHECK THAT THE 2 VARIABLES HAVE THE SAME        **
C               **  NUMBER OF ELEMENTS.                             **
C               ******************************************************
C
      ISTEPN='6.4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     "DIFFERENCE OF" STATISTICS DO NOT REQUIRE EQUAL SAMPLE
C     SIZES
C
      IF(ICASL8.EQ.'DMEA')IFLAGD='ON'
      IF(ICASL8.EQ.'DMDM')IFLAGD='ON'
      IF(ICASL8.EQ.'DMED')IFLAGD='ON'
      IF(ICASL8.EQ.'DTRM')IFLAGD='ON'
      IF(ICASL8.EQ.'DWNM')IFLAGD='ON'
      IF(ICASL8.EQ.'DGEO')IFLAGD='ON'
      IF(ICASL8.EQ.'DHAR')IFLAGD='ON'
      IF(ICASL8.EQ.'DHDL')IFLAGD='ON'
      IF(ICASL8.EQ.'DBIW')IFLAGD='ON'
      IF(ICASL8.EQ.'DSD ')IFLAGD='ON'
      IF(ICASL8.EQ.'DRMS ')IFLAGD='ON'
      IF(ICASL8.EQ.'DVAR')IFLAGD='ON'
      IF(ICASL8.EQ.'DAAD')IFLAGD='ON'
      IF(ICASL8.EQ.'DAAM')IFLAGD='ON'
      IF(ICASL8.EQ.'DMAD')IFLAGD='ON'
      IF(ICASL8.EQ.'DIQR')IFLAGD='ON'
      IF(ICASL8.EQ.'DWSD')IFLAGD='ON'
      IF(ICASL8.EQ.'DWVA')IFLAGD='ON'
      IF(ICASL8.EQ.'DBIM')IFLAGD='ON'
      IF(ICASL8.EQ.'DBIS')IFLAGD='ON'
      IF(ICASL8.EQ.'DPBN')IFLAGD='ON'
      IF(ICASL8.EQ.'DGSD')IFLAGD='ON'
      IF(ICASL8.EQ.'DRAN')IFLAGD='ON'
      IF(ICASL8.EQ.'DMDR')IFLAGD='ON'
      IF(ICASL8.EQ.'DQSE')IFLAGD='ON'
      IF(ICASL8.EQ.'DQUA')IFLAGD='ON'
      IF(ICASL8.EQ.'DSKE')IFLAGD='ON'
      IF(ICASL8.EQ.'DGSK')IFLAGD='ON'
      IF(ICASL8.EQ.'DPSK')IFLAGD='ON'
      IF(ICASL8.EQ.'DKUR')IFLAGD='ON'
      IF(ICASL8.EQ.'DEKU')IFLAGD='ON'
      IF(ICASL8.EQ.'DRSD')IFLAGD='ON'
      IF(ICASL8.EQ.'DSDM')IFLAGD='ON'
      IF(ICASL8.EQ.'DRVA')IFLAGD='ON'
      IF(ICASL8.EQ.'DVAM')IFLAGD='ON'
      IF(ICASL8.EQ.'DMIN')IFLAGD='ON'
      IF(ICASL8.EQ.'DMAX')IFLAGD='ON'
      IF(ICASL8.EQ.'DEXT')IFLAGD='ON'
      IF(ICASL8.EQ.'DCVA')IFLAGD='ON'
      IF(ICASL8.EQ.'DCOU')IFLAGD='ON'
      IF(ICASL8.EQ.'DSUM')IFLAGD='ON'
      IF(ICASL8.EQ.'DPRO')IFLAGD='ON'
      IF(ICASL8.EQ.'10LD')IFLAGD='ON'
      IF(ICASL8.EQ.'12LD')IFLAGD='ON'
      IF(ICASL8.EQ.'15LD')IFLAGD='ON'
      IF(ICASL8.EQ.'17LD')IFLAGD='ON'
      IF(ICASL8.EQ.'20LD')IFLAGD='ON'
      IF(ICASL8.EQ.'10SD')IFLAGD='ON'
      IF(ICASL8.EQ.'12SD')IFLAGD='ON'
      IF(ICASL8.EQ.'15SD')IFLAGD='ON'
      IF(ICASL8.EQ.'17SD')IFLAGD='ON'
      IF(ICASL8.EQ.'20SD')IFLAGD='ON'
      IF(ICASL8.EQ.'DSN')IFLAGD='ON'
      IF(ICASL8.EQ.'DQN')IFLAGD='ON'
      IF(ICASL8.EQ.'DLPL')IFLAGD='ON'
      IF(ICASL8.EQ.'DLPV')IFLAGD='ON'
      IF(ICASL8.EQ.'DLPS')IFLAGD='ON'
      IF(ICASL8.EQ.'DBPR')IFLAGD='ON'
      IF(ICASL8.EQ.'DTSD')IFLAGD='ON'
      IF(ICASL8.EQ.'DPER')IFLAGD='ON'
      IF(ICASL8.EQ.'D1DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D2DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D3DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D4DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D5DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D6DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D7DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D8DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D9DE')IFLAGD='ON'
      IF(ICASL8.EQ.'DLHI')IFLAGD='ON'
      IF(ICASL8.EQ.'DUHI')IFLAGD='ON'
      IF(ICASL8.EQ.'DLQU')IFLAGD='ON'
      IF(ICASL8.EQ.'DUQU')IFLAGD='ON'
      IF(ICASL8.EQ.'DSSQ')IFLAGD='ON'
      IF(ICASL8.EQ.'DRSC')IFLAGD='ON'
      IF(ICASL8.EQ.'DQQR')IFLAGD='ON'
      IF(ICASL8.EQ.'ORSE')IFLAGD='ON'
      IF(ICASL8.EQ.'ODRA')IFLAGD='ON'
      IF(ICASL8.EQ.'RATI')IFLAGD='ON'
      IF(ICASL8.EQ.'LOSE')IFLAGD='ON'
      IF(ICASL8.EQ.'LODR')IFLAGD='ON'
      IF(ICASL8.EQ.'KS2S')IFLAGD='ON'
      IF(ICASL8.EQ.'KSCV')IFLAGD='ON'
      IF(ICASL8.EQ.'CS2S')IFLAGD='ON'
      IF(ICASL8.EQ.'CC2S')IFLAGD='ON'
      IF(ICASL8.EQ.'CP2S')IFLAGD='ON'
      IF(ICASL8.EQ.'FTES')IFLAGD='ON'
      IF(ICASL8.EQ.'FTPV')IFLAGD='ON'
      IF(ICASL8.EQ.'FTCD')IFLAGD='ON'
      IF(ICASL8.EQ.'2TTE')IFLAGD='ON'
      IF(ICASL8.EQ.'2TCD')IFLAGD='ON'
      IF(ICASL8.EQ.'2T2P')IFLAGD='ON'
      IF(ICASL8.EQ.'2TLP')IFLAGD='ON'
      IF(ICASL8.EQ.'2TUP')IFLAGD='ON'
      IF(ICASL8.EQ.'PTTE')IFLAGD='ON'
      IF(ICASL8.EQ.'PTCD')IFLAGD='ON'
      IF(ICASL8.EQ.'PT2P')IFLAGD='ON'
      IF(ICASL8.EQ.'PTLP')IFLAGD='ON'
      IF(ICASL8.EQ.'PTUP')IFLAGD='ON'
      IF(ICASL8.EQ.'2STE')IFLAGD='ON'
      IF(ICASL8.EQ.'2SCD')IFLAGD='ON'
      IF(ICASL8.EQ.'2S2P')IFLAGD='ON'
      IF(ICASL8.EQ.'2SLP')IFLAGD='ON'
      IF(ICASL8.EQ.'2SUP')IFLAGD='ON'
      IF(ICASL8.EQ.'MWUS')IFLAGD='ON'
      IF(ICASL8.EQ.'MWTE')IFLAGD='ON'
      IF(ICASL8.EQ.'MWCD')IFLAGD='ON'
      IF(ICASL8.EQ.'MW2P')IFLAGD='ON'
      IF(ICASL8.EQ.'MWLP')IFLAGD='ON'
      IF(ICASL8.EQ.'MWUP')IFLAGD='ON'
      IF(ICASL8.EQ.'KLTE')IFLAGD='ON'
      IF(ICASL8.EQ.'KLCD')IFLAGD='ON'
      IF(ICASL8.EQ.'KL2P')IFLAGD='ON'
      IF(ICASL8.EQ.'KLLP')IFLAGD='ON'
      IF(ICASL8.EQ.'KLUP')IFLAGD='ON'
      IF(ICASL8.EQ.'SRTE')IFLAGD='ON'
      IF(ICASL8.EQ.'SRCD')IFLAGD='ON'
      IF(ICASL8.EQ.'SR2P')IFLAGD='ON'
      IF(ICASL8.EQ.'SRLP')IFLAGD='ON'
      IF(ICASL8.EQ.'SRUP')IFLAGD='ON'
      IF(ICASL8.EQ.'METE')IFLAGD='ON'
      IF(ICASL8.EQ.'MECD')IFLAGD='ON'
      IF(ICASL8.EQ.'ME2P')IFLAGD='ON'
      IF(ICASL8.EQ.'2SFR')IFLAGD='ON'
      IF(ICASL8.EQ.'2F2P')IFLAGD='ON'
      IF(ICASL8.EQ.'FMAT')IFLAGD='ON'
      IF(ICASL8.EQ.'LMAT')IFLAGD='ON'
      IF(ICASL8.EQ.'FNOM')IFLAGD='ON'
      IF(ICASL8.EQ.'LNOM')IFLAGD='ON'
      IF(ICASL8.EQ.'PDIF')IFLAGD='ON'
      IF(ICASL8.EQ.'2CTE')IFLAGD='ON'
      IF(ICASL8.EQ.'2CCD')IFLAGD='ON'
      IF(ICASL8.EQ.'2C2P')IFLAGD='ON'
      IF(ICASL8.EQ.'2CLP')IFLAGD='ON'
      IF(ICASL8.EQ.'2CUP')IFLAGD='ON'
      IF(ICASL8.EQ.'DCDI')IFLAGD='ON'
      IF(ICASL8.EQ.'DIDI')IFLAGD='ON'
      IF(ICASL8.EQ.'DQDI')IFLAGD='ON'
      IF(ICASL8.EQ.'DAMD')IFLAGD='ON'
      IF(ICASL8.EQ.'DPRE')IFLAGD='ON'
      IF(ICASL8.EQ.'DSNR')IFLAGD='ON'
      IF(ICASL8.EQ.'DSHM')IFLAGD='ON'
      IF(ICASL8.EQ.'DSHR')IFLAGD='ON'
      IF(ICASL8.EQ.'HEDG')IFLAGD='ON'
      IF(ICASL8.EQ.'BCHG')IFLAGD='ON'
      IF(ICASL8.EQ.'COHD')IFLAGD='ON'
      IF(ICASL8.EQ.'GLAS')IFLAGD='ON'
      IF(ICASL8.EQ.'DBLC')IFLAGD='ON'
      IF(ICASL8.EQ.'DBUC')IFLAGD='ON'
      IF(ICASL8.EQ.'HESE')IFLAGD='ON'
      IF(ICASL8.EQ.'HELC')IFLAGD='ON'
      IF(ICASL8.EQ.'HEUC')IFLAGD='ON'
      IF(ICASL8.EQ.'SGCD')IFLAGD='ON'
      IF(ICASL8.EQ.'SG2P')IFLAGD='ON'
      IF(ICASL8.EQ.'SGLP')IFLAGD='ON'
      IF(ICASL8.EQ.'SGUP')IFLAGD='ON'
      IF(ICASL8.EQ.'SGTE')IFLAGD='ON'
      IF(ICASL8.EQ.'GMDR')IFLAGD='ON'
      IF(ICASL8.EQ.'LRSC')IFLAGD='ON'
      IF(ICASL8.EQ.'LRSP')IFLAGD='ON'
      IF(ICASL8.EQ.'LRLP')IFLAGD='ON'
      IF(ICASL8.EQ.'LRUP')IFLAGD='ON'
      IF(ICASL8.EQ.'LRUC')IFLAGD='ON'
      IF(ICASL8.EQ.'LRLC')IFLAGD='ON'
      IF(ICASL8.EQ.'LRST')IFLAGD='ON'
      IF(ICASL8.EQ.'FPCD')IFLAGD='ON'
      IF(ICASL8.EQ.'FP2P')IFLAGD='ON'
      IF(ICASL8.EQ.'FPLP')IFLAGD='ON'
      IF(ICASL8.EQ.'FPUP')IFLAGD='ON'
      IF(ICASL8.EQ.'FPTE')IFLAGD='ON'
      IF(ISTARA.EQ.'ON  ')IFLAGD='ON'
      IF(ICASL8.EQ.'')IFLAGD='ON'
C
      IF(NIRIG2.NE.NIRIGH .AND. IFLAGD.NE.'ON')THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2412)
 2412   FORMAT('      FOR A 2-VARIABLE STATISTIC CALCULATION, THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2413)
 2413   FORMAT('      NUMBER OF OBSERVATIONS IN EACH VARIABLE MUST BE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2415)
 2415   FORMAT('      THE SAME;  SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2416)IH,IH2,NIRIGH
 2416   FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,' OBSERVATIONS;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2417)IHARG3,IHARG4,NIRIG2
 2417   FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,' OBSERVATIONS.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO19000
      ENDIF
C
C               ************************************************
C               **  STEP 6.5--                                **
C               **  EXTRACT THE THIRD  VARIABLE               **
C               ************************************************
C
      ISTEPN='6.5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMVIN.LT.3)GOTO700
C
      NUMVAR=3
      ILOCVP=ILOCV+2
      IF(ILOCVP.GT.NUMARG)THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3302)
 3302   FORMAT('      NO THIRD VARIABLE NAME OR COLUMN NUMBER WAS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2303)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO19000
      ENDIF
C
      ICOL32=0
      IHARG5=IHARG(ILOCVP)
      IHARG6=IHARG2(ILOCVP)
      DO3310I=1,NUMNAM
        I2=I
        IF(IHARG5.EQ.IHNAME(I).AND.IHARG6.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'V')THEN
          ILIST3=I2
          ICOL3=IVALUE(ILIST3)
          NIRIG3=IN(ILIST3)
          ICOL32=-99
          GOTO3390
        ELSEIF(IHARG5.EQ.IHNAME(I).AND.IHARG6.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'M')THEN
          ILIST3=I2
          ICOL3=IVALUE(ILIST3)
          ICOL32=IVALU2(ILIST3)
          NIRIG3=IN(ILIST3)
          NCOL3=(ICOL32 - ICOL3) + 1
          GOTO3390
        ELSEIF(IHARG5.EQ.IHNAME(I).AND.IHARG6.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'P')THEN
          IFLGP3=1
          ILIST3=I2
          AVAL3=VALUE(ILIST3)
          NIRIG3=1
          GOTO3390
CCCCC     WRITE(ICOUT,999)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,221)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,3322)
C3322     FORMAT('      THE SPECIFIED THIRD ARGUMENT VARIABLE NAME OR')
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,2324)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,2325)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,2327)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     WRITE(ICOUT,1158)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC     IF(IWIDTH.GE.1)THEN
CCCCC       WRITE(ICOUT,1159)(IANS(II),II=1,MIN(80,IWIDTH))
CCCCC       CALL DPWRST('XXX','BUG ')
CCCCC     ENDIF
CCCCC     IERROR='YES'
CCCCC     GOTO19000
        ENDIF
 3310 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,221)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3312)
 3312 FORMAT('      THE SPECIFIED THIRD ARGUMENT (VARIABLE NAME OR')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2314)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2315)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1158)
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO19000
C
 3390 CONTINUE
C
C               ******************************************************
C               **  STEP 6.6--                                      **
C               **  CHECK THAT THE 3 VARIABLES HAVE THE SAME        **
C               **  NUMBER OF ELEMENTS.                             **
C               ******************************************************
C
      ISTEPN='6.6'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NIRIG3.NE.NIRIGH .AND. IFLAGD.NE.'ON')THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3412)
 3412   FORMAT('      FOR A 3-VARIABLE STATISTIC CALCULATION, THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2413)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2415)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3416)IH,IH2,NIRIGH
 3416   FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,' OBSERVATIONS;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3417)IHARG5,IHARG6,NIRIG3
 3417   FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,' OBSERVATIONS.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1159)(IANS(II),II=1,MIN(80,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO19000
      ENDIF
C
C               *******************************
C               **  STEP 7--                 **
C               **  DETERMINE THE SUBCASE    **
C               **  AND BRANCH ACCORDINGLY.  **
C               *******************************
C
  700 CONTINUE
      ISTEPN='7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IARG4F=IFOUNZ(4)
      IARG4T=ITYPE(4)
C
      ICASEL='UNKN'
      IF(IARG4F.EQ.'NO')ICASEL='PARA'
      IF(IARG4F.EQ.'YES'.AND.IARG4T.EQ.'NUMB')ICASEL='ELEM'
CCCCC THE FOLLOWING LINE WAS REPLACED                   (DECEMBER 1988)
CCCCC BY THE SUCCEEDING LINE                            (DECEMBER 1988)
CCCCC TO ALLOW    LET X(K) = MEAN ETC.  INSIDE LOOP     (DECEMBER 1988)
CCCCC IF(IARG4F.EQ.'YES'.AND.IARG4T.EQ.'WORD')ICASEL='VAR'
      IF(IARG4F.EQ.'YES'.AND.IARG4T.EQ.'WORD')ICASEL='ELEM'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')THEN
        WRITE(ICOUT,3517)IARG4F,IARG4T,ICASEL
 3517   FORMAT('IARG4F,IARG4T,ICASEL = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASEL.EQ.'UNKN'.OR.ICASEL.EQ.'VAR')THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,712)
  712   FORMAT('      UNKNOWN VARIABLE/PARAMETER EXPRESSION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,713)
  713   FORMAT('      TO THE LEFT OF THE EQUAL SIGN.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO19000
      ENDIF
C
      ICASEQ='UNKN'
      IMIN=ILOCV+1
      IF(IMIN.LE.NUMARG)THEN
        DO740I=IMIN,NUMARG
          IF((IHARG(I).EQ.'SUBS'.AND.IHARG2(I).EQ.'ET  ') .OR.
     1       (IHARG(I).EQ.'EXCE'.AND.IHARG2(I).EQ.'PT  '))THEN
            ICASEQ='SUBS'
            GOTO749
          ELSEIF(IHARG(I).EQ.'FOR '.AND.IHARG2(I).EQ.'    ')THEN
            ICASEQ='FOR'
            GOTO749
          ENDIF
  740   CONTINUE
      ENDIF
      ICASEQ='FULL'
C
  749 CONTINUE
      IF(ICASEQ.EQ.'UNKN')GOTO750
C
      IF(ICASEQ.EQ.'FULL')GOTO8000
      IF(ICASEQ.EQ.'SUBS')GOTO9000
      IF(ICASEQ.EQ.'FOR')GOTO10000
C
  750 CONTINUE
      WRITE(ICOUT,751)
  751 FORMAT('***** INTERNAL ERROR IN DPSTAC--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,752)
  752 FORMAT('      UNKNOWN QUALIFIER TYPE FOR LET COMMAND')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1158)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
C
C               ************************************************
C               **  STEP 8--                                  **
C               **  TREAT THE FULL VARIABLE CASE.             **
C               **  EXAMPLE--LET Y = SORT(X)                  **
C               **         --LET Y(I) = SORT(X)               **
C               **  JUMP TO STEP NUMBER 11 BELOW              **
C               **  FOR THE ACTUAL STATISTICAL CALCULATION,   **
C               **  FOR THE LIST UPDATING, AND                **
C               **  FOR SOME INFORMATIVE PRINTING.            **
C               ************************************************
C
 8000 CONTINUE
      ISTEPN='8'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NIOLD=NIRIGH
      IF(NUMVAR.GE.2.AND.NIRIG2.GT.NIOLD)NIOLD=NIRIG2
      NINEW=NIOLD
      IF(NINEW.GE.1)THEN
        DO8100I=1,NINEW
          ISUB(I)=1
 8100   CONTINUE
      ENDIF
      GOTO11000
C
C               ****************************************************
C               **  STEP 9--                                       *
C               **  TREAT THE PARTIAL VARIABLE SUBSET CASE.        *
C               **  EXAMPLE--LET Y = SORT(X)    SUBSET 2 3 5       *
C               **         --LET Y(I) = SORT(X) SUBSET 2 3 5       *
C               **  JUMP TO STEP NUMBER 11 BELOW                   *
C               **  FOR THE ACTUAL STATISTICAL CALCULATION,        *
C               **  FOR THE LIST UPDATING, AND                     *
C               **  FOR SOME INFORMATIVE PRINTING.                 *
C               ****************************************************
C
 9000 CONTINUE
      ISTEPN='9'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMVAR.EQ.1)ILOCSV=ILOCV+2
      IF(NUMVAR.EQ.2)ILOCSV=ILOCV+3
      IF(NUMVAR.EQ.3)ILOCSV=ILOCV+4
      IHSET=IHARG(ILOCSV)
      IHSET2=IHARG2(ILOCSV)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHSET,IHSET2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
      IF(IERROR.EQ.'YES')GOTO19000
      NIOLD=IN(ILOC)
      CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERROR)
      IF(IERROR.EQ.'YES')GOTO19000
      NINEW=NIOLD
      GOTO11000
C
C               *****************************************************
C               **  STEP 10--                                       *
C               **  TREAT THE PARTIAL VARIABLE FOR CASE.            *
C               **  EXAMPLE--LET Y = SORT(X)    FOR I = 1 2 10      *
C               **         --LET Y(I) = SORT(X) FOR I = 1 2 10      *
C               **  JUMP TO STEP NUMBER 11 BELOW                    *
C               **  FOR THE ACTUAL STATISTICAL CALCULATION,         *
C               **  FOR THE LIST UPDATING, AND                      *
C              **  FOR SOME INFORMATIVE PRINTING.                   *
C               *****************************************************
C
10000 CONTINUE
      ISTEPN='10'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPFOR(NIOLD,NINEW,IROW1,IROWN,
     1NLOCAL,ILOCS,NS,IBUGQ,IERROR)
      NIFOR=NINEW
      GOTO11000
C
C               *******************************************
C               **  STEP 11--                            **
C               **  CARRY OUT THE                        **
C               **  ACTUAL STATISTICAL CALCULATION,      ZZ
C               **  THE LIST UPDATING, AND               **
C               **  GENERATE THE INFORMATIVE PRINTING    **
C               **  FOR STEP NUMBERS 7, 8, AND 9 ABOVE.  **
C               *******************************************
C
11000 CONTINUE
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NS2=0
      NS3=0
      NS4=0
C
C     EXTRACT DATA VARIABLE ONE.  HANDLE VARIABLE AND MATRIX
C     CASES DIFFERENTLY.
C
      IF(IFLGP1.EQ.1)THEN
        NS2=1
        TEMP(NS2)=AVAL1
      ELSEIF(ICOLR2.LE.0)THEN
        IF(ICASL8.EQ.'NUMB' .AND. NINEW.LT.1)THEN
          NS2=0
          GOTO11109
        ENDIF
        DO11100I=1,NINEW
          IF(ISUB(I).EQ.0)GOTO11100
          IF(I.GT.NIRIGH)GOTO11109
          NS2=NS2+1
C
          IJ=MAXN*(ICOLR-1)+I
          IF(ICOLR.LE.MAXCOL)TEMP(NS2)=V(IJ)
          IF(ICOLR.EQ.MAXCP1)TEMP(NS2)=PRED(I)
          IF(ICOLR.EQ.MAXCP2)TEMP(NS2)=RES(I)
          IF(ICOLR.EQ.MAXCP3)TEMP(NS2)=YPLOT(I)
          IF(ICOLR.EQ.MAXCP4)TEMP(NS2)=XPLOT(I)
          IF(ICOLR.EQ.MAXCP5)TEMP(NS2)=X2PLOT(I)
          IF(ICOLR.EQ.MAXCP6)TEMP(NS2)=TAGPLO(I)
C
11100   CONTINUE
11109   CONTINUE
      ELSE
        NLOOP=NCOL
        IF(NLOOP.LT.1)NLOOP=1
        NS2=0
        DO11101JLOOP=1,NLOOP
          DO11103I=1,NINEW
            IF(ISUB(I).EQ.0)GOTO11103
            IF(I.GT.NIRIGH)GOTO11105
            NS2=NS2+1
            IF(NS2.GT.MAXOBV)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,221)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,11106)
11106         FORMAT('      FOR THE MATRIX CASE, THE MAXIMUM NUMBER')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,11107)
11107         FORMAT('      OF OBSERVATIONS HAS BEEN EXCEEDED.')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,11108)MAXOBV
11108         FORMAT('      THE MAXIMUM NUMBER OF OBSERVATIONS = ',I10)
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ENDIF
            ICOLT=ICOLR+JLOOP-1
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)TEMP(NS2)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)TEMP(NS2)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)TEMP(NS2)=RES(I)
            IF(ICOLT.EQ.MAXCP3)TEMP(NS2)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)TEMP(NS2)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)TEMP(NS2)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)TEMP(NS2)=TAGPLO(I)
11103     CONTINUE
11105     CONTINUE
11101   CONTINUE
      ENDIF
C
      IF(NUMVAR.GE.2)THEN
        IF(IFLGP2.EQ.1)THEN
          NS3=1
          TEMP2(NS3)=AVAL2
        ELSEIF(ICOL22.LE.0)THEN
          DO11200I=1,NINEW
            IF(ISUB(I).EQ.0)GOTO11200
            IF(I.GT.NIRIG2)GOTO11209
            NS3=NS3+1
C
            IJ=MAXN*(ICOL2-1)+I
            IF(ICOL2.LE.MAXCOL)TEMP2(NS3)=V(IJ)
            IF(ICOL2.EQ.MAXCP1)TEMP2(NS3)=PRED(I)
            IF(ICOL2.EQ.MAXCP2)TEMP2(NS3)=RES(I)
            IF(ICOL2.EQ.MAXCP3)TEMP2(NS3)=YPLOT(I)
            IF(ICOL2.EQ.MAXCP4)TEMP2(NS3)=XPLOT(I)
            IF(ICOL2.EQ.MAXCP5)TEMP2(NS3)=X2PLOT(I)
            IF(ICOL2.EQ.MAXCP6)TEMP2(NS3)=TAGPLO(I)
C
11200     CONTINUE
11209     CONTINUE
        ELSE
          NLOOP=NCOL2
          IF(NLOOP.LT.1)NLOOP=1
          NS3=0
          DO11201JLOOP=1,NLOOP
            DO11203I=1,NINEW
              IF(ISUB(I).EQ.0)GOTO11203
              IF(I.GT.NIRIG2)GOTO11205
              NS3=NS3+1
              IF(NS3.GT.MAXOBV)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,221)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11106)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11107)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11108)MAXOBV
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
              ICOLT=ICOL2+JLOOP-1
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)TEMP2(NS3)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)TEMP2(NS3)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)TEMP2(NS3)=RES(I)
              IF(ICOLT.EQ.MAXCP3)TEMP2(NS3)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)TEMP2(NS3)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)TEMP2(NS3)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)TEMP2(NS3)=TAGPLO(I)
11203       CONTINUE
11205       CONTINUE
11201     CONTINUE
        ENDIF
      ENDIF
C
      IF(NUMVAR.GE.3)THEN
        IF(IFLGP3.EQ.1)THEN
          NS4=1
          TEMP3(NS4)=AVAL3
        ELSEIF(ICOL32.LE.0)THEN
          DO11300I=1,NINEW
            IF(ISUB(I).EQ.0)GOTO11300
            IF(I.GT.NIRIG3)GOTO11309
            NS4=NS4+1
C
            IJ=MAXN*(ICOL3-1)+I
            IF(ICOL3.LE.MAXCOL)TEMP3(NS4)=V(IJ)
            IF(ICOL3.EQ.MAXCP1)TEMP3(NS4)=PRED(I)
            IF(ICOL3.EQ.MAXCP2)TEMP3(NS4)=RES(I)
            IF(ICOL3.EQ.MAXCP3)TEMP3(NS4)=YPLOT(I)
            IF(ICOL3.EQ.MAXCP4)TEMP3(NS4)=XPLOT(I)
            IF(ICOL3.EQ.MAXCP5)TEMP3(NS4)=X2PLOT(I)
            IF(ICOL3.EQ.MAXCP6)TEMP3(NS4)=TAGPLO(I)
C
11300     CONTINUE
11309     CONTINUE
        ELSE
          NLOOP=NCOL3
          IF(NLOOP.LT.1)NLOOP=1
          NS4=0
          DO11301JLOOP=1,NLOOP
            DO11303I=1,NINEW
              IF(ISUB(I).EQ.0)GOTO11303
              IF(I.GT.NIRIG3)GOTO11305
              NS4=NS4+1
              IF(NS4.GT.MAXOBV)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,221)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11106)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11107)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11108)MAXOBV
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
              ICOLT=ICOL3+JLOOP-1
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)TEMP3(NS4)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)TEMP3(NS4)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)TEMP3(NS4)=RES(I)
              IF(ICOLT.EQ.MAXCP3)TEMP3(NS4)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)TEMP3(NS4)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)TEMP3(NS4)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)TEMP3(NS4)=TAGPLO(I)
11303       CONTINUE
11305       CONTINUE
11301     CONTINUE
        ENDIF
      ENDIF
C
      IF(NS2.LE.0)THEN
        IF(ICASL8.EQ.'NUMB')THEN
          RIGHT=0
          IFOUND='YES'
          IERROR='NO'
          IF(ICASEL.EQ.'PARA')GOTO15000
          IF(ICASEL.EQ.'ELEM')GOTO16000
        ELSE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,12111)ICASL8
12111     FORMAT('****** ERROR--AFTER SUBSET/FOR/EXCEPT CLAUSE ',
     1           'APPLIED FOR STATISTIC ',A4,',')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,12113)
12113     FORMAT('       THE RESPONSE VARIABLE IS EMPTY.  THE ',
     1           'STATISTIC WAS NOT COMPUTED.')
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          GOTO19000
        ENDIF
      ENDIF
C
      IWRITE='ON'
      IF(IPRINT.EQ.'OFF')IWRITE='OFF'
      IF(IFEEDB.EQ.'OFF')IWRITE='OFF'
C
CCCCC MARCH 2003: CALL CMPSTA TO COMPUTE THE STATISTIC.
C
      ISTEPN='12'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL CMPSTA(
     1     TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,XTEMP3,
     1     XTEMP4,XTEMP5,
     1     MAXNXT,NS2,NS3,NS4,NUMVAR,ICASL8,ISTARA,
     1     ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1     DTEMP1,DTEMP2,DTEMP3,
CCCCC1     IQUAME,IQUASE,PSTAMV,
     1     RIGHT,
     1     ISUBRO,IBUGA3,IERROR)
C
      GOTO11900
C
11900 CONTINUE
      ISTEPN='13'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFOUND='YES'
      IF(IERROR.EQ.'YES')GOTO19000
      IF(ICASEL.EQ.'PARA')GOTO15000
      IF(ICASEL.EQ.'ELEM')GOTO16000
C
C               *****************************************************
C               **  STEP 15--                                      **
C               **  TREAT THE PARAMETER CASE.                      **
C               **  EXAMPLE--LET A = MEAN X                        **
C               **           WHERE A WAS PREVIOUSLY UNDEFINED      **
C               **           OR WHERE A WAS PREVIOUSLY A PARAMETER.**
C               **  CARRY OUT THE LIST UPDATING  AND               **
C               **  GENERATE THE INFORMATIVE PRINTING.             **
C               **  THEN EXIT.                                     **
C               *****************************************************
C
15000 CONTINUE
      ISTEPN='15'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHNAME(ILISTL)=ILEFT
      IHNAM2(ILISTL)=ILEFT2
      IUSE(ILISTL)='P'
      VALUE(ILISTL)=RIGHT
C     ***** THE FOLLOWING LINE WAS ADDED 7/83 *****
C     ***** ROUNDING NEEDS TO BE DIFFERENT FOR NEGATIVE
C           NUMBERS 4/2014                    *******
      IF(VALUE(ILISTL).GE.0.0)THEN
        IVALUE(ILISTL)=INT(VALUE(ILISTL)+0.5)
      ELSE
        IVALUE(ILISTL)=INT(VALUE(ILISTL)-0.5)
      ENDIF
      IN(ILISTL)=1
      IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
      IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,15111)ILEFT,ILEFT2,RIGHT
15111   FORMAT('THE COMPUTED VALUE OF THE CONSTANT ',
     1         A4,A4,'      = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO19000
C
C               *********************************************
C               **  STEP 16--                              **
C               **  TREAT THE ELEMENT SPECIFICATION CASE.  **
C               **  EXAMPLE--LET Y(4)=MEAN X               **
C               **  ALSO, CARRY OUT THE LIST UPDATING AND  **
C               **  GENERATE THE INFORMATIVE PRINTING.     **
C               *********************************************
C
16000 CONTINUE
      ISTEPN='16'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IARGL=INT1(4)
      IF(1.LE.IARGL.AND.IARGL.LE.MAXN)GOTO16100
      WRITE(ICOUT,221)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16002)IARGL,ILEFT
16002 FORMAT('      THE SPECIFIED ROW (',I8,') OF VARIABLE ',A4,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16003)RIGHT
16003 FORMAT('      (THAT WAS TO BE SET = ',G15.7,')')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16004)
16004 FORMAT('      WAS LESS THAN 1 OR')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16005)MAXN
16005 FORMAT('      GREATER THAN THE MAX ALLOWABLE ',I8)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
C
16100 CONTINUE
CCCCC THE FOLLOWING 2 LINES WERE ADDED     (DECEMBER 1988)
CCCCC TO FIX PROBLEM OF LET Y(K) = MEAN X  (DECEMBER 1988)
CCCCC INSIDE A LOOP                        (DECEMBER 1988)
      IF(NEWNAM.EQ.'NO')NIOLD=IN(ILISTL)
      IF(NEWNAM.EQ.'YES')NIOLD=1
      NINEW=NIOLD
      IF(IARGL.GT.NINEW)NINEW=IARGL
      NS2=1
C
      IJ=MAXN*(ICOLL-1)+IARGL
      IF(ICOLL.LE.MAXCOL)V(IJ)=RIGHT
      IF(ICOLL.EQ.MAXCP1)PRED(IARGL)=RIGHT
      IF(ICOLL.EQ.MAXCP2)RES(IARGL)=RIGHT
      IF(ICOLL.EQ.MAXCP3)YPLOT(IARGL)=RIGHT
      IF(ICOLL.EQ.MAXCP4)XPLOT(IARGL)=RIGHT
      IF(ICOLL.EQ.MAXCP5)X2PLOT(IARGL)=RIGHT
      IF(ICOLL.EQ.MAXCP6)TAGPLO(IARGL)=RIGHT
C
      IHNAME(ILISTL)=ILEFT
      IHNAM2(ILISTL)=ILEFT2
      IUSE(ILISTL)='V'
      IVALUE(ILISTL)=ICOLL
      VALUE(ILISTL)=ICOLL
      IN(ILISTL)=NINEW
C
CCCCC IUSE(ICOLL)='V'
CCCCC IVALUE(ICOLL)=ICOLL
CCCCC VALUE(ICOLL)=ICOLL
CCCCC IN(ICOLL)=NINEW
C
      IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
      IF(NEWNAM.EQ.'YES')NUMCOL=NUMCOL+1
C
      DO16200J4=1,NUMNAM
      IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL)GOTO16205
      GOTO16200
16205 CONTINUE
      IUSE(J4)='V'
      IVALUE(J4)=ICOLL
      VALUE(J4)=ICOLL
      IN(J4)=NINEW
16200 CONTINUE
C
      IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,16111)ILEFT,ILEFT2,IARGL,RIGHT
16111   FORMAT('THE COMPUTED VALUE OF ',
     1         A4,A4,'(',I6,')      = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO19000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
19000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STAC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19011)
19011   FORMAT('***** AT THE END       OF DPSTAC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19012)IFOUND,IERROR
19012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)ICASL8,ICASEL,IWRITE,IFLAGD,ILOCV
 9014   FORMAT('ICASL8,ICASEL,IWRITE,IFLAGD,ILOCV = ',4(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19015)NS2,NS3,NS4,RIGHT
19015   FORMAT('NS2,NS3,NS4,RIGHT = ',3I8,G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTAR(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A STAR PLOT--
C              A MULTIVARIATE TECHNICQUE WHICH PLOTS A SEQUENCE
C              OF RADIAL SPOKES AT EQUAL ANGLES AROUND A CIRCLE.
C              EACH RADIAL SPOKE REPRESENTS A SEPARATE VARIABLE.
C              THE LENGTH OF EACH RADIAL SPOKE IS PROPORTIONAL
C              TO THE RELATIVE SIZE OF THE RESPONSE.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/2
C     ORIGINAL VERSION--FEBRUARY  1988.
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C     UPDATED         --MARCH     2011. USE DPPARS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=50)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Z1(MAXOBV)
      DIMENSION Z2(MAXOBV)
      DIMENSION Z3(MAXOBV)
      DIMENSION YSUB(MAXOBV)
      DIMENSION YFULL(MAXOBV)
      DIMENSION XTEMP(MAXOBV)
CCCCC FOLLOWING LINES ADDED JUNE, 1990
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),Z1(1))
      EQUIVALENCE (GARBAG(IGARB2),Z2(1))
      EQUIVALENCE (GARBAG(IGARB3),Z3(1))
      EQUIVALENCE (GARBAG(IGARB4),YSUB(1))
      EQUIVALENCE (GARBAG(IGARB5),YFULL(1))
      EQUIVALENCE (GARBAG(IGARB6),XTEMP(1))
CCCCC END CHANGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPST'
      ISUBN2='AR  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ***********************************
C               **  TREAT THE STAR PLOT CASE     **
C               ***********************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'STAR')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTAR--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   52   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2
   53   FORMAT('ICASPL,IAND1,IAND2 = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='11'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'STAR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASPL='STAR'
C
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'PLOT')THEN
        IFOUND='YES'
        ILASTC=1
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'STAR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='STAR PLOT'
      MINNA=1
      MAXNA=100
      MINN2=1
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=MAXSPN
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'STAR')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),IVARTY(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),IVARTY(I) = ',I8,2X,A4,A4,2X,3I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      IWRITE='OFF'
      DO2200K=1,NUMVAR
        JF=0
        JS=0
        IMAX=NRIGHT(K)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO2210I=1,IMAX
C
C         CREATE THE "FULL" VARIABLE
C
          JF=JF+1
          IJ=MAXN*(ICOLR(K)-1)+I
          IF(ICOLR(K).LE.MAXCOL)YFULL(JF)=V(IJ)
          IF(ICOLR(K).EQ.MAXCP1)YFULL(JF)=PRED(I)
          IF(ICOLR(K).EQ.MAXCP2)YFULL(JF)=RES(I)
          IF(ICOLR(K).EQ.MAXCP3)YFULL(JF)=YPLOT(I)
          IF(ICOLR(K).EQ.MAXCP4)YFULL(JF)=XPLOT(I)
          IF(ICOLR(K).EQ.MAXCP5)YFULL(JF)=X2PLOT(I)
          IF(ICOLR(K).EQ.MAXCP6)YFULL(JF)=TAGPLO(I)
 2210   CONTINUE
        NFULL=JF
        CALL MINIM(YFULL,NFULL,IWRITE,XMIN,IBUGG3,IERROR)
        CALL MAXIM(YFULL,NFULL,IWRITE,XMAX,IBUGG3,IERROR)
        Z2(K)=XMIN
        Z3(K)=XMAX
C
C       CREATE THE "SUBSET" VARIABLE
C
        DO2240I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO2240
          JS=JS+1
          IJ=MAXN*(ICOLR(K)-1)+I
C
          IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'STAR')THEN
             WRITE(ICOUT,2241)I,JS,MAXN,ICOLR(I),IJ,NRIGHT(I),NQ,IMAX
 2241        FORMAT('I,JS,MAXN,ICOLR(I),IJ,NRIGHT(I),NQ,IMAX = ',8I8)
             CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(ICOLR(K).LE.MAXCOL)YSUB(JS)=V(IJ)
          IF(ICOLR(K).EQ.MAXCP1)YSUB(JS)=PRED(I)
          IF(ICOLR(K).EQ.MAXCP2)YSUB(JS)=RES(I)
          IF(ICOLR(K).EQ.MAXCP3)YSUB(JS)=YPLOT(I)
          IF(ICOLR(K).EQ.MAXCP4)YSUB(JS)=XPLOT(I)
          IF(ICOLR(K).EQ.MAXCP5)YSUB(JS)=X2PLOT(I)
          IF(ICOLR(K).EQ.MAXCP6)YSUB(JS)=TAGPLO(I)
C
 2240   CONTINUE
        NSUB=JS
C
        CALL MEDIAN(YSUB,NSUB,IWRITE,XTEMP,MAXN,XMED,IBUGG3,IERROR)
        Z1(K)=XMED
C
 2200 CONTINUE
      NZ=NUMVAR
C
C               ********************************************************
C               **  STEP 31--                                         **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS             **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.                **
C               **  DEFINE THE VECTOR D(.) TO 1'S, 2'S, AND 3'S       **
C               **  FOR THE PLOTTED VALUE, THE LOWER CONFIDENCE LINE, **
C               **  AND THE UPPER CONFIDENCE LINE.                    **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).     **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).     **
C               ********************************************************
C
      ISTEPN='8'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'STAR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPSTA2(Z1,Z2,Z3,NZ,ICASPL,
     1            Y,X,D,NPLOTP,NPLOTV,
     1            IBUGG3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'STAR')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPROF--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IFOUND,IERROR
 9013   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9014   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9021)NSUB,NFULL,NZ,NPLOTP
 9021   FORMAT('NSUB,NFULL,NZ,NPLOTP = ',4I8)
        CALL DPWRST('XXX','BUG ')
        IF(NSUB.GT.0)THEN
          DO9022I=1,NSUB
            WRITE(ICOUT,9023)I,YSUB(I)
 9023       FORMAT('I,YSUB(I) = ',I8,E15.7)
            CALL DPWRST('XXX','BUG ')
 9022     CONTINUE
        ENDIF
        IF(NFULL.GT.0)THEN
          DO9032I=1,NFULL
            WRITE(ICOUT,9033)I,YFULL(I)
 9033       FORMAT('I,YFULL(I) = ',I8,E15.7)
            CALL DPWRST('XXX','BUG ')
 9032     CONTINUE
        ENDIF
        IF(NZ.GT.0)THEN
          DO9042I=1,NZ
            WRITE(ICOUT,9043)I,Z1(I),Z2(I),Z3(I)
 9043       FORMAT('I,Z1(I),Z2(I),Z3(I) = ',I8,3G15.7)
            CALL DPWRST('XXX','BUG ')
 9042     CONTINUE
        ENDIF
        IF(NPLOTP.GT.0)THEN
          DO9052I=1,NPLOTP
            WRITE(ICOUT,9053)I,Y(I),X(I),D(I)
 9053       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9052     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTAT(ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--WRITE OUT A STATUS LISTING OF PARAMETERS,
C              VARIABLES, AND PLOT SPECIFICATIONS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1977.
C     UPDATED         --APRIL     1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --DECEMBER  1978.
C     UPDATED         --MARCH     1979.
C     UPDATED         --JULY      1979.
C     UPDATED         --NOVEMBER  1980.
C     UPDATED         --MARCH     1981.
C     UPDATED         --SEPTEMBER 1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --DECEMBER  1991. DIME, VARI, PARA, ETC. ARGS
C     UPDATED         --DECEMBER  1991. VARI/PARAM FORMAT STATEMENTS
C     UPDATED         --SEPTEMBER 1993. WRITE MESSAGE IF NO VAR.,
C                                       PAR. FUNC., ETC.
C     UPDATED         --JANUARY   2007. CRASH ON "STATUS LEGEND".
C                                       ADD SOME DIMENSION CHECKS TO
C                                       AVOID THESE.
C     UPDATED         --JULY      2009. FOR "STATUS VARIABLES", PRINT
C                                       IN SORTED ORDER
C     UPDATED         --SEPTEMBER 2010. LS IS SYNONYM FOR STATUS
C     UPDATED         --NOVEMBER  2014. WRITE VARIABLE LIST TO "DPST1F.DAT"
C     UPDATED         --MARCH     2015. CALL LIST TO DPINFU
C     UPDATED         --DECEMBER  2015. ADDITIONAL INFO TO DPST1F.DAT
C     UPDATED         --JUNE      2016. SET STATUS DISTINCT SWITCH
C     UPDATED         --JUNE      2018. FOR "STATUS V", PRINT NUMBER
C                                       OF VARIABLES CURRENTLY ASSIGNED
C                                       AND MAXIMUM NUMBER OF VARIABLES
C     UPDATED         --JUNE      2018. ADD ROW LABELS, GROUP LABELS,
C                                       AND CHARACTER VARIABLES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      INCLUDE 'DPCOPA.INC'
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IOP
      CHARACTER*4 IWRITE
      CHARACTER*1 CTEMP
C
CCCCC CHARACTER*80 IFILE
      CHARACTER (LEN=MAXFNC) :: IFILE
      CHARACTER*12 ISTAT
      CHARACTER*12 IFORM
      CHARACTER*12 IACCES
      CHARACTER*12 IPROT
      CHARACTER*12 ICURST
      CHARACTER*4 IENDFI
      CHARACTER*4 IREWIN
      CHARACTER*4 ISUBN0
      CHARACTER*4 IERRFI
      CHARACTER*8 IH
      CHARACTER*8 IHSTR
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCODB.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOPC.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZC.INC'
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCOST.INC'
C
      INTEGER INUMEL(MAXNME)
C
      CHARACTER*4 IJUNK(MAXNME)
      CHARACTER*4 IJUNK2(MAXNME)
C
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
C
      EQUIVALENCE (GARBAG(IGARB1),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB2),TEMP2(1))
      EQUIVALENCE (CGARBG(1),IJUNK(1))
      EQUIVALENCE (CGARBG(4*MAXNME+1),IJUNK2(1))
      EQUIVALENCE (IGARBG(1),INUMEL(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='AT  '
      IFOUND='NO'
      IERROR='NO'
C
      NI=0
      NUMELE=0
      KMAX=0
C
      IF(IBUGS2.EQ.'ON' .OR. ISUBRO.EQ.'STAT')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPSTAT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGS2,ISUBRO,IHARG(1)
   53   FORMAT('IBUGS2,ISUBRO,IHARG(1) = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IPR,NUMARG,NUMNAM
   54   FORMAT('IPR,NUMARG,NUMNAM = ',3I10)
        CALL DPWRST('XXX','BUG ')
        DO69I=1,NUMNAM
          WRITE(ICOUT,62)I,IHNAME(I),IHNAM2(I),IUSE(I)
   62     FORMAT('I,IHNAME,IHNAM2,IUSE   = ',I4,3(A4,1X))
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,63)IN(I),IVALUE(I),IVALU2(I)
   63     FORMAT('IN,IVALUE,IVALU2  = ',3I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,64)IVSTAR(I),IVSTOP(I),VALUE(I)
   64     FORMAT('IVSTAR,IVSTOP,VALUE     = ',2I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   69   CONTINUE
      ENDIF
C
C               *****************************
C               **  TREAT THE STATUS CASE  **
C               *****************************
C
      IFOUND='YES'
C
C               *********************************************
C               **  STEP 10--                               **
C               **  PRINT OUT DETAILED STATUS INFORMATION  **
C               *********************************************
C
C               ****************************************
C               **  STEP 11--                         **
C               **  TREAT THE MACHINE CONSTANTS CASE  **
C               ****************************************
C
      IF(IHARG(1).EQ.'MACH' .OR. IHARG(1).EQ.'COMP' .OR.
     1   IHARG(1).EQ.'SITE' .OR. IHARG(1).EQ.'HOST')THEN
C
        ISTEPN='11'
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1111)
 1111   FORMAT('STATUS OF MACHINE CONSTANTS--')
        CALL DPWRST('XXX','WRIT')
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1112)IHOST1,IHOST2
 1112   FORMAT('IHOST1,IHOST2  (HOST) = ',A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1113)IHMOD1,IHMOD2
 1113   FORMAT('IHMOD1,IHMOD2 (MODEL) = ',A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1114)IOPSY1,IOPSY2
 1114   FORMAT('IOPSY1,IOPSY2 (OPERATING SYSTEM) = ',A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1115)ICOMPI
 1115   FORMAT('ICOMPI        (COMPILER) = ',A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1116)ISITE
 1116   FORMAT('ISITE         (SITE) = ',A4)
        CALL DPWRST('XXX','WRIT')
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1123)IPR,IRD,CPUMIN,CPUMAX
 1123   FORMAT('IPR,IRD,CPUMIN,CPUMAX = ',2I6,2E15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1124)NUMBPC,NUMCPW,NUMBPW
 1124   FORMAT('NUMBPC,NUMCPW,NUMBPW = ',3I6)
        CALL DPWRST('XXX','WRIT')
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        DO1130I=1,16
          IF(NUMBPW.LT.32)THEN
            WRITE(ICOUT,1131)I,I1MACH(I)
 1131       FORMAT('I,I1MACH(I) = ',I8,2X,I8)
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMBPW.EQ.32)THEN
            WRITE(ICOUT,1132)I,I1MACH(I)
 1132       FORMAT('I,I1MACH(I) = ',I8,2X,I11)
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMBPW.EQ.36)THEN
            WRITE(ICOUT,1133)I,I1MACH(I)
 1133       FORMAT('I,I1MACH(I) = ',I8,2X,I12)
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMBPW.EQ.48)THEN
            WRITE(ICOUT,1134)I,I1MACH(I)
 1134       FORMAT('I,I1MACH(I) = ',I8,2X,I16)
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMBPW.GE.60)THEN
            WRITE(ICOUT,1135)I,I1MACH(I)
 1135       FORMAT('I,I1MACH(I) = ',I8,2X,I20)
            CALL DPWRST('XXX','WRIT')
          ELSE
            WRITE(ICOUT,1136)I,I1MACH(I)
 1136       FORMAT('I,I1MACH(I) = ',I8,2X,I8)
            CALL DPWRST('XXX','WRIT')
          ENDIF
 1130   CONTINUE
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        DO1140I=1,5
          WRITE(ICOUT,1141)I,R1MACH(I)
 1141     FORMAT('I,R1MACH(I)  = ',I8,2X,E15.7)
          CALL DPWRST('XXX','WRIT')
 1140   CONTINUE
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        DO1150I=1,5
          WRITE(ICOUT,1151)I,D1MACH(I)
 1151     FORMAT('I,D1MACH(I)  = ',I8,2X,D15.7)
          CALL DPWRST('XXX','WRIT')
 1150   CONTINUE
C
        GOTO9000
C
C               ***************************
C               **  STEP 12--            **
C               **  TREAT THE FILE CASE  **
C               ***************************
C
      ELSEIF(IHARG(1).EQ.'FILE' .OR. IHARG(1).EQ.'I/O')THEN
C
        ISTEPN='12'
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1211)
 1211   FORMAT('STATUS OF FILES--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1253)IPR,IRD,CPUMIN,CPUMAX
 1253   FORMAT('IPR,IRD,CPUMIN,CPUMAX = ',2I6,2E15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1254)NUMBPC,NUMCPW,NUMBPW
 1254   FORMAT('NUMBPC,NUMCPW,NUMBPW = ',3I6)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1261)IMESNU,IMESST,IMESNA
 1261   FORMAT('IMESNU,IMESST,IMESNA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1262)INEWNU,INEWST,INEWNA
 1262   FORMAT('INEWNU,INEWST,INEWNA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1264)IHELNU,IHELST,IHELNA
 1264   FORMAT('IHELNU,IHELST,IHELNA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1265)IBUGNU,IBUGST,IBUGNA
 1265   FORMAT('IBUGNU,IBUGST,IBUGNA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1267)ISYSNU,ISYSST,ISYSNA
 1267   FORMAT('ISYSNU,ISYSST,ISYSNA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1268)ILOGNU,ILOGST,ILOGNA
 1268   FORMAT('ILOGNU,ILOGST,ILOGNA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1271)IREANU,IREAST,IREANA
 1271   FORMAT('IREANU,IREAST,IREANA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1272)IWRINU,IWRIST,IWRINA
 1272   FORMAT('IWRINU,IWRIST,IWRINA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1273)ISAVNU,ISAVST,ISAVNA
 1273   FORMAT('ISAVNU,ISAVST,ISAVNA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1274)ICRENU,ICREST,ICRENA
 1274   FORMAT('ICRENU,ICREST,ICRENA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
CCCCC   WRITE(ICOUT,1275)IMACNU,IMACST,IMACNA
C1275   FORMAT('IMACNU,IMACST,IMACNA = ',I8,2X,A12,2X,A80)
CCCCC   CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1276)ISCRNU,ISCRST,ISCRNA
 1276   FORMAT('ISCRNU,ISCRST,ISCRNA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1277)IDATNU,IDATST,IDATNA
 1277   FORMAT('IDATNU,IDATST,IDATNA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1278)IPL1NU,IPL1ST,IPL1NA
 1278   FORMAT('IPL1NU,IPL1ST,IPL1NA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1279)IPL2NU,IPL2ST,IPL2NA
 1279   FORMAT('IPL2NU,IPL2ST,IPL2NA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1280)IPRONU,IPROST,IPRONA
 1280   FORMAT('IPRONU,IPROST,IPRONA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1281)ICONNU,ICONST,ICONNA
 1281   FORMAT('ICONNU,ICONST,ICONNA = ',I8,2X,A12,2X,A80)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        GOTO9000
C
C               *****************************
C               **  STEP 21--              **
C               **  TREAT THE ARROWS CASE  **
C               *****************************
C
      ELSEIF(IHARG(1).EQ.'ARRO')THEN
C
        ISTEPN='21'
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2111)
 2111   FORMAT('STATUS OF ARROWS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2112)NUMARR
 2112   FORMAT('       NUMBER OF ARROWS = ',I8)
        CALL DPWRST('XXX','WRIT')
C
CCCCC   THE FOLLOWING LINE WAS CHANGED    SEPTEMBER 1993
CCCCC   IF(NUMARR.LE.0)GOTO2180
        IF(NUMARR.LE.0)THEN
           WRITE(ICOUT,999)
           CALL DPWRST('XXX','WRIT')
           WRITE(ICOUT,2105)
 2105      FORMAT('NO ARROWS DEFINED')
           CALL DPWRST('XXX','WRIT')
        ELSE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          DO2115I=1,NUMARR
            IF(PARRXC(I,1).LT.0.0.OR.PARRXC(I,1).GT.100.0)GOTO2115
            IF(PARRYC(I,1).LT.0.0.OR.PARRYC(I,1).GT.100.0)GOTO2115
            IF(PARRXC(I,2).LT.0.0.OR.PARRXC(I,2).GT.100.0)GOTO2115
            IF(PARRYC(I,2).LT.0.0.OR.PARRYC(I,2).GT.100.0)GOTO2115
            WRITE(ICOUT,2116)I,PARRXC(I,1),PARRYC(I,1),PARRXC(I,2),
     1                       PARRYC(I,2)
 2116       FORMAT('       ARROW   ',I8,' COORDINATES       --',4F10.4)
            CALL DPWRST('XXX','WRIT')
 2115     CONTINUE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          DO2125I=1,NUMARR
            WRITE(ICOUT,2126)I,IARRCO(I)
 2126       FORMAT('       ARROW   ',I8,' COLOR             --',A4)
            CALL DPWRST('XXX','WRIT')
 2125     CONTINUE
C
        ENDIF
C
        GOTO9000
C
C               *******************************
C               **  STEP 22--                **
C               **  TREAT THE SEGMENTS CASE  **
C               *******************************
C
      ELSEIF(IHARG(1).EQ.'SEGM')THEN
C
        ISTEPN='22'
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2211)
 2211   FORMAT('STATUS OF SEGMENTS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2212)NUMSEG
 2212   FORMAT('       NUMBER OF SEGMENTS = ',I8)
        CALL DPWRST('XXX','WRIT')
C
CCCCC   THE FOLLOWING LINE WAS CHANGED    SEPTEMBER 1993
CCCCC   IF(NUMSEG.LE.0)GOTO2280
        IF(NUMSEG.LE.0)THEN
           WRITE(ICOUT,999)
           CALL DPWRST('XXX','WRIT')
           WRITE(ICOUT,2205)
 2205      FORMAT('NO SEGMENTS DEFINED')
           CALL DPWRST('XXX','WRIT')
        ELSE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          DO2215I=1,NUMSEG
            IF(PSEGXC(I,1).LT.0.0.OR.PSEGXC(I,1).GT.100.0)GOTO2215
            IF(PSEGYC(I,1).LT.0.0.OR.PSEGYC(I,1).GT.100.0)GOTO2215
            IF(PSEGXC(I,2).LT.0.0.OR.PSEGXC(I,2).GT.100.0)GOTO2215
            IF(PSEGYC(I,2).LT.0.0.OR.PSEGYC(I,2).GT.100.0)GOTO2215
            WRITE(ICOUT,2216)I,PSEGXC(I,1),PSEGYC(I,1),PSEGXC(I,2),
     1                       PSEGYC(I,2)
 2216       FORMAT('       SEGMENT ',I8,' COORDINATES       --',4F10.4)
            CALL DPWRST('XXX','WRIT')
 2215     CONTINUE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          DO2225I=1,NUMSEG
            WRITE(ICOUT,2226)I,ISEGCO(I)
 2226       FORMAT('       SEGMENT ',I8,' COLOR             --',A4)
            CALL DPWRST('XXX','WRIT')
 2225     CONTINUE
        ENDIF
C
        GOTO9000
C
C               ******************************
C               **  STEP 23--               **
C               **  TREAT THE LEGENDS CASE  **
C               ******************************
C
      ELSEIF(IHARG(1).EQ.'LEGE')THEN
C
        ISTEPN='23'
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2311)
 2311   FORMAT('STATUS OF LEGENDS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2312)NUMLEG
 2312   FORMAT('       NUMBER OF LEGENDS = ',I8)
        CALL DPWRST('XXX','WRIT')
C
CCCCC   THE FOLLOWING LINE WAS CHANGED    SEPTEMBER 1993
CCCCC   IF(NUMLEG.LE.0)GOTO2380
        IF(NUMLEG.LE.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,2305)
 2305     FORMAT('NO LEGENDS DEFINED')
          CALL DPWRST('XXX','WRIT')
        ELSE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          DO2315I=1,NUMLEG
            JMIN=ILEGST(I)
            JMAX=ILEGSP(I)
            JLENGT=JMAX-JMIN+1
            IF(JLENGT.LE.100)THEN
              JSTOP=JMAX
            ELSE
              JSTOP=JMIN+99
            ENDIF
            IF(JSTOP.GE.JMIN)THEN
              WRITE(ICOUT,2316)I,(ILEGTE(J),J=JMIN,JSTOP)
 2316         FORMAT('       LEGEND  ',I8,'--',100A1)
              CALL DPWRST('XXX','WRIT')
            ENDIF
 2315     CONTINUE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          DO2325I=1,NUMLEG
            IF(PLEGXC(I).LT.0.0.OR.PLEGXC(I).GT.100.0)GOTO2325
            IF(PLEGYC(I).LT.0.0.OR.PLEGYC(I).GT.100.0)GOTO2325
            WRITE(ICOUT,2326)I,PLEGXC(I),PLEGYC(I)
 2326       FORMAT('       LEGEND  ',I8,' COORDINATES       --',2F10.4)
            CALL DPWRST('XXX','WRIT')
 2325     CONTINUE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          DO2335I=1,NUMLEG
            WRITE(ICOUT,2336)I,ILEGCO(I)
 2336       FORMAT('       LEGEND  ',I8,' COLOR             --',A4)
            CALL DPWRST('XXX','WRIT')
 2335     CONTINUE
        ENDIF
C
        GOTO9000
C
C               ****************************
C               **  STEP 24--             **
C               **  TREAT THE BOXES CASE  **
C               ****************************
C
      ELSEIF(IHARG(1).EQ.'BOXE' .OR. IHARG(1).EQ.'BOX')THEN
C
        ISTEPN='24'
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2411)
 2411   FORMAT('STATUS OF BOXES--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2412)NUMBOX
 2412   FORMAT('       NUMBER OF BOXES = ',I8)
        CALL DPWRST('XXX','WRIT')
C
CCCCC   THE FOLLOWING LINE WAS CHANGED    SEPTEMBER 1993
CCCCC   IF(NUMBOX.LE.0)GOTO2480
        IF(NUMBOX.LE.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,2405)
 2405     FORMAT('NO BOXES DEFINED')
          CALL DPWRST('XXX','WRIT')
        ELSE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          DO2415I=1,NUMBOX
            IF(PBOXXC(I,1).LT.0.0.OR.PBOXXC(I,1).GT.100.0)GOTO2415
            IF(PBOXYC(I,1).LT.0.0.OR.PBOXYC(I,1).GT.100.0)GOTO2415
            IF(PBOXXC(I,2).LT.0.0.OR.PBOXXC(I,2).GT.100.0)GOTO2415
            IF(PBOXYC(I,2).LT.0.0.OR.PBOXYC(I,2).GT.100.0)GOTO2415
            WRITE(ICOUT,2416)I,PBOXXC(I,1),PBOXYC(I,1),PBOXXC(I,2),
     1                       PBOXYC(I,2)
 2416       FORMAT('       BOX     ',I8,' CORNER COORDINATES--',4F10.4)
            CALL DPWRST('XXX','WRIT')
 2415     CONTINUE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          DO2425I=1,NUMBOX
            WRITE(ICOUT,2426)I,IBOPCO(I)
 2426       FORMAT('       BOX     ',I8,' COLOR             --',A4)
            CALL DPWRST('XXX','WRIT')
 2425     CONTINUE
        ENDIF
C
        GOTO9000
C
C               ****************************
C               **  STEP 31--             **
C               **  TREAT THE SPIKE CASE  **
C               ****************************
C
      ELSEIF(IHARG(1).EQ.'SPIK' .OR. IHARG(1).EQ.'S   ')THEN
C
        ISTEPN='31'
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3111)
 3111   FORMAT('STATUS OF SPIKE SETTINGS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3112)
 3112   FORMAT('   SET       SPIKE     SPIKE     SPIKE     SPIKE  ',
     1         '    SPIKE  ')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3113)
 3113   FORMAT('  INDEX     SWITCH     LINE      COLOR   THICKNESS',
     1         '    BASE   ')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        IMAX=10
CCCCC   IF(NUMSET.GT.IMAX)IMAX=NUMSET
        DO3120I=1,IMAX
          WRITE(ICOUT,3121)I,ISPISW(I),ISPILI(I),ISPICO(I),PSPITH(I),
     1                     ASPIBA(I)
 3121     FORMAT(I5,8X,A4,6X,A4,6X,A4,6X,F7.3,3X,E15.7)
          CALL DPWRST('XXX','WRIT')
 3120   CONTINUE
        WRITE(ICOUT,3122)IDEFSS,IDEFSL,IDEFSC,PDEFST,ADEFSB
 3122   FORMAT('DEFAULT',6X,A4,6X,A4,6X,A4,6X,F7.3,3X,E15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
C
        GOTO9000
C
C               ****************************
C               **  STEP 32--             **
C               **  TREAT THE BAR   CASE  **
C               ****************************
C
      ELSEIF(IHARG(1).EQ.'BAR ' .OR. IHARG(1).EQ.'BARS' .OR.
     1       IHARG(1).EQ.'B   ')THEN
C
        ISTEPN='32'
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3211)
 3211   FORMAT('STATUS OF BAR SETTINGS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3212)
 3212   FORMAT('   SET       BAR       BAR       BAR       BAR   ',
     1         '        BAR   ')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3213)
 3213   FORMAT('  INDEX     SWITCH     FILL   DIMENSION  PATTERN',
     1         '         BASE ')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        IMAX=10
CCCCC   IF(NUMSET.GT.IMAX)IMAX=NUMSET
        DO3220I=1,IMAX
          WRITE(ICOUT,3221)I,IBARSW(I),IBAFSW(I),IBARTY(I),IBAPTY(I),
     1                     ABARBA(I)
 3221     FORMAT(I5,8X,A4,6X,A4,6X,A4,6X,A4,6X,E15.7)
          CALL DPWRST('XXX','WRIT')
 3220   CONTINUE
        WRITE(ICOUT,3222)IDEBSW,IDEBFS,IDEBTY,IDEBPT,ADEBBA
 3222   FORMAT('DEFAULT',6X,A4,6X,A4,6X,A4,6X,A4,6X,E15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
C
        GOTO9000
C
      ENDIF
C
C               *************************************
C               **  STEP 70--                      **
C               **  TREAT THE GENERAL STATUS CASE  **
C               *************************************
C
C               *****************************
C               **  STEP 70.1--            **
C               **  PRINT OUT A            **
C               **  STORAGE SUMMARY TABLE  **
C               *****************************
C
      ISTEPN='70.1'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC THE FOLLOWING 4 LINES WERE ADDED     DECEMBER 1991
      IF(NUMARG.LE.0 .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'DIME') .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'D   '))THEN
C
        NUMN=0
        DO110I=1,NUMNAM
          IF(IHNAME(I).EQ.'PRED')GOTO110
          IF(IHNAME(I).EQ.'RES')GOTO110
          IF(IHNAME(I).EQ.'YPLO')GOTO110
          IF(IHNAME(I).EQ.'XPLO')GOTO110
          IF(IHNAME(I).EQ.'X2PL')GOTO110
          IF(IHNAME(I).EQ.'TAGP')GOTO110
          IF(IUSE(I).EQ.'V')NI=IN(I)
          IF(NI.GT.NUMN)NUMN=NI
  110   CONTINUE
C
        NUMNK=MAXN*NUMCOL
        IDELCO=MAXCOL-NUMCOL
        IDELN=MAXN-NUMN
        IDELNK=MAXNK-NUMNK
        IDELCF=MAXCHF-NUMCHF
        IDELNA=MAXNAM-NUMNAM
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,131)
  131   FORMAT('******************************************************')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,132)
  132   FORMAT('*                STORAGE INFORMATION                 *')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,131)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,133)
  133   FORMAT('* NUMBER OF ...      *  MAXIMUM  * UNUSED  *   USED  *')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,131)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,141)MAXCOL,IDELCO,NUMCOL
  141   FORMAT('* VARIABLES (COLUMNS)*',I9,'  *',I7,'  *',I7,'  *')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,142)MAXN,IDELN,NUMN
  142   FORMAT('* OBS PER VARIABLE   *',I9,'  *',I7,'  *',I7,'  *')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,143)MAXNK,IDELNK,NUMNK
  143   FORMAT('* OBS (TOTAL)        *',I9,'  *',I7,'  *',I7,'  *')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,144)MAXCHF,IDELCF,NUMCHF
  144   FORMAT('* FUNC CHAR (TOTAL)  *',I9,'  *',I7,'  *',I7,'  *')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,145)MAXNAM,IDELNA,NUMNAM
  145   FORMAT('* VAR/PAR/FUNC NAMES *',I9,'  *',I7,'  *',I7,'  *')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,131)
        CALL DPWRST('XXX','WRIT')
CCCCC   THE FOLLOWING LINE WAS ADDED    DECEMBER 1991
       ENDIF
C
C               *******************************
C               **  STEP 70.2--              **
C               **  PRINT OUT PLOT LINE,     **
C               **  PLOT CHARACTER, AND      **
C               **  PLOT LIMITS INFORMATION  **
C               *******************************
C
      ISTEPN='70.2'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC THE FOLLOWING 4 LINES WERE ADDED     DECEMBER 1991
      IF(NUMARG.LE.0 .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'CHAR'.AND.IHARG(2).NE.'VARI') .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'C   ') .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'LINE') .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'L   '))THEN
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,211)
  211   FORMAT('   SET       PLOT      PLOT      PLOT      PLOT   ',
     1         '    PLOT  ')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,212)
  212   FORMAT('  INDEX      LINE      LINE    CHARACTER CHARACTER',
     1         ' CHARACTER')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,213)
  213   FORMAT('             TYPE      COLOR     TYPE      COLOR  ',
     1         '    SIZE  ')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        IMAX=10
CCCCC   IF(NUMSET.GT.IMAX)IMAX=NUMSET
        DO220I=1,IMAX
          WRITE(ICOUT,221)I,ILINPA(I),ILINCO(I),ICHAPA(I),ICHACO(I),
     1                    PCHAHE(I)
  221     FORMAT(I5,8X,A4,6X,A4,6X,A24,6X,A4,4X,F7.3)
          CALL DPWRST('XXX','WRIT')
  220   CONTINUE
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,231)FX1MIN
  231   FORMAT('X-AXIS PLOT MINIMUM = ',E15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,232)FX1MAX
  232   FORMAT('X-AXIS PLOT MAXIMUM = ',E15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,233)FY1MIN
  233   FORMAT('Y-AXIS PLOT MINIMUM = ',E15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,234)FY1MAX
  234   FORMAT('Y-AXIS PLOT MAXIMUM = ',E15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
C               ***************************************
C               **  STEP 70.3--                      **
C               **  PRINT OUT VARIABLES INFORMATION  **
C               ***************************************
C
      ISTEPN='70.3'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0 .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'VARI') .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'VAR ') .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'V   '))THEN
C
        IOP='OPEN'
        IFLG1=1
        IFLG2=0
        IFLG3=0
        IFLG4=0
        IFLG5=0
        CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        CTEMP(1:1)=' '
        IF(NUMARG.GE.2)THEN
          CTEMP(1:1)=IHARG(2)(1:1)
        ENDIF
C
CCCCC   THE FOLLOWING LINE WAS CHANGED    SEPTEMBER 1993
CCCCC   IF(NUMCOL.LE.0)GOTO399
        IF(NUMCOL.LE.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,355)
  355     FORMAT('NO VARIABLES  (= VECTORS) DEFINED')
          CALL DPWRST('XXX','WRIT')
          WRITE(IOUNI1,355)
        ELSE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          NJUNK=0
          DO390I=1,NUMCOL
            DO391J=1,NUMNAM
              IF(I.EQ.IVALUE(J).AND.IUSE(J).EQ.'V')THEN
                IF(NJUNK.LE.MAXNME)THEN
                  IF(CTEMP.EQ.' ')THEN
                    NJUNK=NJUNK+1
                    IJUNK(NJUNK)=IHNAME(J)
                    IJUNK2(NJUNK)=IHNAM2(J)
                    INUMEL(NJUNK)=IN(J)
                  ELSEIF(IHNAME(J)(1:1).EQ.CTEMP)THEN
                    NJUNK=NJUNK+1
                    IJUNK(NJUNK)=IHNAME(J)
                    IJUNK2(NJUNK)=IHNAM2(J)
                    INUMEL(NJUNK)=IN(J)
                  ENDIF
                ENDIF
              ENDIF
  391       CONTINUE
  390     CONTINUE
          WRITE(IOUNI1,'(I5)')NJUNK
          IF(NJUNK.GE.1)THEN
            DO395K=1,NJUNK
              WRITE(ICOUT,397)K,INUMEL(K),IJUNK(K),IJUNK2(K)
  397         FORMAT('VARIABLE ',I5,' (',I8,' ELEMENTS) IS: ',2A4)
              CALL DPWRST('XXX','WRIT')
C
C             2015/12: WRITE FOLLOWING TO DPST1F.DAT:
C
C                      1. VARIABLE NAME
C                      2. NUMBER OF OBSERVATIONS
C                      3. NUMBER OF DISTINCT OBSERVATIONS
C                      4. FIRST 10 DISTINCT VALUES
C
C             2016/12: OPTION TO SUPPRESS DISTINCT VALUES
C
              IWRITE='OFF'
              DO3310JJ=1,NUMNAM
                IF(IJUNK(K).EQ.IHNAME(JJ) .AND.
     1             IJUNK2(K).EQ.IHNAM2(JJ))THEN
                   NOBS=IN(JJ)
                   ICOLR=IVALUE(JJ)
                   IF(ISTADS.EQ.'ON')THEN
                     DO3320LL=1,NOBS
                       IJ=MAXN*(ICOLR-1)+LL
                       TEMP1(LL)=V(IJ)
 3320                CONTINUE
                     CALL DISTIN(TEMP1,NOBS,IWRITE,TEMP2,NDIST,
     1                           IBUGA3,IERROR)
C
                     WRITE(IOUNI1,398)IJUNK(K),IJUNK2(K),K,NOBS,NDIST,
     1                                (TEMP2(LL),LL=1,MIN(10,NDIST))
  398                FORMAT(2A4,I6,2I10,10E15.7)
C
                   ELSE
                     WRITE(IOUNI1,3398)IJUNK(K),IJUNK2(K),K,NOBS
 3398                FORMAT(2A4,I6,2I10)
                   ENDIF
                   GOTO3319
                ENDIF
 3310         CONTINUE
 3319         CONTINUE
  395       CONTINUE
          ENDIF
        ENDIF
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3395)NUMCOL
 3395   FORMAT('NUMBER OF VARIABLES CURRENTLY ASSIGNED: ',I5)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3397)MAXCOL
 3397   FORMAT('MAXIMUM NUMBER OF VARIABLES:            ',I5)
        CALL DPWRST('XXX','WRIT')
C
        IOP='CLOS'
        CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
      ENDIF
C
CCCCC THE FOLLOWING SECTION WAS CHANGED    SEPTEMBER 1993
C               ****************************
C               **  STEP 70.4--           **
C               **  PRINT OUT PARAMETERS  **
C               ****************************
C
      ISTEPN='70.4'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0 .OR.
     1  (NUMARG.GE.1 .AND. IHARG(1).EQ.'PARA') .OR.
     1  (NUMARG.GE.1 .AND. IHARG(1).EQ.'PAR ') .OR.
     1  (NUMARG.GE.1 .AND. IHARG(1).EQ.'P   '))THEN
C
        NUMPAR=0
        IF(NUMNAM.GT.0)THEN
C
          DO430J=1,NUMNAM
            IF(IUSE(J).EQ.'P')THEN
              NUMPAR=NUMPAR+1
              IF(NUMPAR.LE.1)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','WRIT')
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','WRIT')
              ENDIF
              WRITE(ICOUT,436)IHNAME(J),IHNAM2(J),VALUE(J)
              CALL DPWRST('XXX','WRIT')
  436         FORMAT('PARAMETER ',2A4,'  HAS THE VALUE:   ',E15.7)
            ENDIF
  430     CONTINUE
        ENDIF
C
        IF(NUMPAR.LE.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,481)
  481     FORMAT('NO PARAMETERS (= SCALARS) DEFINED')
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ENDIF
C
C
CCCCC THE FOLLOWING SECTION WAS CHANGED    SEPTEMBER 1993
C               ****************************
C               **  STEP 70.5--           **
C               **  PRINT OUT FUNCTIONS   **
C               ****************************
C
C     2018/06: SUPPORT
C
C                 STATUS F STR
C
C              FOR THIS SYNTAX, ONLY PRINT FUNCTIONS THAT CONTAIN
C              "STR" IN NAME.  SINCE STRINGS PRESERVE CASE, BE SURE
C              TO MAKE MATCH CASE INSENSITIVE.
C
      ISTEPN='70.5'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0 .OR.
     1  (NUMARG.LE.2 .AND. IHARG(1).EQ.'FUNC') .OR.
     1  (NUMARG.LE.2 .AND. IHARG(1).EQ.'FUN ') .OR.
     1  (NUMARG.LE.2 .AND. IHARG(1).EQ.'F   ') .OR.
     1  (NUMARG.LE.2 .AND. IHARG(1).EQ.'STRI'))THEN
C
        IHSTR=' '
        NLAST=0
        IF(NUMARG.GE.2 .AND. IHARG(1).NE.'    ')THEN
          IHSTR(1:4)=IHARG(2)(1:4)
          IHSTR(5:8)=IHARG2(2)(1:4)
          DO520J=8,1,-1
            IF(IHSTR(J:J).NE.' ')THEN
              NLAST=J
              GOTO529
            ENDIF
 520      CONTINUE
 529      CONTINUE
        ENDIF
C
        NUMFUN=0
        IF(NUMNAM.GT.0)THEN
C
          DO530J=1,NUMNAM
            IF(IUSE(J).EQ.'F')THEN
              IMIN=IVSTAR(J)
              IMAX=IVSTOP(J)
              IH(1:4)=IHNAME(J)(1:4)
              IH(5:8)=IHNAM2(J)(1:4)
C
C             CHECK TO SEE IF THERE IS A SUBSTRING MATCH
C
              IF(NLAST.GT.0)THEN
                IF(NLAST.GT.IMAX)GOTO530
                IF(IHSTR(1:NLAST).NE.IH(1:NLAST))GOTO530
              ENDIF
C
              NUMFUN=NUMFUN+1
              IDEL=IMAX-IMIN+1
              NUMLIN=((IDEL-1)/100)+1
              IF(NUMLIN.GT.0)THEN
                DO540KLINE=1,NUMLIN
                  IF(KLINE.EQ.1)THEN
                    KMIN=IMIN
                    KMAX=KMIN+100-1
                    IF(KMAX.GT.IMAX)KMAX=IMAX
                    WRITE(ICOUT,552)IHNAME(J),IHNAM2(J),
     1                              (IFUNC(K),K=KMIN,KMAX)
  552               FORMAT('FUNCTION  ',2A4,'--',100A1)
                    CALL DPWRST('XXX','WRIT')
                  ELSEIF(KLINE.GE.2)THEN
                    KMIN=KMAX+1
                    KMAX=KMIN+100-1
                    IF(KMAX.GT.IMAX)KMAX=IMAX
                    WRITE(ICOUT,562)(IFUNC(K),K=KMIN,KMAX)
  562               FORMAT(18X,100A1)
                    CALL DPWRST('XXX','WRIT')
                  ENDIF
  540           CONTINUE
              ENDIF
            ENDIF
  530     CONTINUE
        ENDIF
C
        IF(NUMFUN.LE.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,581)
  581     FORMAT('NO FUNCTIONS (= STRINGS) DEFINED')
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ENDIF
C
C               ***************************************
C               **  STEP 70.6--                     **
C               **  PRINT OUT MATRIX    INFORMATION  **
C               ***************************************
C
      ISTEPN='70.6'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC THE FOLLOWING 4 LINES WERE ADDED     DECEMBER 1991
      IF(NUMARG.LE.0 .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'MATR') .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'M   '))THEN
C
CCCCC   THE FOLLOWING LINE WAS CHANGED    SEPTEMBER 1993
CCCCC   IF(NUMNAM.LE.0)GOTO619
        IF(NUMNAM.LE.0)THEN
           WRITE(ICOUT,999)
           CALL DPWRST('XXX','WRIT')
           WRITE(ICOUT,605)
  605      FORMAT('NO MATRICES               DEFINED')
           CALL DPWRST('XXX','WRIT')
        ELSE
C
          IPASS=0
          DO610J=1,NUMNAM
            IF(IUSE(J).EQ.'M')THEN
              IPASS=IPASS+1
              IF(IPASS.EQ.1)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','WRIT')
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','WRIT')
              ENDIF
              NR1=IN(J)
              NC1=IVALU2(J)-IVALUE(J)+1
              WRITE(ICOUT,616)IHNAME(J),IHNAM2(J),NR1,NC1,IVALUE(J)
  616         FORMAT('MATRIX ',2A4,' HAS ',I8,' ROWS AND ',I8,
     1               ' COLUMNS (AND STARTS IN COLUMN ',I8,')')
              CALL DPWRST('XXX','WRIT')
            ENDIF
  610     CONTINUE
        ENDIF
      ENDIF
C
C               **************************
C               **  STEP 70.7--         **
C               **  PRINT OUT THE LAST  **
C               **  MODEL FITTED        **
C               **************************
C
      ISTEPN='70.7'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC THE FOLLOWING 4 LINES WERE ADDED     DECEMBER 1991
      IF(NUMARG.LE.0 .OR.
     1  (NUMARG.GE.1.AND.IHARG(1).EQ.'MODE'))THEN
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        IF(NUMCHM.EQ.0)THEN
          WRITE(ICOUT,731)
  731     FORMAT('MODEL--NO MODEL YET DEFINED')
          CALL DPWRST('XXX','WRIT')
        ELSE
          DO740I=1,20
            I2=I
            IF(MODEL(I).NE.' ')GOTO748
  740     CONTINUE
  748     CONTINUE
          IF(NUMCHM.GE.I2)THEN
            ISTOP=MIN(NUMCHM,I2+119)
            WRITE(ICOUT,741)(MODEL(I),I=I2,ISTOP)
  741       FORMAT('MODEL--',120A1)
            CALL DPWRST('XXX','WRIT')
          ENDIF
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
        ENDIF
      ENDIF
C
C               ***************************************
C               **  STEP 70.8--                      **
C               **  PRINT OUT ROW LABELS INFORMATION **
C               ***************************************
C
      ISTEPN='70.8'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0 .OR.
     1  (NUMARG.GE.2.AND.IHARG(1).EQ.'ROW '.AND.IHARG(2).EQ.'LABE'))THEN
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
C
        IF(IROWLB(1).EQ.' ')THEN
          WRITE(ICOUT,781)
  781     FORMAT('NO ROW LABELS CURRENTLY DEFINED.')
          CALL DPWRST('XXX','WRIT')
        ELSE
          NLAST=1
          DO783II=1,MAXOBV
            IF(IROWLB(II).EQ.' ')THEN
              NLAST=II-1
              GOTO785
            ENDIF
  783     CONTINUE
  785     CONTINUE
          IVAL=1
          WRITE(ICOUT,787)IVAL,IROWLB(1)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,787)NLAST,IROWLB(NLAST)
  787     FORMAT('ROW ',I8,' OF THE ROW LABELS: ',A24)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ENDIF
C
C               *****************************************
C               **  STEP 70.9--                        **
C               **  PRINT OUT GROUP LABELS INFORMATION **
C               *****************************************
C
      ISTEPN='70.9'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0 .OR.
     1  (NUMARG.GE.2.AND.IHARG(1).EQ.'GROU'.AND.IHARG(2).EQ.'LABE'))THEN
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
C
        ICNT=0
        DO790II=1,MAXGRP
          IF(IGRPVN(II).EQ.' ')GOTO790
          ICNT=ICNT+1
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,791)II,IGRPVN(II)
  791     FORMAT('GROUP LABEL ',I5,' NAME: ',A8)
          CALL DPWRST('XXX','WRIT')
          DO792JJ=1,MAXGLA
            IF(IGRPLA(JJ,II).EQ.' ')GOTO793
            WRITE(ICOUT,794)JJ,IGRPLA(JJ,II)
  794       FORMAT('     LEVEL ',I5,': ',A40)
            CALL DPWRST('XXX','WRIT')
  792     CONTINUE
  793     CONTINUE
  790   CONTINUE
C
        IF(ICNT.EQ.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,799)
  799     FORMAT('NO GROUP LABELS CURRENTLY DEFINED.')
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ENDIF
C
C               ************************************************
C               **  STEP 70.A--                               **
C               **  PRINT OUT CHARACTER VARIABLES INFORMATION **
C               ************************************************
C
      ISTEPN='70.A'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STAT')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0 .OR.
     1  (NUMARG.GE.2.AND.IHARG(1).EQ.'CHAR'.AND.IHARG(2).EQ.'VARI'))THEN
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
C
        IOUNIT=IZCHNU
        IFILE=IZCHNA
        ISTAT=IZCHST
        IFORM=IZCHFO
        IACCES=IZCHAC
        IPROT=IZCHPR
        ICURST=IZCHCS
C
        ISUBN0='STAT'
        IERRFI='NO'
        CALL DPOPFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,
     1              ICURST,
     1              IREWIN,ISUBN0,IERRFI,IBUGA3,ISUBRO,IERROR)
        IF(IERRFI.EQ.'YES')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,801)
  801     FORMAT('NO CHARACTER VARIABLES ARE CURRENTLY DEFINED.')
          CALL DPWRST('XXX','BUG ')
          GOTO809
        ENDIF
C
        READ(IOUNIT,'(I8)',END=871,ERR=871)NUMVAR
C
        DO803I=1,NUMVAR
          READ(IOUNIT,'(A8)',END=881,ERR=881)IH
          WRITE(ICOUT,804)I,IH
  804     FORMAT('CHARACTER VARIABLE ',I5,' IS: ',A8)
          CALL DPWRST('XXX','BUG ')
  803   CONTINUE
C
C       NOW DETERMINE THE NUMBER OF ROWS
C
        NROWS=0
        DO805I=1,20000000
          NROWS=I-1
          READ(IOUNIT,'(A8)',END=807,ERR=807)IH
  805   CONTINUE
  807   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,808)NROWS
  808   FORMAT('THE CHARACTER VARIABLES HAVE ',I8,' ROWS.')
        CALL DPWRST('XXX','BUG ')
        GOTO809
C
  871   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,873)
  873   FORMAT('      NO CHARACTER VARIABLES ARE CURRENTLY DEFINED.')
        CALL DPWRST('XXX','BUG ')
        IERROR='NO'
        GOTO809
C
  881   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,883)
  883   FORMAT('      ERROR READING THE VARIABLE NAMES ',
     1         'IN THE CHARACTER DATA FILE:')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO809
C
  809   CONTINUE
C
        IENDFI='OFF'
        IREWIN='ON'
        CALL DPCLFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1              IENDFI,IREWIN,ISUBN0,IERRFI,IBUGA3,ISUBRO,IERROR)
        IZCHCS='CLOSED'
C
      ENDIF
C
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGS2.EQ.'ON' .OR. ISUBRO.EQ.'STAT')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('AT THE END       OF DPSTAT--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)IBUGS2,IFOUND,IERROR
 9013   FORMAT('IBUGS2,IFOUND,IERROR = ',2(A4,2X),A4)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTA2(Z1,Z2,Z3,NZ,ICASPL,
     1                  Y2,X2,D2,N2,NPLOTV,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE A STAR PLOT
C              (USEFUL FOR MULTIVARIATE ANALYSIS).
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/2
C     ORIGINAL VERSION--JANUARY   1988.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DIMENSION Z1(*)
      DIMENSION Z2(*)
      DIMENSION Z3(*)
C
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='A2  '
      IERROR='NO'
C
      TWOPI=2.0*3.1415926
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(NZ.LT.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN STAR PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS IS NON-POSITIVE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)NZ
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'STA2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPPRO2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,NZ,N2,NPLOTV
   72   FORMAT('ICASPL,NZ,N2,NPLOTV = ',A4,2X,3I8)
        CALL DPWRST('XXX','BUG ')
        IF(NZ.GT.0)THEN
          DO81I=1,NZ
            WRITE(ICOUT,82)I,Z1(I),Z2(I),Z3(I)
   82       FORMAT('I,Z1(I),Z2(I),Z3(I) = ',I8,3F15.7)
            CALL DPWRST('XXX','BUG ')
   81     CONTINUE
        ENDIF
      ENDIF
C
C               ****************************************
C               **  STEP 11--                         **
C               **  DETERMINE PLOT COORDINATES        **
C               ****************************************
C
      ANZ=NZ
C
      J=0
      K=1
      DO1100I=1,NZ
        AI=I
        ANUM=Z1(I)-Z2(I)
        ADEN=Z3(I)-Z2(I)
        P=0.0
        IF(ADEN.GT.0.0)P=ANUM/ADEN
        THETA=((AI-1.0)/ANZ)*TWOPI
        J=J+1
        Y2(J)=P*SIN(THETA)
        X2(J)=P*COS(THETA)
        D2(J)=K
 1100 CONTINUE
      J=J+1
      Y2(J)=Y2(1)
      X2(J)=X2(1)
      D2(J)=D2(1)
C
      DO1200I=1,NZ
        AI=I
        THETA=((AI-1.0)/ANZ)*TWOPI
        J=J+1
        K=K+1
        Y2(J)=0.0
        X2(J)=0.0
        D2(J)=K
        J=J+1
        Y2(J)=SIN(THETA)
        X2(J)=COS(THETA)
        D2(J)=K
 1200 CONTINUE
C
      N2=J
      NPLOTV=3
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'STA2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTA2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9031)N2,NPLOTV
 9031   FORMAT('N2,NPLOTV = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9035I=1,N2
          WRITE(ICOUT,9036)I,Y2(I),X2(I),D2(I)
 9036     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9035   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTC2(ICASL8,ILOCV,ISTANR,ISTARA,
     1                  IFOUNZ,IBEGIN,IEND,ITYPE,IHOL,IHOL2,INT1,
     1                  FLOAT1,IERRO1,
     1                  TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,XTEMP3,
     1                  XTEMP4,XTEMP5,MAXNXT,
     1                  ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                  DTEMP1,DTEMP2,DTEMP3,
     1                  IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--COMPUTE A LET STATISTIC SUB-COMMAND.  NOTE THAT THIS IS
C              IS A COPY OF DPSTAC THAT IS CALLED BY DPSBEX (EXECUTE A
C              STATISTIC BLOCK).  IT IS REQUIRED TO AVOID A RECURSIVE
C              CALL (I.E., DPSTAC CALLS CMPSTA WHICH CALLS DPSBEX WHICH
C              CALLS CMPSTA).  THE PRIMARY DIFFERENCE IS THAT IT CALLS
C              CMPST2 RATHER THAN CMPSTA.
C     NOTE--THIS SUBROUTINE OPERATES ON A VECTOR AND PRODUCES A
C           PARAMETER (= A SCALAR); THIS IS TO BE CONTRASTED WITH DPLET7
C           WHICH OPERATES ON A VECTOR BUT PRODUCES A VECTOR.
C     NOTE-INPUT WILL BE A VECTOR (OR 2 OR 3 VECTORS).  OUTPUT WILL BE A
C          SCALAR--
C               1) PARAMETER, OR
C               2) ELEMENT OF A VECTOR.
C          THE STATISTICS CAN BE CALCULATED ON A FULL VARIABLE
C          OR ON A PARTIAL VARIABLE.
C     EXAMPLE--LET A    = MEAN X                      (A FULL VARIABLE)
C            --LET Y(4) = MEAN X                      (A FULL VARIABLE)
C            --LET A    = MEAN X   SUBSET 2 3 5       (A PARTIAL VAR.)
C            --LET Y(4) = MEAN X   SUBSET 2 3 5       (A PARTIAL VAR.)
C            --LET A    = MEAN X   FOR I = 1 2 10     (A PARTIAL VAR.)
C            --LET Y(4) = MEAN X   FOR I = 1 2 10     (A PARTIAL VAR.)
C            --LET A    = CORRELATION X Y              (A FULL VARIABLE
C            --LET Y(4) = CORRELATION X Y              (A FULL VARIABLE
C            --LET A    = CORRELATION X Y  SUBSET 2 3 5     (A PARTIAL
C            --LET Y(4) = CORRELATION X Y  SUBSET 2 3 5     (A PARTIAL
C            --LET A    = CORRELATION X Y  FOR I = 1 2 10   (A PARTIAL
C            --LET Y(4) = CORRELATION X Y  FOR I = 1 2 10   (A PARTIAL
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2016/08
C     ORIGINAL VERSION--AUGUST    2016.
C     UPDATED         --AUGUST    2023. CALL LIST TO CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASL8
      CHARACTER*4 ISTARA
      CHARACTER*4 IFOUNZ
      CHARACTER*4 ITYPE
      CHARACTER*4 IHOL
      CHARACTER*4 IHOL2
      CHARACTER*4 IERRO1
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASEQ
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IWRITE
      CHARACTER*4 IHARG3
      CHARACTER*4 IHARG4
      CHARACTER*4 IHARG5
      CHARACTER*4 IHARG6
      CHARACTER*4 ILEFT
      CHARACTER*4 ILEFT2
      CHARACTER*4 ISUBSF
      CHARACTER*4 IFORF
      CHARACTER*4 IARG4T
      CHARACTER*4 IARG4F
      CHARACTER*4 IHSET
      CHARACTER*4 IHSET2
      CHARACTER*4 IH
      CHARACTER*4 IH2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 IFLAGD
C
C---------------------------------------------------------------------
C
      DIMENSION IFOUNZ(*)
      DIMENSION IBEGIN(*)
      DIMENSION IEND(*)
      DIMENSION ITYPE(*)
      DIMENSION IHOL(*)
      DIMENSION IHOL2(*)
      DIMENSION INT1(*)
      DIMENSION FLOAT1(*)
      DIMENSION IERRO1(*)
C
      DIMENSION TEMP(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
C
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
C
      DIMENSION ITEMP1(*)
      DIMENSION ITEMP2(*)
      DIMENSION ITEMP3(*)
      DIMENSION ITEMP4(*)
      DIMENSION ITEMP5(*)
      DIMENSION ITEMP6(*)
C
      DOUBLE PRECISION DTEMP1(*)
      DOUBLE PRECISION DTEMP2(*)
      DOUBLE PRECISION DTEMP3(*)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='C2  '
      IFOUND='NO'
      IERROR='NO'
      ICASEL='UNKN'
      NEWNAM='NO'
      NEWCOL='NO'
      IFLAGD='OFF'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      ICOLL=0
      ICOL2=0
      NIRIG2=0
      ILOCSV=0
      NIOLD=0
      ICOL3=0
      ICOL22=0
      ICOL32=0
      ICOLR=0
      ICOLR2=0
      NCOL=0
      NCOL2=0
      NCOL3=0
      IFLGP1=0
      IFLGP2=0
      IFLGP3=0
      AVAL1=0.0
      AVAL2=0.0
      AVAL3=0.0
      NUMVAR=0
C
C               *******************************************************
C               **  TREAT THE SUBCASE OF CALCULATING CERTAIN         **
C               **  ELEMENTARY STATISTICS (MEAN, SD, ETC.)           **
C               **       1) FOR A FULL VARIABLE, OR                  **
C               **       2) FOR PART OF A VARIABLE.                  **
C               *******************************************************
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STC2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,IBUGQ,ICASL8,IERRO1(1)
   52   FORMAT('IBUGA3,IBUGQ,ICASL8,IERRO1(1) = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ILOCV,ISTANR,IBEGIN(1),IEND(1),FLOAT1(1)
   53   FORMAT('ILOCV,ISTANR,IBEGIN(1),IEND(1),FLOAT1(1) = ',4I8,G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************************
C               **  STEP 2--                                            *
C               **  EXAMINE THE LEFT-HAND SIDE--                        *
C               **  IS THE PARAMETER OR VARIABLE NAME TO LEFT OF = SIGN *
C               **  ALREADY IN THE NAME LIST?                           *
C               **  NOTE THAT     ILEFT     IS THE NAME OF THE VARIABLE *
C               **  ON THE LEFT.                                        *
C               **  NOTE THAT     ILISTL    IS THE LINE IN THE TABLE    *
C               **  OF THE NAME ON THE LEFT.                            *
C               **  NOTE THAT     ICOLL    IS THE DATA COLUMN (1 TO 12) *
C               **  FOR THE NAME OF THE LEFT.                           *
C               *********************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILEFT=IHOL(2)
      ILEFT2=IHOL2(2)
      DO200I=1,NUMNAM
        I2=I
        IF(ILEFT.EQ.IHNAME(I).AND.ILEFT2.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'P')THEN
          ILISTL=I2
          IF(IFOUNZ(4).EQ.'NO')GOTO290
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,221)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,217)IHOL(2),IHOL2(2)
  217     FORMAT('      AN ATTEMPT WAS MADE TO USE ',A4,A4,' AS A ',
     1           'VARIABLE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,218)
  218     FORMAT('      EVEN THOUGH IT ALREADY EXISTS AS A PARAMETER.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSEIF(ILEFT.EQ.IHNAME(I).AND.ILEFT2.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'V')THEN
          ILISTL=I2
          ICOLL=IVALUE(ILISTL)
          NIOLD=IN(ILISTL)
          GOTO290
        ENDIF
  200 CONTINUE
C
      ISTEPN='2B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='YES'
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,221)
  221   FORMAT('***** ERROR IN DPSTC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,222)
  222   FORMAT('      THE NUMBER OF VARIABLE AND/OR PARAMETER NAMES ',
     1         'HAS JUST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,223)MAXNAM
  223   FORMAT('      EXCEEDED THE MAX ALLOWABLE ',I8,'  .  ',
     1         'SUGGESTED ACTION--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,225)
  225   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,226)
  226   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,227)
  227   FORMAT('      THEN REDEFINE (REUSE) SOME OF THE ALREADY-USED',
     1         'NAMES')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO19000
      ENDIF
C
      ISTEPN='2C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IARG4F=IFOUNZ(4)
      ISUBSF=IFOUNZ(11)
      IFORF=IFOUNZ(21)
      IF(IARG4F.EQ.'NO')GOTO290
      NIOLD=0
      ICOLL=NUMCOL+1
C
      IF(ICOLL.GT.MAXCOL)THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,242)
  242   FORMAT('      THE NUMBER OF DATA COLUMNS HAS JUST EXCEEDED THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,243)MAXCOL
  243   FORMAT('      MAX ALLOWABLE ',I8,'  .  SUGGESTED ACTION--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,245)
  245   FORMAT('      ENTER      STATUS VARIABLES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,246)
  246   FORMAT('      TO FIND OUT THE FULL LIST OF USED COLUMNS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,247)
  247   FORMAT('      AND THEN OVERWRITE SOME COLUMNS.   EXAMPLE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,248)
  248   FORMAT('      IF (E.G.)   LET Y(3) = MEAN X          FAILED')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,249)
  249   FORMAT('      THEN ONE MIGHT ENTER     NAME Y 7')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,250)
  250   FORMAT('      (THEREBY EQUATING THE NAME Y WITH COLUMN 7')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,251)
  251   FORMAT('      FOLLOWED BY              LET Y(3) = MEAN X ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,252)
  252   FORMAT('      (WHICH WILL ACTUALLY OVERWRITE ROW 3 ',
     1         'OF COLUMN 7')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,253)
  253   FORMAT('      WITH THE CALCULATED MEAN OF VARIABLE X)')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO19000
      ENDIF
C
      ISTEPN='2D'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MAXNI=0
      DO235I=1,12
        IF(IUSE(I).EQ.'V')THEN
          IF(IN(I).GT.MAXNI)MAXNI=IN(I)
        ENDIF
  235 CONTINUE
      IF(MAXNI.EQ.0)MAXNI=MAXN
C
  290 CONTINUE
C
      ISTEPN='2E'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *********************************************************
C               **  STEP 3--                                            *
C               **  EXAMINE THE RIGHT-HAND SIDE--                       *
C               **  HAS THE VARIABLE OR COLUMN ON THE RIGHT             *
C               **  ALREADY BEEN DEFINED?                               *
C               **  NOTE THAT     IRIGHT    IS THE NAME OF THE VARIABLE *
C               **  ON THE RIGHT.                                       *
C               **  NOTE THAT     ILISTR    IS THE LINE IN THE TABLE    *
C               **  OF THE VARIABLE OR COLUMN ON THE RIGHT.             *
C               **  NOTE THAT     ICOLR    IS THE DATA COLUMN (1 TO 12) *
C               **  FOR THE VARIABLE OR COLUMN ON THE RIGHT.            *
C               *********************************************************
C
C
C               ********************************************
C               **  STEP 4--                              **
C               **  BRANCH BETWEEN 1-VARIABLE STATISTICS  **
C               **  (E.G., MEAN, SD, MIN, ETC.)           **
C               **  AND 2-VARIABLE STATISTICS             **
C               **  (CORRELATION AND RANK CORRELATION).   **
C               ********************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMVIN=1
      IF(ICASL8.EQ.'WEME' .OR. ICASL8.EQ.'WEMD' .OR.
     1   ICASL8.EQ.'WESD' .OR. ICASL8.EQ.'WEVA' .OR.
     1   ICASL8.EQ.'WETM' .OR. ICASL8.EQ.'INTE')THEN
        ILOCVP=ILOCV+1
        IH=IHARG(ILOCVP)
        IH2=IHARG2(ILOCVP)
        IF(ILOCVP.GT.NUMARG)THEN
          NUMVIN=1
        ELSEIF(IH.EQ.'SUBS'.AND.IH2.EQ.'ET  ')THEN
          NUMVIN=1
        ELSEIF(IH.EQ.'EXCE'.AND.IH2.EQ.'PT  ')THEN
          NUMVIN=1
        ELSEIF(IH.EQ.'FOR '.AND.IH2.EQ.'    ')THEN
          NUMVIN=1
        ELSE
          NUMVIN=2
        ENDIF
      ELSEIF(ISTANR.EQ.2)THEN
        NUMVIN=2
      ELSEIF(ISTANR.EQ.3)THEN
        NUMVIN=3
      ELSE
        NUMVIN=1
      ENDIF
C
C     DIFFERENCE OF INTEGRAL CAN HAVE EITHER 2 OR 3 RESPONSE VARIABLES
C     (THE THIRD VARIABLE IS AN OPTIONAL X-COORDINATE VARIABLE)
C
      IF(ICASL8.EQ.'DINT')THEN
        ILOCVP=ILOCV+2
        IH=IHARG(ILOCVP)
        IH2=IHARG2(ILOCVP)
        IF(ILOCVP.GT.NUMARG)THEN
          NUMVIN=2
        ELSEIF(IH.EQ.'SUBS'.AND.IH2.EQ.'ET  ')THEN
          NUMVIN=2
        ELSEIF(IH.EQ.'EXCE'.AND.IH2.EQ.'PT  ')THEN
          NUMVIN=2
        ELSEIF(IH.EQ.'FOR '.AND.IH2.EQ.'    ')THEN
          NUMVIN=2
        ELSE
          NUMVIN=3
        ENDIF
      ENDIF
C
C
C               ***************************************
C               **  STEP 5--                         **
C               **  EXTRACT THE FIRST VARIABLE       **
C               ***************************************
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFLGP1=0
      IFLGP2=0
      IFLGP3=0
      NUMVAR=1
C
      IH=IHARG(ILOCV)
      IH2=IHARG2(ILOCV)
      DO1110I=1,NUMNAM
        I2=I
        IF(IH.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'V')THEN
          ILISTR=I2
          ICOLR=IVALUE(ILISTR)
          NIRIGH=IN(ILISTR)
          ICOLR2=-99
          GOTO2000
        ELSEIF(IH.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'M')THEN
          ILISTR=I2
          ICOLR=IVALUE(ILISTR)
          ICOLR2=IVALU2(ILISTR)
          NIRIGH=IN(ILISTR)
          NCOL=(ICOLR2 - ICOLR) + 1
          GOTO2000
        ELSEIF(IH.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'P')THEN
          IFLGP1=1
          ILISTR=I2
          AVAL1=VALUE(ILISTR)
          NIRIGH=1
          GOTO2000
        ENDIF
 1110 CONTINUE
C
      IF(ICASL8.EQ.'NUMB')THEN
        ILISTR=I2
        ICOLR=-99
        NIRIGH=0
        ICOLR2=-99
        GOTO2000
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1112)
 1112   FORMAT('      THE SPECIFIED ARGUMENT (VARIABLE NAME OR COLUMN')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1114)
 1114   FORMAT('      NUMBER) ON THE RIGHT OF THE = SIGN WAS NOT FOUND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1115)
 1115   FORMAT('      IN THE INTERNAL NAME LIST.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO19000
      ENDIF
C
C               ************************************************
C               **  STEP 6.2--                                **
C               **  EXTRACT THE SECOND VARIABLE               **
C               ************************************************
C
 2000 CONTINUE
C
      ISTEPN='6.2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMVIN.LT.2)GOTO700
C
      NUMVAR=2
      ILOCVP=ILOCV+1
      IF(ILOCVP.GT.NUMARG)THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2302)
 2302   FORMAT('      NO SECOND VARIABLE NAME OR COLUMN NUMBER WAS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2303)
 2303   FORMAT('      WAS GIVEN AFTER THE STATISTIC CALCULATION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO19000
      ENDIF
C
      IHARG3=IHARG(ILOCVP)
      IHARG4=IHARG2(ILOCVP)
      DO2310I=1,NUMNAM
        I2=I
        IF(IHARG3.EQ.IHNAME(I).AND.IHARG4.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'V')THEN
          ILIST2=I2
          ICOL2=IVALUE(ILIST2)
          NIRIG2=IN(ILIST2)
          ICOL22=-99
          GOTO2390
        ELSEIF(IHARG3.EQ.IHNAME(I).AND.IHARG4.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'M')THEN
          ILIST2=I2
          ICOL2=IVALUE(ILIST2)
          ICOL22=IVALU2(ILIST2)
          NIRIG2=IN(ILIST2)
          NCOL2=(ICOL22 - ICOL2) + 1
          GOTO2390
        ELSEIF(IHARG3.EQ.IHNAME(I).AND.IHARG4.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'P')THEN
          IFLGP2=1
          ILIST2=I2
          AVAL2=VALUE(ILIST2)
          NIRIG2=1
          GOTO2390
        ENDIF
 2310 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,221)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2312)
 2312 FORMAT('      THE SPECIFIED SECOND ARGUMENT (VARIABLE NAME OR')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2314)
 2314 FORMAT('      COLUMN NUMBER) ON THE RIGHT OF THE = SIGN')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2315)
 2315 FORMAT('      WAS NOT FOUND IN THE INTERNAL NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1158)
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO19000
C
 2390 CONTINUE
C
C               ******************************************************
C               **  STEP 6.4--                                      **
C               **  CHECK THAT THE 2 VARIABLES HAVE THE SAME        **
C               **  NUMBER OF ELEMENTS.                             **
C               ******************************************************
C
      ISTEPN='6.4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     "DIFFERENCE OF" STATISTICS DO NOT REQUIRE EQUAL SAMPLE
C     SIZES
C
      IF(ICASL8.EQ.'DMEA')IFLAGD='ON'
      IF(ICASL8.EQ.'DMDM')IFLAGD='ON'
      IF(ICASL8.EQ.'DMED')IFLAGD='ON'
      IF(ICASL8.EQ.'DTRM')IFLAGD='ON'
      IF(ICASL8.EQ.'DWNM')IFLAGD='ON'
      IF(ICASL8.EQ.'DGEO')IFLAGD='ON'
      IF(ICASL8.EQ.'DHAR')IFLAGD='ON'
      IF(ICASL8.EQ.'DHDL')IFLAGD='ON'
      IF(ICASL8.EQ.'DBIW')IFLAGD='ON'
      IF(ICASL8.EQ.'DSD ')IFLAGD='ON'
      IF(ICASL8.EQ.'DRMS ')IFLAGD='ON'
      IF(ICASL8.EQ.'DVAR')IFLAGD='ON'
      IF(ICASL8.EQ.'DAAD')IFLAGD='ON'
      IF(ICASL8.EQ.'DAAM')IFLAGD='ON'
      IF(ICASL8.EQ.'DMAD')IFLAGD='ON'
      IF(ICASL8.EQ.'DIQR')IFLAGD='ON'
      IF(ICASL8.EQ.'DWSD')IFLAGD='ON'
      IF(ICASL8.EQ.'DWVA')IFLAGD='ON'
      IF(ICASL8.EQ.'DBIM')IFLAGD='ON'
      IF(ICASL8.EQ.'DBIS')IFLAGD='ON'
      IF(ICASL8.EQ.'DPBN')IFLAGD='ON'
      IF(ICASL8.EQ.'DGSD')IFLAGD='ON'
      IF(ICASL8.EQ.'DRAN')IFLAGD='ON'
      IF(ICASL8.EQ.'DMDR')IFLAGD='ON'
      IF(ICASL8.EQ.'DQSE')IFLAGD='ON'
      IF(ICASL8.EQ.'DQUA')IFLAGD='ON'
      IF(ICASL8.EQ.'DSKE')IFLAGD='ON'
      IF(ICASL8.EQ.'DGSK')IFLAGD='ON'
      IF(ICASL8.EQ.'DPSK')IFLAGD='ON'
      IF(ICASL8.EQ.'DKUR')IFLAGD='ON'
      IF(ICASL8.EQ.'DEKU')IFLAGD='ON'
      IF(ICASL8.EQ.'DRSD')IFLAGD='ON'
      IF(ICASL8.EQ.'DSDM')IFLAGD='ON'
      IF(ICASL8.EQ.'DRVA')IFLAGD='ON'
      IF(ICASL8.EQ.'DVAM')IFLAGD='ON'
      IF(ICASL8.EQ.'DMIN')IFLAGD='ON'
      IF(ICASL8.EQ.'DMAX')IFLAGD='ON'
      IF(ICASL8.EQ.'DEXT')IFLAGD='ON'
      IF(ICASL8.EQ.'DCVA')IFLAGD='ON'
      IF(ICASL8.EQ.'DCOU')IFLAGD='ON'
      IF(ICASL8.EQ.'DSUM')IFLAGD='ON'
      IF(ICASL8.EQ.'DPRO')IFLAGD='ON'
      IF(ICASL8.EQ.'10LD')IFLAGD='ON'
      IF(ICASL8.EQ.'12LD')IFLAGD='ON'
      IF(ICASL8.EQ.'15LD')IFLAGD='ON'
      IF(ICASL8.EQ.'17LD')IFLAGD='ON'
      IF(ICASL8.EQ.'20LD')IFLAGD='ON'
      IF(ICASL8.EQ.'10SD')IFLAGD='ON'
      IF(ICASL8.EQ.'12SD')IFLAGD='ON'
      IF(ICASL8.EQ.'15SD')IFLAGD='ON'
      IF(ICASL8.EQ.'17SD')IFLAGD='ON'
      IF(ICASL8.EQ.'20SD')IFLAGD='ON'
      IF(ICASL8.EQ.'DSN')IFLAGD='ON'
      IF(ICASL8.EQ.'DQN')IFLAGD='ON'
      IF(ICASL8.EQ.'DLPL')IFLAGD='ON'
      IF(ICASL8.EQ.'DLPV')IFLAGD='ON'
      IF(ICASL8.EQ.'DLPS')IFLAGD='ON'
      IF(ICASL8.EQ.'DBPR')IFLAGD='ON'
      IF(ICASL8.EQ.'DTSD')IFLAGD='ON'
      IF(ICASL8.EQ.'DPER')IFLAGD='ON'
      IF(ICASL8.EQ.'D1DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D2DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D3DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D4DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D5DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D6DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D7DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D8DE')IFLAGD='ON'
      IF(ICASL8.EQ.'D9DE')IFLAGD='ON'
      IF(ICASL8.EQ.'DLHI')IFLAGD='ON'
      IF(ICASL8.EQ.'DUHI')IFLAGD='ON'
      IF(ICASL8.EQ.'DLQU')IFLAGD='ON'
      IF(ICASL8.EQ.'DUQU')IFLAGD='ON'
      IF(ICASL8.EQ.'DSSQ')IFLAGD='ON'
      IF(ICASL8.EQ.'DRSC')IFLAGD='ON'
      IF(ICASL8.EQ.'DQQR')IFLAGD='ON'
      IF(ICASL8.EQ.'10LD')IFLAGD='ON'
      IF(ICASL8.EQ.'KS2S')IFLAGD='ON'
      IF(ICASL8.EQ.'KSCV')IFLAGD='ON'
      IF(ICASL8.EQ.'CS2S')IFLAGD='ON'
      IF(ICASL8.EQ.'CC2S')IFLAGD='ON'
      IF(ICASL8.EQ.'CP2S')IFLAGD='ON'
      IF(ICASL8.EQ.'FTES')IFLAGD='ON'
      IF(ICASL8.EQ.'FTPV')IFLAGD='ON'
      IF(ICASL8.EQ.'FTCD')IFLAGD='ON'
      IF(ICASL8.EQ.'2TTE')IFLAGD='ON'
      IF(ICASL8.EQ.'2TCD')IFLAGD='ON'
      IF(ICASL8.EQ.'2T2P')IFLAGD='ON'
      IF(ICASL8.EQ.'2TLP')IFLAGD='ON'
      IF(ICASL8.EQ.'2TUP')IFLAGD='ON'
      IF(ICASL8.EQ.'PTTE')IFLAGD='ON'
      IF(ICASL8.EQ.'PTCD')IFLAGD='ON'
      IF(ICASL8.EQ.'PT2P')IFLAGD='ON'
      IF(ICASL8.EQ.'PTLP')IFLAGD='ON'
      IF(ICASL8.EQ.'PTUP')IFLAGD='ON'
      IF(ICASL8.EQ.'2STE')IFLAGD='ON'
      IF(ICASL8.EQ.'2SCD')IFLAGD='ON'
      IF(ICASL8.EQ.'2S2P')IFLAGD='ON'
      IF(ICASL8.EQ.'2SLP')IFLAGD='ON'
      IF(ICASL8.EQ.'2SUP')IFLAGD='ON'
      IF(ICASL8.EQ.'MWUS')IFLAGD='ON'
      IF(ICASL8.EQ.'MWTE')IFLAGD='ON'
      IF(ICASL8.EQ.'MWCD')IFLAGD='ON'
      IF(ICASL8.EQ.'MW2P')IFLAGD='ON'
      IF(ICASL8.EQ.'MWLP')IFLAGD='ON'
      IF(ICASL8.EQ.'MWUP')IFLAGD='ON'
      IF(ICASL8.EQ.'KLTE')IFLAGD='ON'
      IF(ICASL8.EQ.'KLCD')IFLAGD='ON'
      IF(ICASL8.EQ.'KL2P')IFLAGD='ON'
      IF(ICASL8.EQ.'KLLP')IFLAGD='ON'
      IF(ICASL8.EQ.'KLUP')IFLAGD='ON'
      IF(ICASL8.EQ.'SRTE')IFLAGD='ON'
      IF(ICASL8.EQ.'SRCD')IFLAGD='ON'
      IF(ICASL8.EQ.'SR2P')IFLAGD='ON'
      IF(ICASL8.EQ.'SRLP')IFLAGD='ON'
      IF(ICASL8.EQ.'SRUP')IFLAGD='ON'
      IF(ICASL8.EQ.'METE')IFLAGD='ON'
      IF(ICASL8.EQ.'MECD')IFLAGD='ON'
      IF(ICASL8.EQ.'ME2P')IFLAGD='ON'
      IF(ICASL8.EQ.'2SFR')IFLAGD='ON'
      IF(ICASL8.EQ.'2F2P')IFLAGD='ON'
      IF(ICASL8.EQ.'1LNT')IFLAGD='ON'
      IF(ICASL8.EQ.'1UNT')IFLAGD='ON'
      IF(ICASL8.EQ.'1KNT')IFLAGD='ON'
      IF(ICASL8.EQ.'2LNT')IFLAGD='ON'
      IF(ICASL8.EQ.'2UNT')IFLAGD='ON'
      IF(ICASL8.EQ.'2KNT')IFLAGD='ON'
      IF(ICASL8.EQ.'FMAT')IFLAGD='ON'
      IF(ICASL8.EQ.'LMAT')IFLAGD='ON'
      IF(ICASL8.EQ.'FNOM')IFLAGD='ON'
      IF(ICASL8.EQ.'LNOM')IFLAGD='ON'
      IF(ICASL8.EQ.'PDIF')IFLAGD='ON'
      IF(ICASL8.EQ.'2CTE')IFLAGD='ON'
      IF(ICASL8.EQ.'2CCD')IFLAGD='ON'
      IF(ICASL8.EQ.'2C2P')IFLAGD='ON'
      IF(ICASL8.EQ.'2CLP')IFLAGD='ON'
      IF(ICASL8.EQ.'2CUP')IFLAGD='ON'
      IF(ICASL8.EQ.'DCDI')IFLAGD='ON'
      IF(ICASL8.EQ.'DIDI')IFLAGD='ON'
      IF(ICASL8.EQ.'DQDI')IFLAGD='ON'
      IF(ICASL8.EQ.'DAMD')IFLAGD='ON'
      IF(ICASL8.EQ.'DPRE')IFLAGD='ON'
      IF(ICASL8.EQ.'DSNR')IFLAGD='ON'
      IF(ICASL8.EQ.'DSHM')IFLAGD='ON'
      IF(ICASL8.EQ.'DSHR')IFLAGD='ON'
      IF(ICASL8.EQ.'HEDG')IFLAGD='ON'
      IF(ICASL8.EQ.'BCHG')IFLAGD='ON'
      IF(ICASL8.EQ.'COHD')IFLAGD='ON'
      IF(ICASL8.EQ.'GLAS')IFLAGD='ON'
      IF(ICASL8.EQ.'DBLC')IFLAGD='ON'
      IF(ICASL8.EQ.'DBUC')IFLAGD='ON'
      IF(ICASL8.EQ.'HESE')IFLAGD='ON'
      IF(ICASL8.EQ.'HELC')IFLAGD='ON'
      IF(ICASL8.EQ.'HEUC')IFLAGD='ON'
      IF(ICASL8.EQ.'SGCD')IFLAGD='ON'
      IF(ICASL8.EQ.'SG2P')IFLAGD='ON'
      IF(ICASL8.EQ.'SGLP')IFLAGD='ON'
      IF(ICASL8.EQ.'SGUP')IFLAGD='ON'
      IF(ICASL8.EQ.'SGTE')IFLAGD='ON'
      IF(ICASL8.EQ.'GMDR')IFLAGD='ON'
      IF(ICASL8.EQ.'LRSC')IFLAGD='ON'
      IF(ICASL8.EQ.'LRSP')IFLAGD='ON'
      IF(ICASL8.EQ.'LRLP')IFLAGD='ON'
      IF(ICASL8.EQ.'LRUP')IFLAGD='ON'
      IF(ICASL8.EQ.'LRUC')IFLAGD='ON'
      IF(ICASL8.EQ.'LRLC')IFLAGD='ON'
      IF(ICASL8.EQ.'LRST')IFLAGD='ON'
      IF(ICASL8.EQ.'FPCD')IFLAGD='ON'
      IF(ICASL8.EQ.'FP2P')IFLAGD='ON'
      IF(ICASL8.EQ.'FPLP')IFLAGD='ON'
      IF(ICASL8.EQ.'FPUP')IFLAGD='ON'
      IF(ICASL8.EQ.'FPTE')IFLAGD='ON'
      IF(ISTARA.EQ.'ON  ')IFLAGD='ON'
C
      IF(NIRIG2.NE.NIRIGH .AND. IFLAGD.NE.'ON')THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2412)
 2412   FORMAT('      FOR A 2-VARIABLE STATISTIC CALCULATION, THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2413)
 2413   FORMAT('      NUMBER OF OBSERVATIONS IN EACH VARIABLE MUST BE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2415)
 2415   FORMAT('      THE SAME;  SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2416)IH,IH2,NIRIGH
 2416   FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,' OBSERVATIONS;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2417)IHARG3,IHARG4,NIRIG2
 2417   FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,' OBSERVATIONS.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO19000
      ENDIF
C
C               ************************************************
C               **  STEP 6.5--                                **
C               **  EXTRACT THE THIRD  VARIABLE               **
C               ************************************************
C
      ISTEPN='6.5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMVIN.LT.3)GOTO700
C
      NUMVAR=3
      ILOCVP=ILOCV+2
      IF(ILOCVP.GT.NUMARG)THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3302)
 3302   FORMAT('      NO THIRD VARIABLE NAME OR COLUMN NUMBER WAS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2303)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO19000
      ENDIF
C
      IHARG5=IHARG(ILOCVP)
      IHARG6=IHARG2(ILOCVP)
      DO3310I=1,NUMNAM
        I2=I
        IF(IHARG5.EQ.IHNAME(I).AND.IHARG6.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'V')THEN
          ILIST3=I2
          ICOL3=IVALUE(ILIST3)
          NIRIG3=IN(ILIST3)
          ICOL32=-99
          GOTO3390
        ELSEIF(IHARG5.EQ.IHNAME(I).AND.IHARG6.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'M')THEN
          ILIST3=I2
          ICOL3=IVALUE(ILIST3)
          ICOL32=IVALU2(ILIST3)
          NIRIG3=IN(ILIST3)
          NCOL3=(ICOL32 - ICOL3) + 1
          GOTO3390
        ELSEIF(IHARG5.EQ.IHNAME(I).AND.IHARG6.EQ.IHNAM2(I).AND.
     1    IUSE(I).EQ.'P')THEN
          IFLGP3=1
          ILIST3=I2
          AVAL3=VALUE(ILIST3)
          NIRIG3=1
          GOTO3390
        ENDIF
 3310 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,221)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3312)
 3312 FORMAT('      THE SPECIFIED THIRD ARGUMENT (VARIABLE NAME OR')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2314)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2315)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1158)
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO19000
C
 3390 CONTINUE
C
C               ******************************************************
C               **  STEP 6.6--                                      **
C               **  CHECK THAT THE 3 VARIABLES HAVE THE SAME        **
C               **  NUMBER OF ELEMENTS.                             **
C               ******************************************************
C
      ISTEPN='6.6'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NIRIG3.NE.NIRIGH .AND. IFLAGD.NE.'ON')THEN
        WRITE(ICOUT,221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3412)
 3412   FORMAT('      FOR A 3-VARIABLE STATISTIC CALCULATION, THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2413)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2415)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3416)IH,IH2,NIRIGH
 3416   FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,' OBSERVATIONS;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3417)IHARG5,IHARG6,NIRIG3
 3417   FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,' OBSERVATIONS.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1158)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1159)(IANS(II),II=1,MIN(80,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO19000
      ENDIF
C
C               *******************************
C               **  STEP 7--                 **
C               **  DETERMINE THE SUBCASE    **
C               **  AND BRANCH ACCORDINGLY.  **
C               *******************************
C
  700 CONTINUE
      ISTEPN='7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IARG4F=IFOUNZ(4)
      IARG4T=ITYPE(4)
C
      ICASEL='UNKN'
      IF(IARG4F.EQ.'NO')ICASEL='PARA'
      IF(IARG4F.EQ.'YES'.AND.IARG4T.EQ.'NUMB')ICASEL='ELEM'
      IF(IARG4F.EQ.'YES'.AND.IARG4T.EQ.'WORD')ICASEL='ELEM'
      IF(ICASEL.EQ.'UNKN'.OR.ICASEL.EQ.'VAR')GOTO710
      GOTO729
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STAC')THEN
        WRITE(ICOUT,3517)IARG4F,IARG4T,ICASEL
 3517   FORMAT('IARG4F,IARG4T,ICASEL = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
  710 CONTINUE
      WRITE(ICOUT,221)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,712)
  712 FORMAT('      UNKNOWN VARIABLE/PARAMETER EXPRESSION')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,713)
  713 FORMAT('      TO THE LEFT OF THE EQUAL SIGN.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1158)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
C
  729 CONTINUE
C
      ICASEQ='UNKN'
      IMIN=ILOCV+1
      IF(IMIN.LE.NUMARG)THEN
        DO740I=IMIN,NUMARG
          IF((IHARG(I).EQ.'SUBS'.AND.IHARG2(I).EQ.'ET  ') .OR.
     1       (IHARG(I).EQ.'EXCE'.AND.IHARG2(I).EQ.'PT  '))THEN
            ICASEQ='SUBS'
            GOTO749
          ELSEIF(IHARG(I).EQ.'FOR '.AND.IHARG2(I).EQ.'    ')THEN
            ICASEQ='FOR'
            GOTO749
          ENDIF
  740   CONTINUE
      ENDIF
      ICASEQ='FULL'
C
  749 CONTINUE
      IF(ICASEQ.EQ.'UNKN')GOTO750
C
      IF(ICASEQ.EQ.'FULL')GOTO8000
      IF(ICASEQ.EQ.'SUBS')GOTO9000
      IF(ICASEQ.EQ.'FOR')GOTO10000
C
  750 CONTINUE
      WRITE(ICOUT,751)
  751 FORMAT('***** INTERNAL ERROR IN DPSTC2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,752)
  752 FORMAT('      UNKNOWN QUALIFIER TYPE FOR LET COMMAND')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1158)
 1158 FORMAT('      THE COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1159)(IANS(I),I=1,MIN(80,IWIDTH))
 1159 FORMAT(80A1)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
C
C               ************************************************
C               **  STEP 8--                                  **
C               **  TREAT THE FULL VARIABLE CASE.             **
C               **  EXAMPLE--LET Y = SORT(X)                  **
C               **         --LET Y(I) = SORT(X)               **
C               **  JUMP TO STEP NUMBER 11 BELOW              **
C               **  FOR THE ACTUAL STATISTICAL CALCULATION,   **
C               **  FOR THE LIST UPDATING, AND                **
C               **  FOR SOME INFORMATIVE PRINTING.            **
C               ************************************************
C
 8000 CONTINUE
      ISTEPN='8'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NIOLD=NIRIGH
      IF(NUMVAR.GE.2.AND.NIRIG2.GT.NIOLD)NIOLD=NIRIG2
      NINEW=NIOLD
      DO8100I=1,NINEW
        ISUB(I)=1
 8100 CONTINUE
      GOTO11000
C
C               ****************************************************
C               **  STEP 9--                                       *
C               **  TREAT THE PARTIAL VARIABLE SUBSET CASE.        *
C               **  EXAMPLE--LET Y = SORT(X)    SUBSET 2 3 5       *
C               **         --LET Y(I) = SORT(X) SUBSET 2 3 5       *
C               **  JUMP TO STEP NUMBER 11 BELOW                   *
C               **  FOR THE ACTUAL STATISTICAL CALCULATION,        *
C               **  FOR THE LIST UPDATING, AND                     *
C               **  FOR SOME INFORMATIVE PRINTING.                 *
C               ****************************************************
C
 9000 CONTINUE
      ISTEPN='9'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMVAR.EQ.1)ILOCSV=ILOCV+2
      IF(NUMVAR.EQ.2)ILOCSV=ILOCV+3
      IF(NUMVAR.EQ.3)ILOCSV=ILOCV+4
      IHSET=IHARG(ILOCSV)
      IHSET2=IHARG2(ILOCSV)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHSET,IHSET2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
      IF(IERROR.EQ.'YES')GOTO19000
      NIOLD=IN(ILOC)
      CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERROR)
      NINEW=NIOLD
      GOTO11000
C
C               *****************************************************
C               **  STEP 10--                                       *
C               **  TREAT THE PARTIAL VARIABLE FOR CASE.            *
C               **  EXAMPLE--LET Y = SORT(X)    FOR I = 1 2 10      *
C               **         --LET Y(I) = SORT(X) FOR I = 1 2 10      *
C               **  JUMP TO STEP NUMBER 11 BELOW                    *
C               **  FOR THE ACTUAL STATISTICAL CALCULATION,         *
C               **  FOR THE LIST UPDATING, AND                      *
C              **  FOR SOME INFORMATIVE PRINTING.                   *
C               *****************************************************
C
10000 CONTINUE
      ISTEPN='10'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPFOR(NIOLD,NINEW,IROW1,IROWN,
     1NLOCAL,ILOCS,NS,IBUGQ,IERROR)
      NIFOR=NINEW
      GOTO11000
C
C               *******************************************
C               **  STEP 11--                            **
C               **  CARRY OUT THE                        **
C               **  ACTUAL STATISTICAL CALCULATION,      ZZ
C               **  THE LIST UPDATING, AND               **
C               **  GENERATE THE INFORMATIVE PRINTING    **
C               **  FOR STEP NUMBERS 7, 8, AND 9 ABOVE.  **
C               *******************************************
C
11000 CONTINUE
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NS2=0
      NS3=0
      NS4=0
C
C     EXTRACT DATA VARIABLE ONE.  HANDLE VARIABLE AND MATRIX
C     CASES DIFFERENTLY.
C
      IF(IFLGP1.EQ.1)THEN
        NS2=1
        TEMP(NS2)=AVAL1
      ELSEIF(ICOLR2.LE.0)THEN
        IF(ICASL8.EQ.'NUMB' .AND. NINEW.LT.1)THEN
          NS2=0
          GOTO11109
        ENDIF
        DO11100I=1,NINEW
          IF(ISUB(I).EQ.0)GOTO11100
          IF(I.GT.NIRIGH)GOTO11109
          NS2=NS2+1
C
          IJ=MAXN*(ICOLR-1)+I
          IF(ICOLR.LE.MAXCOL)TEMP(NS2)=V(IJ)
          IF(ICOLR.EQ.MAXCP1)TEMP(NS2)=PRED(I)
          IF(ICOLR.EQ.MAXCP2)TEMP(NS2)=RES(I)
          IF(ICOLR.EQ.MAXCP3)TEMP(NS2)=YPLOT(I)
          IF(ICOLR.EQ.MAXCP4)TEMP(NS2)=XPLOT(I)
          IF(ICOLR.EQ.MAXCP5)TEMP(NS2)=X2PLOT(I)
          IF(ICOLR.EQ.MAXCP6)TEMP(NS2)=TAGPLO(I)
C
11100   CONTINUE
11109   CONTINUE
      ELSE
        NLOOP=NCOL
        IF(NLOOP.LT.1)NLOOP=1
        NS2=0
        DO11101JLOOP=1,NLOOP
          DO11103I=1,NINEW
            IF(ISUB(I).EQ.0)GOTO11103
            IF(I.GT.NIRIGH)GOTO11105
            NS2=NS2+1
            IF(NS2.GT.MAXOBV)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,221)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,11106)
11106         FORMAT('      FOR THE MATRIX CASE, THE MAXIMUM NUMBER')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,11107)
11107         FORMAT('      OF OBSERVATIONS HAS BEEN EXCEEDED.')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,11108)MAXOBV
11108         FORMAT('      THE MAXIMUM NUMBER OF OBSERVATIONS = ',I10)
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ENDIF
            ICOLT=ICOLR+JLOOP-1
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)TEMP(NS2)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)TEMP(NS2)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)TEMP(NS2)=RES(I)
            IF(ICOLT.EQ.MAXCP3)TEMP(NS2)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)TEMP(NS2)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)TEMP(NS2)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)TEMP(NS2)=TAGPLO(I)
11103     CONTINUE
11105     CONTINUE
11101   CONTINUE
      ENDIF
C
      IF(NUMVAR.GE.2)THEN
        IF(IFLGP2.EQ.1)THEN
          NS3=1
          TEMP2(NS3)=AVAL2
        ELSEIF(ICOL22.LE.0)THEN
          DO11200I=1,NINEW
            IF(ISUB(I).EQ.0)GOTO11200
            IF(I.GT.NIRIG2)GOTO11209
            NS3=NS3+1
C
            IJ=MAXN*(ICOL2-1)+I
            IF(ICOL2.LE.MAXCOL)TEMP2(NS3)=V(IJ)
            IF(ICOL2.EQ.MAXCP1)TEMP2(NS3)=PRED(I)
            IF(ICOL2.EQ.MAXCP2)TEMP2(NS3)=RES(I)
            IF(ICOL2.EQ.MAXCP3)TEMP2(NS3)=YPLOT(I)
            IF(ICOL2.EQ.MAXCP4)TEMP2(NS3)=XPLOT(I)
            IF(ICOL2.EQ.MAXCP5)TEMP2(NS3)=X2PLOT(I)
            IF(ICOL2.EQ.MAXCP6)TEMP2(NS3)=TAGPLO(I)
C
11200     CONTINUE
11209     CONTINUE
        ELSE
          NLOOP=NCOL2
          IF(NLOOP.LT.1)NLOOP=1
          NS3=0
          DO11201JLOOP=1,NLOOP
            DO11203I=1,NINEW
              IF(ISUB(I).EQ.0)GOTO11203
              IF(I.GT.NIRIG2)GOTO11205
              NS3=NS3+1
              IF(NS3.GT.MAXOBV)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,221)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11106)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11107)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11108)MAXOBV
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
              ICOLT=ICOL2+JLOOP-1
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)TEMP2(NS3)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)TEMP2(NS3)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)TEMP2(NS3)=RES(I)
              IF(ICOLT.EQ.MAXCP3)TEMP2(NS3)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)TEMP2(NS3)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)TEMP2(NS3)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)TEMP2(NS3)=TAGPLO(I)
11203       CONTINUE
11205       CONTINUE
11201     CONTINUE
        ENDIF
      ENDIF
C
      IF(NUMVAR.GE.3)THEN
        IF(IFLGP3.EQ.1)THEN
          NS4=1
          TEMP3(NS4)=AVAL3
        ELSEIF(ICOL32.LE.0)THEN
          DO11300I=1,NINEW
            IF(ISUB(I).EQ.0)GOTO11300
            IF(I.GT.NIRIG3)GOTO11309
            NS4=NS4+1
C
            IJ=MAXN*(ICOL3-1)+I
            IF(ICOL3.LE.MAXCOL)TEMP3(NS4)=V(IJ)
            IF(ICOL3.EQ.MAXCP1)TEMP3(NS4)=PRED(I)
            IF(ICOL3.EQ.MAXCP2)TEMP3(NS4)=RES(I)
            IF(ICOL3.EQ.MAXCP3)TEMP3(NS4)=YPLOT(I)
            IF(ICOL3.EQ.MAXCP4)TEMP3(NS4)=XPLOT(I)
            IF(ICOL3.EQ.MAXCP5)TEMP3(NS4)=X2PLOT(I)
            IF(ICOL3.EQ.MAXCP6)TEMP3(NS4)=TAGPLO(I)
C
11300     CONTINUE
11309     CONTINUE
        ELSE
          NLOOP=NCOL3
          IF(NLOOP.LT.1)NLOOP=1
          NS4=0
          DO11301JLOOP=1,NLOOP
            DO11303I=1,NINEW
              IF(ISUB(I).EQ.0)GOTO11303
              IF(I.GT.NIRIG3)GOTO11305
              NS4=NS4+1
              IF(NS4.GT.MAXOBV)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,221)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11106)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11107)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,11108)MAXOBV
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
              ICOLT=ICOL3+JLOOP-1
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)TEMP3(NS4)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)TEMP3(NS4)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)TEMP3(NS4)=RES(I)
              IF(ICOLT.EQ.MAXCP3)TEMP3(NS4)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)TEMP3(NS4)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)TEMP3(NS4)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)TEMP3(NS4)=TAGPLO(I)
11303       CONTINUE
11305       CONTINUE
11301     CONTINUE
        ENDIF
      ENDIF
C
      IF(NS2.LE.0)THEN
        IF(ICASL8.EQ.'NUMB')THEN
          RIGHT=0
          IFOUND='YES'
          IERROR='NO'
          IF(ICASEL.EQ.'PARA')GOTO15000
          IF(ICASEL.EQ.'ELEM')GOTO16000
        ELSE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,12111)ICASL8
12111     FORMAT('****** ERROR--AFTER SUBSET/FOR/EXCEPT CLAUSE ',
     1           'APPLIED FOR STATISTIC ',A4,',')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,12113)
12113     FORMAT('       THE RESPONSE VARIABLE IS EMPTY.  THE ',
     1           'STATISTIC WAS NOT COMPUTED.')
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          GOTO19000
        ENDIF
      ENDIF
C
      IWRITE='ON'
      IF(IPRINT.EQ.'OFF')IWRITE='OFF'
      IF(IFEEDB.EQ.'OFF')IWRITE='OFF'
C
      ISTEPN='12'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL CMPST2(TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,XTEMP3,
     1            XTEMP4,XTEMP5,
     1            MAXNXT,NS2,NS3,NS4,NUMVAR,ICASL8,ISTARA,
     1            ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1            DTEMP1,DTEMP2,DTEMP3,
     1            RIGHT,
     1            ISUBRO,IBUGA3,IERROR)
C
      GOTO11900
C
11900 CONTINUE
      ISTEPN='13'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFOUND='YES'
      IF(IERROR.EQ.'YES')GOTO19000
      IF(ICASEL.EQ.'PARA')GOTO15000
      IF(ICASEL.EQ.'ELEM')GOTO16000
C
C               *****************************************************
C               **  STEP 15--                                      **
C               **  TREAT THE PARAMETER CASE.                      **
C               **  EXAMPLE--LET A = MEAN X                        **
C               **           WHERE A WAS PREVIOUSLY UNDEFINED      **
C               **           OR WHERE A WAS PREVIOUSLY A PARAMETER.**
C               **  CARRY OUT THE LIST UPDATING  AND               **
C               **  GENERATE THE INFORMATIVE PRINTING.             **
C               **  THEN EXIT.                                     **
C               *****************************************************
C
15000 CONTINUE
      ISTEPN='15'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHNAME(ILISTL)=ILEFT
      IHNAM2(ILISTL)=ILEFT2
      IUSE(ILISTL)='P'
      VALUE(ILISTL)=RIGHT
      IF(VALUE(ILISTL).GE.0.0)THEN
        IVALUE(ILISTL)=INT(VALUE(ILISTL)+0.5)
      ELSE
        IVALUE(ILISTL)=INT(VALUE(ILISTL)-0.5)
      ENDIF
      IN(ILISTL)=1
      IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
      IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,15111)ILEFT,ILEFT2,RIGHT
15111   FORMAT('THE COMPUTED VALUE OF THE CONSTANT ',
     1         A4,A4,'      = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO19000
C
C               *********************************************
C               **  STEP 16--                              **
C               **  TREAT THE ELEMENT SPECIFICATION CASE.  **
C               **  EXAMPLE--LET Y(4)=MEAN X               **
C               **  ALSO, CARRY OUT THE LIST UPDATING AND  **
C               **  GENERATE THE INFORMATIVE PRINTING.     **
C               *********************************************
C
16000 CONTINUE
      ISTEPN='16'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IARGL=INT1(4)
      IF(1.LE.IARGL.AND.IARGL.LE.MAXN)GOTO16100
      WRITE(ICOUT,221)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16002)IARGL,ILEFT
16002 FORMAT('      THE SPECIFIED ROW (',I8,') OF VARIABLE ',A4,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16003)RIGHT
16003 FORMAT('      (THAT WAS TO BE SET = ',G15.7,')')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16004)
16004 FORMAT('      WAS LESS THAN 1 OR')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16005)MAXN
16005 FORMAT('      GREATER THAN THE MAX ALLOWABLE ',I8)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
C
16100 CONTINUE
      IF(NEWNAM.EQ.'NO')NIOLD=IN(ILISTL)
      IF(NEWNAM.EQ.'YES')NIOLD=1
      NINEW=NIOLD
      IF(IARGL.GT.NINEW)NINEW=IARGL
      NS2=1
C
      IJ=MAXN*(ICOLL-1)+IARGL
      IF(ICOLL.LE.MAXCOL)V(IJ)=RIGHT
      IF(ICOLL.EQ.MAXCP1)PRED(IARGL)=RIGHT
      IF(ICOLL.EQ.MAXCP2)RES(IARGL)=RIGHT
      IF(ICOLL.EQ.MAXCP3)YPLOT(IARGL)=RIGHT
      IF(ICOLL.EQ.MAXCP4)XPLOT(IARGL)=RIGHT
      IF(ICOLL.EQ.MAXCP5)X2PLOT(IARGL)=RIGHT
      IF(ICOLL.EQ.MAXCP6)TAGPLO(IARGL)=RIGHT
C
      IHNAME(ILISTL)=ILEFT
      IHNAM2(ILISTL)=ILEFT2
      IUSE(ILISTL)='V'
      IVALUE(ILISTL)=ICOLL
      VALUE(ILISTL)=ICOLL
      IN(ILISTL)=NINEW
C
      IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
      IF(NEWNAM.EQ.'YES')NUMCOL=NUMCOL+1
C
      DO16200J4=1,NUMNAM
      IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL)GOTO16205
      GOTO16200
16205 CONTINUE
      IUSE(J4)='V'
      IVALUE(J4)=ICOLL
      VALUE(J4)=ICOLL
      IN(J4)=NINEW
16200 CONTINUE
C
      IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,16111)ILEFT,ILEFT2,IARGL,RIGHT
16111   FORMAT('THE COMPUTED VALUE OF ',
     1         A4,A4,'(',I6,')      = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO19000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
19000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STC2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19011)
19011   FORMAT('***** AT THE END       OF DPSTC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19012)IFOUND,IERROR
19012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)ICASL8,ICASEL,IWRITE,IFLAGD,ILOCV
 9014   FORMAT('ICASL8,ICASEL,IWRITE,IFLAGD,ILOCV = ',4(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19015)NS2,NS3,NS4,RIGHT
19015   FORMAT('NS2,NS3,NS4,RIGHT = ',3I8,G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTCH(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--CONVERT AN ARRAY OF NUMBERS TO A STRING THAT
C              CONTAINS THE ASCII CHARACTERS CORRESPONDING TO
C              THE NUMBERS.
C     EXAMPLE--LET SOUT = CHARACTER IVAL
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/11
C     ORIGINAL VERSION--NOVEMBER  2008.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASER
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*1 IC
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='CH  '
      IERROR='NO'
C
      ILOC3=0
      ICOLR=0
      AVAL=0.0
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCH')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTCH--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCH')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCH')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN CHARACTER--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCH')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(4)
      IHRIG2=IHARG2(4)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).EQ.'P')THEN
            ICASER='PARA'
            ILISTR=I4
            IVAL=IVALUE(ILISTR)
            NIOLD=1
            GOTO3099
          ELSEIF(IUSE(I4).EQ.'V')THEN
            ICASER='VARI'
            ILISTR=I4
            ICOLR=IVALUE(ILISTR)
            NIOLD=IN(ILISTR)
            GOTO3099
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER ',
     1             'OR A VARIABLE.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 3000 CONTINUE
C
      IF(NUMARG.GE.4)THEN
        IF(IARGT(4).EQ.'NUMB')THEN
          IVAL=IARG(4)
          ICASER='PARA'
          GOTO3099
        ENDIF
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CREATE THE STRING                              **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCH')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ILISTR,NIOLD
 4011   FORMAT('ILISTR,NIOLD = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL,ICASER
 4013   FORMAT('ICASEL,ICASER = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASER.EQ.'PARA')THEN
C
        IF(IVAL.LT.0 .OR. IVAL.GT.255)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4021)
 4021     FORMAT('      THE PARAMETER ON THE RIGHT HAND SIDE IS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4023)
 4023     FORMAT('      OUTSIDE THE (0,255) INTERVAL.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4025)IVAL
 4025     FORMAT('      THE VALUE OF THE PARAMETER IS ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        ICNT=1
        IFUNC2(ICNT)=' '
        CALL DPCONA(IVAL,IC)
        IFUNC2(ICNT)(1:1)=IC
      ELSEIF(ICASER.EQ.'VARI')THEN
        ICNT=0
        DO4110I=1,NIOLD
          IJ=MAXN*(ICOLR-1)+I
          IF(ICOLR.LE.MAXCOL)AVAL=V(IJ)
          IF(ICOLR.EQ.MAXCP1)AVAL=PRED(I)
          IF(ICOLR.EQ.MAXCP2)AVAL=RES(I)
          IF(ICOLR.EQ.MAXCP3)AVAL=YPLOT(I)
          IF(ICOLR.EQ.MAXCP4)AVAL=XPLOT(I)
          IF(ICOLR.EQ.MAXCP5)AVAL=X2PLOT(I)
          IF(ICOLR.EQ.MAXCP6)AVAL=TAGPLO(I)
          IVAL=INT(AVAL+0.5)
C
          IF(IVAL.LT.0 .OR. IVAL.GT.255)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,4121)I
 4121       FORMAT('      ROW ',I8,' OF THE VARIABLE ON THE RIGHT ',
     1             'HAND SIDE IS')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,4123)
 4123       FORMAT('      OUTSIDE THE (0,255) INTERVAL.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,4125)IVAL
 4125       FORMAT('      THE VALUE OF THE ROW ELEMENT IS ',I8)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
C
          ICNT=ICNT+1
          IFUNC2(ICNT)=' '
          CALL DPCONA(IVAL,IC)
          IFUNC2(ICNT)(1:1)=IC
C
 4110   CONTINUE
      ELSE
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCH')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCH')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTCH--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTCK(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--CHECK IF THE ARGUMENTS SPECIFIED ON THE COMMAND ARE
C              CURRENTLY DEFINED NAMES
C     EXAMPLE--LET IFLAG = CHECK NAMES S1 S2 S3
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2015/03
C     ORIGINAL VERSION--MARCH     2015.
C     UPDATED         --JUNE      2016. CHECK NAME OUTPUT
C                                             <FILLIBEN/DEFAULT>
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IFOUND
C
      CHARACTER*8 ISTR
      CHARACTER*8 IQUOTE
C
      PARAMETER (MAXIND=100)
      CHARACTER*4 IVARN1(MAXIND)
      CHARACTER*4 IVARN2(MAXIND)
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
C
      CHARACTER (LEN=MAXFNC) :: IMANAM(10)
      COMMON/IMAC/IMACNU,IMALEV,IMANAM
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='CK  '
      IERROR='NO'
      IFOUND='NO'
      IQUOTE="'"
C
      ILOC3=0
      ICOLL=0
      ILISTL=0
      NIOLD=0
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCK')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTCK--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM,NUMCHF,MAXCHF
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM,NUMCHF,MAXCHF = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCK')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE LEFT-HAND SIDE--                     *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCK')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO1910I=1,4
        IF(IHLEFT(I:I).EQ.'(')THEN
          IHLEFT(I:4)=' '
          IHLEF2=' '
          ICASEL='ELEM'
          GOTO1999
        ENDIF
 1910 CONTINUE
      DO1920I=1,4
        IF(IHLEF2(I:I).EQ.'(')THEN
          IHLEF2(I:4)=' '
          ICASEL='ELEM'
          GOTO1999
        ENDIF
 1920 CONTINUE
 1999 CONTINUE
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASEL='PARA'
            ILISTL=I2
            GOTO2900
          ELSEIF(IUSE(I2).EQ.'V')THEN
            ICASEL='ELEM'
            ILISTL=I2
            ICOLL=IVALUE(ILISTL)
            NIOLD=IN(ILISTL)
            GOTO2900
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN CHECK NAME--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='PARA'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2900 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE NAMES ON THE RIGHT HAND SIDE       **
C               *****************************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCK')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFRST=5
      IF(NUMARG.LT.IFRST)THEN
        IFLAG=-1
        GOTO3900
      ENDIF
      IFLAG=1
C
      JMIN=IFRST
      JMAX=NUMARG
      CALL EXTVA3(IHARG,IHARG2,NUMARG,JMIN,JMAX,MAXIND,
     1            IHNAME,IHNAM2,NUMNAM,
     1            IVARN1,IVARN2,NUMIND,
     1            IBUGA3,ISUBRO,IERROR)
      IERROR='NO'
C
      DO3010II=1,NUMIND
        IHRIGH=IVARN1(II)
        IHRIG2=IVARN2(II)
        DO3020I=1,NUMNAM
          I4=I
          IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
            GOTO3029
          ENDIF
 3020   CONTINUE
C
        IFLAG=0
C
C       2016/06: OPTION TO PRINT ERROR MESSAGE AS IN JIM FILLIBEN'S
C                CHECKINPUT.DP MACRO.
C
        IF(ICHKNA.EQ.'DEFA')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3023)IHRIGH,IHRIG2
 3023     FORMAT('      NAME ',2A4,' WAS NOT FOUND IN THE CURRENT ',
     1           'NAME LIST.')
          CALL DPWRST('XXX','BUG ')
        ELSE
C
C         CHECK FOR "HTMLSW" PARAMETER
C         CHECK FOR "IBATCH" PARAMETER
C
C         IF THIS IS SET TO 1, JIM HAS SOME SPECIAL CODE FOR PYTHON
C         BASED INTERFACE.  SO HERE, JUST SET IFLAG TO -1.
C
          IHP='HTML'
          IHP2='SW  '
          IHWUSE='P'
          MESSAG='NO'
          CALL CHECKN(IHP,IHP2,IHWUSE,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1                ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
          IHTML=0
          IF(IERROR.EQ.'NO')IHTML=INT(VALUE(ILOCP)+0.5)
          IF(IHTML.NE.1)IHTML=0
          IERROR='NO'
C
          IHP='IBAT'
          IHP2='CH  '
          IHWUSE='P'
          MESSAG='NO'
          CALL CHECKN(IHP,IHP2,IHWUSE,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1                ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
          IBATCH=0
          IF(IERROR.EQ.'NO')IBATCH=INT(VALUE(ILOCP)+0.5)
          IF(IBATCH.NE.1)IBATCH=0
          IERROR='NO'
C
          IF(IHTML.EQ.1)THEN
            IFLAG=-1
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3026)
            CALL DPWRST('XXX','BUG ')
C
            IF(IMACNU.NE.5)THEN
              WRITE(ICOUT,3031)IMANAM(IMALEV)
              CALL DPWRST('XXX','BUG ')
            ELSE
              WRITE(ICOUT,3032)
              CALL DPWRST('XXX','BUG ')
            ENDIF
            IF(IHRIGH.EQ.'K   ')THEN
              WRITE(ICOUT,3041)
              CALL DPWRST('XXX','BUG ')
            ELSE
              WRITE(ICOUT,3051)IHRIGH,IHRIG2
              CALL DPWRST('XXX','BUG ')
            ENDIF
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3120)
 3120       FORMAT('       1. Close this error-message window ',
     1             '(via X-out)')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3122)
 3122       FORMAT('       2. Terminate the Dataplot run ',
     1             '(via Ctrl-C)')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3124)IQUOTE
 3124       FORMAT('       3. Edit Dataplot',A1,'s main routine to ',
     1             'define k')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3126)
 3126       FORMAT('               Example: let k = 3')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3128)
 3128       FORMAT('       4. Rerun Dataplot')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3026)
            CALL DPWRST('XXX','BUG ')
            CALL DPPAUS(IBUGA3,IFOUND,IERROR)
C
          ELSE
C
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3026)
 3026       FORMAT('========================================')
            CALL DPWRST('XXX','BUG ')
C
            IF(IMACNU.NE.5)THEN
              WRITE(ICOUT,3031)IMANAM(IMALEV)
 3031         FORMAT('Error--Macro ',A80)
              CALL DPWRST('XXX','BUG ')
            ELSE
              WRITE(ICOUT,3032)
 3032         FORMAT('Error--From terminal')
              CALL DPWRST('XXX','BUG ')
            ENDIF
            IF(IHRIGH.EQ.'K   ')THEN
              WRITE(ICOUT,3041)
 3041         FORMAT('        is missing required input:  k (= ',
     1               'number of factors')
              CALL DPWRST('XXX','BUG ')
            ELSE
              WRITE(ICOUT,3051)IHRIGH,IHRIG2
 3051         FORMAT('        is missing required input: ',2A4)
              CALL DPWRST('XXX','BUG ')
            ENDIF
            IF(IBATCH.EQ.0)THEN
              WRITE(ICOUT,3058)
 3058         FORMAT('        Click    Enter   to continue ...')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3026)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              CALL DPPAUS(IBUGA3,IFOUND,IERROR)
            ELSE
              WRITE(ICOUT,3026)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
            ENDIF
          ENDIF
        ENDIF
C
 3029   CONTINUE
 3010 CONTINUE
C
 3900 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  SAVE PARAMETER                                 **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCK')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTART,ISTOP,IVAL
 4011   FORMAT('ISTART,ISTOP,IVAL = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASEL.EQ.'PARA')THEN
C
        ISTEPN='4A'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCK')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='P'
        VALUE(ILISTL)=REAL(IFLAG)
        IVALUE(ILISTL)=IFLAG
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
      ELSEIF(ICASEL.EQ.'ELEM')THEN
C
C       SEARCH IANS STRING FOR "(xx) =".  IF NO PARENTHESIS
C       FOUND BEFORE "=", THEN DO NOT KNOW WHAT ROW OF THE
C       VARIABLE TO SAVE.  TREAT THIS AS AN ERROR.
C
        NLEFT=-1
        NRIGHT=-1
        NEQUAL=-1
        DO4201I=1,IWIDTH
          IF(IANS(I)(1:1).EQ.'(' .AND. NLEFT.LT.0)THEN
            NLEFT=I
          ELSEIF(IANS(I)(1:1).EQ.')' .AND. NRIGHT.LT.0)THEN
            NRIGHT=I
          ELSEIF(IANS(I)(1:1).EQ.'=' .AND. NEQUAL.LT.0)THEN
            NEQUAL=I
          ENDIF
 4201   CONTINUE
C
C       NEED  NLEFT < NRIGHT < NEQUAL
C
        NSTRT=NLEFT+1
        NSTOP=NRIGHT-1
        NLEN=NSTOP-NSTRT+1
        IF(NLEFT.GT.NRIGHT .OR. NRIGHT.GT.NEQUAL .OR.
     1     NSTRT.GT.NSTOP .OR. NLEN.GT.8) THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4211)
 4211     FORMAT('      UNRECOGNIZED SYNTAX FOR VARIABLE ELEMENT ON ',
     1           'LEFT HAND SIDE EQUAL SIGN.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSE
          ISTR=' '
          DO4216I=1,NLEN
            ISTR(I:I)=IANS(NSTRT+I-1)(1:1)
 4216     CONTINUE
          READ(ISTR,'(I8)',ERR=4218)IARGL
          GOTO4219
C
 4218     CONTINUE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4211)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
 4219     CONTINUE
        ENDIF
C
        IF(IARGL.LT.1 .OR. IARGL.GT.MAXN)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4231)IARGL,ILEFT
 4231     FORMAT('      THE SPECIFIED ROW (',I8,') OF VARIABLE ',A4,A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4233)
 4233     FORMAT('      WAS LESS THAN 1 OR GREATER THAN THE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4235)MAXN
 4235     FORMAT('      MAXIMUM ALLOWABLE ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IF(NEWNAM.EQ.'YES')THEN
          NIOLD=1
        ENDIF
        NINEW=NIOLD
        IF(IARGL.GT.NINEW)NINEW=IARGL
        NS2=1
C
        RIGHT=REAL(IFLAG)
        IJ=MAXN*(ICOLL-1)+IARGL
        IF(ICOLL.LE.MAXCOL)V(IJ)=RIGHT
        IF(ICOLL.EQ.MAXCP1)PRED(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP2)RES(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP3)YPLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP4)XPLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP5)X2PLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP6)TAGPLO(IARGL)=RIGHT
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='V'
        IVALUE(ILISTL)=ICOLL
        VALUE(ILISTL)=ICOLL
        IN(ILISTL)=NINEW
C
        IF(NEWNAM.EQ.'YES')THEN
          NUMNAM=NUMNAM+1
          NUMCOL=NUMCOL+1
        ENDIF
C
        DO4290J4=1,NUMNAM
          IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL)THEN
            IUSE(J4)='V'
            IVALUE(J4)=ICOLL
            VALUE(J4)=ICOLL
            IN(J4)=NINEW
            GOTO4299
          ENDIF
 4290   CONTINUE
 4299   CONTINUE
C
      ENDIF
C
      IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON' .AND. ICHKNA.EQ.'DEFA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8011)IFLAG
 8011   FORMAT('THE STATUS FLAG FOR CHECK NAME = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCK')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTCK--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTCM(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--COMPARE TWO STRINGS AND RETURN A 1 IF THEY ARE
C              IDENTICAL AND A 0 IF THEY ARE NOT.
C     EXAMPLE--LET IFLAG = STRING COMPARE S1 S2
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/1
C     ORIGINAL VERSION--JANUARY   2011.
C     UPDATED         --AUGUST    2021. ADD OPTION FOR IGNORING CASE
C     UPDATED         --AUGUST    2021. ADD OPTION FOR SPECIFYING
C                                       NUMBER OF CHARACTERS TO COMPARE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*1 IVALC1
      CHARACTER*1 IVALC2
C
      CHARACTER*132 ISTR
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='CM  '
      IERROR='NO'
C
      ILOC3=0
      NLEN1=0
      NLEN2=0
      IFLAGC=0
      IMAXLN=999999
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCM')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTCM--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM,NUMARG,NUMCHF,MAXCHF
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM,NUMARG,NUMCHF,MAXCHF = ',
     1         2(A4,2X),4I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        DO65I=1,NUMARG
          WRITE(ICOUT,67)I,IHARG(I),IHARG2(I)
   67     FORMAT('I,IHARG(I),IHARG2(I) = ',I5,2X,2A4)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCM')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
      IFLAGC=0
      IF(IHARG(5).EQ.'NOCA' .AND. IHARG2(5).EQ.'SE  ')IFLAGC=1
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCM')THEN
        ISTEPN='2'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,81)IHARG(5),IHARG2(5),IFLAGC
   81   FORMAT('IHARG(5),IHARG2(5),IFLAGC = ',2A4,2X,I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASEL='PARA'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING COMPARE (DPSTCM--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE NAME ON THE LEFT HAND SIDE (',2A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='PARA'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  LOOP THROUGH THE NAMES ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      IVALZ=5
      IF(IFLAGC.EQ.1)IVALZ=IVALZ+1
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCM')THEN
        ISTEPN='3A'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,3001)IVALZ
 3001   FORMAT('IVALZ = ',I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NUMARG.LT.IVALZ)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3003)
 3003   FORMAT('      THERE ARE NO STRINGS SPECIFIED ON THE RIGHT ',
     1         'HAND SIDE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     2021/08: CHECK TO SEE IF THERE IS A "LENGTH" ARGUMENT
C
      ILASTS=NUMARG
      IF(NUMARG.GT.IVALZ+1)THEN
C
        IF(NUMARG.EQ.IVALZ+2)THEN
          IF(IARGT(IVALZ+2).EQ.'NUMB')THEN
            IMAXLN=INT(ARG(IVALZ+2)+0.5)
            ILASTS=NUMARG-1
            GOTO3019
          ELSE
            IHRIGH=IHARG(IVALZ+2)
            IHRIG2=IHARG2(IVALZ+2)
            IHWUSE='P'
            MESSAG='YES'
            CALL CHECKN(IHRIGH,IHRIG2,IHWUSE,
     1                  IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,
     1                  NUMNAM,MAXNAM,
     1                  ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
            IF(IERROR.EQ.'YES')GOTO9000
            IMAXLN=IVALUE(ILOCV)
            ILASTS=NUMARG-1
            GOTO3019
          ENDIF
        ENDIF
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3013)
 3013   FORMAT('      THERE ARE MORE THAN TWO STRINGS SPECIFIED ON ',
     1         'THE RIGHT HAND SIDE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 3019 CONTINUE
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCM')THEN
        WRITE(ICOUT,3021)IMAXLN,ILASTS
 3021   FORMAT('BEFORE 3000: IMAXLN,ILASTS = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ICNT=0
      DO3000I=IVALZ,ILASTS
C
        IHRIGH=IHARG(I)
        IHRIG2=IHARG2(I)
C
        DO3100J=1,NUMNAM
          I4=J
          IF(IHRIGH.EQ.IHNAME(J).AND.IHRIG2.EQ.IHNAM2(J))THEN
            IF(IUSE(I4).NE.'F')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2001)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3103)IHRIGH,IHRIG2
 3103         FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1               A4,A4,')')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3105)
 3105         FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ELSE
              IVALT=5
              IF(IFLAGC.EQ.1)IVALT=6
              IF(I.EQ.IVALT)THEN
                ISTRT1=IVSTAR(I4)
                ISTOP1=IVSTOP(I4)
                NLEN1=ISTOP1-ISTRT1+1
              ELSE
                ISTRT2=IVSTAR(I4)
                ISTOP2=IVSTOP(I4)
                NLEN2=ISTOP2-ISTRT2+1
              ENDIF
C
              IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCM')THEN
                WRITE(ICOUT,3121)I,I4,IVALT,IVSTAR(I4),IVSTOP(I4)
 3121           FORMAT('I,I4,IVALT,IVSTAR(I4),IVSTOP(I4) = ',5I6)
                CALL DPWRST('XXX','BUG ')
              ENDIF
C
              GOTO3199
            ENDIF
          ENDIF
 3100   CONTINUE
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3103)IHRIGH,IHRIG2
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3115)
 3115   FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
C
 3199   CONTINUE
C
 3000 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  DETERMINE IF STRINGS ARE THE SAME              **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCM')THEN
        ISTEPN='3B'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,3211)I,ISTRT1,ISTOP1,NLEN1,ISTRT2,ISTOP2,NLEN2
 3211   FORMAT('I,ISTRT1,ISTOP1,NLEN1,ISTRT2,ISTOP2,NLEN2 = ',7I5)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3214)ICASEL
 3214   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NLEN1.GT.IMAXLN)NLEN1=IMAXLN
      IF(NLEN2.GT.IMAXLN)NLEN2=IMAXLN
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCM')THEN
        WRITE(ICOUT,3223)IMAXLN,NLEN1,NLEN2
 3223   FORMAT('IMAXLN,NLEN1,NLEN2 = ',3I6)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IVAL=1
      IF(NLEN1.NE.NLEN2)THEN
        IVAL=0
      ELSE
        DO3310II=1,NLEN1
          IINDX1=ISTRT1+II-1
          IINDX2=ISTRT2+II-1
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCM')THEN
            WRITE(ICOUT,3381)II,IINDX1,IINDX2,IFLAGC
 3381       FORMAT('II,IINDX1,IINDX2,IFLAGC = ',4I6)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(IFLAGC.EQ.0)THEN
C
            IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCM')THEN
              WRITE(ICOUT,3391)IFUNC(IINDX1),IFUNC(IINDX2)
 3391         FORMAT('IFUNC(IINDX1),IFUNC(IINDX2) = ',A4,2X,A4)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            IF(IFUNC(IINDX1)(1:1).NE.IFUNC(IINDX2)(1:1))THEN
              IVAL=0
              GOTO3319
            ENDIF
          ELSE
            IVALC1=IFUNC(IINDX1)(1:1)
            IVALC2=IFUNC(IINDX2)(1:1)
            CALL DPCOAN(IVALC1,IJUNK1)
            IF(IJUNK1.GE.65 .AND. IJUNK1.LE.90)IJUNK1=IJUNK1+32
            CALL DPCOAN(IVALC2,IJUNK2)
            IF(IJUNK2.GE.65 .AND. IJUNK2.LE.90)IJUNK2=IJUNK2+32
            IF(IJUNK1.NE.IJUNK2)THEN
              IVAL=0
              GOTO3319
            ENDIF
          ENDIF
C
 3310   CONTINUE
 3319   CONTINUE
      ENDIF
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE PARAMETER                                 **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'PARA')THEN
C
        ISTEPN='4A'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCM')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='P'
        VALUE(ILISTL)=REAL(IVAL)
        IVALUE(ILISTL)=INT(VALUE(ILISTL)+0.5)
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,15111)IHLEFT,IHLEF2,IVAL
15111     FORMAT(A4,A4,' CONTAINS THE VALUE ',I4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ELSEIF(ICASEL.EQ.'ELEM')THEN
C
C       SEARCH IANS STRING FOR "(xx) =".  IF NO PARENTHESIS
C       FOUND BEFORE "=", THEN DO NOT KNOW WHAT ROW OF THE
C       VARIABLE TO SAVE.  TREAT THIS AS AN ERROR.
C
        NLEFT=-1
        NRIGHT=-1
        NEQUAL=-1
        DO16001I=1,IWIDTH
          IF(IANS(I)(1:1).EQ.'(' .AND. NLEFT.LT.0)THEN
            NLEFT=I
          ELSEIF(IANS(I)(1:1).EQ.')' .AND. NRIGHT.LT.0)THEN
            NRIGHT=I
          ELSEIF(IANS(I)(1:1).EQ.'=' .AND. NEQUAL.LT.0)THEN
            NEQUAL=I
          ENDIF
16001   CONTINUE
C
C       NEED  NLEFT < NRIGHT < NEQUAL
C
        NSTRT=NLEFT+1
        NSTOP=NRIGHT-1
        NLEN=NSTOP-NSTRT+1
        IF(NLEFT.GT.NRIGHT .OR. NRIGHT.GT.NEQUAL .OR.
     1     NSTRT.GT.NSTOP .OR. NLEN.GT.8) THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16011)
16011     FORMAT('      UNRECOGNIZED SYNTAX FOR VARIABLE ELEMENT ON')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16013)
16013     FORMAT('      LEFT HAND SIDE EQUAL SIGN.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSE
          ISTR=' '
          DO16020I=1,NLEN
            ISTR(I:I)=IANS(NSTRT+I-1)(1:1)
16020     CONTINUE
          READ(ISTR,'(I8)',ERR=16029)IARGL
          GOTO16049
C
16029     CONTINUE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16011)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16013)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
16049     CONTINUE
        ENDIF
C
        IF(IARGL.LT.1 .OR. IARGL.GT.MAXN)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16052)IARGL,ILEFT
16052     FORMAT('      THE SPECIFIED ROW (',I8,') OF VARIABLE ',A4,A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16054)
16054     FORMAT('      WAS LESS THAN 1 OR GREATER THAN THE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16055)MAXN
16055     FORMAT('      MAXIMUM ALLOWABLE ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IF(NEWNAM.EQ.'YES')THEN
          NIOLD=1
        ENDIF
        NINEW=NIOLD
        IF(IARGL.GT.NINEW)NINEW=IARGL
        NS2=1
C
        RIGHT=REAL(IVAL)
        IJ=MAXN*(ICOLL-1)+IARGL
        IF(ICOLL.LE.MAXCOL)V(IJ)=RIGHT
        IF(ICOLL.EQ.MAXCP1)PRED(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP2)RES(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP3)YPLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP4)XPLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP5)X2PLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP6)TAGPLO(IARGL)=RIGHT
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='V'
        IVALUE(ILISTL)=ICOLL
        VALUE(ILISTL)=ICOLL
        IN(ILISTL)=NINEW
C
        IF(NEWNAM.EQ.'YES')THEN
          NUMNAM=NUMNAM+1
          NUMCOL=NUMCOL+1
        ENDIF
C
        DO16200J4=1,NUMNAM
          IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL)THEN
            IUSE(J4)='V'
            IVALUE(J4)=ICOLL
            VALUE(J4)=ICOLL
            IN(J4)=NINEW
            GOTO16209
          ENDIF
16200   CONTINUE
16209   CONTINUE
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16211)IVAL
16211     FORMAT('THE RESULT OF THE STRING COMPARISON  = ',I4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
      GOTO9000
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCM')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTCM--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTCN(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--CONCATENATE ONE OR MORE STRINGS.
C     EXAMPLE--LET SOUT = STRING CONCATENATE S1 S2 S3 S4
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/11
C     ORIGINAL VERSION--NOVEMBER  2008.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='CN  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCN')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTCN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING CONCATENATE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  LOOP THROUGH THE NAMES ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LT.5)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3003)
 3003   FORMAT('      THERE ARE NO STRINGS SPECIFIED ON THE RIGHT ',
     1         'HAND SIDE')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      ICNT=0
      DO3000I=5,NUMARG
C
        IHRIGH=IHARG(I)
        IHRIG2=IHARG2(I)
C
        DO3100J=1,NUMNAM
          I4=J
          IF(IHRIGH.EQ.IHNAME(J).AND.IHRIG2.EQ.IHNAM2(J))THEN
            IF(IUSE(I4).NE.'F')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2001)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3103)IHRIGH,IHRIG2
 3103         FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1               A4,A4,')')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3105)
 3105         FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ELSE
              ISTART=IVSTAR(I4)
              ISTOP=IVSTOP(I4)
              NLEN=ISTOP-ISTART+1
              GOTO3199
            ENDIF
          ENDIF
 3100   CONTINUE
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3103)IHRIGH,IHRIG2
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3115)
 3115   FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
C
 3199   CONTINUE
C
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  ADD THE CURRENT STRING                         **
C               *****************************************************
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCN')THEN
          ISTEPN='3B'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,3211)I,ISTART,ISTOP,NLEN
 3211     FORMAT('I,ISTART,ISTOP,NLEN = ',4I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3214)ICASEL
 3214     FORMAT('ICASEL = ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(NLEN.GE.1)THEN
          DO3310II=ISTART,ISTOP
            ICNT=ICNT+1
            IFUNC2(ICNT)=IFUNC(II)
 3310     CONTINUE
        ENDIF
C
 3000 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='4'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCN')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCN')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTCN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTCB(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT THE FOLLOWING COMMAND
C
C                LET SOUT = STRING COMBINE X1 TO X8
C
C              THIS COMMAND IS SIMILAR TO THE STRING CONCATENATE, BUT
C              DIFFERS IN THE FOLLOWING WAYS:
C
C                 1) WITH STRING CONCATENATE, THE ARGUMENTS ARE
C                    PREVIOUSLY DEFINED STRINGS.  WITH STRING COMBINE,
C                    WE FIRST CHECK TO SEE IF THE ARGUMENT IS THE
C                    NAME OF A PREVIOUSLY DEFINED STRING.  IF YES,
C                    ADD THE CONTENTS OF THE STRING TO THE OUTPUT
C                    STRING.  IF NOT, TREAT THE ARGUMENT AS LITERAL TEXT
C                    TO BE ADDED TO THE STRING.
C
C                 2) THIS COMMAND PUTS SPACES BETWEEN THE ARGUMENTS
C                    IN THE OUTPUT STRING.
C
C                 3) YOU CAN USE THE "TO" SYNTAX WITH THIS COMMAND.
C
C               THIS IS A RATHER SPECIALIZED COMMAND.  IT IS USEFUL FOR
C               CREATING COMMAND STRINGS WHERE THE "TO" SYNTAX IS NOT
C               SUPPORTED.  FOR EXAMPLE,
C
C                   LET STALL = STRING COMBINE X1 TO X^K
C                   LET FLAG  = DEX CHECK CLASSIC ^STALL
C
C                IN ADDITION, IT CAN BE USED AS AN ALTERNATIVE TO
C                "STRING CONCATENATE" WITH THE DIFFERENCE BEING THAT
C                A SPACE IS AUTOMATICALLY ADDED BETWEEN THE INPUT
C                STRINGS (YOU HAVE TO DO THIS MANUALLY WITH "STRING
C                CONCATENATE).
C
C     EXAMPLES--LET SOUT = STRING COMBINE S1 S2 S3 S4
C               LET SOUT = STRING COMBINE Y X1 TO X8
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018/02
C     ORIGINAL VERSION--FEBRUARY  2018.
C     UPDATED         --SEPTEMBER 2019. ALLOW USER TO SPECIFY THE
C                                       SEPARATOR CHARACTER
C     UPDATED         --FEBRUARY  2020. FIX:
C                                       LET S = STRING COMBINE X1 TO X1
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISEPZZ
C
      CHARACTER*4 ILAB(10)
C
      PARAMETER (MAXIND=100)
      CHARACTER*4 IVARN1(MAXIND)
      CHARACTER*4 IVARN2(MAXIND)
      CHARACTER*4 IVARTY(MAXIND)
      REAL PVAR(MAXIND)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='CB  '
      IERROR='NO'
      ISEPZZ='    '
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCB')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTCB--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ISTRCS,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,ISTRCS,NUMNAM = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,2A4,2X,A4,2I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
      IF(ISTRCS.EQ.'SP()' .OR. ISTRCS.EQ.'    ')THEN
        ISEPZZ=' '
        NCSEP=1
      ELSE
        DO110II=4,1,-1
          IF(ISTRCS(II:II).NE.' ')THEN
            ISEPZZ(1:II)=ISTRCS(1:II)
            NCSEP=II
            GOTO119
          ENDIF
  110   CONTINUE
  119   CONTINUE
      ENDIF
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCB')THEN
        ISTEPN='2'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,101)NCSEP,ISEPZZ
  101   FORMAT('NCSEP,ISEPZZ = ',I5,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING COMBINE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  LOOP THROUGH THE NAMES ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LT.5)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3003)
 3003   FORMAT('      THERE ARE NO STRINGS SPECIFIED ON THE RIGHT ',
     1         'HAND SIDE')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     USE EXTVA2 TO EXTRACT LIST OF NAMES (EXTVA2 SUPPORTS THE "TO"
C     SYNTAX AND WILL ALSO RETURN TYPE OF EACH NAME).
C
      IFLAGM=1
      IFLAGP=1
      IFLAGT=1
      JMIN=5
      JMAX=NUMARG
      CALL EXTVA2(IHARG,IHARG2,IARGT,ARG,NUMARG,JMIN,JMAX,MAXIND,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,
     1            IVARN1,IVARN2,IVARTY,PVAR,NUMIND,
     1            IFLAGM,IFLAGP,IFLAGT,
     1            IBUGA3,ISUBRO,IERROR)
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCB')THEN
        WRITE(ICOUT,3006)IERROR,NUMIND
 3006   FORMAT('AFTER EXTVA2: IERROR,NUMIND = ',A4,2X,I5)
        CALL DPWRST('XXX','BUG ')
        DO3007KK=1,NUMIND
          WRITE(ICOUT,3008)KK,IVARN1(KK),IVARN2(KK),IVARTY(KK)
 3008     FORMAT('KK,IVARN1(KK),IVARN2(KK),IVARTY(KK) = ',I5,3(2X,A4))
          CALL DPWRST('XXX','BUG ')
 3007   CONTINUE
      ENDIF
C
      IF(IERROR.EQ.'YES')GOTO9000
C
C     NOW LOOP THROUGH EACH NAME.  IF NAME IS A PREVIOUSLY DEFINED
C     STRING, INSERT THE CONTENTS OF THAT STRING.  OTHERWISE, SIMPLY
C     INSERT THE LITERAL NAME INTO THE STRING.
C
      ICNT=0
      DO3000I=1,NUMIND
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCB')THEN
          ISTEPN='3B'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,3001)I,ICASEL,IVARN1(I),IVARN2(I),IVARTY(I)
 3001     FORMAT('I,ICASEL,IVARN1(I),IVARN2(I),IVARTY(I) = ',
     1           I5,A4,2X,2A4,2X,A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C               *****************************************************
C               **  STEP 3A--                                      **
C               **  ADD CURRENT ARGUMENT AS LITERAL STRING         **
C               *****************************************************
C
        IF(IVARTY(I).NE.'F   ')THEN
          NLEN=1
          DO3110J=4,1,-1
            IF(IVARN2(I)(J:J).NE.' ')THEN
              NLEN=4+J
              GOTO3119
            ENDIF
 3110     CONTINUE
          DO3115J=4,1,-1
            IF(IVARN1(I)(J:J).NE.' ')THEN
              NLEN=J
              GOTO3119
            ENDIF
 3115     CONTINUE
 3119     CONTINUE
C
          DO3120J=1,MIN(4,NLEN)
            ICNT=ICNT+1
            IFUNC2(ICNT)=IVARN1(I)(J:J)
 3120     CONTINUE
          IF(NLEN.GE.5)THEN
            DO3125J=5,MIN(8,NLEN)
              ICNT=ICNT+1
              IFUNC2(ICNT)=IVARN2(I)(J-4:J-4)
 3125       CONTINUE
          ENDIF
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCB')THEN
            ISTEPN='3C'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,3127)I,NLEN,ICNT
 3127       FORMAT('I,NLEN,ICNT = ',3I8)
            CALL DPWRST('XXX','BUG ')
            DO3128KK=1,ICNT
              WRITE(ICOUT,3129)KK,IFUNC2(KK)
 3129         FORMAT('KK,IFUNC2(KK) = ',I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
 3128       CONTINUE
          ENDIF
C
        ELSE
C
C               *****************************************************
C               **  STEP 3B--                                      **
C               **  ADD THE CURRENT STRING                         **
C               *****************************************************
C
          DO3201KK=1,NUMNAM
            IF(IVARN1(I).EQ.IHNAME(KK).AND.IVARN2(I).EQ.IHNAM2(KK))THEN
              I4=KK
              GOTO3209
            ENDIF
 3201     CONTINUE
 3209     CONTINUE
          ISTART=IVSTAR(I4)
          ISTOP=IVSTOP(I4)
          NLEN=ISTOP-ISTART+1
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCB')THEN
            ISTEPN='3B'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,3211)ICASEL,I,I4,ISTART,ISTOP,NLEN
 3211       FORMAT('ICASEL: I,I4,ISTART,ISTOP,NLEN = ',A4,2X,5I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(NLEN.GE.1)THEN
            DO3310II=ISTART,ISTOP
              ICNT=ICNT+1
              IFUNC2(ICNT)=IFUNC(II)
 3310       CONTINUE
          ENDIF
        ENDIF
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCB')THEN
          WRITE(ICOUT,3311)I,NUMIND,NCSEP,ICNT
 3311     FORMAT('I,NUMIND,NCSEP,ICNT = ',4I5)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(I.LT.NUMIND)THEN
          DO3315II=1,NCSEP
            ICNT=ICNT+1
            IFUNC2(ICNT)=ISEPZZ(II:II)
C
            IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCB')THEN
              WRITE(ICOUT,3318)II,ICNT,IFUNC2(ICNT)
 3318         FORMAT('II,ICNT,IFUNC2(ICNT) = ',2I5,2X,A4)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
 3315     CONTINUE
        ENDIF
C
 3000 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='4'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCB')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCB')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTCB--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTCO(ICASEZ,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT THE FOLLOWING COMMAND:
C
C                 LET IFLAG = STRING CONTAINS SORG SMATCH
C
C              THAT IS, WE CHECK WHETHER A STRING (SORG) CONTAINS THE
C              SPECIFIC SUBSTRING (SMATCH) OR NOT.  IF SO, IFLAG IS SET
C              TO 1, OTHERWISE IT IS SET TO 0.
C     NOTE--THE FOLLOWING SYNTAX IS NOT SUPPORTED FOR THIS COMMAND:
C              LET Y(2) = STRING CONTINS  S  SUBSTRING
C           ALSO, THE STRINGS ON THE RIGHT HAND SIDE MUST BOTH BE
C           PREVIOUSLY DEFINED.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2019/01
C     ORIGINAL VERSION--JANUARY   2019.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASEZ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='CO  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM,NUMCHF,MAXCHF
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM,NUMCHF,MAXCHF = ',2(A4,2X),4I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE FIRST ARGUMENT ON THE                *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASEL='PARA'
            ILISTL=I2
            NUMTMP=NUMNAM
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING CONTAINS--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='PARA'
C
      ILISTL=NUMNAM+1
      NUMTMP=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IINDX=5
      IHRIGH=IHARG(IINDX)
      IHRIG2=IHARG2(IINDX)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B-                                       **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IINDX=IINDX+1
      IHRI21=IHARG(IINDX)
      IHRI22=IHARG2(IINDX)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT2=IVSTAR(I4)
            ISTOP2=IVSTOP(I4)
            NLEN2=ISTOP2-ISTRT2+1
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CHECK FOR MATCHING STRINGS                     **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCO')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,NLEN1
 4011   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4012)ISTRT2,ISTOP2,NLEN2
 4012   FORMAT('ISTART,ISTOP,NLEN2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL,ICASEZ
 4013   FORMAT('ICASEL,ICASEZ = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IMATCH=0
      IF(NLEN2.GT.NLEN1)GOTO4199
      NTEMP=ISTOP1-NLEN2+1
      DO4100J=ISTRT1,NTEMP
        ICNT=ISTRT2
        DO4110I=J,J+NLEN2-1
          IF(IFUNC(I)(1:1).NE.IFUNC(ICNT)(1:1))GOTO4100
          ICNT=ICNT+1
 4110   CONTINUE
        IMATCH=1
        GOTO4199
 4100 CONTINUE
 4199 CONTINUE
C
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE PARAMETER                                 **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'PARA')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCO')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='P'
        VALUE(ILISTL)=REAL(IMATCH)
        IVALUE(ILISTL)=IMATCH
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(IMATCH.EQ.0)THEN
            WRITE(ICOUT,5011)IHLEFT,IHLEF2,IMATCH
5011        FORMAT('MATCH NOT FOUND, ',2A4,'  = ',I3)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,5013)IHLEFT,IHLEF2,IMATCH
5013        FORMAT('MATCH FOUND, ',2A4,'  = ',I3)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTCO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTCR(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT THE COMMAND
C
C              LET SNEW = STRING COMPARE AND REPLACE SOLD SREPLACE ...
C                                SC1 ... SCK
C
C              WHERE
C                  SC1 ... SCK   = A LIST OF PRE-EXISTING STRINGS
C                  SOLD          = A PRE-EXISTING STRING THAT WILL BE
C                                  COMPARED TO SC1 ... SCK
C                  SREPLACE      = IF A MATCH IS FOUND BETWEEN SOLD
C                                  AND ONE OF THE SC1 ... SCK, SET
C                                  SNEW TO SREPLACE.
C
C     EXAMPLE--LET SNEW = STRING SOLD SREPL S1 TO S16
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018/03
C     ORIGINAL VERSION--MARCH     2018.
C     UPDATED         --JANUARY   2021. FIX BUG IF NO MATCH FOUND AND
C                                       FEEDBACK SWITCH OFF
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      INCLUDE 'DPCOPA.INC'
C
      CHARACTER*4 IWRITE
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*8 IHTEMP
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*255 ISTR1
      CHARACTER*255 ISTR2
      CHARACTER*255 ISTR3
      CHARACTER*4 ILAB(10)
C
      PARAMETER(MAXIND=1000)
      CHARACTER*4 ISTRN1(MAXIND)
      CHARACTER*4 ISTRN2(MAXIND)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='CR  '
      IERROR='NO'
C
      ILOC3=0
      MAXTMP=80
      IFLAG2=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCR')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTCR--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM,NUMCHF,MAXCHF
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM,NUMCHF,MAXCHF = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,2A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING COMPARE AND REPLACE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  LOOP THROUGH THE NAMES ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LT.9)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3003)
 3003   FORMAT('      THERE MUST BE AT LEAST THREE STRINGS SPECIFIED ',
     1         'TO THE RIGHT HAND SIDE OF THE EQUAL SIGN')
        CALL DPWRST('XXX','BUG ')
        NTEMP=NUMARG-6
        WRITE(ICOUT,3005)NTEMP
 3005   FORMAT('      THE NUMBER OF STRINGS SPECIFIED IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ******************************************************
C               **  STEP 3A--                                        *
C               **  THE FIRST ARGUMENT ON THE RHS IS THE "OLD"       *
C               **  STRING.  THIS MUST BE A PREVIOUSLY DEFINED       *
C               ******************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     CHECK FOR THE "OLD" STRING (THIS MUST CURRENTLY EXIST)
C
      IHRIGH=IHARG(7)
      IHRIG2=IHARG2(7)
C
      DO3100I=1,NUMNAM
        I2=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ISTART=IVSTAR(I2)
            ISTOP=IVSTOP(I2)
            NLEN1=ISTOP-ISTART+1
            IF(NLEN1.GE.1)THEN
              ICNT=0
              DO3110II=ISTART,ISTOP
                ICNT=ICNT+1
                ISTR1(ICNT:ICNT)=IFUNC(II)(1:1)
 3110         CONTINUE
              GOTO3109
            ELSE
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2001)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3101)IHRIGH,IHRIG2
 3101         FORMAT('      THE FIRST NAME ON THE RIGHT HAND SIDE (',
     1               A4,A4,')')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3102)
 3102         FORMAT('      IS A ZERO LENGTH STRING.')
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ENDIF
            GOTO3109
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3103)IHRIGH,IHRIG2
 3103       FORMAT('      THE FIRST NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3105)
 3105       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 3100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3113)IHRIGH,IHRIG2
 3113 FORMAT('      THE FIRST NAME ON THE RIGHT HAND SIDE (',
     1       A4,A4,')')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3115)
 3115 FORMAT('      IS NOT DEFINED (THIS NAME DEFINES THE ORIGINAL ',
     1       'STRING).')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3109 CONTINUE
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')THEN
        WRITE(ICOUT,3121)NLEN1,ISTR1(1:NLEN1)
 3121   FORMAT('NLEN1,ISTR1(1:NLEN1) = ',I5,2X,A80)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************************
C               **  STEP 3B--                                           *
C               **  THE SECOND ARGUMENT ON THE RHS IS THE "REPLACEMENT" *
C               **  STRING.  THIS MUST BE A PREVIOUSLY DEFINED          *
C               *********************************************************
C
C     FOR THE REPLACEMENT STRING, HAVE 2 CASES:
C
C        1. THE STRING IS CURRENTLY IN THE NAME TABLE.  SET IFLAG = 1.
C
C        2. THE STRING IS NOT CURRENTLY IN THE NAME TABLE.  SET IFLAG = 0.
C           IN THIS CASE, TREAT THE STRING AS THE "BASE" NAME.  THEN
C           IF A MATCH IS FOUND, LOOK FOR THE STRING WITH AN "INDEX"
C           ATTACHED.  FOR EXAMPLE, IF THE REPLACEMENT STRING IS
C           STC AND IT IS THE SECOND STRING IN THE LIST THAT IS MATCHED
C           TO THE "OLD" STRING, THEN LOOK FOR THE STRING "STC2" TO BE
C           THE REPLACEMENT STRING.
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
      IHRIGH=IHARG(8)
      IHRIG2=IHARG2(8)
      ICNT=0
C
      DO3200I=1,NUMNAM
        I2=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ISTART=IVSTAR(I2)
            ISTOP=IVSTOP(I2)
            NLEN2=ISTOP-ISTART+1
            IF(NLEN2.GE.1)THEN
              ICNT=0
              DO3210II=ISTART,ISTOP
                ICNT=ICNT+1
                IF(ICNT.LE.MAXTMP)THEN
                  ISTR2(ICNT:ICNT)=IFUNC(II)(1:1)
                ELSE
                  WRITE(ICOUT,999)
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,2001)
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,3241)IHRIGH,IHRIG2
 3241             FORMAT('      THE SECOND NAME ON THE RIGHT HAND ',
     1                   'SIDE (',2A4,')')
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,3243)MAXTMP
 3243             FORMAT('      EXCEEDS ',I5,' CHARACTERS.')
                  CALL DPWRST('XXX','BUG ')
                  IERROR='YES'
                  GOTO9000
                ENDIF
 3210         CONTINUE
            ELSE
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2001)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3201)IHRIGH,IHRIG2
 3201         FORMAT('      THE SECOND NAME ON THE RIGHT HAND SIDE (',
     1               A4,A4,')')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3202)
 3202         FORMAT('      IS A ZERO LENGTH STRING.')
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ENDIF
            IFLAG=1
            GOTO3209
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3203)IHRIGH,IHRIG2
 3203       FORMAT('      THE SECOND NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3205)
 3205       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 3200 CONTINUE
C
      IFLAG=0
CCCCC WRITE(ICOUT,999)
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,2001)
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,3213)IHRIGH,IHRIG2
C3213 FORMAT('      THE SECOND NAME ON THE RIGHT HAND SIDE (',
CCCCC1       A4,A4,')')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,3215)
C3215 FORMAT('      IS NOT DEFINED (THIS NAME DEFINES THE ',
CCCCC1       'REPLACEMENT STRING).')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC IERROR='YES'
CCCCC GOTO9000
C
 3209 CONTINUE
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')THEN
        WRITE(ICOUT,3221)IFLAG,NLEN2,ICNT,ISTR2(1:MAX(1,NLEN2))
 3221   FORMAT('IFLAG,NLEN2,ICNT,ISTR2(1:NLEN2) = ',3I5,2X,A80)
        CALL DPWRST('XXX','BUG ')
        IF(IFLAG.EQ.0)THEN
          WRITE(ICOUT,3223)
 3223     FORMAT('NO MATCH FOUND FOR REPLACEMENT STRING.  DEFER ',
     1           'CHECK UNTIL LATER.')
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
C               *********************************************************
C               **  STEP 3C--                                           *
C               **  NOW SEARCH THROUGH THE REMAINING STRINGS AND SEE    *
C               **  IF A MATCH FOUND.                                   *
C               *********************************************************
C
      ISTEPN='3c'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      JMIN=9
      JMAX=NUMARG
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCR')THEN
        WRITE(ICOUT,3301)JMIN,JMAX,MAXIND
 3301   FORMAT('JMIN,JMAX,MAXIND = ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IWRITE='OFF'
      IERROR='NO'
C
      CALL EXTSTR(IHARG,IHARG2,NUMARG,JMIN,JMAX,MAXIND,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,
     1            ISTRN1,ISTRN2,NUMSTR,
     1            IWRITE,IBUGA3,ISUBRO,IERROR)
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCR')THEN
        WRITE(ICOUT,3303)NUMSTR,IERROR
 3303   FORMAT('NUMSTR,IERROR = ',I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NUMSTR.GE.1)THEN
          DO3305JJ=1,NUMSTR
            WRITE(ICOUT,3304)JJ,ISTRN1(JJ),ISTRN2(JJ)
 3304       FORMAT('JJ,ISTRN1(JJ),ISTRN2(JJ) = ',I8,2X,2A4)
            CALL DPWRST('XXX','BUG ')
 3305     CONTINUE
        ENDIF
      ENDIF
C
C     FOR NOW, ONLY SUPPORT THE CASE FOR PRE-DEFINED STRINGS.
C     THAT IS, LITERAL TEXT (E.G., "Case 1") NOT SUPPORTED.
C
      IF(IERROR.EQ.'YES')GOTO9000
C
C     CASE WHERE WE ARE EXTRACTING PREVIOUSLY DEFINED STRINGS
C
      DO3310I2=1,NUMSTR
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCR')THEN
          WRITE(ICOUT,3311)I2
 3311     FORMAT('AT 3310L I2 = ',I5)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        ICNT=0
        DO3315I=1,NUMNAM
          II=I
          IF(ISTRN1(I2).EQ.IHNAME(I) .AND. ISTRN2(I2).EQ.IHNAM2(I))THEN
            IINDX=I2
            ISTART=IVSTAR(II)
            ISTOP=IVSTOP(II)
            NLEN3=ISTOP-ISTART+1
C
C           ZERO LENGTH STRINGS ARE NOT A MATCH
C
            IF(NLEN3.LT.1)GOTO3310
            ICNT=0
            DO3330II=ISTART,ISTOP
              ICNT=ICNT+1
              IF(ICNT.LE.MAXTMP)THEN
                ISTR3(ICNT:ICNT)=IFUNC(II)(1:1)
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,2001)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,3361)ISTRN1(I),ISTRN2(I)
 3361           FORMAT('      THE STRING ',2A4,' EXCEEDS ',I5,
     1                 ' CHARACTERS.')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 3330       CONTINUE
            GOTO3319
          ENDIF
 3315   CONTINUE
C
C       NO MATCH FOUND FOR STRING NAME.  DON'T TREAT THIS AS AN
C       ERROR, SIMPLY IGNORE AND MOVE ON TO NEXT STRING.
C
CCCCC   WRITE(ICOUT,999)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,2001)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,3323)ISTRN1(I2),ISTRN2(I2)
C3323   FORMAT('       STRING ',A4,A4,' NOT MATCHED IN NAME ',
CCCCC1         'TABLE.')
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   IERROR='YES'
        GOTO3310
C
 3319   CONTINUE
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')THEN
          WRITE(ICOUT,3321)IFLAG,NLEN3,ICNT,ISTR3(1:MAX(1,NLEN3))
 3321     FORMAT('IFLAG,NLEN3,ICNT,ISTR3(1:ICNT) = ',3I5,2X,A80)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C       NOW SEE IF CURRENT STRING MATCHES.
C
        IF(NLEN1.NE.NLEN3)GOTO3310
        DO3340JJ=1,NLEN3
          IF(ISTR1(JJ:JJ).NE.ISTR3(JJ:JJ))GOTO3310
 3340   CONTINUE
C
C       STRING MATCH FOUND, SAVE "REPLACEMENT" STRING IN IFUNC2.  BUT
C       FIRST CHECK TO SEE IF WE NEED TO RECHECK REPLACEMENT STRING.
C
        IF(IFLAG.EQ.0)THEN
C
          ISTEPN='3D'
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IHTEMP(1:4)=IHRIGH(1:4)
          IHTEMP(5:8)=IHRIG2(1:4)
          ILAST=8
          DO3501JJ=8,1,-1
            IF(IHTEMP(JJ:JJ).NE.' ')THEN
              ILAST=JJ
              GOTO3509
            ENDIF
 3501     CONTINUE
 3509     CONTINUE
          IF(IINDX.LE.9)THEN
            IF(ILAST.LE.7)THEN
              IFLAG2=1
              WRITE(IHTEMP(ILAST+1:ILAST+1),'(I1)')IINDX
            ELSE
              IFLAG2=0
            ENDIF
          ELSEIF(IINDX.LE.99)THEN
            IF(ILAST.LE.6)THEN
              IFLAG2=1
              WRITE(IHTEMP(ILAST+1:ILAST+2),'(I2)')IINDX
            ELSE
              IFLAG2=0
            ENDIF
          ELSEIF(IINDX.LE.999)THEN
            IF(ILAST.LE.5)THEN
              IFLAG2=1
              WRITE(IHTEMP(ILAST+1:ILAST+3),'(I3)')IINDX
            ELSE
              IFLAG2=0
            ENDIF
          ENDIF
          IHRIGH=IHTEMP(1:4)
          IHRIG2=IHTEMP(5:8)
          IF(IFLAG2.EQ.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3213)IHRIGH,IHRIG2
 3213       FORMAT('      THE SECOND NAME ON THE RIGHT HAND SIDE (',
     1             2A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3215)
 3215       FORMAT('      IS NOT DEFINED (THIS NAME DEFINES THE ',
     1             'REPLACEMENT STRING).')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
C
          DO3500KK=1,NUMNAM
C
            IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCR')THEN
              WRITE(ICOUT,3506)KK
 3506         FORMAT('AT 3500L KK = ',I5)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            K2=KK
            IF(IHRIGH.EQ.IHNAME(KK).AND.IHRIG2.EQ.IHNAM2(KK))THEN
              IF(IUSE(K2).EQ.'F')THEN
                ISTART=IVSTAR(K2)
                ISTOP=IVSTOP(K2)
                NLEN2=ISTOP-ISTART+1
                IF(NLEN2.GE.1)THEN
                  ICNT=0
                  DO3510II=ISTART,ISTOP
                    ICNT=ICNT+1
                    ISTR2(ICNT:ICNT)=IFUNC(II)(1:1)
 3510             CONTINUE
                ELSE
                  WRITE(ICOUT,999)
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,2001)
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,3201)IHRIGH,IHRIG2
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,3202)
                  CALL DPWRST('XXX','BUG ')
                  IERROR='YES'
                  GOTO9000
                ENDIF
                IFLAG=1
                GOTO3519
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,2001)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,3203)IHRIGH,IHRIG2
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,3205)
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
            ENDIF
 3500     CONTINUE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3213)IHRIGH,IHRIG2
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3215)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
 3519     CONTINUE
        ENDIF
C
        DO3345JJ=1,NLEN2
          IFUNC2(JJ)='   '
          IFUNC2(JJ)(1:1)=ISTR2(JJ:JJ)
 3345   CONTINUE
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')THEN
          ISTEPN='3D'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,3350)NLEN2
 3350     FORMAT('NLEN2 = ',I5)
          CALL DPWRST('XXX','BUG ')
          DO3355JJ=1,NLEN2
            WRITE(ICOUT,3357)JJ,IFUNC2(JJ)
 3357       FORMAT('JJ,IFUNC2(JJ) = ',I5,2X,A4)
            CALL DPWRST('XXX','BUG ')
 3355     CONTINUE
        ENDIF
C
        GOTO3390
 3310 CONTINUE
C
      ISTEPN='3E'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     2021/01: MOVE THE GOTO9000 OUTSIDE THE FEEDBACK BLOCK
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3401)IHARG(7),IHARG2(7)
 3401   FORMAT('NO MATCH FOUND FOR ',2A4,'.  NOTHING DONE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
CCCCC   GOTO9000
      ENDIF
      GOTO9000
C
 3390 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPINFU(IFUNC2,NLEN2,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1            NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
     1            NEWNAM,MAXNAM,
     1            IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
C
      ISTEPN='4B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCR')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IERROR.EQ.'YES')GOTO9000
C
      ILAB(1)='TO T'
      ILAB(2)='HE F'
      ILAB(3)='UNCT'
      ILAB(4)='ION '
      ILAB(5)='    '
      ILAB(6)=' -- '
      NUMWDL=6
      IF(IFEEDB.EQ.'ON' .OR. IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606   FORMAT('THE NAME ',2A4,' HAS JUST BEEN EQUIVALENCED ')
        CALL DPWRST('XXX','BUG ')
        CALL DPPRIF(ILAB,NUMWDL,IFUNC2,NLEN2,IBUGA3)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCR')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTCR--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTCT(ICASE,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--CHECK IF THE ARGUMENTS SPECIFIED ON THE COMMAND ARE
C              OF THE SPECIFIED TYPE
C     EXAMPLE--LET IFLAG = CHECK TYPE VARIABLE S1 S2 S3
C            --LET IFLAG = CHECK TYPE STRING S1 S2 S3
C            --LET IFLAG = CHECK TYPE S1 S2 S3
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2015/03
C     ORIGINAL VERSION--MARCH     2015.
C     UPDATED         --MAY       2018. ADD OPTION TO CHECK IF
C                                       TYPE IS LITERAL NUMERIC
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*8 ISTR
C
      PARAMETER (MAXIND=100)
      CHARACTER*4 IVARN1(MAXIND)
      CHARACTER*4 IVARN2(MAXIND)
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='CT  '
      IERROR='NO'
C
      ILOC3=0
      ICOLL=0
      ILISTL=0
      NIOLD=0
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCT')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTCT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASE,NUMNAM,NUMCHF,MAXCHF
   52   FORMAT('IBUGA3,ISUBRO,ICASE,NUMNAM,NUMCHF,MAXCHF = ',
     1         3(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCT')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE LEFT-HAND SIDE--                     *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCT')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO1910I=1,4
        IF(IHLEFT(I:I).EQ.'(')THEN
          IHLEFT(I:4)=' '
          IHLEF2=' '
          ICASEL='ELEM'
          GOTO1999
        ENDIF
 1910 CONTINUE
      DO1920I=1,4
        IF(IHLEF2(I:I).EQ.'(')THEN
          IHLEF2(I:4)=' '
          ICASEL='ELEM'
          GOTO1999
        ENDIF
 1920 CONTINUE
 1999 CONTINUE
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASEL='PARA'
            ILISTL=I2
            GOTO2900
          ELSEIF(IUSE(I2).EQ.'V')THEN
            ICASEL='ELEM'
            ILISTL=I2
            ICOLL=IVALUE(ILISTL)
            NIOLD=IN(ILISTL)
            GOTO2900
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN CHECK TYPE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='PARA'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2900 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE NAMES ON THE RIGHT HAND SIDE       **
C               *****************************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCT')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFRST=5
      IF(ICASE.NE.'UNKN')IFRST=IFRST+1
      IF(NUMARG.LT.IFRST)THEN
        IFLAG=-1
        GOTO3900
      ENDIF
      IFLAG=1
C
      JMIN=IFRST
      JMAX=NUMARG
      CALL EXTVA3(IHARG,IHARG2,NUMARG,JMIN,JMAX,MAXIND,
     1            IHNAME,IHNAM2,NUMNAM,
     1            IVARN1,IVARN2,NUMIND,
     1            IBUGA3,ISUBRO,IERROR)
      IERROR='NO'
C
      DO3010II=1,NUMIND
        IHRIGH=IVARN1(II)
        IHRIG2=IVARN2(II)
        DO3020I=1,NUMNAM
          I4=I
          IF(ICASE.EQ.'VARI')THEN
            IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
              IF(IUSE(I).NE.'V')THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,2001)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,3021)IHRIGH,IHRIG2
 3021           FORMAT('      NAME ',2A4,' IS NOT A VARIABLE.')
                CALL DPWRST('XXX','BUG ')
                IFLAG=0
              ENDIF
              GOTO3010
            ENDIF
          ELSEIF(ICASE.EQ.'STRI')THEN
            IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
              IF(IUSE(I).NE.'F')THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,2001)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,3022)IHRIGH,IHRIG2
 3022           FORMAT('      NAME ',2A4,' IS NOT A STRING/FUNCTION.')
                CALL DPWRST('XXX','BUG ')
                IFLAG=0
              ENDIF
              GOTO3010
            ENDIF
          ELSEIF(ICASE.EQ.'PARA')THEN
            IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
              IF(IUSE(I).NE.'P')THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,2001)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,3023)IHRIGH,IHRIG2
 3023           FORMAT('      NAME ',2A4,' IS NOT A PARAMETER.')
                CALL DPWRST('XXX','BUG ')
                IFLAG=0
              ENDIF
              GOTO3010
            ENDIF
          ELSEIF(ICASE.EQ.'MATR')THEN
            IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
              IF(IUSE(I).NE.'M')THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,2001)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,3024)IHRIGH,IHRIG2
 3024           FORMAT('      NAME ',2A4,' IS NOT A MATRIX.')
                CALL DPWRST('XXX','BUG ')
                IFLAG=0
              ENDIF
              GOTO3010
            ENDIF
          ELSEIF(ICASE.EQ.'NUMB')THEN
            IVAL=IFRST+II-1
            IF(IARGT(IVAL).NE.'NUMB')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,2001)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3033)IHRIGH,IHRIG2
 3033         FORMAT('      NAME ',2A4,' IS NOT A NUMBER.')
              CALL DPWRST('XXX','BUG ')
              IFLAG=0
            ENDIF
            GOTO3010
          ELSE
            IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
              IF(IUSE(I).EQ.'V')ICASE='VARI'
              IF(IUSE(I).EQ.'F')ICASE='STRI'
              IF(IUSE(I).EQ.'P')ICASE='PARA'
              IF(IUSE(I).EQ.'M')ICASE='MATR'
              GOTO3010
            ENDIF
          ENDIF
 3020   CONTINUE
C
        IFLAG=0
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3043)IHRIGH,IHRIG2
 3043   FORMAT('      NAME ',2A4,' WAS NOT FOUND IN THE CURRENT NAME ',
     1         'LIST.')
        CALL DPWRST('XXX','BUG ')
C
 3010 CONTINUE
C
 3900 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  SAVE PARAMETER                                 **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCT')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTART,ISTOP,IVAL
 4011   FORMAT('ISTART,ISTOP,IVAL = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASEL.EQ.'PARA')THEN
C
        ISTEPN='4A'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCT')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='P'
        VALUE(ILISTL)=REAL(IFLAG)
        IVALUE(ILISTL)=IFLAG
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
      ELSEIF(ICASEL.EQ.'ELEM')THEN
C
C       SEARCH IANS STRING FOR "(xx) =".  IF NO PARENTHESIS
C       FOUND BEFORE "=", THEN DO NOT KNOW WHAT ROW OF THE
C       VARIABLE TO SAVE.  TREAT THIS AS AN ERROR.
C
        NLEFT=-1
        NRIGHT=-1
        NEQUAL=-1
        DO4201I=1,IWIDTH
          IF(IANS(I)(1:1).EQ.'(' .AND. NLEFT.LT.0)THEN
            NLEFT=I
          ELSEIF(IANS(I)(1:1).EQ.')' .AND. NRIGHT.LT.0)THEN
            NRIGHT=I
          ELSEIF(IANS(I)(1:1).EQ.'=' .AND. NEQUAL.LT.0)THEN
            NEQUAL=I
          ENDIF
 4201   CONTINUE
C
C       NEED  NLEFT < NRIGHT < NEQUAL
C
        NSTRT=NLEFT+1
        NSTOP=NRIGHT-1
        NLEN=NSTOP-NSTRT+1
        IF(NLEFT.GT.NRIGHT .OR. NRIGHT.GT.NEQUAL .OR.
     1     NSTRT.GT.NSTOP .OR. NLEN.GT.8) THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4211)
 4211     FORMAT('      UNRECOGNIZED SYNTAX FOR VARIABLE ELEMENT ON ',
     1           'LEFT HAND SIDE EQUAL SIGN.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSE
          ISTR=' '
          DO4216I=1,NLEN
            ISTR(I:I)=IANS(NSTRT+I-1)(1:1)
 4216     CONTINUE
          READ(ISTR,'(I8)',ERR=4218)IARGL
          GOTO4219
C
 4218     CONTINUE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4211)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
 4219     CONTINUE
        ENDIF
C
        IF(IARGL.LT.1 .OR. IARGL.GT.MAXN)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4231)IARGL,ILEFT
 4231     FORMAT('      THE SPECIFIED ROW (',I8,') OF VARIABLE ',A4,A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4233)
 4233     FORMAT('      WAS LESS THAN 1 OR GREATER THAN THE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4235)MAXN
 4235     FORMAT('      MAXIMUM ALLOWABLE ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IF(NEWNAM.EQ.'YES')THEN
          NIOLD=1
        ENDIF
        NINEW=NIOLD
        IF(IARGL.GT.NINEW)NINEW=IARGL
        NS2=1
C
        RIGHT=REAL(IFLAG)
        IJ=MAXN*(ICOLL-1)+IARGL
        IF(ICOLL.LE.MAXCOL)V(IJ)=RIGHT
        IF(ICOLL.EQ.MAXCP1)PRED(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP2)RES(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP3)YPLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP4)XPLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP5)X2PLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP6)TAGPLO(IARGL)=RIGHT
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='V'
        IVALUE(ILISTL)=ICOLL
        VALUE(ILISTL)=ICOLL
        IN(ILISTL)=NINEW
C
        IF(NEWNAM.EQ.'YES')THEN
          NUMNAM=NUMNAM+1
          NUMCOL=NUMCOL+1
        ENDIF
C
        DO4290J4=1,NUMNAM
          IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL)THEN
            IUSE(J4)='V'
            IVALUE(J4)=ICOLL
            VALUE(J4)=ICOLL
            IN(J4)=NINEW
            GOTO4299
          ENDIF
 4290   CONTINUE
 4299   CONTINUE
C
      ENDIF
C
      IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8011)IFLAG
 8011   FORMAT('THE STATUS FLAG FOR CHECK TYPE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STCT')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTCT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTDE(ICASEZ,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT THE FOLLOWING COMMAND:
C
C                 LET SOUT = STRING DELETE SORG SCHAR
C
C              FOR EACH CHARACTER IN THE STRING "SCHAR", SEARCH
C              THE STRING "SORG" AND REMOVE THAT CHARACTER IF FOUND.
C
C              THE STRINGS ON THE RIGHT HAND SIDE MUST BOTH BE
C              PREVIOUSLY DEFINED.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018/10
C     ORIGINAL VERSION--OCTOBER   2018.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASEZ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='DE  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STDE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTDE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,2A4,2X,A4,2I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STDE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE FIRST ARGUMENT ON THE                *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STDE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING DELETE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      NUMTMP=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STDE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IINDX=5
      IHRIGH=IHARG(IINDX)
      IHRIG2=IHARG2(IINDX)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B-                                       **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STDE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IINDX=IINDX+1
      IHRI21=IHARG(IINDX)
      IHRI22=IHARG2(IINDX)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT2=IVSTAR(I4)
            ISTOP2=IVSTOP(I4)
            NLEN2=ISTOP2-ISTRT2+1
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CHECK FOR CHARACTERS TO DELETE                 **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STDE')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,NLEN1
 4011   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4012)ISTRT2,ISTOP2,NLEN2
 4012   FORMAT('ISTART,ISTOP,NLEN2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL,ICASEZ
 4013   FORMAT('ICASEL,ICASEZ = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ICNT=0
      DO4100I=ISTRT1,ISTOP1
        DO4200J=ISTRT2,ISTOP2
          IF(IFUNC(I).EQ.IFUNC(J))GOTO4199
 4200   CONTINUE
        ICNT=ICNT+1
        IFUNC2(ICNT)=' '
        IFUNC2(ICNT)(1:1)=IFUNC(I)(1:1)
 4199 CONTINUE
 4100 CONTINUE
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING                                    **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STDE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STDE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTDE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTED(IFLAGG,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--EDIT A PREVIOUSLY DEFINED STRING
C     EXAMPLE--LET SOUT = STRING EDIT SORG SOLD SNEW
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/11
C     ORIGINAL VERSION--NOVEMBER  2008.
C     UPDATED         --FEBRUARY  2015. SUPPORT "NULL()" FOR
C                                       REPLACEMENT STRING
C     UPDATED         --FEBRUARY  2015. ADD A "GLOBAL" OPTION
C                                       (IFLAGG PARAMETER)
C     UPDATED         --MARCH     2015. CALL LIST TO DPINFU
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
      CHARACTER*4 IHRI31
      CHARACTER*4 IHRI32
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='ED  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STED')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTED--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM,IFLAGG
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM,IFLAGG = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STED')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
      IPASS=0
C
 1000 CONTINUE
      IPASS=IPASS+1
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STED')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING EDIT--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STED')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     2015/02: FOR GLOBAL EDIT CASE, ON SECOND PASS OR GREATER WE
C              WILL BE EDITING THE "OUTPUT" STRING RATHER THAN THE
C              INPUT STRING.
C
      IF(IPASS.EQ.1)THEN
        NINDX=5
        IF(IFLAGG.EQ.1)NINDX=6
      ELSE
        NINDX=1
      ENDIF
      IHRIGH=IHARG(NINDX)
      IHRIG2=IHARG2(NINDX)
C
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B-                                       **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STED')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPASS.GT.1)GOTO3199
C
      NINDX=NINDX+1
      IHRI21=IHARG(NINDX)
      IHRI22=IHARG2(NINDX)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT2=IVSTAR(I4)
            ISTOP2=IVSTOP(I4)
            NLEN2=ISTOP2-ISTRT2+1
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               *****************************************************
C               **  STEP 3C-                                       **
C               **  EXTRACT THE THIRD  NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STED')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPASS.GT.1)GOTO3299
C
C     2015/02: CHECK TO SEE IF LITERAL "NULL()" GIVEN AS ARGUMENT
C
      NINDX=NINDX+1
      IF(IHARG(NINDX).EQ.'NULL' .AND. IHARG2(NINDX).EQ.'()')THEN
        NLEN3=0
        GOTO3299
      ENDIF
C
      IHRI31=IHARG(NINDX)
      IHRI32=IHARG2(NINDX)
      DO3200I=1,NUMNAM
        I4=I
        IF(IHRI31.EQ.IHNAME(I).AND.IHRI32.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI31,IHRI32
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            I4SAVE=I4
            ISTRT3=IVSTAR(I4)
            ISTOP3=IVSTOP(I4)
            NLEN3=ISTOP3-ISTRT3+1
C
C           2015/02: CHECK FOR "NULL()" OR "null()" TO
C                    DENOTE A NULL STRING
C
            IF(NLEN3.EQ.6 .AND. IFUNC(ISTOP3-1).EQ.'(' .AND.
     1         IFUNC(ISTOP3).EQ.')')THEN
              IF(IFUNC(ISTRT3).EQ.'N' .AND.
     1           IFUNC(ISTRT3+1).EQ.'U' .AND.
     1           IFUNC(ISTRT3+2).EQ.'L' .AND.
     1           IFUNC(ISTRT3+3).EQ.'L')THEN
                NLEN3=0
              ELSEIF(IFUNC(ISTRT3).EQ.'n' .AND.
     1           IFUNC(ISTRT3+1).EQ.'u' .AND.
     1           IFUNC(ISTRT3+2).EQ.'l' .AND.
     1           IFUNC(ISTRT3+3).EQ.'l')THEN
                NLEN3=0
              ENDIF
            ENDIF
            GOTO3299
          ENDIF
        ENDIF
 3200 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI31,IHRI32
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3299 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  PERFORM THE STRING EDIT                        **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STED')THEN
        ISTEPN='4A'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,NLEN1,IPASS
 4011   FORMAT('ISTRT1,ISTOP1,NLEN1,IPASS = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4012)ISTRT2,ISTOP2,NLEN2
 4012   FORMAT('ISTRT2,ISTOP2,NLEN2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ISTRT3,ISTOP3,NLEN3
 4013   FORMAT('ISTRT3,ISTOP3,NLEN3 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4014)ICASEL
 4014   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     CHECK TO SEE IF A MATCH FOUND
C
      IMATCH=0
      NLAST=ISTOP1-NLEN2+1
      IF(NLAST.GE.ISTRT1)THEN
        DO4100I=ISTRT1,NLAST
          ICNT=0
          DO4110J=I,I+NLEN2-1
            ICNT=ICNT+1
            IINDX=ISTRT2+ICNT-1
            IF(IFUNC(J)(1:1).NE.IFUNC(IINDX)(1:1))GOTO4100
 4110     CONTINUE
          IMATCH=1
          NSTART=I
          GOTO4199
 4100   CONTINUE
 4199   CONTINUE
      ENDIF
C
      IF(IMATCH.EQ.0)THEN
C
        IF(IPASS.GT.1)GOTO8000
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4191)IHRI21,IHRI22,IHRIGH,IHRIG2
 4191   FORMAT('       NO MATCH FOR STRING ',A4,A4,' FOUND IN ',
     1         'STRING ',A4,A4)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     IF MATCH FOUND, PERFORM THE EDIT
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STED')THEN
        ISTEPN='4B'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4196)IMATCH,NSTART
 4196   FORMAT('IMATCH,NSTART = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     COPY THE PORTION OF THE STRING UP TO THE EDIT POINT
C
      ICNT=0
      IF(NSTART.GT.1)THEN
        DO4210I=ISTRT1,NSTART-1
          ICNT=ICNT+1
          IFUNC2(ICNT)=IFUNC(I)
 4210   CONTINUE
      ENDIF
C
C     NOW INSERT THE "NEW" STRING
C
      IF(NLEN3.GE.1)THEN
        DO4120I=1,NLEN2
          ICNT=ICNT+1
          IINDX=I+ISTRT3-1
          IFUNC2(ICNT)=IFUNC(IINDX)
 4120   CONTINUE
      ENDIF
C
C     NOW INSERT THE PART OF THE ORIGINAL STRING AFTER THE EDIT POINT
C
      NTEMP=NSTART+NLEN2
      IF(NTEMP.LE.ISTOP1)THEN
        DO4130I=NTEMP,ISTOP1
          ICNT=ICNT+1
          IFUNC2(ICNT)=IFUNC(I)
 4130   CONTINUE
      ENDIF
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STED')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1            NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1            NEWNAM,MAXN3,
     1            NEWNAM,MAXNAM,
     1            IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C     2015/02: FOR GLOBAL EDIT, RESTART THE EDIT
C
      IF(IFLAGG.EQ.0)GOTO8000
      GOTO1000
C
 8000 CONTINUE
C
      IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8606)IHLEFT,IHLEF2
 8606   FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
        CALL DPWRST('XXX','BUG ')
        ILAB(1)='TO T'
        ILAB(2)='HE F'
        ILAB(3)='UNCT'
        ILAB(4)='ION '
        ILAB(5)='    '
        ILAB(6)=' -- '
        NUMWDL=6
        CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STED')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTED--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTE2(Y,W,N,YS,MAXN,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--FORM A STEM AND LEAF DIAGRAM
C     OUTPUT--A STEM AND LEAF DIAGRAM
C             OF SMOOTHED VALUES.
C     NOTE--THE VECTOR Y REMAINS UNCHANGED.
C     LANGUAGE--ANSI FORTRAN (1977)
C     REFERENCES--MCNEIL, INTERACTIVE DATA ANALYSIS
C                 1977, PAGE 23
C                 (= SOURCE OF ALGORITHM).
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     VERSION NUMBER--83.6
C     ORIGINAL VERSION--JULY      1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*1 IA
      CHARACTER*1 M
      CHARACTER*1 IOUT
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION W(*)
      DIMENSION YS(*)
C
      DIMENSION IOUT(132)
      DIMENSION IA(20)
      DIMENSION M(4)
C
      INCLUDE 'DPCOP2.INC'
C
C---------------------------------------------------------------------
C
      DATA IA(1)/'0'/
      DATA IA(2)/'1'/
      DATA IA(3)/'2'/
      DATA IA(4)/'3'/
      DATA IA(5)/'4'/
      DATA IA(6)/'5'/
      DATA IA(7)/'6'/
      DATA IA(8)/'7'/
      DATA IA(9)/'8'/
      DATA IA(10)/'9'/
      DATA IA(11)/'0'/
      DATA IA(12)/'1'/
      DATA IA(13)/'2'/
      DATA IA(14)/'3'/
      DATA IA(15)/'4'/
      DATA IA(16)/'5'/
      DATA IA(17)/'6'/
      DATA IA(18)/'7'/
      DATA IA(19)/'8'/
      DATA IA(20)/'9'/
C
      DATA M(1)/'-'/
      DATA M(2)/' '/
      DATA M(3)/':'/
      DATA M(4)/'+'/
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
C
      IWIDTH=50
      SCALE=1.0
      EPS=0.00000001
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'STE2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTE2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGG3,ISUBRO,N,MAXN
   52   FORMAT('IBUGG3,ISUBRO,N,MAXN = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,Y(I),W(I)
   56     FORMAT('I,Y(I),W(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               ************************************
C               **  FORM A STEM-AND-LEAF DIAGRAM  **
C               ************************************
C
      IF(N.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
  111   FORMAT('***** ERROR IN STEM AND LEAF PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,112)
  112   FORMAT('     NUMBER OF OBSERVATIONS IS LESS THAN TWO.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)N
  113   FORMAT('NUMBER OF OBSERVATIONS = ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C
C               *********************
C               **  STEP 1--       **
C               **  SORT THE DATA  **
C               *********************
C
      CALL SORT(Y,N,YS)
C
C     STEP 2--
C     DEFINE C
C
      RANGE=YS(N)-YS(1)
      R=EPS+RANGE/SCALE
C
      C=10.0**(11-INT(LOG10(R)+10.0))
      ARG1=INT(R*C/25.0)
      ARG2=0
      MAX=INT(ARG1+0.1)
      IF(ARG2.GT.ARG1)MAX=INT(ARG2+0.1)
C
      ARG1=2
      ARG2=MAX
      MM=INT(ARG1+0.1)
      IF(ARG2.LT.ARG1)MM=INT(ARG2+0.1)
C
      K=3*MM+2-150/(N+50)
      IPROD=(K-1)*(K-2)*(K-5)
      IF(IPROD.EQ.0)C=C*10
C
C     STEP 3--
C     DEFINE MU
C
      MU=10
      IPROD=K*(K-4)*(K-8)
      IF(IPROD.EQ.0)MU=5
      IPROD=(K-1)*(K-5)*(K-6)
      IF(IPROD.EQ.0)MU=20
C
      I=1
      IF(YS(1).GE.0)I=2
      I2=1
      TERM=INT(YS(I2)*C/MU)+I-2
      D=MU*TERM/10.0
C
C               *****************************************
C               **  STEP XX--                          **
C               **  SET UP A LOOP IN WHICH             **
C               **  EACH ITERATION OF THE LOOP         **
C               **  WILL FORM A NEW LINE (ROW) OF THE  **
C               **  STEM AND LEAF DIAGRAM              **
C               *****************************************
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
 1000 CONTINUE
C
C               *****************************************************
C               **  STEP XX--                                      **
C               **  FORM THE NEXT OUTPUT LINE OF THE STEM AND LEAF **
C               **  DIAGRAM.  FILL THE OUTPUT LINE WITH BLANKS.    **
C               *****************************************************
C
      DO1100K=1,IWIDTH
      IOUT(K)=' '
 1100 CONTINUE
C
      IF(I.EQ.2.OR.D.LE.0)GOTO1290
      I=2
      D=D-MU/10.0
 1290 CONTINUE
C
      ICOL=0
 1300 CONTINUE
      ICOL=ICOL+1
      TERM1=YS(I2)*C-10*INT(D)
      IY=INT(0.5+ABS(TERM1))
      IF(YS(I2)*C-10*D.GE.0.5+(MU-1)*(I-1))GOTO1390
      IF(ICOL.LE.IWIDTH)IOUT(ICOL)=IA(1+IY)
      I2=I2+1
      IF(I2.GT.N)GOTO1390
      GOTO1300
 1390 CONTINUE
C
      ID=MOD(IABS(INT(D)),100)
      K1=1+ID/10
      K2=1+ID-10*(K1-1)
      IF(ICOL.LE.IWIDTH+1)GOTO1490
      IOUT(IWIDTH-2)='+'
      IOUT(IWIDTH-1)=IA(1+(ICOL-IWIDTH+2)/10)
      IOUT(IWIDTH)=IA(ICOL-IWIDTH+3-10*((ICOL-IWIDTH+2)/10))
 1490 CONTINUE
C
C               **********************************************
C               **  STEP XX--                               **
C               **  WRITE OUT THE OUTPUT LINE FOR THIS ROW  **
C               **********************************************
C
      K=IWIDTH
      IF(ICOL.LT.IWIDTH)K=ICOL
      WRITE(ICOUT,1510)M(I),IA(K1),IA(K2),M(2),M(3),M(2),
     1(IOUT(ICOL),ICOL=1,K)
 1510 FORMAT(132A1)
      CALL DPWRST('XXX','BUG ')
C
C               *****************************************************
C               **  STEP XX--                                      **
C               **  JUMP BACK TO THE BEGINNING OF THE LOOP         **
C               **  TO WORK ON THE NEXT LINE (ROW) OF THE DIAGRAM  **
C               *****************************************************
C
      IF(I2.GT.N)GOTO9000
      D=D+MU/10.0
      GOTO1000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'STE2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTE2--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTEM(IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A STEM AND LEAF DIAGRAM.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--83/7
C     ORIGINAL VERSION--JULY      1983.
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C     UPDATED         --MARCH     2011. USE DPPARS AND DPPAR3
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION TEMP(MAXOBV)
C
      DIMENSION W(MAXOBV)
CCCCC FOLLOWING LINES ADDED JUNE, 1990
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),W(1))
      EQUIVALENCE (GARBAG(IGARB2),TEMP(1))
CCCCC END CHANGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPSU'
      ISUBN2='MM  '
      IFOUND='NO'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ************************************
C               **  TREAT THE STEM AND LEAF CASE  **
C               ************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'STEM')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTEM--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'PLOT')THEN
        ISHIFT=1
      ELSEIF(NUMARG.GE.1.AND.
     1       IHARG(1).EQ.'DIAG'.AND.IHARG2(1).EQ.'RAM')THEN
        ISHIFT=1
      ELSEIF(NUMARG.GE.2.AND.
     1       IHARG(1).EQ.'AND'.AND.IHARG(2).EQ.'PLOT')THEN
        ISHIFT=2
      ELSEIF(NUMARG.GE.2.AND.
     1       IHARG(2).EQ.'AND'.AND.IHARG(2).EQ.'DIAG'.AND.
     1       IHARG2(2).EQ.'RAM')THEN
        ISHIFT=2
      ELSEIF(NUMARG.GE.2.AND.
     1       IHARG(1).EQ.'LEAF'.AND.IHARG(2).EQ.'PLOT')THEN
        ISHIFT=2
      ELSEIF(NUMARG.GE.2.AND.
     1       IHARG(2).EQ.'LEAF'.AND.
     1       IHARG(2).EQ.'DIAG'.AND.IHARG2(2).EQ.'RAM')THEN
        ISHIFT=2
      ELSEIF(NUMARG.GE.3.AND.
     1       IHARG(1).EQ.'AND'.AND.IHARG(2).EQ.'LEAF'.AND.
     1       IHARG(3).EQ.'PLOT')THEN
        ISHIFT=3
      ELSEIF(NUMARG.GE.3.AND.
     1       IHARG(1).EQ.'AND'.AND.IHARG(2).EQ.'LEAF'.AND.
     1       IHARG(3).EQ.'DIAG'.AND.IHARG2(3).EQ.'RAM')THEN
        ISHIFT=3
      ELSEIF(NUMARG.GE.3.AND.
     1       IHARG(1).EQ.'AND'.AND.IHARG(2).EQ.'LEAF')THEN
        ISHIFT=2
      ELSE
        GOTO9000
      ENDIF
C
      IFOUND='YES'
      CALL ADJUST(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'STEM')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='STEM AND LEAF PLOT'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=1
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA2,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'STEM')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),IVARTY(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),IVARTY(I) = ',I8,2X,A4,A4,2X,3I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      ICOL=1
      CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y,Y,Y,NS,NLOCA2,NLOCA3,ICASE,
     1            IBUGA3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ****************************************************
C               **  STEP 8--                                      **
C               **  PREPARE FOR ENTRANCE INTO DPSTE2--            **
C               **  SET THE WEIGHT VECTOR TO UNITY THROUGHOUT.    **
C               ****************************************************
C
      ISTEPN='8'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'STEM')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1110I=1,NS
      W(I)=1.0
 1110 CONTINUE
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'STEM')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1211)
 1211   FORMAT('***** FROM DPSTEM, AS WE ARE ABOUT TO CALL DPSTE2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1212)NS
 1212   FORMAT('NS = ',I8)
        CALL DPWRST('XXX','BUG ')
        DO1215I=1,NS
          WRITE(ICOUT,1216)I,Y(I),W(I)
 1216     FORMAT('I,Y(I),W(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 1215   CONTINUE
      ENDIF
C
      CALL DPSTE2(Y,W,NS,TEMP,MAXN,IBUGA3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'STEM')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTEM--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTGL(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--EXTRACT GROUP LABELS TO STRING
C     EXAMPLE--LET STEMP = GROUP LABEL TO STRINGS IG
C
C              SO IF THE GROUP LABEL VARIABLE "IG" HAS 10 LABELS,
C              THEN THESE WILL BE EXTRACTED TO STRINGS STEMP1, STEMP2,
C              ..., STEMP10
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/10
C     ORIGINAL VERSION--OCTOBER   2011.
C     UPDATED         --MARCH     2015. CALL LIST TO DPINFU
C     UPDATED         --JUNE      2018. ADD BASE STRING TO
C                                       CONTAIN ALL LEVELS
C                                       COMBINED
C     UPDATED         --JUNE      2018. ADD PARAMETER THAT
C                                       SPECIFIES NUMBER OF
C                                       LEVELS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*8 IHLEFT
      CHARACTER*8 ISTRIN
      CHARACTER*8 ISTRBA
      CHARACTER*4 IHLEF3
      CHARACTER*4 IHLEF4
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*40 ISTRZZ
      CHARACTER*4  ISTRZ2(1000)
      CHARACTER*1000 ISTRZX
C
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='GL  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STGL')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTGL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  CHECK IF VARIABLE ON RHS IS **
C               **  A GROUP LABEL VARIABLE.     **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STGL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IGVAR=0
      IHRIGH=IHARG(7)
      IHRIG2=IHARG2(7)
C
      DO110I=1,MAXGRP
        IF(IHRIGH(1:4).EQ.IGRPVN(I)(1:4) .AND.
     1     IHRIG2(1:4).EQ.IGRPVN(I)(5:8))THEN
            IGVAR=I
            GOTO119
        ENDIF
  110 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,121)
  121 FORMAT('***** ERROR IN GROUP LABEL TO STRINGS COMMAND--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,123)IHRIGH,IHRIG2
  123 FORMAT('      ',A4,A4,' NOT RECOGNIZED AS A PREVIOUSLY DEFINED ',
     1       'GROUP LABEL VARIABLE.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
  119 CONTINUE
C
C               **********************************
C               **  STEP 2--                    **
C               **  DETERMINE NUMBER OF STRINGS **
C               **  TO CREATE (LOOK FOR FIRST   **
C               **  BLANK LABEL).               **
C               **********************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STGL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NSTR=200
      DO210I=1,MAXGLA
        IF(IGRPLA(I,IGVAR).EQ.' ')THEN
          NSTR=I-1
          GOTO219
        ENDIF
  210 CONTINUE
  219 CONTINUE
      IF(NSTR.GT.999)NSTR=999
      IF(NSTR.LT.1)GOTO9000
C
C               *************************************************
C               **  STEP 3--                                   **
C               **  EXTRACT THE BASE NAME ON THE LHS OF THE    **
C               **  EQUAL SIGN AND THEN LOOP THROUGH THE       **
C               **  NUMBER OF STRINGS TO CREATE.               **
C               *************************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STGL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT(1:4)=IHARG(1)
      IHLEFT(5:8)=IHARG2(1)
      NBASE=1
      DO310I=8,1,-1
        IF(IHLEFT(I:I).NE.' ')THEN
          NBASE=I
          GOTO319
        ENDIF
  310 CONTINUE
  319 CONTINUE
C
      IF(NSTR.LE.9)THEN
        IF(NBASE.GT.7)NBASE=7
      ELSEIF(NSTR.LE.99)THEN
        IF(NBASE.GT.6)NBASE=6
      ELSE
        IF(NBASE.GT.5)NBASE=5
      ENDIF
      ISTRBA(1:8)=IHLEFT(1:8)
      ISTRBA(NBASE+1:8)=' '
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STGL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NTOT=0
      ISTRZX=' '
      DO410I=1,NSTR
C
        ISTRZZ=' '
        ISTRIN=' '
        ISTRIN(1:NBASE)=IHLEFT(1:NBASE)
        IF(I.LE.9)THEN
          WRITE(ISTRIN(NBASE+1:NBASE+1),'(I1)')I
        ELSEIF(I.LE.99)THEN
          WRITE(ISTRIN(NBASE+1:NBASE+2),'(I2)')I
        ELSE
          WRITE(ISTRIN(NBASE+1:NBASE+3),'(I3)')I
        ENDIF
C
        NCHAR=40
        DO420J=40,1,-1
          IF(IGRPLA(I,IGVAR)(J:J).NE.' ')THEN
            NCHAR=J
            GOTO429
          ENDIF
  420   CONTINUE
        NCHAR=1
  429   CONTINUE
C
        ISTRZZ(1:NCHAR)=IGRPLA(I,IGVAR)(1:NCHAR)
        NSTRT=NTOT+1
        NSTOP=NTOT+NCHAR
        IF(NSTOP.LE.999)THEN
          ISTRZX(NSTRT:NSTOP)=ISTRZZ(1:NCHAR)
          NTOT=NSTOP
          IF(I.LT.NSTR)THEN
            NTOT=NTOT+1
            ISTRZX(NTOT:NTOT)=' '
          ENDIF
        ENDIF
C
        NEWNAM='NO'
        NEWCOL='NO'
        ICASEL='UNKN'
        NIOLD1=0
        ICOLL=0
C
C               ******************************************************
C               **  STEP 5--                                         *
C               **  EXAMINE THE CURRENT STRING--                     *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STGL')
     1     CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        DO510II=1,NUMNAM
          I2=II
          IF(ISTRIN(1:4).EQ.IHNAME(I2).AND.
     1       ISTRIN(5:8).EQ.IHNAM2(I2))THEN
            IF(IUSE(I2).EQ.'F')THEN
              ICASEL='STRI'
              ILISTL=I2
              GOTO519
            ELSE
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,121)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,513)ISTRIN
  513         FORMAT('      THE NAME ',A8,' ALREADY EXISTS, BUT NOT ',
     1               'AS A STRING.')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,515)
  515         FORMAT('      THIS STRING WILL NOT BE CREATED.')
              CALL DPWRST('XXX','BUG ')
              GOTO9000
            ENDIF
          ENDIF
  510   CONTINUE
  519   CONTINUE
C
        NEWNAM='YES'
        ICASEL='STRI'
C
        ILISTL=NUMNAM+1
        IF(ILISTL.GT.MAXNAM)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,121)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,522)
  522     FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1           'FUNCTION')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,524)MAXNAM
  524     FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
C               *****************************************************
C               **  STEP 6--                                       **
C               **  ADD THE CURRENT STRING                         **
C               *****************************************************
C
        ISTEPN='6'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STGL')
     1     CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHLEF3=ISTRIN(1:4)
        IHLEF4=ISTRIN(5:8)
        DO411J=1,NCHAR
          ISTRZ2(J)=' '
          ISTRZ2(J)(1:1)=ISTRZZ(J:J)
  411   CONTINUE
C
        CALL DPINFU(ISTRZ2,NCHAR,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEF3,IHLEF4,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
  410 CONTINUE
C
C               *****************************************************
C               **  STEP 7--                                       **
C               **  PRINT FEEDBACK MESSAGE                         **
C               *****************************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STGL')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,710)NSTR
  710   FORMAT(I5,' STRINGS HAVE BEEN CREATED FROM THE GROUP LABELS.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IHLEF3='NUMS'
      IHLEF4='TRIN'
      VALUE0=REAL(NSTR)
      CALL DPADDP(IHLEF3,IHLEF4,VALUE0,IHOST1,ISUBN0,
     1            IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,IBUGA3,IERROR)
C
C               ******************************************************
C               **  STEP 8--                                         *
C               **  EXAMINE THE BASE STRING--                        *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='8'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STGL')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
      DO810II=1,NUMNAM
        I2=II
        IF(ISTRBA(1:4).EQ.IHNAME(I2).AND.
     1     ISTRBA(5:8).EQ.IHNAM2(I2))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO819
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,121)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,513)ISTRBA
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,515)
            CALL DPWRST('XXX','BUG ')
            GOTO9000
          ENDIF
        ENDIF
  810 CONTINUE
  819 CONTINUE
C
      NEWNAM='YES'
      ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,121)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,522)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,524)MAXNAM
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *****************************************************
C               **  STEP 8B--                                      **
C               **  ADD THE BASE STRING                            **
C               *****************************************************
C
      ISTEPN='8B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STGL')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEF3=ISTRBA(1:4)
      IHLEF4=ISTRBA(5:8)
      DO831J=1,NTOT
        ISTRZ2(J)=' '
        ISTRZ2(J)(1:1)=ISTRZX(J:J)
  831 CONTINUE
C
      CALL DPINFU(ISTRZ2,NTOT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1            NUMNAM,IANS,IWIDTH,IHLEF3,IHLEF4,ILISTL,
     1            NEWNAM,MAXNAM,
     1            IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STGL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTGL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTHD(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--RETURN THE HAMMING DISTANCE BETWEEN TWO STRINGS.
C              THE HAMMING DISTANCE IS THE NUMBER OF CHARACTERS
C              IN THE TWO STRINGS THAT ARE DIFFERENT.
C     EXAMPLE--LET NLEN = STRING HAMMING DISTANCE S1 S2
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018/09
C     ORIGINAL VERSION--SEPTEMBER 2018.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRIG3
      CHARACTER*4 IHRIG4
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*8 ISTR
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='HD  '
      IERROR='NO'
C
      ILOC3=0
C
C               *****************************************************
C               **  TREAT THE SUBCASE OF THE LET FUNCTION COMMAND  **
C               **  WHICH DEFINES A FUNCTION                       **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STHD')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTHD--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STHD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      NIOLD=0
      ICOLL=0
      ICOL2=0
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE LEFT-HAND SIDE--                     *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STHD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO1910I=1,4
        IF(IHLEFT(I:I).EQ.'(')THEN
          IHLEFT(I:4)=' '
          IHLEF2=' '
          ICASEL='ELEM'
          GOTO1999
        ENDIF
 1910 CONTINUE
      DO1920I=1,4
        IF(IHLEF2(I:I).EQ.'(')THEN
          IHLEF2(I:4)=' '
          ICASEL='ELEM'
          GOTO1999
        ENDIF
 1920 CONTINUE
 1999 CONTINUE
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASEL='PARA'
            ILISTL=I2
            GOTO2900
          ELSEIF(IUSE(I2).EQ.'V')THEN
            ICASEL='ELEM'
            ILISTL=I2
            ICOLL=IVALUE(ILISTL)
            NIOLD=IN(ILISTL)
            GOTO2900
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING HAMMING DISTANCE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='PARA'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2900 CONTINUE
C
C               *****************************************************
C               **  STEP 3A--                                      **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STHD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(6)
      IHRIG2=IHARG2(6)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE FIRST NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            IVAL1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B--                                      **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STHD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIG3=IHARG(7)
      IHRIG4=IHARG2(7)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRIG3.EQ.IHNAME(I).AND.IHRIG4.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3103)IHRIG3,IHRIG4
 3103       FORMAT('      THE SECOND NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT2=IVSTAR(I4)
            ISTOP2=IVSTOP(I4)
            IVAL2=ISTOP2-ISTRT2+1
            GOTO3900
          ENDIF
        ENDIF
 3100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3900 CONTINUE
C
      IF(IVAL1.NE.IVAL2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3901)
 3901   FORMAT('      THE TWO STRINGS ARE NOT THE SAME LENGTH.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3902)IVAL1
 3902   FORMAT('      STRING ONE HAS ',I6,' CHARACTERS.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3903)IVAL2
 3903   FORMAT('      STRING TWO HAS ',I6,' CHARACTERS.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  SAVE PARAMETER                                 **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STHD')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,IVAL1
 4011   FORMAT('ISTRT1,ISTOP1,IVAL1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4012)ISTRT2,ISTOP2,IVAL2
 4012   FORMAT('ISTRT2,ISTOP2,IVAL2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ICNT=0
      DO4020I=1,IVAL1
        IF(IFUNC(ISTRT1+I-1).NE.IFUNC(ISTRT2+I-1))ICNT=ICNT+1
 4020 CONTINUE
C
      IF(ICASEL.EQ.'PARA')THEN
C
        ISTEPN='4A'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STHD')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='P'
        VALUE(ILISTL)=REAL(ICNT)
        IVALUE(ILISTL)=INT(VALUE(ILISTL)+0.5)
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,15111)IHLEFT,IHLEF2,IHRIGH,IHRIG2,IHRIG3,IHRIG4
15111     FORMAT(2A4,' CONTAINS THE HAMMING DISTANCE OF STRINGS ',
     1           2A4,' AND ',2A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,15113)ICNT
15113     FORMAT('THE HAMMING DISTANCE = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ELSEIF(ICASEL.EQ.'ELEM')THEN
C
C       SEARCH IANS STRING FOR "(xx) =".  IF NO PARENTHESIS
C       FOUND BEFORE "=", THEN DO NOT KNOW WHAT ROW OF THE
C       VARIABLE TO SAVE.  TREAT THIS AS AN ERROR.
C
        NLEFT=-1
        NRIGHT=-1
        NEQUAL=-1
        DO16001I=1,IWIDTH
          IF(IANS(I)(1:1).EQ.'(' .AND. NLEFT.LT.0)THEN
            NLEFT=I
          ELSEIF(IANS(I)(1:1).EQ.')' .AND. NRIGHT.LT.0)THEN
            NRIGHT=I
          ELSEIF(IANS(I)(1:1).EQ.'=' .AND. NEQUAL.LT.0)THEN
            NEQUAL=I
          ENDIF
16001   CONTINUE
C
C       NEED  NLEFT < NRIGHT < NEQUAL
C
        NSTRT=NLEFT+1
        NSTOP=NRIGHT-1
        NLEN=NSTOP-NSTRT+1
        IF(NLEFT.GT.NRIGHT .OR. NRIGHT.GT.NEQUAL .OR.
     1     NSTRT.GT.NSTOP .OR. NLEN.GT.8) THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16011)
16011     FORMAT('      UNRECOGNIZED SYNTAX FOR VARIABLE ELEMENT ON')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16013)
16013     FORMAT('      LEFT HAND SIDE EQUAL SIGN.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSE
          ISTR=' '
          DO16020I=1,NLEN
            ISTR(I:I)=IANS(NSTRT+I-1)(1:1)
16020     CONTINUE
          READ(ISTR,'(I8)',ERR=16029)IARGL
          GOTO16049
C
16029     CONTINUE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16011)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16013)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
16049     CONTINUE
        ENDIF
C
        IF(IARGL.LT.1 .OR. IARGL.GT.MAXN)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16052)IARGL,ILEFT
16052     FORMAT('      THE SPECIFIED ROW (',I8,') OF VARIABLE ',A4,A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16054)
16054     FORMAT('      WAS LESS THAN 1 OR GREATER THAN THE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16055)MAXN
16055     FORMAT('      MAXIMUM ALLOWABLE ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IF(NEWNAM.EQ.'YES')THEN
          NIOLD=1
        ENDIF
        NINEW=NIOLD
        IF(IARGL.GT.NINEW)NINEW=IARGL
        NS2=1
C
        RIGHT=REAL(ICNT)
        IJ=MAXN*(ICOLL-1)+IARGL
        IF(ICOLL.LE.MAXCOL)V(IJ)=RIGHT
        IF(ICOLL.EQ.MAXCP1)PRED(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP2)RES(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP3)YPLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP4)XPLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP5)X2PLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP6)TAGPLO(IARGL)=RIGHT
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='V'
        IVALUE(ILISTL)=ICOLL
        VALUE(ILISTL)=ICOLL
        IN(ILISTL)=NINEW
C
        IF(NEWNAM.EQ.'YES')THEN
          NUMNAM=NUMNAM+1
          NUMCOL=NUMCOL+1
        ENDIF
C
        DO16200J4=1,NUMNAM
          IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL)THEN
            IUSE(J4)='V'
            IVALUE(J4)=ICOLL
            VALUE(J4)=ICOLL
            IN(J4)=NINEW
            GOTO16209
          ENDIF
16200   CONTINUE
16209   CONTINUE
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16211)IHRIGH,IHRIG2,IHRIG3,IHRIG4,ICNT
16211     FORMAT('THE HAMMING DISTANCE OF STRINGS ',2A4,
     1           ' AND ',2A4,' = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
      GOTO9000
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STHD')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTHD--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTIN(ICASEZ,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--RETURN THE START AND STOP POSITIONS OF A SUBSTRING
C              OF A PREVIOUSLY DEFINED STRING.
C     EXAMPLE--LET STRING SORG = ABCDEF
C              LET STRING SUB  = DE
C              LET NSTART NSTOP = STRING INDEX SORG SUB
C     NOTE--THE FOLLOWING SYNTAX IS NOT SUPPORTED FOR THIS COMMAND:
C              LET Y(2) Y(8) = STRING INDEX S  SUBSTRING
C           ALSO, THE STRINGS ON THE RIGHT HAND SIDE MUST BOTH BE
C           PREVIOUSLY DEFINED.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/11
C     ORIGINAL VERSION--NOVEMBER  2008.
C     UPDATED         --SEPTEMBER 2018. STRING FIND AS ALIAS
C     UPDATED         --SEPTEMBER 2018. STRING RIGHT INDEX (TO SEARCH
C                                       STRING FROM RIGHT TO LEFT)
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASEZ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHLE21
      CHARACTER*4 IHLE22
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='IN  '
      IERROR='NO'
C
      ILOC3=0
      ILIST2=0
      NUMTMP=0
      IMATCH=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STIN')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTIN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE FIRST ARGUMENT ON THE                *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASEL='PARA'
            ILISTL=I2
            NUMTMP=NUMNAM
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING INDEX--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='PARA'
C
      ILISTL=NUMNAM+1
      NUMTMP=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               ******************************************************
C               **  STEP 2B-                                         *
C               **  EXAMINE THE SECOND ARGUMENT ON THE               *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLE21=IHARG(2)
      IHLE22=IHARG2(2)
C
      DO2300I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASE2='PARA'
            ILISTL=I2
            GOTO2399
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2303)IHLEFT,IHLEF2
 2303       FORMAT('      THE SECOND NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2300 CONTINUE
C
      NEWNA2='YES'
      IF(ICASE2.EQ.'UNKN')ICASE2='PARA'
C
      ILIST2=NUMTMP+1
      IF(ILIST2.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2399 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IINDX=6
      IF(ICASEZ.EQ.'STIR')IINDX=7
      IHRIGH=IHARG(IINDX)
      IHRIG2=IHARG2(IINDX)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B-                                       **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IINDX=IINDX+1
      IHRI21=IHARG(IINDX)
      IHRI22=IHARG2(IINDX)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT2=IVSTAR(I4)
            ISTOP2=IVSTOP(I4)
            NLEN2=ISTOP2-ISTRT2+1
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CHECK FOR MATCHING STRINGS                     **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIN')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,NLEN1
 4011   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4012)ISTRT2,ISTOP2,NLEN2
 4012   FORMAT('ISTART,ISTOP,NLEN2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL,ICASE2,ICASEZ
 4013   FORMAT('ICASEL,ICASE2,ICASEZ = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASEZ.EQ.'STIN')THEN
        NTEMP=ISTOP1-NLEN2+1
        IMATCH=0
        IF(ISTRT1.GT.NTEMP)GOTO4199
        DO4100I=ISTRT1,NTEMP
          NSTRT=I
          NSTOP=NSTRT+NLEN2-1
          ICNT=0
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIN')THEN
            WRITE(ICOUT,4801)I,NSTRT,NSTOP
 4801       FORMAT('I,NSTRT,NSTOP = ',3I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          DO4110J=NSTRT,NSTOP
            IF(IFUNC(J)(1:1).NE.IFUNC(ISTRT2+ICNT)(1:1))GOTO4100
            ICNT=ICNT+1
 4110     CONTINUE
          IMATCH=1
          GOTO4199
 4100   CONTINUE
C
 4199   CONTINUE
C
      ELSEIF(ICASEZ.EQ.'STIR')THEN
C
C       DO RIGHT TO LEFT MATCHING
C
        NTEMP=ISTRT1+NLEN2-1
        IMATCH=0
        IF(ISTRT1.GT.NTEMP)GOTO4299
        DO4200I=ISTOP1,NTEMP,-1
          NSTOP=I
          NSTRT=NSTOP-NLEN2+1
          ICNT=0
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIN')THEN
            WRITE(ICOUT,4801)I,NSTRT,NSTOP
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          DO4210J=NSTRT,NSTOP
            IF(IFUNC(J)(1:1).NE.IFUNC(ISTRT2+ICNT)(1:1))GOTO4200
            ICNT=ICNT+1
 4210     CONTINUE
          IMATCH=1
          GOTO4299
 4200   CONTINUE
C
 4299   CONTINUE
      ENDIF
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIN')THEN
        ISTEPN='4B'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4901)NSTRT,NSTOP,IMATCH
 4901   FORMAT('NSTRT,NSTOP,IMATCH = ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE PARAMETERS                                **
C               *****************************************************
C
C
      IF(IMATCH.EQ.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5001)IHRI21,IHRI22,IHRIGH,IHRIG2
 5001   FORMAT('STRING  ',A4,A4,'  WAS NOT MATCHED IN STRING ',A4,A4)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSE
        NSTRT=NSTRT-ISTRT1+1
        NSTOP=NSTOP-ISTRT1+1
      ENDIF
C
      IF(ICASEL.EQ.'PARA' .AND. ICASE2.EQ.'PARA')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIN')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='P'
        VALUE(ILISTL)=REAL(NSTRT)
        IVALUE(ILISTL)=INT(VALUE(ILISTL)+0.5)
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
        IHNAME(ILIST2)=IHLE21
        IHNAM2(ILIST2)=IHLE22
        IUSE(ILIST2)='P'
        VALUE(ILIST2)=REAL(NSTOP)
        IVALUE(ILISTL)=INT(VALUE(ILISTL)+0.5)
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,5011)IHLEFT,IHLEF2,NSTRT
5011      FORMAT(A4,A4,' (START OF SUBSTRING) = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,5013)IHLE21,IHLE22,NSTOP
5013      FORMAT(A4,A4,' (END OF SUBSTRING)   = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STIN')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTIN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTIP(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT THE COMMAND
C
C              LET SNEW = STRING INTERACTION S1 ... SK
C
C              WHERE
C                  S1 ... SK     = A LIST OF PRE-EXISTING PARAMETERS
C
C              FOR EXAMPLE,
C
C                  LET SNEW = STRING INTERACTION 1 3 5 -9999 -9999
C
C              WILL GENERATE THE STRING
C
C                   X1 * X3 * X5
C
C              THE STRING GENERATION WILL TERMINATE WHEN THE FIRST
C              "-9999" VALUE IS ENCOUNTERED IN THE S1 ... SK LIST.
C
C              THIS COMMAND IS USED IN THE 10-STEP MACROS.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018/03
C     ORIGINAL VERSION--MARCH     2018.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*255 ISTR1
      CHARACTER*4 ILAB(10)
C
      PARAMETER(MAXIND=50)
      REAL PVAR(MAXIND)
      CHARACTER*4 IVARN1(MAXIND)
      CHARACTER*4 IVARN2(MAXIND)
      CHARACTER*4 IVARTY(MAXIND)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='IP  '
      IERROR='NO'
C
      NCSTR=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STIP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTIP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM,NUMCHF,MAXCHF
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM,NUMCHF,MAXCHF = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,2A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING INTERACTION--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  LOOP THROUGH THE NAMES ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LT.5)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3003)
 3003   FORMAT('      THERE MUST BE AT LEAST ONE STRINGS SPECIFIED ',
     1         'TO THE RIGHT HAND SIDE OF THE EQUAL SIGN')
        CALL DPWRST('XXX','BUG ')
        NTEMP=NUMARG-4
        WRITE(ICOUT,3005)NTEMP
 3005   FORMAT('      THE NUMBER OF STRINGS SPECIFIED IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *********************************************************
C               **  STEP 3A--                                           *
C               **  NOW SEARCH THROUGH THE ARGUMENTS                    *
C               *********************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      JMIN=5
      JMAX=NUMARG
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STIP')THEN
        WRITE(ICOUT,3301)JMIN,JMAX,MAXIND
 3301   FORMAT('JMIN,JMAX,MAXIND = ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IWRITE='OFF'
      IERROR='NO'
C
      IFLAGM=0
      IFLAGP=1
      IFLAGT=0
      CALL EXTVA2(IHARG,IHARG2,IARGT,ARG,NUMARG,JMIN,JMAX,MAXIND,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,
     1            IVARN1,IVARN2,IVARTY,PVAR,NUMIND,
     1            IFLAGM,IFLAGP,IFLAGT,
     1            IBUGA3,ISUBRO,IERROR)
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STIP')THEN
        WRITE(ICOUT,3303)NUMIND,IERROR
 3303   FORMAT('NUMIND,IERROR = ',I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NUMIND.GE.1)THEN
          DO3305JJ=1,NUMIND
            WRITE(ICOUT,3304)JJ,IVARN1(JJ),IVARN2(JJ),IVARTY(JJ),
     1                       PVAR(JJ)
 3304       FORMAT('JJ,IVARN1(JJ),IVARN2(JJ),IVARTY(JJ),PVAR(JJ) = ',
     1             I8,2X,2A4,2X,A4,2X,G15.7)
            CALL DPWRST('XXX','BUG ')
 3305     CONTINUE
        ENDIF
      ENDIF
C
      IF(IERROR.EQ.'YES')GOTO9000
C
C     NOW LOOP THROUGH AND CREATE THE OUTPUT STRING
C
      DO3310I2=1,NUMIND
        IF(IVARTY(I2).NE.'PARA')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3312)I2,IVARN1(I2),IVARN2(I2)
 3312     FORMAT('      ARGUMENT ',I5,' (',2A4,') IS NOT A PARAMETER.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        DO3320I=1,NUMNAM
          IF(IVARN1(I2).EQ.IHNAME(I).AND.IVARN2(I2).EQ.IHNAM2(I))THEN
            AVAL=VALUE(I)
            GOTO3329
          ENDIF
 3320   CONTINUE
 3329   CONTINUE
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STIP')THEN
          WRITE(ICOUT,3333)I2,I,AVAL
 3333     FORMAT('I2,I,AVAL = ',2I8,G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(AVAL.GE.0.0)THEN
          IVAL=INT(AVAL+0.1)
          IF(IVAL.GT.999)GOTO3390
          IF(I2.GT.1)THEN
            NCSTR=NCSTR+1
            ISTR1(NCSTR:NCSTR+2)=' * '
            NCSTR=NCSTR+2
          ENDIF
          NCSTR=NCSTR+1
          ISTR1(NCSTR:NCSTR)='X'
          IF(IVAL.LE.9)THEN
            NCSTR=NCSTR+1
            WRITE(ISTR1(NCSTR:NCSTR),'(I1)')IVAL
          ELSEIF(IVAL.LE.99)THEN
            NCSTR=NCSTR+1
            WRITE(ISTR1(NCSTR:NCSTR+1),'(I2)')IVAL
            NCSTR=NCSTR+1
          ELSEIF(IVAL.LE.999)THEN
            NCSTR=NCSTR+1
            WRITE(ISTR1(NCSTR:NCSTR+2),'(I3)')IVAL
            NCSTR=NCSTR+2
          ENDIF
        ELSE
          IF(I2.EQ.1)THEN
            ISTR1='X1'
            NCSTR=2
          ENDIF
          GOTO3390
        ENDIF
 3310 CONTINUE
 3390 CONTINUE
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO3410JJ=1,NCSTR
        IFUNC2(JJ)='   '
        IFUNC2(JJ)(1:1)=ISTR1(JJ:JJ)
 3410 CONTINUE
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIP')THEN
        ISTEPN='3C'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,3450)NCSTR
 3450   FORMAT('NLEN2 = ',I5)
        CALL DPWRST('XXX','BUG ')
        DO3455JJ=1,NCSTR
          WRITE(ICOUT,3457)JJ,IFUNC2(JJ)
 3457     FORMAT('JJ,IFUNC2(JJ) = ',I5,2X,A4)
          CALL DPWRST('XXX','BUG ')
 3455   CONTINUE
      ENDIF
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STIP')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPINFU(IFUNC2,NCSTR,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1            NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
     1            NEWNAM,MAXNAM,
     1            IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606   FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
        CALL DPWRST('XXX','BUG ')
        ILAB(1)='TO T'
        ILAB(2)='HE F'
        ILAB(3)='UNCT'
        ILAB(4)='ION '
        ILAB(5)='    '
        ILAB(6)=' -- '
        NUMWDL=6
        CALL DPPRIF(ILAB,NUMWDL,IFUNC2,NCSTR,IBUGA3)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STIP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTIP--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTJU(ICASE,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--LEFT/CENTER/RIGHT JUSTIFY A STRING.  THAT IS,
C              BASED ON THE REQUESTED LENGTH OF THE STRING, ADD
C              LEADING OR TRAILING SPACES.
C     EXAMPLE--LET SOUT = STRING <LEFT/CENTER/RIGHT> JUSTIFY SIN NLEN
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2019/01
C     ORIGINAL VERSION--JANUARY   2019.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*1 IVALC
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='JU  '
      IERROR='NO'
      IVALC=' '
      IF(ISJUCH.NE.'SPAC')IVALC=ISJUCH(1:1)
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STJU')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTJU--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,2A4,2X,A4,2I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF,NUMARG
   57   FORMAT('NUMCHF,MAXCHF,NUMARG = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GE.1)THEN
          DO70I=1,NUMARG
            WRITE(ICOUT,76)I,IHARG(I),IHARG2(I),IARGT(I),IARG(I)
   76       FORMAT('I,IHARG(I),IHARG2(I),IARGT(I),IARG(I) = ',
     1             I8,2X,2A4,2X,A4,2X,I8)
            CALL DPWRST('XXX','BUG ')
   70     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STJU')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STJU')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING JUSTIFY--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STJU')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(6)
      IHRIG2=IHARG2(6)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B-                                       **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STJU')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRI21=IHARG(7)
      IHRI22=IHARG2(7)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'P')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3115)
 3115       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ILISR1=I4
            NLEN2=IVALUE(ILISR1)
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      IF(NUMARG.GE.7)THEN
        IF(IARGT(7).EQ.'NUMB')THEN
          NLEN2=IARG(7)
          GOTO3199
        ENDIF
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CREATE THE JUSTIFIED STRING                    **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STJU')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ILISR1,ILISR2,NLEN
 4011   FORMAT('ILISR1,ILISR2,NLEN = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4012)ISTRT1,ISTOP1,NLEN1,NLEN2
 4012   FORMAT('ISTRT1,ISTOP1,NLEN1,NLEN2 = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASE
 4013   FORMAT('ICASE = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NLEN1.GE.NLEN2)THEN
        ICNT=0
        DO4100I=ISTRT1,ISTOP1
          ICNT=ICNT+1
          IINDX=I+ISTRT1-1
          IFUNC2(ICNT)=IFUNC(IINDX)
 4100   CONTINUE
      ELSEIF(ICASE.EQ.'RIGH')THEN
        ISPACE=NLEN2-NLEN1
        ICNT=0
        DO4110I=1,ISPACE
          ICNT=ICNT+1
          IFUNC2(ICNT)=IVALC
 4110   CONTINUE
        DO4112I=ISTRT1,ISTOP1
          ICNT=ICNT+1
          IFUNC2(ICNT)=IFUNC(I)
 4112   CONTINUE
      ELSEIF(ICASE.EQ.'LEFT')THEN
        ISPACE=NLEN2-NLEN1
        ICNT=0
        DO4120I=ISTRT1,ISTOP1
          ICNT=ICNT+1
          IFUNC2(ICNT)=IFUNC(I)
 4120   CONTINUE
        DO4122I=1,ISPACE
          ICNT=ICNT+1
          IFUNC2(ICNT)=IVALC
 4122   CONTINUE
      ELSEIF(ICASE.EQ.'CENT')THEN
        ISPACE=NLEN2-NLEN1
        IVAL=MOD(ISPACE,2)
        IF(IVAL.EQ.0)THEN
          ISPACL=ISPACE/2
          ISPACR=ISPACL
        ELSE
          ISPACL=(ISPACE/2) + 1
          ISPACR=ISPACE/2
        ENDIF
        ICNT=0
        DO4130I=1,ISPACL
          ICNT=ICNT+1
          IFUNC2(ICNT)=IVALC
 4130   CONTINUE
        DO4132I=ISTRT1,ISTOP1
          ICNT=ICNT+1
          IFUNC2(ICNT)=IFUNC(I)
 4132   CONTINUE
        DO4134I=1,ISPACR
          ICNT=ICNT+1
          IFUNC2(ICNT)=IVALC
 4134   CONTINUE
      ENDIF
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STJU')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1            NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
     1            NEWNAM,MAXNAM,
     1            IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606   FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
        CALL DPWRST('XXX','BUG ')
        ILAB(1)='TO T'
        ILAB(2)='HE F'
        ILAB(3)='UNCT'
        ILAB(4)='ION '
        ILAB(5)='    '
        ILAB(6)=' -- '
        NUMWDL=6
        CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STJU')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTJU--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,2A4,2X,A4,2I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTLC(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--CONVERT A STRING TO LOWER CASE
C     EXAMPLE--LET SOUT = LOWER CASE SOLD
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/11
C     ORIGINAL VERSION--NOVEMBER  2008.
C     UPDATED         --MARCH     2015. CALL LIST TO DPINFU
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*1 IC
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='LC  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STLC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTLC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STLC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STLC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN LOWER CASE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STLC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(5)
      IHRIG2=IHARG2(5)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  PERFORM THE CASE CONVERSION                    **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STLC')THEN
        ISTEPN='4A'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,NLEN1
 4011   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4014)ICASEL
 4014   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NLEN1.GE.1)THEN
        ICNT=0
        DO4100I=ISTRT1,ISTOP1
          ICNT=ICNT+1
          IC=IFUNC(I)(1:1)
          CALL DPCOAN(IC,IJUNK)
          IF(IJUNK.GE.65 .AND. IJUNK.LE.90)THEN
            IJUNK=IJUNK+32
          ENDIF
          CALL DPCONA(IJUNK,IC)
          IFUNC2(ICNT)=' '
          IFUNC2(ICNT)(1:1)=IC
 4100   CONTINUE
      ENDIF
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STLC')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STLC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTLC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTLN(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--RETURN THE NUMBER OF CHARACTERS IN A PREVIOUSLY
C              DEFINED STRING.
C     EXAMPLE--LET NLEN = STRING LENGTH S
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/11
C     ORIGINAL VERSION--NOVEMBER  2008.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*8 ISTR
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='LN  '
      IERROR='NO'
C
      ILOC3=0
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *****************************************************
C               **  TREAT THE SUBCASE OF THE LET FUNCTION COMMAND  **
C               **  WHICH DEFINES A FUNCTION                       **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STLN')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTLN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STLN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      NIOLD=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE LEFT-HAND SIDE--                     *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STLN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO1910I=1,4
        IF(IHLEFT(I:I).EQ.'(')THEN
          IHLEFT(I:4)=' '
          IHLEF2=' '
          ICASEL='ELEM'
          GOTO1999
        ENDIF
 1910 CONTINUE
      DO1920I=1,4
        IF(IHLEF2(I:I).EQ.'(')THEN
          IHLEF2(I:4)=' '
          ICASEL='ELEM'
          GOTO1999
        ENDIF
 1920 CONTINUE
 1999 CONTINUE
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASEL='PARA'
            ILISTL=I2
            GOTO2900
          ELSEIF(IUSE(I2).EQ.'V')THEN
            ICASEL='ELEM'
            ILISTL=I2
            ICOLL=IVALUE(ILISTL)
            NIOLD=IN(ILISTL)
            GOTO2900
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING LENGTH--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='PARA'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2900 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE NAME ON THE RIGHT HAND SIDE        **
C               *****************************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STLN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(5)
      IHRIG2=IHARG2(5)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTART=IVSTAR(I4)
            ISTOP=IVSTOP(I4)
            IVAL=ISTOP-ISTART+1
            GOTO3900
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3900 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  SAVE PARAMETER                                 **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STLN')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTART,ISTOP,IVAL
 4011   FORMAT('ISTART,ISTOP,IVAL = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASEL.EQ.'PARA')THEN
C
        ISTEPN='4A'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STLN')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='P'
        VALUE(ILISTL)=REAL(IVAL)
        IVALUE(ILISTL)=INT(VALUE(ILISTL)+0.5)
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,15111)IHLEFT,IHLEF2,IHRIGH,IHRIG2,IVAL
15111     FORMAT(A4,A4,' CONTAINS THE LENGTH OF STRING ',A4,A4,
     1           ' = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ELSEIF(ICASEL.EQ.'ELEM')THEN
C
C       SEARCH IANS STRING FOR "(xx) =".  IF NO PARENTHESIS
C       FOUND BEFORE "=", THEN DO NOT KNOW WHAT ROW OF THE
C       VARIABLE TO SAVE.  TREAT THIS AS AN ERROR.
C
        NLEFT=-1
        NRIGHT=-1
        NEQUAL=-1
        DO16001I=1,IWIDTH
          IF(IANS(I)(1:1).EQ.'(' .AND. NLEFT.LT.0)THEN
            NLEFT=I
          ELSEIF(IANS(I)(1:1).EQ.')' .AND. NRIGHT.LT.0)THEN
            NRIGHT=I
          ELSEIF(IANS(I)(1:1).EQ.'=' .AND. NEQUAL.LT.0)THEN
            NEQUAL=I
          ENDIF
16001   CONTINUE
C
C       NEED  NLEFT < NRIGHT < NEQUAL
C
        NSTRT=NLEFT+1
        NSTOP=NRIGHT-1
        NLEN=NSTOP-NSTRT+1
        IF(NLEFT.GT.NRIGHT .OR. NRIGHT.GT.NEQUAL .OR.
     1     NSTRT.GT.NSTOP .OR. NLEN.GT.8) THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16011)
16011     FORMAT('      UNRECOGNIZED SYNTAX FOR VARIABLE ELEMENT ON')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16013)
16013     FORMAT('      LEFT HAND SIDE EQUAL SIGN.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSE
          ISTR=' '
          DO16020I=1,NLEN
            ISTR(I:I)=IANS(NSTRT+I-1)(1:1)
16020     CONTINUE
          READ(ISTR,'(I8)',ERR=16029)IARGL
          GOTO16049
C
16029     CONTINUE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16011)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16013)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
16049     CONTINUE
        ENDIF
C
        IF(IARGL.LT.1 .OR. IARGL.GT.MAXN)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16052)IARGL,ILEFT
16052     FORMAT('      THE SPECIFIED ROW (',I8,') OF VARIABLE ',A4,A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16054)
16054     FORMAT('      WAS LESS THAN 1 OR GREATER THAN THE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16055)MAXN
16055     FORMAT('      MAXIMUM ALLOWABLE ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IF(NEWNAM.EQ.'YES')THEN
          NIOLD=1
        ENDIF
        NINEW=NIOLD
        IF(IARGL.GT.NINEW)NINEW=IARGL
        NS2=1
C
        RIGHT=REAL(IVAL)
        IJ=MAXN*(ICOLL-1)+IARGL
        IF(ICOLL.LE.MAXCOL)V(IJ)=RIGHT
        IF(ICOLL.EQ.MAXCP1)PRED(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP2)RES(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP3)YPLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP4)XPLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP5)X2PLOT(IARGL)=RIGHT
        IF(ICOLL.EQ.MAXCP6)TAGPLO(IARGL)=RIGHT
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='V'
        IVALUE(ILISTL)=ICOLL
        VALUE(ILISTL)=ICOLL
        IN(ILISTL)=NINEW
C
        IF(NEWNAM.EQ.'YES')THEN
          NUMNAM=NUMNAM+1
          NUMCOL=NUMCOL+1
        ENDIF
C
        DO16200J4=1,NUMNAM
          IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL)THEN
            IUSE(J4)='V'
            IVALUE(J4)=ICOLL
            VALUE(J4)=ICOLL
            IN(J4)=NINEW
            GOTO16209
          ENDIF
16200   CONTINUE
16209   CONTINUE
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16211)IHRIGH,IHRIG2,IVAL
16211     FORMAT('THE LENGTH OF STRING ',A4,A4,' = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
      GOTO9000
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STLN')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTLN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTMR(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--INSERT A STRING INTO A PREVIOUSLY DEFINED STRING
C     EXAMPLE--LET SOUT = STRING MERGE SOLD SNEW START
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/11
C     ORIGINAL VERSION--NOVEMBER  2008.
C     UPDATED         --MARCH     2015. CALL LIST TO DPINFU
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
      CHARACTER*4 IHRI31
      CHARACTER*4 IHRI32
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='MR  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STMR')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTMR--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STMR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STMR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING MERGE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STMR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(5)
      IHRIG2=IHARG2(5)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B-                                       **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STMR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRI21=IHARG(6)
      IHRI22=IHARG2(6)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT2=IVSTAR(I4)
            ISTOP2=IVSTOP(I4)
            NLEN2=ISTOP2-ISTRT2+1
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               *****************************************************
C               **  STEP 3C-                                       **
C               **  EXTRACT THE THIRD  NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STMR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRI31=IHARG(7)
      IHRI32=IHARG2(7)
      DO3200I=1,NUMNAM
        I4=I
        IF(IHRI31.EQ.IHNAME(I).AND.IHRI32.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'P')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI31,IHRI32
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3215)
 3215       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ILISR1=I4
            NSTART=IVALUE(ILISR1)
            GOTO3299
          ENDIF
        ENDIF
 3200 CONTINUE
C
      IF(NUMARG.GE.7)THEN
        IF(IARGT(7).EQ.'NUMB')THEN
          NSTART=IARG(7)
          GOTO3299
        ENDIF
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI31,IHRI32
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3299 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CREATE THE SUBSTRING                           **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STMR')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ILISR1,ILISR2,NSTART,NSTOP
 4011   FORMAT('ILISR1,ILISR2,NSTART,NSTOP = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NSTART.LT.1 .OR. NSTART.GT.MAXCHF)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4021)MAXCHF
 4021   FORMAT('      THE START INDEX IS LESS THAN 1 OR GREATER ',
     1         'THAN ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4023)NSTART
 4023   FORMAT('      THE VALUE OF THE START INDEX IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      ICNT=0
      IF(NSTART.GT.1)THEN
        DO4100I=1,NSTART-1
          ICNT=ICNT+1
          IINDX=I+ISTRT1-1
          IFUNC2(ICNT)=IFUNC(IINDX)
 4100   CONTINUE
      ENDIF
      IF(NLEN2.GE.1)THEN
        DO4110I=1,NLEN2
          ICNT=ICNT+1
          IINDX=I+ISTRT2-1
          IFUNC2(ICNT)=IFUNC(IINDX)
 4110   CONTINUE
      ENDIF
      IF(NSTART.LT.NLEN1)THEN
        DO4120I=NSTART,NLEN1
          ICNT=ICNT+1
          IINDX=I+ISTRT1-1
          IFUNC2(ICNT)=IFUNC(IINDX)
 4120   CONTINUE
      ENDIF
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STMR')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STMR')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTMR--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTNS(ICASLE,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT THE FOLLOWING COMMAND:
C
C                 LET NC = STRING SUBSET COUNT SORG SMATCH
C
C              THAT IS, CHECK HOW MANY TIMES THE SUBSTRING "SMATCH"
C              IS FOUND IN THE STRING "SORG".  THE STRINGS ON THE RIGHT
C              HAND SIDE MUST BOTH BE PREVIOUSLY DEFINED.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2019/02
C     ORIGINAL VERSION--FEBRUARY  2019.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASLE
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='NS  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STNS')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTNS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASLE
   52   FORMAT('IBUGA3,ISUBRO,ICASLE = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)NUMNAM,NUMCHF,MAXCHF
   53   FORMAT('NUMNAM,NUMCHF,MAXCHF = ',3I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STNS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE FIRST ARGUMENT ON THE                *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STNS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASEL='PARA'
            ILISTL=I2
            NUMTMP=NUMNAM
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING SUBSET COUNT--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='PARA'
C
      ILISTL=NUMNAM+1
      NUMTMP=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STNS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IINDX=6
      IHRIGH=IHARG(IINDX)
      IHRIG2=IHARG2(IINDX)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B-                                       **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STNS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IINDX=IINDX+1
      IHRI21=IHARG(IINDX)
      IHRI22=IHARG2(IINDX)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT2=IVSTAR(I4)
            ISTOP2=IVSTOP(I4)
            NLEN2=ISTOP2-ISTRT2+1
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CHECK FOR MATCHING STRINGS                     **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STNS')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,NLEN1
 4011   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4012)ISTRT2,ISTOP2,NLEN2
 4012   FORMAT('ISTART,ISTOP,NLEN2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IMATCH=0
      IF(NLEN2.GT.NLEN1)GOTO4199
      NTEMP=ISTOP1-NLEN2+1
      DO4100J=ISTRT1,NTEMP
        ICNT=ISTRT2
        DO4110I=J,J+NLEN2-1
          IF(IFUNC(I)(1:1).NE.IFUNC(ICNT)(1:1))GOTO4100
          ICNT=ICNT+1
 4110   CONTINUE
        IMATCH=IMATCH+1
 4100 CONTINUE
 4199 CONTINUE
C
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE PARAMETER                                 **
C               *****************************************************
C
      IF(ICASEL.EQ.'PARA')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STCO')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='P'
        VALUE(ILISTL)=REAL(IMATCH)
        IVALUE(ILISTL)=IMATCH
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(IMATCH.EQ.0)THEN
            WRITE(ICOUT,5011)IHLEFT,IHLEF2,IMATCH
5011        FORMAT('MATCH NOT FOUND, ',2A4,'  = ',I3)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,5013)IHLEFT,IHLEF2,IMATCH
5013        FORMAT('NUMBER OF MATCHES FOUND, ',2A4,'  = ',I3)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STNS')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTNS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTNW(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--DETERMINE THE NUMBER OF WORDS IN A STRING
C     EXAMPLE--LET NWORD = NUMBER OF WORD STIN
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2010/10
C     ORIGINAL VERSION--OCTOBER   2010.
C     UPDATED         --AUGUST    2020. ALLOW USER-SPECIFIED DELIMITER
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
      INCLUDE 'DPCOST.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='NW  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STNW')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTNW--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF,NUMARG
   57   FORMAT('NUMCHF,MAXCHF,NUMARG = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GE.1)THEN
          DO70I=1,NUMARG
            WRITE(ICOUT,76)I,IHARG(I),IHARG2(I),IARGT(I),IARG(I)
   76       FORMAT('I,IHARG(I),IHARG2(I),IARGT(I),IARG(I) = ',
     1             I8,2X,A4,A4,2X,A4,2X,I8)
            CALL DPWRST('XXX','BUG ')
   70     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STNW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE FIRST ARGUMENT ON THE                *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STNW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASEL='PARA'
            ILISTL=I2
            NUMTMP=NUMNAM
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN NUMBER OF WORDS--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='PARA'
C
      ILISTL=NUMNAM+1
      NUMTMP=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STNW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(6)
      IHRIG2=IHARG2(6)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
C
            IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STNW')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3011)I4,ISTRT1,ISTOP1,NLEN1
 3011         FORMAT('I4,ISTRT1,ISTOP1,NLEN1 = ',4I8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  FIND THE NUMBER OF WORDS                       **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STNW')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4012)ISTRT1,ISTOP1,NLEN1
 4012   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     NOW EXTRACT NUMBER OF WORDS
C
C     WORD BOUNDARIES ARE DEFINED BY SPACES (NON-PRINTING CHARACTERS
C     ARE DEFINED AS SPACES).
C
C     STEP 1: DETERMINE START/STOP POSITION OF WORD
C
      NWORD=0
      IFLAG=0
C
      DO4100I=ISTRT1,ISTOP1
        IPOS=I
        IXTEMP=ICHAR(IFUNC(IPOS)(1:1))
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STNW')THEN
          WRITE(ICOUT,4111)I,IFLAG,NWORD,IPOS,IXTEMP,IFUNC(IPOS)
 4111     FORMAT('I,IFLAG,NWORD,IPOS,IXTEMP,IFUNC(IPOS) = ',5I8,2X,A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C       CASE 1: WORD BOUNDARY DETECTED
C
        IFLAGW=0
        IF(IWRDDL.NE.'    ')THEN
          IF(IFUNC(IPOS)(1:1).EQ.IWRDDL(1:1))IFLAGW=1
        ELSE
          IF(IXTEMP.LE.32 .OR. IXTEMP.GE.127)IFLAGW=1
        ENDIF
C
CCCCC   IF(IXTEMP.LE.32 .OR. IXTEMP.GE.127)THEN
        IF(IFLAGW.EQ.1)THEN
          IF(IFLAG.EQ.1)THEN
            IFLAG=0
          ELSEIF(IFLAG.EQ.0)THEN
            CONTINUE
          ENDIF
C
C       CASE 2: NOT A WORD BOUNDARY DETECTED.  IS THIS START OF
C               NEW WORD OR CONTINUATION OF CURRENT WORD?
C
        ELSE
          IF(IFLAG.EQ.0)THEN
            ISTART=I
            ISTOP=I
            NWORD=NWORD+1
            IFLAG=1
          ELSEIF(IFLAG.EQ.1)THEN
            ISTOP=I
          ENDIF
        ENDIF
 4100 CONTINUE
C
C               *********************************
C               **  STEP 5--                   **
C               **  SAVE PARAMETER (NWORD)     **
C               *********************************
C
C
      IF(ICASEL.EQ.'PARA')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STNW')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='P'
        VALUE(ILISTL)=REAL(NWORD)
        IVALUE(ILISTL)=INT(VALUE(ILISTL)+0.5)
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,5011)IHLEFT,IHLEF2,NWORD
5011      FORMAT('NUMBER OF WORDS IN STRING ',A4,A4,'  = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STNW')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTNW--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTRE(IFROW1,IFROW2,IFCOL1,IFCOL2,ISKIP,INTINF,
     1                  IMACRO,IMACNU,IMACCS,IMALEV,IOSW,ICREAF,NCREAF,
     1                  ICWRIF,NCWRIF,IREARW,ICOMCH,ICOMSW,
     1                  IUNFOF,IUNFNR,IUNFMC,NUMRCM,
     1                  IFCOLL,IFCOLU,
     1                  IANSLO,ILOOST,ILOOLI,IREPCH,
     1                  IBUGS2,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--PEFORM A "STREAM" READ.  THE PURPOSE OF THIS COMMAND
C              IS TO READ LARGE FILES, SPECIFICALLY FILES EXCEEDING
C              DATAPLOT'S MAXIMUM NUMBER OF ROWS, AND GENERATE VARIABLES
C              OR FILES THAT CAN BE PROCESSED BY DATAPLOT.
C
C              SPECIFICALLY, THE FOLLOWING FORMATS ARE SUPPORTED.
C
C              1. STREAM READ WRITE FILE.DAT X1 ... XK
C
C                 WILL READ A LINE OF "FILE.DAT" AND IMMEDIATELY WRITE
C                 IT TO THE FILE "FILE_FORMATTED.DAT".  THE IDEA IS THAT
C                 THE WRITE WILL USE A FORMATTED WRITE COMMAND FOR
C                 THE OUTPUT FILE.
C
C                 THE MOTIVATION FOR THIS IS FOR LARGE DATA SETS,
C                 POSSIBLY EXCEEDING DATAPLOT LIMITS, TO BE ABLE TO
C                 CREATE A FORMATTED DATA FILE WITHOUT EVER READING
C                 THE FULL DATA SET INTO DATAPLOT.
C
C                 THE FORMATTED VERSION OF THE FILE ALLOWS FASTER
C                 INPUT VIA THE SET READ FORMAT COMMAND AND ALSO
C                 ALLOWS SELECTIVE SELECTION OF VARIABLES TO INPUT.
C
C              2. STREAM READ GROUP STATISTIC <STAT> FILE.DAT X1 ... XK
C
C                 WHERE <STAT> IS ONE OF DATAPLOT'S SUPPORTED
C                 UNIVARIATE STATISTICS.
C
C                 THIS VERSION WILL READ A USER-SPECIFIED NUMBER
C                 OF ROWS AT A TIME.  IT WILL THEN REPLACE THOSE
C                 ROWS WITH THE SPECIFIED STATISTIC.  FOR EXAMPLE,
C                 IT WILL READ 1,000 ROWS, COMPUTE THE MEAN FOR
C                 THOSE 1,000 ROWS, SAVE THE MEAN VALUE, THEN
C                 REPEAT FOR THE NEXT 1,000 ROWS.  SO THE ORIGINAL
C                 DATA WILL BE REPLACED WITH THE MEANS OF FIXED
C                 INTERVALS OF THE DATA.
C
C                 TO SPECIFY THE NUMBER OF ROWS TO READ AT A TIME,
C                 ENTER
C
C                     SET STREAM READ SIZE <VALUE>
C
C                 ALTERNATIVELY, YOU CAN SPECIFY ONE OF THE VARIABLES
C                 TO DEFINE THE GROUP (I.E., WHEN THE VALUE OF THE
C                 SPECIFIED VARIABLE CHANGES, THIS DENOTES THE START
C                 OF A NEW GROUP).  FOR THIS OPTION, ENTER
C
C                     SET STREAM READ GROUP VARIBLE <VAR-NAME>
C
C                 THIS CAPABILITY IS MOTIVATED BY THE DESIRE TO
C                 HANDLE LARGE DATA SETS THAT MAY EXCEED DATAPLOT'S
C                 STORAGE LIMITS.  THIS COMMAND ALLOWS YOU TO
C                 COMPUTE SOME BASIC STATISTICS (MEAN, MIN, MAX,
C                 SD, AND SO ON) FOR SLICES OF THE DATA.  OFTEN,
C                 SOME USEFUL EXPLORATORY ANALYSIS CAN BE PERFORMED
C                 ON THIS COMPRESSED DATA.
C
C                 NOTE THAT THIS IS NOT A TRUE CROSS-TABULATION AS IT
C                 ASSUMES THE VALUES FOR THE GROUP-ID VARIABLE ARE
C                 CONTIGUOUS.
C
C              3. STREAM READ DEFAULT STATISTICS FILE.DAT X1 ... XK
C
C                 THIS IS A VARIANT ON 2) THAT ALLOWS A DEFAULT SET
C                 OF STATISTICS TO BE COMPUTED ON A SINGLE PASS OF
C                 THE DATA.  THE FOLLOWING STATISTICS ARE COMPUTED:
C
C                    1. VALUE OF LAST ROW OF GROUP
C                    2. GROUP-ID
C                    3. SIZE
C                    4. MINIMUM
C                    5. MAXIMUM
C                    6. MEAN
C                    7. STANDARD DEVIATION
C                    8. SKEWNESS
C                    9. KURTOSIS
C                   10. MEDIAN
C                   11. INTERQUARTILE RANGE
C                   12. RANGE
C                   13. AUTOCORRELATION
C                   14. LOWER QUARTILE
C                   15. UPPER QUARTILE
C                   16. 0.01 QUANTILE
C                   17. 0.05 QUANTILE
C                   18. 0.10 QUANTILE
C                   19. 0.25 QUANTILE
C                   20. 0.75 QUANTILE
C                   21. 0.90 QUANTILE
C                   22. 0.95 QUANTILE
C                   23. 0.99 QUANTILE
C
C                 IN THIS CASE, A TAG VARIABLE (TAGSTAT) WILL BE
C                 CREATED THAT DEFINES THE STATISTIC).
C
C              4. STREAM READ FULL STATISTIC FILE.DAT X1 ... XK
C
C                 THIS SYNTAX WILL COMPUTE THE FOLLOWING STATISTICS
C                 USING A 1-PASS ALGORITHM FOR ALL OF THE DATA:
C
C                    1. COUNT
C                    2. MINIMUM
C                    3. MAXIMUM
C                    4. MEAN
C                    5. STANDARD DEVIATION
C                    6. SKEWNESS
C                    7. KURTOSIS
C                    8. RANGE
C                    9. AUTOCORRELATION (NOT AVAILABLE YET)
C
C                 FOLLOWING DEPEND ON ONE-PASS APPROXIMATION
C                 FOR PERCENTILES.  THIS IS STILL BEING INVESTIGATED,
C                 SO FOLLOWING NOT YET AVAILABLE.
C
C                   10. MEDIAN
C                   11. INTERQUARTILE RANGE
C                   12. 0.01 QUANTILE
C                   13. 0.05 QUANTILE
C                   14. 0.10 QUANTILE
C                   15. 0.25 QUANTILE
C                   16. 0.75 QUANTILE
C                   17. 0.90 QUANTILE
C                   18. 0.95 QUANTILE
C                   19. 0.99 QUANTILE
C
C                 A TAG VARIABLE WILL BE AUTOMATICALLY CREATED
C                 TO IDENTIFY THE STATISTIC.
C
C              5. STREAM READ PERCENTILES FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE PERCENTILES FILE.DAT X1 ...  XK
C
C                 THIS SYNTAX WILL REPLACE THE FULL VARIABLE WITH
C                 PERCENTILES OF THE DATA.  NOTE THAT THE PERCENTILE
C                 WILL BE APPROXIMATE (THE P^2 ALGORITHM IS USED).
C
C              6. STREAM READ CROSS TABULATE FILE.DAT Y1 ... YK
C
C                 THIS SYNTAX WILL COMPUTE THE ONE-PASS STATISTICS
C                 FOR THE CROSS-TABULATION.
C
C              7. STREAM READ CORRELATION           FILE.DAT X1 ... XK
C                 STREAM READ COVARIANCE            FILE.DAT X1 ... XK
C                 STREAM READ DISTANCE              FILE.DAT X1 ... XK
C                 STREAM READ MANHATTAN DISTANCE    FILE.DAT X1 ... XK
C                 STREAM READ CHEBYCHEV DISTANCE    FILE.DAT X1 ... XK
C                 STREAM READ COSINE DISTANCE       FILE.DAT X1 ... XK
C                 STREAM READ COSINE SIMILARITY     FILE.DAT X1 ... XK
C                 STREAM READ ANGULAR COSINE DISTANCE   FILE.DAT X1 ... XK
C                 STREAM READ ANGULAR COSINE SIMILARITY FILE.DAT X1 ... XK
C                 STREAM READ JACCARD SIMILARITY    FILE.DAT X1 ... XK
C                 STREAM READ JACCARD DISTANCE      FILE.DAT X1 ... XK
C                 STREAM READ HAMMING DISTANCE      FILE.DAT X1 ... XK
C                 STREAM READ CANBERRA DISTANCE     FILE.DAT X1 ... XK
C
C                 THIS SYNTAX WILL COMPUTE A CORRELATION MATRIX (OR
C                 A DISTANCE MATRIX) OF THE VARIABLES.  ANY PAIRS CONTAINING
C                 MISSING VALUES WILL BE OMITTED.
C
C                 YOU CAN USE THE COMMAND
C
C                     SET STREAM READ VARIABLE TYPE <VAR-NAME>
C
C                 WHERE <VAR-NAME> SPECIFIES A VARIABLE WHICH IDENTIFIES
C                 COLUMNS AS RESPONSE VARIABLES OR CATEGORICAL VARIABLES.
C                 SPECIFICALLY, IF ROW I OF THE THIS VARIABLE IS 0, THEN
C                 COLUMN I IS A CATEGORICAL VARIABLE AND IF ROW I IS 1,
C                 THEN COLUMN I IS A RESPONSE VARIABLE.  ONLY RESPONSE
C                 VARIABLES WILL BE INCLUDED IN THE CORRELATION MATRIX.
C
C              8. STREAM READ CROSS TABULATE CORRELATION           FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE COVARIANCE            FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE DISTANCE              FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE MANHATTAN DISTANCE    FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE CHEBYCHEV DISTANCE    FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE COSINE DISTANCE       FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE COSINE SIMILARITY     FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE ANGULAR COSINE DISTANCE   FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE ANGULAR COSINE SIMILARITY FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE JACCARD SIMILARITY    FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE JACCARD DISTANCE      FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE HAMMING DISTANCE      FILE.DAT X1 ... XK
C                 STREAM READ CROSS TABULATE CANBERRA DISTANCE     FILE.DAT X1 ... XK
C
C                 THIS IS A COMBINATION OF SYNTAX 6 AND SYNTAX 7.  THAT
C                 IS, WE COMPUTE VARIOUS DISTANCE/SIMILARITY MEASURES,
C                 BUT WE DO THIS FOR CROSS-TABULATIONS INSTEAD OF FOR
C                 THE FULL DATA SET.
C
C              NOTE THAT THIS VERSION OF THE READ HAS THE FOLLOWING
C              LIMITATIONS:
C
C              1. FUNCTIONS/STRINGS, PARAMETERS, MATRICES, AND
C                 IMAGES ARE NOT SUPPORTED.  ALSO, READING FROM THE
C                 CLIPBOARD IS NOT SUPPORTED.
C
C              2. THIS FORM OF THE READ IS RESTRICTED TO FILES (I.E.,
C                 READING FROM THE TERMINAL NOT SUPPORTED).
C
C              3. AUTOMATIC NAME DETECTION IS NOT SUPPORTED.
C
C              4. CHARACTER DATA IS NOT SUPPORTED (YOU CAN IGNORE
C                 FIELDS, BUT YOU CANNOT CREATE CHARACTER FIELDS).
C
C                 2018/07: CHARACTER VARIABLES WILL NOW BE INTERPERTED
C                          AS "CATEGORICAL" VARIABLES.  NOTE THAT
C                          THE CATEGORIES ARE CODED AS 1, 2, ... IN
C                          THE ORDER THEY ARE DETECTED IN THE FILE.
C
C              5. UNFORMATTED READ (BINARY FILE) NOT SUPPORTED.
C
C              6. SUBSET/EXCEPT/FOR CLAUSES ARE NOT SUPPORTED.
C
C     ASSUMPTION--THE INPUT  FILE ALREADY EXISTS; (THAT IS, DATAPLOT
C                 WILL AUTOMATICALLY OPEN THE FILE
C                 VIA (ON THE UNIVAC 1108), BY AN @ASG,AX ...)
C                 BUT WILL NOT AUTOMATICALLY CREATE THE FILE
C                 VIA (ON THE UNIVAC 1108), BY AN @ASG,UP ...))
C     ASSUMPTION--THE COMPUTER SYSTEM IS SUCH THAT EQUATING THE FILE NAME
C                 TO THE FORTRAN NUMERIC DESIGNATION OF 31 (OR HOWEVER
C                 THE VARIABLE  IREANU  IS DEFINED IN INITFO) IS
C                 PERMISSIBLE.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2016/7
C     ORIGINAL VERSION--JULY      2016.
C     UPDATED         --JULY      2018. INTERPRERT CHARACTER VARIABLES
C                                       AS CATEGORICAL NUMERIC VARIABLES
C                                       (WRITE AND CROSS-TAB CASES)
C     UPDATED         --JULY      2018. SUPPORT FOR CROSS TABULATION CASE
C     UPDATED         --JULY      2018. WHEN COMPUTE STATISTICS, OMIT
C                                       MISSING VALUES
C     UPDATED         --JULY      2018. OPTION TO AUTOMATICALLY CREATE
C                                       GROUP LABELS FROM CHARACTER DATA
C     UPDATED         --JULY      2018. IF A ROW LABEL COLUMN HAS BEEN
C                                       SPECIFIED, THEN IGNORE THIS
C                                       COLUMN
C     UPDATED         --JULY      2018. SUPPORT STREAM READ EUCLIDEAN DISTANCE
C     UPDATED         --JULY      2018. SUPPORT STREAM READ MANHATTAN DISTANCE
C     UPDATED         --JULY      2018. SUPPORT STREAM READ CHEBYCHEV DISTANCE
C     UPDATED         --JULY      2018. SUPPORT STREAM READ COSINE DISTANCE
C     UPDATED         --JULY      2018. SUPPORT STREAM READ COSINE SIMILARITY
C     UPDATED         --JULY      2018. SUPPORT STREAM READ ANGULAR COSINE DISTANCE
C     UPDATED         --JULY      2018. SUPPORT STREAM READ ANGULAR COSINE SIMILARITY
C     UPDATED         --JULY      2018. SUPPORT STREAM READ COVARIANCE
C     UPDATED         --JULY      2018. SUPPORT STREAM READ CORRELATION
C     UPDATED         --AUGUST    2018. SUPPORT STREAM READ CROSS
C                                               TABULATE .. DISTANCE
C     UPDATED         --AUGUST    2018. SUPPORT STREAM READ CROSS
C                                               TABULATE .. CORRELATION
C     UPDATED         --AUGUST    2018. SUPPORT STREAM READ CROSS
C                                               TABULATE .. COVARIANCE
C     UPDATED         --AUGUST    2018. SUPPORT STREAM READ HAMMING DISTANCE
C     UPDATED         --AUGUST    2018. SUPPORT STREAM READ CANBERRA DISTANCE
C     UPDATED         --AUGUST    2018. SUPPORT STREAM READ PERCENTILES
C     UPDATED         --AUGUST    2018. SUPPORT STREAM READ CROSS
C                                               TABULATE PERCENTILES
C     UPDATED         --JULY      2019. TWEAK SCRATCH SPACE
C     UPDATED         --SEPTEMBER 2019. CALL LIST TO DPREAL
C     UPDATED         --AUGUST    2023. CALL LIST TO CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IMACRO
      CHARACTER*12 IMACCS
      CHARACTER*4 ILOOST
      CHARACTER*1 IREPCH
C
      CHARACTER*80 ICREAF
      CHARACTER*80 ICWRIF
C
      CHARACTER*4 IOSW
      CHARACTER*4 IREARW
      CHARACTER*4 IGRPA2
      CHARACTER*4 ICFLAG
      CHARACTER*4 IBUGS2
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
      CHARACTER*4 ICASEQ
      CHARACTER*4 ICASEA
      CHARACTER*4 IEND
      CHARACTER*4 IH1
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IFMFLG
      CHARACTER*4 ICASRE
      CHARACTER*4 ICASR2
      CHARACTER*4 IOFILE
      CHARACTER*4 IOTERM
      CHARACTER*4 IFILQ2
      CHARACTER*4 IFOUN7
      CHARACTER*4 ICASS7
      CHARACTER*4 IWRITE
      CHARACTER*10 IFORMT
      CHARACTER*4 ICOMCH
      CHARACTER*4 ICOMSW
      CHARACTER*4 LINETY
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IH41
      CHARACTER*4 IH42
C
      INCLUDE 'DPCOPA.INC'
C
CCCCC CHARACTER*80 IFILE
      CHARACTER (LEN=MAXFNC) :: IFILE
      CHARACTER*12 ISTAT
      CHARACTER*12 IFORM
      CHARACTER*12 IACCES
      CHARACTER*12 IPROT
      CHARACTER*12 ICURST
      CHARACTER*4 IENDFI
      CHARACTER*4 IREWIN
      CHARACTER*4 ISUBN0
      CHARACTER*4 IERRFI
C
CCCCC CHARACTER*80 IFILE2
      CHARACTER (LEN=MAXFNC) :: IFILE2
      CHARACTER*12 ISTAT2
      CHARACTER*12 IFORM2
      CHARACTER*12 IACCE2
      CHARACTER*12 IPROT2
      CHARACTER*12 ICURS2
C
      CHARACTER*60 ISTANM
      CHARACTER*4  ISTADF
      CHARACTER*4  ISTARA
CCCCC CHARACTER*255 ICANS
      CHARACTER (LEN=MAXSTR) :: ICANS
      CHARACTER*4 ICASTO
      CHARACTER*80 IAJUNK
C
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZ3.INC'
      INCLUDE 'DPCOZD.INC'
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCOZC.INC'
C
      PARAMETER(MAXRDV=2048)
      PARAMETER(MAXCHV=20)
      PARAMETER(NDEFST=16)
      PARAMETER(NQUAN=6)
      PARAMETER(MAXCEL=10000)
C
      INTEGER IADE(200)
      INTEGER IFCOLL(*)
      INTEGER IFCOLU(*)
      INTEGER ITYPE(MAXRDV)
      INTEGER NIV(MAXRDV)
      INTEGER IEN(MAXRDV)
      INTEGER IECOL2(MAXRDV)
      INTEGER IXCATN(MAXCHV)
      INTEGER IECOLC(MAXCHV)
      INTEGER IENC(MAXCHV)
      DIMENSION X0CAT(MAXCHV)
      DIMENSION ICTLST(MAXRDV)
C
      INTEGER ITEMP1(MAXOBV)
      INTEGER ITEMP2(MAXOBV)
      INTEGER ITEMP3(MAXOBV)
      INTEGER ITEMP4(MAXOBV)
      INTEGER ITEMP5(MAXOBV)
      INTEGER ITEMP6(MAXOBV)
      INTEGER IVTYPE(MAXOBV)
C
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
      DOUBLE PRECISION DTEMP3(MAXOBV)
C
      DOUBLE PRECISION DVAL
      DOUBLE PRECISION DMEAN
      DOUBLE PRECISION DSD
      DOUBLE PRECISION DVALM1
      DOUBLE PRECISION DVALS1
      DOUBLE PRECISION DVALSO
      DOUBLE PRECISION DTERM1
      DOUBLE PRECISION DTERM2
      DOUBLE PRECISION DTERM3
      DOUBLE PRECISION DTERM4
      DOUBLE PRECISION DELTA
      DOUBLE PRECISION DELTAN
      DOUBLE PRECISION DELTN2
      DOUBLE PRECISION DM2
      DOUBLE PRECISION DM3
      DOUBLE PRECISION DM4
      DOUBLE PRECISION DSKEW
      DOUBLE PRECISION DKURT
      DOUBLE PRECISION DNNEW
C
      REAL TEMP1(MAXOBV)
      REAL TEMP2(MAXOBV)
      REAL TEMP3(MAXOBV)
      REAL TEMP4(MAXOBV)
      REAL TEMP5(MAXOBV)
      REAL TEMP6(MAXOBV)
      REAL XQ(NQUAN)
C
      INTEGER CELLID(MAXCEL)
      INTEGER CELLCN(MAXCEL)
      REAL CELLX1(MAXCEL)
      REAL CELLX2(MAXCEL)
      REAL CELLX3(MAXCEL)
      REAL CELLX4(MAXCEL)
C
      CHARACTER*4 IVRLST
      CHARACTER*4 IECASE(MAXRDV)
      CHARACTER*4 IVLIST(MAXRDV)
      CHARACTER*4 IVLIS2(MAXRDV)
      CHARACTER*4 ICLIST(MAXRDV)
      CHARACTER*4 ICLIS2(MAXRDV)
      CHARACTER*4 IASAVE(MAXRDV)
C
      CHARACTER*4 JVNAM1(MAXRDV)
      CHARACTER*4 JVNAM2(MAXRDV)
      CHARACTER*4 JENAM1(MAXRDV)
      CHARACTER*4 JENAM2(MAXRDV)
C
      CHARACTER*24 IXC(MAXCHV)
      CHARACTER*24 IXCAT(1000,MAXCHV)
      CHARACTER*4 ISTOR1(MAXRCL)
      CHARACTER*4 ISTOR2(MAXRCL)
      CHARACTER*4 ISTOR3(MAXRCL)
      CHARACTER*4 IB(MAXRCL)
C
      CHARACTER*4 LISTST(NDEFST)
C
      CHARACTER*4 IANSLO(MAXCIL,MAXLIL)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOFO.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOMC.INC'
C
      DIMENSION XSCRT(3*MAXOBW)
      DIMENSION X0(MAXRDV)
      DIMENSION X02(MAXRDV)
C
      EQUIVALENCE (G3RBAG(KGARB1),TEMP1(1))
      EQUIVALENCE (G3RBAG(KGARB2),TEMP2(1))
      EQUIVALENCE (G3RBAG(KGARB3),TEMP3(1))
      EQUIVALENCE (G3RBAG(KGARB4),TEMP4(1))
      EQUIVALENCE (G3RBAG(KGARB5),TEMP5(1))
      EQUIVALENCE (G3RBAG(KGARB6),TEMP6(1))
C
      EQUIVALENCE (GARBAG(IGARB1),X0(1))
      EQUIVALENCE (GARBAG(IGARB1+50000),X02(1))
      EQUIVALENCE (GARBAG(IGARB2),CELLX1(1))
      EQUIVALENCE (GARBAG(IGARB2+2*MAXCEL),CELLX2(1))
      EQUIVALENCE (GARBAG(IGARB2+4*MAXCEL),CELLX3(1))
      EQUIVALENCE (GARBAG(IGARB2+6*MAXCEL),CELLX4(1))
      EQUIVALENCE (GARBAG(IGARB3),XSCRT(1))
C
      EQUIVALENCE (IGARBG(IIGAR1),ITYPE(1))
      EQUIVALENCE (IGARBG(IIGAR1+5000),NIV(1))
      EQUIVALENCE (IGARBG(IIGAR1+10000),IEN(1))
      EQUIVALENCE (IGARBG(IIGAR1+15000),IECOL2(1))
      EQUIVALENCE (IGARBG(IIGAR1+20000),IADE(1))
      EQUIVALENCE (IGARBG(IIGAR1+25000),IXCATN(1))
      EQUIVALENCE (IGARBG(IIGAR1+30000),IECOLC(1))
      EQUIVALENCE (IGARBG(IIGAR1+35000),IENC(1))
      EQUIVALENCE (IGARBG(IIGAR1+40000),ICTLST(1))
      EQUIVALENCE (IGARBG(IIGAR2),ITEMP1(1))
      EQUIVALENCE (IGARBG(IIGAR3),ITEMP2(1))
      EQUIVALENCE (IGARBG(IIGAR4),ITEMP3(1))
      EQUIVALENCE (IGARBG(IIGAR5),ITEMP4(1))
      EQUIVALENCE (IGARBG(IIGAR6),ITEMP5(1))
      EQUIVALENCE (IGARBG(IIGAR7),ITEMP6(1))
      EQUIVALENCE (IGARBG(IIGAR8),IVTYPE(1))
      EQUIVALENCE (IGARBG(IIGAR9),CELLID(1))
      EQUIVALENCE (IGARBG(IIGR10),CELLCN(1))
C
      EQUIVALENCE (DGARBG(IDGAR1),DTEMP1(1))
      EQUIVALENCE (DGARBG(IDGAR2),DTEMP2(1))
      EQUIVALENCE (DGARBG(IDGAR3),DTEMP3(1))
C
      EQUIVALENCE (CGARBG(1),IECASE(1))
      EQUIVALENCE (CGARBG(20000),IVLIST(1))
      EQUIVALENCE (CGARBG(40000),IVLIS2(1))
      EQUIVALENCE (CGARBG(60000),IASAVE(1))
      EQUIVALENCE (CGARBG(80000),ICLIST(1))
      EQUIVALENCE (CGARBG(100000),ICLIS2(1))
      EQUIVALENCE (CGARBG(120000),JVNAM1(1))
      EQUIVALENCE (CGARBG(220000),JENAM1(1))
      EQUIVALENCE (CGARBG(240000),JVNAM2(1))
      EQUIVALENCE (CGARBG(340000),JENAM2(1))
      EQUIVALENCE (CGARBG(360000),ISTOR1(1))
      EQUIVALENCE (CGARBG(380000),ISTOR2(1))
      EQUIVALENCE (CGARBG(400000),ISTOR3(1))
      EQUIVALENCE (CGARBG(420000),IB(1))
      EQUIVALENCE (CGARBG(600000),IXC(1))
      EQUIVALENCE (CGARBG(800000),IXCAT(1,1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA LISTST/'VALU','SEQU','NUMB','MINI','MAXI','MEAN','SD  ',
     1            'SKEW','KURT','MEDI','IQRA','RANG','AUCR','LOWQ',
     1            'UPPQ','QUAN'/
C
      DATA XQ/0.01, 0.05, 0.10, 0.90, 0.95, 0.99/
      DATA PI/3.1415926535 8979323846 2643383279 503/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='RE  '
      IFOUND='YES'
      IERROR='NO'
      ICASRE='-999'
      ICASR2='-999'
      IOFILE='-999'
      IOTERM='-999'
      IFILQ2=IFILQU
      IFILQU='ON'
      IVRLST='YES'
      IGRPA2=IGRPAU
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
      IMNVAR=-1
      IMXVAR=-1
      NGRP=0
      NCELL=0
      ICELL=0
      ILAST=0
      IGRP1=0
      J=0
      JM1=0
      AVAL=0.0
      IFLAGC=0
      ICNT2=0
      NINT=0
      IIDX1=0
      IFLGOU=0
C
      DO15I=1,MAXRDV
        IASAVE(I)='    '
        IVLIST(I)='    '
        IVLIS2(I)='    '
        ITYPE(I)=0
        JVNAM1(I)='    '
        JVNAM2(I)='    '
   15 CONTINUE
      DO13I=1,MAXCHV
        IXC(I)=' '
        ICLIST(I)=' '
        ICLIS2(I)=' '
        IECOLC(I)=0
        IENC(I)=0
        DO14J=1,1000
          IXCAT(J,I)=' '
   14   CONTINUE
        IXCATN(I)=0
        X0CAT(I)=0.0
   13 CONTINUE
      DO18I=1,MAXCEL
        CELLID(I)=0
        CELLCN(I)=0
        CELLX1(I)=0.0
        CELLX2(I)=0.0
        CELLX3(I)=0.0
        CELLX4(I)=0.0
   18 CONTINUE
C
       DO19I=1,3*MAXOBW
         XSCRT(I)=0.0
   19  CONTINUE
C
      IBILLI=I1MACH(9)
      I2=0
      NUMVRD=0
      NUMPRD=0
      NUMFRD=0
      AFROW2=IFROW2
      MAXN2=MAXCHF
      IMATC1=(-999)
      IMATNR=(-999)
      IMATNC=(-999)
      LINETY='-999'
      NCALL=0
      NCOLS=0
      NROWZ=0
      NCOLZ=0
      ITOTZ=0
      MAXV2=MAXRDV
C
      PSTAM2=PSTAMV
      PSTAMV=PREAMV
C
      IF(ISREGL.EQ.'ON')THEN
        DO22I=1,MAXGRP
          IF(IGRPVN(I).EQ.'        ')THEN
            IGRP1=I
            GOTO23
          ENDIF
   22   CONTINUE
        IGRP1=MAXGRP+1
   23   CONTINUE
      ENDIF
C
C               ***************************
C               **  TREAT THE READ CASE  **
C               ***************************
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTRE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IFROW1,AFROW2,IFCOL1,IFCOL2,NUMRCM
   52   FORMAT('IFROW1,AFROW2,IFCOL1,IFCOL2,NUMRCM = ',I8,2X,G15.7,3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IRD,IRD2,ISKIP,IOSW
   54   FORMAT('IRD,IRD2,ISKIP,IOSW = ',3I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,56)IMACRO,IMACNU,IMACCS
   56   FORMAT('IMACRO,IMACNU,IMACCS = ',A4,I8,2X,A12)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)IBUGQ,IBUGS2,ISUBRO,IERROR,IWIDTH
   63   FORMAT('IBUGQ,IBUGS2,ISUBRO,IERROR,IWIDTH = ',4(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,65)(IANSLC(I),I=1,MIN(100,IWIDTH))
   65     FORMAT('(IANSLC(I),I=1,IWIDTH) = ',100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,72)IREANA
   72   FORMAT('IREANA = ',A80)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,73)IREANU,IREAST,IREAFO,IREAAC,IREAFO,IREACS
   73   FORMAT('IREANU,IREAST,IREAFO,IREAAC,IREAFO,IREACS = ',
     1         I8,5(1X,A12))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,82)NUMNAM,N2,MAXN2,NCREAF
   82   FORMAT('NUMNAM,N2,MAXN2,NCREAF = ',4I8)
        CALL DPWRST('XXX','BUG ')
        IF(NCREAF.GE.1)THEN
          WRITE(ICOUT,85)(ICREAF(I:I),I=1,NCREAF)
   85     FORMAT('(ICREAF(I:I),I=1,NCREAF) = ',80A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,87)IREARW,ICOMCH,ICOMSW
   87   FORMAT('IREARW,ICOMCH,ICOMSW = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,88)IUNFOF,IUNFNR,IUNFMC,NUMRCM
   88   FORMAT('IUNFOF,IUNFNR,IUNFMC,NUMRCM = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *******************************************************
C               **  STEP 1--                                         **
C               **  CHECK FOR THE PROPER NUMBER OF INPUT ARGUMENTS.  **
C               *******************************************************
C
      ISTEPN='1'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
  111   FORMAT('      NO ARGUMENTS GIVEN FOR THE COMMAND.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO8800
      ENDIF
C
C               *****************************************
C               **  STEP 1B--                          **
C               **  DETERMINE THE TYPE OF READ CASE--  **
C               **     1) VARIABLE                     **
C               *****************************************
C
      ICASRE='VARI'
      IF(ICOM.NE.'STRE')GOTO9000
      IF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'WRIT')THEN
        ICASRE='WRIT'
        IWORD=4
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'GROU'.AND.
     1       IHARG(3).EQ.'STAT')THEN
        ICASRE='GSTA'
        JMIN=4
        JMAX=MIN(NUMARG,JMIN+6)
        CALL EXTSTA(ICOM,ICOM2,IHARG,IHARG2,IARGT,ARG,NUMARG,JMIN,JMAX,
     1              ICASS7,ISTANM,ISTANR,ISTADF,ISTARA,
     1              IFOUN7,ILOCV,ISUBRO,IBUGS2,IERROR)
C
        IF(IFOUN7.EQ.'NO')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,135)
  135     FORMAT('      THE REQUESTED STATISTIC WAS NOT FOUND.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSEIF(ISTANR.GT.1)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,131)
  131     FORMAT('      THE SPECIED STATISTIC REQUIRES MORE THAN ',
     1           'ONE REPONSE VARIABLE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,133)ISTANM
  133     FORMAT('      THE SPECIED STATISTIC IS: ',A60)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        IWORD=ILOCV+1
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'DEFA'.AND.
     1       IHARG(3).EQ.'STAT')THEN
        ICASRE='DSTA'
        IWORD=5
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'FULL'.AND.
     1       IHARG(3).EQ.'STAT')THEN
        ICASRE='FSTA'
        IWORD=5
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'CROS'.AND.
     1       IHARG(3).EQ.'TABU')THEN
C
        IF(IHARG(4).EQ.'EUCL' .AND. IHARG(5).EQ.'DIST')THEN
          ICASRE='CTED'
          IWORD=7
        ELSEIF(IHARG(4).EQ.'CHEB' .AND. IHARG(5).EQ.'DIST')THEN
          ICASRE='CTCD'
          IWORD=7
        ELSEIF(IHARG(4).EQ.'MANH' .AND. IHARG(5).EQ.'DIST')THEN
          ICASRE='CTMD'
          IWORD=7
        ELSEIF(IHARG(4).EQ.'BLOC' .AND. IHARG(5).EQ.'DIST')THEN
          ICASRE='CTMD'
          IWORD=7
        ELSEIF(IHARG(4).EQ.'COSI' .AND. IHARG(5).EQ.'DIST')THEN
          ICASRE='CCOD'
          IWORD=7
        ELSEIF(IHARG(4).EQ.'COSI' .AND. IHARG(5).EQ.'SIMI')THEN
          ICASRE='CCOS'
          IWORD=7
        ELSEIF(IHARG(4).EQ.'JACC' .AND. IHARG(5).EQ.'SIMI')THEN
          ICASRE='CJAS'
          IWORD=7
        ELSEIF(IHARG(4).EQ.'JACC' .AND. IHARG(5).EQ.'DIST')THEN
          ICASRE='CJAD'
          IWORD=7
        ELSEIF(IHARG(4).EQ.'ANGU' .AND. IHARG(5).EQ.'COSI' .AND.
     1         IHARG(6).EQ.'DIST')THEN
          ICASRE='CACD'
          IWORD=8
        ELSEIF(IHARG(4).EQ.'ANGU' .AND. IHARG(5).EQ.'COSI' .AND.
     1         IHARG(6).EQ.'SIMI')THEN
          ICASRE='CACS'
          IWORD=8
        ELSEIF(IHARG(4).EQ.'CANB' .AND. IHARG(5).EQ.'DIST')THEN
          ICASRE='CTXD'
          IWORD=7
        ELSEIF(IHARG(4).EQ.'HAMM' .AND. IHARG(5).EQ.'DIST')THEN
          ICASRE='CTHD'
          IWORD=7
        ELSEIF(IHARG(4).EQ.'CORR')THEN
          ICASRE='CTCR'
          IWORD=6
        ELSEIF(IHARG(4).EQ.'COVA')THEN
          ICASRE='CTCV'
          IWORD=6
        ELSEIF(IHARG(4).EQ.'PERC')THEN
          ICASRE='CTPE'
          IWORD=6
        ELSE
          ICASRE='CSTA'
          IWORD=5
        ENDIF
C
C       CHECK IF ANY CROSS-TAB VARIABLES HAVE BEEN DEFINED
C
        NCRT=0
        IF(ISREC1.NE.' ' .AND. ISREC1.NE.'NULL')THEN
          NCRT=1
          IF(ISREC2.NE.' ' .AND. ISREC2.NE.'NULL')THEN
            NCRT=2
            IF(ISREC3.NE.' ' .AND. ISREC3.NE.'NULL')THEN
              NCRT=3
              IF(ISREC4.NE.' ' .AND. ISREC4.NE.'NULL')THEN
                NCRT=4
              ENDIF
            ENDIF
          ENDIF
        ELSE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,141)
  141     FORMAT('      FOR THE CROSS-TAB CASE, NO CROSS-TABULATION ',
     1           'VARIABLES WERE SPECIFIED.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,143)
  143     FORMAT('      USE THE   SET STREAM READ CROSS TABULATE ',
     1           'VARIABLE <ONE/TWO/THREE FOUR>  COMMAND')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,145)
  145     FORMAT('      TO SPECIFY THE CROSS-TABULATION VARIABLES.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'PERC')THEN
        ICASRE='PERC'
        IWORD=4
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'CORR')THEN
        ICASRE='CORR'
        IWORD=4
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'COVA')THEN
        ICASRE='COVA'
        IWORD=4
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'DIST')THEN
        ICASRE='EDIS'
        IWORD=4
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'EUCL'.AND.
     1       IHARG(3).EQ.'DIST')THEN
        ICASRE='EDIS'
        IWORD=5
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'MANH'.AND.
     1       IHARG(3).EQ.'DIST')THEN
        ICASRE='MDIS'
        IWORD=5
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'CHEB'.AND.
     1       IHARG(3).EQ.'DIST')THEN
        ICASRE='CDIS'
        IWORD=5
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'COSI'.AND.
     1       IHARG(3).EQ.'DIST')THEN
        ICASRE='CODI'
        IWORD=5
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'COSI'.AND.
     1       IHARG(3).EQ.'SIMI')THEN
        ICASRE='COSI'
        IWORD=5
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'ANGU'.AND.
     1       IHARG(3).EQ.'COSI'.AND.IHARG(4).EQ.'DIST')THEN
        ICASRE='ACDI'
        IWORD=6
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'ANGU'.AND.
     1       IHARG(3).EQ.'COSI'.AND.IHARG(4).EQ.'SIMI')THEN
        ICASRE='ACSI'
        IWORD=6
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'JACC'.AND.
     1       IHARG(3).EQ.'SIMI')THEN
        ICASRE='JASI'
        IWORD=5
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'JACC'.AND.
     1       IHARG(3).EQ.'DIST')THEN
        ICASRE='JADI'
        IWORD=5
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'HAMM'.AND.
     1       IHARG(3).EQ.'DIST')THEN
        ICASRE='HDIS'
        IWORD=5
      ELSEIF(IHARG(1).EQ.'READ'.AND.IHARG(2).EQ.'CANB'.AND.
     1       IHARG(3).EQ.'DIST')THEN
        ICASRE='CNDI'
        IWORD=5
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,121)
  121   FORMAT('      UNRECOGNIZED FORM FOR THE COMMAND.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        WRITE(ICOUT,155)ICASRE,IWORD
  155   FORMAT('ICASRE,IWORD = ',A4,2X,I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     2018/07: AUTOMATICALLY TURN ON READING OF CHARACTER DATA AS
C              CATEGORICAL DATA FOR "WRITE" AND "CROSS-TAB" CASES
C              ONLY.
C
      IF(ICASRE.EQ.'CSTA' .OR. ICASRE.EQ.'WRIT')THEN
        IGRPAU='CATE'
      ELSE
        IGRPAU='OFF'
      ENDIF
C
C     2018/07: FOR CORRELATION AND DISTANCE CASES, CHECK IF USER
C              HAS ENTERED THE "SET STREAM READ VARIABLE TYPE" COMMAND.
C
C              ALSO ADD THIS FOR PERCENTILE CASE.  FOR PERCENTILE
C              CASE, USE AS A WAY OF SKIPPING VARIABLES (SUCH AS
C              FACTOR VARIABLES) FOR WHICH WE DO NOT WANT TO
C              COMPUTE PERCENTILES.
C
      IF(ICASRE.EQ.'CORR' .OR. ICASRE.EQ.'EDIS' .OR.
     1   ICASRE.EQ.'PERC' .OR. ICASRE.EQ.'CTPE' .OR.
     1   ICASRE.EQ.'MDIS' .OR. ICASRE.EQ.'CDIS' .OR.
     1   ICASRE.EQ.'CODI' .OR. ICASRE.EQ.'COSI' .OR.
     1   ICASRE.EQ.'ACDI' .OR. ICASRE.EQ.'ACSI' .OR.
     1   ICASRE.EQ.'JADI' .OR. ICASRE.EQ.'JASI' .OR.
     1   ICASRE.EQ.'HDIS' .OR. ICASRE.EQ.'CNDI' .OR.
     1   ICASRE.EQ.'COVA' .OR. ICASRE.EQ.'CTED' .OR.
     1   ICASRE.EQ.'CTMD' .OR. ICASRE.EQ.'CTCD' .OR.
     1   ICASRE.EQ.'CTHD' .OR. ICASRE.EQ.'CTXD' .OR.
     1   ICASRE.EQ.'CCOD' .OR. ICASRE.EQ.'CCOS' .OR.
     1   ICASRE.EQ.'CACD' .OR. ICASRE.EQ.'CACS' .OR.
     1   ICASRE.EQ.'CJAD' .OR. ICASRE.EQ.'CJAS' .OR.
     1   ICASRE.EQ.'CTCR' .OR. ICASRE.EQ.'CTCV'
     1  )THEN
        DO160II=1,MAXOBV
          IVTYPE(II)=1
  160   CONTINUE
        IF(ISREVT.EQ.' ' .OR. ISREVT.EQ.'NULL' .OR.
     1     ISREVT.EQ.'NONE')THEN
          DO161II=1,MAXOBV
            IVTYPE(II)=1
  161     CONTINUE
        ELSE
          IH41=ISREVT(1:4)
          IH42=ISREVT(5:8)
          IHWUSE='V'
          MESSAG='NO'
          CALL CHECKN(IH41,IH42,IHWUSE,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1                ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
C
          IF(IERROR.EQ.'YES')THEN
            DO163II=1,MAXOBV
              IVTYPE(II)=1
  163       CONTINUE
          ELSE
            ICOLQP=IVALUE(ILOCV)
            NTEMP=IN(ILOCV)
            ICNT=0
            DO165I=1,NTEMP
              IJ=MAXN*(ICOLQP-1)+I
              ICNT=ICNT+1
              IF(ICOLQP.LE.MAXCOL)IVTYPE(ICNT)=INT(V(IJ)+0.5)
              IF(ICOLQP.EQ.MAXCP1)IVTYPE(ICNT)=INT(PRED(I)+0.5)
              IF(ICOLQP.EQ.MAXCP2)IVTYPE(ICNT)=INT(RES(I)+0.5)
              IF(ICOLQP.EQ.MAXCP3)IVTYPE(ICNT)=INT(YPLOT(I)+0.5)
              IF(ICOLQP.EQ.MAXCP4)IVTYPE(ICNT)=INT(XPLOT(I)+0.5)
              IF(ICOLQP.EQ.MAXCP5)IVTYPE(ICNT)=INT(X2PLOT(I)+0.5)
              IF(ICOLQP.EQ.MAXCP6)IVTYPE(ICNT)=INT(TAGPLO(I)+0.5)
              IF(IVTYPE(ICNT).LT.0)THEN
                IVTYPE(ICNT)=0
              ELSEIF(IVTYPE(ICNT).GT.1)THEN
                IVTYPE(ICNT)=1
              ENDIF
  165       CONTINUE
          ENDIF
        ENDIF
      ENDIF
C
C               ******************************************************
C               **  STEP 2A--                                       **
C               **  EXTRACT FILE NAME (STREAM READ ONLY SUPPORTED   **
C               ******************************************************
C
      ISTEPN='2A'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOFILE='NO'
      CALL DPFILE(IANSLC,IWIDTH,IWORD,
     1            IOFILE,IBUGS2,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IOFILE.EQ.'NO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)
  211   FORMAT('***** ERROR FROM STREAM READ--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,213)
  213   FORMAT('      TERMINAL READS (I.E., READ WITH NO FILE NAME ',
     1         'SPECIFIED)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,215)
  215   FORMAT('      ARE NOT SUPPORTED FOR THE STREAM READ COMMAND.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *************************************
C               **  STEP 2B--                      **
C               **  IF HAVE THE FILE INPUT CASE--  **
C               **  COPY OVER VARIABLES            **
C               *************************************
C
      ISTEPN='2B'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOUNIT=IREANU
      IFILE=IREANA
      ISTAT=IREAST
      IFORM=IREAFO
      IACCES=IREAAC
      IPROT=IREAPR
      ICURST=IREACS
C
      ISUBN0='STRE'
      IERRFI='NO'
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        WRITE(ICOUT,1183)IOUNIT,ISUBN0,IERRFI
 1183   FORMAT('IOUNIT,ISUBN0,IERRFI = ',I8,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1184)IFILE
 1184   FORMAT('IFILE = ',A80)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1185)ISTAT,IFORM,IACCES,IPROT,ICURST
 1185   FORMAT('ISTAT,IFORM,IACCES,IPROT,ICURST = ',4(A12,2X),A12)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***********************************************
C               **  STEP 2C--                                **
C               **  IF HAVE THE FILE INPUT CASE--            **
C               **  CHECK TO SEE IF THE READ FILE MAY EXIST  **
C               ***********************************************
C
      ISTEPN='2C'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ISTAT.EQ.'NONE')THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1212)
 1212   FORMAT('      THE DESIRED READING CANNOT BE CARRIED OUT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1214)
 1214   FORMAT('      BECAUSE THE INTERNAL VARIABLE   IREAST   WHICH')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1215)
 1215   FORMAT('      ALLOWS SUCH READING HAS BEEN SET TO    NONE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1217)ISTAT,IREAST
 1217   FORMAT('ISTAT,IREAST = ',A12,2X,A12)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1218)
 1218   FORMAT('      ALL READING MUST BE DONE DIRECTLY FROM ',
     1         'THE TERMINAL')
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
C               *************************************
C               **  STEP 2D--                      **
C               **  IF HAVE THE FILE INPUT CASE--  **
C               **  EXTRACT THE FILE NAME          **
C               *************************************
C
      ISTEPN='2D'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1310I=1,MAXSTR
        ICANS(I:I)=IANSLC(I)(1:1)
 1310 CONTINUE
C
      ISTART=1
      ISTOP=IWIDTH
      CALL DPEXWO(ICANS,ISTART,ISTOP,IWORD,
     1            ICOL1,ICOL2,IFILE,NCFILE,
     1            IBUGS2,ISUBRO,IERROR)
C
      IF(NCFILE.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1342)
 1342   FORMAT('      A USER FILE NAME IS REQUIRED IN THE STREAM ',
     1         'READ COMMAND.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1346)
 1346   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1347)(IANSLC(I),I=1,MIN(100,IWIDTH))
 1347     FORMAT('      ',100A1)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        WRITE(ICOUT,1351)NCFILE,IFILE(1:NCFILE)
 1351   FORMAT('NCFILE,IFILE(1:NCFILE) = ',I5,2X,A80)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     FOR THE WRITE CASE, NEED TO SPECIFY AN OUTPUT FILE
C
      IFLGOU=0
C
      IF(ICASRE.EQ.'WRIT')THEN
C
C       FOR "WRITE" CASE, ADD A "_FORM" BEFORE THE PERIOD.  FOR
C       EXAMPLE, IF THE INPUT FILE IS "TEST.DAT", THEN MAKE THE
C       OUTPUT FILE "TEST_FORM.DAT".
C
        IF(NCFILE.GT.75)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1412)
 1412     FORMAT('      OUTPUT FILE NAME HAS GREATER THAN 80 ',
     1           'CHARACTERS.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1414)
 1414     FORMAT('      STREAM READ NOT PERFORMED.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1346)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,1347)(IANSLC(I),I=1,MIN(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO8800
        ENDIF
C
        IOUNI2=IWRINU
        ISTAT2=IWRIST
        IFORM2=IWRIFO
        IACCE2=IWRIAC
        IPROT2=IWRIPR
        ICURS2=IWRICS
C
        DO1410II=NCFILE,1,-1
          IF(IFILE(II:II).EQ.IFCHAR)THEN
            IFILE2=' '
            IFILE2(1:II-1)=IFILE(1:II-1)
            IFILE2(II:II+4)='_FORM'
            IFILE2(II+5:II+5)=IFCHAR
            NCFIL2=II+5
            NTEMP=NCFILE-II
            IFILE2(NCFIL2+1:NCFIL2+NTEMP)=IFILE(II+1:NCFILE)
            NCFIL2=NCFIL2+NTEMP
            GOTO1419
          ENDIF
 1410   CONTINUE
 1419   CONTINUE
        IFLGOU=1
      ENDIF
C
C               **************************************
C               **  STEP 2E--                       **
C               **  OPEN THE INPUT AND OUTPUT FILES **
C               **************************************
C
      ISTEPN='2E'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IREWIN='ON'
      IF(NCREAF.GT.0)THEN
        IF(ICREAF(1:5).EQ.'(UNFO')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1442)
 1442     FORMAT('      UNFORMATTED READS NOT SUPPORTED FOR STREAM ',
     1           'READ COMMAND.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSE
          IFORM='FORMATTED'
          IFMFLG='OFF'
        ENDIF
      ELSE
        IFORM='FORMATTED'
        IFMFLG='OFF'
      ENDIF
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        WRITE(ICOUT,1451)IREACS
 1451   FORMAT('BEFORE DPOPFI: IREACS = ',A12)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IREACS(1:4).EQ.'CLOS')THEN
        CALL DPOPFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1              IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
        IF(IERRFI.EQ.'YES')GOTO9090
C
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
          WRITE(ICOUT,1453)IREACS
 1453     FORMAT('AFTER DPOPFI: IREACS = ',A12)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(IREACS(1:4).EQ.'CLOS')IREACS='OPEN'
      ENDIF
C
      IF(IWRICS(1:4).EQ.'CLOS' .AND. IFLGOU.EQ.1)THEN
        CALL DPOPFI(IOUNI2,IFILE2,ISTAT2,IFORM2,IACCE2,IPROT2,ICURS2,
     1              IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
        IF(IERRFI.EQ.'YES')GOTO9090
        IF(IWRICS(1:4).EQ.'CLOS')IWRICS='OPEN'
      ENDIF
C
C               ******************************************
C               **  STEP 2F--                           **
C               **  DEFINE THE INPUT READ UNIT NUMBER,  **
C               **  AND OTHER VARIABLES NEEDED          **
C               **  FOR UPCOMING READS.                 **
C               ******************************************
C
      ISTEPN='2F'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IRD2=IREANU
C
C               *****************************************
C               **  STEP 3--                           **
C               **  CHECK TO SEE THE TYPE CASE--       **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET; OR                    **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='3'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO390
      DO300J=1,NUMARG
        J1=J
        IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ')THEN
          ICASEQ='SUBS'
          ILOCQ=J1
          GOTO390
        ELSEIF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ')THEN
          ICASEQ='SUBS'
          ILOCQ=J1
          GOTO390
        ELSEIF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')THEN
          ICASEQ='FOR'
          ILOCQ=J1
          GOTO390
        ENDIF
  300 CONTINUE
  390 CONTINUE
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        WRITE(ICOUT,391)NUMARG,ILOCQ
  391   FORMAT('NUMARG,ILOCQ = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ******************************************************
C               **  STEP 4--                                        **
C               **  DETERMINE THE TYPE AND NUMBER OF ITEMS          **
C               **  TO BE READ.  CURRENTLY ONLY VARIABLES ARE       **
C               **  SUPPORTED, ANY OTHER TYPE WILL BE AN ERROR.     **
C               **  NUMV   = NUMBER OF VARIABLES TO BE READ         **
C               ******************************************************
C
      ISTEPN='4'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IV=0
      JMIN=IWORD
C
CCCCC QUOTED FILE NAMES MAY CONTAIN SPACES.  DETERMINE HOW MANY ARGUMENTS
CCCCC FILE NAME MAY CONTAIN.  INCLUDE HYPHENS AS WELL AS SPACES.
C
      IF(IFILE(1:1).EQ.'"')THEN
        DO421I=80,1,-1
          IF(IFILE(I:I).NE.' ')THEN
            ILAST=I
            GOTO424
          ENDIF
  421   CONTINUE
  424   CONTINUE
        ICOUNT=0
        ISPAC=0
        DO426I=1,ILAST
          IF((IFILE(I:I).EQ.' '.OR.IFILE(I:I).EQ.'-') .AND.
     1      ISPAC.EQ.0)THEN
            ISPAC=1
            ICOUNT=ICOUNT+1
          ELSEIF((IFILE(I:I).NE.' '.AND.IFILE(I:I).NE.'-') .AND.
     1      ISPAC.EQ.1)THEN
            ISPAC=0
          ENDIF
  426   CONTINUE
        JMIN=JMIN+ICOUNT
      ENDIF
C
      JMAX=ILOCQ-1
      NUMV=JMAX-JMIN+1
C
      ISTEPN='4A'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,403)ICASRE,IVRLST,JMIN,JMAX,NUMV
  403   FORMAT('ICASRE,IVRLST,JMIN,JMAX,NUMV = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(JMIN.GT.JMAX)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,404)
  404   FORMAT('      NO VARIABLE NAMES FOUND.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO8800
      ENDIF
C
      ICNTNU=0
      ICNTCH=0
      ICOUNT=0
      IISKIP=0
      ICFLAG='NO'
      IF(IGRPAU.EQ.'ON' .OR. IGRPAU.EQ.'CATE')ICFLAG='YES'
C
      DO4200J=JMIN,JMAX
C
        IF(IISKIP.EQ.1)THEN
          IISKIP=0
          GOTO4200
        ENDIF
C
        ICOUNT=ICOUNT+1
        IH1=IHARG(J)
        IH2=IHARG2(J)
C
C     ***************
C     THE FOLLOWING CODE ALLOWS THE    TO    KEYWORD
C     TO BE ACTIVATED, AS IN
C     READ FILE.EXT Y1 TO Y10
C     DECEMBER 1986
C     ***************
C
        ICASTO='OFF'
        IF(IH1.EQ.'TO  ')THEN
          ICASTO='ON'
          JM1=J-1
          JP1=J+1
          CALL DPEXTL(IHARG(JM1),IHARG2(JM1),IHARG(JP1),IHARG2(JP1),
     1                KNUMB,IVAL1,IVAL2,IBUGS2,ISUBRO,IERROR)
C
          IF(IVAL1.EQ.IVAL2)THEN
            IISKIP=1
            GOTO4200
          ENDIF
C
          IVA1P1=IVAL1+1
          IVA2M1=IVAL2-1
          IF(IVA1P1.GT.IVA2M1)GOTO4200
          IVAL=IVAL1
        ELSE
          GOTO4219
        ENDIF
 4215   CONTINUE
        IVAL=IVAL+1
        IF(IVAL.GE.IVAL2)GOTO4200
C
        CALL DPAPNU(IHARG(JM1),IHARG2(JM1),KNUMB,IVAL,
     1              IH1,IH2,IBUGS2,ISUBRO,IERROR)
 4219   CONTINUE
C
        ISTEPN='4B'
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,4271)NUMNAM
 4271     FORMAT('AT 4300, NUMNAM = ',I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        ICASEA='    '
        DO4300I=1,NUMNAM
          I2=I
          IF(IH1.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I))THEN
            IF(IUSE(I).EQ.'V')THEN
              ICASEA='V'
              IV=IV+1
              IF(IV.GT.MAXV2)GOTO4370
              JVNAM1(IV)=IH1
              JVNAM2(IV)=IH2
              NIV(IV)=IN(I2)
              IECASE(IV)='OLD'
              IECOL2(IV)=IVALUE(I2)
            ELSE
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,211)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,4312)
 4312         FORMAT('      A NAME IN THE LIST OF VARIABLES TO BE ',
     1               'READ INCLUDED THE')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,4315)
 4315         FORMAT('      A PREVIOUSLY-DEFINED NAME, BUT NOT AS A ',
     1               'VARIABLE.')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,4316)IH1,IH2
 4316         FORMAT('      THE PREVIOUSLY DEFINED NAME IS ',2A4,' .')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,4317)
 4317         FORMAT('      THE STREAM READ WAS NOT CARRIED OUT.')
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO8800
C
            ENDIF
          ENDIF
 4300   CONTINUE
C
        IV=IV+1
        IF(IV.LE.MAXV2)THEN
          JVNAM1(IV)=IH1
          JVNAM2(IV)=IH2
          IECASE(IV)='NEW'
          IECOL2(IV)=-1
        ENDIF
C
        ISTEPN='4C'
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,4273)IV,MAXV2
 4273     FORMAT('AFTER 4300, IV,MAXV2 = ',2I8)
          CALL DPWRST('XXX','BUG ')
          IF(IV.GT.0)THEN
            DO4275II=1,IV
              WRITE(ICOUT,4277)II,JVNAM1(II),JVNAM2(II)
 4277         FORMAT('II,JVNAM1(II),JVNAM2(II)=',I8,2X,2A4)
              CALL DPWRST('XXX','BUG ')
 4275       CONTINUE
          ENDIF
        ENDIF
C
 4370   CONTINUE
        IF(IV.GT.MAXV2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4382)
 4382     FORMAT('      THE NUMBER OF NAMES IN THE STREAM READ ',
     1           'COMMAND HAS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4384)MAXV2
 4384     FORMAT('      JUST EXCEEDED THE ALLOWABLE MAXIMUM (',
     1           I5,')')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO8800
        ENDIF
C
        IF(ICASTO.EQ.'ON')GOTO4215
C
 4200 CONTINUE
C
      NUMV=IV
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        WRITE(ICOUT,4411)NUMV
 4411   FORMAT('NUMV = ',7I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4412)
 4412   FORMAT('I,JVNAM1(I),JVNAM2(I)')
        CALL DPWRST('XXX','BUG ')
        DO4420I=1,NUMV
          WRITE(ICOUT,4421)I,JVNAM1(I),JVNAM2(I)
 4421     FORMAT(I8,5X,2A4,1X,2A4)
          CALL DPWRST('XXX','BUG ')
 4420   CONTINUE
      ENDIF
C
C               ******************************************************
C               **  STEP 4B--                                       **
C               **  IS ONE OF THE VARIABLES THE "GROUP-ID"          **
C               **  VARIABLE?                                       **
C               ******************************************************
C
      ISTEPN='4B'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IVARGR=-1
      AHOLD=CPUMIN
      IF(ISREVN.NE.'NONE')THEN
        DO4430II=1,NUMV
          IF(ISREVN(1:4).EQ.JVNAM1(II) .AND. 
     1       ISREVN(5:8).EQ.JVNAM2(II))THEN
            IVARGR=II
            GOTO4439
          ENDIF
 4430   CONTINUE
 4439   CONTINUE
      ENDIF
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        WRITE(ICOUT,4441)IVARGR,AHOLD
 4441   FORMAT('IVARGR,AHOLD = ',I5,2X,E15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ******************************************************
C               **  STEP 4C--                                       **
C               **  FOR THE CROSS TABULATION CASE, WHAT ARE THE     **
C               **  RESPONSE VARIABLES AND WHAT ARE THE CROSS-      **
C               **  TABULATION VARIABLES?                           **
C               ******************************************************
C
      ISTEPN='4C'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     ONLY DO THIS FOR THE CROSS-TABULATION CASE
C
      IVARR1=-1
      IVARR2=-1
      IVARR3=-1
      IVARC1=-1
      IVARC2=-1
      IVARC3=-1
      IVARC4=-1
C
      IF(ICASRE.EQ.'CSTA' .OR. ICASRE.EQ.'CTED' .OR.
     1   ICASRE.EQ.'CTMD' .OR. ICASRE.EQ.'CTCD' .OR.
     1   ICASRE.EQ.'CCOD' .OR. ICASRE.EQ.'CCOS' .OR.
     1   ICASRE.EQ.'CACD' .OR. ICASRE.EQ.'CACS' .OR.
     1   ICASRE.EQ.'CJAD' .OR. ICASRE.EQ.'CJAS' .OR.
     1   ICASRE.EQ.'CTHD' .OR. ICASRE.EQ.'CTXD' .OR.
     1   ICASRE.EQ.'CTCR' .OR. ICASRE.EQ.'CTCV' .OR.
     1   ICASRE.EQ.'CTPE'
     1  )THEN
        IF(ISRER1.NE.'NONE' .AND. ISRER1.NE.' ')THEN
          DO4440II=1,NUMV
            IF(ISRER1(1:4).EQ.JVNAM1(II) .AND. 
     1         ISRER1(5:8).EQ.JVNAM2(II))THEN
              IVARR1=II
              GOTO4449
            ENDIF
 4440     CONTINUE
 4449     CONTINUE
        ENDIF
C
        IF(ISRER2.NE.'NONE' .AND. ISRER2.NE.' ')THEN
          DO4450II=1,NUMV
            IF(ISRER2(1:4).EQ.JVNAM1(II) .AND. 
     1         ISRER2(5:8).EQ.JVNAM2(II))THEN
              IVARR2=II
              GOTO4459
            ENDIF
 4450     CONTINUE
 4459     CONTINUE
        ENDIF
C
        IF(ISRER3.NE.'NONE' .AND. ISRER3.NE.' ')THEN
          DO4460II=1,NUMV
            IF(ISRER3(1:4).EQ.JVNAM1(II) .AND. 
     1         ISRER3(5:8).EQ.JVNAM2(II))THEN
              IVARR3=II
              GOTO4469
            ENDIF
 4460     CONTINUE
 4469     CONTINUE
        ENDIF
C
        IF(NCRT.GE.1)THEN
          DO4470II=1,NUMV
            IF(ISREC1(1:4).EQ.JVNAM1(II) .AND. 
     1         ISREC1(5:8).EQ.JVNAM2(II))THEN
              IVARC1=II
              GOTO4479
            ENDIF
 4470     CONTINUE
 4479     CONTINUE
        ENDIF
C
        IF(NCRT.GE.2)THEN
          DO4480II=1,NUMV
            IF(ISREC2(1:4).EQ.JVNAM1(II) .AND. 
     1         ISREC2(5:8).EQ.JVNAM2(II))THEN
              IVARC2=II
              GOTO4489
            ENDIF
 4480     CONTINUE
 4489     CONTINUE
        ENDIF
C
        IF(NCRT.GE.3)THEN
          DO4490II=1,NUMV
            IF(ISREC3(1:4).EQ.JVNAM1(II) .AND. 
     1         ISREC3(5:8).EQ.JVNAM2(II))THEN
              IVARC3=II
              GOTO4494
            ENDIF
 4490     CONTINUE
 4494     CONTINUE
        ENDIF
C
        IF(NCRT.GE.4)THEN
          DO4495II=1,NUMV
            IF(ISREC4(1:4).EQ.JVNAM1(II) .AND. 
     1         ISREC4(5:8).EQ.JVNAM2(II))THEN
              IVARC4=II
              GOTO4499
            ENDIF
 4495     CONTINUE
 4499     CONTINUE
        ENDIF
C
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
          WRITE(ICOUT,4443)IVARC1,IVARC2,IVARC3,IVARC4
 4443     FORMAT('IVARC1,IVARC2,IVARC3,IVARC4 = ',4I5)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      ENDIF
C
C               ******************************************************
C               **  STEP 4D--                                       **
C               **  FOR "DEFAULT STATISTICS", "FULL STATISTICS",    **
C               **  AND "CROSS-TAB" CASES, ADD "TAGSTAT" VARIABLE.  **
C               ******************************************************
C
      ISTEPN='4D'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASRE.EQ.'DSTA' .OR. ICASRE.EQ.'FSTA' .OR.
     1   ICASRE.EQ.'CSTA' .OR. ICASRE.EQ.'CTED' .OR.
     1   ICASRE.EQ.'CTCD' .OR. ICASRE.EQ.'CTMD' .OR.
     1   ICASRE.EQ.'CCOD' .OR. ICASRE.EQ.'CJAD' .OR.
     1   ICASRE.EQ.'CCOS' .OR. ICASRE.EQ.'CJAS' .OR.
     1   ICASRE.EQ.'CTCR' .OR. ICASRE.EQ.'CTCV' .OR.
     1   ICASRE.EQ.'CTHD' .OR. ICASRE.EQ.'CTXD' .OR.
     1   ICASRE.EQ.'CTPE' .OR.
     1   ICASRE.EQ.'CACD' .OR. ICASRE.EQ.'CACS')THEN
        IH1='TAGS'
        IH2='TAT '
        DO610I=1,NUMNAM
          I2=I
          IF(IH1.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I))THEN
            IF(IUSE(I).EQ.'V')THEN
              ICASEA='V'
              IV=NUMV+1
              IF(IV.GT.MAXV2)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,4382)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,4384)MAXV2
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO8800
              ENDIF
              JVNAM1(IV)=IH1
              JVNAM2(IV)=IH2
              NIV(IV)=IN(I2)
              IECASE(IV)='OLD'
              IECOL2(IV)=IVALUE(I2)
            ELSE
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,211)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,4312)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,4315)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,4316)IH1,IH2
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,4317)
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO8800
            ENDIF
          ENDIF
  610   CONTINUE
C
        IV=NUMV+1
        IF(IV.LE.MAXV2)THEN
          JVNAM1(IV)=IH1
          JVNAM2(IV)=IH2
          IECASE(IV)='NEW'
          IECOL2(IV)=-1
        ENDIF
C
        NUMV=IV
C
      ENDIF
C
C               ***************************************************
C               **  STEP 5--                                     **
C               **  CHECK FOR A VALID NUMBER OF VARIABLES TO BE  **
C               **  READ                                         **
C               ***************************************************
C
      IF(NUMV.LE.0 .OR. NUMV.GT.MAXV2)THEN
C
        WRITE(ICOUT,211)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,512)
  512   FORMAT('      FOR A STREAM READ, THE NUMBER OF VARIABLES MUST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,514)MAXV2
  514   FORMAT('      BE AT MOST ',I8,'  .  THE SPECIFIED')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,517)NUMV
  517   FORMAT('      NUMBER OF VARIABLES TO BE READ WAS ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,518)MAXV2
  518   FORMAT('      NOTE--ONLY THE FIRST ',I8,' VARIABLES WILL BE ',
     1         'READ.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,520)
  520   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,521)(IANSLC(I),I=1,MIN(120,IWIDTH))
  521     FORMAT(120A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IF(NUMV.LE.0)THEN
          IERROR='YES'
          GOTO8800
        ENDIF
      ENDIF
C
C               *******************************************************
C               **  STEP 6--                                         **
C               **  THOSE NAMES WHICH ARE OF THE UNKNOWN CATEGORY    **
C               **  WILL BECOME  FUTURE VARIABLES.  ASSIGN THESE     **
C               **  VARIABLES TO THE NEXT AVAILABLE COLUMNS AND      **
C               **  UPDATE THE NAME TABLE ACCORDINGLY.               **
C               *******************************************************
C
      INAM=NUMNAM
      ICOL=NUMCOL
      DO700IE=1,NUMV
        IF(IECASE(IE).EQ.'NEW')THEN
          INAM=INAM+1
          ICOL=ICOL+1
C
          IF(INAM.GT.MAXNAM)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,211)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,712)
  712       FORMAT('      THE NUMBER OF NAMES ')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,714)
  714       FORMAT('      + FUNCTIONS HAS JUST EXCEEDED THE MAXIMUM ',
     1             'SIZE')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,715)MAXNAM
  715       FORMAT('      (',I5,') OF THE INTERNAL NAME TABLE.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO8800
          ENDIF
C
          IF(ICOL.GT.MAXCOL)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,211)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,722)
  722       FORMAT('      THE NUMBER OF COLUMNS IN THE INTERNAL ',
     1             'DATAPLOT DATA')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,724)MAXCOL
  724       FORMAT('      ARRAY HAS JUST EXCEEDED THE ALLOWABLE ',
     1             'MAXIMUM (',I5,')')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO8800
          ENDIF
C
          IHNAME(INAM)=JVNAM1(IE)
          IHNAM2(INAM)=JVNAM2(IE)
          IUSE(INAM)='V'
          IVALUE(INAM)=ICOL
          IECOL2(IE)=ICOL
          IN(INAM)=0
        ENDIF
  700 CONTINUE
      NUMNAM=INAM
      NUMCOL=ICOL
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,791)NUMNAM,NUMCOL,NUMNAM,ICASRE
  791   FORMAT('NUMNAM,NUMCOL,NUMNAM,ICASRE = ',3I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************************************
C               **  STEP 7--                                          **
C               **  FIRST, BRANCH TO THE APPROPRIATE SUBCASE          **
C               **  (DEPENDING ON WHETHER UNQUALIFIED, SUBSET OR FOR);**
C               **  THE DETERMINE THE LENGTH OF THE LONGEST           **
C               **  VARIABLE TO BE READ    IN ;                       **
C               **  THEN READ IN  THE VARIABLES                       **
C               **  THAT WERE SPECIFIED.                              **
C               ********************************************************
C
      ISTEPN='7'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *******************************************
C               **  STEP 8--                             **
C               **  IF A DATA ROW MINIMUM EXISTS AND SO  **
C               **  OUR ATTENTION IS FOCUSED ONLY ON     **
C               **  CERTAIN ROWS OF THE DATA FILE,       **
C               **  THEN GO DOWN TO THE FIRST SUCH ROW   **
C               **  IN THE FILE.                         **
C               *******************************************
C
      ISTEPN='8'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFROW1.GT.1)THEN
        IFRMIN=1
        IFRMAX=IFROW1-1
        IF(IFRMIN.GT.IFRMAX)GOTO7369
        MINCO2=1
        MAXCO2=NUMRCM
        IFCOL3=IFCOL1
        IFCOL4=IFCOL2
C
        DO7360IFROW=IFRMIN,IFRMAX
          NUMCHA=-1
          CALL DPREFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1                IA,NUMCHA,
     1                ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
          IF(IERROR.EQ.'YES')GOTO8800
          IF(IA(1).EQ.'E'.AND.IA(2).EQ.'O'.AND.IA(3).EQ.'F'.AND.
     1      NUMCHA.EQ.3)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,211)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7365)
 7365       FORMAT('      END OF FILE ENCOUNTERED WHILE SKIPPING OVER',
     1             'HEADER LINES.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7367)
 7367       FORMAT('      NOTE SKIP AND ROW LIMITS SETTINGS--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7368)ISKIP,IFROW1,AFROW2
 7368       FORMAT('      ISKIP,IFROW1,IFROW2 = ',2I8,2X,G15.7)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO8800
          ENDIF
 7360   CONTINUE
 7369   CONTINUE
      ENDIF
C
C               *******************************************
C               **  STEP 9--                             **
C               **  IN ADDITION, IF HEADER (= NON-DATA)  **
C               **  LINES EXIST WHICH ARE TO BE SKIPPED  **
C               **  OVER IN THE READ, DO SO HERE.        **
C               *******************************************
C
      ISTEPN='9'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IF(IFROW1.LE.1)THEN
          WRITE(ICOUT,7371)ISKIP
 7371     FORMAT('THE NUMBER OF HEADER LINES BEING SKIPPED = ',I8)
          CALL DPWRST('XXX','BUG ')
        ELSEIF(IFROW1.GE.2)THEN
          WRITE(ICOUT,7372)ISKIP
 7372     FORMAT('THE NUMBER OF (ADDITIONAL) HEADER LINES BEING ',
     1           'SKIPPED = ',I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
      IF(ISKIP.EQ.-1)THEN
        IFRMIN=1
        MINCO2=1
        MAXCO2=NUMRCM
        IFCOL3=IFCOL1
        IFCOL4=IFCOL2
        IF(IRD2.EQ.IRD.AND.IFCOL4.GT.MAXCO2)IFCOL4=MAXCO2
        DO7378I=1,50000
          NUMCHA=-1
          CALL DPREFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1                IA,NUMCHA,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
C
          IF(IERROR.EQ.'YES')GOTO8800
          IF(IA(1).EQ.'-'.AND.IA(2).EQ.'-'.AND.IA(3).EQ.'-'.AND.
     1      IA(4).EQ.'-')THEN
            GOTO7389
          ENDIF
          IF(NUMCHA.GE.5)THEN
            DO7379LL=1,NUMCHA-3
              IF(IA(LL).EQ.'-'.AND.IA(LL+1).EQ.'-'.AND.
     1          IA(LL+2).EQ.'-'.AND.IA(LL+3).EQ.'-')THEN
                GOTO7389
              ENDIF
 7379       CONTINUE
          ENDIF
          IF(IA(1).EQ.'E'.AND.IA(2).EQ.'O'.AND.IA(3).EQ.'F'.AND.
     1      NUMCHA.EQ.3)THEN
            REWIND IOUNIT
            GOTO7389
          ENDIF
 7378   CONTINUE
      ENDIF
C
      IF(ISKIP.LE.0)GOTO7389
      IFRMIN=IFROW1
      IFRMAX=IFROW1+ISKIP-1
      IF(IFRMIN.GT.IFRMAX)GOTO7389
      MINCO2=1
      MAXCO2=NUMRCM
      IFCOL3=IFCOL1
      IFCOL4=IFCOL2
C
      DO7380IFROW=IFRMIN,IFRMAX
        NUMCHA=-1
        CALL DPREFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1              IA,NUMCHA,
     1              ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO8800
        IF(IA(1).EQ.'E'.AND.IA(2).EQ.'O'.AND.IA(3).EQ.'F'.AND.
     1      NUMCHA.EQ.3)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7365)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7367)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7368)ISKIP,IFROW1,AFROW2
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO8800
        ENDIF
 7380 CONTINUE
 7389 CONTINUE
C
C               ************************
C               **  STEP 10--         **
C               **  READ IN THE DATA  **
C               ************************
C
      ISTEPN='10'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO7260I=1,MAXRCL
        ISTOR1(I)=' '
        ISTOR2(I)=' '
        ISTOR3(I)=' '
        IB(I)=' '
 7260 CONTINUE
C
      IF(NUMV.GT.0)THEN
        DO7300I=1,NUMV
          IEN(I)=0
 7300   CONTINUE
      ENDIF
C
      MINCO2=1
      MAXCO2=NUMRCM
      IFCOL3=IFCOL1
      IFCOL4=IFCOL2
C
      I=0
      IIN=0
      NUMLRD=0
      NUMLGR=0
      IENDTY=1
      IEND='NO'
      IF(ISKIP.GE.0)THEN
        IFRMIN=IFROW1+ISKIP
CCCCC   IF(ICASEQ.EQ.'FOR')IFRMIN=IFROW1+ISKIP+IROW1-1
      ELSE
        IFRMIN=1
CCCCC   IF(ICASEQ.EQ.'FOR')IFRMIN=IROW1
      ENDIF
C
      IFRMAX=IFROW2
C
      IF(IFRMAX.GE.IBILLI)IFRMAX=IBILLI
      IF(IFRMIN.GT.IFRMAX)GOTO7490
C
      NCALL=0
      I=0
      ICNT2=0
      IEOF=0
      IMAXRW=IFRMAX-IFRMIN+1
      IFLGSV=0
      DO7400IFROW=IFRMIN,IFRMAX
C
        IIN=IIN+1
        IF(NCREAF.LE.0)THEN
C
C         CASE 1: NO SET READ FORMAT GIVEN
C
          NXC=0
          CALL DPREAL(IRD2,IFCOL3,IFCOL4,MINCO2,MAXCO2,X0,NUMDPL,IFLGSV,
     1                IXC,NXC,
     1                ICASRE,IFUNC2,N2,MAXN2,
     1                IMACRO,IMACNU,IMACCS,
     1                IANSLC,IWIDTH,IREACS,ISTOR1,ISTOR2,IEND,NUMLRD,
     1                IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1                ICOMCH,ICOMSW,LINETY,IGRPA2,
     1                IFCOLL,IFCOLU,ITYPE,NCOLS,NCALL,
     1                IREADL,IDATDL,ITIMDL,IRDIPA,PREAMV,
     1                MAXRDV,MAXCHV,IFIETY,
     1                IDECPT,IDATMV,IDATNN,
     1                IREACD,IREACM,IREADS,IREAPM,IREAMC,ITABNC,
     1                IREAAS,IREAPC,
     1                IB,
     1                IOTERM,IANSLO,MAXLIL,MAXCIL,ILOOST,ILOOLI,
     1                IREPCH,IMALEV,
     1                IERRFI,IBUGS2,ISUBRO,IERROR)
          IF(LINETY.EQ.'BLAN')GOTO7400
          IF(NUMDPL.LT.IMNVAR)IMNVAR=NUMDPL
          IF(NUMDPL.GT.IMXVAR)IMXVAR=NUMDPL
          NUMLRD=NUMLRD+1
          NCALL=NCALL+1
C
C
C         IF CHARACTER DATA ENCOUNTERED, CONVERT IT TO CATEGORICAL
C         NUMERIC DATA.  FOR STREAM READ, DO NOT WRITE ANYTHING TO
C         DPZCHF.DAT.
C
          IF(NXC.GT.0)THEN
            IF(IGRPAU.EQ.'CATE')THEN
              DO27820J=1,NXC
                NTEMP=IXCATN(J)
                IF(NTEMP.LT.1)THEN
                  IXCATN(J)=1
                  IXCAT(1,J)(1:24)=IXC(J)(1:24)
                  IF(ISREGL.EQ.'ON')THEN
                    IVAL=IGRP1 + J - 1
                    IF(IVAL.LE.MAXGRP)IGRPLA(1,IVAL)(1:24)=IXC(J)(1:24)
                  ENDIF
                  X0CAT(J)=1.0
                ELSE
                  DO27830II=1,NTEMP
                    IF(IXC(J)(1:24).EQ.IXCAT(II,J)(1:24))THEN
                      X0CAT(J)=REAL(II)
                      GOTO27820
                    ENDIF
27830             CONTINUE
                  NTEMP2=IXCATN(J)
                  IF(NTEMP2.GT.1000)THEN
                    X0CAT(J)=-1.0
                  ELSE
                    IXCATN(J)=IXCATN(J)+1
                    IXCAT(IXCATN(J),J)(1:24)=IXC(J)(1:24)
                    X0CAT(J)=REAL(IXCATN(J))
                    IF(ISREGL.EQ.'ON')THEN
                      IVAL=IGRP1 + J - 1
                      IF(IVAL.LE.MAXGRP)IGRPLA(IXCATN(J),IVAL)(1:24)=
     1                  IXC(J)(1:24)
                    ENDIF
                  ENDIF
                ENDIF
27820         CONTINUE
C
C             NOW MERGE X0 AND X0CAT
C
              NTOTVA=NXC+NUMDPL
              ICNT1=0
              ICNT2=0
              DO27840J=1,NTOTVA
                IF(ITYPE(J).EQ.1)THEN
                  ICNT2=ICNT2+1
                  X02(J)=X0CAT(ICNT2)
                  IF(J.EQ.IRWLCO)X02(J)=REAL(NUMLRD)
                  IF(ISREGL.EQ.'ON')THEN
                    IVAL=IGRP1 + ICNT2 - 1
                    IF(IVAL.LE.MAXGRP .AND. IGRPVN(IVAL).EQ.' ')THEN
                      IGRPVN(IVAL)(1:4)=JVNAM1(J)(1:4)
                      IGRPVN(IVAL)(5:8)=JVNAM2(J)(1:4)
                    ENDIF
                  ENDIF
                ELSE
                  ICNT1=ICNT1+1
                  X02(J)=X0(ICNT1)
                ENDIF
27840         CONTINUE
              DO27850J=1,NTOTVA
                X0(J)=X02(J)
27850         CONTINUE
            ENDIF
C
          ENDIF
C
          IF(IEND.EQ.'YES')THEN
            IEOF=1
            IF(ICASRE.EQ.'GSTA')GOTO7440
            IF(ICASRE.EQ.'DSTA')GOTO7440
            IF(ICASRE.EQ.'FSTA')GOTO7440
            IF(ICASRE.EQ.'CSTA')GOTO7440
            IF(ICASRE.EQ.'CORR')GOTO7440
            IF(ICASRE.EQ.'COVA')GOTO7440
            IF(ICASRE.EQ.'EDIS')GOTO7440
            IF(ICASRE.EQ.'MDIS')GOTO7440
            IF(ICASRE.EQ.'CDIS')GOTO7440
            IF(ICASRE.EQ.'CODI')GOTO7440
            IF(ICASRE.EQ.'COSI')GOTO7440
            IF(ICASRE.EQ.'ACDI')GOTO7440
            IF(ICASRE.EQ.'ACSI')GOTO7440
            IF(ICASRE.EQ.'JASI')GOTO7440
            IF(ICASRE.EQ.'JADI')GOTO7440
            IF(ICASRE.EQ.'HDIS')GOTO7440
            IF(ICASRE.EQ.'CNDI')GOTO7440
            IF(ICASRE.EQ.'CTED')GOTO7440
            IF(ICASRE.EQ.'CTCD')GOTO7440
            IF(ICASRE.EQ.'CTMD')GOTO7440
            IF(ICASRE.EQ.'CCOD')GOTO7440
            IF(ICASRE.EQ.'CCOS')GOTO7440
            IF(ICASRE.EQ.'CACD')GOTO7440
            IF(ICASRE.EQ.'CACS')GOTO7440
            IF(ICASRE.EQ.'CJAS')GOTO7440
            IF(ICASRE.EQ.'CJAD')GOTO7440
            IF(ICASRE.EQ.'CTCR')GOTO7440
            IF(ICASRE.EQ.'CTCV')GOTO7440
            IF(ICASRE.EQ.'CTHD')GOTO7440
            IF(ICASRE.EQ.'CTXD')GOTO7440
            IF(ICASRE.EQ.'CTPE')GOTO7440
            IF(ICASRE.EQ.'PERC')GOTO7440
            GOTO7490
         ENDIF
C
        ELSE
C
C         CASE 2: SET READ FORMAT GIVEN
C
          NUMLRD=NUMLRD+1
          NUMDPL=NUMV
          IF(ICOMSW.EQ.'ON')THEN
 7417       CONTINUE
            READ(IRD2,'(A80)',END=7480)IAJUNK
            IF(IAJUNK(1:1).EQ.ICOMCH(1:1))GOTO7417
            BACKSPACE(UNIT=IRD2,IOSTAT=IOS,ERR=7413)
            GOTO7415
 7413       CONTINUE
            WRITE(ICOUT,743)
 743        FORMAT('ERROR TRYING TO BACKSPACE FILE ON FORMATTED READ')
            CALL DPWRST('XXX','BUG ')
            GOTO7417
          ENDIF
          NUMVZZ=NUMV
          IF(ICASRE.EQ.'DSTA')NUMVZZ=NUMVZZ-1
          IF(ICASRE.EQ.'FSTA')NUMVZZ=NUMVZZ-1
          IEOF=0
          READ(IRD2,ICREAF,END=7480,ERR=7482)(X0(K),K=1,NUMVZZ)
          GOTO7415
C
 7480     CONTINUE
          IEOF=1
          IF(ICASRE.EQ.'GSTA')GOTO7440
          IF(ICASRE.EQ.'DSTA')GOTO7440
          IF(ICASRE.EQ.'FSTA')GOTO7440
          IF(ICASRE.EQ.'CSTA')GOTO7440
          IF(ICASRE.EQ.'CORR')GOTO7440
          IF(ICASRE.EQ.'COVA')GOTO7440
          IF(ICASRE.EQ.'EDIS')GOTO7440
          IF(ICASRE.EQ.'MDIS')GOTO7440
          IF(ICASRE.EQ.'CDIS')GOTO7440
          IF(ICASRE.EQ.'CODI')GOTO7440
          IF(ICASRE.EQ.'COSI')GOTO7440
          IF(ICASRE.EQ.'ACDI')GOTO7440
          IF(ICASRE.EQ.'ACSI')GOTO7440
          IF(ICASRE.EQ.'JASI')GOTO7440
          IF(ICASRE.EQ.'JADI')GOTO7440
          IF(ICASRE.EQ.'HDIS')GOTO7440
          IF(ICASRE.EQ.'CNDI')GOTO7440
          IF(ICASRE.EQ.'CTED')GOTO7440
          IF(ICASRE.EQ.'CTCD')GOTO7440
          IF(ICASRE.EQ.'CTMD')GOTO7440
          IF(ICASRE.EQ.'CCOD')GOTO7440
          IF(ICASRE.EQ.'CCOS')GOTO7440
          IF(ICASRE.EQ.'CACD')GOTO7440
          IF(ICASRE.EQ.'CACS')GOTO7440
          IF(ICASRE.EQ.'CJAS')GOTO7440
          IF(ICASRE.EQ.'CJAD')GOTO7440
          IF(ICASRE.EQ.'CTCR')GOTO7440
          IF(ICASRE.EQ.'CTCV')GOTO7440
          IF(ICASRE.EQ.'CTHD')GOTO7440
          IF(ICASRE.EQ.'CTXD')GOTO7440
          IF(ICASRE.EQ.'CTPE')GOTO7440
          IF(ICASRE.EQ.'PERC')GOTO7440
          GOTO7490
C
 7482     CONTINUE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7483)IFROW
 7483     FORMAT('      ERROR READING LINE ',I10)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO8800
        ENDIF
C
 7415   CONTINUE
        IF(IERROR.EQ.'YES')GOTO8800
        IF(IFROW.EQ.IFRMIN)THEN
          DO7425K=1,132
            ISTOR3(K)=ISTOR2(K)
 7425     CONTINUE
          GOTO7430
        ENDIF
        IF(IEND.EQ.'YES')THEN
          IEOF=1
          IF(ICASRE.EQ.'GSTA')GOTO7440
          IF(ICASRE.EQ.'DSTA')GOTO7440
          IF(ICASRE.EQ.'FSTA')GOTO7440
          IF(ICASRE.EQ.'CSTA')GOTO7440
          IF(ICASRE.EQ.'CORR')GOTO7440
          IF(ICASRE.EQ.'COVA')GOTO7440
          IF(ICASRE.EQ.'EDIS')GOTO7440
          IF(ICASRE.EQ.'MDIS')GOTO7440
          IF(ICASRE.EQ.'CDIS')GOTO7440
          IF(ICASRE.EQ.'CODI')GOTO7440
          IF(ICASRE.EQ.'COSI')GOTO7440
          IF(ICASRE.EQ.'ACDI')GOTO7440
          IF(ICASRE.EQ.'ACSI')GOTO7440
          IF(ICASRE.EQ.'JASI')GOTO7440
          IF(ICASRE.EQ.'JADI')GOTO7440
          IF(ICASRE.EQ.'HDIS')GOTO7440
          IF(ICASRE.EQ.'CNDI')GOTO7440
          IF(ICASRE.EQ.'CTED')GOTO7440
          IF(ICASRE.EQ.'CTCD')GOTO7440
          IF(ICASRE.EQ.'CTMD')GOTO7440
          IF(ICASRE.EQ.'CCOD')GOTO7440
          IF(ICASRE.EQ.'CCOS')GOTO7440
          IF(ICASRE.EQ.'CACD')GOTO7440
          IF(ICASRE.EQ.'CACS')GOTO7440
          IF(ICASRE.EQ.'CJAS')GOTO7440
          IF(ICASRE.EQ.'CJAD')GOTO7440
          IF(ICASRE.EQ.'CTCR')GOTO7440
          IF(ICASRE.EQ.'CTCV')GOTO7440
          IF(ICASRE.EQ.'CTHD')GOTO7440
          IF(ICASRE.EQ.'CTXD')GOTO7440
          IF(ICASRE.EQ.'CTPE')GOTO7440
          IF(ICASRE.EQ.'PERC')GOTO7440
          GOTO7490
        ENDIF
C
 7430   CONTINUE
        I=I+1
C
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7431)
 7431     FORMAT('***** FROM THE MIDDLE OF DPSTRE--')
          CALL DPWRST('XXX','BUG ')
          AFRMAX=IFRMAX
          WRITE(ICOUT,7432)IFROW,IFRMIN,AFRMAX
 7432     FORMAT('IFROW,IFRMIN,AFRMAX = ',2I8,G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7434)MAXN,MAXCOL,MAXCP1,MAXCP2
 7434     FORMAT('MAXN,MAXCOL,MAXCP1,MAXCP2 = ',4I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7435)X0(1),X0(2),X0(3)
 7435     FORMAT('X0(1),X0(2),X0(3) = ',3G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7436)IECOL2(1),IECOL2(2),IECOL2(3)
 7436     FORMAT('IECOL2(1),IECOL2(2),IECOL2(3) = ',3I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7437)IEN(1),IEN(2),IEN(3)
 7437     FORMAT('IEN(1),IEN(2),IEN(3) = ',3I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7438)ICASRE,NUMVRD,NUMPRD,NUMFRD
 7438     FORMAT('ICASRE,NUMVRD,NUMPRD,NUMFRD = ',A4,3I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
 7440   CONTINUE
C
C       IF NUMBER OF REQUESTED ITEMS IS GREATER THAN NUMBER OF ITEMS
C       ON THE LINE, PAD WITH MISSING VALUE (PREAMV).
C
C       THE SET READ PAD MISSING COLUMNS COMMANDS DETERMINES WHETHER WE
C       PAD OR USE THE PREVIOUS BEHAVIOR (I.E., IN SOME CASES, A MISSING
C       COLUMN MAY INDICATE AN ERROR).
C

        IF(ICASRE.EQ.'WRIT')THEN
C
C         CASE 1: FORMATTED WRITE TO OUTPUT FILE.  IF NO SET WRITE
C                 FORMAT IS ACTIVE, USE "E15.7" FOR ALL VARIABLES.
C
          ISTEPN='10A'
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(IFROW.EQ.IFRMAX .OR. IEOF.EQ.1)GOTO7490
C
          IF(NCWRIF.GT.0)THEN
            WRITE(IOUNI2,ICWRIF,ERR=17740) (X0(JJ),JJ=1,NUMV)
            GOTO17749
C
17740       CONTINUE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,211)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,17741)
17741       FORMAT('      ERROR WITH FORMATTED WRITE WHEN WRITING TO ',
     1             'THE OUTPUT FILE.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO8800
17749       CONTINUE
          ELSE
            IFORMT='(   E15.7)'
            WRITE(IFORMT(2:4),'(I3)')NUMV
            WRITE(IOUNI2,IFORMT) (X0(JJ),JJ=1,NUMV)
          ENDIF
C
        ELSEIF(ICASRE.EQ.'GSTA')THEN
C
C         CASE 2: COMPUTE A SPECIFIC STATISTIC FOR A SPECIFIED NUMBER
C                 OF ROWS FOR EACH VARIABLE.  TO MAKE IT EASIER TO
C                 EXTRACT FOR CMPSTA, STORE VALUES FOR A VARIABLE
C                 CONTINGUOUSLY.
C
C         GROUP CAN BE DEFINED BY EITHER A SET NUMBER OF ROWS OR
C         WHEN A SPECIFIED VARIABLE CHANGES VALUE.
C
          ISTEPN='10B'
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLGSW=0
          IF(IVARGR.GT.0)THEN
            IF(NUMLGR.EQ.1)AHOLD=X0(IVARGR)
            IF(X0(IVARGR).NE.AHOLD)THEN
              IFLGSW=1
              AHOLD=X0(IVARGR)
            ENDIF
            ISTRID=MAXOBW/NUMV
          ELSE
            IF(NUMLGR.GE.ISRESI)IFLGSW=1
            ISTRID=ISRESI
          ENDIF
C
C         NOTE: IF DEFINING GROUPS BY A CHANGE IN VALUE FOR A
C               SPECIFIC VARIABLE, DON'T ADD CURRENT DATA UNTIL
C               COMPUTE STATISTIC FOR PREVIOUS GROUP.
C
          IF(IFLGSW.EQ.0)THEN
            IF(IEOF.EQ.0)THEN
              NUMLGR=NUMLGR+1
              DO7520JJ=1,NUMV
                IINDX=(JJ-1)*ISTRID + NUMLGR
                XSCRT(IINDX)=X0(JJ)
 7520         CONTINUE
            ENDIF
          ENDIF
C
          IF(IFLGSW.EQ.1 .OR. IFROW.EQ.IFRMAX .OR. IEOF.EQ.1)THEN
            IF(NUMLGR.GE.1)THEN
              ICNT2=ICNT2+1
C
C             CHECK TO SEE IF MAXIMUM NUMBER OF ROWS EXCEEDED
C
              IF(ICNT2.GT.MAXOBV)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,17751)
17751           FORMAT('      MAXIMUM NUMBER OF ROWS REACHED. ',
     1                 'THE INPUT FILE WILL BE TRUCATED.')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO8800
              ENDIF
C
              DO7530JJ=1,NUMV
                IINDX=(JJ-1)*ISTRID + 1
                CALL CMPSTA(XSCRT(IINDX),TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,
     1                      TEMP5,TEMP5,MAXOBV,
     1                      NUMLGR,NUMLGR,NUMLGR,ISTANR,ICASS7,ISTARA,
     1                      ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,
     1                      ITEMP5,ITEMP6,
     1                      DTEMP1,DTEMP2,DTEMP3,
     1                      Z0,
     1                      ISUBRO,IBUGS2,IERROR)
                ICOLVJ=IECOL2(JJ)
                IJ=MAXN*(ICOLVJ-1)+ICNT2
                IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
 7530         CONTINUE
            ENDIF
            NUMLGR=0
          ENDIF
          IF(IFROW.EQ.IFRMAX .OR. IEOF.EQ.1)GOTO7490
C
C         NOTE: IF DEFINING GROUPS BY A CHANGE IN VALUE FOR A
C               SPECIFIC VARIABLE, DON'T ADD CURRENT DATA UNTIL
C               COMPUTE STATISTIC FOR PREVIOUS GROUP.
C
          IF(IFLGSW.EQ.1)THEN
            IF(IEOF.EQ.0)THEN
              NUMLGR=NUMLGR+1
              DO7529JJ=1,NUMV
                IINDX=(JJ-1)*ISTRID + NUMLGR
                XSCRT(IINDX)=X0(JJ)
 7529         CONTINUE
            ENDIF
          ENDIF
        ELSEIF(ICASRE.EQ.'DSTA')THEN
C
C         CASE 3: COMPUTE A SET OF DEFAULT STATISTICS FOR A SPECIFIED
C                 NUMBER OF ROWS FOR EACH VARIABLE.  TO MAKE IT EASIER TO
C                 EXTRACT FOR CMPSTA, STORE VALUES FOR A VARIABLE
C                 CONTINGUOUSLY.
C
C                 THE DEFAULT STATISTICS ARE:
C
C                    1. VALUE OF LAST ROW OF GROUP
C                    2. GROUP-ID
C                    3. SIZE
C                    4. MINIMUM
C                    5. MAXIMUM
C                    6. MEAN
C                    7. STANDARD DEVIATION
C                    8. SKEWNESS
C                    9. KURTOSIS
C                   10. MEDIAN
C                   11. INTERQUARTILE RANGE
C                   12. RANGE
C                   13. AUTOCORRELATION
C                   14. LOWER QUARTILE
C                   15. UPPER QUARTILE
C                   16. 0.01 QUANTILE
C                   17. 0.05 QUANTILE
C                   18. 0.10 QUANTILE
C                   19. 0.25 QUANTILE
C                   20. 0.75 QUANTILE
C                   21. 0.90 QUANTILE
C                   22. 0.95 QUANTILE
C                   23. 0.99 QUANTILE
C
C         GROUP CAN BE DEFINED BY EITHER A SET NUMBER OF ROWS OR
C         WHEN A SPECIFIED VARIABLE CHANGES VALUE.
C
C         NOTE: IF GROUP BY VARIABLE RATHER THAN FIXED NUMBER OF
C               ROWS, NEED TO BE CAREFUL IN HOW WE INDEX.
C
          ISTEPN='10C'
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLGSW=0
          IF(IVARGR.GT.0)THEN
            IF(NUMLGR.EQ.1)AHOLD=X0(IVARGR)
            IF(X0(IVARGR).NE.AHOLD)THEN
              IFLGSW=1
              AHOLD=X0(IVARGR)
            ENDIF
            ISTRID=MAXOBW/NUMV
          ELSE
            IF(NUMLGR.GE.ISRESI)IFLGSW=1
            ISTRID=ISRESI
          ENDIF
C
          IF(NUMLGR.GT.ISTRID)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,211)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7531)ISTRID
 7531       FORMAT('      NUMBER OF OBSERVATIONS WITHIN A GROUP ',
     1             'EXCEEDS THE MAXIMUM OF ',I10)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
C
C         NOTE: IF DEFINING GROUPS BY A CHANGE IN VALUE FOR A
C               SPECIFIC VARIABLE, DON'T ADD CURRENT DATA UNTIL
C               COMPUTE STATISTIC FOR PREVIOUS GROUP.
C
C         NOTE: IN ADDITION TO THE LIST OF STATISTICS, ADD THE
C               FOLLOWING ROWS:
C
C                  1. THE VALUE OF THE VARIABLE.  NOTE THAT THIS
C                     WILL BE THE VALUE OF THE LAST ROW OF THE
C                     GROUP.  IT IS PRIMARILY INTENDED FOR DISCRETE
C                     VARIABLES.
C
C                  2. THE GROUP NUMBER VALUE.
C
          IF(IFLGSW.EQ.0)THEN
            IF(IEOF.EQ.0)THEN
              NUMLGR=NUMLGR+1
              DO7525JJ=1,NUMV-1
                IINDX=(JJ-1)*ISTRID + NUMLGR
                XSCRT(IINDX)=X0(JJ)
 7525         CONTINUE
            ENDIF
          ENDIF
C
          IF(IFLGSW.EQ.1 .OR. IFROW.EQ.IFRMAX .OR. IEOF.EQ.1)THEN
            IF(NUMLGR.GE.1)THEN
              DO7540KK=1,NDEFST+NQUAN-1
                ICNT2=ICNT2+1
C
C               CHECK TO SEE IF MAXIMUM NUMBER OF ROWS EXCEEDED
C
                IF(ICNT2.GT.MAXOBV)THEN
                  WRITE(ICOUT,999)
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,211)
                  CALL DPWRST('XXX','BUG ')
                  WRITE(ICOUT,17751)
                  CALL DPWRST('XXX','BUG ')
                  IERROR='YES'
                  GOTO8800
                ENDIF
C
                IF(KK.GE.NDEFST .AND. KK.LE.NDEFST+NQUAN-1)THEN
                  IROWT=KK-NDEFST+1
                  XQUAN=XQ(IROWT)
                ELSE
                  ICASS7=LISTST(KK)
                ENDIF
                DO7545JJ=1,NUMV
                  IF(JJ.EQ.NUMV)THEN
                    Z0=REAL(KK)
                  ELSEIF(KK.EQ.1)THEN
                    IINDX=(JJ-1)*ISTRID + 1
                    Z0=XSCRT(IINDX)
                  ELSEIF(KK.EQ.2)THEN
                    Z0=REAL(NGRP)
                  ELSEIF(KK.EQ.3)THEN
                    Z0=REAL(NUMLGR)
                  ELSEIF(KK.GE.NDEFST .AND. KK.LE.NDEFST+NQUAN-1)THEN
                    IINDX=(JJ-1)*ISTRID + 1
                    IWRITE='OFF'
                    CALL QUANT(XQUAN,XSCRT(IINDX),NUMLGR,IWRITE,
     1                         TEMP1,MAXOBV,
     1                         IQUAME,
     1                         Z0,IBUGS2,IERROR)
                  ELSE
                    IINDX=(JJ-1)*ISTRID + 1
                    CALL CMPSTA(XSCRT(IINDX),TEMP1,TEMP2,TEMP3,
     1                          TEMP4,TEMP5,TEMP5,TEMP5,
     1                          MAXOBV,NUMLGR,NUMLGR,NUMLGR,
     1                          ISTANR,ICASS7,ISTARA,
     1                          ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,
     1                          ITEMP5,ITEMP6,
     1                          DTEMP1,DTEMP2,DTEMP3,
     1                          Z0,
     1                          ISUBRO,IBUGS2,IERROR)
                  ENDIF
                  ICOLVJ=IECOL2(JJ)
                  IJ=MAXN*(ICOLVJ-1)+ICNT2
                  IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
 7545           CONTINUE
 7540         CONTINUE
            ENDIF
            NUMLGR=0
          ENDIF
          IF(IFROW.EQ.IFRMAX .OR. IEOF.EQ.1)GOTO7490
C
C         NOTE: IF DEFINING GROUPS BY A CHANGE IN VALUE FOR A
C               SPECIFIC VARIABLE, DON'T ADD CURRENT DATA UNTIL
C               COMPUTE STATISTIC FOR PREVIOUS GROUP.
C
          IF(IFLGSW.EQ.1)THEN
            IF(IEOF.EQ.0)THEN
              NGRP=NGRP+1
              NUMLGR=NUMLGR+1
              DO7528JJ=1,NUMV
                IINDX=(JJ-1)*ISTRID + NUMLGR
                XSCRT(IINDX)=X0(JJ)
 7528         CONTINUE
            ENDIF
          ENDIF
        ELSEIF(ICASRE.EQ.'FSTA')THEN
C
C         CASE 4: ONE PASS COMPUTATION FOR A LIST OF STATISTICS
C
C                 CURRENTLY, COMPUTE THE FOLLOWING STATISTICS:
C
C                   1. COUNT
C                   2. MINIMUM
C                   3. MAXIMUM
C                   4. MEAN
C                   5. STANDARD DEVIATION
C                   6. SKEWNESS
C                   7. KURTOSIS
C                   8. RANGE
C                   9. AUTOCORRELATION (NOT YET SUPPORTED)
C                  10. M2 (SECOND CENTRAL MOMENT)
C                  11. M3 (THIRD CENTRAL MOMENT)
C                  12. M4 (FOURTH CENTRAL MOMENT)
C                  13. Q (USED IN STANDARD DEVIATION COMPUTATION)
C
C                  NOTE THAT M2, M3, M4, AND Q ARE USED TO COMPUTE THE
C                  SKEWNESS, KURTOSIS AND SD.  HOWEVER, THEY WILL NOT BE
C                  SAVED.
C
C         2018/07: DO NOT INCLUDE MISSING VALUES (AS DEFINED BY THE
C                  "SET READ MISSING VALUE <VALUE>" COMMAND.
C
          ISTEPN='10D'
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(IEOF.EQ.0 .AND. IFROW.LE.IFRMAX)THEN
            DO7575JJ=1,NUMV
              IF(X0(JJ).EQ.PREAMV)GOTO7575
              XSCRT(JJ)=XSCRT(JJ) + 1.0
              NUMLGR=INT(XSCRT(JJ) + 0.1)
              NVAL=NUMLGR
              IF(NUMLGR.EQ.1)THEN
                XSCRT(JJ+NUMV)=X0(JJ)
                XSCRT(JJ+2*NUMV)=X0(JJ)
                XSCRT(JJ+3*NUMV)=X0(JJ)
                XSCRT(JJ+4*NUMV)=0.0
                XSCRT(JJ+5*NUMV)=0.0
                XSCRT(JJ+6*NUMV)=0.0
                XSCRT(JJ+7*NUMV)=0.0
                XSCRT(JJ+8*NUMV)=0.0
                XSCRT(JJ+9*NUMV)=0.0
                XSCRT(JJ+10*NUMV)=0.0
                XSCRT(JJ+11*NUMV)=0.0
                XSCRT(JJ+12*NUMV)=0.0
              ELSE
                DNOLD=DBLE(NUMLGR-1)
                DNNEW=DBLE(NUMLGR)
                XSCRT(JJ+NUMV)=MIN(XSCRT(JJ+NUMV),X0(JJ))
                XSCRT(JJ+2*NUMV)=MAX(XSCRT(JJ+2*NUMV),X0(JJ))
                XSCRT(JJ+7*NUMV)=XSCRT(JJ+2*NUMV) - XSCRT(JJ+NUMV)
                DVALM1=DBLE(XSCRT(JJ+3*NUMV))
                DVALSO=DBLE(XSCRT(JJ+12*NUMV))
C
                DVAL=DBLE(X0(JJ))
                DELTA=DVAL - DVALM1
                DELTAN=DELTA/DNNEW
                DELTN2=DELTAN*DELTAN
                DTERM1=DELTA*DELTAN*DNOLD
C
                DMEAN=DVALM1 + DELTAN
C
                DTERM2=(DNOLD/DNNEW)*DELTA**2
                DVALS1=DVALSO + DTERM2
                DSD=DSQRT(DVALS1/DBLE(NUMLGR-1))
C
                DM2=DBLE(XSCRT(JJ+9*NUMV))
                DM3=DBLE(XSCRT(JJ+10*NUMV))
                DM4=DBLE(XSCRT(JJ+11*NUMV))
                DM4=DM4 + DTERM1*DELTN2*(DNNEW*DNNEW - 3.0D0*DNNEW
     1              + 3.0D0) + 6.0D0*DELTN2*DM2 - 4.0D0*DELTAN*DM3
                DM3=DM3 + DTERM1*DELTAN*(DNNEW - 2.0D0) -
     1              3.0D0*DELTAN*DM2
                DM2=DM2 + DTERM1
C
                IF(DM2.GT.0.0D0)THEN
                  DSKEW=DSQRT(DNNEW)*DM3/(DM2**1.5D0)
                  DKURT=(DNNEW*DM4)/(DM2*DM2)
                ELSE
                  IF(DM2.NE.0.0)THEN
                    DSKEW=0.0D0
                    DKURT=(DNNEW*DM4)/(DM2*DM2)
                  ELSE
                    DSKEW=0.0D0
                    DKURT=0.0D0
                  ENDIF
                ENDIF
C
C               COMPUTE AUTOCORRELATION.  USE THE ONE-PASS FORMULA
C               FOR CORRELATION.  THE COMPLICATION IS THAT FOR
C               AUTOCORRELATION WE ARE COMPUTING FOR A LAGGED
C               VERSION OF THE VARIABLE.  NOT CURRENTLY IMPLEMENTED.
C
                XSCRT(JJ+3*NUMV)=REAL(DMEAN)
                XSCRT(JJ+4*NUMV)=REAL(DSD)
                XSCRT(JJ+5*NUMV)=REAL(DSKEW)
                XSCRT(JJ+6*NUMV)=REAL(DKURT)
                XSCRT(JJ+9*NUMV)=REAL(DM2)
                XSCRT(JJ+10*NUMV)=REAL(DM3)
                XSCRT(JJ+11*NUMV)=REAL(DM4)
                XSCRT(JJ+12*NUMV)=REAL(DVALS1)
              ENDIF
 7575       CONTINUE
          ELSE
C
C           END OF FILE REACHED, SAVE COMPUTED STATISTIC
C
            NSTAT=8
            IF(NUMLGR.GE.1)THEN
              DO7560KK=1,NSTAT
                ICNT2=ICNT2+1
C
                DO7565JJ=1,NUMV
                  IF(JJ.EQ.NUMV)THEN
                    Z0=REAL(KK)
                  ELSE
                    IINDX=(KK-1)*NUMV + JJ
                    Z0=XSCRT(IINDX)
                  ENDIF
                  ICOLVJ=IECOL2(JJ)
                  IJ=MAXN*(ICOLVJ-1)+ICNT2
                  IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
 7565           CONTINUE
 7560         CONTINUE
            ENDIF
            GOTO7490
          ENDIF
C
        ELSEIF(ICASRE.EQ.'CORR' .OR. ICASRE.EQ.'COVA')THEN
C
C         CASE 7: ONE PASS COMPUTATION FOR COVARIANCE OR CORRELATION
C                 MATRIX
C
C         FOR THE ONE-PASS COVARIANCE COMPUTATIONS, YOU CAN
C         USE THE RECURRENCE RELATIONSHIP
C
C            C(n) = C(n-1) + (X(n) - Xbar(n-1))*(Y(n) - Ybar(n))
C
C         WHERE THE COVARIANCE CAN THEN BE COMPUTED AS C(n)/(n-1).
C
C         THE CORRELATION IS COV(X,Y)/S(X)*S(Y).  NOTE THAT WE ONLY
C         COMPUTE C(n) WHILE READING.  THE FINAL COVARIANCE/CORRELATION
C         IS COMPUTED ONLY AT THE SAVE STEP.
C
C         FOR THIS COMPUTATION WE NEED TO SAVE THE FOLLOWING SET OF
C         NUMVxNUMV MATRICES FOR THE RECURRENCE RELATION.
C
C             1. Cov(n)
C             2. N(n) (THE SAMPLE SIZE)
C             3. Xbar(n)
C             4. Ybar(n)
C
C         NOTE THAT THE VARIANCE CAN BE OBTAINED FROM THE DIAGONAL OF
C         THE FIRST MATRIX.
C
          ISTEPN='10D7'
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          ISTRT1=0
          ISTRT2=NUMV*NUMV
          ISTRT3=2*NUMV*NUMV
          ISTRT4=3*NUMV*NUMV
C
          IF(IEOF.EQ.0 .AND. IFROW.LE.IFRMAX)THEN
C
            DO7675JJ=1,NUMV
              IF(IVTYPE(JJ).EQ.0)GOTO7675
              IF(X0(JJ).EQ.PREAMV)GOTO7675
              DO7680KK=JJ,NUMV
                IF(IVTYPE(KK).EQ.0)GOTO7680
                IF(X0(KK).EQ.PREAMV)GOTO7680
                IINDX2=(JJ-1)*NUMV + KK
                IINDX3=(KK-1)*NUMV + JJ
C
C               CHECK IF THIS IS THE FIRST OBSERVATION
C
                IF(XSCRT(ISTRT2+IINDX2).LT.0.5)THEN
                  XSCRT(ISTRT1+IINDX2)=0.0
                  XSCRT(ISTRT2+IINDX2)=1.0
                  XSCRT(ISTRT3+IINDX2)=X0(JJ)
                  XSCRT(ISTRT4+IINDX2)=X0(KK)
                ELSE
                  DNOLD=DBLE(XSCRT(ISTRT2+IINDX2))
                  DNNEW=DNOLD + 1.0
                  DTERM3=DNOLD/DNNEW
                  XSCRT(ISTRT2+IINDX2)=REAL(DNNEW)
C
                  DVAL=DBLE(X0(JJ))
                  DVALM1=XSCRT(ISTRT3+IINDX2)
                  DTERM1=(DVAL - DVALM1)
                  DMEAN=DVALM1 + (DVAL - DVALM1)/DNNEW
                  XSCRT(ISTRT3+IINDX2)=REAL(DMEAN)
C
                  DVAL=DBLE(X0(KK))
                  DVALM1=XSCRT(ISTRT4+IINDX2)
                  DMEAN=DVALM1 + (DVAL - DVALM1)/DNNEW
                  DTERM2=(DVAL - DMEAN)
                  XSCRT(ISTRT4+IINDX2)=REAL(DMEAN)
C
                  DTERM3=DTERM1*DTERM2
                  DTERM4=DBLE(XSCRT(ISTRT1+IINDX2)) + DTERM3
                  XSCRT(ISTRT1+IINDX2)=REAL(DTERM4)
C
C                 ONLY NEED TO SAVE LOWER DIAGONAL FOR C(n)
C
                  XSCRT(ISTRT1 + IINDX3)=XSCRT(ISTRT1+IINDX2)
                  XSCRT(ISTRT2 + IINDX3)=XSCRT(ISTRT2+IINDX2)
                ENDIF
 7680         CONTINUE
 7675       CONTINUE
C
          ELSE
C
C           END OF FILE REACHED, SAVE COMPUTED STATISTIC
C
            DO7690IROW=1,NUMV
              IF(IVTYPE(IROW).EQ.0)GOTO7690
              DO7695ICOL=1,NUMV
                IF(IVTYPE(ICOL).EQ.0)GOTO7695
                IINDX=(IROW-1)*NUMV + ICOL
                Z0=XSCRT(ISTRT1+IINDX)
                ZN=XSCRT(ISTRT2+IINDX)
                IF(ZN.GT.1.5)THEN
                  Z0=Z0/(ZN-1.0)
                  IF(ICASRE.EQ.'CORR')THEN
                    IF(IROW.EQ.ICOL)THEN
                      Z0=1.0
                    ELSE
                      IINDX1=(IROW-1)*NUMV+IROW
                      IINDX2=(ICOL-1)*NUMV+ICOL
                      TERM1=XSCRT(ISTRT1+IINDX1)
                      ZN=XSCRT(ISTRT2+IINDX1)
                      TERM1=SQRT((TERM1/(ZN-1.0)))
                      TERM2=XSCRT(ISTRT1+IINDX2)
                      ZN=XSCRT(ISTRT2+IINDX1)
                      TERM2=SQRT(TERM2/(ZN-1.0))
                      IF(TERM1.GT.0.0 .AND. TERM2.GT.0.0)THEN
                        Z0=Z0/(TERM1*TERM2)
                      ENDIF
                    ENDIF
                  ENDIF
                ELSE
                  Z0=0.0
                ENDIF
                ICOLVJ=IECOL2(ICOL)
                IJ=MAXN*(ICOLVJ-1)+IROW
                IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                IF(ICOLVJ.EQ.MAXCP1)PRED(IROW)=Z0
                IF(ICOLVJ.EQ.MAXCP2)RES(IROW)=Z0
                IF(ICOLVJ.EQ.MAXCP3)YPLOT(IROW)=Z0
                IF(ICOLVJ.EQ.MAXCP4)XPLOT(IROW)=Z0
                IF(ICOLVJ.EQ.MAXCP5)X2PLOT(IROW)=Z0
                IF(ICOLVJ.EQ.MAXCP6)TAGPLO(IROW)=Z0
 7695         CONTINUE
 7690       CONTINUE
            GOTO7490
          ENDIF
        ELSEIF(ICASRE.EQ.'EDIS' .OR. ICASRE.EQ.'MDIS' .OR.
     1         ICASRE.EQ.'CDIS' .OR. ICASRE.EQ.'CODI' .OR.
     1         ICASRE.EQ.'COSI' .OR. ICASRE.EQ.'ACDI' .OR.
     1         ICASRE.EQ.'JASI' .OR. ICASRE.EQ.'JADI' .OR.
     1         ICASRE.EQ.'HDIS' .OR. ICASRE.EQ.'CNDI' .OR.
     1         ICASRE.EQ.'ACSI')THEN
C
C         CASE 7: ONE PASS COMPUTATION FOR VARIOUS DISTANCE AND
C                 SIMILARITY STATISTICS
C
C         EUCLIDEAN DISTANCE:
C
C            D = SQRT(SUM[i=1 to n][(X(i) - Y(i))**2])
C
C         MANHATTAN DISTANCE:
C
C            D = SQRT(SUM[i=1 to n][|X(i) - Y(i)|])
C
C          CANBERRA DISTANCE:
C
C            D(ij)=SUM[k=1 to p][|X(ik) - X(jk)|/
C                  (|X(i)| + |Y(i)|)]
C
C         CHEBYCHEV DISTANCE:
C
C            D = MAX[i=1 to n][|X(i) - Y(i)|])
C
C         COSINE SIMILARITY:
C
C            D = SUM[i=1 to n][X(i)*Y(i)]/{SQRT(SUM[i=1 to n][X(i)**2])*
C                SQRT(SUM[i=1 to n][X(i)**2])}
C
C         COSINE DISTANCE:
C
C            D = 1 - COSINE SIMILARITY
C
C         ANGULAR COSINE DISTANCE:
C
C            D = (1/COSINE SIMILARITY)/PI
C
C         ANGULAR COSINE SIMILARITY:
C
C            D = 1 - ANGULAR COSINE DISTANCE
C
C         JACCARD SIMILARITY:
C
C            J = SUM[i=1 to n][MIN(X(i),Y(i))/SUM[i=1 to n][MAX(X(i),Y(I))]
C
C         JACCARD DISTANCE:
C
C            J = 1 - JACCARD SIMILARITY
C
C         HAMMING DISTANCE:
C
C            D = NUMBER OF ELEMENTS THAT DIFFER IN X AND Y
C
C         WE ONLY NEED TO DO THE SQRT WHEN WE GO TO SAVE
C         THE DISTANCE MATRIX.
C
C         DO NOT INCLUDE MISSING VALUES (AS DEFINED BY THE
C         "SET READ MISSING VALUE <VALUE>" COMMAND.
C
C         ALSO, SKIP COLUMNS THAT USER HAS IDENTIFIED AS
C         CATEGORICAL DATA.
C
          ISTEPN='10D7'
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          ISTRT1=0
          ISTRT2=NUMV*NUMV
          ISTRT3=2*NUMV*NUMV
          ISTRT4=3*NUMV*NUMV
C
          IF(IEOF.EQ.0 .AND. IFROW.LE.IFRMAX)THEN
            DO7775JJ=1,NUMV
              IF(IVTYPE(JJ).EQ.0)GOTO7775
              IF(X0(JJ).EQ.PREAMV)GOTO7775
              IINDX1=(JJ-1)*NUMV + JJ
              IF(ICASRE.EQ.'EDIS' .OR. ICASRE.EQ.'MDIS' .OR.
     1           ICASRE.EQ.'CDIS' .OR. ICASRE.EQ.'HDIS' .OR.
     1           ICASRE.EQ.'CNDI')THEN
                XSCRT(IIDX1)=0.0
                JSTRT=JJ+1
                IFLAGJ=0
              ELSE
                JSTRT=JJ
                IFLAGJ=1
              ENDIF
              IF((IFLAGJ.EQ.0 .AND. JJ.LT.NUMV) .OR.
     1           IFLAGJ.EQ.1)THEN
                DO7780KK=JSTRT,NUMV
                  IF(IVTYPE(KK).EQ.0)GOTO7780
                  IF(X0(KK).EQ.PREAMV)GOTO7780
                  IINDX2=(JJ-1)*NUMV + KK
                  IINDX3=(KK-1)*NUMV + JJ
                  IF(ICASRE.EQ.'EDIS')THEN
                    DEL=X0(JJ) - X0(KK)
                    XSCRT(IINDX2)=XSCRT(IINDX2) + DEL*DEL
                  ELSEIF(ICASRE.EQ.'MDIS')THEN
                    XSCRT(IINDX2)=XSCRT(IINDX2) + ABS(X0(JJ) - X0(KK))
                  ELSEIF(ICASRE.EQ.'MDIS')THEN
                    XSCRT(IINDX2)=XSCRT(IINDX2) + ABS(X0(JJ) - X0(KK))
                  ELSEIF(ICASRE.EQ.'CNDI')THEN
                    XSCRT(IINDX2)=XSCRT(IINDX2) + ABS(X0(JJ) - X0(KK))/
     1                            (ABS(X0(JJ)) + ABS(X0(KK)))
                  ELSEIF(ICASRE.EQ.'HDIS')THEN
                    IF(X0(JJ).NE.X0(KK))XSCRT(IINDX2)=XSCRT(IINDX2)+1.0
                  ELSEIF(ICASRE.EQ.'CDIS')THEN
                    XSCRT(IINDX2)=MAX(XSCRT(IINDX2),ABS(X0(JJ)-X0(KK)))
                  ELSEIF(ICASRE.EQ.'JASI' .OR. ICASRE.EQ.'JADI')THEN
                    AVAL1=MIN(X0(JJ),X0(KK))
                    AVAL2=MAX(X0(JJ),X0(KK))
                    XSCRT(IINDX2)=XSCRT(IINDX2) + AVAL1
                    XSCRT(ISTRT2+IINDX2)=XSCRT(ISTRT2+IINDX2) + AVAL2
                    XSCRT(ISTRT2+IINDX3)=XSCRT(ISTRT2+IINDX2)
                  ELSEIF(ICASRE.EQ.'CODI' .OR. ICASRE.EQ.'COSI' .OR.
     1                   ICASRE.EQ.'ACDI' .OR. ICASRE.EQ.'ACSI')THEN
                    IF(ICASRE.EQ.'CODI' .AND.
     1                (X0(JJ).LT.0.0 .OR. X0(KK).LT.0.0))THEN
                      WRITE(ICOUT,999)
                      CALL DPWRST('XXX','BUG ')
                      WRITE(ICOUT,211)
                      CALL DPWRST('XXX','BUG ')
                      WRITE(ICOUT,22100)
22100                 FORMAT('      A NEGATIVE VALUE ENCOUNTERED ',
     1                       'TRYING TO COMPUTE COSINE DISTANCE.')
                      CALL DPWRST('XXX','BUG ')
                      WRITE(ICOUT,22103)IFROW
22103                 FORMAT('      ERROR OCCURRED READING LINE ',I10)
                      CALL DPWRST('XXX','BUG ')
                      IERROR='YES'
                      GOTO9000
                    ENDIF
                    IFLAGC=1
                    IF(X0(JJ).LT.0.0 .OR. X0(KK).LT.0.0)IFLAGC=0
                    XSCRT(IINDX2)=XSCRT(IINDX2) + X0(JJ)*X0(KK)
                    XSCRT(ISTRT2+IINDX2)=XSCRT(ISTRT2+IINDX2) +
     1                                   X0(JJ)*X0(JJ)
                    XSCRT(ISTRT3+IINDX2)=XSCRT(ISTRT3+IINDX2) +
     1                                   X0(KK)*X0(KK)
                    IF(IFLAGC.EQ.0)THEN
                      XSCRT(ISTRT4+IINDX2)=0.0
                    ELSE
                      IF(IFROW.EQ.IFRMIN)THEN
                        XSCRT(ISTRT4+IINDX2)=1.0
                      ENDIF
                    ENDIF
                    XSCRT(ISTRT2+IINDX3)=XSCRT(ISTRT2+IINDX2)
                    XSCRT(ISTRT3+IINDX3)=XSCRT(ISTRT3+IINDX2)
                    XSCRT(ISTRT4+IINDX3)=XSCRT(ISTRT4+IINDX2)
                  ENDIF
                  XSCRT(IINDX3)=XSCRT(IINDX2)
 7780           CONTINUE
              ENDIF
 7775       CONTINUE
C
          ELSE
C
C           END OF FILE REACHED, SAVE COMPUTED STATISTIC
C
            DO7790IROW=1,NUMV
              IF(IVTYPE(IROW).EQ.0)GOTO7790
              DO7795ICOL=1,NUMV
                IF(IVTYPE(ICOL).EQ.0)GOTO7795
                IINDX=(IROW-1)*NUMV + ICOL
                Z0=XSCRT(IINDX)
                IF(ICASRE.EQ.'EDIS')THEN
                  Z0=SQRT(Z0)
                ELSEIF(ICASRE.EQ.'CODI' .OR. ICASRE.EQ.'COSI' .OR.
     1                 ICASRE.EQ.'ACDI' .OR. ICASRE.EQ.'ACSI')THEN
                  IF(IROW.EQ.ICOL)THEN
                    Z0=1.0
                  ELSE
                    TERM1=SQRT(XSCRT(ISTRT2+IINDX))
                    TERM2=SQRT(XSCRT(ISTRT3+IINDX))
                    IF(TERM1.GT.0.0)THEN
                      Z0=Z0/(TERM1*TERM2)
                    ELSE
                      Z0=CPUMIN
                      GOTO7794
                    ENDIF
                  ENDIF
                  IF(ICASRE.EQ.'CODI')THEN
                    Z0=1.0 - Z0
                  ELSEIF(ICASRE.EQ.'ACDI')THEN
                    IFLAGC=1
                    IF(XSCRT(ISTRT4+IINDX).EQ.0.0)IFLAGC=0
                    IF(IFLAGC.EQ.1)THEN
                      Z0=2.0*ACOS(Z0)/PI
                    ELSE
                      Z0=ACOS(Z0)/PI
                    ENDIF
                  ELSEIF(ICASRE.EQ.'ACSI')THEN
                    IF(IFLAGC.EQ.1)THEN
                      AFACT=2.0
                    ELSE
                      AFACT=1.0
                    ENDIF
                    Z0=1.0 - AFACT*ACOS(Z0)/PI
                  ENDIF
                ELSEIF(ICASRE.EQ.'JADI' .OR. ICASRE.EQ.'JASI')THEN
                  TERM1=XSCRT(IINDX)
                  TERM2=XSCRT(ISTRT2+IINDX)
                  IF(TERM2.NE.0.0)THEN
                    Z0=TERM1/TERM2
                    IF(ICASRE.EQ.'JADI')Z0=1.0 - Z0
                  ELSE
                    Z0=CPUMIN
                  ENDIF
                ENDIF
 7794           CONTINUE
                ICOLVJ=IECOL2(ICOL)
                IJ=MAXN*(ICOLVJ-1)+IROW
                IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                IF(ICOLVJ.EQ.MAXCP1)PRED(IROW)=Z0
                IF(ICOLVJ.EQ.MAXCP2)RES(IROW)=Z0
                IF(ICOLVJ.EQ.MAXCP3)YPLOT(IROW)=Z0
                IF(ICOLVJ.EQ.MAXCP4)XPLOT(IROW)=Z0
                IF(ICOLVJ.EQ.MAXCP5)X2PLOT(IROW)=Z0
                IF(ICOLVJ.EQ.MAXCP6)TAGPLO(IROW)=Z0
 7795         CONTINUE
 7790       CONTINUE
            GOTO7490
          ENDIF
C
        ELSEIF(ICASRE.EQ.'CTCR' .OR. ICASRE.EQ.'CTCV' .OR.
     1         ICASRE.EQ.'CTED' .OR. ICASRE.EQ.'CTCD' .OR.
     1         ICASRE.EQ.'CCOD' .OR. ICASRE.EQ.'CCOS' .OR.
     1         ICASRE.EQ.'CACD' .OR. ICASRE.EQ.'CACS' .OR.
     1         ICASRE.EQ.'CTHD' .OR. ICASRE.EQ.'CTXD' .OR.
     1         ICASRE.EQ.'CJAD' .OR. ICASRE.EQ.'CJAS' .OR.
     1         ICASRE.EQ.'CTMD')THEN
C
C         CASE 8: ONE PASS COMPUTATION FOR
C
C                    1) CORRELATION OR COVARIANCE
C                    2) VARIOUS DISTANCE/SIMILARITY STATISTICS
C                    3) PERCENTILES
C
C                 ON CROSS-TABULATION OF ONE TO FOUR VARIABLES
C
          ISTEPN='10G'
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(NCRT.EQ.1)THEN
            XHOLD1=X0(IVARC1)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              ICELL=NCELL
            ELSE
              DO8601K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K))THEN
                  ICELL=K
                  GOTO8609
                ENDIF
 8601         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,8603)MAXCEL
 8603           FORMAT('      MAXIMUM NUMBER OF CELLS (',I8,
     1                 ') EXCEEDED.')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 8609         CONTINUE
            ENDIF
          ELSEIF(NCRT.EQ.2)THEN
            XHOLD1=X0(IVARC1)
            XHOLD2=X0(IVARC2)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              CELLX2(NCELL)=XHOLD2
            ELSE
              DO8611K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K) .AND. XHOLD2.EQ.CELLX2(K))THEN
                  ICELL=K
                  GOTO8619
                ENDIF
 8611         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
                CELLX2(NCELL)=XHOLD2
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,8603)MAXCEL
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 8619         CONTINUE
            ENDIF
          ELSEIF(NCRT.EQ.3)THEN
            XHOLD1=X0(IVARC1)
            XHOLD2=X0(IVARC2)
            XHOLD3=X0(IVARC3)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              CELLX2(NCELL)=XHOLD2
              CELLX3(NCELL)=XHOLD3
            ELSE
              DO8621K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K) .AND. XHOLD2.EQ.CELLX2(K) .AND.
     1             XHOLD3.EQ.CELLX3(K))THEN
                  ICELL=K
                  GOTO8629
                ENDIF
 8621         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
                CELLX2(NCELL)=XHOLD2
                CELLX3(NCELL)=XHOLD3
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,8603)MAXCEL
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 8629         CONTINUE
            ENDIF
          ELSEIF(NCRT.EQ.4)THEN
            XHOLD1=X0(IVARC1)
            XHOLD2=X0(IVARC2)
            XHOLD3=X0(IVARC3)
            XHOLD4=X0(IVARC4)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              CELLX2(NCELL)=XHOLD2
              CELLX3(NCELL)=XHOLD3
              CELLX4(NCELL)=XHOLD4
            ELSE
              DO8631K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K) .AND. XHOLD2.EQ.CELLX2(K) .AND.
     1             XHOLD3.EQ.CELLX3(K) .AND. XHOLD4.EQ.CELLX4(K))THEN
                  ICELL=K
                  GOTO8639
                ENDIF
 8631         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
                CELLX2(NCELL)=XHOLD2
                CELLX3(NCELL)=XHOLD3
                CELLX4(NCELL)=XHOLD4
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,8603)MAXCEL
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 8639         CONTINUE
            ENDIF
          ENDIF
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
            WRITE(ICOUT,8641)NUMV,NCRT,NCELL,ICELL,
     1                       XHOLD1,XHOLD2,XHOLD3,XHOLD4
 8641       FORMAT('NUMV,NCRT,NCELL,ICELL,XHOLD1,XHOLD2,XHOLD3,',
     1             'XHOLD4 = ',4I6,4G15.7)
            CALL DPWRST('XXX','BUG ')
            DO8643JJ=1,NUMV
              WRITE(ICOUT,8645)JJ,X0(JJ)
 8645         FORMAT('JJ,X0(JJ) = ',I6,G15.7)
              CALL DPWRST('XXX','BUG ')
 8643       CONTINUE
          ENDIF
C
C         STATISTICS WILL NOT BE COMPUTED FOR ALL VARIABLES.
C         SPECIFICALLY, CHARACTER DATA WILL ONLY BE USED AS
C         CROSS-TABULATION VARIABLES.  IF A NUMERIC VARIABLE
C         IS USED AS A CROSS-TABULATION VARIABLE, THEN IT WILL
C         STORE THE "LEVEL" VALUE, BUT NO STATISTICS.
C
C         ICTLST  =  0   => SKIP THIS COLUMN
C         ICTLST  >= 1   => COMPUTE DISTANCE FOR THIS COLUMN
C         ICTLST  = -1   => THIS COLUMN IS A CROSS-TAB VARIABLE
C
C         THE LAST VARIABLE IS THE "TAGSTAT" VARIABLE, SO DON'T
C         ADD ANYTHING TO XSCRT FOR THAT VARIABLE.
C
          NCOLCT=0
          NCOLNU=0
          DO8810JJ=1,NUMV
            IF(JJ.EQ.NUMV)THEN
              ICTLST(JJ)=0
              GOTO8810
            ENDIF
C
            IF(ITYPE(JJ).EQ.1)THEN
C
C             CHARACTER FIELD - CHECK IF CROSS-TAB VARIABLE
C
               IF(JJ.EQ.IVARC1 .OR. JJ.EQ.IVARC2 .OR.
     1            JJ.EQ.IVARC3 .OR. JJ.EQ.IVARC4)THEN
                 ICTLST(JJ)=-1
                 NCOLCT=NCOLCT+1
               ELSE
                 ICTLST(JJ)=0
               ENDIF
            ELSE
C
C             NUMERIC FIELD - CHECK IF CROSS-TAB VARIABLE
C
               IF(JJ.EQ.IVARC1 .OR. JJ.EQ.IVARC2 .OR.
     1            JJ.EQ.IVARC3 .OR. JJ.EQ.IVARC4)THEN
                 ICTLST(JJ)=-1
                 NCOLCT=NCOLCT+1
               ELSE
                 NCOLCT=NCOLCT+1
                 NCOLNU=NCOLNU+1
                 ICTLST(JJ)=NCOLNU
               ENDIF
            ENDIF
 8810     CONTINUE
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
            WRITE(ICOUT,8811)NCOLCT,NCOLNU,NUMV
 8811       FORMAT('NCOLCT,NCOLNU,NUMV = ',3I8)
            CALL DPWRST('XXX','BUG ')
            DO8813JJ=1,MIN(NCOLCT,NUMV)
              WRITE(ICOUT,8815)JJ,ICTLST(JJ)
 8815         FORMAT('JJ,ICTLST(JJ) = ',2I8)
              CALL DPWRST('XXX','BUG ')
 8813       CONTINUE
          ENDIF
C
          IF(IEOF.EQ.0 .AND. IFROW.LE.IFRMAX)THEN
            CELLCN(ICELL)=CELLCN(ICELL) + 1
C
            ISTRTC=4*NCOLNU*NCOLNU*(ICELL-1)
            ISTRT1=ISTRTC
            ISTRT2=ISTRTC + NCOLNU*NCOLNU
            ISTRT3=ISTRTC + 2*NCOLNU*NCOLNU
            ISTRT4=ISTRTC + 3*NCOLNU*NCOLNU
C
            IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
              WRITE(ICOUT,8816)ISTRTC,ISTRT1,ISTRT2,ISTRT3,ISTRT4
 8816         FORMAT('ISTRTC,ISTRT1,ISTRT2,ISTRT3,ISTRT4 = ',5I8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            DO8825JJ=1,NUMV-1
              IF(X0(JJ).EQ.PREAMV)GOTO8825
              IF(ICTLST(JJ).LE.0)GOTO8825
              ICOL=ICTLST(JJ)
C
              DO8830KK=JJ,NUMV-1
                IF(X0(KK).EQ.PREAMV)GOTO8830
                IF(ICTLST(KK).LE.0)GOTO8830
                IROW=ICTLST(KK)
                IINDX1=(IROW-1)*NCOLNU + ICOL
                IINDX2=(ICOL-1)*NCOLNU + IROW
                IF(JJ.EQ.KK)THEN
                  IF(ICASRE.EQ.'CTED' .OR. ICASRE.EQ.'CTMD' .OR.
     1               ICASRE.EQ.'CTXD' .OR. ICASRE.EQ.'CTHD' .OR.
     1               ICASRE.EQ.'CTCD' .OR. ICASRE.EQ.'CJAD' .OR.
     1               ICASRE.EQ.'CCOD' .OR. ICASRE.EQ.'CACD'
     1              )THEN
                    XSCRT(ISTRT1 + IINDX1)=0.0
                    GOTO8829
                  ELSEIF(ICASRE.EQ.'CTCR')THEN
                    XSCRT(ISTRT1 + IINDX1)=1.0
                    GOTO8829
                  ENDIF
                ENDIF
                IF(ICASRE.EQ.'CTED')THEN
                  DEL=X0(JJ) - X0(KK)
                  XSCRT(ISTRT1 + IINDX1)=XSCRT(ISTRT1 + IINDX1) +
     1                                   DEL*DEL
C
                  IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                    WRITE(ICOUT,8817)JJ,KK,ICOL,IROW,IINDX1,IINDX2,
     1                               DEL*DEL,XSCRT(ISTRT1+IINDX1)
 8817               FORMAT('JJ,KK,ICOL,IROW,IINDX1,IINDX2,',
     1                     'DEL*DEL,XSCRT(ISTRT1+IINDX1) = ',6I4,2G15.7)
                    CALL DPWRST('XXX','BUG ')
                  ENDIF
C
                ELSEIF(ICASRE.EQ.'CTMD')THEN
                  XSCRT(ISTRT1 + IINDX1)=XSCRT(ISTRT1 + IINDX1) +
     1                                   ABS(X0(JJ) - X0(KK))
                ELSEIF(ICASRE.EQ.'CTXD')THEN
                  TERM1=ABS(X0(JJ) - X0(KK))
                  TERM2=ABS(X0(JJ)) + ABS(X0(KK))
                  TERM3=XSCRT(ISTRT1+IINDX1)
                  IF(TERM2.NE.0.0 .AND. TERM3.NE.CPUMIN)THEN
                    XSCRT(ISTRT1 + IINDX1)=XSCRT(ISTRT1 + IINDX1) +
     1                                     TERM1/TERM2
                  ELSE
                    XSCRT(ISTRT1 + IINDX1)=PSTAMV
                  ENDIF
                ELSEIF(ICASRE.EQ.'CTHD')THEN
                  IF(X0(JJ).NE.X0(KK))THEN
                    XSCRT(ISTRT1 + IINDX1)=XSCRT(ISTRT1 + IINDX1) + 1.0
                  ENDIF
                ELSEIF(ICASRE.EQ.'CTCD')THEN
                  XSCRT(ISTRT1 + IINDX1)=MAX(XSCRT(ISTRT1 + IINDX1),
     1                                       ABS(X0(JJ)-X0(KK)))
                ELSEIF(ICASRE.EQ.'CJAS' .OR. ICASRE.EQ.'CJAD')THEN
                  AVAL1=MIN(X0(JJ),X0(KK))
                  AVAL2=MAX(X0(JJ),X0(KK))
                  XSCRT(ISTRT1 + IINDX1)=XSCRT(ISTRT1 + IINDX1) +
     1                                   AVAL1
                  XSCRT(ISTRT2 + IINDX1)=XSCRT(ISTRT2 + IINDX1) + AVAL2
                  XSCRT(ISTRT2 + IINDX2)=XSCRT(ISTRT2 + IINDX1)
                ELSEIF(ICASRE.EQ.'CCOD' .OR. ICASRE.EQ.'CCOS' .OR.
     1                 ICASRE.EQ.'CACD' .OR. ICASRE.EQ.'CACS')THEN
                  IF(ICASRE.EQ.'CCOD' .AND.
     1              (X0(JJ).LT.0.0 .OR. X0(KK).LT.0.0))THEN
                    WRITE(ICOUT,999)
                    CALL DPWRST('XXX','BUG ')
                    WRITE(ICOUT,211)
                    CALL DPWRST('XXX','BUG ')
                    WRITE(ICOUT,22100)
                    CALL DPWRST('XXX','BUG ')
                    WRITE(ICOUT,22103)IFROW
                    CALL DPWRST('XXX','BUG ')
                    IERROR='YES'
                    GOTO9000
                  ENDIF
                  IFLAGC=0
                  EPS=-0.000001
                  IF(X0(JJ).LT.EPS .OR. X0(KK).LT.EPS)IFLAGC=1
                  XSCRT(ISTRT1 + IINDX1)=XSCRT(ISTRT1 + IINDX1) +
     1                                   X0(JJ)*X0(KK)
                  XSCRT(ISTRT2+IINDX1)=XSCRT(ISTRT2+IINDX1) +
     1                                 X0(JJ)*X0(JJ)
                  XSCRT(ISTRT3+IINDX1)=XSCRT(ISTRT3+IINDX1) +
     1                                 X0(KK)*X0(KK)
                  IF(IFLAGC.EQ.1)THEN
                    XSCRT(ISTRT4+IINDX1)=1.0
                  ENDIF
                  XSCRT(ISTRT2+IINDX2)=XSCRT(ISTRT2+IINDX1)
                  XSCRT(ISTRT3+IINDX2)=XSCRT(ISTRT3+IINDX1)
                  XSCRT(ISTRT4+IINDX2)=XSCRT(ISTRT4+IINDX1)
                ELSEIF(ICASRE.EQ.'CTCR' .OR. ICASRE.EQ.'CTCV')THEN
C
C                 CHECK IF THIS IS THE FIRST OBSERVATION
C
                  IF(XSCRT(ISTRT2+IINDX1).LT.0.5)THEN
                    XSCRT(ISTRT1+IINDX1)=0.0
                    XSCRT(ISTRT2+IINDX1)=1.0
                    XSCRT(ISTRT3+IINDX1)=X0(JJ)
                    XSCRT(ISTRT4+IINDX1)=X0(KK)
                  ELSE
                    DNOLD=DBLE(XSCRT(ISTRT2+IINDX1))
                    DNNEW=DNOLD + 1.0
                    DTERM3=DNOLD/DNNEW
                    XSCRT(ISTRT2+IINDX1)=REAL(DNNEW)
C
                    DVAL=DBLE(X0(JJ))
                    DVALM1=XSCRT(ISTRT3+IINDX1)
                    DTERM1=(DVAL - DVALM1)
                    DMEAN=DVALM1 + (DVAL - DVALM1)/DNNEW
                    XSCRT(ISTRT3+IINDX1)=REAL(DMEAN)
C
                    DVAL=DBLE(X0(KK))
                    DVALM1=XSCRT(ISTRT4+IINDX1)
                    DMEAN=DVALM1 + (DVAL - DVALM1)/DNNEW
                    DTERM2=(DVAL - DMEAN)
                    XSCRT(ISTRT4+IINDX1)=REAL(DMEAN)
C
                    DTERM3=DTERM1*DTERM2
                    DTERM4=DBLE(XSCRT(ISTRT1+IINDX1)) + DTERM3
                    XSCRT(ISTRT1+IINDX1)=REAL(DTERM4)
C
C                   ONLY NEED TO SAVE LOWER DIAGONAL FOR C(n)
C
                    XSCRT(ISTRT1 + IINDX2)=XSCRT(ISTRT1+IINDX1)
                    XSCRT(ISTRT2 + IINDX2)=XSCRT(ISTRT2+IINDX1)
                    XSCRT(ISTRT3 + IINDX2)=XSCRT(ISTRT3+IINDX1)
                    XSCRT(ISTRT4 + IINDX2)=XSCRT(ISTRT4+IINDX1)
                  ENDIF
                ENDIF
C
 8829           CONTINUE
                XSCRT(ISTRT1 + IINDX2)=XSCRT(ISTRT1 + IINDX1)
 8830         CONTINUE
 8825       CONTINUE
          ELSE
C
C           END OF FILE REACHED, SAVE COMPUTED STATISTIC
C
            IF(CELLCN(NCELL).EQ.0)NCELL=NCELL-1
C
            IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
              WRITE(ICOUT,8851)NCELL,NUMV
 8851         FORMAT('SAVE DATA: NCELL,NUMV = ',2I8)
              CALL DPWRST('XXX','BUG ')
              NLAST=ISTRTC + 4*NUMV*NUMV - 1
              DO8853LL=1,NLAST
                WRITE(ICOUT,8855)LL,XSCRT(LL)
 8855           FORMAT('LL,XSCRT(LL) = ',I8,G15.7)
                CALL DPWRST('XXX','BUG ')
 8853         CONTINUE
            ENDIF
C
            DO8863LL=1,NCELL
              ISTRTC=4*NCOLNU*NCOLNU*(LL-1)
              ISTRT1=ISTRTC
              ISTRT2=ISTRTC + NCOLNU*NCOLNU
              ISTRT3=ISTRTC + 2*NCOLNU*NCOLNU
              ISTRT4=ISTRTC + 3*NCOLNU*NCOLNU
C
              IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                WRITE(ICOUT,8868)LL,ISTRTC,ISTRT1,ISTRT2
 8868           FORMAT('LL,ISTRTC,ISTRT1,ISTRT2=',4I6)
                CALL DPWRST('XXX','BUG ')
              ENDIF
C
              DO8860KK=1,NUMV
                IROW=ICTLST(KK)
                IROW2=(LL-1)*NCOLNU + ICTLST(KK)
                IF(ICTLST(KK).LE.0)GOTO8860
                DO8865JJ=1,NUMV
                  ICOL=ICTLST(JJ)
                  IINDX1=(IROW-1)*NCOLNU + ICOL
                  IINDX2=(ICOL-1)*NCOLNU + IROW
C
                  IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                    WRITE(ICOUT,8867)ICOL,IROW,IROW2,IINDX1,IINDX2
 8867               FORMAT('ICOL,IROW,IROW2,IINDX1,IINDX2=',5I6)
                    CALL DPWRST('XXX','BUG ')
                  ENDIF
C
                  IF(JJ.EQ.NUMV)THEN
                    Z0=REAL(LL)
                  ELSEIF(JJ.EQ.IVARC1)THEN
                    Z0=CELLX1(LL)
                  ELSEIF(JJ.EQ.IVARC2)THEN
                    Z0=CELLX2(LL)
                  ELSEIF(JJ.EQ.IVARC3)THEN
                    Z0=CELLX3(LL)
                  ELSEIF(JJ.EQ.IVARC4)THEN
                    Z0=CELLX4(LL)
                  ELSEIF(ICTLST(JJ).EQ.0)THEN
                    GOTO8865
                  ELSEIF(ICASRE.EQ.'CTED')THEN
                    Z0=XSCRT(ISTRT1 + IINDX1)
                    Z0=SQRT(Z0)
                  ELSEIF(ICASRE.EQ.'CCOD' .OR. ICASRE.EQ.'CCOS' .OR.
     1                   ICASRE.EQ.'CACD' .OR. ICASRE.EQ.'CACS')THEN
                    IF(KK.EQ.JJ)THEN
                      Z0=1.0
                    ELSE
                      Z0=XSCRT(ISTRT1 + IINDX1)
                      TERM1=SQRT(XSCRT(ISTRT2+IINDX1))
                      TERM2=SQRT(XSCRT(ISTRT3+IINDX1))
                      IF(TERM1.GT.0.0)THEN
                        Z0=Z0/(TERM1*TERM2)
                      ELSE
                        Z0=CPUMIN
                        GOTO8864
                      ENDIF
                    ENDIF
                    IFLAGC=0
                    IF(XSCRT(ISTRT4+IINDX1).EQ.1.0)IFLAGC=1
                    IF(ICASRE.EQ.'CCOD')THEN
                      Z0=1.0 - Z0
                    ELSEIF(ICASRE.EQ.'CACD')THEN
                      IF(IFLAGC.EQ.0)THEN
                        AFACT=2.0
                      ELSE
                        AFACT=1.0
                      ENDIF
                      Z0=AFACT*ACOS(Z0)/PI
                    ELSEIF(ICASRE.EQ.'CACS')THEN
                      IF(IFLAGC.EQ.0)THEN
                        AFACT=2.0
                      ELSE
                        AFACT=1.0
                      ENDIF
                      Z0=1.0 - AFACT*ACOS(Z0)/PI
                    ENDIF
                  ELSEIF(ICASRE.EQ.'CJAD' .OR. ICASRE.EQ.'CJAS')THEN
                    TERM1=XSCRT(ISTRT1 + IINDX1)
                    TERM2=XSCRT(ISTRT2 + IINDX1)
                    IF(TERM2.NE.0.0)THEN
                      Z0=TERM1/TERM2
                      IF(ICASRE.EQ.'CJAD')Z0=1.0 - Z0
                    ELSE
                      Z0=CPUMIN
                    ENDIF
                  ELSEIF(ICASRE.EQ.'CTCR' .OR. ICASRE.EQ.'CTCV')THEN
                    Z0=XSCRT(ISTRT1 + IINDX1)
                    ZN=XSCRT(ISTRT2 + IINDX1)
                    IF(ZN.GT.1.5)THEN
                      Z0=Z0/(ZN-1.0)
                      IF(ICASRE.EQ.'CTCR')THEN
                        IF(JJ.EQ.KK)THEN
                          Z0=1.0
                        ELSE
                          IINDXR=(KK-1)*NCOLNU + KK
                          IINDXC=(JJ-1)*NCOLNU + JJ
                          TERM1=XSCRT(ISTRT1+IINDXR)
                          ZN1=XSCRT(ISTRT2+IINDXR)
                          TERM1=SQRT((TERM1/(ZN1-1.0)))
                          TERM2=XSCRT(ISTRT1+IINDXC)
                          ZN2=XSCRT(ISTRT2+IINDXC)
                          TERM2=SQRT(TERM2/(ZN-1.0))
                          IF(TERM1.GT.0.0 .AND. TERM2.GT.0.0)THEN
                            Z0=Z0/(TERM1*TERM2)
                          ENDIF
                        ENDIF
                      ENDIF
                    ELSE
                      Z0=0.0
                    ENDIF
                  ELSE
                    Z0=XSCRT(ISTRT1 + IINDX1)
                  ENDIF
 8864             CONTINUE
                  ICOLVJ=IECOL2(JJ)
                  IJ=MAXN*(ICOLVJ-1)+IROW2
C
                  IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                     WRITE(ICOUT,8861)LL,KK,JJ,IROW2,Z0
 8861                FORMAT('LL,KK,JJ,IROW2,Z0 = ',4I8,G15.7)
                     CALL DPWRST('XXX','BUG ')
                  ENDIF
C
                  IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP1)PRED(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP2)RES(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP3)YPLOT(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP4)XPLOT(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP5)X2PLOT(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP6)TAGPLO(IJ)=Z0
 8865           CONTINUE
 8860         CONTINUE
 8863       CONTINUE
            GOTO7490
          ENDIF
        ELSEIF(ICASRE.EQ.'PERC')THEN
C
C         CASE 5: ONE PASS COMPUTATION FOR PERCENTILES
C
C                 WE USE THE P2 ALGORITHM GIVEN IN
C
C                     JAIN AND CHLAMTAC (1985), "The P^2
C                     ALGORITHM FOR DYNAMIC CALCULATION
C                     OF QUANTILES AND HISTOGRAMS WITHOUT
C                     STORING OBSERVATIONS", COMMUNICATIONS
C                     OF THE ACM, 28, NO. 10, PP. 1076-1085.
C
C                 SPECIFICALLY, WE USE THE EXTENDED P2
C                 ALGORITHM FOR MULTIPLE PERCENTILES GIVEN IN
C
C                     RAATIKANIEN (1987), "SIMULTANEOUS ESTIMATION
C                     OF SEVERAL PERCENTILES", SIMULATION,
C                     PP. 159-164.
C
C                 THE MINIMUM, ESTIMATED PERCENTILES FROM
C                 0.001 IN INCREMENTS OF 0.001 TO 0.999, AND
C                 THE MAXIMUM (FOR 1,001 POINTS TOTAL).  IF
C                 THERE IS 1,001 POINTS OR LESS, THE RAW DATA
C                 IS RETURNED.
C
C                 NOTE THAT THIS ALGORITHM RETURNS APPROXIMATE
C                 PERCENTILES, BUT SHOULD GET MORE ACCURATE AS
C                 THE SIZE OF THE DATA INCREASES.
C
          ISTEPN='10E'
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(IEOF.EQ.0 .AND. IFROW.LE.IFRMAX)THEN
C
C           FOR FIRST LINE READ, DEFINE THE DESIRED PERCENTILES.
C
            IF(XSCRT(1).EQ.0.0)THEN
              IF(ISRENP.EQ.9)THEN
                M=9
                AINC=0.1
              ELSEIF(ISRENP.EQ.99)THEN
                M=99
                AINC=0.01
              ELSEIF(ISRENP.EQ.999)THEN
                M=999
                AINC=0.001
              ELSE
                M=9999
                AINC=0.0001
              ENDIF
              DO5510II=1,M
                AVAL=REAL(II)*AINC
                TEMP1(II)=REAL(II)*AINC
 5510         CONTINUE
              NINIT=2*M + 3
              IINC=4*NINIT
C
              IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                WRITE(ICOUT,5506)M,NINIT,IINC
 5506           FORMAT('M,NINIT,IINC = ',3I8)
                CALL DPWRST('XXX','BUG ')
              ENDIF
C
            ENDIF
C
            DO5520JJ=1,NUMV
              IF(X0(JJ).EQ.PREAMV)GOTO5520
              ITEMP1(JJ)=ITEMP1(JJ) + 1
              NUMLGR=ITEMP1(JJ)
C
C             DEFINE START INDEX FOR Q, F, D, N ARRAYS
C
              IINDX1=(JJ-1)*IINC
              IINDX2=(JJ-1)*IINC + NINIT
              IINDX3=(JJ-1)*IINC + 2*NINIT
              IINDX4=(JJ-1)*IINC + 3*NINIT
C
              IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                WRITE(ICOUT,5507)JJ,IINDX1,IINDX2,IINDX3,IINDX4,NUMLGR
 5507           FORMAT('JJ,IINDX1,IINDX2,IINDX3,IINDX4,NUMLGR = ',6I8)
                CALL DPWRST('XXX','BUG ')
              ENDIF
C
              IF(NUMLGR.LT.NINIT)THEN
                XSCRT(IINDX1+NUMLGR)=X0(JJ)
              ELSEIF(NUMLGR.EQ.NINIT)THEN
                XSCRT(IINDX1+NUMLGR)=X0(JJ)
                CALL SORT(XSCRT(IINDX1+1),NUMLGR,XSCRT(IINDX1+1))
                XSCRT(IINDX2+1)=0.0
                XSCRT(IINDX2+NINIT)=1.0
                DO5511II=1,M
                  XSCRT(IINDX2 + 2*II+1)=TEMP1(II)
 5511           CONTINUE
                DO5512II=1,M+1
                  AVAL1=XSCRT(IINDX2 + 2*II-1)
                  AVAL2=XSCRT(IINDX2 + 2*II+1)
                  XSCRT(IINDX2 + 2*II)=(AVAL1 + AVAL2)/2.0
 5512           CONTINUE
                ACONST=2.0*REAL(M+1)
                DO5513II=1,NINT
                  XSCRT(IINDX3 + II)=1.0 + ACONST*XSCRT(IINDX2 + II)
                  XSCRT(IINDX4 + II)=REAL(II)
 5513           CONTINUE
C
                IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                  DO5519II=1,4*NINIT
                    WRITE(ICOUT,5518)II,XSCRT(IINDX1+II)
 5518               FORMAT('II,XSCRT(IINDX1+II) = ',I5,G15.7)
                    CALL DPWRST('XXX','BUG ')
 5519             CONTINUE
                ENDIF
C
              ELSE
                YNEW=X0(JJ)
                QMIN=XSCRT(IINDX1 + 1)
                QMAX=XSCRT(IINDX1 + NINIT)
                IF(YNEW.LT.QMIN)THEN
                  K=1
                  XSCRT(IINDX1 + 1)=YNEW
                ELSEIF(YNEW.GT.QMAX)THEN
                  K=NINIT-1
                  XSCRT(IINDX1 + NINIT)=YNEW
                ELSE
                  TEMP2(1)=YNEW
                  NVAL=1
                  CALL MATCH2(XSCRT(IINDX1+1),NINIT,TEMP2,NVAL,
     1                        TEMP3,IWRITE,
     1                        ISUBRO,IBUGS2,IERROR)
                  K=INT(TEMP3(1)+0.1)
                ENDIF
C
                IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                  WRITE(ICOUT,5522)JJ,NUMLGR,K,XSCRT(IINDX1+1),
     1                             XSCRT(IINDX1+NINIT)
 5522             FORMAT('5522: JJ,NUMLGR,K,XSCRT(IINDX1+1),',
     1                   'XSCRT(IINDX1+NINIT) = ',3I5,2G15.7)
                  CALL DPWRST('XXX','BUG ')
                ENDIF
C
                DO5515II=K+1,NINIT
                  XSCRT(IINDX4 + II)=XSCRT(IINDX4 + II) + 1.0
 5515           CONTINUE
                DO5517II=1,NINIT
                  XSCRT(IINDX3 + II)=XSCRT(IINDX3 + II) +
     1                               XSCRT(IINDX2 + II)
 5517           CONTINUE
              ENDIF
C
              DO5525L=2,2*M+2
                QL=XSCRT(IINDX1+L)
                QLM1=XSCRT(IINDX1+L-1)
                QLP1=XSCRT(IINDX1+L+1)
                DL=XSCRT(IINDX3+L)
                DLM1=XSCRT(IINDX3+L-1)
                DLP1=XSCRT(IINDX3+L+1)
                ANL=XSCRT(IINDX4+L)
                ANLM1=XSCRT(IINDX4+L-1)
                ANLP1=XSCRT(IINDX4+L+1)
                DI=DL - ANL
                DP=ANLP1 - ANL
                DM=ANLM1 - ANL
                QP=(QLP1 - QL)/DP
                QM=(QLM1 - QL)/DM
C
                IF(DI.GE.1.0 .AND. DP.GT.1.0)THEN
                  QT=QL + ((1.0 - DM)*QP + (DP - 1.0)*QM)/(DP - DM)
                  IF(QLM1.LT.QT .AND. QT.LT.QLP1)THEN
                    XSCRT(IINDX1 + L)=QT
                  ELSE
                    XSCRT(IINDX1 + L)=QL + QP
                  ENDIF
                  XSCRT(IINDX4 + L)=XSCRT(IINDX4 + L) + 1.0
                ELSEIF(DI.LE.-1.0 .AND. DM.LT.-1.0)THEN
                  QT=QL - ((1.0 + DP)*QM - (DM + 1.0)*QP)/(DP - DM)
                  IF(QLM1.LT.QT .AND. QT.LT.QLP1)THEN
                    XSCRT(IINDX1 + L)=QT
                  ELSE
                    XSCRT(IINDX1 + L)=QL - QM
                  ENDIF
                  XSCRT(IINDX4 + L)=XSCRT(IINDX4 + L) - 1.0
                ENDIF
C
 5525         CONTINUE
C
 5520       CONTINUE
          ELSE
C
C           END OF FILE REACHED, SAVE COMPUTED STATISTIC
C
            DO5540JJ=1,NUMV
              NUMLGR=ITEMP1(JJ)
              ICOLVJ=IECOL2(JJ)
              IINDX1=(JJ-1)*IINC
              IF(NUMLGR.GE.1 .AND. NUMLGR.LE.NINIT)THEN
                CALL SORT(XSCRT(IINDX1+1),NUMLGR,XSCRT(IINDX1+1))
                ICNT2=0
C
                IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                  WRITE(ICOUT,5541)JJ,NUMLGR,ICOLVJ,IINDX1
 5541             FORMAT('5540: JJ,NUMLGR,ICOLVJ,IINDX1 = ',4I8)
                  CALL DPWRST('XXX','BUG ')
                ENDIF
C
                DO5550KK=1,NUMLGR
                  ICNT2=ICNT2+1
                  Z0=XSCRT(IINDX1 + KK)
                  IJ=MAXN*(ICOLVJ-1)+ICNT2
                  IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
 5550           CONTINUE
              ELSE
C
C               FIRST ADD MINIMUM VALUE
C
                ICNT2=1
                Z0=XSCRT(IINDX1 + 1)
                IJ=MAXN*(ICOLVJ-1)+ICNT2
                IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
C
                DO5560KK=1,M
                  ICNT2=ICNT2+1
                  Z0=XSCRT(IINDX1 + 1 + 2*KK)
                  IJ=MAXN*(ICOLVJ-1)+ICNT2
                  IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
 5560           CONTINUE
C
C               LAST ADD MAXIMUM VALUE
C
                ICNT2=ICNT2+1
                Z0=XSCRT(IINDX1 + NINIT)
                IJ=MAXN*(ICOLVJ-1)+ICNT2
                IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
C
              ENDIF
 5540       CONTINUE
            GOTO7490
          ENDIF
C
        ELSEIF(ICASRE.EQ.'CSTA')THEN
C
C         CASE 6: ONE PASS COMPUTATION FOR A LIST OF STATISTICS BASED
C                 ON CROSS-TABULATION OF ONE TO FOUR VARIABLES
C
C                 CURRENTLY, COMPUTE THE FOLLOWING STATISTICS:
C
C                   1. COUNT
C                   2. MINIMUM
C                   3. MAXIMUM
C                   4. RANGE
C                   5. MEAN
C                   6. STANDARD DEVIATION
C                   7. SKEWNESS
C                   8. KURTOSIS
C                   9. AUTOCORRELATION
C                  10. M2 (SECOND CENTRAL MOMENT)
C                  11. M3 (THIRD CENTRAL MOMENT)
C                  12. M4 (FOURTH CENTRAL MOMENT)
C                  13. Q (USED FOR ONE-PASS STANDARD DEVIATION)
C                  14. NUMBER OF MISSING
C
C                  NOTE THAT M2, M3, AND M4 ARE USED TO COMPUTE THE
C                  SKEWNESS AND KURTOSIS.  HOWEVER, THEY WILL NOT BE
C                  SAVED.  Q IS USED IN THE COMPUTATION OF THE STANDARD
C                  DEVIATION, BUT IT WILL NOT BE SAVED.
C
          ISTEPN='10E'
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(NCRT.EQ.1)THEN
            XHOLD1=X0(IVARC1)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              ICELL=NCELL
            ELSE
              DO7601K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K))THEN
                  ICELL=K
                  GOTO7609
                ENDIF
 7601         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,7603)MAXCEL
 7603           FORMAT('      MAXIMUM NUMBER OF CELLS (',I8,
     1                 ') EXCEEDED.')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 7609         CONTINUE
            ENDIF
          ELSEIF(NCRT.EQ.2)THEN
            XHOLD1=X0(IVARC1)
            XHOLD2=X0(IVARC2)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              CELLX2(NCELL)=XHOLD2
            ELSE
              DO7611K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K) .AND. XHOLD2.EQ.CELLX2(K))THEN
                  ICELL=K
                  GOTO7619
                ENDIF
 7611         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
                CELLX2(NCELL)=XHOLD2
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,7603)MAXCEL
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 7619         CONTINUE
            ENDIF
          ELSEIF(NCRT.EQ.3)THEN
            XHOLD1=X0(IVARC1)
            XHOLD2=X0(IVARC2)
            XHOLD3=X0(IVARC3)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              CELLX2(NCELL)=XHOLD2
              CELLX3(NCELL)=XHOLD3
            ELSE
              DO7621K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K) .AND. XHOLD2.EQ.CELLX2(K) .AND.
     1             XHOLD3.EQ.CELLX3(K))THEN
                  ICELL=K
                  GOTO7629
                ENDIF
 7621         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
                CELLX2(NCELL)=XHOLD2
                CELLX3(NCELL)=XHOLD3
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,7603)MAXCEL
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 7629         CONTINUE
            ENDIF
          ELSEIF(NCRT.EQ.4)THEN
            XHOLD1=X0(IVARC1)
            XHOLD2=X0(IVARC2)
            XHOLD3=X0(IVARC3)
            XHOLD4=X0(IVARC4)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              CELLX2(NCELL)=XHOLD2
              CELLX3(NCELL)=XHOLD3
              CELLX4(NCELL)=XHOLD4
            ELSE
              DO7631K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K) .AND. XHOLD2.EQ.CELLX2(K) .AND.
     1             XHOLD3.EQ.CELLX3(K) .AND. XHOLD4.EQ.CELLX4(K))THEN
                  ICELL=K
                  GOTO7639
                ENDIF
 7631         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
                CELLX2(NCELL)=XHOLD2
                CELLX3(NCELL)=XHOLD3
                CELLX4(NCELL)=XHOLD4
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,7603)MAXCEL
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 7639         CONTINUE
            ENDIF
          ENDIF
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
            WRITE(ICOUT,7641)NCRT,NCELL,ICELL,XHOLD1,XHOLD2,
     1                       XHOLD3,XHOLD4
 7641       FORMAT('NCRT,NCELL,ICELL,XHOLD1,XHOLD2,XHOLD3,XHOLD4 = ',
     1             3I6,4G15.7)
            CALL DPWRST('XXX','BUG ')
            DO7643JJ=1,NUMV
              WRITE(ICOUT,7645)JJ,X0(JJ)
 7645         FORMAT('JJ,X0(JJ) = ',I6,G15.7)
              CALL DPWRST('XXX','BUG ')
 7643       CONTINUE
          ENDIF
C
C         STATISTICS WILL NOT BE COMPUTED FOR ALL VARIABLES.
C         SPECIFICALLY, CHARACTER DATA WILL ONLY BE USED AS
C         CROSS-TABULATION VARIABLES.  IF A NUMERIC VARIABLE
C         IS USED AS A CROSS-TABULATION VARIABLE, THEN IT WILL
C         STORE THE "LEVEL" VALUE, BUT NO STATISTICS.
C
C         ICTLST  = 0   => SKIP THIS COLUMN
C         ICTLST  = 1   => COMPUTE STATISTICS FOR THIS COLUMN
C         ICTLST  = 2   => THIS COLUMN IS A CROSS-TAB VARIABLE
C
C         THE LAST VARIABLE IS THE "TAGSTAT" VARIABLE, SO DON'T
C         ADD ANYTHING TO XSCRT FOR THAT VARIABLE.
C
          NCOLCT=0
          DO7810JJ=1,NUMV
            IF(JJ.EQ.NUMV)THEN
              ICTLST(JJ)=0
              GOTO7810
            ENDIF
C
            IF(ITYPE(JJ).EQ.1)THEN
C
C             CHARACTER FIELD - CHECK IF CROSS-TAB VARIABLE
C
               IF(JJ.EQ.IVARC1 .OR. JJ.EQ.IVARC2 .OR.
     1            JJ.EQ.IVARC3 .OR. JJ.EQ.IVARC4)THEN
                 ICTLST(JJ)=2
                 NCOLCT=NCOLCT+1
               ELSE
                 ICTLST(JJ)=0
               ENDIF
            ELSE
C
C             NUMERIC FIELD - CHECK IF CROSS-TAB VARIABLE
C
               IF(JJ.EQ.IVARC1 .OR. JJ.EQ.IVARC2 .OR.
     1            JJ.EQ.IVARC3 .OR. JJ.EQ.IVARC4)THEN
                 ICTLST(JJ)=2
                 NCOLCT=NCOLCT+1
               ELSE
                 ICTLST(JJ)=1
                 NCOLCT=NCOLCT+1
               ENDIF
            ENDIF
 7810     CONTINUE
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
            WRITE(ICOUT,7811)NCOLCT,NUMV
 7811       FORMAT('NCOLCT,NUMV = ',2I8)
            CALL DPWRST('XXX','BUG ')
            DO7813JJ=1,MIN(NCOLCT,NUMV)
              WRITE(ICOUT,7815)JJ,ICTLST(JJ)
 7815         FORMAT('JJ,ICTLST(JJ) = ',2I8)
              CALL DPWRST('XXX','BUG ')
 7813       CONTINUE
          ENDIF
C
C         IF THE INPUT VALUE IS 
C
          NSTATF=14
          IF(IEOF.EQ.0 .AND. IFROW.LE.IFRMAX)THEN
            CELLCN(ICELL)=CELLCN(ICELL) + 1
C
            ICNT=0
            DO7825JJ=1,NUMV
              IF(ICTLST(JJ).EQ.0)GOTO7825
              ISTRT=(ICELL-1)*(NCOLCT*NSTATF)
              NLAST=NCELL*(NCOLCT*NSTATF)
              ICNT=ICNT+1
C
C             CHECK FOR MISSING VALUE IN RESPONSE VARIABLES
C
              IF(ICTLST(JJ).EQ.1)THEN
                IF(X0(JJ).EQ.PREAMV)THEN
                  XSCRT(ISTRT+ICNT+13*NCOLCT)=
     1              XSCRT(ISTRT+ICNT+13*NCOLCT)+1
                  GOTO7825
                ELSE
                  XSCRT(ISTRT+ICNT)=XSCRT(ISTRT+ICNT)+1.0
                ENDIF
              ELSEIF(ICTLST(JJ).EQ.2)THEN
                IF(JJ.EQ.IVARC1)THEN
                  AVAL=CELLX1(ICELL)
                ELSEIF(JJ.EQ.IVARC2)THEN
                  AVAL=CELLX2(ICELL)
                ELSEIF(JJ.EQ.IVARC3)THEN
                  AVAL=CELLX3(ICELL)
                ELSEIF(JJ.EQ.IVARC4)THEN
                  AVAL=CELLX4(ICELL)
                ENDIF
                XSCRT(ISTRT+ICNT)=AVAL
                XSCRT(ISTRT+ICNT+NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+2*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+3*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+4*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+5*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+6*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+7*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+8*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+9*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+10*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+11*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+12*NCOLCT)=AVAL
                XSCRT(ISTRT+ICNT+13*NCOLCT)=AVAL
                GOTO7825
              ENDIF
C
              NUMLGR=INT(XSCRT(ISTRT+ICNT)+0.1)
              NVAL=NUMLGR
C
C              1 - COUNT
C              2 - MIN
C              3 - MAX
C              4 - RANGE
C              5 - MEAN
C              6 - SD
C              7 - SKEWNESS
C              8 - KURTOSIS
C              9 - AUTO-CORRELATION
C             10 - M2
C             11 - M3
C             12 - M4
C             13 - Q
C             14 - NUMBER OF MISSING
C
C             NOTE: ONE-PASS FORMULA FOR STANDARD DEVIATION IS
C
C                       SD = SQRT(Qk/(k-1))
C
C                   WHERE
C
C                       Q(k) = Q(K-1) + (K-1)*[X(k) - M(K-1)]^2/K
C
              IF(NUMLGR.EQ.1)THEN
                XSCRT(ISTRT+ICNT+NCOLCT)=X0(JJ)
                XSCRT(ISTRT+ICNT+2*NCOLCT)=X0(JJ)
                XSCRT(ISTRT+ICNT+3*NCOLCT)=0.0
                XSCRT(ISTRT+ICNT+4*NCOLCT)=X0(JJ)
                XSCRT(ISTRT+ICNT+5*NCOLCT)=0.0
                XSCRT(ISTRT+ICNT+6*NCOLCT)=0.0
                XSCRT(ISTRT+ICNT+7*NCOLCT)=0.0
                XSCRT(ISTRT+ICNT+8*NCOLCT)=0.0
                XSCRT(ISTRT+ICNT+9*NCOLCT)=0.0
                XSCRT(ISTRT+ICNT+10*NCOLCT)=0.0
                XSCRT(ISTRT+ICNT+11*NCOLCT)=0.0
                XSCRT(ISTRT+ICNT+12*NCOLCT)=0.0
              ELSE
C
                DNOLD=DBLE(NUMLGR-1)
                DNNEW=DBLE(NUMLGR)
                XSCRT(ISTRT+ICNT+NCOLCT)=
     1                MIN(XSCRT(ISTRT+ICNT+NCOLCT),X0(JJ))
                XSCRT(ISTRT+ICNT+2*NCOLCT)=
     1               MAX(XSCRT(ISTRT+ICNT+2*NCOLCT),X0(JJ))
                XSCRT(ISTRT+ICNT+3*NCOLCT)=
     1                XSCRT(ISTRT+ICNT+2*NCOLCT) -
     1                XSCRT(ISTRT+ICNT+NCOLCT)
                DVALM1=DBLE(XSCRT(ISTRT+ICNT+4*NCOLCT))
                DVALSO=DBLE(XSCRT(ISTRT+ICNT+12*NCOLCT))
C
                DVAL=DBLE(X0(JJ))
                DELTA=DVAL - DVALM1
                DELTAN=DELTA/DNNEW
                DELTN2=DELTAN*DELTAN
                DTERM1=DELTA*DELTAN*DNOLD
C
                DMEAN=DVALM1 + DELTAN
C
                DTERM2=(DNOLD/DNNEW)*DELTA**2
                DVALS1=DVALSO + DTERM2
                DSD=DSQRT(DVALS1/DBLE(NUMLGR-1))
C
                DM2=DBLE(XSCRT(ISTRT+ICNT+9*NCOLCT))
                DM3=DBLE(XSCRT(ISTRT+ICNT+10*NCOLCT))
                DM4=DBLE(XSCRT(ISTRT+ICNT+11*NCOLCT))
                DM4=DM4 + DTERM1*DELTN2*(DNNEW*DNNEW - 3.0D0*DNNEW
     1              + 3.0D0) + 6.0D0*DELTN2*DM2 - 4.0D0*DELTAN*DM3
                DM3=DM3 + DTERM1*DELTAN*(DNNEW - 2.0D0) -
     1              3.0D0*DELTAN*DM2
                DM2=DM2 + DTERM1
C
                IF(DM2.GT.0.0D0)THEN
                  DSKEW=DSQRT(DNNEW)*DM3/(DM2**1.5D0)
                  DKURT=(DNNEW*DM4)/(DM2*DM2)
                ELSE
                  IF(DM2.NE.0.0)THEN
                    DSKEW=0.0D0
                    DKURT=(DNNEW*DM4)/(DM2*DM2)
                  ELSE
                    DSKEW=0.0D0
                    DKURT=0.0D0
                  ENDIF
                ENDIF
C
C               COMPUTE AUTOCORRELATION.  USE THE ONE-PASS FORMULA
C               FOR CORRELATION.  THE COMPLICATION IS THAT FOR
C               AUTOCORRELATION WE ARE COMPUTING FOR A LAGGED
C               VERSION OF THE VARIABLE.
C
                XSCRT(ISTRT+ICNT+4*NCOLCT)=REAL(DMEAN)
                XSCRT(ISTRT+ICNT+5*NCOLCT)=REAL(DSD)
                XSCRT(ISTRT+ICNT+6*NCOLCT)=REAL(DSKEW)
                XSCRT(ISTRT+ICNT+7*NCOLCT)=REAL(DKURT)
                XSCRT(ISTRT+ICNT+8*NCOLCT)=0.0
                XSCRT(ISTRT+ICNT+9*NCOLCT)=REAL(DM2)
                XSCRT(ISTRT+ICNT+10*NCOLCT)=REAL(DM3)
                XSCRT(ISTRT+ICNT+11*NCOLCT)=REAL(DM4)
                XSCRT(ISTRT+ICNT+12*NCOLCT)=REAL(DVALS1)
              ENDIF
 7825       CONTINUE
          ELSE
C
C           END OF FILE REACHED, SAVE COMPUTED STATISTIC
C
            NSTAT=9
            IF(CELLCN(NCELL).EQ.0)NCELL=NCELL-1
C
            IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
              WRITE(ICOUT,7851)NCELL,NUMV,NSTAT
 7851         FORMAT('SAVE DATA: NCELL,NUMV,NSTAT = ',3I8)
              CALL DPWRST('XXX','BUG ')
              NLAST=NCELL*NCOLCT*NSTATF
              DO7853LL=1,NLAST
                WRITE(ICOUT,7855)LL,XSCRT(LL)
 7855           FORMAT('LL,XSCRT(LL) = ',I8,G15.7)
                CALL DPWRST('XXX','BUG ')
 7853         CONTINUE
            ENDIF
C
            DO7863LL=1,NCELL
              ISTRT=(LL-1)*(NCOLCT*NSTATF)
              DO7860KK=1,NSTAT
                ICNT=0
                DO7865JJ=1,NUMV
                  IROW=(LL-1)*NSTAT + KK
                  IF(JJ.EQ.NUMV)THEN
                    Z0=REAL(KK)
                  ELSEIF(ICTLST(JJ).EQ.0)THEN
                    GOTO7865
                  ELSE
                    ICNT=ICNT+1
                    IF(KK.EQ.NSTAT)THEN
                      IINDX=ISTRT + (NSTATF-1)*NCOLCT + ICNT
                    ELSE
                      IINDX=ISTRT + (KK-1)*NCOLCT + ICNT
                    ENDIF
                    Z0=XSCRT(IINDX)
                  ENDIF
                  ICOLVJ=IECOL2(JJ)
                  IJ=MAXN*(ICOLVJ-1)+IROW
C
                  IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                     WRITE(ICOUT,7861)LL,KK,JJ,IINDX,IROW,Z0
 7861                FORMAT('LL,KK,JJ,IINDX,IROW,Z0 = ',5I8,G15.7)
                     CALL DPWRST('XXX','BUG ')
                  ENDIF
C
                  IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                  IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                  IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
 7865           CONTINUE
 7860         CONTINUE
 7863       CONTINUE
            GOTO7490
          ENDIF
        ELSEIF(ICASRE.EQ.'CTPE')THEN
C
C         CASE 9: ONE PASS COMPUTATION FOR
C
C                    1) PERCENTILES
C
C                 ON CROSS-TABULATION OF ONE TO FOUR VARIABLES
C
          ISTEPN='10H'
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(NCRT.EQ.1)THEN
            XHOLD1=X0(IVARC1)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              ICELL=NCELL
            ELSE
              DO8901K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K))THEN
                  ICELL=K
                  GOTO8909
                ENDIF
 8901         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,8903)MAXCEL
 8903           FORMAT('      MAXIMUM NUMBER OF CELLS (',I8,
     1                 ') EXCEEDED.')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 8909         CONTINUE
            ENDIF
          ELSEIF(NCRT.EQ.2)THEN
            XHOLD1=X0(IVARC1)
            XHOLD2=X0(IVARC2)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              CELLX2(NCELL)=XHOLD2
            ELSE
              DO8911K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K) .AND. XHOLD2.EQ.CELLX2(K))THEN
                  ICELL=K
                  GOTO8919
                ENDIF
 8911         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
                CELLX2(NCELL)=XHOLD2
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,8903)MAXCEL
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 8919         CONTINUE
            ENDIF
          ELSEIF(NCRT.EQ.3)THEN
            XHOLD1=X0(IVARC1)
            XHOLD2=X0(IVARC2)
            XHOLD3=X0(IVARC3)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              CELLX2(NCELL)=XHOLD2
              CELLX3(NCELL)=XHOLD3
            ELSE
              DO8921K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K) .AND. XHOLD2.EQ.CELLX2(K) .AND.
     1             XHOLD3.EQ.CELLX3(K))THEN
                  ICELL=K
                  GOTO8929
                ENDIF
 8921         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
                CELLX2(NCELL)=XHOLD2
                CELLX3(NCELL)=XHOLD3
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,8903)MAXCEL
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 8929         CONTINUE
            ENDIF
          ELSEIF(NCRT.EQ.4)THEN
            XHOLD1=X0(IVARC1)
            XHOLD2=X0(IVARC2)
            XHOLD3=X0(IVARC3)
            XHOLD4=X0(IVARC4)
C
C           CHECK TO SEE IF THIS CELL ALREADY EXISTS
C
            IF(NCELL.EQ.0)THEN
              NCELL=NCELL+1
              CELLID(NCELL)=NCELL
              CELLX1(NCELL)=XHOLD1
              CELLX2(NCELL)=XHOLD2
              CELLX3(NCELL)=XHOLD3
              CELLX4(NCELL)=XHOLD4
            ELSE
              DO8931K=1,NCELL
                IF(XHOLD1.EQ.CELLX1(K) .AND. XHOLD2.EQ.CELLX2(K) .AND.
     1             XHOLD3.EQ.CELLX3(K) .AND. XHOLD4.EQ.CELLX4(K))THEN
                  ICELL=K
                  GOTO8939
                ENDIF
 8931         CONTINUE
              IF(NCELL.LT.MAXCEL)THEN
                NCELL=NCELL+1
                ICELL=NCELL
                CELLX1(NCELL)=XHOLD1
                CELLX2(NCELL)=XHOLD2
                CELLX3(NCELL)=XHOLD3
                CELLX4(NCELL)=XHOLD4
              ELSE
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,211)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,8903)MAXCEL
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
 8939         CONTINUE
            ENDIF
          ENDIF
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
            WRITE(ICOUT,8941)NUMV,NCRT,NCELL,ICELL,
     1                       XHOLD1,XHOLD2,XHOLD3,XHOLD4
 8941       FORMAT('NUMV,NCRT,NCELL,ICELL,XHOLD1,XHOLD2,XHOLD3,',
     1             'XHOLD4 = ',4I6,4G15.7)
            CALL DPWRST('XXX','BUG ')
            DO8943JJ=1,NUMV
              WRITE(ICOUT,8945)JJ,X0(JJ)
 8945         FORMAT('JJ,X0(JJ) = ',I6,G15.7)
              CALL DPWRST('XXX','BUG ')
 8943       CONTINUE
          ENDIF
C
C         STATISTICS WILL NOT BE COMPUTED FOR ALL VARIABLES.
C         SPECIFICALLY, CHARACTER DATA WILL ONLY BE USED AS
C         CROSS-TABULATION VARIABLES.  IF A NUMERIC VARIABLE
C         IS USED AS A CROSS-TABULATION VARIABLE, THEN IT WILL
C         STORE THE "LEVEL" VALUE, BUT NO STATISTICS.
C
C         ICTLST  =  0   => SKIP THIS COLUMN
C         ICTLST  >= 1   => COMPUTE PERCENTILE FOR THIS COLUMN
C         ICTLST  = -1   => THIS COLUMN IS A CROSS-TAB VARIABLE
C
C         THE LAST VARIABLE IS THE "TAGSTAT" VARIABLE, SO DON'T
C         ADD ANYTHING TO XSCRT FOR THAT VARIABLE.
C
          NCOLCT=0
          NCOLNU=0
          DO8950JJ=1,NUMV
            IF(JJ.EQ.NUMV)THEN
              ICTLST(JJ)=0
              GOTO8950
            ENDIF
C
            IF(ITYPE(JJ).EQ.1)THEN
C
C             CHARACTER FIELD - CHECK IF CROSS-TAB VARIABLE
C
               IF(JJ.EQ.IVARC1 .OR. JJ.EQ.IVARC2 .OR.
     1            JJ.EQ.IVARC3 .OR. JJ.EQ.IVARC4)THEN
                 ICTLST(JJ)=-1
                 NCOLCT=NCOLCT+1
               ELSE
                 ICTLST(JJ)=0
               ENDIF
            ELSE
C
C             NUMERIC FIELD - CHECK IF CROSS-TAB VARIABLE
C
               IF(JJ.EQ.IVARC1 .OR. JJ.EQ.IVARC2 .OR.
     1            JJ.EQ.IVARC3 .OR. JJ.EQ.IVARC4)THEN
                 ICTLST(JJ)=-1
                 NCOLCT=NCOLCT+1
               ELSE
                 NCOLCT=NCOLCT+1
                 NCOLNU=NCOLNU+1
                 ICTLST(JJ)=NCOLNU
               ENDIF
            ENDIF
 8950     CONTINUE
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
            WRITE(ICOUT,8951)NCOLCT,NCOLNU,NUMV
 8951       FORMAT('NCOLCT,NCOLNU,NUMV = ',3I8)
            CALL DPWRST('XXX','BUG ')
            DO8953JJ=1,MIN(NCOLCT,NUMV)
              WRITE(ICOUT,8955)JJ,ICTLST(JJ)
 8955         FORMAT('JJ,ICTLST(JJ) = ',2I8)
              CALL DPWRST('XXX','BUG ')
 8953       CONTINUE
          ENDIF
C
          IF(IEOF.EQ.0 .AND. IFROW.LE.IFRMAX)THEN
C
C           FOR FIRST LINE READ, DEFINE THE DESIRED PERCENTILES
C
            IF(XSCRT(1).EQ.0.0)THEN
              IF(ISRENP.EQ.9)THEN
                M=9
                AINC=0.1
              ELSEIF(ISRENP.EQ.99)THEN
                M=99
                AINC=0.01
              ELSEIF(ISRENP.EQ.999)THEN
                M=999
                AINC=0.001
              ELSE
                M=9999
                AINC=0.0001
              ENDIF
              DO8960II=1,M
                AVAL=REAL(II)*AINC
                TEMP1(II)=REAL(II)*AINC
 8960         CONTINUE
              NINIT=2*M + 3
              IINC=4*NINIT
C
              IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                WRITE(ICOUT,8961)M,NINIT,IINC
 8961           FORMAT('M,NINIT,IINC = ',3I8)
                CALL DPWRST('XXX','BUG ')
              ENDIF
C
            ENDIF
C
            CELLCN(ICELL)=CELLCN(ICELL) + 1
C
            ISTRTC=NCOLNU*IINC*(ICELL-1)
C
            IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
              WRITE(ICOUT,8963)ICELL,CELLCN(ICELL),ISTRTC
 8963         FORMAT('ICELL,CELLCN(ICELL),ISTRTC = ',3I8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            DO8970JJ=1,NUMV-1
              IF(X0(JJ).EQ.PREAMV)GOTO8970
              IF(ICTLST(JJ).LE.0)GOTO8970
              ICOL=ICTLST(JJ)
C
              IVAL=(ICELL-1)*(NUMV-1)+JJ
              ITEMP1(IVAL)=ITEMP1(IVAL) + 1
              NUMLGR=ITEMP1(IVAL)
C
C             DEFINE START INDEX FOR Q, F, D, N ARRAYS
C
              IINDX1=ISTRTC + (JJ-1)*IINC
              IINDX2=ISTRTC + (JJ-1)*IINC + NINIT
              IINDX3=ISTRTC + (JJ-1)*IINC + 2*NINIT
              IINDX4=ISTRTC + (JJ-1)*IINC + 3*NINIT
C
              IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                WRITE(ICOUT,8971)JJ,IINDX1,IINDX2,IINDX3,IINDX4,NUMLGR
 8971           FORMAT('JJ,IINDX1,IINDX2,IINDX3,IINDX4,NUMLGR = ',6I8)
                CALL DPWRST('XXX','BUG ')
              ENDIF
C
              IF(NUMLGR.LT.NINIT)THEN
                XSCRT(IINDX1+NUMLGR)=X0(JJ)
              ENDIF
              IF(NUMLGR.EQ.NINIT-1)THEN
                XSCRT(IINDX1+NUMLGR)=X0(JJ)
                CALL SORT(XSCRT(IINDX1+1),NUMLGR,XSCRT(IINDX1+1))
                XSCRT(IINDX2+1)=0.0
                XSCRT(IINDX2+NINIT)=1.0
                DO8972II=1,M
                  XSCRT(IINDX2 + 2*II+1)=TEMP1(II)
 8972           CONTINUE
                DO8973II=1,M+1
                  AVAL1=XSCRT(IINDX2 + 2*II-1)
                  AVAL2=XSCRT(IINDX2 + 2*II+1)
                  XSCRT(IINDX2 + 2*II)=(AVAL1 + AVAL2)/2.0
 8973           CONTINUE
                ACONST=2.0*REAL(M+1)
                DO8974II=1,NINT
                  XSCRT(IINDX3 + II)=1.0 + ACONST*XSCRT(IINDX2 + II)
                  XSCRT(IINDX4 + II)=REAL(II)
 8974           CONTINUE
C
                IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                  DO8975II=1,4*NINIT
                    WRITE(ICOUT,8976)II,XSCRT(IINDX1+II)
 8976               FORMAT('II,XSCRT(IINDX1+II) = ',I5,G15.7)
                    CALL DPWRST('XXX','BUG ')
 8975             CONTINUE
                ENDIF
C
              ELSE
                YNEW=X0(JJ)
                QMIN=XSCRT(IINDX1 + 1)
                QMAX=XSCRT(IINDX1 + NINIT)
                IF(YNEW.LT.QMIN)THEN
                  K=1
                  XSCRT(IINDX1 + 1)=YNEW
                ELSEIF(YNEW.GT.QMAX)THEN
                  K=NINIT-1
                  XSCRT(IINDX1 + NINIT)=YNEW
                ELSE
                  TEMP2(1)=YNEW
                  NVAL=1
                  CALL MATCH2(XSCRT(IINDX1+1),NINIT,TEMP2,NVAL,
     1                        TEMP3,IWRITE,
     1                        ISUBRO,IBUGS2,IERROR)
                  K=INT(TEMP3(1)+0.1)
                ENDIF
C
                IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                  WRITE(ICOUT,8978)JJ,NUMLGR,K,XSCRT(IINDX1+1),
     1                             XSCRT(IINDX1+NINIT)
 8978             FORMAT('8978: JJ,NUMLGR,K,XSCRT(IINDX1+1),',
     1                   'XSCRT(IINDX1+NINIT) = ',3I5,2G15.7)
                  CALL DPWRST('XXX','BUG ')
                ENDIF
C
                DO8980II=K+1,NINIT
                  XSCRT(IINDX4 + II)=XSCRT(IINDX4 + II) + 1.0
 8980           CONTINUE
                DO8981II=1,NINIT
                  XSCRT(IINDX3 + II)=XSCRT(IINDX3 + II) +
     1                               XSCRT(IINDX2 + II)
 8981           CONTINUE
              ENDIF
C
              DO8982L=2,2*M+2
                QL=XSCRT(IINDX1+L)
                QLM1=XSCRT(IINDX1+L-1)
                QLP1=XSCRT(IINDX1+L+1)
                DL=XSCRT(IINDX3+L)
                DLM1=XSCRT(IINDX3+L-1)
                DLP1=XSCRT(IINDX3+L+1)
                ANL=XSCRT(IINDX4+L)
                ANLM1=XSCRT(IINDX4+L-1)
                ANLP1=XSCRT(IINDX4+L+1)
                DI=DL - ANL
                DP=ANLP1 - ANL
                DM=ANLM1 - ANL
                QP=(QLP1 - QL)/DP
                QM=(QLM1 - QL)/DM
C
                IF(DI.GE.1.0 .AND. DP.GT.1.0)THEN
                  QT=QL + ((1.0 - DM)*QP + (DP - 1.0)*QM)/(DP - DM)
                  IF(QLM1.LT.QT .AND. QT.LT.QLP1)THEN
                    XSCRT(IINDX1 + L)=QT
                  ELSE
                    XSCRT(IINDX1 + L)=QL + QP
                  ENDIF
                  XSCRT(IINDX4 + L)=XSCRT(IINDX4 + L) + 1.0
                ELSEIF(DI.LE.-1.0 .AND. DM.LT.-1.0)THEN
                  QT=QL - ((1.0 + DP)*QM - (DM + 1.0)*QP)/(DP - DM)
                  IF(QLM1.LT.QT .AND. QT.LT.QLP1)THEN
                    XSCRT(IINDX1 + L)=QT
                  ELSE
                    XSCRT(IINDX1 + L)=QL - QM
                  ENDIF
                  XSCRT(IINDX4 + L)=XSCRT(IINDX4 + L) - 1.0
                ENDIF
C
 8982         CONTINUE
 8970       CONTINUE
C
          ELSE
C
C           END OF FILE REACHED, SAVE COMPUTED STATISTIC
C
            IF(CELLCN(NCELL).EQ.0)NCELL=NCELL-1
C
            IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
              WRITE(ICOUT,8986)NCELL,NUMV
 8986         FORMAT('SAVE DATA: NCELL,NUMV = ',2I8)
              CALL DPWRST('XXX','BUG ')
              NLAST=NCOLNU*IINC*NCELL
              DO8987LL=1,NLAST
                WRITE(ICOUT,8988)LL,XSCRT(LL)
 8988           FORMAT('LL,XSCRT(LL) = ',I8,G15.7)
                CALL DPWRST('XXX','BUG ')
 8987         CONTINUE
            ENDIF
C
            IROWTO=0
            DO8991LL=1,NCELL
              ISTRTC=NCOLNU*IINC*(LL-1)
              IVAL1=(LL-1)*NCOLNU
              MAXROW=0
C
              DO8993KK=1,NUMV-1
                IF(ICTLST(KK).LE.0)GOTO8993
                IVAL2=ITEMP1(IVAL1+KK)
C
C               IF IVAL2 >= NINIT, THEN ONLY M PERCENTILES ARE
C               EXTRACTED, PLUS MIN AND MAX POINTS
C
                IF(IVAL2.GE.NINIT)THEN
                  IVAL2=M + 2
                ENDIF
                IF(IVAL2.GT.MAXROW)MAXROW=IVAL2
 8993         CONTINUE
              IF(MAXROW.GT.NINIT)MAXROW=NINIT
              IROWTO=IROWTO+MAXROW
              ITEMP3(LL)=IROWTO
              IF(LL.EQ.1)THEN
                IINDX2=0
              ELSE
                IINDX2=ITEMP3(LL-1)
              ENDIF
C
              IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                WRITE(ICOUT,8989)LL,ISTRTC,IVAL1,MAXROW,
     1                           IROWTO,ITEMP3(LL),IINDX2
 8989           FORMAT('LL,ISTRTC,IVAL1,MAXROW,IROWTO,ITEMP3(LL)',
     1                 'IINDX2=',7I6)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,18988)CELLX1(LL),CELLX2(LL)
18988           FORMAT('CELLX1(LL),CELLX2(LL) = ',2G15.7)
                CALL DPWRST('XXX','BUG ')
              ENDIF
C
              DO8995JJ=1,NUMV
                IINDX1=ISTRTC + (JJ-1)*IINC
                ICOLVJ=IECOL2(JJ)
C
                IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                  WRITE(ICOUT,8996)ISTRTC,JJ,IINDX1
 8996             FORMAT('ISTRTC,JJ,IINDX1=',3I6)
                  CALL DPWRST('XXX','BUG ')
                ENDIF
C
                IF(JJ.EQ.NUMV)THEN
                  DO8994KK=1,MAXROW
                    Z0=REAL(LL)
                    IJ=MAXN*(ICOLVJ-1)+IINDX2+KK
                    IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                    IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
 8994             CONTINUE
                ELSEIF(ICTLST(JJ).LE.0)THEN
                  DO18995KK=1,MAXROW
                    IF(JJ.EQ.IVARC1)THEN
                      Z0=CELLX1(LL)
                    ELSEIF(JJ.EQ.IVARC2)THEN
                      Z0=CELLX2(LL)
                    ELSEIF(JJ.EQ.IVARC3)THEN
                      Z0=CELLX3(LL)
                    ELSEIF(JJ.EQ.IVARC4)THEN
                      Z0=CELLX4(LL)
                    ELSE
                      Z0=PSTAMV
                    ENDIF
                    IJ=MAXN*(ICOLVJ-1)+IINDX2+KK
                    IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                    IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
18995             CONTINUE
                ELSE
C
                  IVAL2=ITEMP1(IVAL1+JJ)
                  NUMLGR=ITEMP1(IVAL)
                  ICOLVJ=IECOL2(JJ)
                  IINDX1=ISTRTC + (JJ-1)*IINC
                  IF(NUMLGR.GE.1 .AND. NUMLGR.LT.NINIT)THEN
                    CALL SORT(XSCRT(IINDX1+1),NUMLGR,XSCRT(IINDX1+1))
                    ICNT2=0
C
                    IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
                      WRITE(ICOUT,8997)JJ,NUMLGR,ICOLVJ,IINDX1
 8997                 FORMAT('8997: JJ,NUMLGR,ICOLVJ,IINDX1 = ',4I8)
                      CALL DPWRST('XXX','BUG ')
                    ENDIF
C
                    DO8998KK=1,MAXROW
                      ICNT2=ICNT2+1
                      IF(KK.LE.NUMLGR)THEN
                        Z0=XSCRT(IINDX1 + KK)
                      ELSE
                        Z0=PSTAMV
                      ENDIF
                      IJ=MAXN*(ICOLVJ-1)+IINDX2+ICNT2
                      IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                      IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                      IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                      IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                      IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                      IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                      IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
 8998               CONTINUE
                  ELSE
C
C                   MINIMUM VALUE
C
                    ICNT2=1
                    Z0=XSCRT(IINDX1 + 1)
                    IJ=MAXN*(ICOLVJ-1)+IINDX2+ICNT2
                    IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                    IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
C
C                   M PERCENTILES
C
                    DO8999KK=1,M
                      ICNT2=ICNT2+1
                      Z0=XSCRT(IINDX1 + 1 + 2*KK)
                      IJ=MAXN*(ICOLVJ-1)+IINDX2+ICNT2
                      IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                      IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                      IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                      IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                      IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                      IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                      IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
 8999               CONTINUE
C
C                   ADD MAXIMUM VALUE
C
                    ICNT2=ICNT2+1
                    Z0=XSCRT(IINDX1 + NINIT)
                    IJ=MAXN*(ICOLVJ-1)+IINDX2+ICNT2
                    IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                    IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                    IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
C
C                   PAD WITH MISSING VALUES IF LESS THAN MAXIMUM
C                   NUMBER OF ROWS FOR THIS CELL
C
                    IF(ICNT2.LT.MAXROW)THEN
                      DO18999KK=ICNT2+1,MAXROW
                        ICNT2=ICNT2+1
                        Z0=PSTAMV
                        IJ=MAXN*(ICOLVJ-1)+IINDX2+ICNT2
                        IF(ICOLVJ.LE.MAXCOL)V(IJ)=Z0
                        IF(ICOLVJ.EQ.MAXCP1)PRED(ICNT2)=Z0
                        IF(ICOLVJ.EQ.MAXCP2)RES(ICNT2)=Z0
                        IF(ICOLVJ.EQ.MAXCP3)YPLOT(ICNT2)=Z0
                        IF(ICOLVJ.EQ.MAXCP4)XPLOT(ICNT2)=Z0
                        IF(ICOLVJ.EQ.MAXCP5)X2PLOT(ICNT2)=Z0
                        IF(ICOLVJ.EQ.MAXCP6)TAGPLO(ICNT2)=Z0
18999                 CONTINUE
                    ENDIF
                  ENDIF
                ENDIF
C
 8995         CONTINUE
 8991       CONTINUE
            GOTO7490
          ENDIF
        ENDIF
C
 7400 CONTINUE
 7490 CONTINUE
C
C               *****************************
C               **  STEP 11--              **
C               **  UPDATE THE NAME TABLE  **
C               *****************************
C
      ISTEPN='11'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISTEPN='7600'
C
      IF(ICASRE.EQ.'WRIT')THEN
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,8021)IFILE2
 8021     FORMAT('FORMATTED DATA WRITTEN TO FILE: ',A80)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ELSEIF(ICASRE.EQ.'GSTA' .OR. ICASRE.EQ.'DSTA' .OR.
     1       ICASRE.EQ.'FSTA' .OR. ICASRE.EQ.'CSTA' .OR.
     1       ICASRE.EQ.'EDIS' .OR. ICASRE.EQ.'MDIS' .OR.
     1       ICASRE.EQ.'CODI' .OR. ICASRE.EQ.'COSI' .OR.
     1       ICASRE.EQ.'ACDI' .OR. ICASRE.EQ.'ACSI' .OR.
     1       ICASRE.EQ.'CDIS' .OR. ICASRE.EQ.'CORR' .OR.
     1       ICASRE.EQ.'JADI' .OR. ICASRE.EQ.'JASI' .OR.
     1       ICASRE.EQ.'HDIS' .OR. ICASRE.EQ.'CNDI' .OR.
     1       ICASRE.EQ.'COVA' .OR. ICASRE.EQ.'CTED' .OR.
     1       ICASRE.EQ.'CTCD' .OR. ICASRE.EQ.'CTMD' .OR.
     1       ICASRE.EQ.'CTCR' .OR. ICASRE.EQ.'CTCV' .OR.
     1       ICASRE.EQ.'CTHD' .OR. ICASRE.EQ.'CTXD' .OR.
     1       ICASRE.EQ.'CCOD' .OR. ICASRE.EQ.'CCOS' .OR.
     1       ICASRE.EQ.'CACD' .OR. ICASRE.EQ.'CACS' .OR.
     1       ICASRE.EQ.'CJAD' .OR. ICASRE.EQ.'CJAS' .OR.
     1       ICASRE.EQ.'PERC' .OR. ICASRE.EQ.'CTPE'
     1      )THEN
        NLAST=NUMV
        IF(ICASRE.EQ.'CTED' .OR.
     1     ICASRE.EQ.'CTCD' .OR. ICASRE.EQ.'CTMD' .OR.
     1     ICASRE.EQ.'CTCR' .OR. ICASRE.EQ.'CTCV' .OR.
     1     ICASRE.EQ.'CCOD' .OR. ICASRE.EQ.'CCOS' .OR.
     1     ICASRE.EQ.'CACD' .OR. ICASRE.EQ.'CACS' .OR.
     1     ICASRE.EQ.'CTHD' .OR. ICASRE.EQ.'CTXD' .OR.
     1     ICASRE.EQ.'CJAD' .OR. ICASRE.EQ.'CJAS' .OR.
     1     ICASRE.EQ.'CTPE'
     1      )NLAST=NUMV+1
        DO7610IE=1,NUMV
          IF(ICASRE.EQ.'CSTA' .AND.
     1      (IE.LT.NUMV .AND. ICTLST(IE).EQ.0))GOTO7610
          IF(ICASRE.EQ.'EDIS' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'MDIS' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'CDIS' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'HDIS' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'CNDI' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'CODI' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'COSI' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'ACDI' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'ACSI' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'CORR' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'JADI' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'JASI' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'COVA' .AND. IVTYPE(IE).EQ.0)GOTO7610
          IF(ICASRE.EQ.'PERC' .AND. IVTYPE(IE).EQ.0)GOTO7610
          N=ICNT2
          IF(ICASRE.EQ.'CTPE')N=IROWTO
          IF(ICASRE.EQ.'CSTA')N=NSTAT*NCELL
          IF(ICASRE.EQ.'EDIS')N=NUMV
          IF(ICASRE.EQ.'MDIS')N=NUMV
          IF(ICASRE.EQ.'CDIS')N=NUMV
          IF(ICASRE.EQ.'HDIS')N=NUMV
          IF(ICASRE.EQ.'CNDI')N=NUMV
          IF(ICASRE.EQ.'CODI')N=NUMV
          IF(ICASRE.EQ.'COSI')N=NUMV
          IF(ICASRE.EQ.'ACDI')N=NUMV
          IF(ICASRE.EQ.'ACSI')N=NUMV
          IF(ICASRE.EQ.'CORR')N=NUMV
          IF(ICASRE.EQ.'COVA')N=NUMV
          IF(ICASRE.EQ.'JADI')N=NUMV
          IF(ICASRE.EQ.'JASI')N=NUMV
          IF(ICASRE.EQ.'CTED')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CTMD')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CTCD')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CTCR')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CTCV')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CCOD')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CCOS')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CACD')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CACS')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CJAD')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CJAS')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CTHD')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'CTXD')N=NCOLNU*NCELL
          IF(ICASRE.EQ.'PERC')THEN
            IF(ITEMP1(IE).LE.NINIT)THEN
              N=ITEMP1(IE)
            ELSE
              N=M+2
            ENDIF
          ENDIF
          ICOLVJ=IECOL2(IE)
          DO7620J=1,NUMNAM
            IF(IUSE(J).EQ.'V'.AND.IVALUE(J).EQ.ICOLVJ)THEN
              IUSE(J)='V'
              IVALUE(J)=ICOLVJ
              IF(N.GT.IN(J))IN(J)=N
              IVSTAR(J)=MAXN*(ICOLVJ-1)+1
              IVSTOP(J)=MAXN*(ICOLVJ-1)+N
            ENDIF
 7620     CONTINUE
 7610   CONTINUE
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,8000)
 8000     FORMAT('INPUT DATA FILE SUMMARY INFORMATION--')
          CALL DPWRST('XXX','BUG ')
          IF(ICASRE.EQ.'GSTA')THEN
            WRITE(ICOUT,8001)ISTANM
 8001       FORMAT('STREAM READ FOR STATISTIC: ',A)
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASRE.EQ.'DSTA')THEN
            WRITE(ICOUT,8031)
 8031       FORMAT('STREAM READ FOR DEFAULT STATISTICS')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASRE.EQ.'FSTA')THEN
            WRITE(ICOUT,8033)
 8033       FORMAT('STREAM READ FOR STATISTICS ON FULL DATA SET')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASRE.EQ.'EDIS' .OR. ICASRE.EQ.'MDIS' .OR.
     1           ICASRE.EQ.'CDIS' .OR.
     1           ICASRE.EQ.'JADI' .OR. ICASRE.EQ.'JASI' .OR.
     1           ICASRE.EQ.'HDIS' .OR. ICASRE.EQ.'CNDI' .OR.
     1           ICASRE.EQ.'CODI' .OR. ICASRE.EQ.'COSI' .OR.
     1           ICASRE.EQ.'ACDI' .OR. ICASRE.EQ.'ACSI')THEN
            WRITE(ICOUT,8034)
 8034       FORMAT('STREAM READ FOR DISTANCE MATRIX ON FULL DATA SET')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASRE.EQ.'COVA')THEN
            WRITE(ICOUT,8035)
 8035       FORMAT('STREAM READ FOR COVARIANCE MATRIX ON FULL DATA SET')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASRE.EQ.'CORR')THEN
            WRITE(ICOUT,8036)
 8036       FORMAT('STREAM READ FOR CORRELATION MATRIX ON FULL ',
     1             'DATA SET')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASRE.EQ.'CTED' .OR. ICASRE.EQ.'CTCD' .OR.
     1           ICASRE.EQ.'CTMD' .OR.
     1           ICASRE.EQ.'CJAD' .OR. ICASRE.EQ.'CJAS' .OR.
     1           ICASRE.EQ.'CCOD' .OR. ICASRE.EQ.'CCOS' .OR.
     1           ICASRE.EQ.'CTHD' .OR. ICASRE.EQ.'CTXD' .OR.
     1           ICASRE.EQ.'CACD' .OR. ICASRE.EQ.'CACS')THEN
            WRITE(ICOUT,8044)
 8044       FORMAT('STREAM READ FOR DISTANCE MATRIX ON CROSS-',
     1             'TABULATED DATA SET')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASRE.EQ.'CTCV')THEN
            WRITE(ICOUT,8045)
 8045       FORMAT('STREAM READ FOR COVARIANCE MATRIX ON CROSS-',
     1             'TABULATED DATA SET')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASRE.EQ.'CTCR')THEN
            WRITE(ICOUT,8046)
 8046       FORMAT('STREAM READ FOR CORRELATION MATRIX ON CROSS- ',
     1             'TABULATED DATA SET')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASRE.EQ.'PERC')THEN
            WRITE(ICOUT,8048)
 8048       FORMAT('STREAM READ FOR PERCENTILES ON FULL DATA SET')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASRE.EQ.'CTPE')THEN
            WRITE(ICOUT,8049)
 8049       FORMAT('STREAM READ FOR PERCENTILES ON CROSS- ',
     1             'TABULATED DATA SET')
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IF(ICASRE.NE.'FSTA')THEN
            WRITE(ICOUT,8002)ISRESI
 8002       FORMAT('NUMBER OF ROWS FOR STATISTIC: ',I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          WRITE(ICOUT,8003)IFCOL3,IFCOL4
 8003     FORMAT('INPUT FILE COLUMN     LIMITS     = ',I8,4X,I8)
          CALL DPWRST('XXX','BUG ')
          IF(IFROW2.EQ.INTINF)THEN
            WRITE(ICOUT,8004)IFROW1
 8004       FORMAT('INPUT FILE ROW        LIMITS     = ',I8,4X,
     1             'INFINITY')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(IFROW2.NE.INTINF)THEN
            WRITE(ICOUT,8005)IFROW1,IFROW2
 8005       FORMAT('INPUT FILE ROW        LIMITS     = ',I8,4X,I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          WRITE(ICOUT,8006)ISKIP
 8006     FORMAT('NUMBER OF HEADER LINES SKIPPED   = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,8007)NUMLRD
 8007     FORMAT('NUMBER OF DATA   LINES READ      = ',I10)
          CALL DPWRST('XXX','BUG ')
          IF(NUMV.GE.1)THEN
            WRITE(ICOUT,8008)NUMV
 8008       FORMAT('NUMBER OF VARIABLES    READ      = ',I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IFRST=IFCOL3
          IF(IFRST+240-1.GE.IFCOL4)THEN
            ILAST=IFCOL4
          ELSE
            ILAST=IFRST+240-1
          ENDIF
C
          WRITE(ICOUT,8011)
 8011     FORMAT('THE SCANNED REGION OF THE FIRST DATA LINE READ ',
     1           '(TO A MAXIMUM OF 240 CHARACTERS) = ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,8012)(ISTOR3(J),J=IFRST,MIN(240,ILAST))
 8012     FORMAT(240A1)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,8013)
 8013     FORMAT('THE SCANNED REGION OF THE LAST  DATA LINE READ ',
     1           '(TO A MAXIMUM OF 240 CHARACTERS) = ')
          CALL DPWRST('XXX','BUG ')
          IF(IENDTY.EQ.1)THEN
            WRITE(ICOUT,8014)(ISTOR1(J),J=IFRST,MIN(240,ILAST))
            CALL DPWRST('XXX','BUG ')
          ELSEIF(IENDTY.EQ.2)THEN
            WRITE(ICOUT,8014)(ISTOR2(J),J=IFRST,MIN(240,ILAST))
 8014       FORMAT(240A1)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8101)
 8101   FORMAT('VARIABLE     COLUMN    OBS/VARIABLE')
        CALL DPWRST('XXX','BUG ')
C
        DO8110IE=1,NUMV
          IH1=JVNAM1(IE)
          IH2=JVNAM2(IE)
          DO8120I=1,NUMNAM
            I2=I
            IF(IH1.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I))THEN
              WRITE(ICOUT,8126)IH1,IH2,IVALUE(I2),IN(I2)
 8126         FORMAT(A4,A4,1X,I8,5X,I8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
 8120     CONTINUE
 8110   CONTINUE
      ENDIF
C
C               ***************************************
C               **  STEP 88--                        **
C               **  FOR THE FILE CASE,               **
C               **  CLOSE THE FILE.                  **
C               ***************************************
C
 8800 CONTINUE
      ISTEPN='88'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IOFILE.EQ.'YES'.AND.ICURST.EQ.'OPEN')THEN
        IENDFI='OFF'
        IREWIN='ON'
        CALL DPCLFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1              IENDFI,IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
        IREACS='CLOSED'
      ENDIF
C
      IF(IFLGOU.EQ.1)THEN
        IENDFI='OFF'
        IREWIN='ON'
        CALL DPCLFI(IOUNI2,IFILE2,ISTAT2,IFORM2,IACCE2,IPROT2,ICURS2,
     1              IENDFI,IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
        IREACS='CLOSED'
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
 9090 CONTINUE
C
      IFILQU=IFILQ2
      IGRPAU=IGRPA2
      PSTAMV=PSTAM2
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'STRE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTRE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFROW1,IFCOL1,IFCOL2,AFROW2,ICASRE
 9012   FORMAT('IFROW1,IFCOL1,IFCOL2,AFROW2,ICASRE = ',
     1         3I8,2X,E15.7,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)IFOUND,IERROR
 9015   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)NUMVRD,NUMPRD,NUMFRD
 9016   FORMAT('NUMVRD,NUMPRD,NUMFRD = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9017)IMACRO,IMACNU,IMACCS
 9017   FORMAT('IMACRO,IMACNU,IMACCS = ',A4,I8,2X,A12)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9019)IOSW,IOFILE,IOTERM,IRD,IRD2,IOUNIT
 9019   FORMAT('IOSW,IOFILE,IOTERM,IRD,IRD2,IOUNIT = ',3(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9022)IFILE
 9022   FORMAT('IFILE  = ',A80)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9023)ISTAT,IFORM,IACCES,IPROT,ICURST
 9023   FORMAT('ISTAT,IFORM,IACCES,IPROT,ICURST  =',5(1X,A12))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9028)IENDFI,IREWIN,ISUBN0,IERRFI,NUMNAM
 9028   FORMAT('IENDFI,IREWIN,ISUBN0,IERRFI,NUMNAM = ',3(A4,1X),A12,I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9041)N2,MAXN2,N3,NCREAF
 9041   FORMAT('N2,MAXN2,N3,NCREAF = ',4I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTRI(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,ISEED,
     1ISUBRO,IBUGG2,IBUGG3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A STRIP PLOT (ALSO KNOWN AS A DOT PLOT)
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATROY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/10
C     ORIGINAL VERSION--OCTOBER   2008.
C     UPDATED         --OCTOBER   2009. ADD A "BATCH MULTIPLE" OPTION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IDATSW
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
      CHARACTER*40 INAME
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION X1(MAXOBV)
      DIMENSION TAG1(MAXOBV)
      DIMENSION TAG2(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XTEMP(MAXOBV)
      DIMENSION YTEMP(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
      DIMENSION TEMP5(MAXOBV)
      DIMENSION ITEMP1(MAXOBV)
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZI.INC'
      EQUIVALENCE (GARBAG(IGARB1),X1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y1(1))
      EQUIVALENCE (GARBAG(IGARB3),TAG1(1))
      EQUIVALENCE (GARBAG(IGARB4),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB5),XTEMP(1))
      EQUIVALENCE (GARBAG(IGARB6),YTEMP(1))
      EQUIVALENCE (GARBAG(IGARB7),TEMP3(1))
      EQUIVALENCE (GARBAG(IGARB8),TAG2(1))
      EQUIVALENCE (GARBAG(IGARB9),XIDTE2(1))
      EQUIVALENCE (GARBAG(IGAR10),TEMP4(1))
      EQUIVALENCE (GARBAG(JGAR11),TEMP5(1))
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPST'
      ISUBN2='RI  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      MINN2=2
C
C               **********************************************
C               **  TREAT THE STRIP    PLOT AND             **
C               **  RELATED STATISTICAL DISTRIBUTION PLOTS  **
C               **********************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'STRI')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTRI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'STRI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICOM.EQ.'STRI'.AND.IHARG(1).EQ.'PLOT')THEN
        ICASPL='STRI'
        ILASTC=1
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
      ELSEIF(ICOM.EQ.'BATC'.AND.IHARG(1).EQ.'STRI'.AND.
     1       IHARG(2).EQ.'PLOT')THEN
        ICASPL='BSPL'
        ILASTC=2
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
      ELSEIF(ICOM.EQ.'BATC'.AND.IHARG(1).EQ.'MULT'.AND.
     1       IHARG(2).EQ.'STRI'.AND.IHARG(3).EQ.'PLOT')THEN
        ICASPL='BMSP'
        ILASTC=3
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
      ELSEIF(ICOM.EQ.'MULT'.AND.IHARG(1).EQ.'BATCH'.AND.
     1       IHARG(2).EQ.'STRI'.AND.IHARG(3).EQ.'PLOT')THEN
        ICASPL='BMSP'
        ILASTC=3
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'STRI')THEN
        WRITE(ICOUT,62)ICASPL,MAXV2
   62   FORMAT('ICASPL,MAXV2 = ',A4,2X,I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'STRI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='STRIP PLOT'
      MINNA=1
      IF(ICASPL.EQ.'BSPL')MINNA=2
      IF(ICASPL.EQ.'BMSP')MINNA=3
      MAXNA=100
      MINN2=1
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      IF(ICASPL.EQ.'BSPL')MINNVA=2
      IF(ICASPL.EQ.'BMSP')MINNVA=3
      MAXNVA=2
      IF(ICASPL.EQ.'BSPL')MAXNVA=3
      IF(ICASPL.EQ.'BMSP')MAXNVA=3
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(NUMVAR.EQ.1)THEN
        IDATSW='RAW'
      ELSEIF(NUMVAR.EQ.2)THEN
        IF(ICASPL.EQ.'STRI')THEN
          IDATSW='FREQ'
        ELSE
          IDATSW='RAW'
        ENDIF
      ELSEIF(NUMVAR.EQ.3)THEN
        IF(ICASPL.EQ.'BSPL')IDATSW='FREQ'
        IF(ICASPL.EQ.'BMSP')IDATSW='RAW'
      ENDIF
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'STRI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      NLEFT=NRIGHT(1)
C
      IF(ICASPL.EQ.'STRI' .AND. IDATSW.EQ.'RAW')THEN
        J=0
        IMAX=NLEFT
        IF(NQ.LT.NLEFT)IMAX=NQ
        DO810I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO810
          J=J+1
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
          TAG1(J)=1.0
          TAG2(J)=1.0
  810   CONTINUE
        NLOCAL=J
c
      ELSEIF(ICASPL.EQ.'STRI' .AND. IDATSW.EQ.'FREQ')THEN
        J=0
        IMAX=NLEFT
        IF(NQ.LT.NLEFT)IMAX=NQ
        DO820I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO820
          J=J+1
          IJ=MAXN*(ICOLR(2)-1)+I
          IF(ICOLR(2).LE.MAXCOL)X1(J)=V(IJ)
          IF(ICOLR(2).EQ.MAXCP1)X1(J)=PRED(I)
          IF(ICOLR(2).EQ.MAXCP2)X1(J)=RES(I)
          IF(ICOLR(2).EQ.MAXCP3)X1(J)=YPLOT(I)
          IF(ICOLR(2).EQ.MAXCP4)X1(J)=XPLOT(I)
          IF(ICOLR(2).EQ.MAXCP5)X1(J)=X2PLOT(I)
          IF(ICOLR(2).EQ.MAXCP6)X1(J)=TAGPLO(I)
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
          TAG1(J)=1.0
          TAG2(J)=1.0
  820   CONTINUE
        NLOCAL=J
C
      ELSEIF(ICASPL.EQ.'BSPL' .AND. IDATSW.EQ.'RAW')THEN
        J=0
        IMAX=NLEFT
        IF(NQ.LT.NLEFT)IMAX=NQ
        DO830I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO830
          J=J+1
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
          IJ=MAXN*(ICOLR(2)-1)+I
          IF(ICOLR(2).LE.MAXCOL)TAG1(J)=V(IJ)
          IF(ICOLR(2).EQ.MAXCP1)TAG1(J)=PRED(I)
          IF(ICOLR(2).EQ.MAXCP2)TAG1(J)=RES(I)
          IF(ICOLR(2).EQ.MAXCP3)TAG1(J)=YPLOT(I)
          IF(ICOLR(2).EQ.MAXCP4)TAG1(J)=XPLOT(I)
          IF(ICOLR(2).EQ.MAXCP5)TAG1(J)=X2PLOT(I)
          IF(ICOLR(2).EQ.MAXCP6)TAG1(J)=TAGPLO(I)
          TAG2(J)=1.0
  830   CONTINUE
        NLOCAL=J
C
      ELSEIF(ICASPL.EQ.'BSPL' .AND. IDATSW.EQ.'FREQ')THEN
        J=0
        IMAX=NLEFT
        IF(NQ.LT.NLEFT)IMAX=NQ
        DO840I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO840
          J=J+1
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
          IJ=MAXN*(ICOLR(2)-1)+I
          IF(ICOLR(2).LE.MAXCOL)X1(J)=V(IJ)
          IF(ICOLR(2).EQ.MAXCP1)X1(J)=PRED(I)
          IF(ICOLR(2).EQ.MAXCP2)X1(J)=RES(I)
          IF(ICOLR(2).EQ.MAXCP3)X1(J)=YPLOT(I)
          IF(ICOLR(2).EQ.MAXCP4)X1(J)=XPLOT(I)
          IF(ICOLR(2).EQ.MAXCP5)X1(J)=X2PLOT(I)
          IF(ICOLR(2).EQ.MAXCP6)X1(J)=TAGPLO(I)
          IJ=MAXN*(ICOLR(3)-1)+I
          IF(ICOLR(3).LE.MAXCOL)TAG1(J)=V(IJ)
          IF(ICOLR(3).EQ.MAXCP1)TAG1(J)=PRED(I)
          IF(ICOLR(3).EQ.MAXCP2)TAG1(J)=RES(I)
          IF(ICOLR(3).EQ.MAXCP3)TAG1(J)=YPLOT(I)
          IF(ICOLR(3).EQ.MAXCP4)TAG1(J)=XPLOT(I)
          IF(ICOLR(3).EQ.MAXCP5)TAG1(J)=X2PLOT(I)
          IF(ICOLR(3).EQ.MAXCP6)TAG1(J)=TAGPLO(I)
          TAG2(J)=1.0
  840   CONTINUE
        NLOCAL=J
C
      ELSEIF(ICASPL.EQ.'BMSP')THEN
        J=0
        IMAX=NLEFT
        IF(NQ.LT.NLEFT)IMAX=NQ
        DO850I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO850
          J=J+1
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
          IJ=MAXN*(ICOLR(2)-1)+I
          IF(ICOLR(2).LE.MAXCOL)TAG1(J)=V(IJ)
          IF(ICOLR(2).EQ.MAXCP1)TAG1(J)=PRED(I)
          IF(ICOLR(2).EQ.MAXCP2)TAG1(J)=RES(I)
          IF(ICOLR(2).EQ.MAXCP3)TAG1(J)=YPLOT(I)
          IF(ICOLR(2).EQ.MAXCP4)TAG1(J)=XPLOT(I)
          IF(ICOLR(2).EQ.MAXCP5)TAG1(J)=X2PLOT(I)
          IF(ICOLR(2).EQ.MAXCP6)TAG1(J)=TAGPLO(I)
          IJ=MAXN*(ICOLR(3)-1)+I
          IF(ICOLR(3).LE.MAXCOL)TAG2(J)=V(IJ)
          IF(ICOLR(3).EQ.MAXCP1)TAG2(J)=PRED(I)
          IF(ICOLR(3).EQ.MAXCP2)TAG2(J)=RES(I)
          IF(ICOLR(3).EQ.MAXCP3)TAG2(J)=YPLOT(I)
          IF(ICOLR(3).EQ.MAXCP4)TAG2(J)=XPLOT(I)
          IF(ICOLR(3).EQ.MAXCP5)TAG2(J)=X2PLOT(I)
          IF(ICOLR(3).EQ.MAXCP6)TAG2(J)=TAGPLO(I)
  850   CONTINUE
        NLOCAL=J
C
      ENDIF
C
C               *****************************************************
C               **  STEP 9--                                       **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C               **  RESET THE VECTOR D(.) TO ALL ONES.             **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).  **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).  **
C               *****************************************************
C
      ISTEPN='9'
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'STRI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPSTR2(Y1,X1,TAG1,TAG2,XIDTEM,XIDTE2,
     1            NLOCAL,ICASPL,IDATSW,
     1            PSTRIN,ISTRPL,ISEED,
     1            YTEMP,XTEMP,TEMP3,TEMP4,TEMP5,ITEMP1,
     1            Y,X,D,NPLOTP,NPLOTV,ISUBRO,IBUGG3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'STRI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTRI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GE.1)THEN
          DO9015I=1,NPLOTP
            WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9015     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTR2(Y,X,TAG1,TAG2,XIDTEM,XIDTE2,
     1                  N,ICASPL,IDATSW,
     1                  PSTRIN,ISTRPL,ISEED,
     1                  YTEMP,XTEMP,TEMP3,TEMP4,YDIST,ZCOUNT,
     1                  Y2,X2,D2,N2,NPLOTV,ISUBRO,IBUGG3,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE A STRIP PLOT (ALSO KNOWN AS
C              A DOT PLOT).
C
C              THE DATA CAN EITHER A SINGLE RESPONSE VARIABLE
C              OR A FREQUENCY TABLE.  NOTE THAT THE BINNING
C              SHOULD BE DONE BEFORE CALLING THE STRIP PLOT
C              (I.E., THE SINGLE VARIABLE CASE WILL NOT BE
C              BINNED).
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/10
C     ORIGINAL VERSION--OCTOBER   2008.
C     UPDATED         --OCTOBER   2009. SUPPORT FOR "BATCH MULTIPLE"
C                                       OPTION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IDATSW
      CHARACTER*4 ISTRPL
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGG3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION TAG1(*)
      DIMENSION TAG2(*)
      DIMENSION XIDTEM(*)
      DIMENSION XIDTE2(*)
      DIMENSION YTEMP(*)
      DIMENSION XTEMP(*)
      DIMENSION TEMP3(*)
      DIMENSION TEMP4(*)
      DIMENSION YDIST(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
C
      INTEGER ZCOUNT(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='R2  '
      IERROR='NO'
      IWRITE='OFF'
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN STRIP PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 1.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE NUMBER OF OBSERVATIONS = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'STR2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPSTR2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)IDATSW,ICASPL,ISTRPL,N
   71   FORMAT('IDATSW,ICASPL,ISTRPL,N = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,Y(I),X(I),TAG1(I),TAG2(I)
   74     FORMAT('I,Y(I),X(I),TAG1(I),TAG2(I) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
      ENDIF
C
C               **********************************************
C               **  STEP 2--                                **
C               **  GENERATE THE STRIP PLOT                 **
C               **********************************************
C
      IF(ICASPL.EQ.'BMSP')THEN
        CALL DISTIN(TAG1,N,IWRITE,XIDTEM,NGROUP,IBUGG3,IERROR)
        CALL SORT(XIDTEM,NGROUP,XIDTEM)
        CALL DISTIN(TAG2,N,IWRITE,XIDTE2,NGROU2,IBUGG3,IERROR)
        CALL SORT(XIDTE2,NGROU2,XIDTE2)
      ELSEIF(ICASPL.EQ.'BSPL')THEN
        CALL DISTIN(TAG1,N,IWRITE,XIDTEM,NGROUP,IBUGG3,IERROR)
        CALL SORT(XIDTEM,NGROUP,XIDTEM)
        NGROU2=1
      ELSE
        NGROUP=1
        NGROU2=1
        XIDTEM(1)=1.0
        XIDTE2(1)=1.0
      ENDIF
C
C     2018/06: IMPLEMENT THE "MULTIPLE BATCH" OPTION FOR RAW DATA
C              SEPARATELY WHEN USING "STACK" OPTION
C
      IF(ICASPL.EQ.'BMSP' .AND. IDATSW.EQ.'RAW' .AND.
     1   ISTRPL.EQ.'STAC')GOTO4000
C
      K1=0
      DO1000ISET=1,NGROUP
        HOLD=XIDTEM(ISET)
        NTEMP=0
        DO1010J=1,N
          IF(TAG1(J).EQ.HOLD)THEN
            NTEMP=NTEMP+1
            YTEMP(NTEMP)=Y(J)
            XTEMP(NTEMP)=X(J)
            TEMP4(NTEMP)=1.0
            DO1015ISET2=1,NGROU2
              HOLD2=XIDTE2(ISET2)
              IF(TAG2(J).EQ.XIDTE2(ISET2))THEN
                TEMP4(NTEMP)=REAL(ISET2)
                GOTO1019
              ENDIF
 1015       CONTINUE
 1019       CONTINUE
          ENDIF
 1010   CONTINUE
C
        IF(IDATSW.EQ.'RAW')THEN
          IF(ICASPL.NE.'BMSP')CALL SORT(YTEMP,NTEMP,YTEMP)
          IF(ISTRPL.EQ.'JITT')THEN
            DELTA=0.5
            DO1030J=1,NTEMP
              TEMP3(J)=HOLD
 1030       CONTINUE
            CALL JITTER(TEMP3,NTEMP,DELTA,TEMP3,NTEMP,
     1                  ISEED,IBUGG3,IERROR)
            DO1050I=1,NTEMP
              K1=K1+1
              IF(ICASPL.EQ.'BMSP')THEN
                D2(K1)=TEMP4(I)
              ELSE
                D2(K1)=REAL(ISET)
              ENDIF
              X2(K1)=YTEMP(I)
              Y2(K1)=TEMP3(I)
 1050       CONTINUE
            N2=K1
            NPLOTV=2
          ELSEIF(ISTRPL.EQ.'OVER')THEN
            DO1090I=1,NTEMP
              K1=K1+1
              IF(ICASPL.EQ.'BMSP')THEN
                D2(K1)=TEMP4(I)
              ELSE
                D2(K1)=REAL(ISET)
              ENDIF
              X2(K1)=YTEMP(I)
              Y2(K1)=HOLD
 1090       CONTINUE
            N2=K1
            NPLOTV=2
          ELSE
            K1=K1+1
            K2=1
            X2(K1)=YTEMP(1)
            Y2(K1)=HOLD
            IF(ICASPL.EQ.'BMSP')THEN
              D2(K1)=TEMP4(1)
            ELSE
              D2(K1)=REAL(ISET)
            ENDIF
            DO2000I=2,NTEMP
              K1=K1+1
              IF(ICASPL.EQ.'BMSP')THEN
                D2(K1)=TEMP4(I)
              ELSE
                D2(K1)=REAL(ISET)
              ENDIF
              X2(K1)=YTEMP(I)
              IF(YTEMP(I).EQ.YTEMP(I-1))THEN
                K2=K2+1
              ELSE
                K2=1
              ENDIF
              ATEMP=HOLD + (K2-1)*PSTRIN
              Y2(K1)=ATEMP
 2000       CONTINUE
            N2=K1
            NPLOTV=2
          ENDIF
        ELSE
C
C         NOTE: FOR FREQUENCY DATA, ONLY SUPPORT "STACKED" STYLE,
C               NOT THE JITTER FORMAT.  ALSO, "MULTIPLE" OPTION
C               IS NOT SUPPORTED.
C
          K2=0
          DO3000I=1,NTEMP
            IF(YTEMP(I).LT.0.0)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3010)I,ISET,Y(I)
 3010         FORMAT('      ROW ',I8,' OF BATCH ',I8,' HAS A NEGATIVE ',
     1             'FREQUENCY (',G15.7,')')
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ENDIF
C
            IF(I.GE.2 .AND. (XTEMP(I).LE.XTEMP(I-1)))THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3020)I,ISET
 3020         FORMAT('      THE CLASS MID-POINT FOR ROW ',I8,' OF ',
     1               'BATCH ',I8,' IS ')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3022)I-1,ISET
 3022         FORMAT('      LESS THAN THE CLASS MID-POINT FOR ROW ',
     1               I8,' OF BATCH ',I8,'.')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3024)I,XTEMP(I)
 3024         FORMAT('      CLASS MID-POINT FOR ROW ',I8,' = ',G15.7)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3024)I-1,X(I-1)
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ENDIF
C
            IFREQ=INT(YTEMP(I)+0.1)
            IF(IFREQ.GE.1)THEN
              ATEMP=REAL(ISET)
              DO3030J=1,IFREQ
                K1=K1+1
                X2(K1)=XTEMP(I)
                D2(K1)=REAL(ISET)
                Y2(K1)=ATEMP
                ATEMP=ATEMP+PSTRIN
 3030         CONTINUE
            ENDIF
C
 3000     CONTINUE
          N2=K1
          NPLOTV=2
        ENDIF
C
 1000 CONTINUE
C
      GOTO9000
C
 4000 CONTINUE
C
C     MULTIPLE BATCH OPTION FOR RAW DATA
C
C     STEP 1: DETERMINE UNIQUE VALUES OF RESPONSE AND SORT
C
      CALL DISTIN(Y,N,IWRITE,YDIST,NYDIST,IBUGG3,IERROR)
      CALL SORT(YDIST,NYDIST,YDIST)
      N2=0
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'STR2')THEN
        WRITE(ICOUT,4001)NGROUP,NGROU2,NYDIST
 4001   FORMAT('BATCH MULTIPLE RAW DATA CASE: NGROUP,NGROU2,NYDIST = ',
     1         3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      DO4010ISET=1,NGROUP
C
C       STEP 1: EXTRACT ALL DATA FOR A GIVEN GROUP
C
        HOLD=XIDTEM(ISET)
        NTEMP=0
        DO4020J=1,N
          IF(TAG1(J).EQ.HOLD)THEN
            NTEMP=NTEMP+1
            YTEMP(NTEMP)=Y(J)
            XTEMP(NTEMP)=TAG2(J)
          ENDIF
 4020   CONTINUE
C
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'STR2')THEN
          WRITE(ICOUT,4021)ISET,NTEMP
 4021     FORMAT('AT 4020: ISET,NTEMP = ',2I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        CALL SORTC(XTEMP,YTEMP,NTEMP,XTEMP,TEMP4)
        DO4025J=1,NTEMP
          YTEMP(J)=TEMP4(J)
 4025   CONTINUE
        DO4028J=1,NYDIST
          ZCOUNT(J)=0
 4028   CONTINUE
C
C       STEP 2: LOOP THROUGH DATA IN THE GROUP AND MATCH IT TO
C               DISTINCT VALUES OF RESPONSE
C
        K2=0
        DO4030J=1,NTEMP
C
          ASTRT=REAL(ISET)
          ASTRT2=XTEMP(J)
C
          DO4040K=1,NYDIST
            IF(YTEMP(J).EQ.YDIST(K))THEN
              N2=N2+1
              X2(N2)=YTEMP(J)
              AVAL=REAL(ZCOUNT(K))
              ZCOUNT(K)=ZCOUNT(K)+1
              Y2(N2)=ASTRT+PSTRIN*AVAL
              D2(N2)=REAL((ISET-1)*NGROU2) + ASTRT2
            ENDIF
 4040     CONTINUE
 4030   CONTINUE
 4010 CONTINUE
      NPLOTV=2
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'STR2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTR2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,IDATSW,PSTRIN,IERROR,N2
 9012   FORMAT('ICASPL,IDATSW,PSTRIN,IERROR,N2 = ',
     1         A4,2X,A4,2X,G15.7,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,Y2(I),X2(I),D2(I)
 9016     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2E15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTRB(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--CREATE A BLANK STRING OF SPECIFIED LENGTH
C     EXAMPLE--LET SOUT = BLANK STRING NLEN
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2017/01
C     ORIGINAL VERSION--JANUARY   2017.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='MR  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STRB')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTRB--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN BLANK STRING--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST  NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(5)
      IHRIG2=IHARG2(5)
      DO3200I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'P')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3203)IHRIGH,IHRIG2
 3203       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3205)
 3205       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ILISR1=I4
            NLEN=IVALUE(ILISR1)
            GOTO3299
          ENDIF
        ENDIF
 3200 CONTINUE
C
      IF(NUMARG.GE.5)THEN
        IF(IARGT(5).EQ.'NUMB')THEN
          NLEN=IARG(5)
          GOTO3299
        ENDIF
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3203)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3215)
 3215 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3299 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CREATE THE STRING                              **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRB')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)iCASEL,NLEN
 4011   FORMAT('ICASEL,NLEN = ',A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NLEN.LT.1 .OR. NLEN.GT.MAXCHF)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4021)MAXCHF
 4021   FORMAT('      THE LENGHT VALUE IS LESS THAN 1 OR GREATER ',
     1         'THAN ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4023)NLEN
 4023   FORMAT('      THE LENGTH VALUE IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      ICNT=0
      DO4100I=1,NLEN
        IFUNC2(I)=' '
 4100 CONTINUE
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRB')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPINFU(IFUNC2,NLEN,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1            NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
     1            NEWNAM,MAXNAM,
     1            IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6606)IHLEFT,IHLEF2,NLEN
 6606   FORMAT('THE NAME ',A4,A4,' HAS BEEN CREATED AS A BLANK STRING ',
     1         'OF LENGTH ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STRB')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTRB--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTRP(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--INSERT A STRING INTO A PREVIOUSLY DEFINED STRING
C     EXAMPLE--LET SOUT = STRING REPLACE SOLD SNEW START
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/11
C     ORIGINAL VERSION--NOVEMBER  2008.
C     UPDATED         --MARCH     2015. CALL LIST TO DPINFU
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
      CHARACTER*4 IHRI31
      CHARACTER*4 IHRI32
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='MR  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STRP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTRP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING REPLACE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(5)
      IHRIG2=IHARG2(5)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B-                                       **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRI21=IHARG(6)
      IHRI22=IHARG2(6)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT2=IVSTAR(I4)
            ISTOP2=IVSTOP(I4)
            NLEN2=ISTOP2-ISTRT2+1
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               *****************************************************
C               **  STEP 3C-                                       **
C               **  EXTRACT THE THIRD  NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRI31=IHARG(7)
      IHRI32=IHARG2(7)
      DO3200I=1,NUMNAM
        I4=I
        IF(IHRI31.EQ.IHNAME(I).AND.IHRI32.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'P')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI31,IHRI32
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3215)
 3215       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ILISR1=I4
            NSTART=IVALUE(ILISR1)
            GOTO3299
          ENDIF
        ENDIF
 3200 CONTINUE
C
      IF(NUMARG.GE.7)THEN
        IF(IARGT(7).EQ.'NUMB')THEN
          NSTART=IARG(7)
          GOTO3299
        ENDIF
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI31,IHRI32
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3299 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CREATE THE SUBSTRING                           **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRP')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,NLEN1
 4011   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4012)ISTRT2,ISTOP2,NLEN2
 4012   FORMAT('ISTRT2,ISTOP2,NLEN2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NSTART.LT.1 .OR. NSTART.GT.MAXCHF)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4021)MAXCHF
 4021   FORMAT('      THE START INDEX IS LESS THAN 1 OR GREATER ',
     1         'THAN ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4023)NSTART
 4023   FORMAT('      THE VALUE OF THE START INDEX IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      ICNT=0
      IF(NSTART.GT.1)THEN
        DO4100I=1,NLEN1-1
          ICNT=ICNT+1
          IINDX=I+ISTRT1-1
          IFUNC2(ICNT)=IFUNC(IINDX)
 4100   CONTINUE
        ICNT=NSTART-1
      ENDIF
      IF(NLEN2.GE.1)THEN
        DO4110I=1,NLEN2
          ICNT=ICNT+1
          IINDX=I+ISTRT2-1
          IFUNC2(ICNT)=IFUNC(IINDX)
 4110   CONTINUE
      ENDIF
      ICNT=MAX(ICNT,NLEN1)
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STRP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTRP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTRS(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--CREATE A STRING THAT REPEATS THE INPUT STRING A
C              USER SPECIFIED NUMBER OF TIMES
C     EXAMPLE--LET SOUT = STRING REPEAT SIN COUNT
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2021/08
C     ORIGINAL VERSION--AUGUST    2021.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*255  ISTR1
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='RS  '
      IERROR='NO'
      ISTR1=' '
C
      ILOC3=0
      ISTART=0
      ISTOP=0
      ICOUNT=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STRS')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTRS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF,NUMARG
   57   FORMAT('NUMCHF,MAXCHF,NUMARG = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GE.1)THEN
          DO70I=1,NUMARG
            WRITE(ICOUT,76)I,IHARG(I),IHARG2(I),IARGT(I),IARG(I)
   76       FORMAT('I,IHARG(I),IHARG2(I),IARGT(I),IARG(I) = ',
     1             I8,2X,A4,A4,2X,A4,2X,I8)
            CALL DPWRST('XXX','BUG ')
   70     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING REPEAT--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(5)
      IHRIG2=IHARG2(5)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               ******************************************************
C               **  STEP 3B-                                        **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE. **
C               **  THIS SHOULD BE A NUMERIC VALUE.                 **
C               ******************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRI21=IHARG(6)
      IHRI22=IHARG2(6)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'P')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3115)
 3115       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ILISR1=I4
            ICOUNT=IVALUE(ILISR1)
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      IF(NUMARG.GE.6)THEN
        IF(IARGT(6).EQ.'NUMB')THEN
          ICOUNT=IARG(6)
          GOTO3199
        ENDIF
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
      IF(ICOUNT.LT.1 .OR. ICOUNT.GT.255)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4021)
 4021   FORMAT('      THE REPEAT FACTOR IS LESS THAN 1 OR GREATER ',
     1         'THAN 255.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4023)ICOUNT
 4023   FORMAT('      THE VALUE OF THE REPEAT FACTOR IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CREATE THE NEW STRING                          **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRS')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4012)ICOUNT,ISTRT1,ISTOP1,NLEN1
 4012   FORMAT('ICOUNT,ISTRT1,ISTOP1,NLEN1 = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NLEN1.GT.255)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4101)
 4101   FORMAT('      THE LENGTH OF THE STRING TO BE REPEATED ',
     1         'IS GREAER THAN 255 CHARACTERS.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4103)NLEN1
 4103   FORMAT('      THE LENGTH OF THE STRING IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      ICNT=0
      DO4100I=ISTRT1,ISTOP1
        ICNT=ICNT+1
        ISTR1(ICNT:ICNT)=IFUNC(I)(1:1)
 4100 CONTINUE
C
      NCHAR=ICNT*ICOUNT
      IF(NCHAR.GT.MAXF1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4111)MAXF1
 4111   FORMAT('      THE COMBINED STRING IS GREATER THAN ',I8,
     1         'CHARACTERS.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      ICNT2=0
      DO4150I=1,ICOUNT
        DO4155J=1,ICNT
          ICNT2=ICNT2+1
          IFUNC2(ICNT2)=ISTR1(J:J)
 4155   CONTINUE
 4150 CONTINUE
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STRS')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPINFU(IFUNC2,ICNT2,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1            NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
     1            NEWNAM,MAXNAM,
     1            IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606   FORMAT('THE NAME ',2A4,' HAS JUST BEEN EQUIVALENCED ')
        CALL DPWRST('XXX','BUG ')
        ILAB(1)='TO T'
        ILAB(2)='HE F'
        ILAB(3)='UNCT'
        ILAB(4)='ION '
        ILAB(5)='    '
        ILAB(6)=' -- '
        NUMWDL=6
        CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STRS')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTRS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM,ICOUNT,ICNT,ICNT2
 9013   FORMAT('NUMNAM,ICOUNT,ICNT,ICNT2 = ',4I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTSB(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--EXTRACT A SUBSET OF A STRING.
C     EXAMPLE--LET SOUT = STRING SUBSET SIN START STOP
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/11
C     ORIGINAL VERSION--NOVEMBER  2008.
C     UPDATED         --MARCH     2015. CALL LIST TO DPINFU
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
      CHARACTER*4 IHRI31
      CHARACTER*4 IHRI32
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='SB  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STSB')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTSB--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF,NUMARG
   57   FORMAT('NUMCHF,MAXCHF,NUMARG = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GE.1)THEN
          DO70I=1,NUMARG
            WRITE(ICOUT,76)I,IHARG(I),IHARG2(I),IARGT(I),IARG(I)
   76       FORMAT('I,IHARG(I),IHARG2(I),IARGT(I),IARG(I) = ',
     1             I8,2X,A4,A4,2X,A4,2X,I8)
            CALL DPWRST('XXX','BUG ')
   70     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING SUBSET--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(4)
      IHRIG2=IHARG2(4)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B-                                       **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRI21=IHARG(5)
      IHRI22=IHARG2(5)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'P')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3115)
 3115       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ILISR1=I4
            NSTART=IVALUE(ILISR1)
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      IF(NUMARG.GE.5)THEN
        IF(IARGT(5).EQ.'NUMB')THEN
          NSTART=IARG(5)
          GOTO3199
        ENDIF
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               *****************************************************
C               **  STEP 3C-                                       **
C               **  EXTRACT THE THIRD  NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRI31=IHARG(6)
      IHRI32=IHARG2(6)
      DO3200I=1,NUMNAM
        I4=I
        IF(IHRI31.EQ.IHNAME(I).AND.IHRI32.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'P')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI31,IHRI32
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3115)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ILISR2=I4
            NSTOP=IVALUE(ILISR2)
            GOTO3299
          ENDIF
        ENDIF
 3200 CONTINUE
C
      IF(NUMARG.GE.6)THEN
        IF(IARGT(6).EQ.'NUMB')THEN
          NSTOP=IARG(6)
          GOTO3299
        ENDIF
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI31,IHRI32
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3299 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CREATE THE SUBSTRING                           **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSB')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ILISR1,ILISR2,NSTART,NSTOP
 4011   FORMAT('ILISR1,ILISR2,NSTART,NSTOP = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4012)ISTRT1,ISTOP1,NLEN1
 4012   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NSTART.LT.1 .OR. NSTART.GT.MAXCHF)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4021)MAXCHF
 4021   FORMAT('      THE START INDEX IS LESS THAN 1 OR GREATER ',
     1         'THAN ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4023)NSTART
 4023   FORMAT('      THE VALUE OF THE START INDEX IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NSTOP.LT.NSTART .OR. NSTOP.GT.MAXCHF)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4031)MAXCHF
 4031   FORMAT('      THE STOP INDEX IS LESS THAN THE START INDEX ',
     1        'OR GREATER THAN ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4033)NSTART
 4033   FORMAT('      THE VALUE OF THE START INDEX IS ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4035)NSTOP
 4035   FORMAT('      THE VALUE OF THE STOP INDEX IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      ICNT=0
      DO4100I=NSTART,NSTOP
        ICNT=ICNT+1
        IINDX=I+ISTRT1-1
        IFUNC2(ICNT)=IFUNC(IINDX)
 4100 CONTINUE
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSB')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STSB')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTSB--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTSC(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--SWAP THE CASE FOR THE CHARACTERS IN A STRING.
C     EXAMPLE--LET SOUT = SWAP CASE SOLD
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2019/02
C     ORIGINAL VERSION--FEBRUARY  2019.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*1 IC
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='SC  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STSC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTSC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN SWAP CASE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(5)
      IHRIG2=IHARG2(5)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  PERFORM THE CASE CONVERSION                    **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSC')THEN
        ISTEPN='4A'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,NLEN1
 4011   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4014)ICASEL
 4014   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NLEN1.GE.1)THEN
        ICNT=0
        DO4100I=ISTRT1,ISTOP1
          ICNT=ICNT+1
          IC=IFUNC(I)(1:1)
          CALL DPCOAN(IC,IJUNK)
          IF(IJUNK.GE.65 .AND. IJUNK.LE.90)THEN
            IJUNK=IJUNK+32
          ELSEIF(IJUNK.GE.97 .AND. IJUNK.LE.122)THEN
            IJUNK=IJUNK-32
          ENDIF
          CALL DPCONA(IJUNK,IC)
          IFUNC2(ICNT)=' '
          IFUNC2(ICNT)(1:1)=IC
 4100   CONTINUE
      ENDIF
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSC')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STSC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTSC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTSP(ICASE,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--REMOVE SPACES (ALL SPACES OR LEADING SPACES OR
C              TRAILING SPACES)
C
C              1) ALTERNATIVELY, REMOVE ALL PUNCTUATION
C              2) ALTERNATIVELY, CONVERT NON-PRINTING CHARACTERS
C                 TO SINGLE SPACE WITH OPTION TO EXPAND TABS TO
C                 A USER-SPECIFIED NUMBER OF SPACES
C
C     EXAMPLE--LET STOUT = STRING REMOVE SPACES  STIN
C              LET STOUT = STRING REMOVE LEADING SPACES STIN
C              LET STOUT = STRING REMOVE TRAILING SPACES STIN
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2015/03
C     ORIGINAL VERSION--MARCH     2015.
C     UPDATED         --SEPTEMBER 2018. ADD "REMOVE PUNCTUATION" CASE
C     UPDATED         --FEBRUARY  2019. ADD "EXPAND WHITESPACE" CASE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='SP  '
      IERROR='NO'
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STSP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTSP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASE,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,ICASE,NUMNAM = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF,NUMARG
   57   FORMAT('NUMCHF,MAXCHF,NUMARG = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GE.1)THEN
          DO70I=1,NUMARG
            WRITE(ICOUT,76)I,IHARG(I),IHARG2(I),IARGT(I),IARG(I)
   76       FORMAT('I,IHARG(I),IHARG2(I),IARGT(I),IARG(I) = ',
     1             I8,2X,A4,A4,2X,A4,2X,I8)
            CALL DPWRST('XXX','BUG ')
   70     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING REMOVE SPACES--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASE.EQ.'LEAD' .OR. ICASE.EQ.'TRAI')THEN
        IHRIGH=IHARG(7)
        IHRIG2=IHARG2(7)
      ELSE
        IHRIGH=IHARG(6)
        IHRIG2=IHARG2(6)
      ENDIF
C
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               ***********************************************
C               **  STEP 4A--REMOVE LEADING SPACES           **
C               ***********************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSP')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4012)IIDX,ISTRT1,ISTOP1,NLEN1
 4012   FORMAT('IINDX,ISTRT1,ISTOP1,NLEN1 = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASE.EQ.'LEAD')THEN
        NLEN2=0
        IFLAG=0
        DO4110I=ISTRT1,ISTOP1
          IF(IFUNC(I).EQ.' ' .AND. IFLAG.EQ.0)GOTO4110
            IFLAG=1
            NLEN2=NLEN2+1
            IFUNC2(NLEN2)=IFUNC(I)
 4110   CONTINUE
      ELSEIF(ICASE.EQ.'TRAI')THEN
        NLEN2=0
        IFLAG=0
        DO4210I=ISTOP1,ISTRT1,-1
          IF(IFUNC(I).NE.' ')THEN
            ILAST=I
            GOTO4219
          ENDIF
 4210   CONTINUE
        ILAST=ISTOP1
 4219   CONTINUE
        DO4220I=ISTRT1,ILAST
          IF(IFUNC(I).EQ.' ' .AND. IFLAG.EQ.0)GOTO4220
            IFLAG=1
            NLEN2=NLEN2+1
            IFUNC2(NLEN2)=IFUNC(I)
 4220   CONTINUE
      ELSEIF(ICASE.EQ.'RPUN')THEN
        NLEN2=0
        DO4230I=ISTRT1,ISTOP1
          IF(IFUNC(I).EQ.'!')GOTO4230
          IF(IFUNC(I).EQ.'"')GOTO4230
          IF(IFUNC(I).EQ."'")GOTO4230
          IF(IFUNC(I).EQ.'#')GOTO4230
          IF(IFUNC(I).EQ.'$')GOTO4230
          IF(IFUNC(I).EQ.'%')GOTO4230
          IF(IFUNC(I).EQ.'&')GOTO4230
          IF(IFUNC(I).EQ.'\')GOTO4230
          IF(IFUNC(I).EQ.'(')GOTO4230
          IF(IFUNC(I).EQ.')')GOTO4230
          IF(IFUNC(I).EQ.'*')GOTO4230
          IF(IFUNC(I).EQ.'+')GOTO4230
          IF(IFUNC(I).EQ.',')GOTO4230
          IF(IFUNC(I).EQ.'-')GOTO4230
          IF(IFUNC(I).EQ.'.')GOTO4230
          IF(IFUNC(I).EQ.'/')GOTO4230
          IF(IFUNC(I).EQ.':')GOTO4230
          IF(IFUNC(I).EQ.';')GOTO4230
          IF(IFUNC(I).EQ.'<')GOTO4230
          IF(IFUNC(I).EQ.'=')GOTO4230
          IF(IFUNC(I).EQ.'>')GOTO4230
          IF(IFUNC(I).EQ.'?')GOTO4230
          IF(IFUNC(I).EQ.'@')GOTO4230
          IF(IFUNC(I).EQ.'[')GOTO4230
          IF(IFUNC(I).EQ.']')GOTO4230
          IF(IFUNC(I).EQ.'^')GOTO4230
          IF(IFUNC(I).EQ.'_')GOTO4230
          IF(IFUNC(I).EQ.'`')GOTO4230
          IF(IFUNC(I).EQ.'~')GOTO4230
          IF(IFUNC(I).EQ.'{')GOTO4230
          IF(IFUNC(I).EQ.'}')GOTO4230
          IF(IFUNC(I).EQ.'|')GOTO4230
          IF(IFUNC(I).EQ.'|')GOTO4230
            NLEN2=NLEN2+1
            IFUNC2(NLEN2)=IFUNC(I)
 4230   CONTINUE
      ELSEIF(ICASE.EQ.'RWHI')THEN
C
C       NOTE THAT FOR WHITE SPACE, WE ARE RESTRICTING
C       TO THE ONES IN THE ASCII 0-127 RANGE.
C
        NLEN2=0
        DO4240I=ISTRT1,ISTOP1
          IF(IFUNC(I).EQ.' ')GOTO4240
          CALL DPCOAN(IFUNC(I)(1:1),IVAL)
          IF(IVAL.GE.0 .AND. IVAL.LE.32)GOTO4240
          IF(IVAL.EQ.127)GOTO4240
            NLEN2=NLEN2+1
            IFUNC2(NLEN2)=IFUNC(I)
 4240   CONTINUE
      ELSEIF(ICASE.EQ.'EWHI')THEN
C
C       CONVERT NON-PRINTING CHARACTERS TO A SINGLE SPACE,
C       ALLOW USER TO SPECIFY HOW MANY CHARACTERS A TAB WILL
C       BE CONVERTED TO.
C
C       NON-PRINTING CHARACTERS ARE:
C
C           0 - 31 (TAB IS 9)
C
        NLEN2=0
        DO4440I=ISTRT1,ISTOP1
          CALL DPCOAN(IFUNC(I)(1:1),IVAL)
          IF(IVAL.EQ.9)THEN
            IF(ITABNC.GT.0)THEN
              DO4441J=1,ITABNC
                NLEN2=NLEN2+1
                IFUNC2(NLEN2)=' '
 4441         CONTINUE
            ENDIF
          ELSEIF(IVAL.GE.0 .AND. IVAL.LE.31)THEN
            NLEN2=NLEN2+1
            IFUNC2(NLEN2)=' '
          ELSEIF(IVAL.EQ.127)THEN
            NLEN2=NLEN2+1
            IFUNC2(NLEN2)=' '
          ELSE
            NLEN2=NLEN2+1
            IFUNC2(NLEN2)=IFUNC(I)
          ENDIF
 4440   CONTINUE
      ELSE
        NLEN2=0
        DO4310I=ISTRT1,ISTOP1
          IF(IFUNC(I).EQ.' ')GOTO4310
            NLEN2=NLEN2+1
            IFUNC2(NLEN2)=IFUNC(I)
 4310   CONTINUE
      ENDIF
C
      IF(NLEN2.EQ.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4401)
 4401   FORMAT('      THE RESULTING STRING IS OF ZERO LENGTH.  ',
     1         'NOTHING DONE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,NLEN2,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,NLEN2,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STSP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTSP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTSW(ICASEZ,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT THE FOLLOWING TWO COMMANDS:
C
C                 LET IFLAG = STRING STARTS WITH SORG SMATCH
C                 LET IFLAG = STRING ENDS   WITH SORG SMATCH
C
C              THAT IS, WE CHECK WHETHER A STRING (SORG) STARTS WITH A
C              SPECIFIC SUBSTRING (SMATCH) OR NOT.  IF SO, IFLAG IS SET
C              TO 1, OTHERWISE IT IS SET TO 0.  SIMILARLY, WE CAN CHECK
C              FOR THE END OF THE STRING.
C     NOTE--THE FOLLOWING SYNTAX IS NOT SUPPORTED FOR THIS COMMAND:
C              LET Y(2) = STRING STARTS WITH  S  SUBSTRING
C           ALSO, THE STRINGS ON THE RIGHT HAND SIDE MUST BOTH BE
C           PREVIOUSLY DEFINED.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018/09
C     ORIGINAL VERSION--SEPTEMBER 2018.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASEZ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='SW  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STSW')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTSW--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      NIOLD1=0
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE FIRST ARGUMENT ON THE                *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A PARAMETER (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'P')THEN
            ICASEL='PARA'
            ILISTL=I2
            NUMTMP=NUMNAM
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING STARTS (ENDS) WITH--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='PARA'
C
      ILISTL=NUMNAM+1
      NUMTMP=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IINDX=6
      IHRIGH=IHARG(IINDX)
      IHRIG2=IHARG2(IINDX)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 3B-                                       **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE **
C               *****************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IINDX=IINDX+1
      IHRI21=IHARG(IINDX)
      IHRI22=IHARG2(IINDX)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT2=IVSTAR(I4)
            ISTOP2=IVSTOP(I4)
            NLEN2=ISTOP2-ISTRT2+1
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  CHECK FOR MATCHING STRINGS                     **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSW')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,NLEN1
 4011   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4012)ISTRT2,ISTOP2,NLEN2
 4012   FORMAT('ISTART,ISTOP,NLEN2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL,ICASEZ
 4013   FORMAT('ICASEL,ICASEZ = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASEZ.EQ.'STSW')THEN
        IMATCH=0
        IF(NLEN2.GT.NLEN1)GOTO4199
        NTEMP=ISTOP1-NLEN2+1
        IF(ISTRT1.GT.NTEMP)GOTO4199
        ICNT=0
        DO4100I=ISTRT1,ISTRT1+NLEN2-1
          IF(IFUNC(I)(1:1).NE.IFUNC(ISTRT2+ICNT)(1:1))GOTO4199
            ICNT=ICNT+1
 4100   CONTINUE
        IMATCH=1
 4199   CONTINUE
C
      ELSEIF(ICASEZ.EQ.'STEW')THEN
        IMATCH=0
        IF(NLEN2.GT.NLEN1)GOTO4299
        NTEMP=ISTOP1-NLEN2+1
        IF(ISTRT1.GT.NTEMP)GOTO4299
        ICNT=0
        DO4200I=NTEMP,ISTOP1
          IF(IFUNC(I)(1:1).NE.IFUNC(ISTRT2+ICNT)(1:1))GOTO4299
            ICNT=ICNT+1
 4200   CONTINUE
        IMATCH=1
 4299   CONTINUE
      ENDIF
C
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE PARAMETER                                 **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'PARA')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STSW')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISTL)=IHLEFT
        IHNAM2(ILISTL)=IHLEF2
        IUSE(ILISTL)='P'
        VALUE(ILISTL)=REAL(IMATCH)
        IVALUE(ILISTL)=IMATCH
        IN(ILISTL)=1
        IF(NEWNAM.EQ.'YES')NUMNAM=NUMNAM+1
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(IMATCH.EQ.0)THEN
            WRITE(ICOUT,5011)IHLEFT,IHLEF2,IMATCH
5011        FORMAT('MATCH NOT FOUND, ',A4,A4,'  = ',I3)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,5013)IHLEFT,IHLEF2,IMATCH
5013        FORMAT('MATCH FOUND, ',A4,A4,'  = ',I3)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STSW')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTSW--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTUC(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--CONVERT A STRING TO UPPER CASE
C     EXAMPLE--LET SOUT = UPPER CASE SOLD
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/11
C     ORIGINAL VERSION--NOVEMBER  2008.
C     UPDATED         --MARCH     2015. CALL LIST TO DPINFU
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWCOL
      CHARACTER*4 ICASEL
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*1 IC
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='UC  '
      IERROR='NO'
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STUC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTUC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STUC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWCOL='NO'
      ICASEL='UNKN'
      ICOLL=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STUC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN UPPER CASE--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STUC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(5)
      IHRIG2=IHARG2(5)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  PERFORM THE CASE CONVERSION                    **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STUC')THEN
        ISTEPN='4A'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)ISTRT1,ISTOP1,NLEN1
 4011   FORMAT('ISTRT1,ISTOP1,NLEN1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4014)ICASEL
 4014   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NLEN1.GE.1)THEN
        ICNT=0
        DO4100I=ISTRT1,ISTOP1
          ICNT=ICNT+1
          IC=IFUNC(I)(1:1)
          CALL DPCOAN(IC,IJUNK)
          IF(IJUNK.GE.97 .AND. IJUNK.LE.122)THEN
            IJUNK=IJUNK-32
          ENDIF
          CALL DPCONA(IJUNK,IC)
          IFUNC2(ICNT)=' '
          IFUNC2(ICNT)(1:1)=IC
 4100   CONTINUE
      ENDIF
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STUC')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STUC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTUC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTVA(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--CREATE A STRING VARIABLE.  THE STRING VARIABLE WILL BE
C              SAVED AS "CHARACTER VARIABLE" IN DPZCHF.DAT.
C     EXAMPLE--LET SOUT = STRING VARIABLE S1 TO S50
C              LET SOUT = STRING VARIABLE "abcd"  "efgh" "ijkl"
C
C              DO NOT CHECK IF SOUT IS A CURRENTLY DEFINED STRING
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2019/09
C     ORIGINAL VERSION--SEPTEMBER 2019.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      INCLUDE 'DPCOPA.INC'
C
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*9999 ISTR
      CHARACTER*20 IFRMT
      CHARACTER*20 IFRMT2
      CHARACTER*4 IOP
      CHARACTER*4 IOPEN
      CHARACTER*8 IACC
      CHARACTER*4 IEXIST
      CHARACTER*4 MESSAG
      CHARACTER*4 IWRITE
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBN0
      CHARACTER*4 IERRFI
      CHARACTER*25 ISTR2
CCCCC CHARACTER*255 ISTRIN
CCCCC CHARACTER*255 ISTRI2
      CHARACTER (LEN=MAXSTR) :: ISTRIN
      CHARACTER (LEN=MAXSTR) :: ISTRI2
      PARAMETER(MAXIND=100)
      CHARACTER*4 ISTRN1(MAXIND)
      CHARACTER*4 ISTRN2(MAXIND)
      CHARACTER*4 IHTEMP(255)
      CHARACTER*4 IFILQ2
C
CCCCC CHARACTER*80 IFILE1
      CHARACTER (LEN=MAXFNC) :: IFILE1
      CHARACTER*12 ISTAT1
      CHARACTER*12 IFORM1
      CHARACTER*12 IACCE1
      CHARACTER*12 IPROT1
      CHARACTER*12 ICURS1
      CHARACTER*4 IERRF1
      CHARACTER*4 IENDF1
      CHARACTER*4 IREWI1
C
CCCCC CHARACTER*80 IFILE2
      CHARACTER (LEN=MAXFNC) :: IFILE2
      CHARACTER*12 ISTAT2
      CHARACTER*12 IFORM2
      CHARACTER*12 IACCE2
      CHARACTER*12 IPROT2
      CHARACTER*12 ICURS2
      CHARACTER*4 IERRF2
      CHARACTER*4 IENDF2
      CHARACTER*4 IREWI2
C
CCCCC CHARACTER*80 IFILE3
      CHARACTER (LEN=MAXFNC) :: IFILE3
      CHARACTER*12 ISTAT3
      CHARACTER*12 IFORM3
      CHARACTER*12 IACCE3
      CHARACTER*12 IPROT3
      CHARACTER*12 ICURS3
      CHARACTER*4 IERRF3
      CHARACTER*4 IENDF3
      CHARACTER*4 IREWI3
C
CCCCC CHARACTER*80 IFILE4
      CHARACTER (LEN=MAXFNC) :: IFILE4
      CHARACTER*12 ISTAT4
      CHARACTER*12 IFORM4
      CHARACTER*12 IACCE4
      CHARACTER*12 IPROT4
      CHARACTER*12 ICURS4
      CHARACTER*4 IERRF4
      CHARACTER*4 IENDF4
      CHARACTER*4 IREWI4
C
CCCCC CHARACTER*80 IFILE5
      CHARACTER (LEN=MAXFNC) :: IFILE5
      CHARACTER*12 ISTAT5
      CHARACTER*12 IFORM5
      CHARACTER*12 IACCE5
      CHARACTER*12 IPROT5
      CHARACTER*12 ICURS5
      CHARACTER*4 IERRF5
      CHARACTER*4 IENDF5
      CHARACTER*4 IREWI5
C
      COMMON/FILTMP/IFILE1, ISTAT1, IFORM1, IACCE1, IPROT1, ICURS1,
     1              IERRF1, IENDF1, IREWI1,
     1              IFILE2, ISTAT2, IFORM2, IACCE2, IPROT2, ICURS2,
     1              IERRF2, IENDF2, IREWI2,
     1              IFILE3, ISTAT3, IFORM3, IACCE3, IPROT3, ICURS3,
     1              IERRF3, IENDF3, IREWI3,
     1              IFILE4, ISTAT4, IFORM4, IACCE4, IPROT4, ICURS4,
     1              IERRF4, IENDF4, IREWI4,
     1              IFILE5, ISTAT5, IFORM5, IACCE5, IPROT5, ICURS5,
     1              IERRF5, IENDF5, IREWI5
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='VA  '
      IERROR='NO'
      IFILQ2=IFILQU
C
      ILOC3=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVA')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTVA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMARG
   52   FORMAT('IBUGA3,ISUBRO,NUMARG = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GE.1)THEN
          DO70I=1,NUMARG
            WRITE(ICOUT,76)I,IHARG(I),IHARG2(I),IARGT(I),IARG(I)
   76       FORMAT('I,IHARG(I),IHARG2(I),IARGT(I),IARG(I) = ',
     1             I8,2X,2A4,2X,A4,2X,I8)
            CALL DPWRST('XXX','BUG ')
   70     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STVA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISTR=' '
      ISTR2=' '
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE LEFT-HAND SIDE       *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STVA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
C     AS THIS VARIABLE WILL BE SAVED IN THE DPZCHF.DAT FILE AND NOT THE
C     INTERNAL NAME TABLE, CHECK THE DPZCHF.DAT FILE FOR AN EXISTING NAME.
C
      IOUNI4=IZCHNU
      IFILE4=IZCHNA
      ISTAT4=IZCHST
      IFORM4=IZCHFO
      IACCE4=IZCHAC
      IPROT4=IZCHPR
      ICURS4=IZCHCS
C
C     IF "SET STRING VARIABLE OVERWRITE" ENTERED, THEN ALSO
C     SET DPZCHF.DAT AS "NOT EXIST".
C
      IF(ISTRVA.EQ.'OVER')THEN
        IEXIST='NO'
      ELSE
        IERRFI='NO'
        ISUBN0='STVA'
        IERRFI='NO'
        CALL DPINFI(IFILE4,IEXIST,IOPEN,IACC,ISUBN0,IBUGA3,
     1              ISUBRO,IERROR)
       ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVA')THEN
        WRITE(ICOUT,111)IEXIST
  111   FORMAT('IEXIST = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      CALL DPOPFI(IOUNI4,IFILE4,ISTAT4,IFORM4,IACCE4,IPROT4,ICURS4,
     1            IREWI4,ISUBN0,IERRFI,IBUGA3,ISUBRO,IERROR)
C
      IOP='OPEN'
      IFLG11=0
      IFLG21=1
      IFLG31=0
      IFLAG4=0
      IFLAG5=0
      CALL DPAUFI(IOP,IFLG11,IFLG21,IFLG31,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
      MXROW=0
      IVAR=0
      IFLAG1=0
      IF(IEXIST.EQ.'YES')THEN
        READ(IOUNI4,*,ERR=210,END=210)IVAR
        IFLAG1=1
      ENDIF
      GOTO300
C
  210 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,211)
  211 FORMAT('*****ERROR IN LET ... = CHARACTER VARIABLE (DPSTVA)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,213)IFILE4
  213 FORMAT('     ERROR OR END OF FILE READING FIRST LINE OF ',A80)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
C               *************************************************
C               **  STEP 3--                                   **
C               **  PROCESS RIGHT HAND SIDE.                   **
C               *************************************************
C
  300 CONTINUE
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      JMIN=5
      JMAX=NUMARG
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVA')THEN
        WRITE(ICOUT,4001)JMIN,JMAX,MAXIND
 4001   FORMAT('JMIN,JMAX,MAXIND = ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(JMAX.LT.JMIN)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,301)
  301   FORMAT('     NO STRINGS ON THE RIGHT HAND SIDE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
      IWRITE='OFF'
      IERROR='NO'
C
      CALL EXTSTR(IHARG,IHARG2,NUMARG,JMIN,JMAX,MAXIND,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,
     1            ISTRN1,ISTRN2,NUMSTR,
     1            IWRITE,IBUGA3,ISUBRO,IERROR)
C
      IF(IERROR.EQ.'NO')THEN
        ICASE='STRI'
      ELSE
        ICASE='LITE'
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVA')THEN
        WRITE(ICOUT,303)IERROR,ICASE,NUMSTR
  303   FORMAT('AFTER CALL EXTSTR: IERROR,ICASE,NUMSTR = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     STEP 1: DETERMINE NUMBER OF STRINGS FOR LITERAL CASE
C
      IF(ICASE.EQ.'LITE')THEN
        ICNT=0
        NUMSTR=0
        IFRST=5
        IFILQU='ON'
        ISTRIN=' '
        DO318I=1,IWIDTH
          ISTRIN(I:I)=IANSLC(I)(1:1)
  318   CONTINUE
C
  320   CONTINUE
        IFRST=IFRST+1
        ICNT=ICNT+1
        ISTART=1
        ISTOP=IWIDTH
        IERROR='NO'
        CALL DPEXWO(ISTRIN,ISTART,ISTOP,IFRST,
     1              ICOL1,ICOL2,ISTRI2,NCSTR2,
     1              IBUGA3,ISUBRO,IERROR)
        IF(NCSTR2.GT.0)THEN
          NUMSTR=NUMSTR+1
          IF(ICOL2.LT.IWIDTH)GOTO320
        ENDIF
      ENDIF
C
C     STEP 2: UPDATE HEADER FOR DPZCHF.DAT FILE AND WRITE TO dpst2f.dat
C
      IVARSV=IVAR
      IVAR=IVAR+1
      NTEMP1=25*IVARSV
      NTEMP2=25*IVAR
      IF(NTEMP2.GT.9999)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,331)
  331   FORMAT('      MAXIMUM NUMBER OF CHARACTER VARIABLES EXCEEDED.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IEXIST.EQ.'YES')THEN
        REWIND(IOUNI4)
        READ(IOUNI4,*,ERR=897,END=897)IJUNK
        WRITE(IOUNI2,'(I8)')IVAR
        DO330KK=1,IVARSV
          READ(IOUNI4,'(2A4,I10)',ERR=897,END=897)IHRIGH,IHRIG2,NTEMP
          WRITE(IOUNI2,'(2A4,I10)')IHRIGH,IHRIG2,NTEMP
          IF(NTEMP.GT.MXROW)MXROW=NTEMP
  330   CONTINUE
        WRITE(IOUNI2,'(2A4,I10)')IHLEFT,IHLEF2,NUMSTR
        IF(NUMSTR.GT.MXROW)MXROW=NUMSTR
      ELSE
        WRITE(IOUNI2,'(I8)')IVAR
        WRITE(IOUNI2,'(2A4,I10)')IHLEFT,IHLEF2,NUMSTR
        IFLAG2=1
        MXROW=NUMSTR
      ENDIF
C
C     STEP 3: NOW LOOP THROUGH THE ROWS OF THE STRING VARIABLES
C
      IFRMT=' '
      IFRMT='(A    )'
      WRITE(IFRMT(3:6),'(I4)')NTEMP1
      IFRMT2=' '
      IFRMT2='(A    ,A25)'
      WRITE(IFRMT2(3:6),'(I4)')NTEMP1
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVA')THEN
        WRITE(ICOUT,313)MXROW
  313   FORMAT('MXROW = ',I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASE.EQ.'STRI')THEN
C
C       STEP 3A: ARGUMENTS ON RHS ARE NAMES OF PRE-EXISTING STRINGS
C
        DO360I2=1,MXROW
          ILAST=0
          ISTR2=' '
          NH=0
          IF(I2.GT.NUMSTR)GOTO379
          DO365I=1,NUMNAM
            II=I
            IF(ISTRN1(I2).EQ.IHNAME(I) .AND.
     1         ISTRN2(I2).EQ.IHNAM2(I) .AND. IUSE(I).EQ.'F')GOTO369
  365     CONTINUE
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,373)ISTRN1(I2),ISTRN2(I2)
  373     FORMAT('       STRING ',2A4,' NOT MATCHED IN NAME ',
     1           'TABLE AS A PRE-EXISTING STRING.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
  369     CONTINUE
          IVAL=IVALUE(II)
          VAL=VALUE(II)
          IL1=IVSTAR(II)
          IL2=IVSTOP(II)
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVA')THEN
            WRITE(ICOUT,381)IL1,IL2
  381       FORMAT('II,IL1,IL2 = ',3I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          CALL DPCOFH(IL1,IL2,IFUNC,NUMCHF,IHTEMP,NH,IBUGA3,IERROR)
          ISTRT=NH
          DO382LL=1,NH
            IF(IHTEMP(LL)(1:1).NE.' ')THEN
              ISTRT=LL
              GOTO383
            ENDIF
  382     CONTINUE
  383     CONTINUE
C
  379     CONTINUE
C
          IF(NH.GT.0)THEN
            DO390J=ISTRT,NH
              ILAST=ILAST+1
              ISTR2(ILAST:ILAST)=IHTEMP(J)(1:1)
  390       CONTINUE
            IF(ILAST.GT.25)ILAST=25
C
            IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVA')THEN
              WRITE(ICOUT,394)I2,ILAST,ISTR2(1:ILAST)
  394         FORMAT('I2,ILAST,ISTR2(1:ILAST) = ',2I8,A25)
              CALL DPWRST('XXX','BUG ')
            ENDIF
          ENDIF
C
          IF(I2.LE.NUMSTR)THEN
            ISTR=' '
            IF(IEXIST.EQ.'YES')THEN
              READ(IOUNI4,IFRMT,ERR=897,END=897)ISTR(1:NTEMP1)
              WRITE(IOUNI2,IFRMT2)ISTR(1:NTEMP1),ISTR2(1:25)
            ELSE
              WRITE(IOUNI2,'(A25)')ISTR2(1:25)
            ENDIF
          ELSE
            ISTR=' '
            IF(IEXIST.EQ.'YES')THEN
              READ(IOUNI4,IFRMT,ERR=897,END=897)ISTR(1:NTEMP1)
              WRITE(IOUNI2,IFRMT2)ISTR(1:NTEMP1),ISTR2(1:25)
            ELSE
              WRITE(IOUNI2,'(A25)')ISTR2(1:25)
            ENDIF
          ENDIF
  360   CONTINUE
      ELSE
C
C       STEP 3B: ARGUMENTS ON RHS ARE LITERAL STRINGS
C
        ICNT=0
        IFRST=5
        MESSAG='OFF'
        ISTRIN=' '
        DO418I=1,IWIDTH
          ISTRIN(I:I)=IANSLC(I)(1:1)
  418   CONTINUE
C
        DO460I2=1,MXROW
C
          ISTR2=' '
          IF(I2.LE.NUMSTR)THEN
            IFRST=IFRST+1
            ICNT=ICNT+1
            ISTART=1
            ISTOP=IWIDTH
            IERROR='NO'
            CALL DPEXWO(ISTRIN,ISTART,ISTOP,IFRST,
     1                  ICOL1,ICOL2,ISTRI2,NCSTR2,
     1                  IBUGA3,ISUBRO,IERROR)
            ILAST=MIN(25,NCSTR2)
            IF(ILAST.GT.0)THEN
              IF(ISTRI2(1:1).EQ.'"' .AND.
     1           ISTRI2(ILAST:ILAST).EQ.'"')THEN
                ISTR2(1:ILAST-2)=ISTRI2(2:ILAST-1)
                ILAST=ILAST-2
              ELSEIF(ISTRI2(1:1).EQ.'"')THEN
                ISTR2(1:ILAST-1)=ISTRI2(2:ILAST)
                ILAST=ILAST-1
              ELSE
                ISTR2(1:ILAST)=ISTRI2(1:ILAST)
              ENDIF
            ENDIF
C
            IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVA')THEN
              WRITE(ICOUT,394)I2,ILAST,ISTR2(1:ILAST)
              CALL DPWRST('XXX','BUG ')
            ENDIF
          ENDIF
C
          IF(I2.LE.NUMSTR)THEN
            ISTR=' '
            IF(IEXIST.EQ.'YES')THEN
              READ(IOUNI4,IFRMT,ERR=897,END=897)ISTR(1:NTEMP1)
              WRITE(IOUNI2,IFRMT2)ISTR(1:NTEMP1),ISTR2(1:25)
            ELSE
              WRITE(IOUNI2,'(A25)')ISTR2(1:25)
            ENDIF
          ELSE
            ISTR=' '
            IF(IEXIST.EQ.'YES')THEN
              READ(IOUNI4,IFRMT,ERR=897,END=897)ISTR(1:NTEMP1)
              WRITE(IOUNI2,IFRMT2)ISTR(1:NTEMP1),ISTR2(1:25)
            ELSE
              WRITE(IOUNI2,'(A25)')ISTR2(1:25)
            ENDIF
          ENDIF
  460   CONTINUE
        GOTO499
      ENDIF
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  NOW COPY dpst2f.dat TO dpzchf.dat              **
C               *****************************************************
C
  499 CONTINUE
      CALL DPCLFI(IOUNI4,IFILE4,ISTAT4,IFORM4,IACCE4,IPROT4,ICURS4,
     1            IENDF4,IREWI4,ISUBN0,IERRFI,IBUGA3,ISUBRO,IERROR)
      IZCHCS='CLOSED'
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLG11,IFLG21,IFLG31,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
C      STEP 4B: COPY "dpst2f.dat" TO CHARACTER VARIABLE FILE
C
      CALL COPYFI(IFILE2,IFILE4,IBUGA3,ISUBRO,IERROR)
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  PRINT FEEDBACK MESSAGE                         **
C               *****************************************************
C
      IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,501)IHLEFT,IHLEF2
  501   FORMAT('THE NAME ',A4,A4,' HAS BEEN ADDED TO THE CHARACTER ',
     1         'VARIABLE LIST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,503)IZCHNA
  503   FORMAT('IN FILE ',A80)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
C
C     ERROR OR END OF FILE READING dpzchf.dat
C
  897 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,211)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,898)
  898 FORMAT('      ERROR READING THE CHARACTER VARIABLE FILE.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO499
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IFILQU=IFILQ2
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTVA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IERROR
 9013   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTVS(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--CONVERT A VECTOR OF INTEGERS TO A STRING.  FOR EXAMPLE,
C              GIVEN A VECTOR THAT CONTAINS THE VALUES 2, 3, AND 5,
C              CREATE A STRING THAT CONTAINS "X2*X3*X5".  THIS IS
C              USED BY THE 10-STEP ANALYSIS OF FACTORIAL DESIGNS.
C
C     EXAMPLE--LET SOUT = DIGITS TO STRING Y
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2015/03
C     ORIGINAL VERSION--MARCH     2015.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*10 ICSTR
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='VS  '
      IERROR='NO'
C
      ILOC3=0
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
      AVAL=0.0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVS')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTVS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF
   57   FORMAT('NUMCHF,MAXCHF = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STVS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STVS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN DIGITS TO STRING--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE NAME ON THE RIGHT HAND SIDE        **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STVS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NINDX=6
      IF(NUMARG.LT.NINDX)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3001)
 3001   FORMAT('      NO VARIABLE GIVEN ON THE RIGHT HAND SIDE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IHRIGH=IHARG(NINDX)
      IHRIG2=IHARG2(NINDX)
C
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'V')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A VARIABLE.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            NLEN=IN(I4)
            ICOLR=IVALUE(I4)
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  EXTRACT VARIABLE AND CONVERT TO STRING         **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STVS')THEN
        ISTEPN='4A'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4011)NLEN,ICASEL
 4011   FORMAT('NLEN1,ICASEL = ',I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ICNT=0
      J=0
C
      DO4016I=1,NLEN
C
        J=J+1
        IJ=MAXN*(ICOLR-1)+I
        IF(ICOLR.LE.MAXCOL)AVAL=V(IJ)
        IF(ICOLR.EQ.MAXCP1)AVAL=PRED(I)
        IF(ICOLR.EQ.MAXCP2)AVAL=RES(I)
        IF(ICOLR.EQ.MAXCP3)AVAL=YPLOT(I)
        IF(ICOLR.EQ.MAXCP4)AVAL=XPLOT(I)
        IF(ICOLR.EQ.MAXCP5)AVAL=X2PLOT(I)
        IF(ICOLR.EQ.MAXCP6)AVAL=TAGPLO(I)
C
        IVALT=INT(ABS(AVAL+0.5))
        ICNT=ICNT+1
        IFUNC2(ICNT)(1:1)='X'
        IF(IVALT.GE.0 .AND. IVALT.LE.9)THEN
          ICNT=ICNT+1
          WRITE(IFUNC2(ICNT)(1:1),'(I1)')IVALT
        ELSEIF(IVALT.GE.10 .AND. IVALT.LE.99)THEN
          WRITE(ICSTR(1:2),'(I2)')IVALT
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(1:1)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(2:2)
        ELSEIF(IVALT.GE.100 .AND. IVALT.LE.999)THEN
          WRITE(ICSTR(1:3),'(I3)')IVALT
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(1:1)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(2:2)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(3:3)
        ELSEIF(IVALT.GE.1000 .AND. IVALT.LE.9999)THEN
          WRITE(ICSTR(1:4),'(I4)')IVALT
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(1:1)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(2:2)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(3:3)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(4:4)
        ELSEIF(IVALT.GE.10000 .AND. IVALT.LE.99999)THEN
          WRITE(ICSTR(1:5),'(I5)')IVALT
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(1:1)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(2:2)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(3:3)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(4:4)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(5:5)
        ELSEIF(IVALT.GE.100000 .AND. IVALT.LE.999999)THEN
          WRITE(ICSTR(1:5),'(I6)')IVALT
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(1:1)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(2:2)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(3:3)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(4:4)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(5:5)
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)=ICSTR(6:6)
        ENDIF
C
        IF(I.LT.NLEN)THEN
          ICNT=ICNT+1
          IFUNC2(ICNT)(1:1)='*'
        ENDIF
C
 4016 CONTINUE
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STVS')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1            NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
     1            NEWNAM,MAXNAM,
     1            IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8606)IHLEFT,IHLEF2
 8606   FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
        CALL DPWRST('XXX','BUG ')
        ILAB(1)='TO T'
        ILAB(2)='HE F'
        ILAB(3)='UNCT'
        ILAB(4)='ION '
        ILAB(5)='    '
        ILAB(6)=' -- '
        NUMWDL=6
        CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STVS')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTVS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPSTWD(ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--EXTRACT A SPECIFIED WORD OF A STRING.
C     EXAMPLE--LET SOUT = STRING WORD SIN INDEX
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2010/10
C     ORIGINAL VERSION--OCTOBER   2010.
C     UPDATED         --OCTOBER   2014. ADD OPTIONAL THIRD ARGUMENT TO
C                                       SPECIFY A DELIMITER
C     UPDATED         --MARCH     2015. CALL LIST TO DPINFU
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM
      CHARACTER*4 NEWNA2
      CHARACTER*4 NEWCOL
      CHARACTER*4 NEWCO2
      CHARACTER*4 ICASEL
      CHARACTER*4 ICASE2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*1 IDELIM
C
      CHARACTER*4 ILAB(10)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPST'
      ISUBN2='WD  '
      IERROR='NO'
C
      ILOC3=0
      ISTART=0
      ISTOP=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STWD')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPSTWD--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMNAM
   52   FORMAT('IBUGA3,ISUBRO,NUMNAM = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMNAM
          WRITE(ICOUT,56)I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),
     1                   IVSTOP(I)
   56     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)NUMCHF,MAXCHF,NUMARG
   57   FORMAT('NUMCHF,MAXCHF,NUMARG = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,60)(IFUNC(I),I=1,MIN(120,MAXCHF))
   60   FORMAT('IFUNC(.)  = ',120A1)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GE.1)THEN
          DO70I=1,NUMARG
            WRITE(ICOUT,76)I,IHARG(I),IHARG2(I),IARGT(I),IARG(I)
   76       FORMAT('I,IHARG(I),IHARG2(I),IARGT(I),IARG(I) = ',
     1             I8,2X,A4,A4,2X,A4,2X,I8)
            CALL DPWRST('XXX','BUG ')
   70     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STWD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM='NO'
      NEWNA2='NO'
      NEWCOL='NO'
      NEWCO2='NO'
      ICASEL='UNKN'
      ICASE2='UNKN'
      NIOLD1=0
      NIOLD2=0
      ICOLL=0
      ICOL2=0
C
C               ******************************************************
C               **  STEP 2--                                         *
C               **  EXAMINE THE ARGUMENT ON THE                      *
C               **  LEFT-HAND SIDE--                                 *
C               **  IF THIS IS A PREVIOUSLY DEFINED NAME, IT SHOULD  *
C               **  BE A STRING    (IF NOT, REPORT AN ERROR).        *
C               ******************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STWD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHLEFT=IHARG(1)
      IHLEF2=IHARG2(1)
C
      DO2000I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I).AND.IHLEF2.EQ.IHNAM2(I))THEN
          IF(IUSE(I2).EQ.'F')THEN
            ICASEL='STRI'
            ILISTL=I2
            GOTO2299
          ELSE
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
 2001       FORMAT('***** ERROR IN STRING WORD--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2003)IHLEFT,IHLEF2
 2003       FORMAT('      THE FIRST NAME ON THE LEFT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2005)
 2005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
 2000 CONTINUE
C
      NEWNAM='YES'
      IF(ICASEL.EQ.'UNKN')ICASEL='STRI'
C
      ILISTL=NUMNAM+1
      IF(ILISTL.GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      THE NUMBER OF VARIABLE, PARAMETER, AND ',
     1         'FUNCTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)MAXNAM
 2203   FORMAT('      NAMES HAS JUST EXCEEDED THE ALLOWABLE ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2204)
 2204   FORMAT('      ENTER      STATUS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2205)
 2205   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES, AND')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2206)
 2206   FORMAT('      THEN REDEFINE OR DELETE SOME OF THE ALREADY ',
     1         'USED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2299 CONTINUE
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  EXTRACT THE FIRST NAME ON THE RIGHT HAND SIDE  **
C               *****************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STWD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(5)
      IHRIG2=IHARG2(5)
      DO3000I=1,NUMNAM
        I4=I
        IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'F')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRIGH,IHRIG2
 3003       FORMAT('      THE NAME ON THE RIGHT HAND SIDE (',
     1             A4,A4,')')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3005)
 3005       FORMAT('      ALREADY EXISTS, BUT NOT AS A STRING.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ISTRT1=IVSTAR(I4)
            ISTOP1=IVSTOP(I4)
            NLEN1=ISTOP1-ISTRT1+1
            GOTO3099
          ENDIF
        ENDIF
 3000 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRIGH,IHRIG2
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
 3015 FORMAT('      WAS NOT FOUND IN THE CURRENT NAME LIST.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3099 CONTINUE
C
C               ******************************************************
C               **  STEP 3B-                                        **
C               **  EXTRACT THE SECOND NAME ON THE RIGHT HAND SIDE. **
C               **  THIS SHOULD BE A NUMERIC VALUE.                 **
C               ******************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STWD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRI21=IHARG(6)
      IHRI22=IHARG2(6)
      DO3100I=1,NUMNAM
        I4=I
        IF(IHRI21.EQ.IHNAME(I).AND.IHRI22.EQ.IHNAM2(I))THEN
          IF(IUSE(I4).NE.'P')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2001)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3003)IHRI21,IHRI22
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3115)
 3115       FORMAT('      ALREADY EXISTS, BUT NOT AS A PARAMETER.')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            ILISR1=I4
            IINDX=IVALUE(ILISR1)
            GOTO3199
          ENDIF
        ENDIF
 3100 CONTINUE
C
      IF(NUMARG.GE.6)THEN
        IF(IARGT(6).EQ.'NUMB')THEN
          IINDX=IARG(6)
          GOTO3199
        ENDIF
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3003)IHRI21,IHRI22
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3015)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 3199 CONTINUE
C
C               ******************************************************
C               **  STEP 3C-                                        **
C               **  EXTRACT THE THIRD ARGUMENT ON THE RIGHT HAND    **
C               **  SIDE.  THE FIRST CHARACTER WILL BE USED TO      **
C               **  DEFINE A DELIMITER.                             **
C               ******************************************************
C
      ISTEPN='3C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STWD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.7)THEN
        IDELIM=IHARG(7)(1:1)
        IDELC=ICHAR(IDELIM)
      ELSE
        IDELIM=' '
        IDELC=-1
      ENDIF
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  FIND THE WORD BASED ON THE INDEX               **
C               *****************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STWD')THEN
        ISTEPN='4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,4012)IIDX,ISTRT1,ISTOP1,NLEN1
 4012   FORMAT('IINDX,ISTRT1,ISTOP1,NLEN1 = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4013)ICASEL
 4013   FORMAT('ICASEL = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IINDX.LT.1 .OR. IINDX.GT.NLEN1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4021)NLEN1
 4021   FORMAT('      THE WORD INDEX IS LESS THAN 1 OR GREATER ',
     1         'THAN ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4023)IINDX
 4023   FORMAT('      THE VALUE OF THE WORD INDEX IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     NOW EXTRACT WORD BASED ON IINDX
C
C     WORD BOUNDARIES ARE DEFINED BY SPACES (NON-PRINTING CHARACTERS
C     ARE DEFINED AS SPACES).
C
C     2014/10: USER CAN SPECIFY DELIMITER OTHER THAN SPACE
C
C     STEP 1: DETERMINE START/STOP POSITION OF WORD
C
      NWORD=0
      IFLAG=0
C
      DO4100I=ISTRT1,ISTOP1
        IPOS=I
        IXTEMP=ICHAR(IFUNC(IPOS)(1:1))
        IF((IDELC.EQ.-1 .AND. IXTEMP.LE.32 .OR. IXTEMP.GE.127) .OR.
     1     (IDELC.GE.1 .AND. IXTEMP.EQ.IDELC))THEN
          IF(IFLAG.EQ.1)THEN
            IF(NWORD.EQ.IINDX)GOTO4200
            IFLAG=0
          ELSEIF(IFLAG.EQ.0)THEN
            CONTINUE
          ENDIF
C
C       CASE 2: NOT A WORD BOUNDARY DETECTED.  IS THIS START OF
C               NEW WORD OR CONTINUATION OF CURRENT WORD?
C
        ELSE
          IF(IFLAG.EQ.0)THEN
            ISTART=I
            ISTOP=I
            NWORD=NWORD+1
            IFLAG=1
          ELSEIF(IFLAG.EQ.1)THEN
            ISTOP=I
          ENDIF
        ENDIF
 4100 CONTINUE
C
      IF(NWORD.EQ.IINDX)THEN
        ISTOP=ISTOP1
        GOTO4200
      ENDIF
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4160)IINDX
 4160 FORMAT('     UNABLE TO EXTRACT WORD ',I8,' FROM STRING.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 4200 CONTINUE
      ICNT=0
      DO4210I=ISTART,ISTOP
        ICNT=ICNT+1
        IPOS=I
        IFUNC2(ICNT)=IFUNC(IPOS)
 4210 CONTINUE
C
C               *****************************************************
C               **  STEP 5--                                       **
C               **  SAVE STRING AND PRINT FEEDBACK MESSAGE         **
C               *****************************************************
C
C
      IF(ICASEL.EQ.'STRI')THEN
C
        ISTEPN='5'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'STWD')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPINFU(IFUNC2,ICNT,IHNAME,IHNAM2,IUSE,IN,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IHLEFT,IHLEF2,ILISTL,
CCCCC1              NEWNAM,MAXN3,
     1              NEWNAM,MAXNAM,
     1              IFUNC,NUMCHF,MAXCHF,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IFEEDB.EQ.'ON' .AND. IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6606)IHLEFT,IHLEF2
 6606     FORMAT('THE NAME ',A4,A4,' HAS JUST BEEN EQUIVALENCED ')
          CALL DPWRST('XXX','BUG ')
          ILAB(1)='TO T'
          ILAB(2)='HE F'
          ILAB(3)='UNCT'
          ILAB(4)='ION '
          ILAB(5)='    '
          ILAB(6)=' -- '
          NUMWDL=6
          CALL DPPRIF(ILAB,NUMWDL,IFUNC2,ICNT,IBUGA3)
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
C
      ENDIF
C
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'STWD')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPSTWD--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMNAM
 9013   FORMAT('NUMNAM,IVALUE = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMNAM
          WRITE(ICOUT,9016)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1                     IVSTAR(I),IVSTOP(I)
 9016     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVSTAR(I),',
     1           'IVSTOP(I)=',I8,2X,A4,A4,2X,A4,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
