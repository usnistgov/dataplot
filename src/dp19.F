      SUBROUTINE DPLOEX(ILOOST,ILOOLI,NUMLIL,NUMLOE,NUMENE,MAXLOO,
     1                  IHPNV,IHPNV2,ILOCPN,ASTARV,AINCV,ASTOPV,
     1                  NUMLOI,ILOOIT,ILOOIF,
     1                  ILOOSP,ILOOEP,IANSLO,IWIDLL,MAXLIL,MAXCIL,
     1                  IANS,IANSLC,IWIDTH,
     1                  ICOM,ICOM2,ICOMT,ICOMI,ACOM,ICOMLC,ICOML2,
     1                  IHARG,IHARG2,IARGT,IARG,ARG,IHARLC,IHARL2,
     1                  NUMARG,
     1                  IHNAME,IHNAM2,IUSE,IVALUE,VALUE,NUMNAM,MAXNAM,
     1                  IN,IIFSW,NUMIF,IHOST1,IHOST2,
     1                  IBUGLO,IBUGTY,ISUBRO,IERROR)
C
C     PURPOSE--EXECUTE THE COMMANDS IN A LOOP
C              (THESE COMMANDS HAVE BEEN AUTOMATICALLY STORED).
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER 1982
C     UPDATED         --APRIL    1989   ADD ISUBRO AS AN ARGUMENT
C     UPDATED         --FEBRUARY 1994 FIX BUG THAT DELETE IN LOOP WIPED
C                                     OUT LOOP INDEX PARAMETER
C     UPDATED         --FEBRUARY 1994 ADD BREAK LOOP COMMAND
C     UPDATED         --JANUARY  2005 FOR LOOPS OF TYPE
C                                         LOOP FOR K = 3 1 2
C                                     MODIFY SO THAT LOOP NOT EXECUTED
C                                     AND SET INDEX VALUE TO START
C                                     VALUE
C     UPDATED         --FEBRUARY 2006 USE MAXCIL (RATHER THAN 80) AS
C                                     THE MAXIMUM NUMBER OF
C                                     CHARACTERS PER LINE IN LOOP
C     UPDATED         --FEBRUARY 2006 BUG IN BREAK LOOP WHEN BREAK
C                                     OCCURS IN FIRST ITERATION OF
C                                     THE LOOP
C     UPDATED         --AUGUST   2007 FIX BUG WHEN THERE IS A DELETE
C                                     IN THE LOOP COMMAND
C     UPDATED         --MAY      2011 ADD MAXLOO TO SPECIFY MAXIMUM
C                                     NUMBER OF NESTED LOOPS
C     UPDATED         --OCTOBER  2018 ILOOIF TO KEEP TRACK OF IF LEVEL
C                                     WHEN INITIATE LOOP
C     UPDATED         --OCTOBER  2018 "CONTINUE LOOP"
C
C---------------------------------------------------------------------
C
      CHARACTER*4 ILOOST
      CHARACTER*4 IHPNV
      CHARACTER*4 IHPNV2
      CHARACTER*4 IANSLO
      CHARACTER*4 IANS
      CHARACTER*4 IANSLC
      CHARACTER*4 ICOM
      CHARACTER*4 ICOM2
      CHARACTER*4 ICOMT
      CHARACTER*4 ICOMLC
      CHARACTER*4 ICOML2
      CHARACTER*4 IHARG
      CHARACTER*4 IHARG2
      CHARACTER*4 IARGT
      CHARACTER*4 IHARLC
      CHARACTER*4 IHARL2
      CHARACTER*4 IHNAME
      CHARACTER*4 IHNAM2
      CHARACTER*4 IUSE
      CHARACTER*4 IHOST1
      CHARACTER*4 IHOST2
      CHARACTER*4 IBUGLO
      CHARACTER*4 IBUGTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IHPN
      CHARACTER*4 IHPN2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IFOUNF
      CHARACTER*4 IIFSW
C
      DIMENSION IHPNV(*)
      DIMENSION IHPNV2(*)
      DIMENSION ILOCPN(*)
      DIMENSION ASTARV(*)
      DIMENSION AINCV(*)
      DIMENSION ASTOPV(*)
      DIMENSION NUMLOI(*)
      DIMENSION ILOOIT(*)
      DIMENSION ILOOSP(*)
      DIMENSION ILOOEP(*)
      DIMENSION ILOOIF(*)
      DIMENSION IANSLO(MAXLIL,MAXCIL)
      DIMENSION IWIDLL(*)
C
      DIMENSION IANS(*)
      DIMENSION IANSLC(*)
      DIMENSION IHARG(*)
      DIMENSION IHARG2(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
      DIMENSION IHARLC(*)
      DIMENSION IHARL2(*)
C
      DIMENSION IHNAME(*)
      DIMENSION IHNAM2(*)
      DIMENSION IUSE(*)
      DIMENSION IVALUE(*)
      DIMENSION VALUE(*)
      DIMENSION IN(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLO'
      ISUBN2='EX  '
      J12=0
C
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLOEX--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGLO,IBUGTY,IERROR
   52   FORMAT('IBUGLO,IBUGTY,IERROR = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ILOOST,ILOOLI,NUMLIL,NUMLOE,NUMENE
   53   FORMAT('ILOOST,ILOOLI,NUMLIL,NUMLOE,NUMENE = ',A4,4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)NUMLOE,NUMENE,NUMLIL,MAXCIL
   54   FORMAT('NUMLOE,NUMENE,NUMLIL,MAXCIL = ',4I8)
        DO55I=1,10
          WRITE(ICOUT,56)I,IHPNV(I),IHPNV2(I),ILOCPN(I),ILOOSP(I),
     1                   ILOOEP(I)
   56     FORMAT('I,IHPNV(I),IHPNV2(I),ILOCPN(I),ILOOSP(I),',
     1           'ILOOEP(I) =',I8,2(2X,A4),3I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO60I=1,10
          WRITE(ICOUT,61)I,ASTARV(I),AINCV(I),ASTOPV(I),
     1                   NUMLOI(I),ILOOIT(I)
   61     FORMAT('I,ASTARV(I),AINCV(I),ASTOPV(I),NUMLOI(I),',
     1           'ILOOIT(I) =',I8,3E15.7,2I8)
          CALL DPWRST('XXX','BUG ')
   60   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO65I=1,NUMLIL
          WRITE(ICOUT,66)I,IWIDLL(I)
   66     FORMAT('I,IWIDLL(I) = ',I8,I8)
          CALL DPWRST('XXX','BUG ')
          JMAX=IWIDLL(I)
          WRITE(ICOUT,67)(IANSLO(I,J),J=1,MIN(80,JMAX))
   67     FORMAT('(IANSLO(I,J),J=1,JMAX) = ',80A1)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)IWIDTH,NUMARG,ICOM,ICOM2
   71   FORMAT('IWIDTH,NUMARG,ICOM,ICOM2 = ',2I8,2(2X,A4))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICOMLC,ICOML2
   72   FORMAT('ICOMLC,ICOML2 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,73)(IANS(I),I=1,MIN(80,IWIDTH))
   73   FORMAT('(IANS(I),I=1,IWIDTH) = ',80A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,74)(IANSLC(I),I=1,MIN(80,IWIDTH))
   74   FORMAT('(IANSLC(I),I=1,IWIDTH) = ',80A1)
        CALL DPWRST('XXX','BUG ')
        DO75I=1,NUMNAM
          WRITE(ICOUT,76)I,IHARG(I),IHARG2(I),IARGT(I),IARG(I),ARG(I)
   76     FORMAT('I,IHARG(I),IHARG2(I),IARGT(I),IARG(I),ARG(I) = ',
     1           I8,2X,A4,2X,A4,2X,A4,I8,E15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,77)I,IHARLC(I),IHARL2(I)
   77     FORMAT('I,IHARLC(I),IHARL2(I) = ',I8,2X,A4,2X,A4)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO80I=1,NUMNAM
          WRITE(ICOUT,81)I,IHNAME(I),IHNAM2(I),IUSE(I),IVALUE(I),
     1                   VALUE(I)
   81     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVALUE(I),',
     1           'VALUE(I) = ',I8,2X,A4,2X,A4,2X,A4,I8,E15.7)
          CALL DPWRST('XXX','BUG ')
   80   CONTINUE
C
      ENDIF
C
C               *************************************************
C               **  STEP 1--                                   **
C               **  IF ENTRY IS FROM OUTSIDE THIS SUBROUTINE,  **
C               **  THEN INCREMENT THE LOOP LINE NUMBER        **
C               **  WHICH SPECIFIES WHICH LINE OF THE LOOP     **
C               **  WILL BE EXAMINED AND EXECUTED.             **
C               *************************************************
C
      ILOOLI=ILOOLI+1
C
C               **********************************************
C               **  STEP 2--                                **
C               **  COPY THE STORED LINE BACK INTO IANS(.)  **
C               **********************************************
C
 1200 CONTINUE
C
      ISTEPN='2'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1230J=1,MAXCIL
        IANS(J)='    '
        IANSLC(J)='    '
 1230 CONTINUE
C
      IWIDTH=IWIDLL(ILOOLI)
      DO1250J=1,IWIDTH
        IANSLC(J)=IANSLO(ILOOLI,J)
 1250 CONTINUE
      CALL DPUPPE(IANSLC,IWIDTH,IANS,IBUGLO,IERROR)
C
      IF(IBUGLO.EQ.'ON' .OR. ISUBRO.EQ.'LOEX')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1261)
 1261   FORMAT('--------------------')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1262)ILOOLI
 1262   FORMAT('CURRENT LINE NUMBER ILOOLI = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1263)(IANSLC(I),I=1,MIN(IWIDTH,80))
 1263   FORMAT('(IANSLC(I),I=1,80) = ',80A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ******************************************
C               **  STEP 3--                            **
C               **  EXTRACT THE COMMAND NAME AND        **
C               **  SEPARATE OUT THE VARIOUS ARGUMENTS  **
C               ******************************************
C
      ISTEPN='3'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPTYPE(IANSLC,IWIDTH,IBUGTY,
     1            ICOM,ICOM2,ICOMT,ICOMI,ACOM,ICOMLC,ICOML2,
     1            IHNAME,IHNAM2,IUSE,IVALUE,VALUE,NUMNAM,
     1            IHARG,IHARG2,IARGT,IARG,ARG,IHARLC,IHARL2,NUMARG,
     1            IHOST1,IHOST2)
C
C               ******************************************
C               **  STEP 4--                            **
C               **  SEARCH FOR LOOP COMMAND             **
C               **  AND BRANCH ACCORDINGLY;             **
C               **  SEARCH FOR END OF LOOP COMMAND      **
C               **  AND BRANCH ACCORDINGLY;             **
C               **  IF NEITHER, THEN JUMP TO EXIT       **
C               **              FOR NORMAL PROCESSING.  **
C               ******************************************
C
C
      ISTEPN='4'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,1401)ICOM,ILOOLI
 1401   FORMAT('ICOM,ILOOLI = ',A4,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C  BUG FIX: ALLOW IF COMMANDS TO BE NESTED WITHIN LOOP (AUGUST, 1987)
C           SO SPECIFICALLY CHECK FOR "END LOOP" TO AVOID CONFLICT
C           WITH "END IF"
C  FEBRUARY 1994.  BREAK LOOP COMMAND.
C
      IF(ICOM.EQ.'LOOP')THEN
        GOTO1400
C
C               *************************************************
C               **  STEP 6--                                   **
C               **  TREAT THE CASE WHEN COMMAND = END OF LOOP  **
C               **  NUMENE = NUMBER OF    END OF LOOP          **
C               **  COMMANDS ENCOUNTERED                       **
C               *************************************************
C
      ELSEIF(
     1  (ICOM.EQ.'END'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'LOOP') .OR.
     1  (ICOM.EQ.'END'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'LOOP'))THEN
        ISTEPN='6'
        IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        NUMENE=NUMENE+1
        ILOOEP(NUMLOE)=ILOOLI
        GOTO1700
      ELSEIF(ICOM.EQ.'BREA'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'LOOP')THEN
        IF(IIFSW.EQ.'TRUE')THEN
          IF(NUMIF.GT.0)NUMIF=NUMIF-1
          GOTO1700
        ELSE
          GOTO9000
        ENDIF
      ELSEIF(ICOM.EQ.'CONT'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'LOOP')THEN
C
C       TREAT "CONTINUE LOOOP" AS ESSENTIALLY EQUIVALENT TO "END LOOP".
C       HOWEVER, HAVE TO TWEAK VARIOUS SETTINGS APPROPRIATELY.
C
C       CONTINUE LOOP JUST GOES TO THE NEXT ITERATION OF THE LOOP
C
        IF(IIFSW.EQ.'TRUE')THEN
          ILOOLI=ILOOSP(NUMENE)
          GOTO1700
        ELSE
          GOTO9000
        ENDIF
      ELSEIF(ICOM.EQ.'CONT'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'LOOP')THEN
      ENDIF
      GOTO9000
C
C               **********************************************
C               **  STEP 4.1--                              **
C               **  TREAT THE CASE WHEN THE COMMAND = LOOP  **
C               **  NUMLOE = NUMBER OF    LOOP   COMMANDS   **
C               **  ENCOUNTERED                             **
C               **********************************************
C
 1400 CONTINUE
      ISTEPN='4.1'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMLOE=NUMLOE+1
      IF(NUMLOE.GT.MAXLOO)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1301)
 1301   FORMAT('****** ERROR IN LOOP COMMAND--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1302)MAXLOO
 1302   FORMAT('       MAXIMUM NUMBER OF NESTED LOOPS (',I3,
     1         ') EXCEEDED.')
        CALL DPWRST('XXX','BUG ')
        NUMLOE=NUMLOE-1
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     OCTOBER 2018: SAVE THE CURRENT "IF LEVEL" FOR THIS NESTING
C                   LEVEL OF THE LOOP
C
      ILOOIF(NUMLOE)=NUMIF
C
C     DECEMBER 2006: WHEN IF SWITCH IS FALSE, DO NOT
C                    PROCESS LOOP COMMAND.
C
      IF(IIFSW.EQ.'FALS')GOTO9000
C
C               *********************************************
C               **  STEP 4.2--                             **
C               **  SEARCH FOR FIRST OCCURRANCE OF    FOR  **
C               *********************************************
C
      ISTEPN='4.2'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,1413)ILOOLI,NUMLOE,ILOOIF(NUMLOE)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      JMAX=NUMARG-1
      DO1405J=1,JMAX
        J2=J
        JP1=J+1
        IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    '.AND.
     1     IHARG(JP1).EQ.'I   '.AND.IHARG2(JP1).EQ.'   ')GOTO1430
        IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')GOTO1450
 1405 CONTINUE
      GOTO1410
C
C               **********************************************
C               **  STEP 4.3A--                             **
C               **  TREAT THE CASE WHERE   FOR   NOT FOUND  **
C               **********************************************
C
 1410 CONTINUE
      ISTEPN='4.3A'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      KMIN=1
      ASTART=KMIN
      KDEL=1
      AINC=KDEL
      KMAX=1
      ASTOP=KMAX
      NUMINC=1
C
      IHPN='I   '
      IHPN2='    '
      IHPNV(NUMLOE)=IHPN
      IHPNV2(NUMLOE)=IHPN2
      ASTARV(NUMLOE)=ASTART
      AINCV(NUMLOE)=AINC
      ASTOPV(NUMLOE)=ASTOP
      ILOOSP(NUMLOE)=ILOOLI
      NUMLOI(NUMLOE)=NUMINC
C
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1412)
 1412   FORMAT('THIS IS THE    NO FOR    CASE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1413)ILOOLI,NUMLOE,ILOOIF(NUMLOE)
 1413   FORMAT('ILOOLI,NUMLOE,ILOOIF(NUMLOE) = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1414)IHPNV(NUMLOE),IHPNV2(NUMLOE)
 1414   FORMAT('IHPNV(NUMLOE),IHPNV2(NUMLOE) = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1415)ASTARV(NUMLOE),AINCV(NUMLOE),ASTOPV(NUMLOE)
 1415   FORMAT('ASTARV(NUMLOE),AINCV(NUMLOE),ASTOPV(NUMLOE) = ',
     1         3E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1416)ILOOSP(NUMLOE),ILOOEP(NUMLOE)
 1416   FORMAT('ILOOSP(NUMLOE),ILOOEP(NUMLOE) = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1417)NUMLOI(NUMLOE),ILOOIT(NUMLOE)
 1417   FORMAT('NUMLOI(NUMLOE),ILOOIT(NUMLOE) = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      GOTO1490
C
C               **********************************
C               **  STEP 4.3B--                 **
C               **  TREAT THE    FOR I    CASE  **
C               **********************************
C
 1430 CONTINUE
      ISTEPN='4.3B'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      JP3=JP1+2
      JP4=JP1+3
      JP5=JP1+4
      KMIN=1
      IF(JP3.LE.NUMARG)KMIN=IARG(JP3)
      ASTART=KMIN
      KDEL=1
      IF(JP4.LE.NUMARG)KDEL=IARG(JP4)
      AINC=KDEL
      KMAX=KMIN
      IF(JP5.LE.NUMARG)KMAX=IARG(JP5)
      ASTOP=KMAX
      NUMINC=((KMAX-KMIN)/KDEL)+1
C
      IHPN='I   '
      IHPN2='    '
      IHPNV(NUMLOE)=IHPN
      IHPNV2(NUMLOE)=IHPN2
      ASTARV(NUMLOE)=ASTART
      AINCV(NUMLOE)=AINC
      ASTOPV(NUMLOE)=ASTOP
      ILOOSP(NUMLOE)=ILOOLI
      NUMLOI(NUMLOE)=NUMINC
C
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1432)
 1432   FORMAT('THIS IS THE    FOR I    CASE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1433)ILOOLI
 1433   FORMAT('ILOOLI = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1434)IHPNV(NUMLOE),IHPNV2(NUMLOE)
 1434   FORMAT('IHPNV(NUMLOE),IHPNV2(NUMLOE) = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1435)ASTARV(NUMLOE),AINCV(NUMLOE),ASTOPV(NUMLOE)
 1435   FORMAT('ASTARV(NUMLOE),AINCV(NUMLOE),ASTOPV(NUMLOE) = ',
     1         3E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1436)ILOOSP(NUMLOE),ILOOEP(NUMLOE)
 1436   FORMAT('ILOOSP(NUMLOE),ILOOEP(NUMLOE) = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1437)NUMLOI(NUMLOE),ILOOIT(NUMLOE)
 1437   FORMAT('NUMLOI(NUMLOE),ILOOIT(NUMLOE) = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      GOTO1490
C
C               *******************************************
C               **  STEP 4.3C--                          **
C               **  TREAT THE     GENERAL FOR      CASE  **
C               *******************************************
C
 1450 CONTINUE
      ISTEPN='4.3C'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
      IFOLOC=J2
      ILALOC=IFOLOC-1
C
      IF(IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      DO1460ITER=1,1000
        IFOLOC=ILALOC+1
        J=IFOLOC
        JP1=J+1
        IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    '.AND.
     1     IHARG(JP1).EQ.'I   '.AND.IHARG2(JP1).EQ.'   ')GOTO1480
        IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')GOTO1470
        GOTO1490
 1470 CONTINUE
C
      CALL DPEXS2(IFOLOC,IHARG,IHARG2,IARGT,IARG,ARG,NUMARG,
     1IANS,IWIDTH,
     1IHPN,IHPN2,ASTART,AINC,ASTOP,NUMINC,ILALOC,IBUGLO,IFOUNF,IERROR)
      IF(IERROR.EQ.'YES')THEN
        IFOUNF='YES'
        GOTO9000
      ENDIF
C
      IF(IFOUNF.EQ.'NO')GOTO1490
      IHPNV(NUMLOE)=IHPN
      IHPNV2(NUMLOE)=IHPN2
      ASTARV(NUMLOE)=ASTART
      AINCV(NUMLOE)=AINC
      ASTOPV(NUMLOE)=ASTOP
      ILOOSP(NUMLOE)=ILOOLI
      NUMLOI(NUMLOE)=NUMINC
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1472)
 1472   FORMAT('THIS IS THE    GENERAL FOR    CASE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1473)ILOOLI
 1473   FORMAT('ILOOLI = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1474)IHPNV(NUMLOE),IHPNV2(NUMLOE)
 1474   FORMAT('IHPNV(NUMLOE),IHPNV2(NUMLOE) = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1475)ASTARV(NUMLOE),AINCV(NUMLOE),ASTOPV(NUMLOE)
 1475   FORMAT('ASTARV(NUMLOE),AINCV(NUMLOE),ASTOPV(NUMLOE) = ',
     1         3E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1476)ILOOSP(NUMLOE),ILOOEP(NUMLOE)
 1476   FORMAT('ILOOSP(NUMLOE),ILOOEP(NUMLOE) = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1477)NUMLOI(NUMLOE),ILOOIT(NUMLOE)
 1477   FORMAT('NUMLOI(NUMLOE),ILOOIT(NUMLOE) = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
 1460 CONTINUE
C
 1480 CONTINUE
C
C               ***************************************
C               **  STEP 4.4--                       **
C               **  WRITE OUT A MESSAGE INDICATING   **
C               **  THE TOTAL NUMBER OF ITERATIONS.  **
C               ***************************************
C
 1490 CONTINUE
      ISTEPN='4.4'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IPROD=1
      IF(NUMLOE.GT.0)THEN
        DO1491I=1,NUMLOE
          IPROD=IPROD*NUMLOI(I)
 1491   CONTINUE
      ENDIF
C
      NUMLAP=IPROD
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        WRITE(ICOUT,1496)NUMLOI(NUMLOE),IPROD
 1496   FORMAT('NUMLOI(NUMLOE),IPROD = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ILOOIT(NUMLOE)=0
      GOTO1700
C
C               *************************************************
C               **  STEP 7.1--                                 **
C               **  FOR BOTH THE    LOOP   COMMAND,            **
C               **  AND THE   END OF LOOP   COMMAND,           **
C               **  COMPUTE THE NEXT VALUE FOR THIS PARAMETER  **
C               *************************************************
C
 1700 CONTINUE
      ISTEPN='7.1'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILOOIT(NUMLOE)=ILOOIT(NUMLOE)+1
      ITER=ILOOIT(NUMLOE)
      AITER=ITER
      PV=ASTARV(NUMLOE)+(AITER-1.0)*AINCV(NUMLOE)
      N1=NUMLOI(NUMLOE)
CCCCC IF(ITER.EQ.N1)PV=ASTOPV(NUMLOE)       APRIL 27, 1987
C  FIX AUGUST, 1987
C  LOOP GETS INCREMENTED ONCE PAST LAST VALUE. ADJUST STOP VALUE
C  SO THAT WHEN EXIT LOOP, HAS LAST "GOOD" VALUE
      IF(ITER.GT.N1)PV=PV-AINCV(NUMLOE)
C  END FIX
CCCCC ADD FOLLOWING BLOCK FOR BREAK LOOP COMMAND.  FEBRUARY 1994.
      IF(ICOM.EQ.'BREA'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'LOOP')THEN
        ITER=N1+1
        PV=PV-AINCV(NUMLOE)
      END IF
CCCCC JANUARY 2005: IF HAVE SOMETHING LIKE
CCCCC
CCCCC                   LOOP FOR K = 3 1 2
CCCCC
CCCCC               THEN WE WANT TO TERMINATE LOOP WITHOUT
CCCCC               EXECUTING IT.
C
      IF(AINCV(NUMLOE).GT.0)THEN
        IF(ASTOPV(NUMLOE).LT.ASTARV(NUMLOE))THEN
          ITER=N1+1
          PV=ASTARV(NUMLOE)
        ENDIF
      ELSEIF(AINCV(NUMLOE).LT.0)THEN
        IF(ASTOPV(NUMLOE).GT.ASTARV(NUMLOE))THEN
          ITER=N1+1
          PV=ASTARV(NUMLOE)
        ENDIF
      ENDIF
C
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IF(ICOM.EQ.'END')THEN
          WRITE(ICOUT,1712)
 1712     FORMAT('AN    END OF LOOP   LINE HAS BEEN ENCOUNTERED')
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,1713)NUMLOE,ILOOLI,ICOM
 1713   FORMAT('NUMLOE,ILOOLI,ICOM = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1714)IHPNV(NUMLOE),IHPNV2(NUMLOE)
 1714   FORMAT('IHPNV(NUMLOE),IHPNV2(NUMLOE) = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1715)ASTARV(NUMLOE),AINCV(NUMLOE),ASTOPV(NUMLOE)
 1715   FORMAT('ASTARV(NUMLOE),AINCV(NUMLOE),ASTOPV(NUMLOE) = ',
     1         3E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1716)ILOOSP(NUMLOE),ILOOEP(NUMLOE)
 1716   FORMAT('ILOOSP(NUMLOE),ILOOEP(NUMLOE) = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1717)NUMLOI(NUMLOE),ILOOIT(NUMLOE)
 1717   FORMAT('NUMLOI(NUMLOE),ILOOIT(NUMLOE) = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1718)ITER,N1,PV
 1718   FORMAT('ITER,N1,PV = ',I8,I8,E15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 7.2--                        **
C               **  FOR BOTH THE    LOOP   COMMAND,   **
C               **  AND THE   END OF LOOP   COMMAND,  **
C               **  DEFINE THE NEXT LINE OF THE LOOP  **
C               **  TO BE EXAMINED                    **
C               ****************************************
C
      ISTEPN='7.2'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        WRITE(ICOUT,1705)ILOOLI,ITER,N1,NUMLOE
 1705   FORMAT('ILOOLI,ITER,N1,NUMLOE = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1706)ILOOSP(NUMLOE),ILOOEP(NUMLOE)
 1706   FORMAT('ILOOSP(NUMLOE),ILOOEP(NUMLOE) = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ILOOLI=ILOOSP(NUMLOE)+1
      IF(ITER.GT.N1)ILOOLI=ILOOEP(NUMLOE)+1
C
CCCCC ADD FOLLOWING BLOCK FOR BREAK LOOP COMMAND.  FEBRUARY 1994.
CCCCC BUG.  BREAK LOOP NORMALLY IN IF BLOCK, WHEN THERE IS ERROR
CCCCC IN IF STATEMENT (OR THERE IS NO IF), THEN GET SEG FAULT
CCCCC BECAUSE ILOOEP NOT YET DEFINED (I.E., BREAK LOOP ENCOUNTERED
CCCCC BEFORE END OF LOOP, NEED AT LEAST ONE ITERATION THROUGH LOOP).
C
CCCCC IF(ILOOEP(NUMLOE).GT.0)THEN
        IF(ICOM.EQ.'BREA'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'LOOP')THEN
          ILOOLI=ILOOEP(NUMLOE)+1
        END IF
CCCCC ELSE
CCCCC ENDIF
C  BUG FIX: AUGUST, 1987 FOLLOWING 2 LINES MOVED TO CORRECT PROBLEM
C  WITH NESTED LOOPS.  FOR NESTED LOOPS, VALUE OF INNER LOOP IS ASSIGNED
C  TO OUTER LOOP
C  DR. FILLIBEN CORRECTED PROBLEM ELSEWHERE.  UNCOMMENT THIS FIX
C
CCCCC IF(ITER.GT.N1)NUMLOE=NUMLOE-1
CCCCC IF(ITER.GT.N1)NUMENE=NUMENE-1
C
C               *******************************************
C               **  STEP 7.3--                           **
C               **  FOR BOTH THE    LOOP   COMMAND,      **
C               **  AND THE   END OF LOOP   COMMAND,     **
C               **  IF THE NEXT LINE TO BE EXAMINED IS   **
C               **  BEYOND THE LOOP TABLE, THEN          **
C               **  THE LOOPING IS COMPLETED--           **
C               **  BRANCH TO RESET ALL LOOP VARIABLES.  **
C               *******************************************
C
      ISTEPN='7.3'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC BUG FIX.  ADD FOLLOWING LINE.     JANUARY 1999.
CCCCC BUG IS IF NO IF AROUND BREAK LOOP (WHICH ALSO OCCURS
CCCCC IF THERE IS AN ERROR IN THE IF)
      IF(ILOOLI.LT.0)GOTO1800
      IF(ILOOLI.GT.NUMLIL)GOTO1800
C
C               ********************************************
C               **  STEP 7.4--                            **
C               **  FOR BOTH THE    LOOP   COMMAND,       **
C               **  AND THE   END OF LOOP   COMMAND,      **
C               **  ENTER THE TERMPORARY VALUE FOR        **
C               **  FOR THE LOOP PARAMETER                **
C               **  INTO THE PERMANENT INTERNAL DATAPLOT  **
C               **  NAME TABLE.                           **
C               ********************************************
C
C
      ISTEPN='7.4'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ****************************************************
C               **  STEP 7.5--                                    **
C               **  IS THIS A LOOP COMMAND?                       **
C               **  IF SO, SEARCH THE INTERNAL DATAPLOT           **
C               **  NAME TABLE FOR THE PARAMETER NAME.            **
C               **  IF NOT, THEN THE NAME SHOULD ALREADY HAVE     **
C               **  BEEN ENTERED                                  **
C               **  INTO THE INTERNAL DATAPLOT NAME TABLE.        **
C               ****************************************************
C
      ISTEPN='7.5'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC IF(ITER.LE.1)GOTO1720
      IF(ICOM.EQ.'LOOP')GOTO1720
      GOTO1760
C
 1720 CONTINUE
C
      IH=IHPNV(NUMLOE)
      IH2=IHPNV2(NUMLOE)
      IF(NUMNAM.LE.0)GOTO1729
      DO1725J1=1,NUMNAM
        J12=J1
        IF(IH.EQ.IHNAME(J1).AND.IH2.EQ.IHNAM2(J1))THEN
          ILOCPN(NUMLOE)=J12
          GOTO1760
        ENDIF
 1725 CONTINUE
 1729 CONTINUE
      IF(NUMNAM.GE.MAXNAM)THEN
C
        WRITE(ICOUT,1731)
 1731   FORMAT('***** ERROR IN LOOP EXECUTION--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1732)
 1732   FORMAT('      THE NUMBER OF DATAPLOT NAMES HAS JUST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1734)MAXNAM
 1734   FORMAT('      EXCEEDED THE ALLOWABLE MAXIMUM OF ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1735)
 1735   FORMAT('      THIS OCCURRED IN ATTEMPTING TO ENTER ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1736)IH,IH2
 1736   FORMAT('      THE PARAMETER NAME ',A4,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1737)
 1737   FORMAT('      INTO THE INTERNAL DATAPLOT NAME LIST.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1738)
 1738   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1739)(IANS(I),I=1,MIN(100,IWIDTH))
 1739   FORMAT('      ',100A1)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ********************************************
C               **  STEP 7.6--                            **
C               **  ENTER LOOP PARAMETER VALUE            **
C               **  INTO PERMANENT INTERNAL DATAPLOT      **
C               **  NAME TABLE.                           **
C               **  TREAT THE CASE WHERE COMMAND = LOOP   **
C               **  AND PARAMETER NAME NOT YET EXIST      **
C               **  IN GENERAL DATAPLOT NAME TABLE.       **
C               ********************************************
C
      ISTEPN='7.6'
      IF(ISUBRO.EQ.'LOEX')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMNAM=NUMNAM+1
      J12=NUMNAM
      ILOCPN(NUMLOE)=J12
      IHNAME(J12)=IH
      IHNAM2(J12)=IH2
      IUSE(J12)='P'
C
      VALUE(J12)=PV
      IVALUE(J12)=INT(PV+0.5)
CCCCC ADD FOLLOWING LINE FOR DELETE IN LOOP BUG.  FEBRUARY 1994.
      IN(J12)=1
      GOTO1780
C
C               ****************************************
C               **  STEP 7.7--                        **
C               **  ENTER LOOP PARAMETER VALUE        **
C               **  INTO PERMANENT INTERNAL DATAPLOT  **
C               **  NAME TABLE.                       **
C               **  TREAT THE CASE WHERE COMMAND = LOOP*
C               **  OR COMMAND = END OF LOOP, AND     **
C               **  PARAMETER NAME ALREADY IN TABLE.  **
C               ****************************************
C
 1760 CONTINUE
      ISTEPN='7.7'
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,1761)J12,PV
 1761   FORMAT('J12,PV = ',I8,E15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
CCCCC IF(ITER.GT.N1)GOTO1780
C
CCCCC AUGUST 2007: NOTE THAT IF THERE IS A DELETE IN THE
CCCCC              LOOP, THIS CHANGES THE LOCATION OF THE
CCCCC              LOOP INDEX PARAMETER IN THE NAME TABLE.
CCCCC              SO OBTAIN CURRENT POSITION JUST TO BE SURE.
C
   
      IH=IHPNV(NUMLOE)
      IH2=IHPNV2(NUMLOE)
      DO1775J1=1,NUMNAM
        J12=J1
        IF(IH.EQ.IHNAME(J1).AND.IH2.EQ.IHNAM2(J1))THEN
          ILOCPN(NUMLOE)=J12
          GOTO1779
        ENDIF
 1775 CONTINUE
      J12=ILOCPN(NUMLOE)
 1779 CONTINUE
C
      VALUE(J12)=PV
      IVALUE(J12)=INT(PV+0.5)
CCCCC ADD FOLLOWING LINE FOR DELETE IN LOOP BUG.  FEBRUARY 1994.
      IN(J12)=1
C
C     BUG FIX: WRONG LOOP PARAMETER WAS SET
C     FOLLOWING 2 LINES MOVED FROM ELSEWHERE IN THE ROUTINE
C     DR. FILLIBEN FIXED PROBLEM ELSEWHERE 9/87, COMMENT OUT MY
C     CHANGE.
C
      IF(ITER.GT.N1)THEN
        IF(NUMLOE.GE.1)ILOOIF(NUMLOE)=0
        NUMLOE=NUMLOE-1
        NUMENE=NUMENE-1
      ENDIF
C  END FIX
      GOTO1780
C
 1780 CONTINUE
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        WRITE(ICOUT,1781)ITER,N1,J12,PV
 1781   FORMAT('ITER,N1,J12,PV = ',3I8,E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1782)J12,IVALUE(J12),VALUE(J12)
 1782   FORMAT('J12,IVALUE(J12),VALUE(J12) = ',I8,I8,E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1783)NUMLOE
 1783   FORMAT('NUMLOE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1784)NUMLOI(1)
 1784   FORMAT('NUMLOI(1) = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1785)ASTARV(1),AINCV(1),ASTOPV(1)
 1785   FORMAT('ASTARV(1),AINCV(1),ASTOPV(1) = ',3E15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      GOTO1200
C
C               ***********************************************
C               **  STEP 7.10--                              **
C               **  THE EXECUTION OF ALL LOOPS IS COMPLETED; **
C               **  RESET LOOPING VARIABLES.                 **
C               ***********************************************
C
 1800 CONTINUE
      ILOOST='OFF'
      ILOOLI=0
      NUMLIL=0
      NUMLOE=0
      NUMENE=0
C
      DO1810I=1,10
        IHPNV(I)='    '
        IHPNV2(I)='    '
        ILOCPN(I)=-99
        ASTARV(I)=-99.0
        AINCV(I)=-99.0
        ASTOPV(I)=-99.0
        NUMLOI(I)=0
        ILOOIT(I)=0
        ILOOSP(I)=-99
        ILOOEP(I)=-99
 1810 CONTINUE
C
      DO1820I=1,25
        IWIDLL(I)=0
        DO1830J=1,MAXCIL
          IANSLO(I,J)='    '
 1830   CONTINUE
 1820 CONTINUE
C
      GOTO9000
C
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOEX')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLOEX--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGLO,IBUGTY,IERROR
 9012   FORMAT('IBUGLO,IBUGTY,IERROR = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)ILOOST,ILOOLI,NUMLIL,NUMLOE,NUMENE
 9013   FORMAT('ILOOST,ILOOLI,NUMLIL,NUMLOE,NUMENE = ',A4,4I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,10
          WRITE(ICOUT,9016)I,IHPNV(I),IHPNV2(I),ILOCPN(I),ILOOSP(I),
     1                     ILOOEP(I)
 9016     FORMAT('I,IHPNV(I),IHPNV2(I),ILOCPN(I),ILOOSP(I),',
     1           'ILOOEP(I) =',I8,2X,A4,2X,A4,I8,I8,I8)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,10
          WRITE(ICOUT,9021)I,ASTARV(I),AINCV(I),ASTOPV(I),NUMLOI(I),
     1                     ILOOIT(I)
 9021     FORMAT('I,ASTARV(I),AINCV(I),ASTOPV(I),NUMLOI(I),',
     1           'ILOOIT(I) =',I8,3E15.7,2I8)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO9025I=1,NUMLIL
          WRITE(ICOUT,9026)I,IWIDLL(I)
 9026     FORMAT('I,IWIDLL(I) = ',I8,I8)
          CALL DPWRST('XXX','BUG ')
          JMAX=IWIDLL(I)
          WRITE(ICOUT,9027)(IANSLO(I,J),J=1,MIN(80,JMAX))
 9027     FORMAT('(IANSLO(I,J),J=1,JMAX) = ',80A1)
          CALL DPWRST('XXX','BUG ')
 9025   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO9040I=1,NUMNAM
          WRITE(ICOUT,9041)I,IHNAME(I),IHNAM2(I),IUSE(I),IVALUE(I),
     1                     VALUE(I)
 9041     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IVALUE(I),',
     1           'VALUE(I) = ',I8,2X,A4,2X,A4,2X,A4,I8,E15.7)
          CALL DPWRST('XXX','BUG ')
 9040   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLODG(IHARG,IARGT,ARG,NUMARG,
     1ALOWDG,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE DEGREE (1 FOR LINEAR, 2 FOR QUADRATIC)
C              TO BE USED FOR THE LOWESS SMOOTHER.
C              THE SPECIFIED LOWESS DEGREE VALUE WILL BE PLACED
C              IN THE FLOATING POINT VARIABLE ALOWDG.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --ARG    (A  FLOATING POINT VECTOR)
C                     --NUMARG (AN INTEGER VARIABLE)
C     OUTPUT ARGUMENTS--ALOWDG  (A  FLOATING POINT VARIABLE)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--94/3
C     ORIGINAL VERSION--MARCH     1994.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO9000
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'=')GOTO9000
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'DEGR')GOTO1110
      IF(IHARG(NUMARG).EQ.'?')GOTO8100
      GOTO9000
C
 1110 CONTINUE
      IF(IHARG(NUMARG).EQ.'DEGR')GOTO1150
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1160
      GOTO1120
C
 1120 CONTINUE
      IERROR='YES'
      WRITE(ICOUT,1121)
 1121 FORMAT('***** ERROR IN DPLODG--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1122)
 1122 FORMAT('      ILLEGAL FORM FOR LOWESS DEGREE COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1130)
 1130 FORMAT('      THE ALLOWABLE FORMS ARE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1131)
 1131 FORMAT('          LOWESS DEGREE 1 ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1132)
 1132 FORMAT('          LOWESS DEGREE 2 ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1135)
 1135 FORMAT('      THE DEFAULT DEGREE IS 1 (= LINEAR LOWESS)')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 1150 CONTINUE
      HOLD=1.0
      GOTO1180
C
 1160 CONTINUE
      HOLD=ARG(NUMARG)
      IF(HOLD.LE.1.5)HOLD=1.0
      IF(HOLD.GT.1.5)HOLD=2.0
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      ALOWDG=HOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)ALOWDG
 1281 FORMAT('THE LOWESS DEGREE HAS JUST BEEN SET ',
     1'TO ',F10.4)
 1289 CONTINUE
      GOTO9000
C
C               ********************************************
C               **  STEP 81--                             **
C               **  TREAT THE    ?    CASE--              **
C               **  DUMP OUT CURRENT AND DEFAULT VALUES.  **
C               ********************************************
C
 8100 CONTINUE
      IFOUND='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8111)ALOWDG
 8111 FORMAT('THE CURRENT LOWESS DEGREE    IS ',F10.4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8121)
 8121 FORMAT('THE DEFAULT LOWESS DEGREE    IS 1.0')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPLOFR(IHARG,IARGT,ARG,NUMARG,
     1ALOWFR,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE FRACTION (0.0 TO 1.0).
C              TO BE USED FOR THE LOWESS SMOOTHER.
C              THE SPECIFIED LOWESS FRACTION VALUE WILL BE PLACED
C              IN THE FLOATING POINT VARIABLE ALOWFR.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --ARG    (A  FLOATING POINT VECTOR)
C                     --NUMARG (AN INTEGER VARIABLE)
C     OUTPUT ARGUMENTS--ALOWFR  (A  FLOATING POINT VARIABLE)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/1
C     ORIGINAL VERSION--DECEMBER 1988.
C     UPDATED         --NOVEMBER  1989.  CHECK LOWESS FRACTION 0 TO 1
C     UPDATED         --NOVEMBER  1989.  LOWESS FRACTION DEFAULT TO .1
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO9000
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'=')GOTO9000
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'FRAC')GOTO1110
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'DECI')GOTO1110
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'PROP')GOTO1110
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'PERC')GOTO1110
      IF(IHARG(NUMARG).EQ.'?')GOTO8100
      GOTO9000
C
 1110 CONTINUE
      IF(IHARG(NUMARG).EQ.'FRAC')GOTO1150
      IF(IHARG(NUMARG).EQ.'DECI')GOTO1150
      IF(IHARG(NUMARG).EQ.'PROP')GOTO1150
      IF(IHARG(NUMARG).EQ.'PERC')GOTO1150
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1160
      GOTO1120
C
 1120 CONTINUE
      IERROR='YES'
      WRITE(ICOUT,1121)
 1121 FORMAT('***** ERROR IN DPLOFR--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1122)
 1122 FORMAT('      ILLEGAL FORM FOR LOWESS FRACTION/',
     1'DECIMAL/PROPORTION/PERCENTAGE COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1124)
 1124 FORMAT('      EXAMPLE TO DEMONSTRATE THE ',
     1'PROPER FORM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1125)
 1125 FORMAT('      SUPPOSE THE THE ANALYST IS CARRYING OUT  ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1126)
 1126 FORMAT('      A LOWESS SMOOTH, ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1127)
 1127 FORMAT('      AND SUPPOSE THE ANALYST WISHES THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1128)
 1128 FORMAT('      SMOOTHING WINDOW TO BE 20% OF THE X-WIDTH')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1130)
 1130 FORMAT('      THEN THE ALLOWABLE FORMS ARE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1131)
 1131 FORMAT('          LOWESS FRACTION .2 ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1132)
 1132 FORMAT('          LOWESS DECIMAL .2 ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1133)
 1133 FORMAT('          LOWESS PROPORTION 20 ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1134)
 1134 FORMAT('          LOWESS PERCENTAGE 20 ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1135)
 1135 FORMAT('      THE DEFAULT FRACTION IS .5 (= 50%)')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 1150 CONTINUE
CCCCC THE FOLLOWING LINE WAS CHANGED NOVEMBER 1989
CCCCC HOLD=.5
      HOLD=.1
      GOTO1180
C
 1160 CONTINUE
      HOLD=ARG(NUMARG)
      IF(IHARG(1).EQ.'PROP')HOLD=HOLD/100.0
      IF(IHARG(1).EQ.'PERC')HOLD=HOLD/100.0
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      ALOWFR=HOLD
CCCCC THE FOLLOWING LINE WAS INSERTED NOVEMBER 1989
      ALOWPR=100.0*ALOWFR
C
CCCCC THE FOLLOWING SECTION WAS INSERTED NOVEMBER 1989
C               **************************************************
C               **  CHECK THAT THE LOWESS FRACTION              **
C               **  IS BETWEEN 0 AND 1 (EXCLUSIVELY)            **
C               **************************************************
C
      IF(IHARG(1).EQ.'FRAC')GOTO1210
      IF(IHARG(1).EQ.'DECI')GOTO1210
      GOTO1229
 1210 CONTINUE
      IF(ALOWFR.GT.0.0.AND.ALOWFR.LE.1.0)GOTO1229
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1211)
 1211 FORMAT('***** ERROR IN DPLOFR--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1212)
 1212 FORMAT('      ILLEGAL INPUT VALUE FOR THE LOWESS FRACTION.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1213)
 1213 FORMAT('      THE LOWESS FRACTION (INDICATING THE SIZE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1214)
 1214 FORMAT('      OF THE LOWESS NEIGHBORHOOD)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1215)
 1215 FORMAT('      MUST BE LARGER THAN 0.0 AND SMALLER THAN 1.0.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1216)
 1216 FORMAT('      SUCH WAS NOT THE CASE HERE.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1217)ALOWFR
 1217 FORMAT('      THE VALUE OF THE LOWESS FRACTION = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1218)
 1218 FORMAT('      CORRECT THIS VALUE VIA THE    LOWESS FRACTION ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1219)
 1219 FORMAT('      COMMAND, AS IN      LOWESS FRACTION .5')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 1229 CONTINUE
C
      IF(IHARG(1).EQ.'PROP')GOTO1230
      IF(IHARG(1).EQ.'PERC')GOTO1230
      GOTO1249
 1230 CONTINUE
      IF(ALOWPR.GT.0.0.AND.ALOWPR.LE.100.0)GOTO1249
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1231)
 1231 FORMAT('***** ERROR IN DPLOFR--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1232)
 1232 FORMAT('      ILLEGAL INPUT VALUE FOR THE LOWESS PROPORTION.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1233)
 1233 FORMAT('      THE LOWESS PROPORTION (INDICATING THE SIZE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1234)
 1234 FORMAT('      OF THE LOWESS NEIGHBORHOOD)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1235)
 1235 FORMAT('      MUST BE LARGER THAN 0 AND SMALLER THAN 100.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1236)
 1236 FORMAT('      SUCH WAS NOT THE CASE HERE.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1237)ALOWPR
 1237 FORMAT('      THE VALUE OF THE LOWESS PROPORTION = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1238)
 1238 FORMAT('      CORRECT THIS VALUE VIA THE  LOWESS PROPORTION ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1239)
 1239 FORMAT('      COMMAND, AS IN      LOWESS PROPORTION 50')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 1249 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      IF(IHARG(1).EQ.'FRAC'.OR.IHARG(1).EQ.'DECI')
     1WRITE(ICOUT,1281)ALOWFR
 1281 FORMAT('THE LOWESS FRACTION (0.0 TO 1.0) HAS JUST BEEN SET ',
     1'TO ',F10.4)
      IF(IHARG(1).EQ.'FRAC'.OR.IHARG(1).EQ.'DECI')
     1CALL DPWRST('XXX','BUG ')
CCCCC THE FOLLOWING 4 LINES WERE INSERTED NOVEMBER 1989
      IF(IHARG(1).EQ.'PROP'.OR.IHARG(1).EQ.'PERC')
     1WRITE(ICOUT,1282)ALOWPR
 1282 FORMAT('THE LOWESS PROPORTION (0 TO 100) HAS JUST BEEN SET ',
     1'TO ',F10.4)
      IF(IHARG(1).EQ.'PROP'.OR.IHARG(1).EQ.'PERC')
     1CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO9000
C
C               ********************************************
C               **  STEP 81--                             **
C               **  TREAT THE    ?    CASE--              **
C               **  DUMP OUT CURRENT AND DEFAULT VALUES.  **
C               ********************************************
C
 8100 CONTINUE
      IFOUND='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8111)ALOWFR
 8111 FORMAT('THE CURRENT LOWESS FRACTION    IS ',F10.4)
      CALL DPWRST('XXX','BUG ')
      ALOWPR=100.0*ALOWFR
      WRITE(ICOUT,8112)ALOWPR
 8112 FORMAT('THE CURRENT LOWESS PROPORTION  IS ',F10.4,' %')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8121)
 8121 FORMAT('THE DEFAULT LOWESS FRACTION    IS 0.1')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8122)
 8122 FORMAT('THE DEFAULT LOWESS PROPORTION  IS 10 %')
      GOTO9000
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPLORE(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  ISUBRO,IBUGG2,IBUGG3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A LORENZ PLOT.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2015/2
C     ORIGINAL VERSION--FEBRUARY  2015.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IFOUN1
      CHARACTER*4 IFOUN2
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASE
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN0
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION ZY(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XIDTE3(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XDESGN(MAXOBV,2)
C
      INCLUDE 'DPCOZZ.INC'
C
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),ZY(1))
      EQUIVALENCE (GARBAG(IGARB3),XTEMP1(1))
      EQUIVALENCE (GARBAG(IGARB4),XTEMP2(1))
      EQUIVALENCE (GARBAG(IGARB5),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB6),XIDTE2(1))
      EQUIVALENCE (GARBAG(IGARB7),XIDTE3(1))
      EQUIVALENCE (GARBAG(IGARB8),XDESGN(1,1))
C
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPLO'
      ISUBN2='RE  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
      MAXV2=1
      MINN2=5
C
C               ***************************************************
C               **  TREAT THE LORENZ PLOT                        **
C               ***************************************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LORE')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLORE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2
   52   FORMAT('ICASPL,IAND1,IAND2 = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ******************************************************
C               **  STEP 1--                                        **
C               **  EXTRACT THE COMMAND                             **
C               **  LOOK FOR ONE OF THE FOLLOWING COMMANDS:         **
C               **    1) LORENZ PLOT Y                              **
C               **    2) MULTIPLE LORENZ PLOT Y1 ... YK             **
C               **    3) REPLICATED LORENZ PLOT Y X1  X2            **
C               ******************************************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LORE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICOM.EQ.'LORE')GOTO89
      IF(ICOM.EQ.'MULT')GOTO89
      IF(ICOM.EQ.'REPL')GOTO89
      GOTO9000
C
   89 CONTINUE
      ICASPL='LORE'
      IMULT='OFF'
      IREPL='OFF'
      ILASTC=-9999
C
      IF(ICOM.EQ.'LORE')THEN
        IFOUN1='YES'
      ELSEIF(ICOM.EQ.'MULT')THEN
        IMULT='ON'
      ELSEIF(ICOM.EQ.'REPL')THEN
        IREPL='ON'
      ENDIF
C
      ISTOP=NUMARG-1
      DO90I=1,NUMARG
        IF(IHARG(I).EQ.'PLOT' .OR. IHARG(I).EQ.'CURV')THEN
          ISTOP=I
          GOTO99
        ENDIF
   90 CONTINUE
   99 CONTINUE
C
      IFOUND='NO'
      DO100I=1,ISTOP
        IF(IHARG(I).EQ.'=')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(IHARG(I).EQ.'LORE')THEN
          IFOUN1='YES'
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
        ELSEIF(IHARG(I).EQ.'PLOT' .OR. IHARG(I).EQ.'CURV')THEN
          IFOUN2='YES'
          ILASTC=MAX(ILASTC,I)
        ELSEIF(IHARG(I).EQ.'REPL')THEN
          IREPL='ON'
        ELSEIF(IHARG(I).EQ.'MULT')THEN
          IMULT='ON'
        ENDIF
  100 CONTINUE
C
      IF(IFOUN1.EQ.'YES' .AND. IFOUN2.EQ.'YES')IFOUND='YES'
      IF(IFOUND.EQ.'NO')GOTO9000
C
      IF(IMULT.EQ.'ON')THEN
        IF(IREPL.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN LORENZ PLOT--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,102)
  102     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"REPLICATION" FOR THE LORENZ PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      IF(ILASTC.GE.1)THEN
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        ILASTC=0
      ENDIF
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'LORE')THEN
        WRITE(ICOUT,112)ICASPL,IMULT,IREPL
  112   FORMAT('ICASPL,IMULT,IREPL = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LORE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='LORENZ PLOT'
      MINNA=1
      MAXNA=100
      MINN2=1
      IFLAGE=1
      IF(IMULT.EQ.'ON')IFLAGE=0
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=3
      IF(IREPL.EQ.'ON')THEN
        MINNVA=2
        MAXNVA=3
        IFLAGM=0
      ELSEIF(IMULT.EQ.'ON')THEN
        MINNVA=1
        MAXNVA=30
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LORE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      NRESP=0
      NREPL=0
      IF(IREPL.EQ.'OFF' .AND. NUMVAR.GT.1)IMULT='ON'
      IF(IMULT.EQ.'ON')THEN
        NRESP=NUMVAR
      ELSEIF(IREPL.EQ.'ON')THEN
        NRESP=1
        NREPL=NUMVAR-NRESP
        IF(NREPL.LT.1 .OR. NREPL.GT.2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,511)
  511     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,512)
  512     FORMAT('      MUST BE BETWEEN 1 AND 2;  SUCH WAS NOT THE ',
     1           'CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,513)NREPL
  513     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ELSE
        NRESP=1
      ENDIF
C
C               ********************************************
C               **  STEP 6--                              **
C               **  GENERATE THE LORENZ PLOTS FOR         **
C               **  THE VARIOUS CASES.                    **
C               ********************************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LORE')THEN
        ISTEPN='6'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,601)NRESP,NREPL
  601   FORMAT('NRESP,NREPL = ',2I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     INCLUDE A LINE BETWEEN (0,0) AND (1,1) FOR ALL CASES
C
      Y(1)=0.0
      X(1)=0.0
      D(1)=1.0
      Y(2)=1.0
      X(2)=1.0
      D(2)=1.0
      NCURVE=1
      NPLOTP=2
C
C               *************************************************
C               **  STEP 7A--                                  **
C               **  CASE 1: NO REPLICATION CASE                **
C               *************************************************
C
      IF(NREPL.EQ.0)THEN
C
        ISTEPN='7A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LORE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
        DO810IRESP=1,NRESP
          NCURVE=NCURVE+1
C
          IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LORE')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,811)IRESP,NCURVE
  811       FORMAT('IRESP,NCURVE = ',2I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,Y1,Y1,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************************
C               **  STEP 8B--                                      **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C               *****************************************************
C
          CALL DPLOR2(Y1,NLOCAL,NCURVE,ICASPL,MINN2,GINI,
     1                Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
          IH='GINI'
          IF(NRESP.EQ.1)THEN
            IH2='    '
          ELSE
            IF(IRESP.LE.9)THEN
              IH2='    '
              WRITE(IH2(1:1),'(I1)')IRESP
            ELSE
              WRITE(IH2(1:2),'(I2)')IRESP
            ENDIF
          ENDIF
          VALUE0=GINI
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGG3,IERROR)
C
  810   CONTINUE
C
C               *****************************************************
C               **  STEP 9A--                                      **
C               **  CASE 3: ONE OR TWO  REPLICATION VARIABLES.     **
C               **          FOR THIS CASE, THE NUMBER OF RESPONSE  **
C               **          VARIABLES MUST BE EXACTLY 1.           **
C               *****************************************************
C
      ELSEIF(NRESP.EQ.1 .AND. NREPL.GE.1)THEN
        ISTEPN='9A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LORE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        J=0
        IMAX=NRIGHT(1)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO910I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO910
          J=J+1
C
C         RESPONSE VARIABLE IN Y1
C
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
C
          ICOLC=1
          DO920IR=1,MIN(NREPL,2)
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XDESGN(J,IR)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XDESGN(J,IR)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XDESGN(J,IR)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XDESGN(J,IR)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XDESGN(J,IR)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XDESGN(J,IR)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XDESGN(J,IR)=TAGPLO(I)
  920     CONTINUE
C
  910   CONTINUE
        NLOCAL=J
C
C       *****************************************************
C       **  STEP 9B--                                      **
C       **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C       **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C       **                                                 **
C       **  FOR THIS CASE, WE NEED TO LOOP THROUGH THE     **
C       **  VARIOUS REPLICATIONS.                          **
C       *****************************************************
C
        ISTEPN='9B'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LORE')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,931)
  931     FORMAT('***** FROM THE MIDDLE  OF FREQ--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,932)ICASPL,NUMVAR,NLOCAL
  932     FORMAT('ICASPL,NUMVAR,NQ = ',A4,2I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO935I=1,NLOCAL
              WRITE(ICOUT,936)I,Y1(I),XDESGN(I,1),XDESGN(I,2)
  936         FORMAT('I,Y1(I),XDESGN(I,1),XDESGN(I,2) = ',I8,3F12.5)
              CALL DPWRST('XXX','BUG ')
  935       CONTINUE
          ENDIF
        ENDIF
C
C       *****************************************************
C       **  STEP 9C--                                      **
C       **  FIND THE DISTINCT VALUES IN EACH OF THE        **
C       **  REPLICATION VARIABLES.                         **
C       *****************************************************
C
        CALL DPFRE5(XDESGN(1,1),XDESGN(1,2),
     1             NREPL,NLOCAL,MAXOBV,
     1             XIDTEM,XIDTE2,
     1             XTEMP1,XTEMP2,
     1             NUMSE1,NUMSE2,
     1             IBUGG3,ISUBRO,IERROR)
C
C       *****************************************************
C       **  STEP 9D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        IF(NREPL.EQ.1)THEN
          J=0
          DO1110ISET1=1,NUMSE1
            K=0
            DO1130I=1,NLOCAL
              IF(XIDTEM(ISET1).EQ.XDESGN(I,1))THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1130       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPLOR2(ZY,NTEMP,NCURVE,ICASPL,MINN2,GINI,
     1                    Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
              IH='GINI'
              IF(NCURVE.LE.10)THEN
                IH2='    '
                WRITE(IH2(1:1),'(I1)')NCURVE-1
              ELSE
                WRITE(IH2(1:2),'(I2)')NCURVE-1
              ENDIF
              VALUE0=GINI
              CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                    IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                    IANS,IWIDTH,IBUGG3,IERROR)
C
            ENDIF
 1110     CONTINUE
        ELSEIF(NREPL.EQ.2)THEN
          J=0
          NTOT=NUMSE1*NUMSE2
          DO1210ISET1=1,NUMSE1
          DO1220ISET2=1,NUMSE2
            K=0
            DO1290I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1290       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPLOR2(ZY,NTEMP,NCURVE,ICASPL,MINN2,GINI,
     1                    Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
              IH='GINI'
              IF(NCURVE.LE.10)THEN
                IH2='    '
                WRITE(IH2(1:1),'(I1)')NCURVE-1
              ELSE
                WRITE(IH2(1:2),'(I2)')NCURVE-1
              ENDIF
              VALUE0=GINI
              CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                    IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                    IANS,IWIDTH,IBUGG3,IERROR)
C
            ENDIF
 1220     CONTINUE
 1210     CONTINUE
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LORE')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLORE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GT.0)THEN
          DO9015I=1,NPLOTP
            WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9015     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLOR2(Y,N,NCURVE,ICASPL,MINN2,GINI,
     1                  Y2,X2,D2,N2,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE A LORENZ PLOT.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     REFERENCES--COBHAM AND SUMNER (2014), "IS INEQUALITY ALL ABOUT THE
C                 TAILS", SIGNIFICANCE, PP. 10-13.
C     VERSION NUMBER--2015/2
C     ORIGINAL VERSION--FEBRUARY  2015.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IWRITE
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
C
      DOUBLE PRECISION DSUM1
      DOUBLE PRECISION DSUM2
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLO'
      ISUBN2='R2  '
      IERROR='NO'
      IWRITE='OFF'
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'LOR2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPLOR2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)N,N2,NCURVE
   72   FORMAT('N,N2,NCURVE = ',3I8)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,Y(I)
   74     FORMAT('I, Y(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.MINN2)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN LORENZ PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)MINN2
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST ',
     1         I8,'.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO60I=1,N
      IF(Y(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,31)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)HOLD
   62 FORMAT('      ALL RESPONSE VALUES ARE IDENTICALLY EQUAL TO ',
     1       G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   69 CONTINUE
C
C               **********************************************
C               **  STEP 2--                                **
C               **  ALGORITHM FOR LORENZ CURVE:             **
C               **     1) SORT THE DATA IN Y                **
C               **     2) X AXIS COORDINATE = i/N           **
C               **     3) Y AXIS COORDINATE = CUSUM/TOTSUM  **
C               **        WHERE:                            **
C               **        CUMSUM=CUMULATIVE SUM OF Y        **
C               **        TOTSUM=SUM OF Y                   **
C               **********************************************
C
      CALL SORT(Y,N,Y)
C
      IF(Y(1).LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,203)
  203   FORMAT('      THE RESPONSE VARIABLE CONTAINS NEGATIVE ',
     1         'NUMBERS AND THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,205)
  205   FORMAT('      LORENZ CURVE IS NOT CURRENTLY SUPPORTED FOR ',
     1         'NEGATIVE NUMBERS.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      DSUM1=0.0D0
      DO210I=1,N
        DSUM1=DSUM1 + DBLE(Y(I))
  210 CONTINUE
C
      NTEMP=0
      N2=N2+1
      NSTART=N2
      Y2(N2)=0.0
      X2(N2)=0.0
      D2(N2)=REAL(NCURVE)
      DSUM2=0.0D0
      DO220I=1,N
        DSUM2=DSUM2 + DBLE(Y(I))
        N2=N2+1
        NTEMP=NTEMP+1
        Y2(N2)=REAL(DSUM2/DSUM1)
        X2(N2)=REAL(I)/REAL(N)
        D2(N2)=REAL(NCURVE)
  220 CONTINUE
      N2=N2+1
      NTEMP=NTEMP+1
      Y2(N2)=1.0
      X2(N2)=1.0
      D2(N2)=REAL(NCURVE)
C
      NUMVAR=2
      CALL INTVEC(Y2(NSTART),X2(NSTART),NTEMP,NUMVAR,IWRITE,XYINT,
     1            IBUGG3,IERROR)
      GINI=0.5 - XYINT
C
      NPLOTV=2
      GOTO9000
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'LOR2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLOR2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,IERROR,N2,DSUM1,GINI
 9012   FORMAT('ICASPL,IERROR,N2,DSUM1,GINI = ',2(A4,2X),I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,Y2(I),X2(I),D2(I)
 9016     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLOST(ILOOST,ILOOLI,NUMLIL,NUMLOS,NUMENS,
     1                  IANSLC,IWIDTH,ICOM,IHARG,IHARG2,NUMARG,IANSLO,
     1                  IWIDLL,MAXCIL,MAXLIL,IERRFA,IGUIFL,ICONCH,
     1                  IBUGLO,ISUBRO,IERROR)
C
C     PURPOSE--STORE A COMMAND LINE IN A LOOP FOR FUTURE EXECUTION.
C     ORIGINAL VERSION--DECEMBER  1982
C     UPDATED         --DECEMBER  1988. NO STORAGE OF COMMENT LINES
C     UPDATED         --DECEMBER  1988. RESTORE CONTROL IF MAX LINES
C     UPDATED         --FEBRUARY  1989. FIX IF > 80 COLUMNS (ALAN)
C     UPDATED         --SEPTEMBER 2012. FATAL ERROR LOGIC IF TOO MANY
C                                       LINES
C     UPDATED         --APRIL     2018. SUPPORT "LOOP WHILE"
C     UPDATED         --AUGUST    2020. FOR STORAGE PURPOSES, SET MAXIMIUM
C                                       LENGTH OF STORED LOOP LINE TO
C                                       256 RATHER THAN 1,024.  IN THIS
C                                       ROUTINE, BREAK UP LINES > 256
C                                       CHARACTERS INTO MULTIPLE LINES
C                                       WITH CONTINUATION CHARACTER
C
C---------------------------------------------------------------------
C
      CHARACTER*4 ILOOST
      CHARACTER*4 IANSLC
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IHARG2
      CHARACTER*4 IANSLO
      CHARACTER*4 IERRFA
      CHARACTER*4 IGUIFL
      CHARACTER*4 ICASE
      CHARACTER*4 ICONCH
      CHARACTER*4 IBUGLO
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION IANSLC(*)
      DIMENSION IHARG(*)
      DIMENSION IHARG2(*)
C
      DIMENSION IANSLO(MAXLIL,MAXCIL)
      DIMENSION IWIDLL(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLO'
      ISUBN2='ST  '
C
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOST')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLOST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGLO,ISUBRO,IERROR,ILOOST,ICOM
   52   FORMAT('IBUGLO,ISUBRO,IERROR,ILOOST,ICOM = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)NUMLOS,NUMENS,IWIDTH
   54   FORMAT('NUMLOS,NUMENS,IWIDTH = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)ILOOLI,NUMLIL,MAXLIL,MAXCIL
   55   FORMAT('ILOOLI,NUMLIL,MAXLIL,MAXCIL = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,59)(IANSLC(J),J=1,MIN(80,IWIDTH))
   59   FORMAT('(IANSLC(J),J=1,IWIDTH) = ',80A1)
        CALL DPWRST('XXX','BUG ')
        DO65I=1,NUMLIL
          WRITE(ICOUT,66)I,IWIDLL(I)
   66     FORMAT('I,IWIDLL(I) = ',I8,I8)
          CALL DPWRST('XXX','BUG ')
          JMAX=IWIDLL(I)
          WRITE(ICOUT,67)(IANSLO(I,J),J=1,MIN(100,JMAX))
   67     FORMAT('(IANSLO(I,J),J=1,JMAX) = ',100A1)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
        DO75I=1,NUMLIL
          WRITE(ICOUT,76)I,IHARG(I),IHARG2(I)
   76     FORMAT('I,IHARG(I),IHARG2(I)) = ',I8,2X,2A4)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **************************************
C               **  STEP 0--                        **
C               **  CHECK LOOP STATUS FOR    STORE  **
C               **  CHECK COMMAND FOR        LOOP   **
C               **  BRANCH ACCORDINGLY.             **
C               **************************************
C
      IF(ICOM.EQ.'LOOP')THEN
C
C               *******************************
C               **  STEP 1--                 **
C               **  TREAT THE CASE WHEN THE  **
C               **  CURRENT COMMAND = LOOP   **
C               *******************************
C
        ISTEPN='1'
        IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOST')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ILOOST='STOR'
        ILOOLI=ILOOLI+1
        IF(ILOOLI.GT.MAXLIL)GOTO4000
        NUMLIL=ILOOLI
        NUMLOS=NUMLOS+1
        IWIDLL(ILOOLI)=IWIDTH
        JMAX=IWIDTH
C
C       2020/08: BREAK INTO MULTIPLE LINES IF NEEDED
C
        NCONCH=1
        IF(ICONCH(4:4).NE.' ')THEN
          NCONCH=4
        ELSEIF(ICONCH(3:3).NE.' ')THEN
          NCONCH=3
        ELSEIF(ICONCH(2:2).NE.' ')THEN
          NCONCH=2
        ENDIF
C
        IF(JMAX.LE.MAXCIL)THEN
          DO1050J=1,JMAX
            IANSLO(ILOOLI,J)=IANSLC(J)
 1050     CONTINUE
        ELSEIF(JMAX.GT.MAXCIL .AND. JMAX.LE.2*MAXCIL)THEN
          JTEMP=MAXCIL-NCONCH
          DO1051J=1,JTEMP
            IANSLO(ILOOLI,J)=IANSLC(J)
 1051     CONTINUE
          DO1052J=JTEMP+1,JTEMP+NCONCH
            IANSLO(ILOOLI,J)=ICONCH(J:J)
 1052     CONTINUE
          IWIDLL(ILOOLI)=JTEMP+NCONCH
          ILOOLI=ILOOLI+1
          DO1053J=JTEMP+1,JMAX
            IANSLO(ILOOLI,J)=IANSLC(J)
 1053     CONTINUE
          IWIDLL(ILOOLI)=JMAX-JTEMP
        ELSEIF(JMAX.GT.2*MAXCIL .AND. JMAX.LE.3*MAXCIL)THEN
          JTEMP=MAXCIL-NCONCH
          DO1061J=1,JTEMP
            IANSLO(ILOOLI,J)=IANSLC(J)
 1061     CONTINUE
          DO1062J=JTEMP+1,JTEMP+NCONCH
            IANSLO(ILOOLI,J)=ICONCH(J:J)
 1062     CONTINUE
          IWIDLL(ILOOLI)=JTEMP+NCONCH
          ILOOLI=ILOOLI+1
          DO1063J=JTEMP+1,2*JTEMP
            IANSLO(ILOOLI,J)=IANSLC(J)
 1063     CONTINUE
          DO1064J=2*JTEMP+1,JTEMP+NCONCH
            IANSLO(ILOOLI,J)=ICONCH(J:J)
 1064     CONTINUE
          IWIDLL(ILOOLI)=JTEMP+NCONCH
          ILOOLI=ILOOLI+1
          ICNT=0
          DO1065J=2*JTEMP+1,JMAX
            IANSLO(ILOOLI,J)=IANSLC(J)
            ICNT=ICNT+1
 1065     CONTINUE
          IWIDLL(ILOOLI)=ICNT
        ELSEIF(JMAX.GT.3*MAXCIL)THEN
          JTEMP=MAXCIL-NCONCH
          DO1071J=1,JTEMP
            IANSLO(ILOOLI,J)=IANSLC(J)
 1071     CONTINUE
          DO1072J=JTEMP+1,JTEMP+NCONCH
            IANSLO(ILOOLI,J)=ICONCH(J:J)
 1072     CONTINUE
          IWIDLL(ILOOLI)=JTEMP+NCONCH
          ILOOLI=ILOOLI+1
          DO1073J=JTEMP+1,2*JTEMP
            IANSLO(ILOOLI,J)=IANSLC(J)
 1073     CONTINUE
          DO1074J=2*JTEMP+1,JTEMP+NCONCH
            IANSLO(ILOOLI,J)=ICONCH(J:J)
 1074     CONTINUE
          IWIDLL(ILOOLI)=JTEMP+NCONCH
          ILOOLI=ILOOLI+1
          DO1075J=2*JTEMP+1,3*JTEMP
            IANSLO(ILOOLI,J)=IANSLC(J)
 1075     CONTINUE
          DO1076J=3*JTEMP+1,JTEMP+NCONCH
            IANSLO(ILOOLI,J)=ICONCH(J:J)
 1076     CONTINUE
          IWIDLL(ILOOLI)=JTEMP+NCONCH
          ILOOLI=ILOOLI+1
          ICNT=0
          DO1077J=3*JTEMP+1,MIN(JMAX,4*MAXCIL)
            IANSLO(ILOOLI,J)=IANSLC(J)
            ICNT=ICNT+1
 1077     CONTINUE
          IWIDLL(ILOOLI)=ICNT
        ENDIF
        GOTO9000
C
      ELSEIF(ILOOST.EQ.'STOR')THEN
C
C               *******************************
C               **  STEP 2--                 **
C               **  TREAT THE CASE WHEN THE  **
C               **  LOOP STATUS = STORE      **
C               *******************************
C
        ISTEPN='2'
        IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOST')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC   THE FOLLOWING LINE WAS ADDED IN DECEMBER 1988
CCCCC   TO AVOID STORING COMMENT LINES IN A LOOP   (DECEMBER 1988)
CCCCC   AND THEREBY SAVE SOME STORAGE              (DECEMBER 1988)
C
        IF(IWIDTH.GE.1.AND.IANSLC(1).EQ.'.')GOTO9000
        ILOOLI=ILOOLI+1
        IF(ILOOLI.GT.MAXLIL)GOTO4000
        NUMLIL=ILOOLI
        IWIDLL(ILOOLI)=IWIDTH
CCCCC   THE FOLLOWING 3 LINES WERE ADDED (FEBRUARY 1989)
CCCCC   TO AVOID PROBLEMS WHEN > 80 COLUMNS  (FEBRUARY 1989)
        JMAX=IWIDTH
        IF(JMAX.GT.MAXCIL)JMAX=MAXCIL
        DO2050J=1,JMAX
          IANSLO(ILOOLI,J)=IANSLC(J)
 2050   CONTINUE
C
C               ************************************
C               **  STEP 3--                      **
C               **  TREAT THE CASE WHEN THE       **
C               **  CURRENT COMMAND = END OF LOOP **
C               ************************************
C
        IF(ICOM.EQ.'END')THEN
          IF((NUMARG.GE.1.AND.IHARG(1).EQ.'LOOP') .OR.
     1       (NUMARG.GE.2.AND.IHARG(2).EQ.'LOOP'))THEN
            NUMENS=NUMENS+1
            IF(NUMENS.EQ.NUMLOS)THEN
              ILOOST='EXEC'
              ILOOLI=0
            ELSE
              ILOOST='STOR'
            ENDIF
          ENDIF
          GOTO9000
        ELSE
          GOTO9000
        ENDIF
      ELSE
        GOTO9000
      ENDIF
C
C               ****************************
C               **  STEP 4--              **
C               **  TREAT THE ERROR CASE  **
C               ****************************
C
 4000 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,4011)
 4011 FORMAT('***** ERROR IN LOOP STORE--')
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,4012)
 4012 FORMAT('      THE TOTAL NUMBER OF LINES IN ALL NESTED LOOPS')
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,4014)MAXLIL
 4014 FORMAT('      HAS JUST EXCEEDED THE ALLOWABLE MAXIMUM (',I8,')')
      CALL DPWRST('XXX','WRIT')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,4015)
 4015   FORMAT('      THE CURRENT LINE BEING PROCESSED IS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,4016)(IANSLC(J),J=1,MIN(80,IWIDTH))
 4016   FORMAT(6X,80A1)
        CALL DPWRST('XXX','WRIT')
      ENDIF
      IERROR='YES'
C
C     2012/09: AT JIM's REQUEST, PROMPT IF YOU WANT TO
C              CONTINUE IF THIS ERROR ENCOUNTERED.
C
      IF(IERROR.EQ.'YES')THEN
        ICASE='LOOP'
        CALL DPERRO(IERRFA,IANSLC,IWIDTH,IGUIFL,
     1              ISUBN1,ISUBN2,ICASE,
     1              IBUGLO,ISUBRO,IERROR)
      ENDIF
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED DECEMBER 1988
CCCCC TO GIVE CONTROL BACK TO THE USER (DECEMBER 1988)
CCCCC IN CASE HAVE EXCEEDED MAX NUMBER OF LOOP LINES (DECEMBER 1988)
C
      ILOOST='OFF'
      ILOOLI=0
      NUMLIL=0
      NUMLOS=0
      NUMENS=0
C
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGLO.EQ.'ON'.OR.ISUBRO.EQ.'LOST')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLOST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IERROR,NUMLOS,NUMENS,IWIDTH
 9014   FORMAT('IERROR,NUMLOS,NUMENS,IWIDTH = ',A4,2X,3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)ILOOLI,NUMLIL,MAXLIL,MAXCIL
 9015   FORMAT('ILOOLI,NUMLIL,MAXLIL,MAXCIL = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9019)(IANSLC(J),J=1,MIN(80,IWIDTH))
 9019   FORMAT('(IANSLC(J),J=1,IWIDTH) = ',80A1)
        CALL DPWRST('XXX','BUG ')
        DO9025I=1,NUMLIL
          WRITE(ICOUT,9026)I,IWIDLL(I)
 9026     FORMAT('I,IWIDLL(I) = ',I8,I8)
          CALL DPWRST('XXX','BUG ')
          JMAX=IWIDLL(I)
          WRITE(ICOUT,9027)(IANSLO(I,J),J=1,MIN(80,JMAX))
 9027     FORMAT('(IANSLO(I,J),J=1,JMAX) = ',80A1)
          CALL DPWRST('XXX','BUG ')
 9025   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLOW(ALOWFR,ALOWDG,ICAPSW,IFORSW,
CCCCC ADD ARGUMENT FOR LOWESS DEGREE.  MARCH 1994.
CCCCC SUBROUTINE DPLOW(ALOWFR,
     1                 XTEMP3,XTEMP4,XTEMP1,XTEMP2,MAXNXT,
     1                 IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT A LOWESS FIT OF Y ON X.  (USEFUL FOR ADDING A
C              ROBUST SMOOTH LINE TO A SCATTER PLOT)
C     NOTE--ALOWFR IS A NUMBER BETWEEN 0.0 AND 1.0
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/2
C     ORIGINAL VERSION--FEBRUARY  1988.
C     UPDATED         --MARCH     1988. ADD LOFCDF
C     UPDATED         --JANUARY   1988. DECLARE ICTAR1&2 AS CHARACTER
C     UPDATED         --NOVEMBER  1989. ALLOW SINGLE VARIABLE
C     UPDATED         --NOVEMBER  1989. CHECK LOWESS FRACTION 0 TO 1
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C     UPDATED         --APRIL     1992. COMMENT OUT 2 DEBUG LINES
C     UPDATED         --APRIL     1992. NPLOTP TO NS IN DEBUG SECTION
C     UPDATED         --MARCH     1994. ADD ARGUMENT
C     UPDATED         --FEBRUARY  1999. ADD SEASONAL LOESS
C     UPDATED         --FEBRUARY  2012. USE DPPARS
C     UPDATED         --JANUARY   2024. TWEAK PARSING OF SEASONAL
C                                       LOWESS COMMAND
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IREP
      CHARACTER*4 IREPU
      CHARACTER*4 IRESU
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IOP
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
C
      LOGICAL ROBUST
C
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION W(MAXOBV)
      DIMENSION XTEMP5(MAXOBV)
      DIMENSION XTEMP6(MAXOBV)
      DIMENSION XTEMP7(MAXOBV)
      DIMENSION XWORK(10*MAXOBV)
      DIMENSION PRED2(MAXOBV)
      DIMENSION RES2(MAXOBV)
C
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y2(1))
      EQUIVALENCE (GARBAG(IGARB3),W(1))
      EQUIVALENCE (GARBAG(IGARB4),PRED2(1))
      EQUIVALENCE (GARBAG(IGARB5),RES2(1))
      EQUIVALENCE (GARBAG(IGARB6),XTEMP5(1))
      EQUIVALENCE (GARBAG(IGARB7),XTEMP6(1))
      EQUIVALENCE (GARBAG(IGARB8),XTEMP7(1))
      EQUIVALENCE (GARBAG(IGARB9),XWORK(1))
CCCCC END CHANGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLO'
      ISUBN2='W   '
C
      IFOUND='NO'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLOW')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLOW--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   54   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,57)IFOUND,IERROR,MAXN,MAXNXT,ALOWFR
   57   FORMAT('IFOUND,IERROR,MAXN,MAXNXT,ALOWFR = ',2(A4,2X),2I8,G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***********************************
C               **  TREAT THE LOWESS    FIT CASE **
C               ***********************************
C
C               ***************************
C               **  STEP 11--            **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
CCCCC FEBRUARY 1999.  ADD SUPPORT FOR SEASONAL LOWESS COMMAND.
C
      ISTEPN='11'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLOW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASAN='PLOW'
      ILASTC=0
      IF(ICOM.EQ.'LOWE'.OR.ICOM.EQ.'LOES')THEN
        IF(NUMARG.GE.1.AND.IHARG(1).EQ.'FIT')THEN
          ILASTC=1
        ELSEIF(NUMARG.GE.1.AND.IHARG(1).EQ.'SMOO')THEN
          ILASTC=1
        ENDIF
      ELSEIF(ICOM.EQ.'SEAS')THEN
        IF(NUMARG.GE.2.AND.
     1    (IHARG(1).EQ.'LOWE'.OR.IHARG(1).EQ.'LOES').AND.
     1     IHARG(2).EQ.'FIT ')THEN
          ILASTC=ILASTC+2
          ICASAN='SLOW'
        ELSEIF(NUMARG.GE.2.AND.
     1    (IHARG(1).EQ.'LOWE'.OR.IHARG(1).EQ.'LOES').AND.
     1     IHARG(2).EQ.'SMOO')THEN
          ILASTC=ILASTC+2
          ICASAN='SLOW'
        ELSEIF(NUMARG.GE.1.AND.
     1    (IHARG(1).EQ.'LOWE'.OR.IHARG(1).EQ.'LOES'))THEN
          ILASTC=1
          ICASAN='SLOW'
        ELSE
          IFOUND='NO'
          GOTO9000
        ENDIF
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      IFOUND='YES'
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLOW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='LOWESS'
      MINN2=2
      MINNA=1
      MAXNA=100
      MINNVA=1
      MAXNVA=2
      IFLAGE=1
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      IF(ICASAN.EQ.'SLOW')THEN
        INAME='SEASONAL LOWESS'
        MAXNVA=1
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLOW')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,181)
  181   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,182)NQ,NUMVAR,IMULT
  182   FORMAT('NQ,NUMVAR,IMULT = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO185I=1,NUMVAR
            WRITE(ICOUT,187)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  187       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  185     CONTINUE
        ENDIF
      ENDIF
C
CCCCC THE FOLLOWING SECTION WAS INSERTED NOVEMBER 1989
C               **************************************************
C               **  STEP 10--                                   **
C               **  CHECK THAT THE LOWESS FRACTION              **
C               **  IS BETWEEN 0 AND 1 (EXCLUSIVELY)            **
C               **************************************************
C
      IF(ALOWFR.LE.0.0.OR.ALOWFR.GT.1.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1011)
 1011   FORMAT('***** ERROR IN LOWESS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1012)
 1012   FORMAT('      THE VALUE OF THE LOWESS FRACTION IS OUTSIDE THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1013)
 1013   FORMAT('     (0,1) INTERVAL (THIS VALUE SPECIFIES THE SIZE OF')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1014)
 1014   FORMAT('      OF THE LOWESS NEIGHBORHOOD)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1017)ALOWFR
 1017   FORMAT('      THE VALUE OF THE LOWESS FRACTION = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1018)
 1018   FORMAT('      CORRECT THIS VALUE VIA THE    LOWESS FRACTION ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1019)
 1019   FORMAT('      COMMAND, AS IN      LOWESS FRACTION .5')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 33--                               **
C               **  FORM THE SUBSETTED VARIABLES            **
C               **       Y1(.)                              **
C               **       Y2(.)                              **
C               **  CONTAINING                              **
C               **       THE VERTICAL AXIS VARIABLE         **
C               **       THE HORIZONTAL AXIS VARIABLE       **
C               **  RESPECTIVELY.                           **
C               **********************************************
C
      ISTEPN='33'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLOW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOL=1
      CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y1,Y2,Y1,NS,NS,NS,ICASE,
     1            IBUGA3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(NUMVAR.EQ.1)THEN
        DO3310I=1,NS
          Y2(I)=REAL(I)
 3310   CONTINUE
      ENDIF
C
C               ******************************************************
C               **  STEP 41--                                       **
C               **  CARRY OUT THE LOWESS FIT                        **
C               ******************************************************
C
      ISTEPN='41'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLOW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC MARCH 1994.  ADD ARGUMENT.
CCCCC CALL DPLOW2(Y1,Y2,W,NS,ALOWFR,ALOWDG,
      IF(ICASAN.EQ.'PLOW')THEN
        CALL DPLOW2(Y1,Y2,W,NS,ALOWFR,ALOWDG,ICAPSW,ICAPTY,IFORSW,
     1              XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1              XTEMP6,XTEMP7,MAXNXT,
     1              IREP,REPSD,REPDF,RESSD,RESDF,PRED2,RES2,ALFCDF,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASAN.EQ.'SLOW')THEN
C
        IHP='PERI'
        IHP2='OD  '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1    IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1    ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          PERIOD=12.0
        ELSE
          PERIOD=VALUE(ILOCP)
        ENDIF
        NP=INT(PERIOD+0.5)
C
        IHP='STLW'
        IHP2='IDTH'
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1    IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1    ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          NWIDTH=NS/10
        ELSE
          NWIDTH=INT(VALUE(ILOCP)+0.5)
        ENDIF
C
        IHP='STLS'
        IHP2='DEG '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1    IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1    ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          ISDEG=0
        ELSE
          ISDEG=INT(VALUE(ILOCP)+0.5)
        ENDIF
C
        IHP='STLT'
        IHP2='DEG '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1    IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1    ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          ITDEG=0
        ELSE
          ITDEG=INT(VALUE(ILOCP)+0.5)
        ENDIF
C
        IHP='STLT'
        IHP2='DEG '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1    IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1    ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          ROBUST=.TRUE.
        ELSE
          ROBUST=.TRUE.
          IF(INT(VALUE(ILOCP)+0.5).EQ.1)ROBUST=.FALSE.
        ENDIF
C
        CALL STLEZ(Y1,NS,NP,NWIDTH,ISDEG,ITDEG,ROBUST,NO,
     1             W,XTEMP1,XTEMP2,XWORK)
        DO5010I=1,NS
          PRED2(I)=XTEMP1(I)+XTEMP2(I)
          RES2(I)=Y1(I)-PRED2(I)
 5010   CONTINUE
C
C               ***************************************
C               **  STEP 51--                        **
C               **  WRITE SEASONAL, TREND TO FILE    **
C               ***************************************
C
        IOP='OPEN'
        IFLG1=1
        IFLG2=0
        IFLG3=0
        IFLG4=0
        IFLG5=0
        CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        DO5110I=1,NS
          WRITE(IOUNI1,5111)XTEMP1(I),XTEMP2(I)
 5111     FORMAT(E15.7,E15.7)
 5110   CONTINUE
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,5192)
 5192     FORMAT(6X,'SEASONAL AND TREND COMPONENTS WRITTEN TO FILE ',
     1           'DPST1F.DAT')
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
        IOP='CLOS'
        CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGA3,ISUBRO,IERROR)
      ENDIF
C
C               ***************************************
C               **  STEP 52--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='42'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLOW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOLPR=MAXCP1
      ICOLRE=MAXCP2
      IREPU='ON'
      IRESU='ON'
      CALL UPDAPR(ICOLPR,ICOLRE,PRED2,RES2,PRED,RES,ISUB,NRIGHT(1),
     1            IREPU,REPSD,REPDF,IRESU,RESSD,RESDF,ALFCDF,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,ILOCN,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLOW')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLOW--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)ICASAN,NS,MAXN,MAXNXT,NUMVAR
 9014   FORMAT('ICASAN,NS,MAXN,MAXNXT,NUMVAR = ',A4,2X,5I8)
        CALL DPWRST('XXX','BUG ')
        IF(NS.GT.0)THEN
          DO9020I=1,NS
            WRITE(ICOUT,9021)I,Y1(I),Y2(I),PRED2(I),RES2(I),ISUB(I)
 9021       FORMAT('I,Y1(I),Y2(I),PRED2(I),RES2(I),ISUB(I) = ',
     1             I8,4G15.7,I8)
            CALL DPWRST('XXX','BUG ')
 9020     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLOW2(Y,X,W,N,ALOWFR,ALOWDG,ICAPSW,ICAPTY,IFORSW,
CCCCC MARCH 1994.  ADD ARGUMENT
CCCCC SUBROUTINE DPLOW2(Y,X,W,N,ALOWFR,
     1                  XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                  XTEMP6,XTEMP7,MAXNXT,
     1                  IREP,REPSD,REPDF,RESSD,RESDF,PRED2,RES2,ALFCDF,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--88/2
C     ORIGINAL VERSION--FEBRUARY  1988.
C     UPDATED         --MARCH     1988. ADD LOFCDF
C     UPDATED         --NOVEMBER  1989. RESIDUAL SD
C     UPDATED         --FEBRUARY  2012. USE DPDTA1 TO PRINT OUTPUT
C     UPDATED         --JULY      2019. CALL LIST TO DPREPS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IREP
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION W(*)
C
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
      DIMENSION XTEMP6(*)
      DIMENSION XTEMP7(*)
C
      DIMENSION PRED2(*)
      DIMENSION RES2(*)
C
      PARAMETER(NUMCLI=10)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=30)
      CHARACTER*40 ITITLE
      CHARACTER*40 ITITLZ
      CHARACTER*40 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLO'
      ISUBN2='W2  '
      IERROR='NO'
C
      RESSD=0.0
      RESDF=0.0
      REPSD=0.0
      REPDF=0.0
      ALFCDF=(-999.99)
      CDF2=-999.99
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOW2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLOW2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)N,IBUGA3
   52   FORMAT('N,IBUGA3 = ',I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,Y(I),X(I),W(I)
   56     FORMAT('I,Y(I),X(I),W(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
C               ********************************************************
C               **  STEP 11--                                         **
C               **  PRINT OUT THE HEADER AND PRELIMINARY INFORMATION  **
C               **  FOR THE FIT                                       **
C               ********************************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOW2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      AN=N
      NN=INT(ALOWFR*AN+0.5)
C
      IF(IPRINT.EQ.'ON')THEN
        ITITLE='Lowess Fit'
        NCTITL=10
        ITITLZ=' '
        NCTITZ=0
C
        ICNT=1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Sample Size:'
        NCTEXT(ICNT)=12
        AVALUE(ICNT)=REAL(N)
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Lowess Fraction (0 to 1):'
        NCTEXT(ICNT)=25
        AVALUE(ICNT)=ALOWFR
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Lowess Degree (1 or 2):'
        NCTEXT(ICNT)=23
        IJUNK=INT(ALOWDG+0.1)
        AVALUE(ICNT)=REAL(IJUNK)
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Neighborhood Size:'
        NCTEXT(ICNT)=18
        AVALUE(ICNT)=REAL(NN)
        IDIGIT(ICNT)=0
      ENDIF
C
C               ********************************************************
C               **  STEP 12--                                         **
C               **  CHECK FOR REPLICATION AND IF EXISTENT COMPUTE     **
C               **  A (MODEL-FREE) REPLICATION STANDARD DEVIATION.    **
C               ********************************************************
C
      ISTEPN='12'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOW2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMVAR=1
      CALL DPREPS(Y,X,N,N,NUMVAR,
     1            XTEMP6,XTEMP7,
     1            IREP,REPSS,REPMS,REPSD,REPDF,NUMSET,IBUGA3,IERROR)
      IREPDF=INT(REPDF+0.5)
C
      IF(IPRINT.EQ.'ON')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        IF(IREP.EQ.'NO')THEN
          ICNT=ICNT+1
          ITEXT(ICNT)='No Replication Case'
          NCTEXT(ICNT)=19
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
        ELSE
          ICNT=ICNT+1
          ITEXT(ICNT)='Replication Case'
          NCTEXT(ICNT)=16
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
        ENDIF
        ICNT=ICNT+1
        ITEXT(ICNT)='Number of Distinct Subsets:'
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=REAL(NUMSET)
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
C               *************************************************
C               **  STEP 21--                                  **
C               **  CARRY OUT THE LOWESS FIT                   **
C               *************************************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOW2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C
CCCCC MARCH 1994.  ADD ARGUMENT.
CCCCC CALL LOWESS(Y,X,N,ALOWFR,
      CALL LOWESS(Y,X,N,ALOWFR,ALOWDG,
     1            XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1            XTEMP6,XTEMP7,MAXNXT,
     1            PRED2,RES2,ISUBRO,IBUGA3,IERROR)
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOW2')THEN
        WRITE(ICOUT,2111)N
 2111   FORMAT('N = ',I8)
        CALL DPWRST('XXX','BUG ')
        DO2112I=1,N
          WRITE(ICOUT,2113)I,Y(I),PRED2(I),RES2(I)
 2113     FORMAT('I,Y(I),PRED2(I),RES2(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
 2112   CONTINUE
      ENDIF
C
CCCCC THE FOLLOWING SECTION WAS COMMENTED OUT NOVEMBER 1989
CCCCC RESSD=SD
CCCCC RESDF=NDF
CCCCC RESMS=RESSD*RESSD
CCCCC RESSS=RESMS*RESDF
C
CCCCC THE FOLLOWING SECTION WAS INSERTED NOVEMBER 1989
      DENOM=N-1
      RESSS=0.0
      DO2120I=1,N
        RESSS=RESSS+RES2(I)**2
 2120 CONTINUE
      RESMS=RESSS/DENOM
      S=0.0
      IF(RESMS.GT.0.0)S=SQRT(RESMS)
      RESDF=DENOM
      IRESDF=INT(RESDF+0.5)
      RESSD=S
CCCCC RESAAR=SUMAB/AN
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOW2')THEN
        WRITE(ICOUT,2121)RESSD,RESDF,RESMS,RESSS
 2121   FORMAT('RESSD,RESDF,RESMS,RESSS = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *******************************************************
C               **  STEP 31--                                        **
C               **  PRINT OUT THE PARAMETER ESTIMATES AND THEIR      **
C               **  STANDARD DEVIATIONS.  ALSO PRINT OUT THE         **
C               **  RESIDUAL STANDARD DEVIATION AND THE GOODNESS OF  **
C               **  FIT INFORMATION.                                 **
C               *******************************************************
C
      IFITDF=IRESDF-IREPDF
      IF(IREP.EQ.'YES' .AND. IFITDF.GE.1)THEN
        FITDF=IFITDF
        FITSS=RESSS-REPSS
        FITMS=100000.0
        IF(FITDF.GT.0.0)FITMS=FITSS/FITDF
        FSTAT=100000.0
        IF(REPMS.GT.0.0)FSTAT=FITMS/REPMS
        CALL FCDF(FSTAT,IFITDF,IREPDF,CDF)
        CDF2=100.0*CDF
        ALFCDF=CDF
      ENDIF
C
      IF(IPRINT.EQ.'ON')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Residual Standard Deviation:'
        NCTEXT(ICNT)=28
        AVALUE(ICNT)=RESSD
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Residual Degrees of Freedom:'
        NCTEXT(ICNT)=28
        AVALUE(ICNT)=REAL(IRESDF)
        IDIGIT(ICNT)=0
C
        IF(IREP.EQ.'YES')THEN
          ICNT=ICNT+1
          ITEXT(ICNT)='Replication Standard Deviation:'
          NCTEXT(ICNT)=31
          AVALUE(ICNT)=REPSD
          IDIGIT(ICNT)=NUMDIG
          ICNT=ICNT+1
          ITEXT(ICNT)='Replication Degrees of Freedom:'
          NCTEXT(ICNT)=31
          AVALUE(ICNT)=REAL(IREPDF)
          IDIGIT(ICNT)=0
C
          IFITDF=IRESDF-IREPDF
          IF(IFITDF.LT.1)THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='The Lack of Fit F Test cannot be done'
            NCTEXT(ICNT)=37
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='because there are 0 degrees of freedom'
            NCTEXT(ICNT)=38
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='in the numerator of the F ratio.  This'
            NCTEXT(ICNT)=38
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='This happens when the number of'
            NCTEXT(ICNT)=31
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='parameters fitted is identical to the'
            NCTEXT(ICNT)=37
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='number of distinct subsets.'
            NCTEXT(ICNT)=27
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ELSE
            ICNT=ICNT+1
            ITEXT(ICNT)='Lack of Fit F Ratio:'
            NCTEXT(ICNT)=20
            AVALUE(ICNT)=FSTAT
            IDIGIT(ICNT)=NUMDIG
            ICNT=ICNT+1
            ITEXT(ICNT)='Lack of Fit F CDF (%):'
            NCTEXT(ICNT)=22
            AVALUE(ICNT)=CDF2
            IDIGIT(ICNT)=NUMDIG
            ICNT=ICNT+1
            ITEXT(ICNT)='Lack of Fit Degrees of Freedom 1:'
            NCTEXT(ICNT)=33
            AVALUE(ICNT)=REAL(IFITDF)
            IDIGIT(ICNT)=0
            ICNT=ICNT+1
            ITEXT(ICNT)='Lack of Fit Degrees of Freedom 2:'
            NCTEXT(ICNT)=33
            AVALUE(ICNT)=REAL(IREPDF)
            IDIGIT(ICNT)=0
          ENDIF
        ENDIF
C
        NUMROW=ICNT
        DO2410I=1,NUMROW
          NTOT(I)=15
 2410   CONTINUE
C
        IFRST=.TRUE.
        ILAST=.TRUE.
        CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,
     1              NCTEXT,AVALUE,IDIGIT,
     1              NTOT,NUMROW,
     1              ICAPSW,ICAPTY,ILAST,IFRST,
     1              ISUBRO,IBUGA3,IERROR)
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOW2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLOW2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IERROR,N,NUMVAR
 9013   FORMAT('IERROR,N,NUMVAR = ',A4,2X,2I8)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,N
          WRITE(ICOUT,9021)I,PRED2(I),RES2(I)
 9021     FORMAT('I,PRED2(I),RES2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLRDI(MAXNXT,ICAPSW,IFORSW,ISEED,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--DISTINGUISH BETWEEN TWO DISTRIBUTIONS BASED ON THE
C              RATIO OF THE LIKELIHOOD FUNCTIONS.  IN MANY CASES,
C              SEVERAL DISTRIBUTIONS MAY BOTH FIT A GIVEN DATASET.
C              THE LIKELIHOOD RATIO TEST PROVIDES A METHOD FOR
C              CHOOSING BETWEEN THE TWO.  THIS IS GENERALLY MORE
C              POWERFUL THAN K-S OR ANDERSON-DARLING TEST BEACAUSE
C              WE ARE TESTING A SPECIFIC ALTERNATIVE RATHER THAN
C              ANY ALTERNATIVE DISTRIBUTION.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2014/5
C     ORIGINAL VERSION--MAY       2014.
C     UPDATED         --JULY      2019. TWEAK SCRATCH STORAGE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICASE
      CHARACTER*4 IFLAGU
      CHARACTER*4 IMULT
C
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IREPL
      CHARACTER*4 IRANSV
      CHARACTER*4 IRELAT
C
      CHARACTER*60 IDIST1
      CHARACTER*60 IDIST2
      CHARACTER*40 INAME
C
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      CHARACTER*4 IVARID(7)
      CHARACTER*4 IVARI2(7)
      REAL PVAR(MAXSPN)
      REAL PID(7)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
      DIMENSION TEMP5(MAXOBV)
      DIMENSION TEMP6(MAXOBV)
      DIMENSION TEMP7(MAXOBV)
      DIMENSION YTEMP(MAXOBV)
      DIMENSION YSTAT(MAXOBV)
C
      DIMENSION XDESGN(MAXOBV,6)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XIDTE3(MAXOBV)
      DIMENSION XIDTE4(MAXOBV)
      DIMENSION XIDTE5(MAXOBV)
      DIMENSION XIDTE6(MAXOBV)
      DIMENSION ZY(MAXOBV)
C
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
      DOUBLE PRECISION DTEMP3(MAXOBV)
C
      DIMENSION ITEMP1(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZD.INC'
      INCLUDE 'DPCOZI.INC'
C
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB3),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB4),TEMP3(1))
      EQUIVALENCE (GARBAG(IGARB5),TEMP4(1))
      EQUIVALENCE (GARBAG(IGARB6),TEMP5(1))
      EQUIVALENCE (GARBAG(IGARB7),TEMP6(1))
      EQUIVALENCE (GARBAG(IGARB8),TEMP7(1))
      EQUIVALENCE (GARBAG(IGARB9),YTEMP(1))
      EQUIVALENCE (GARBAG(IGAR10),XIDTEM(1))
      EQUIVALENCE (GARBAG(JGAR11),XIDTE2(1))
      EQUIVALENCE (GARBAG(JGAR12),XIDTE3(1))
      EQUIVALENCE (GARBAG(JGAR13),XIDTE4(1))
      EQUIVALENCE (GARBAG(JGAR14),XIDTE5(1))
      EQUIVALENCE (GARBAG(JGAR15),XIDTE6(1))
      EQUIVALENCE (GARBAG(JGAR16),ZY(1))
      EQUIVALENCE (GARBAG(JGAR17),YSTAT(1))
      EQUIVALENCE (GARBAG(JGAR18),XDESGN(1,1))
      EQUIVALENCE (DGARBG(IDGAR1),DTEMP1(1))
      EQUIVALENCE (DGARBG(IDGAR2),DTEMP2(1))
      EQUIVALENCE (DGARBG(IDGAR3),DTEMP3(1))
      EQUIVALENCE (IGARBG(IDGAR1),ITEMP1(1))
C
C-----COMMON----------------------------------------------------------
C
      COMMON/ISED/ISED1,ISED2,ISED3,ISED4,ISED5,ISED6,
     1            ISED7,ISED8,ISED9,ISED10,ISED11
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOS2.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ICASAN='    '
      ICASPL='    '
      ICASP2='    '
      IRELAT='OFF'
      IREPL='OFF'
      IMULT='OFF'
      IRANSV=IRANAL
      IRANAL='FIBC'
      ISEESV=ISEED
      ISEED=16411
      NSAVE=-9999
C
      ISUBN1='DPLR'
      ISUBN2='DI  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      MINN2=5
C
C               ***************************************************
C               **  TREAT THE <DIST1>  <DIST2>  DISTRIBUTIONAL   **
C               **            LIKELIHOOD RATIO TEST     CASE     **
C               ***************************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LRDI')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLRDI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGA2,IBUGA3,IBUGQ,MAXNXT
   53   FORMAT('IBUGA2,IBUGA3,IBUGQ,MAXNXT = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *****************************
C               **  STEP 1--               **
C               **  EXTRACT THE COMMAND    **
C               *****************************
C
C     LOOK FOR THE WORDS "DISTRIBUTIONAL LIKELIHOOD RATIO".  ALSO LOOK
C     ALSO LOOK FOR OPTIONAL KEYWORDS "REPLICATION",
C     AND "MULTIPLE". AND "TEST"
C
C     ALSO LOOK FOR THE WORD "AND".  THIS IS USED TO SEPARATE THE
C     TWO DISTRIBUTIONAL NAMES.  NOTE THAT IF BOTH DISTRIBUTIONS ARE
C     A SINGLE NAME, THEN THIS KEYWORD MAY BE OMITTED.  HOWEVER, IF
C     THIS IS NOT THE CASE AND THE "AND" KEYWORD IS NOT FOUND, REPORT
C     AN ERROR.
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILASTC=9999
      ILASTZ=9999
      ILASTA=9999
      IFOUND='NO'
      DO100I=1,NUMARG-1
        IF(IHARG(I).EQ.'DIST' .AND. IHARG(I+1).EQ.'LIKE' .AND.
     1     IHARG(I+2).EQ.'RATI')THEN
          IFOUND='YES'
          ICASAN='DLKR'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+3
        ELSEIF(IHARG(I).EQ.'REPL')THEN
          IREPL='ON'
          ILASTC=MIN(ILASTC,I-1)
        ELSEIF(IHARG(I).EQ.'MULT')THEN
          IMULT='ON'
          ILASTC=MIN(ILASTC,I-1)
C
        ELSEIF(IHARG(I).EQ.'TEST')THEN
          IF(IHARG(I-3).EQ.'DIST' .AND. IHARG(I-2).EQ.'LIKE' .AND.
     1           IHARG(I-1).EQ.'RATI')THEN
            ILASTZ=I+1
          ENDIF
        ELSEIF(IHARG(I).EQ.'AND ')THEN
          ILASTA=I
        ENDIF
  100 CONTINUE
C
      IF(IFOUND.EQ.'NO')GOTO9000
      IF(IMULT.EQ.'ON')THEN
        IF(IREPL.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN DISTRIBUTIONAL LIKELIHOOD RATIO TEST')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,102)
  102     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"REPLICATION" FOR THIS COMMAND.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      IF(ILASTA.EQ.9999 .AND. ILASTC.NE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,112)
  112   FORMAT('      AND KEYWORD TO SEPARATE DISTRIBUTION NAMES ',
     1         'NOT FOUND.')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ***************************************************
C               **  STEP 2--EXTRACT THE FIRST DISTRIBUTION NAME  **
C               ***************************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,211)IMULT,IREPL,ILASTC,ILASTZ
  211   FORMAT('IMULT,IREPL,ILASTC,ILASTZ = ',2(A4,2X),2I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      JMIN=0
      IF(ILASTA.NE.9999)THEN
        JMAX=ILASTA-1
      ELSE
        JMAX=0
      ENDIF
C
      IDIST1=' '
      CALL EXTDIS(ICOM,ICOM2,IHARG,IHARG2,NUMARG,JMIN,JMAX,
     1            ICASPL,IDIST1,NUMSHA,IFOUND,ILOCV,
     1            ISUBRO,IBUGA3,IERROR)
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')THEN
        WRITE(ICOUT,252)ICASPL,NUMSHA,IDIST1
  252   FORMAT('AFTER EXTDIS: ICASPL,NUMSHA,IDIST1 = ',A4,2X,I8,2X,A60)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFOUND.EQ.'NO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,262)
  262   FORMAT('      NO MATCH FOUND FOR THE FIRST DISTRIBUTION NAME.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ***************************************************
C               **  STEP 3--EXTRACT THE SECOND DISTRIBUTION NAME **
C               ***************************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,271)IMULT,IREPL,ILASTC,ILASTZ,ILASTA
  271   FORMAT('IMULT,IREPL,ILASTC,ILASTZ,ILASTA = ',2(A4,2X),3I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ILASTA.NE.9999)THEN
        JMIN=ILASTA+1
      ELSE
        JMIN=1
      ENDIF
      JMAX=ILASTC
C
      IDIST2=' '
      CALL EXTDIS(ICOM,ICOM2,IHARG,IHARG2,NUMARG,JMIN,JMAX,
     1            ICASP2,IDIST2,NUMSHA,IFOUND,ILOCV,
     1            ISUBRO,IBUGA3,IERROR)
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')THEN
        WRITE(ICOUT,254)ICASP2,NUMSHA,IDIST2
  254   FORMAT('AFTER EXTDIS: ICASP2,NUMSHA,IDIST2 = ',A4,2X,I8,2X,A60)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFOUND.EQ.'NO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,264)
  264   FORMAT('      NO MATCH FOUND FOR SECOND DISTRIBUTION NAME.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSE
        ISHIFT=ILASTZ-1
        IF(ISHIFT.GT.0)THEN
          CALL ADJUST(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        ENDIF
      ENDIF
C
C               *********************************
C               **  STEP 4--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='4'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='DISTRIBUTIONAL LIKELIHOOD RATIO TEST'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IF(IMULT.EQ.'ON')IFLAGE=0
      IFLAGM=1
      IF(IREPL.EQ.'ON')IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=-99
      MAXNVA=-99
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ***********************************************
C               **  STEP 5--                                 **
C               **  DETERMINE:                               **
C               **  1) NUMBER OF REPLICATION VARIABLES (0-6) **
C               **  2) NUMBER OF CENSORING   VARIABLES (0-1) **
C               **  3) NUMBER OF GROUPING    VARIABLES (0-2) **
C               **  4) NUMBER OF RESPONSE    VARIABLES (>= 1)**
C               ***********************************************
C
      ISTEPN='5'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NRESP=0
      NREPL=0
      NRESP=NUMVAR
      IF(IREPL.EQ.'ON')THEN
        NRESP=1
        NREPL=NUMVAR-NRESP
        IF(NREPL.LT.1 .OR. NREPL.GT.6)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,511)
  511     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,513)NREPL
  513     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
C               ***********************************************
C               **  STEP 6--                                 **
C               **  GENERATE THE DISTRIBUTIONAL LIKELIHOOD   **
C               **  RATIO TEST       FOR THE VARIOUS CASES.  **
C               ***********************************************
C
      ISTEPN='6'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ******************************************
C               **  STEP 7A--                           **
C               **  CASE 1: NO REPLICATION CASE         **
C               ******************************************
C
      IF(NRESP.GE.1 .AND. IREPL.EQ.'OFF')THEN
        ISTEPN='7A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
        NCURVE=0
        DO710IRESP=1,NRESP
          NCURVE=NCURVE+1
C
          IINDX=ICOLR(IRESP)
          PID(1)=CPUMIN
          IVARID(1)=IVARN1(IRESP)
          IVARI2(1)=IVARN2(IRESP)
C
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,711)IRESP,NCURVE
  711       FORMAT('IRESP,NCURVE = ',2I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,TEMP1,TEMP1,NS1,NS2,NS3,ICASE,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
          ISTEPN='7B'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          CALL DPLRD2(Y1,NS1,ICASPL,IDIST1,ICASP2,IDIST2,MAXOBV,
     1                PID,IVARID,IVARI2,NREPL,MINMAX,
     1                TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1                YTEMP,YSTAT,
     1                DTEMP1,DTEMP2,DTEMP3,ITEMP1,
     1                IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1                IFLAGL,AL,
     1                IFORSW,ICAPSW,ICAPTY,ISEED,
     1                CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                APOW90,APOW95,APOW99,
     1                IBUGA3,ISUBRO,IERROR)
C
C               ***************************************
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
          ISTEPN='7C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLAGU='FILE'
          IF(NRESP.EQ.1)IFLAGU='ON'
          IFRST=.FALSE.
          ILAST=.FALSE.
          IF(IRESP.EQ.1)IFRST=.TRUE.
          IF(IRESP.EQ.NRESP)ILAST=.TRUE.
          CALL DPLRD4(STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                APOW90,APOW95,APOW99,
     1                IFLAGU,IFRST,ILAST,ICASAN,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
C
  710   CONTINUE
C
C               ***************************************************
C               **  STEP 8A--                                    **
C               **  CASE 3: ONE OR MORE REPLICATION VARIABLES.   **
C               ***************************************************
C
      ELSEIF(NRESP.EQ.1 .AND. NREPL.GE.1)THEN
        ISTEPN='8A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRDI')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        PID(1)=CPUMIN
        IVARID(1)=IVARN1(1)
        IVARI2(1)=IVARN2(1)
        IADD=1
        DO903II=1,NREPL
          IVARID(II+1)=IVARN1(II+IADD)
          IVARI2(II+1)=IVARN2(II+IADD)
  903   CONTINUE
C
        ICOL=1
        NUMVA2=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1,TEMP1,TEMP1,NS1,NS2,NS3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
C       *****************************************************
C       **  STEP 9C--                                      **
C       **  FIND THE DISTINCT VALUES IN EACH OF THE        **
C       **  REPLICATION VARIABLES.                         **
C       *****************************************************
C
        CALL DPPP5(XDESGN(1,1),XDESGN(1,2),XDESGN(1,3),
     1             XDESGN(1,4),XDESGN(1,5),XDESGN(1,6),
     1             NREPL,NLOCAL,MAXOBV,
     1             XIDTEM,XIDTE2,XIDTE3,XIDTE4,XIDTE5,XIDTE6,
     1             TEMP1,TEMP2,
     1             NUMSE1,NUMSE2,NUMSE3,NUMSE4,NUMSE5,NUMSE6,
     1             IBUGA3,ISUBRO,IERROR)
C
C       *****************************************************
C       **  STEP 9D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        NPLOTP=0
        NCURVE=0
        IF(NREPL.EQ.1)THEN
          J=0
          DO1110ISET1=1,NUMSE1
            K=0
            PID(2)=XIDTEM(ISET1)
            DO1130I=1,NLOCAL
              IF(XIDTEM(ISET1).EQ.XDESGN(I,1))THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1130       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NTEMP.GT.0)THEN
              CALL DPLRD2(ZY,NTEMP,ICASPL,IDIST1,ICASP2,IDIST2,MAXOBV,
     1                    PID,IVARID,IVARI2,NREPL,MINMAX,
     1                    TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1                    YTEMP,YSTAT,
     1                    DTEMP1,DTEMP2,DTEMP3,ITEMP1,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1                    IFLAGL,AL,
     1                    IFORSW,ICAPSW,ICAPTY,ISEED,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                    APOW90,APOW95,APOW99,
     1                    IBUGA3,ISUBRO,IERROR)
C
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPLRD4(STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                  APOW90,APOW95,APOW99,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1110     CONTINUE
        ELSEIF(NREPL.EQ.2)THEN
          J=0
          NTOT=NUMSE1*NUMSE2
          DO1210ISET1=1,NUMSE1
          DO1220ISET2=1,NUMSE2
            K=0
            PID(2)=XIDTEM(ISET1)
            PID(3)=XIDTE2(ISET2)
            DO1290I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1290       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NTEMP.GT.0)THEN
              CALL DPLRD2(ZY,NTEMP,ICASPL,IDIST1,ICASP2,IDIST2,MAXOBV,
     1                    PID,IVARID,IVARI2,NREPL,MINMAX,
     1                    TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1                    YTEMP,YSTAT,
     1                    DTEMP1,DTEMP2,DTEMP3,ITEMP1,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1                    IFLAGL,AL,
     1                    IFORSW,ICAPSW,ICAPTY,ISEED,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                    APOW90,APOW95,APOW99,
     1                    IBUGA3,ISUBRO,IERROR)
C
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPLRD4(STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                  APOW90,APOW95,APOW99,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1220     CONTINUE
 1210     CONTINUE
        ELSEIF(NREPL.EQ.3)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3
          DO1310ISET1=1,NUMSE1
          DO1320ISET2=1,NUMSE2
          DO1330ISET3=1,NUMSE3
            K=0
            PID(2)=XIDTEM(ISET1)
            PID(3)=XIDTE2(ISET2)
            PID(4)=XIDTE3(ISET3)
            DO1390I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1390       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NTEMP.GT.0)THEN
              CALL DPLRD2(ZY,NTEMP,ICASPL,IDIST1,ICASP2,IDIST2,MAXOBV,
     1                    PID,IVARID,IVARI2,NREPL,MINMAX,
     1                    TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1                    YTEMP,YSTAT,
     1                    DTEMP1,DTEMP2,DTEMP3,ITEMP1,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1                    IFLAGL,AL,
     1                    IFORSW,ICAPSW,ICAPTY,ISEED,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                    APOW90,APOW95,APOW99,
     1                    IBUGA3,ISUBRO,IERROR)
C
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPLRD4(STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                  APOW90,APOW95,APOW99,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1330     CONTINUE
 1320     CONTINUE
 1310     CONTINUE
        ELSEIF(NREPL.EQ.4)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4
          DO1410ISET1=1,NUMSE1
          DO1420ISET2=1,NUMSE2
          DO1430ISET3=1,NUMSE3
          DO1440ISET4=1,NUMSE4
            K=0
            PID(2)=XIDTEM(ISET1)
            PID(3)=XIDTE2(ISET2)
            PID(4)=XIDTE3(ISET3)
            PID(5)=XIDTE4(ISET4)
            DO1490I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1490       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NTEMP.GT.0)THEN
              CALL DPLRD2(ZY,NTEMP,ICASPL,IDIST1,ICASP2,IDIST2,MAXOBV,
     1                    PID,IVARID,IVARI2,NREPL,MINMAX,
     1                    TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1                    YTEMP,YSTAT,
     1                    DTEMP1,DTEMP2,DTEMP3,ITEMP1,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1                    IFLAGL,AL,
     1                    IFORSW,ICAPSW,ICAPTY,ISEED,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                    APOW90,APOW95,APOW99,
     1                    IBUGA3,ISUBRO,IERROR)
C
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPLRD4(STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                  APOW90,APOW95,APOW99,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1440     CONTINUE
 1430     CONTINUE
 1420     CONTINUE
 1410     CONTINUE
        ELSEIF(NREPL.EQ.5)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5
          DO1510ISET1=1,NUMSE1
          DO1520ISET2=1,NUMSE2
          DO1530ISET3=1,NUMSE3
          DO1540ISET4=1,NUMSE4
          DO1550ISET5=1,NUMSE5
            K=0
            PID(2)=XIDTEM(ISET1)
            PID(3)=XIDTE2(ISET2)
            PID(4)=XIDTE3(ISET3)
            PID(5)=XIDTE4(ISET4)
            PID(6)=XIDTE5(ISET5)
            DO1590I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1590       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NTEMP.GT.0)THEN
              CALL DPLRD2(ZY,NTEMP,ICASPL,IDIST1,ICASP2,IDIST2,MAXOBV,
     1                    PID,IVARID,IVARI2,NREPL,MINMAX,
     1                    TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1                    YTEMP,YSTAT,
     1                    DTEMP1,DTEMP2,DTEMP3,ITEMP1,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1                    IFLAGL,AL,
     1                    IFORSW,ICAPSW,ICAPTY,ISEED,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                    APOW90,APOW95,APOW99,
     1                    IBUGA3,ISUBRO,IERROR)
C
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPLRD4(STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                  APOW90,APOW95,APOW99,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1550     CONTINUE
 1540     CONTINUE
 1530     CONTINUE
 1520     CONTINUE
 1510     CONTINUE
        ELSEIF(NREPL.EQ.6)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5*NUMSE6
          DO1610ISET1=1,NUMSE1
          DO1620ISET2=1,NUMSE2
          DO1630ISET3=1,NUMSE3
          DO1640ISET4=1,NUMSE4
          DO1650ISET5=1,NUMSE5
          DO1660ISET6=1,NUMSE6
            K=0
            PID(2)=XIDTEM(ISET1)
            PID(3)=XIDTE2(ISET2)
            PID(4)=XIDTE3(ISET3)
            PID(5)=XIDTE4(ISET4)
            PID(6)=XIDTE5(ISET5)
            PID(7)=XIDTE6(ISET6)
            DO1690I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5) .AND.
     1           XIDTE6(ISET6).EQ.XDESGN(I,6)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
              ENDIF
 1690       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NTEMP.GT.0)THEN
              CALL DPLRD2(ZY,NTEMP,ICASPL,IDIST1,ICASP2,IDIST2,MAXOBV,
     1                    PID,IVARID,IVARI2,NREPL,MINMAX,
     1                    TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1                    YTEMP,YSTAT,
     1                    DTEMP1,DTEMP2,DTEMP3,ITEMP1,
     1                    IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                    ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                    IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                    IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1                    IFLAGL,AL,
     1                    IFORSW,ICAPSW,ICAPTY,ISEED,
     1                    CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                    STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                    APOW90,APOW95,APOW99,
     1                    IBUGA3,ISUBRO,IERROR)
C
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPLRD4(STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                  APOW90,APOW95,APOW99,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1660     CONTINUE
 1650     CONTINUE
 1640     CONTINUE
 1630     CONTINUE
 1620     CONTINUE
 1610     CONTINUE
        ENDIF
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IRANAL=IRANSV
      ISEED=ISEESV
C
      IF(IERROR.EQ.'YES')THEN
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,9001)(IANS(I),I=1,MIN(100,IWIDTH))
 9001     FORMAT(100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LRDI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLRDI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLRD2(Y,N,ICASPL,IDIST1,ICASP2,IDIST2,MAXOBV,
     1                  PID,IVARID,IVARI2,NREPL,MINMAX,
     1                  TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1                  YTEMP,YSTAT,
     1                  DTEMP1,DTEMP2,DTEMP3,ITEMP1,
     1                  IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                  ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                  IGOMDF,IKATDF,IGIGDF,IGEODF,IGAUDF,
     1                  IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1                  IFLAGL,AL,
     1                  IFORSW,ICAPSW,ICAPTY,ISEED,
     1                  CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1                  STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                  APOW90,APOW95,APOW99,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--DISTINGUISH BETWEEN TWO DISTRIBUTIONS BASED ON THE
C              RATIO OF THE LIKELIHOOD FUNCTIONS.  IN MANY CASES,
C              SEVERAL DISTRIBUTIONS MAY BOTH FIT A GIVEN DATASET.
C              THE LIKELIHOOD RATIO TEST PROVIDES A METHOD FOR
C              CHOOSING BETWEEN THE TWO.  THIS IS GENERALLY MORE
C              POWERFUL THAN K-S OR ANDERSON-DARLING TEST BEACAUSE
C              WE ARE TESTING A SPECIFIC ALTERNATIVE RATHER THAN
C              ANY ALTERNATIVE DISTRIBUTION.
C
C              THE BASIC ALGORITHM IS:
C
C                1. FIT THE DATA  TO BOTH DISTRIBUTIONS USING
C                   MAXIMIMUM LIKELIHOOD.
C
C                2. COMPUTE THE LIKELIHOOD FUNCTION FOR BOTH
C                   DISTRIBUTIONS AND COMPUTE THE RATIO OF THE
C                   LIKELIHOODS (THE NULL HYPOTHESIS DISTRIBUTION
C                   IS USED FOR THE DENONIMATOR, THE ALTERNATIVE
C                   HYPOTHESIS DISTRIBUTION IS USED FOR THE
C                   NUMERATOR).  THIS IS THE TEST STATISTIC.
C
C                3. TO DETERMINE CRITICAL VALUES, SIMULATE 10,000
C                   RUNS FROM THE NULL HYPOTHESIS DISTRIBUTION
C                   AND COMPUTE THE ABOVE TEST STATISTIC.
C
C              NOTE THAT CURRENTLY ONLY UNGROUPED AND UNCENSORED DATA
C              IS SUPPORTED.
C
C     REFERENCES--DUMONCEAUX, ANTLE AND HAAS (1973), "LIKELIHOOD RATIO
C                 TEST FOR DISCRMINATION BETWEEN TWO MODELS WITH UNKNOWN
C                 AND LOCATION AND SCALE PARAMETERS", TECHNOMETRICS,
C                 VOL. 15, NO. 1, PP. 19-27.
C               --DUMONCEAUX AND ANTLE (1973), "DISCRIMINATION BETWEEN
C                 THE LOG-NORMAL AND THE WEIBULL DISTRIBUTIONS",
C                 TECHNOMETRICS, VOL. 15, NO. 4, PP. 923-926.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2014/5
C     ORIGINAL VERSION--MAY       2014.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IWRITE
      CHARACTER*4 IADEDF
      CHARACTER*4 IGEPDF
      CHARACTER*4 IMAKDF
      CHARACTER*4 IBEIDF
      CHARACTER*4 ILGADF
      CHARACTER*4 ISKNDF
      CHARACTER*4 IGLDDF
      CHARACTER*4 IBGEDF
      CHARACTER*4 IGETDF
      CHARACTER*4 ICONDF
      CHARACTER*4 IGOMDF
      CHARACTER*4 IKATDF
      CHARACTER*4 IGIGDF
      CHARACTER*4 IGEODF
      CHARACTER*4 IGAUDF
      CHARACTER*4 IEXPBC
      CHARACTER*4 IWEIBC
      CHARACTER*4 ICENTY
      CHARACTER*4 IDFTTY
C
      CHARACTER*4 IHSTCW
      CHARACTER*4 IHSTOU
      CHARACTER*4 IRELAT
      CHARACTER*4 IRHSTG
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*60 IDIST1
      CHARACTER*60 IDIST2
C
      CHARACTER*4 IDIR
      CHARACTER*4 ICENSO
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION YTEMP(*)
      DIMENSION YSTAT(*)
      DIMENSION PID(*)
C
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION TEMP4(*)
      DIMENSION TEMP5(*)
      DIMENSION TEMP6(*)
      DIMENSION TEMP7(*)
C
      DIMENSION CLWIDT(*)
      DIMENSION CLLIMI(*)
C
      DOUBLE PRECISION DTEMP1(*)
      DOUBLE PRECISION DTEMP2(*)
      DOUBLE PRECISION DTEMP3(*)
      INTEGER ITEMP1(*)
C
      DOUBLE PRECISION DSTAT
      DOUBLE PRECISION DN
C
      PARAMETER (NUMALP=7)
      REAL ALPHA(NUMALP)
C
      PARAMETER(NUMCLI=5)
      PARAMETER(MAXLIN=2)
      PARAMETER (MAXROW=40)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*1  ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROw,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL ISNANZ
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA ALPHA/
     1 50.0, 75.0, 80.0, 90.0, 95.0, 99.0, 99.9/
C
C-----START POINT-----------------------------------------------------
C
C
      ISUBN1='DPLR'
      ISUBN2='D2  '
      IERROR='NO'
      ICENSO='OFF'
      STATVA=CPUMIN
      STATCD=CPUMIN
      PVAL=CPUMIN
      CV50=CPUMIN
      CV75=CPUMIN
      CV90=CPUMIN
      CV95=CPUMIN
      CV99=CPUMIN
      APOW90=CPUMIN
      APOW95=CPUMIN
      APOW99=CPUMIN
      IFLGL1=1
      IFLGL2=1
      IFLGS1=1
      IFLGS2=1
C
      DO10I=1,100000
        YSTAT(I)=0.0
   10 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPLRD2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,ICASP2,N,MINMAX,IFLAGL,AL
   72   FORMAT('ICASPL,ICASP2,N,MINMAX,IFLAGL,AL = ',2(A4,2X),3I8,G15.7)
        CALL DPWRST('XXX','BUG ')
        IF(N.GE.1)THEN
          DO85I=1,N
            WRITE(ICOUT,86)I,Y(I)
   86       FORMAT('I,Y(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
   85     CONTINUE
        ENDIF
        WRITE(ICOUT,87)PID(1),NREPL
   87   FORMAT('PID(1),NREPL = ',G15.7,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N.LT.5)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN DISTRIBUTIONAL LIKELIHOOD RATIO TEST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 5.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO60I=1,N
        IF(Y(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,31)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)HOLD
   62 FORMAT('      ALL ELEMENTS OF THE RESPONSE VARIABLE ARE ',
     1       'IDENTICALLY EQUAL TO ',G15.7)

      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   69 CONTINUE
C
C               *****************************************
C               **  STEP 2--                           **
C               **  COMPUTE THE BASIC TEST STATISTIC   **
C               *****************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DN=DBLE(N)
      IFLAG=0
      CALL SUMRAW(Y,N,IDIST1,IFLAG,
     1            XMEAN,XVAR,XSD,XMIN,XMAX,
     1            ISUBRO,IBUGA3,IERROR)
C
C     IDENTIFY SPECIAL CASES:
C
C       1. NORMAL-EXPONENTIAL
C       2. EXPONENTIAL-NORMAL
C       3. NORMAL-DOUBLE EXPONENTIAL
C       4. DOUBLE EXPONENTIAL-NORMAL
C
      ICASET=0
      IF(ICASPL.EQ.'NORM' .AND. ICASP2.EQ.'EXPO')ICASET=1
      IF(ICASPL.EQ.'EXPO' .AND. ICASP2.EQ.'NORM')ICASET=2
      IF(ICASPL.EQ.'NORM' .AND. ICASP2.EQ.'DEXP')ICASET=3
      IF(ICASPL.EQ.'DEXP' .AND. ICASP2.EQ.'NORM')ICASET=4
C
C               ***************************************************
C               **  STEP 3A-                                     **
C               **  COMPUTE ML ESTIMATES FOR FIRST DISTRIBUTION  **
C               ***************************************************
C
      ISTEPN='3A'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPML1(Y,TEMP1,N,ICASPL,IFLAGD,IFLAG9,
     1           TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1           DTEMP1,DTEMP2,DTEMP3,ITEMP1,MAXOBV,
     1           ALOCS1,SCALS1,ALOWLI,AUPPLI,
     1           SH1S1,SH2S1,SH3S1,SH4S1,
     1           SH5S1,SH6S1,S7S1,
     1           YLOWLM,YUPPLM,A,B,MINMAX,ISEED,
     1           IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1           ILGADF,ISKNDF,IGLDDF,IGOMDF,IGIGDF,
     1           IGEODF,IBGEDF,IGAUDF,
     1           ICENSO,IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1           CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1           IBUGA3,ISUBRO,IERROR)
C
      IF(IERROR.EQ.'YES')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,121)
  121   FORMAT('      UNABLE TO OBTAIN MAXIMUM LIKELIHOOD ESTIMATE ',
     1         'FOR FIRST DISTRIBUTION')

        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(ALOCS1.EQ.CPUMIN)THEN
        ALOCS1=0.0
        IFLGL1=0
      ENDIF
      IF(SCALS1.EQ.CPUMIN)THEN
        SCALS1=1.0
        IFLGS1=0
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
        WRITE(ICOUT,101)ALOCS1,SCALS1,SH1S1,SH2S1
  101   FORMAT('ML ESTIMATES FOR H0 DIST: ALOCS1,SCALS1,SH1S1,SH2S1 = ',
     1         4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************************************
C               **  STEP 3B-                                         **
C               **  COMPUTE LIKELIHOOD VALUE FOR FIRST DISTRIBUTION  **
C               *******************************************************
C
      ISTEPN='3B'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPLIK1(Y,TEMP1,N,ICASPL,
     1            SH1S1,SH2S1,SH3S1,SH4S1,
     1            SH5S1,SH6S1,SH7S1,
     1            YLOWLM,YUPPLM,A,B,MINMAX,
     1            IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1            ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1            IGETDF,ICONDF,IGOMDF,IKATDF,
     1            IGIGDF,IGEODF,
     1            ALOCS1,SCALS1,
     1            ALIKE1,AIC1,AICC1,BIC1,
     1            IBUGA3,ISUBRO,IERROR)
C
C               ***************************************************
C               **  STEP 4A-                                     **
C               **  COMPUTE ML ESTIMATES FOR SECOND DISTRIBUTION **
C               ***************************************************
C
      ISTEPN='4A'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPML1(Y,TEMP1,N,ICASP2,IFLAGD,IFLAG9,
     1           TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1           DTEMP1,DTEMP2,DTEMP3,ITEMP1,MAXOBV,
     1           ALOCS2,SCALS2,ALOWLI,AUPPLI,
     1           SH1S2,SH2S2,SH3S2,SH4S2,
     1           SH5S2,SH6S2,SH7S2,
     1           YLOWLM,YUPPLM,A,B,MINMAX,ISEED,
     1           IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1           ILGADF,ISKNDF,IGLDDF,IGOMDF,IGIGDF,
     1           IGEODF,IBGEDF,IGAUDF,
     1           ICENSO,IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1           CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1           IBUGA3,ISUBRO,IERROR)
C
      IF(IERROR.EQ.'YES')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,131)
  131   FORMAT('      UNABLE TO OBTAIN MAXIMUM LIKELIHOOD ESTIMATE ',
     1         'FOR SECOND DISTRIBUTION')

        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(ALOCS2.EQ.CPUMIN)THEN
        ALOCS2=0.0
        IFLGL2=0
      ENDIF
      IF(SCALS2.EQ.CPUMIN)THEN
        SCALS2=1.0
        IFLGS2=0
      ENDIF
C
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
        WRITE(ICOUT,103)ALOCS2,SCALS2,SH1S2,SH2S2
  103   FORMAT('ML ESTIMATES FOR HA DIST: ALOCS2,SCALS2,SH1S2,SH2S2 = ',
     1         4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *******************************************************
C               **  STEP 4B-                                         **
C               **  COMPUTE LIKELIHOOD VALUE FOR SECOND DISTRIBUTION **
C               *******************************************************
C
      ISTEPN='4B'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPLIK1(Y,TEMP1,N,ICASP2,
     1            SH1S2,SH2S2,SH3S2,SH4S2,
     1            SH5S2,SH6S2,SH7S2,
     1            YLOWLM,YUPPLM,A,B,MINMAX,
     1            IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1            ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1            IGETDF,ICONDF,IGOMDF,IKATDF,
     1            IGIGDF,IGEODF,
     1            ALOCS2,SCALS2,
     1            ALIKE2,AIC2,AICC2,BIC2,
     1            IBUGA3,ISUBRO,IERROR)
C
      IF(ICASET.EQ.1)THEN
        STATVA=SCALS1/SCALS2
      ELSEIF(ICASET.EQ.2)THEN
        STATVA=SCALS1/SCALS2
      ELSEIF(ICASET.EQ.3)THEN
        STATVA=SCALS1/SCALS2
      ELSEIF(ICASET.EQ.4)THEN
        STATVA=SCALS1/SCALS2
      ELSE
        DSTAT=(DEXP(DBLE(ALIKE2))/DEXP(DBLE(ALIKE1)))**(1.0D0/DN)
        STATVA=REAL(DSTAT)
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
        WRITE(ICOUT,111)ALIKE1,ALIKE2,STATVA
  111   FORMAT('ALIKE1,ALIKE2,STATVA = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************************
C               **  STEP 5--                              **
C               **  SIMULATION TO OBTAIN CRITICAL VALUES  **
C               ********************************************
C
C     GENERATE SAMPLES FROM THE H0 DISTRIBUTION.  LOCATION AND
C     SCALE PARAMETERS WILL BE SET TO 0 AND 1.  IF THERE IS A SHAPE
C     PARAMETER, USE THE ESTIMATED VALUE FROM ABOVE.
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC NMCSAM=100
      NMCSAM=10000
      NCNT=0
      NTEMP=N
C
      DO2110I=1,NMCSAM
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,311)I
  311     FORMAT('MONTE CARLO ITERATION ',I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        CALL DPRAN2(ICASPL,ISEED,YTEMP,NTEMP,TEMP1,
     1              A,B,MINMAX,
     1              SH1S1,SH2S1,SH3S1,SH4S1,
     1              SH5S1,SH6S1,SH7S1,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1              IGOMDF,IKATDF,IGIGDF,IGEODF,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
C
C               ***************************************************
C               **  STEP 5A-                                     **
C               **  COMPUTE ML ESTIMATES FOR FIRST DISTRIBUTION  **
C               ***************************************************
C
        ISTEPN='5A'
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPML1(YTEMP,TEMP1,NTEMP,ICASPL,IFLAGD,IFLAG9,
     1             TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1             DTEMP1,DTEMP2,DTEMP3,ITEMP1,MAXOBV,
     1             ALOCT1,SCALT1,ALOWLI,AUPPLI,
     1             SH1T1,SH2T1,SH3T1,SH4T1,
     1             SH5T1,SH6T1,S7T1,
     1             YLOWLM,YUPPLM,A,B,MINMAX,ISEED,
     1             IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1             ILGADF,ISKNDF,IGLDDF,IGOMDF,IGIGDF,
     1             IGEODF,IBGEDF,IGAUDF,
     1             ICENSO,IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1             CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1             IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO2110
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
          WRITE(ICOUT,2111)ALOCT1,SCALT1,SH1T1,SH2T1
 2111     FORMAT('ML ESTIMATES FOR H0 DIST: ALOCT1,SCALT1,SH1T1,',
     1           'SH2T1 = ',4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      IF(ALOCT1.EQ.CPUMIN)ALOCT1=0.0
C
C               ********************************************************
C               **  STEP 5B-                                         **
C               **  COMPUTE LIKELIHOOD VALUE FOR FIRST DISTRIBUTION  **
C               *******************************************************
C
        ISTEPN='5B'
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPLIK1(YTEMP,TEMP1,NTEMP,ICASPL,
     1              SH1T1,SH2T1,SH3T1,SH4T1,
     1              SH5T1,SH6T1,SH7T1,
     1              YLOWLM,YUPPLM,A,B,MINMAX,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1              IGETDF,ICONDF,IGOMDF,IKATDF,
     1              IGIGDF,IGEODF,
     1              ALOCT1,SCALT1,
     1              ALIKE1,AIC1,AICC1,BIC1,
     1              IBUGA3,ISUBRO,IERROR)
C
C               ***************************************************
C               **  STEP 5C-                                     **
C               **  COMPUTE ML ESTIMATES FOR SECOND DISTRIBUTION **
C               ***************************************************
C
        ISTEPN='4A'
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPML1(YTEMP,TEMP1,NTEMP,ICASP2,IFLAGD,IFLAG9,
     1             TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1             DTEMP1,DTEMP2,DTEMP3,ITEMP1,MAXOBV,
     1             ALOCT2,SCALT2,ALOWLI,AUPPLI,
     1             SH1T2,SH2T2,SH3T2,SH4T2,
     1             SH5T2,SH6T2,S7T2,
     1             YLOWLM,YUPPLM,A,B,MINMAX,ISEED,
     1             IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1             ILGADF,ISKNDF,IGLDDF,IGOMDF,IGIGDF,
     1             IGEODF,IBGEDF,IGAUDF,
     1             ICENSO,IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1             CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1             IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO2110
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
          WRITE(ICOUT,2213)ALOCT2,SCALT2,SH1T2,SH2T2
 2213     FORMAT('ML ESTIMATES FOR HA DIST: ALOCT2,SCALT2,',
     1           'SH1T2,SH2T2 = ',4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      IF(ALOCT2.EQ.CPUMIN)ALOCT2=0.0
C
C               *******************************************************
C               **  STEP 5D-                                         **
C               **  COMPUTE LIKELIHOOD VALUE FOR SECOND DISTRIBUTION **
C               *******************************************************
C
        ISTEPN='5D'
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPLIK1(YTEMP,TEMP1,NTEMP,ICASP2,
     1              SH1T2,SH2T2,SH3T2,SH4T2,
     1              SH5T2,SH6T2,SH7T2,
     1              YLOWLM,YUPPLM,A,B,MINMAX,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1              IGETDF,ICONDF,IGOMDF,IKATDF,
     1              IGIGDF,IGEODF,
     1              ALOCT2,SCALT2,
     1              ALIKE2,AIC2,AICC2,BIC2,
     1              IBUGA3,ISUBRO,IERROR)
C
        NCNT=NCNT+1
        IF(ICASET.EQ.1)THEN
          YSTAT(NCNT)=SCALT1/SCALT2
        ELSEIF(ICASET.EQ.2)THEN
          YSTAT(NCNT)=SCALT1/SCALT2
        ELSEIF(ICASET.EQ.3)THEN
          YSTAT(NCNT)=SCALT1/SCALT2
        ELSEIF(ICASET.EQ.4)THEN
          YSTAT(NCNT)=SCALT1/SCALT2
        ELSE
          DSTAT=(DEXP(DBLE(ALIKE2))/DEXP(DBLE(ALIKE1)))**(1.0D0/DN)
          STATT=REAL(DSTAT)
          IF(ISNANZ(STATT))THEN
            NCNT=NCNT-1
          ELSE
            YSTAT(NCNT)=REAL(DSTAT)
          ENDIF
        ENDIF
C
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
          WRITE(ICOUT,2119)I,ALIKE1,ALIKE2,YSTAT(NCNT)
 2119     FORMAT('I,ALIKE1,ALIKE2,YSTAT(NCNT) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
 2110 CONTINUE
C
      IDIR='UPPE'
      CALL DPGOF8(YSTAT,NCNT,STATVA,PVAL,IDIR,
     1            IBUGA3,ISUBRO,IERROR)
      STATCD=1.0 - PVAL
      IF(NCNT.EQ.NMCSAM)THEN
        CV50=YSTAT(5000)
        CV75=YSTAT(7500)
        CV80=YSTAT(8000)
        CV90=YSTAT(9000)
        CV95=YSTAT(9500)
        CV99=YSTAT(9900)
        CV999=YSTAT(9990)
      ELSEIF(NCNT.LT.1000)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2311)
 2311   FORMAT('      LESS THAN 1,000 (OF 10,000) OF THE CRITICAL ',
     1         'VALUE SIMULATIONS GENERATED A VALID STATISTIC.')

        IERROR='YES'
        GOTO9000
      ELSE
        IWRITE='OFF'
        P100=50.0
        CALL PERCEN(P100,YSTAT,NCNT,IWRITE,TEMP1,MAXOBV,
     1              CV50,IBUGA3,IERROR)
        P100=75.0
        CALL PERCEN(P100,YSTAT,NCNT,IWRITE,TEMP1,MAXOBV,
     1              CV75,IBUGA3,IERROR)
        P100=80.0
        CALL PERCEN(P100,YSTAT,NCNT,IWRITE,TEMP1,MAXOBV,
     1              CV80,IBUGA3,IERROR)
        P100=90.0
        CALL PERCEN(P100,YSTAT,NCNT,IWRITE,TEMP1,MAXOBV,
     1              CV90,IBUGA3,IERROR)
        P100=95.0
        CALL PERCEN(P100,YSTAT,NCNT,IWRITE,TEMP1,MAXOBV,
     1              CV95,IBUGA3,IERROR)
        P100=99.0
        CALL PERCEN(P100,YSTAT,NCNT,IWRITE,TEMP1,MAXOBV,
     1              CV99,IBUGA3,IERROR)
        P100=99.9
        CALL PERCEN(P100,YSTAT,NCNT,IWRITE,TEMP1,MAXOBV,
     1              CV999,IBUGA3,IERROR)
      ENDIF
C
C               ********************************************
C               **  STEP 6--                              **
C               **  SIMULATION TO OBTAIN CRITICAL VALUES  **
C               ********************************************
C
C     GENERATE SAMPLES FROM THE H1 DISTRIBUTION.  LOCATION AND
C     SCALE PARAMETERS WILL BE SET TO 0 AND 1.  IF THERE IS A SHAPE
C     PARAMETER, USE THE ESTIMATED VALUE FROM ABOVE.
C
C     FOR POWER, GENERATE SIMULATIONS FROM THE H1 DISTRIBUTION
C     RATHER THAN THE H0 DISTRIBUTION AND THEN COUNT HOW MANY
C     TIMES EACH DISTRIBUTION IS SELECTED BASED ON THE CUT-OFF
C     FOR ALPHA = 0.90, 0.95, AND 0.99.
C
      ISTEPN='6'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC NMCSAM=100
      NMCSA2=5000
      NCNT2=0
      NTEMP=N
      I90COR=0
      I95COR=0
      I99COR=0
      I90INC=0
      I95INC=0
      I99INC=0
C
      DO6110I=1,NMCSA2
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
          WRITE(ICOUT,6111)I
 6111     FORMAT('POWER SIMULATIONS: MONTE CARLO ITERATION ',I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        CALL DPRAN2(ICASP2,ISEED,YTEMP,NTEMP,TEMP1,
     1              A,B,MINMAX,
     1              SH1S2,SH2S2,SH3S2,SH4S2,
     1              SH5S2,SH6S2,SH7S2,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1              IGOMDF,IKATDF,IGIGDF,IGEODF,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
C
C               ***************************************************
C               **  STEP 6A-                                     **
C               **  COMPUTE ML ESTIMATES FOR FIRST DISTRIBUTION  **
C               ***************************************************
C
        ISTEPN='6A'
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPML1(YTEMP,TEMP1,NTEMP,ICASPL,IFLAGD,IFLAG9,
     1             TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1             DTEMP1,DTEMP2,DTEMP3,ITEMP1,MAXOBV,
     1             ALOCT1,SCALT1,ALOWLI,AUPPLI,
     1             SH1T1,SH2T1,SH3T1,SH4T1,
     1             SH5T1,SH6T1,S7T1,
     1             YLOWLM,YUPPLM,A,B,MINMAX,ISEED,
     1             IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1             ILGADF,ISKNDF,IGLDDF,IGOMDF,IGIGDF,
     1             IGEODF,IBGEDF,IGAUDF,
     1             ICENSO,IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1             CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1             IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO6110
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
          WRITE(ICOUT,6121)ALOCT1,SCALT1,SH1T1,SH2T1
 6121     FORMAT('ML ESTIMATES FOR H0 DIST: ALOCT1,SCALT1,SH1T1,',
     1           'SH2T1 = ',4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      IF(ALOCT1.EQ.CPUMIN)ALOCT1=0.0
C
C               ********************************************************
C               **  STEP 6B-                                         **
C               **  COMPUTE LIKELIHOOD VALUE FOR FIRST DISTRIBUTION  **
C               *******************************************************
C
        ISTEPN='6B'
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPLIK1(YTEMP,TEMP1,NTEMP,ICASPL,
     1              SH1T1,SH2T1,SH3T1,SH4T1,
     1              SH5T1,SH6T1,SH7T1,
     1              YLOWLM,YUPPLM,A,B,MINMAX,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1              IGETDF,ICONDF,IGOMDF,IKATDF,
     1              IGIGDF,IGEODF,
     1              ALOCT1,SCALT1,
     1              ALIKE1,AIC1,AICC1,BIC1,
     1              IBUGA3,ISUBRO,IERROR)
C
C               ***************************************************
C               **  STEP 6C-                                     **
C               **  COMPUTE ML ESTIMATES FOR SECOND DISTRIBUTION **
C               ***************************************************
C
        ISTEPN='6C'
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPML1(YTEMP,TEMP1,NTEMP,ICASP2,IFLAGD,IFLAG9,
     1             TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1             DTEMP1,DTEMP2,DTEMP3,ITEMP1,MAXOBV,
     1             ALOCT2,SCALT2,ALOWLI,AUPPLI,
     1             SH1T2,SH2T2,SH3T2,SH4T2,
     1             SH5T2,SH6T2,S7T2,
     1             YLOWLM,YUPPLM,A,B,MINMAX,ISEED,
     1             IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1             ILGADF,ISKNDF,IGLDDF,IGOMDF,IGIGDF,
     1             IGEODF,IBGEDF,IGAUDF,
     1             ICENSO,IEXPBC,IWEIBC,ICENTY,IDFTTY,
     1             CLLIMI,CLWIDT,IHSTCW,IHSTOU,IRELAT,IRHSTG,
     1             IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO6110
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
          WRITE(ICOUT,6131)ALOCT2,SCALT2,SH1T2,SH2T2
 6131     FORMAT('ML ESTIMATES FOR HA DIST: ALOCT2,SCALT2,',
     1           'SH1T2,SH2T2 = ',4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      IF(ALOCT2.EQ.CPUMIN)ALOCT2=0.0
C
C               *******************************************************
C               **  STEP 6D-                                         **
C               **  COMPUTE LIKELIHOOD VALUE FOR SECOND DISTRIBUTION **
C               *******************************************************
C
        ISTEPN='6D'
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPLIK1(YTEMP,TEMP1,NTEMP,ICASP2,
     1              SH1T2,SH2T2,SH3T2,SH4T2,
     1              SH5T2,SH6T2,SH7T2,
     1              YLOWLM,YUPPLM,A,B,MINMAX,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1              IGETDF,ICONDF,IGOMDF,IKATDF,
     1              IGIGDF,IGEODF,
     1              ALOCT2,SCALT2,
     1              ALIKE2,AIC2,AICC2,BIC2,
     1              IBUGA3,ISUBRO,IERROR)
C
        NCNT2=NCNT2+1
        IF(ICASET.EQ.1)THEN
          STATT=SCALT1/SCALT2
        ELSEIF(ICASET.EQ.2)THEN
          STATT=SCALT1/SCALT2
        ELSEIF(ICASET.EQ.3)THEN
          STATT=SCALT1/SCALT2
        ELSEIF(ICASET.EQ.4)THEN
          STATT=SCALT1/SCALT2
        ELSE
          DSTAT=(DEXP(DBLE(ALIKE2))/DEXP(DBLE(ALIKE1)))**(1.0D0/DN)
          STATT=REAL(DSTAT)
          IF(ISNANZ(STATT))GOTO6110
        ENDIF
C
C       NOW DETERMINE IF DISTRIBUTION CORRECTLY CLASSIFIED.
C
        IF(STATT.GT.CV90)THEN
          I90COR=I90COR+1
        ELSE
          I90INC=I90INC+1
        ENDIF
C
        IF(STATT.GT.CV95)THEN
          I95COR=I95COR+1
        ELSE
          I95INC=I95INC+1
        ENDIF
C
        IF(STATT.GT.CV99)THEN
          I99COR=I99COR+1
        ELSE
          I99INC=I99INC+1
        ENDIF
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
          WRITE(ICOUT,6141)I,ALIKE1,ALIKE2,STATT
 6141     FORMAT('I,ALIKE1,ALIKE2,STATT = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
 6110 CONTINUE
C
      APOW90=REAL(I90COR)/REAL(I90COR + I90INC)
      APOW95=REAL(I95COR)/REAL(I95COR + I95INC)
      APOW99=REAL(I99COR)/REAL(I99COR + I99INC)
C
C               ******************************
C               **   STEP 7--               **
C               **   WRITE OUT EVERYTHING   **
C               ******************************
C
      ISTEPN='7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRD2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Distributional Likelihood Ratio Test'
      NCTITL=36
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Response Variable: '
      WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
      WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='H0: Data are from distribution -'
      NCTEXT(ICNT)=32
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)(1:40)=IDIST1(1:40)
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Ha: Data are from distribution -'
      NCTEXT(ICNT)=32
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)(1:40)=IDIST2(1:40)
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Total Number of Observations:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Mean:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=XMEAN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Standard Deviation:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=XSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Minimum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMIN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Maximum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMAX
      IDIGIT(ICNT)=NUMDIG
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='H0 Distribution:'
      NCTEXT(ICNT)=16
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      IF(ALOCS1.NE.CPUMIN .AND. IFLGL1.EQ.1)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Estimate of Location Parameter:'
        NCTEXT(ICNT)=31
        AVALUE(ICNT)=ALOCS1
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      IF(SCALS1.NE.CPUMIN .AND. IFLGS1.EQ.1)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Estimate of Scale Parameter:'
        NCTEXT(ICNT)=28
        AVALUE(ICNT)=SCALS1
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      IF(SH1S1.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Estimate of Shape Parameter 1:'
        NCTEXT(ICNT)=30
        AVALUE(ICNT)=SH1S1
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      IF(SH2S1.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Estimate of Shape Parameter 2:'
        NCTEXT(ICNT)=30
        AVALUE(ICNT)=SH2S1
        IDIGIT(ICNT)=NUMDIG
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Ha Distribution:'
      NCTEXT(ICNT)=16
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      IF(ALOCS2.NE.CPUMIN .AND. IFLGL2.EQ.1)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Estimate of Location Parameter:'
        NCTEXT(ICNT)=31
        AVALUE(ICNT)=ALOCS2
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      IF(SCALS2.NE.CPUMIN .AND. IFLGS2.EQ.1)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Estimate of Scale Parameter:'
        NCTEXT(ICNT)=28
        AVALUE(ICNT)=SCALS2
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      IF(SH1S2.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Estimate of Shape Parameter 1:'
        NCTEXT(ICNT)=30
        AVALUE(ICNT)=SH1S2
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      IF(SH2S2.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Estimate of Shape Parameter 2:'
        NCTEXT(ICNT)=30
        AVALUE(ICNT)=SH2S2
        IDIGIT(ICNT)=NUMDIG
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Test:'
      NCTEXT(ICNT)=5
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Test Statistic Value:'
      NCTEXT(ICNT)=21
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='CDF of Test Statistic:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=STATCD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='P-Value:'
      NCTEXT(ICNT)=8
      AVALUE(ICNT)=PVAL
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Simulations for CV:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=NCNT
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Simulations for Power:'
      NCTEXT(ICNT)=32
      AVALUE(ICNT)=NCNT2
      IDIGIT(ICNT)=0
C
      NUMROW=ICNT
      DO7210I=1,NUMROW
        NTOT(I)=15
 7210 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='7A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRD2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='7B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRD2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ITITLE=' '
      NCTITL=0
C
      ITITL9=' '
      NCTIT9=0
      ITITLE(1:44)='Percent Points of the Reference Distribution'
      NCTITL=44
      NUMLIN=1
      NUMROW=NUMALP
      NUMCOL=3
      ITITL2(1,1)='Percent Point'
      ITITL2(1,2)=' '
      ITITL2(1,3)='Value'
      NCTIT2(1,1)=13
      NCTIT2(1,2)=1
      NCTIT2(1,3)=5
C
      NMAX=0
      DO7221I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.2)NTOT(I)=5
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=NUMDIG
        ITYPCO(I)='NUME'
 7221 CONTINUE
      ITYPCO(2)='ALPH'
      IDIGIT(1)=1
      IDIGIT(3)=3
      DO7223I=1,NUMROW
        DO7225J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          NCVALU(I,J)=0
          AMAT(I,J)=0.0
          IF(J.EQ.1)THEN
            AMAT(I,J)=ALPHA(I)
          ELSEIF(J.EQ.2)THEN
            IVALUE(I,J)='='
            NCVALU(I,J)=1
          ELSEIF(J.EQ.3)THEN
            IF(I.EQ.1)THEN
              AMAT(I,J)=RND(CV50,IDIGIT(J))
            ELSEIF(I.EQ.2)THEN
              AMAT(I,J)=RND(CV75,IDIGIT(J))
            ELSEIF(I.EQ.3)THEN
              AMAT(I,J)=RND(CV80,IDIGIT(J))
            ELSEIF(I.EQ.4)THEN
              AMAT(I,J)=RND(CV90,IDIGIT(J))
            ELSEIF(I.EQ.5)THEN
              AMAT(I,J)=RND(CV95,IDIGIT(J))
            ELSEIF(I.EQ.6)THEN
              AMAT(I,J)=RND(CV99,IDIGIT(J))
            ELSEIF(I.EQ.7)THEN
              AMAT(I,J)=RND(CV999,IDIGIT(J))
            ENDIF
          ENDIF
 7225   CONTINUE
 7223 CONTINUE
C
      IWHTML(1)=150
      IWHTML(2)=50
      IWHTML(3)=150
      IWRTF(1)=2000
      IWRTF(2)=IWRTF(1)+500
      IWRTF(3)=IWRTF(2)+2000
      IFRST=.TRUE.
      ILAST=.FALSE.
C
      ISTEPN='42C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRD2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='7D'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRD2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ITITL9=' '
      NCTIT9=0
      ITITLE='Conclusions (Upper 1-Tailed Test)'
      NCTITL=33
      NUMLIN=2
      NUMROW=3
      NUMCOL=5
C
      ITITL2(1,1)=' '
      NCTIT2(1,1)=1
      ITITL2(2,1)='Alpha'
      NCTIT2(2,1)=5
C
      ITITL2(1,2)=' '
      NCTIT2(1,2)=1
      ITITL2(2,2)='CDF'
      NCTIT2(2,2)=3
C
      ITITL2(1,3)='Power'
      NCTIT2(1,3)=5
      ITITL2(2,3)='(1-Beta)'
      NCTIT2(2,3)=8
C
      ITITL2(1,4)='Critical'
      NCTIT2(1,4)=8
      ITITL2(2,4)='Value'
      NCTIT2(2,4)=5
C
      ITITL2(1,5)=' '
      NCTIT2(1,5)=1
      ITITL2(2,5)='Conclusion'
      NCTIT2(2,5)=10
C
      NMAX=0
      DO7321I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1 .OR. I.EQ.2)NTOT(I)=7
        IF(I.EQ.3)NTOT(I)=10
        IF(I.EQ.4)NTOT(I)=10
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=3
        ITYPCO(I)='ALPH'
 7321 CONTINUE
      ITYPCO(3)='NUME'
      ITYPCO(4)='NUME'
      IDIGIT(1)=0
      IDIGIT(2)=0
      IDIGIT(3)=2
      IDIGIT(4)=3
      DO7323I=1,NUMROW
        DO7325J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          NCVALU(I,J)=0
          AMAT(I,J)=0.0
 7325   CONTINUE
 7323 CONTINUE
      IVALUE(1,1)='10%'
      IVALUE(2,1)='5%'
      IVALUE(3,1)='1%'
      IVALUE(1,2)='90%'
      IVALUE(2,2)='95%'
      IVALUE(3,2)='99%'
      NCVALU(1,1)=3
      NCVALU(2,1)=2
      NCVALU(3,1)=2
      NCVALU(1,2)=3
      NCVALU(2,2)=3
      NCVALU(3,2)=3
      IF(STATVA.GT.CV90)IVALUE(1,5)='Reject H0'
      IF(STATVA.GT.CV95)IVALUE(2,5)='Reject H0'
      IF(STATVA.GT.CV99)IVALUE(3,5)='Reject H0'
      AMAT(1,3)=RND(APOW90,IDIGIT(3))
      AMAT(2,3)=RND(APOW95,IDIGIT(3))
      AMAT(3,3)=RND(APOW99,IDIGIT(3))
      AMAT(1,4)=RND(CV90,IDIGIT(4))
      AMAT(2,4)=RND(CV95,IDIGIT(4))
      AMAT(3,4)=RND(CV99,IDIGIT(4))
      IVALUE(1,5)='Accept H0'
      IVALUE(2,5)='Accept H0'
      IVALUE(3,5)='Accept H0'
      NCVALU(1,5)=9
      NCVALU(2,5)=9
      NCVALU(3,5)=9
C
      IWHTML(1)=125
      IWHTML(2)=125
      IWHTML(3)=125
      IWHTML(4)=150
      IWHTML(5)=150
      IWRTF(1)=1200
      IWRTF(2)=IWRTF(1)+1200
      IWRTF(3)=IWRTF(2)+1200
      IWRTF(4)=IWRTF(3)+2000
      IWRTF(5)=IWRTF(4)+2000
      IFRST=.FALSE.
      ILAST=.TRUE.
C
      ISTEPN='7E'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRD2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRD2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLRD2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)STATVA,NMCSAM,PVAL,STATCD
 9012   FORMAT('STATVA,NMCSAM,PVAL,STATCD ',G15.7,I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)CV50,CV75,CV90,CV95,CV99
 9014   FORMAT('CV50,CV75,CV90,CV95,CV99 = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
        IF(NMCSAM.GT.1)THEN
          DO9020I=1,MIN(NMCSAM,100)
            WRITE(ICOUT,9021)I,YSTAT(I)
 9021       FORMAT('I,YSTAT(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 9020     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLRD4(STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                  APOW90,APOW95,APOW99,
     1                  IFLAGU,IFRST,ILAST,ICASPL,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--UTILITY ROUTINE USED BY DPLRDI.  THIS ROUTINE
C              UPDATES THE PARAMETERS "STATVAL", "STATCDF", AND
C              "PVALUE" AFTER A DISTRIBUTIONAL LIKELIHOOD RATIO
C              COMPUTATION.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2014/05
C     ORIGINAL VERSION--MAY       2014.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IFLAGU
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IST1CS
      CHARACTER*4 IOP
C
      SAVE IOUNI1
      SAVE IST1CS
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LRD4')THEN
        ISTEPN='1'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLRD4--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,STATVA,STATCD,PVAL
   53   FORMAT('ICASPL,STATVA,STATCD,PVAL = ',A4,2X,3G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFLAGU.EQ.'FILE')THEN
C
        IF(IFRST)THEN
          IOP='OPEN'
          IFLAG1=1
          IFLAG2=0
          IFLAG3=0
          IFLAG4=0
          IFLAG5=0
          CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGA3,ISUBRO,IERROR)
          IF(IERROR.EQ.'YES')THEN
            IST1CS='CLOS'
            GOTO9000
          ELSE
            IST1CS='OPEN'
          ENDIF
C
          WRITE(IOUNI1,295)
  295     FORMAT(11X,'STATVAL',8X,'STATCDF',8X,'PVALUE',
     1           7X,'CV90',11X,'CV95',11X,'CV99',11X,
     1           'POW90',10X,'POW95',10X,'POW99')
  299     FORMAT(6E15.7)
        ENDIF
        IF(IST1CS.EQ.'OPEN')THEN
          WRITE(IOUNI1,299)STATVA,STATCD,PVAL,CV90,CV95,CV99,
     1                     APOW90,APOW95,APOW99
        ENDIF
      ELSEIF(IFLAGU.EQ.'ON')THEN
        IH='STAT'
        IH2='VAL '
        VALUE0=STATVA
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IF(STATCD.NE.CPUMIN)THEN
          IH='STAT'
          IH2='CDF '
          VALUE0=STATCD
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
        IF(PVAL.NE.CPUMIN)THEN
          IH='PVAL'
          IH2='UE  '
          VALUE0=PVAL
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
        IF(CV90.NE.CPUMIN)THEN
          IH='CUTO'
          IH2='FF90'
          VALUE0=CV90
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
        IF(CV95.NE.CPUMIN)THEN
          IH='CUTO'
          IH2='FF95'
          VALUE0=CV95
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
        IF(CV99.NE.CPUMIN)THEN
          IH='CUTO'
          IH2='FF99'
          VALUE0=CV99
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
        IF(APOW90.NE.CPUMIN)THEN
          IH='POWE'
          IH2='R90 '
          VALUE0=APOW90
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
        IF(APOW95.NE.CPUMIN)THEN
          IH='POWE'
          IH2='R95 '
          VALUE0=APOW95
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
        IF(APOW99.NE.CPUMIN)THEN
          IH='POWE'
          IH2='R99 '
          VALUE0=APOW99
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
      ENDIF
C
      IF(ILAST .AND. IFLAGU.EQ.'FILE' .AND. IST1CS.EQ.'OPEN')THEN
        IOP='CLOS'
        IFLAG1=1
        IFLAG2=0
        IFLAG3=0
        IFLAG4=0
        IFLAG5=0
        CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGA3,ISUBRO,IERROR)
        IST1CS='CLOS'
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LRD4')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPLRD4--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLRST(MAXNXT,ICAPSW,IFORSW,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT A 2-SAMPLE LINEAR RANK SUM TEST FOR EITHER
C              EQUAL LOCATION OR EQUAL SCALE.
C     EXAMPLE--TWO SAMPLE LINEAR RANK SUM TEST Y1 Y2
C              TWO SAMPLE LINEAR RANK SUM TEST Y1 Y2 Y3 Y4
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2023/07
C     ORIGINAL VERSION--JULY      2023.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASA2
      CHARACTER*4 ICASA3
      CHARACTER*4 ICTMP1
      CHARACTER*4 ICTMP2
      CHARACTER*4 ICTMP3
      CHARACTER*4 ICTMP4
      CHARACTER*4 ICTMP5
      CHARACTER*4 ICTMP6
      CHARACTER*4 ICTMP7
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASE
      CHARACTER*4 IVARID
      CHARACTER*4 IVARI2
      CHARACTER*4 IVARI3
      CHARACTER*4 IVARI4
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
      CHARACTER*4 IFLAGU
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOST.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION TEMP1(2*MAXOBV)
      DIMENSION TEMP2(2*MAXOBV)
      DIMENSION TEMP3(2*MAXOBV)
      DIMENSION SCORE(2*MAXOBV)
      DIMENSION TAG(2*MAXOBV)
      EQUIVALENCE(GARBAG(IGARB1),TEMP1(1))
      EQUIVALENCE(GARBAG(IGARB3),TEMP2(1))
      EQUIVALENCE(GARBAG(IGARB5),TEMP3(1))
      EQUIVALENCE(GARBAG(IGARB7),SCORE(1))
      EQUIVALENCE(GARBAG(IGARB9),TAG(1))
      EQUIVALENCE(GARBAG(JGAR11),Y1(1))
      EQUIVALENCE(GARBAG(JGAR12),Y2(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLR'
      ISUBN2='ST  '
      IFOUND='NO'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *****************************************************
C               **  TREAT THE TWO SAMPLE LINEAR RANK SUM TEST CASE **
C               *****************************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LRST')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLRST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO,MAXNXT
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO,MAXNXT = ',4(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************************
C               **  STEP 1--                                           **
C               **  EXTRACT THE COMMAND                                **
C               *********************************************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRST')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILASTZ=9999
      ICASAN='LRST'
      ICASA2='TWOT'
      ICASA3='TEST'
C
C     LOOK FOR:
C
C          TWO SAMPLE LINEAR RANK SUM TEST
C          2   SAMPLE LINEAR RANK SUM TEST
C          LOWER TAILED
C          UPPER TAILED
C
      DO100I=0,NUMARG-1
C
        IF(I.EQ.0)THEN
          ICTMP1=ICOM
        ELSE
          ICTMP1=IHARG(I)
        ENDIF
        ICTMP2=IHARG(I+1)
        ICTMP3=IHARG(I+2)
        ICTMP4=IHARG(I+3)
        ICTMP5=IHARG(I+4)
        ICTMP6=IHARG(I+5)
        ICTMP7=IHARG(I+6)
C
        IF(ICTMP1.EQ.'=')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(ICTMP1.EQ.'TWO ' .AND. ICTMP2.EQ.'SAMP' .AND.
     1         ICTMP3.EQ.'LINE' .AND. ICTMP4.EQ.'RANK' .AND.
     1         ICTMP5.EQ.'SUM ' .AND. ICTMP6.EQ.'TEST')THEN
          IFOUND='YES'
          ICASAN='LRST'
          ILASTZ=I+5
        ELSEIF(ICTMP1.EQ.'TWO ' .AND. ICTMP2.EQ.'SAMP' .AND.
     1         ICTMP3.EQ.'LINE' .AND. ICTMP4.EQ.'RANK' .AND.
     1         ICTMP5.EQ.'SUM ' .AND. ICTMP6.EQ.'TEST')THEN
          IFOUND='YES'
          ICASAN='LRST'
          ILASTZ=I+5
CCCCC   ELSEIF(ICTMP1.EQ.'TWO ' .AND. ICTMP2.EQ.'SAMP' .AND.
CCCCC1         ICTMP3.EQ.'LINE' .AND. ICTMP4.EQ.'RANK' .AND.
CCCCC1         ICTMP5.EQ.'SUM ' .AND. ICTMP6.EQ.'CONF' .AND.
CCCCC1         (ICTMP7.EQ.'INTE' .OR. ICTMP7.EQ.'LIMI'))THEN
CCCCC     IFOUND='YES'
CCCCC     ICASAN='LRST'
CCCCC     ICASA3='CONF'
CCCCC     ILASTZ=I+6
CCCCC   ELSEIF(ICTMP1.EQ.'2   ' .AND. ICTMP2.EQ.'SAMP' .AND.
CCCCC1         ICTMP3.EQ.'LINE' .AND. ICTMP4.EQ.'RANK' .AND.
CCCCC1         ICTMP5.EQ.'SUM ' .AND. ICTMP6.EQ.'CONF' .AND.
CCCCC1         (ICTMP7.EQ.'INTE' .OR. ICTMP7.EQ.'LIMI'))THEN
CCCCC     IFOUND='YES'
CCCCC     ICASAN='LRST'
CCCCC     ICASA3='CONF'
        ELSEIF(ICTMP1.EQ.'TWO ' .AND. ICTMP2.EQ.'SAMP' .AND.
     1         ICTMP3.EQ.'LINE' .AND. ICTMP4.EQ.'RANK' .AND.
     1         ICTMP5.EQ.'SUM ')THEN
          IFOUND='YES'
          ICASAN='LRST'
          ILASTZ=I+4
        ELSEIF(ICTMP1.EQ.'TWO ' .AND. ICTMP2.EQ.'SAMP' .AND.
     1         ICTMP3.EQ.'LINE' .AND. ICTMP4.EQ.'RANK' .AND.
     1         ICTMP5.EQ.'SUM ')THEN
          IFOUND='YES'
          ICASAN='LRST'
          ILASTZ=I+4
        ELSEIF(ICTMP1.EQ.'LOWE' .AND. ICTMP2.EQ.'TAIL')THEN
          ICASA2='LOWE'
          ILASTZ=MAX(ILASTZ,I+1)
        ELSEIF(ICTMP1.EQ.'UPPE' .AND. ICTMP2.EQ.'TAIL')THEN
          ICASA2='UPPE'
          ILASTZ=MAX(ILASTZ,I+1)
        ENDIF
  100 CONTINUE
C
      IF(IFOUND.EQ.'NO')GOTO9000
C
      ISHIFT=ILASTZ
      CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGA2,IERROR)
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRST')THEN
        WRITE(ICOUT,91)ICASAN,ICASA2,ICASA3,ISHIFT
   91   FORMAT('DPLRST: ICASAN,ICASA2,ICASA3,ISHIFT = ',
     1         3(A4,2X),I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRST')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='TWO SAMPLE LINEAR RANK TEST'
      MINNA=1
      MAXNA=100
      MINN2=3
      IFLAGE=0
      IFLAGM=1
      MINNVA=2
      MAXNVA=MAXSPN
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRST')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ******************************************************
C               **  STEP 3A--                                       **
C               **  CASE 1: TWO RESPONSE VARIABLES, NO REPLICATION  **
C               ******************************************************
C
      ISTEPN='3A'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRST')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMVA2=1
      DO5210I=1,NUMVAR
        ICOL=I
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1,Y1,Y1,NS1,NLOCA2,NLOCA3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        ISTRT2=I+1
        ISTOP2=NUMVAR
C
        DO5220J=ISTRT2,ISTOP2
C
          ICOL=J
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y2,Y2,Y2,NS2,NLOCA2,NLOCA3,ICASE,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C               *************************************************
C               **  STEP 52--                                  **
C               **  PERFORM A STWO SAMPLE LINEAR RANK SUM TEST **
C               *************************************************
C
          ISTEPN='52'
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LRST')THEN
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,5211)
 5211       FORMAT('***** FROM DPLRST, BEFORE CALL DPLRS2--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,5212)I,J,NS1,NS2,MAXN
 5212       FORMAT('I,J,NS1,NS2,MAXN = ',5I8)
            CALL DPWRST('XXX','BUG ')
            DO5215II=1,MAX(NS1,NS2)
              WRITE(ICOUT,5216)II,Y1(II),Y2(II)
 5216         FORMAT('I,Y1(I),Y2(I) = ',I8,2G15.7)
              CALL DPWRST('XXX','BUG ')
 5215       CONTINUE
          ENDIF
C
          IVARID=IVARN1(I)
          IVARI2=IVARN2(I)
          IVARI3=IVARN1(J)
          IVARI4=IVARN2(J)
          MAXNX2=2*MAXNXT
          CALL DPLRS2(Y1,NS1,Y2,NS2,ICASA2,ICASA3,ILRASC,
     1                SCORE,TAG,TEMP1,TEMP2,TEMP3,MAXNX2,
     1                ICAPSW,ICAPTY,IFORSW,
     1                IVARID,IVARI2,IVARI3,IVARI4,
     1                STATVA,STATCD,PVAL2T,PVALLT,PVALUT,
     1                CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1                CTU999,CTU995,CTU990,CT975,CTU950,CTU900,
     1                IBUGA3,ISUBRO,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C               ***************************************
C               **  STEP 8C--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
          ISTEPN='8C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LRST')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(NUMVAR.GT.2)THEN
            IFLAGU='FILE'
          ELSE
            IFLAGU='ON'
          ENDIF
          IFRST=.FALSE.
          ILAST=.FALSE.
          IF(I.EQ.1 .AND. J.EQ.2)IFRST=.TRUE.
          IF(I.EQ.NUMVAR .AND. J.EQ.NUMVAR)ILAST=.TRUE.
          CALL DPMNN5(ICASA2,
     1                STATVA,STATCD,
     1                PVAL2T,PVALLT,PVALUT,
     1                CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1                CTU999,CTU995,CTU990,CT975,CTU950,CTU900,
     1                IFLAGU,IFRST,ILAST,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
C
 5220   CONTINUE
 5210 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LRST')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLRST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLRS2(Y1,N1,Y2,N2,ICASAN,ICASA3,ILRASC,
     1                  SCORE,TAG,TEMP1,TEMP2,TEMP3,MAXNXT,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  IVARID,IVARI2,IVARI3,IVARI4,
     1                  STATVA,STATCD,
     1                  PVAL2T,PVALLT,PVALUT,
     1                  CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1                  CTU999,CTU995,CTU990,CTU975,CTU950,CTU900,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--THIS ROUTINE CARRIES OUT A 2-SAMPLE LINEAR RANK SUM TEST.
C              SPECIFICALLY,
C
C              1. COMPUTE THE TEST STATISTIC
C
C                    S = SUM[i=1 to n][tag(i)*a(R(i))]
C
C                 WHERE
C
C                    R(i)     IS THE RANK OF THE i-TH OBSERVATION
C                    a(R(i))  IS A SCORE BASED ON THE RANK OF THE i-TH
C                             OBSERVATION
C                    tag(i)   IS THE GROUP-ID OF THE i-TH OBSERVATION
C                    n        IS THE TOTAL NUMNBER OF OBSERVATIONS
C
C                 NOTE THAT TAG MUST HAVE EXACTLY TWO DISTINCT VALUES.
C
C                 THE FOLLOWING SCORES FOR TESTING EQUAL LOCATIONS ARE
C
C                    1. WILCOX:          a(R(I)) = R(i)
C                    2. MEDIAN:          a(R(I)) = 1    if R(i) >  (n+1)/2
C                                                = 0    if R(i) <= (n+1)/2
C                    3. SAVAGE:          a(R(i)) = SUM[j=1 to R(i)]
C                                                  [1/(n-j+1)]
C                                                  (used for testing equal
C                                                  locations of Gumbel
C                                                  distributions)
C                    4. VAN DER WAERDEN: a(R(i)) = NORPPF(R(i)/(n+1))
C
C                 THE FOLLOWING SCORES FOR TESTING EQUAL DISPERSION ARE
C
C                    1. ANSARI BRADLEY:  a(R(I)) = (n+1)/2 - |R(i) - (N+1)/2|
C                    2. KLOTZ:           a(R(I)) = (NORPPF(R(i)/(n+1)))**2
C                    3. MOOD:            a(R(I)) = (R(i) - (n+1)/2)**2
C                    4. CONOVER:         a(R(I)) = (Rank(U(i))**2
C                                                  U(i)=|X(ij) - XBAR(j)|
C                                                  (XBAR = MEAN OF J-TH GROUP)
C                    5. SAVAGE:          a(R(i)) = SUM[j=1 to R(i)]
C                                                  [1/(n-j+1)]
C                                                  (used for testing equal
C                                                  scales of exponential
C                                                  distributions)
C     EXAMPLE--STWO SAMPLE LINEAR RANK SUM TEST Y1 Y2
C     SAMPLE 1 IS IN INPUT VECTOR Y1 (WITH N1 OBSERVATIONS).
C     SAMPLE 2 IS IN INPUT VECTOR Y2 (WITH N2 OBSERVATIONS).
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2023/07
C     ORIGINAL VERSION--JULY      2023.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IVARID
      CHARACTER*4 IVARI2
      CHARACTER*4 IVARI3
      CHARACTER*4 IVARI4
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASA3
      CHARACTER*4 ILRASC
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
CCCCC CHARACTER*4 ICASA2
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION SCORE(*)
      DIMENSION TAG(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
C
CCCCC DIMENSION CONF(5)
CCCCC DIMENSION T(5)
CCCCC DIMENSION TSDERR(5)
CCCCC DIMENSION ALOWER(5)
CCCCC DIMENSION AUPPER(5)
C
      PARAMETER (NUMALP=6)
      REAL ALPHA(NUMALP)
      PARAMETER (NUMAL2=4)
      REAL ALPHA2(NUMAL2)
C
      PARAMETER(NUMCLI=5)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=40)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA ALPHA/0.90, 0.95, 0.975, 0.99, 0.995, 0.999/
      DATA ALPHA2/0.80, 0.90, 0.95, 0.99/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLR'
      ISUBN2='S2  '
      IERROR='NO'
      IWRITE='OFF'
C
      CTL001=0.0
      CTL005=0.0
      CTL010=0.0
      CTL025=0.0
      CTL050=0.0
      CTL100=0.0
      CTU999=0.0
      CTU995=0.0
      CTU990=0.0
      CTU975=0.0
      CTU950=0.0
      CTU900=0.0
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      CTL001=CPUMIN
      CTL005=CPUMIN
      CTL010=CPUMIN
      CTL025=CPUMIN
      CTL050=CPUMIN
      CTL100=CPUMIN
      CTU900=CPUMIN
      CTU950=CPUMIN
      CTU975=CPUMIN
      CTU990=CPUMIN
      CTU995=CPUMIN
      CTU999=CPUMIN
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRS2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPLRS2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASAN,ICASA3,ILRASC
   52   FORMAT('IBUGA3,ISUBRO,ICASAN,ICASA3,ILRASC = ',4(A4,2X),A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,53)IVARID,IVARI2,IVARI3,IVARI4
   53   FORMAT('IVARID,IVARI2,IVARI3,IVARI4 = ',3(A4,2X),A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,55)MAXNXT,N1,NUMDIG,D0
   55   FORMAT('MAXNST,N1,NUMDIG,D0 = ',3I8,G15.7)
        CALL DPWRST('XXX','WRIT')
        IF(N1.GE.1)THEN
          DO56I=1,N1
            WRITE(ICOUT,57)I,Y1(I),Y2(I)
   57       FORMAT('I,Y1(I),Y2(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','WRIT')
   56     CONTINUE
        ENDIF
      ENDIF
C
C               ************************************
C               **   STEP 1--                     **
C               **   CALL DPSGT3 TO COMPUTE THE   **
C               **   BASIC TEST STATISTIC         **
C               ************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRS2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL MEAN(Y1,N1,IWRITE,YMEAN1,IBUGA3,IERROR)
      CALL SD(Y1,N1,IWRITE,YSD1,IBUGA3,IERROR)
      CALL MEDIAN(Y1,N1,IWRITE,TEMP1,MAXNXT,YMED1,IBUGA3,IERROR)
      CALL MEAN(Y2,N2,IWRITE,YMEAN2,IBUGA3,IERROR)
      CALL MEDIAN(Y2,N2,IWRITE,TEMP1,MAXNXT,YMED2,IBUGA3,IERROR)
      CALL SD(Y2,N2,IWRITE,YSD2,IBUGA3,IERROR)
C
      ALPHAZ=0.95
      CALL DPLRS3(Y1,N1,Y2,N2,ILRASC,SCORE,TAG,
     1            TEMP1,TEMP2,TEMP3,MAXNXT,
     1            S,STATVA,STATCD,PVAL2T,PVALLT,PVALUT,
     1            STATME,STATSD,STATVA,
     1            ALPHAZ,ALCL,UCL,
     1            IBUGA3,ISUBRO,IERROR)
C
C               ***************************************
C               **  STEP 21--                        **
C               **  COMPUTE THE CRITICAL VALUES FOR  **
C               **  VARIOUS VALUES OF ALPHA          **
C               ***************************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRS2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     NORMAL APPROXIMATION VALUES
C
      CALL NORPPF(.005,CTL005)
      CALL NORPPF(.010,CTL010)
      CALL NORPPF(.025,CTL025)
      CALL NORPPF(.050,CTL050)
      CALL NORPPF(.100,CTL100)
      CALL NORPPF(.200,CTL200)
      CALL NORPPF(.500,CTL500)
      CALL NORPPF(.500,CTU500)
      CALL NORPPF(.800,CTU800)
      CALL NORPPF(.900,CTU900)
      CALL NORPPF(.950,CTU950)
      CALL NORPPF(.975,CTU975)
      CALL NORPPF(.990,CTU990)
      CALL NORPPF(.995,CTU995)
C
C               *************************************************
C               **   STEP 22--                                 **
C               **   WRITE OUT EVERYTHING FOR A TWO SAMPLE     **
C               **   LINEAR RANK SUM TEST                      **
C               *************************************************
C
      ISTEPN='22'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRS2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      IF(ICASA3.EQ.'TEST')THEN
        IF(ICASAN.EQ.'LOWE')THEN
          ITITLE='Two Sample Lower-Tailed Linear Rank Sum Test'
          NCTITL=44
        ELSEIF(ICASAN.EQ.'UPPE')THEN
          ITITLE='Two Sample Upper-Tailed Linear Rank Sum Test'
          NCTITL=44
        ELSE
          ITITLE='Two Sample Two-Sided Linear Rank Sum Test'
          NCTITL=41
        ENDIF
      ELSE
CCCCC   ITITLE='Confidence Interval for the Linear Rank Sum'
CCCCC   NCTITL=44
      ENDIF
C
      IF(ILRASC.EQ.'WILC')THEN
        ITITLZ='(Wilcoxon Scores)'
        NCTITZ=17
      ELSEIF(ILRASC.EQ.'MEDI')THEN
        ITITLZ='(Median Scores)'
        NCTITZ=15
      ELSEIF(ILRASC.EQ.'MOOD')THEN
        ITITLZ='(Mood Scores)'
        NCTITZ=13
      ELSEIF(ILRASC.EQ.'VAND')THEN
        ITITLZ='(Van Der Waerden Scores)'
        NCTITZ=24
      ELSEIF(ILRASC.EQ.'CONO')THEN
        ITITLZ='(Conover Scores)'
        NCTITZ=16
      ELSEIF(ILRASC.EQ.'KLOT')THEN
        ITITLZ='(Klotz Scores)'
        NCTITZ=14
      ELSEIF(ILRASC.EQ.'SAVA')THEN
        ITITLZ='(Savage Scores)'
        NCTITZ=15
      ELSEIF(ILRASC.EQ.'ANSA')THEN
        ITITLZ='(Ansari Bradley Scores)'
        NCTITZ=23
      ENDIF
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='First Response Variable: '
      WRITE(ITEXT(ICNT)(26:29),'(A4)')IVARID(1:4)
      WRITE(ITEXT(ICNT)(30:33),'(A4)')IVARI2(1:4)
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Second Response Variable: '
      WRITE(ITEXT(ICNT)(27:30),'(A4)')IVARI3(1:4)
      WRITE(ITEXT(ICNT)(31:34),'(A4)')IVARI4(1:4)
      NCTEXT(ICNT)=34
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IF(ICASA3.EQ.'TEST')THEN
C
C       HYPOTHESIS TEST CASE
C
        IF(ILRASC.EQ.'WILC' .OR. ILRASC.EQ.'VAND' .OR.
     1   ILRASC.EQ.'MEDI' .OR. ILRASC.EQ.'SAVA')THEN
          IF(ICASAN.EQ.'TWOT')THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='H0: Location1 = Location2'
            NCTEXT(ICNT)=26
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='Ha: Location1 not equal Location2'
            NCTEXT(ICNT)=34
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ELSEIF(ICASAN.EQ.'LOWE')THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='H0: Location1 < Location2'
            NCTEXT(ICNT)=25
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='Ha: Location1 >= Location2'
            NCTEXT(ICNT)=29
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ELSEIF(ICASAN.EQ.'UPPE')THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='H0: Location1 > Location2'
            NCTEXT(ICNT)=25
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='Ha: Location1 <= Location2'
            NCTEXT(ICNT)=27
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ENDIF
        ELSE
          IF(ICASAN.EQ.'TWOT')THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='H0: Scale1 = Scale2'
            NCTEXT(ICNT)=19
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='Ha: Scale1 not equal Scale2'
            NCTEXT(ICNT)=27
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ELSEIF(ICASAN.EQ.'LOWE')THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='H0: Scale1 < Scale2'
            NCTEXT(ICNT)=19
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='Ha: Scale1 >= Scale2'
            NCTEXT(ICNT)=20
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ELSEIF(ICASAN.EQ.'UPPE')THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='H0: Scale1 > Scale2'
            NCTEXT(ICNT)=19
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
            ICNT=ICNT+1
            ITEXT(ICNT)='Ha: Scale1 <= Scale2'
            NCTEXT(ICNT)=20
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ENDIF
        ENDIF
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations for Sample 1:'
      NCTEXT(ICNT)=36
      AVALUE(ICNT)=REAL(N1)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Mean for Sample 1:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=YMEAN1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Median for Sample 1:'
      NCTEXT(ICNT)=20
      AVALUE(ICNT)=YMED1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Standard Deviation for Sample 1:'
      NCTEXT(ICNT)=32
      AVALUE(ICNT)=YSD1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations for Sample 2:'
      NCTEXT(ICNT)=36
      AVALUE(ICNT)=REAL(N2)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Mean for Sample 2:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=YMEAN2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Median for Sample 2:'
      NCTEXT(ICNT)=20
      AVALUE(ICNT)=YMED2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Standard Deviation for Sample 2:'
      NCTEXT(ICNT)=32
      AVALUE(ICNT)=YSD2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IF(ICASA3.EQ.'TEST')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Test (Normal Approximation):'
        NCTEXT(ICNT)=30
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
C
        ICNT=ICNT+1
        ITEXT(ICNT)='Test Statistic Value:'
        NCTEXT(ICNT)=21
        AVALUE(ICNT)=STATVA
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Score Value:'
        NCTEXT(ICNT)=12
        AVALUE(ICNT)=S
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Expected Value of Test Statistic:'
        NCTEXT(ICNT)=33
        AVALUE(ICNT)=STATME
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Standard Deviation of Test Statistic:'
        NCTEXT(ICNT)=37
        AVALUE(ICNT)=STATSD
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='CDF Value:'
        NCTEXT(ICNT)=10
        AVALUE(ICNT)=STATCD
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='P-Value (2-tailed test):'
        NCTEXT(ICNT)=24
        AVALUE(ICNT)=PVAL2T
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='P-Value (lower-tailed test):'
        NCTEXT(ICNT)=28
        AVALUE(ICNT)=PVALLT
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='P-Value (upper-tailed test):'
        NCTEXT(ICNT)=28
        AVALUE(ICNT)=PVALUT
        IDIGIT(ICNT)=NUMDIG
      ENDIF
C
      NUMROW=ICNT
      DO2110I=1,NUMROW
        NTOT(I)=15
 2110 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='21A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRS2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      IF(ICASA3.EQ.'TEST')THEN
        ISTEPN='21B'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRS2')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(ICASAN.EQ.'TWOT')THEN
          ITITLE='Two-Tailed Test: Normal Approximation'
          NCTITL=37
        ELSEIF(ICASAN.EQ.'LOWE')THEN
          ITITLE='Lower-Tailed Test: Normal Approximation'
          NCTITL=39
        ELSEIF(ICASAN.EQ.'UPPE')THEN
          ITITLE='Upper-Tailed Test: Normal Approximation'
          NCTITL=39
        ENDIF
        ITITL9=' '
        NCTIT9=0
C
        DO2130J=1,NUMCLI
          DO2140I=1,MAXLIN
            ITITL2(I,J)=' '
            NCTIT2(I,J)=0
 2140     CONTINUE
 2130   CONTINUE
C
        IF(ICASAN.NE.'TWOT')THEN
          NUMCOL=4
          ITITL2(2,1)='Significance'
          NCTIT2(2,1)=12
          ITITL2(3,1)='Level'
          NCTIT2(3,1)=5
C
          ITITL2(2,2)='Test '
          NCTIT2(2,2)=4
          ITITL2(3,2)='Statistic'
          NCTIT2(3,2)=9
C
          ITITL2(2,3)='Critical'
          NCTIT2(2,3)=8
          IF(ICASAN.EQ.'LOWE')THEN
            ITITL2(3,3)='Value (<)'
            NCTIT2(3,3)=9
          ELSE
            ITITL2(3,3)='Value (>)'
            NCTIT2(3,3)=9
          ENDIF
C
          ITITL2(1,4)='Null'
          NCTIT2(1,4)=4
          ITITL2(2,4)='Hypothesis'
          NCTIT2(2,4)=10
          ITITL2(3,4)='Conclusion'
          NCTIT2(3,4)=10
C
        ELSE
          NUMCOL=5
          ITITL2(2,1)='Significance'
          NCTIT2(2,1)=12
          ITITL2(3,1)='Level'
          NCTIT2(3,1)=5
C
          ITITL2(2,2)='Test '
          NCTIT2(2,2)=4
          ITITL2(3,2)='Statistic'
          NCTIT2(3,2)=9
C
          ITITL2(1,3)='Lower'
          NCTIT2(1,3)=5
          ITITL2(2,3)='Critical'
          NCTIT2(2,3)=8
          ITITL2(3,3)='Value (<)'
          NCTIT2(3,3)=9
C
          ITITL2(1,4)='Upper'
          NCTIT2(1,4)=5
          ITITL2(2,4)='Critical'
          NCTIT2(2,4)=8
          ITITL2(3,4)='Value (>)'
          NCTIT2(3,4)=9
C
          ITITL2(1,5)='Null'
          NCTIT2(1,5)=4
          ITITL2(2,5)='Hypothesis'
          NCTIT2(2,5)=10
          ITITL2(3,5)='Conclusion'
          NCTIT2(3,5)=10
C
        ENDIF
C
        NMAX=0
        DO2150I=1,NUMCOL
          VALIGN(I)='b'
          ALIGN(I)='r'
          NTOT(I)=15
          NMAX=NMAX+NTOT(I)
          ITYPCO(I)='NUME'
          IDIGIT(I)=NUMDIG
          IF(ICASAN.NE.'TWOT')THEN
            IF(I.EQ.1 .OR. I.EQ.4)THEN
              ITYPCO(I)='ALPH'
            ENDIF
          ELSE
            IF(I.EQ.1 .OR. I.EQ.5)THEN
              ITYPCO(I)='ALPH'
            ENDIF
          ENDIF
 2150   CONTINUE
C
        IWHTML(1)=125
        IWHTML(2)=175
        IWHTML(3)=175
        IWHTML(4)=175
        IWHTML(5)=175
        IINC=1800
        IINC2=1400
        IWRTF(1)=IINC
        IWRTF(2)=IWRTF(1)+IINC
        IWRTF(3)=IWRTF(2)+IINC
        IWRTF(4)=IWRTF(3)+IINC
        IWRTF(5)=IWRTF(4)+IINC
C
        DO2160J=1,NUMAL2
C
          AMAT(J,2)=STATVA
          IF(ICASAN.EQ.'TWOT')THEN
            ALPHAT=ALPHA2(J)
            ATEMP=(1.0 - ALPHAT)/2.0
            ATEMP=1.0 - ATEMP
            CALL NORPPF(ATEMP,CUTTMP)
            AMAT(J,3)=-CUTTMP
            AMAT(J,4)=CUTTMP
            IVALUE(J,5)(1:6)='REJECT'
            IF(ABS(STATVA).LT.AMAT(J,4))THEN
              IVALUE(J,5)(1:6)='ACCEPT'
            ENDIF
            NCVALU(J,5)=6
C
            WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
            IVALUE(J,1)(5:5)='%'
            NCVALU(J,1)=5
          ELSEIF(ICASAN.EQ.'LOWE' .OR. ICASAN.EQ.'UPPE')THEN
            IVALUE(J,4)(1:6)='REJECT'
            ALPHAT=ALPHA2(J)
            CALL NORPPF(ALPHAT,CUTTMP)
            IF(ICASAN.EQ.'LOWE')THEN
              CUTTMP=-ABS(CUTTMP)
              IF(STATVA.GT.CUTTMP)THEN
                IVALUE(J,4)(1:6)='ACCEPT'
              ENDIF
            ELSEIF(ICASAN.EQ.'UPPE')THEN
              CUTTMP=ABS(CUTTMP)
              IF(STATVA.LT.CUTTMP)THEN
                IVALUE(J,4)(1:6)='ACCEPT'
              ENDIF
            ENDIF
            AMAT(J,3)=CUTTMP
            NCVALU(J,4)=6
C
            WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
            IVALUE(J,1)(5:5)='%'
            NCVALU(J,1)=5
          ENDIF
 2160   CONTINUE
C
        NUMLIN=3
        IFRST=.TRUE.
        ILAST=.TRUE.
        IFLAGS=.TRUE.
        IFLAGE=.TRUE.
C
        CALL DPDTA5(ITITLE,NCTITL,
     1              ITITL9,NCTIT9,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMAL2,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              IFLAGS,IFLAGE,
     1              ISUBRO,IBUGA3,IERROR)
      ELSE
C
C       CONFIDENCE INTERVAL CASE.  THIS DOESN'T ACTUALLY MAKE
C       SENSE SO DE-ACTIVATE FOR NOW.
C
CCCCC   ISTEPN='5B'
CCCCC   IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRS2')
CCCCC1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC   ICASA2='LRST'
CCCCC   CONF(1)=80.0
CCCCC   CONF(2)=90.0
CCCCC   CONF(3)=95.0
CCCCC   CONF(4)=99.0
CCCCC   CONF(5)=99.9
CCCCC   CALL NORPPF(.900,T(1))
CCCCC   CALL NORPPF(.950,T(2))
CCCCC   CALL NORPPF(.975,T(3))
CCCCC   CALL NORPPF(.995,T(4))
CCCCC   CALL NORPPF(.9995,T(5))
CCCCC   DO3010I=1,5
CCCCC     TSDERR(I)=STATSD
CCCCC     ALOWER(I)=STATVA - T(I)*STATSD
CCCCC     AUPPER(I)=STATVA + T(I)*STATSD
C3010   CONTINUE
C
CCCCC   CALL DPDT11(CONF,T,TSDERR,ALOWER,AUPPER,
CCCCC1              ICASA2,ICAPSW,ICAPTY,NUMDIG,
CCCCC1              ISUBRO,IBUGA3,IERROR)
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LRS2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLRS2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)STATVA,STATCD,PVAL2T,PVALLT,PVALUT
 9013   FORMAT('STATVA,STATCD,PVAL2T,PVALLT,PVALUT = ',5G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLRS3(Y1,N1,Y2,N2,ILRASC,SCORE,TAG,
     1                  TEMP1,TEMP2,TEMP3,MAXNXT,
     1                  S,STATVA,STATCD,PVAL2T,PVALLT,PVALUT,
     1                  AMEAN,SD,VAR,
     1                  ALPHA,LCL,UCL,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--THIS ROUTINE COMPUTES A TWO SAMPLE LINEAR SUM RANK TEST.
C              SPECIFICALLY,
C
C              1. COMPUTE THE TEST STATISTIC
C
C                    S = SUM[i=1 to n][tag(i)*a(R(i))]
C
C                 WHERE
C
C                    R(i)     IS THE RANK OF THE i-TH OBSERVATION
C                    a(R(i))  IS A SCORE BASED ON THE RANK OF THE i-TH
C                             OBSERVATION
C                    tag(i)   IS THE GROUP-ID OF THE i-TH OBSERVATION
C                    n        IS THE TOTAL NUMNBER OF OBSERVATIONS
C
C                 NOTE THAT TAG MUST HAVE EXACTLY TWO DISTINCT VALUES.
C
C                 THE FOLLOWING SCORES FOR TESTING EQUAL LOCATIONS ARE
C
C                    1. WILCOX:          a(R(I)) = R(i)
C                    2. MEDIAN:          a(R(I)) = 1    if R(i) >  (n+1)/2
C                                                = 0    if R(i) <= (n+1)/2
C                    3. SAVAGE:          a(R(i)) = SUM[j=1 to R(i)]
C                                                  [1/(n-j+1)]
C                                                  (used for testing equal
C                                                  locations of Gumbel
C                                                  distributions)
C                    4. VAN DER WAERDEN: a(R(i)) = NORPPF(R(i)/(n+1))
C
C                 THE FOLLOWING SCORES FOR TESTING EQUAL DISPERSION ARE
C
C                    1. ANSARI BRADLEY:  a(R(I)) = (n+1)/2 - |R(i) - (N+1)/2|
C                    2. KLOTZ:           a(R(I)) = (NORPPF(R(i)/(n+1)))**2
C                    3. MOOD:            a(R(I)) = (R(i) - (n+1)/2)**2
C                    4. CONOVER:         a(R(I)) = (Rank(U(i))**2
C                                                  U(i)=|X(ij) - XBAR(j)|
C                                                  (XBAR = MEAN OF J-TH GROUP)
C                    5. SAVAGE:          a(R(i)) = SUM[j=1 to R(i)]
C                                                  [1/(n-j+1)]
C                                                  (used for testing equal
C                                                  scales of exponential
C                                                  distributions)
C     EXAMPLE--TWO SAMPLE LINEAR RANK SUM TEST Y1 Y2
C              SAMPLE 1 IS IN INPUT VECTOR Y1 (WITH N1 OBSERVATIONS)
C              SAMPLE 2 IS IN INPUT VECTOR Y2 (WITH N2 OBSERVATIONS).
C     REFERENCE--xx
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2023/06
C     ORIGINAL VERSION--JULY      2023.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      REAL        LCL
C
      CHARACTER*4 ILRASC
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION SCORE(*)
      DIMENSION TAG(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLR'
      ISUBN2='S3  '
      IERROR='NO'
      IWRITE='OFF'
C
      STATVA=CPUMIN
      STATV1=CPUMIN
      STATV2=CPUMIN
      STATV3=CPUMIN
      STATCD=CPUMIN
      PVAL2T=CPUMIN
      PVALLT=CPUMIN
      PVALUT=CPUMIN
C
      DO10II=1,MAXNXT
        SCORE(II)=0.0
        TAG(II)=0.0
        TEMP1(II)=0.0
        TEMP2(II)=0.0
        TEMP3(II)=0.0
   10 CONTINUE
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRS3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPLRS3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ILRASC,N1,N2,ALPHA
   52   FORMAT('IBUGA3,ISUBRO,ILRASC,N1,N2,ALPHA = ',
     1         3(A4,2X),2I8,G15.7)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,MAX(N1,N2)
          WRITE(ICOUT,57)I,Y1(I),Y2(I)
   57     FORMAT('I,Y1(I),Y2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRS3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N1.LE.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN TWO SAMPLE LINEAR RANK SUM TEST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,112)
  112   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE FIRST ',
     1         'RESPONSE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
  113   FORMAT('      VARIABLE MUST BE 3 OR LARGER.  SUCH WAS NOT THE ',
     1         'CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,117)N1
  117   FORMAT('      THE NUMBER OF OBSERVATIONS   = ',I8,'.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSEIF(N2.LE.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,122)
  122   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE SECOND ',
     1         'RESPONSE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,117)N2
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ************************************
C               **   STEP 2--                     **
C               **   CREATE COMBINED DATA SET AND **
C               **   BASIC TEST STATISTIC         **
C               ************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRS3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N1.LE.N2)THEN
        DO205II=1,N1
          TAG(II)=1.0
  205   CONTINUE
        DO210II=1,N2
          Y1(N1+II)=Y2(II)
          TAG(N1+II)=0.0
  210   CONTINUE
        N=N1+N2
      ELSE
        DO225II=1,N1
          TAG(II)=0.0
  225   CONTINUE
        DO230II=1,N2
          Y1(N1+II)=Y2(II)
          TAG(N1+II)=1.0
  230   CONTINUE
        N=N1+N2
      ENDIF
C
C     CALL THE APPROPRIATE SCORE STATISTIC
C
      IF(ILRASC.EQ.'WILC')THEN
        CALL RANK(Y1,N,IWRITE,SCORE,TEMP1,MAXNXT,IBUGA3,IERROR)
      ELSEIF(ILRASC.EQ.'SAVA')THEN
        CALL SSCORE(Y1,N,IWRITE,SCORE,IBUGA3,ISUBRO,IERROR)
      ELSEIF(ILRASC.EQ.'CONO')THEN
        CALL CSCORE(Y1,TAG,N,IWRITE,SCORE,TEMP1,TEMP2,TEMP3,MAXNXT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ILRASC.EQ.'VAND')THEN
        CALL VSCORE(Y1,N,IWRITE,SCORE,TEMP1,MAXNXT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ILRASC.EQ.'ANSA')THEN
        CALL ASCORE(Y1,N,IWRITE,SCORE,TEMP1,MAXNXT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ILRASC.EQ.'MOOD')THEN
        CALL MSCORE(Y1,N,IWRITE,SCORE,TEMP1,MAXNXT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ILRASC.EQ.'MEDI')THEN
        CALL DSCORE(Y1,N,IWRITE,SCORE,TEMP1,MAXNXT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ILRASC.EQ.'KLOT')THEN
        CALL KSCORE(Y1,N,IWRITE,SCORE,TEMP1,MAXNXT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,252)ILRASC
  252   FORMAT('      THE REQUESTED SCORE (',A4,') IS NOT CURRENTLY ',
     1         'SUPPORTED.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
      ENDIF
      IF(IERROR.EQ.'YES')GOTO9000
C
      STATVA=0.0
      SUM1=0.0
      SUM2=0.0
      NTEMP=0
      DO260I=1,N
        IF(TAG(I).EQ.1.0)THEN
          STATVA=STATVA + SCORE(I)
          NTEMP=NTEMP+1
        ENDIF
        SUM1=SUM1 + SCORE(I)
  260 CONTINUE
      S=STATVA
      AMEAN=(REAL(NTEMP)/REAL(N))*SUM1
      AVESCO=SUM1/REAL(N)
      DO270I=1,N
        SUM2=SUM2 + (SCORE(I) - AVESCO)**2
  270 CONTINUE
      AFACT=REAL(N1)*REAL(N2)/(REAL(N)*(REAL(N)-1.0))
      VAR=AFACT*SUM2
      SD=SQRT(VAR)
      STATVA=(STATVA - AMEAN)/SD
      CALL NORCDF(STATVA,STATCD)
      PVALLT=STATCD
      PVALUT=1.0 - STATCD
      IF(STATVA.LE.0.0)THEN
        PVAL2T=2.0*PVALLT
      ELSE
        PVAL2T=2.0*PVALUT
      ENDIF
C
C     GENERATE CONFIDENCE LIMITS - NOT SURE ABOUT THIS SECTION,
C     COMMENT OUT FOR NOW.
C
CCCCC ALPHAT=ALPHA
CCCCC IF(ALPHA.GE.1.0 .AND. ALPHA.LT.100.0)ALPHAT=ALPHA/100.
CCCCC IF(ALPHAT.LE.0.0 .OR.  ALPHAT.GE.1.0)ALPHAT=0.05
CCCCC IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
CCCCC ALPHAT=ALPHAT/2.0
CCCCC ADF=REAL(N-1)
CCCCC CALL TPPF(ALPHAT,ADF,PPF)
CCCCC CALL NORPPF(ALPHAT,PPF)
CCCCC PPF=ABS(PPF)
CCCCC UCL=STATVA + PPF*SD
CCCCC LCL=STATVA - PPF*SD
      UCL=CPUMIN
      LCL=CPUMIN
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LRS3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLRS3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','WRIT')
        IF(IERROR.EQ.'NO')THEN
          WRITE(ICOUT,9013)STATVA,STATCD,PVALLT,PVALUT,PVAL2T
 9013     FORMAT('STATVA,STATCD,PVALLT,PVALUT,PVAL2T = ',5G15.7)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,9014)SUM1,SUM2,AMEAN,SD,Z,NTEMP
 9014     FORMAT('SUM1,SUM2,AMEAN,SD,Z,NTEMP = ',5G15.7,I10)
          CALL DPWRST('XXX','WRIT')
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLTES(YTEMP,XTEMP,MAXNXT,ICASAN,
     1                  ICAPSW,IFORSW,IMULT,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT LEVENE TEST (K-SAMPLE HOMOGENEITY OF VARIANCES)
C     EXAMPLE--LEVENE TEST Y X
C     REFERENCE--Levene, H. (1960). In Contributions to Probability
C                and Statistics: Essays in Honor of Harold Hotelling,
C                I. Olkin et al. eds., Stanford University Press,
C                pp. 278-292. 
C              --Brown, M. B. and Forsythe, A. B. (1974), Journal
C                of the American Statistical Association, 69, 364-367.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--97/9
C     ORIGINAL VERSION--SEPTEMBER 1997.
C     UPDATED         --AUGIST    1999. BUG FIX IN CALCULATION,
C                                       ADD OPTION OF MEDIAN,
C                                       MEAN, OR TRIMMED MEAN
C     UPDATED         --JANUARY   2004. SUPPORT FOR HTML, LATEX OUTPUT
C     UPDATED         --FEBRUARY  2011. USE DPPARS
C     UPDATED         --FEBRUARY  2011. SUPPORT FOR "MULTIPLE" CASE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 IFORSW
      CHARACTER*4 IMULT
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
      CHARACTER*4 ICAPSW
C
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IHOST1
      CHARACTER*4 ISUBN0
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      DIMENSION YTEMP(*)
      DIMENSION XTEMP(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION YMEDIA(MAXOBV)
      DIMENSION YMEAN(MAXOBV)
      DIMENSION T(MAXOBV)
      DIMENSION TBARIV(MAXOBV)
      DIMENSION DTAG(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE(GARBAG(IGARB1),YMEDIA(1))
      EQUIVALENCE(GARBAG(IGARB2),T(1))
      EQUIVALENCE(GARBAG(IGARB3),TBARIV(1))
      EQUIVALENCE(GARBAG(IGARB4),DTAG(1))
      EQUIVALENCE(GARBAG(IGARB5),YMEAN(1))
      EQUIVALENCE(GARBAG(IGARB6),TEMP1(1))
      EQUIVALENCE(GARBAG(IGARB7),TEMP2(1))
      EQUIVALENCE(GARBAG(IGARB8),TEMP3(1))
      EQUIVALENCE(GARBAG(IGARB9),TEMP4(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLT'
      ISUBN2='ES  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IERROR='NO'
      IFOUND='YES'
C
C               **************************************
C               **  TREAT THE LEVENE TEST CASE  **
C               **************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LTES')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLTES--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)MAXNXT,IMULT,IFORSW
   55   FORMAT('MAXNXT,IMULT,IFORSW = ',I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 1--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LTES')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='LEVENE TEST'
      MINNA=1
      MAXNA=100
      MINNVA=2
      MAXNVA=2
      IFLAGE=1
      IFLAGM=0
      IF(IMULT.EQ.'ON')THEN
        IFLAGE=0
        IFLAGM=1
        MINNVA=2
        MAXNVA=30
      ENDIF
      MINN2=2
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LTES')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,181)
  181   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,182)NQ,NUMVAR,IMULT
  182   FORMAT('NQ,NUMVAR,IMULT = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO185I=1,NUMVAR
            WRITE(ICOUT,187)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  187       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  185     CONTINUE
        ENDIF
      ENDIF
C
C               ******************************************************
C               **  STEP 3--                                        **
C               **  GENERATE THE LEVENE TEST       FOR THE VARIOUS  **
C               **  CASES                                           **
C               ******************************************************
C
      ISTEPN='3'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *****************************************
C               **  STEP 3A--                          **
C               **  CASE 1: TWO RESPONSE VARIABLES     **
C               **          WITH NO REPLICATION        **
C               *****************************************
C
C     NOTE: ONLY ALLOW MATRIX ARGUMENTS FOR "MULTIPLE" CASE.
C           FOR CASE WHERE SECOND VARIABLE IS A GROUP-ID VARIABLE,
C           MATRIX ARGUMENTS DON'T MAKE SENSE.
C
      IF(IMULT.EQ.'OFF')THEN
        ISTEPN='3A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LTES')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        NUMVA2=2
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y,X,YTEMP,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
C               ******************************************************
C               **  STEP 3B--
C               **  PREPARE FOR ENTRANCE INTO DPLTE2--
C               ******************************************************
C
        ISTEPN='3B'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LTE2')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,331)
  331     FORMAT('***** FROM DPLTES, AS WE ARE ABOUT TO CALL DPLTE2--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,332)NLOCAL
  332     FORMAT('NLOCAL = ',I8)
          CALL DPWRST('XXX','BUG ')
          DO335I=1,NLOCAL
            WRITE(ICOUT,336)I,Y(I),X(I)
  336       FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
  335     CONTINUE
        ENDIF
C
        CALL DPLTE2(Y,X,NLOCAL,ICASAN,MAXOBV,IVARN1,IVARN2,
     1              YTEMP,XTEMP,YMEAN,YMEDIA,T,TBARIV,DTAG,MAXNXT,
     1              TEMP1,TEMP2,TEMP3,TEMP4,
     1              ICAPSW,ICAPTY,IFORSW,IMULT,ILEVGS,
     1              STATVA,STATCD,PVALUE,
     1              CUT0,CUT50,CUT75,CUT90,CUT95,CUT99,CUT999,
     1              IBUGA3,ISUBRO,IERROR)
C
C               *******************************************************
C               **  STEP 4A--                                        **
C               **  CASE 2: MULTIPLE RESPONSE VARIABLES.  NOTE THAT  **
C               **          LEVENE TEST, THE MULTIPLE LABS ARE       **
C               **          CONVERTED INTO A "Y X" STACKED PAIR      **
C               **          WHERE "X" IS THE LAB-ID VARIABLE.        **
C               *******************************************************
C
      ELSEIF(IMULT.EQ.'ON')THEN
        ISTEPN='4A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LTES')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        NUMVA2=NUMVAR
        CALL DPPAR8(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              XTEMP,Y,X,NLOCAL,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NUMVAR=2
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LTES')THEN
          ISTEPN='4B'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,442)
  442     FORMAT('***** FROM THE MIDDLE  OF DPLTES--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,443)ICASAN,NUMVAR,NLOCAL
  443     FORMAT('ICASAN,NUMVAR,NLOCAL = ',A4,2I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO445I=1,NLOCAL
              WRITE(ICOUT,446)I,Y(I),X(I)
  446         FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
              CALL DPWRST('XXX','BUG ')
  445       CONTINUE
          ENDIF
        ENDIF
C
        CALL DPLTE2(Y,X,NLOCAL,ICASAN,MAXOBV,IVARN1,IVARN2,
     1              YTEMP,XTEMP,YMEAN,YMEDIA,T,TBARIV,DTAG,MAXNXT,
     1              TEMP1,TEMP2,TEMP3,TEMP4,
     1              ICAPSW,ICAPTY,IFORSW,IMULT,ILEVGS,
     1              STATVA,STATCD,PVALUE,
     1              CUT0,CUT50,CUT75,CUT90,CUT95,CUT99,CUT999,
     1              IBUGA3,ISUBRO,IERROR)
C
      ENDIF
C
C               ***************************************
C               **  STEP 61--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='61'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LTES')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISUBN0='DPLT'
C
      IH='STAT'
      IH2='VAL '
      VALUE0=STATVA
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='STAT'
      IH2='CDF '
      VALUE0=STATCD
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='PVAL'
      IH2='UE  '
      VALUE0=PVALUE
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF0 '
      VALUE0=CUT0
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF50'
      VALUE0=CUT50
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF75'
      VALUE0=CUT75
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF90'
      VALUE0=CUT90
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF95'
      VALUE0=CUT95
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF99'
      VALUE0=CUT99
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='F999'
      VALUE0=CUT99
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LTES')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLTES--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NLOCAL,STATVA,STATCD
 9014   FORMAT('NLOCAL,STATVA,STATCD = ',I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLTE2(Y,TAG,N,ICASAN,MAXOBV,IVARID,IVARI2,
     1                  YTEMP,XTEMP,YMEAN,YMEDIA,T,TBARIV,DTAG,MAXNXT,
     1                  TEMP1,TEMP2,TEMP3,TEMP4,
     1                  ICAPSW,ICAPTY,IFORSW,IMULT,ILEVGS,
     1                  STATVA,STATCD,PVAL,
     1                  CUT0,CUT50,CUT75,CUT90,CUT95,CUT99,CUT999,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--THIS ROUTINE CARRIES OUT LEVENE'S TEST
C              (K-SAMPLE HOMOSCEDASTICITY TEST)
C     EXAMPLE--LEVENE'S TEST Y TAG
C     REFERENCE--Levene, H. (1960). In Contributions to Probability
C                and Statistics: Essays in Honor of Harold Hotelling,
C                I. Olkin et al. eds., Stanford University Press,
C                pp. 278-292. 
C              --Brown, M. B. and Forsythe, A. B. (1974), Journal
C                of the American Statistical Association, 69, 364-367.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--97/9
C     ORIGINAL VERSION--SEPTEMBER 1997.
C     UPDATED         --AUGUST    1999. BUG FIX IN CALCULATION,
C                                       SUPPORT FOR MEDIAN, MEAN,
C                                       OR TRIMMED MEAN VERSION
C     UPDATED         --JANUARY   2004. SUPPORT FOR HTML, LATEX OUTPUT
C     UPDATED         --JULY      2005. ADD SOME TEXT TO THE OUTPUT
C                                       TO MAKE IT MORE EXPLICIT
C                                       WHICH VARIANT OF THE TEST
C                                       IS BEING USED.
C     UPDATED         --FEBRUARY  2011. USE DPDTA1 AND DPDTA4 TO PRINT
C                                       OUTPUT TABLES.  THIS ADDS RTF
C                                       SUPPORT AND SPECIFICATION OF
C                                       THE NUMBER OF DIGITS.
C     UPDATED         --FEBRUARY  2011. OPTION TO PRINT GROUP
C                                       STATISITCS.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IMULT
      CHARACTER*4 ILEVGS
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 IWRITE
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DOUBLE PRECISION DSUM1
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION TAG(*)
      DIMENSION DTAG(*)
      DIMENSION YTEMP(*)
      DIMENSION XTEMP(*)
      DIMENSION YMEDIA(*)
      DIMENSION YMEAN(*)
      DIMENSION T(*)
      DIMENSION TBARIV(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION TEMP4(*)
C
      PARAMETER (NUMALP=8)
      REAL ALPHA(NUMALP)
C
      PARAMETER(NUMCLI=4)
      PARAMETER(MAXLIN=2)
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*1  ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA ALPHA/
     1 0.0, 50.0, 75.0, 90.0, 95.0, 97.5, 99.0, 99.9/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLT'
      ISUBN2='E2  '
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LTE2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPLTE2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,IMULT,ILEVGS,N
   52   FORMAT('IBUGA3,ISUBRO,IMULT,ILEVGS,N = ',4(A4,2X),I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I),TAG(I)
   57     FORMAT('I,Y(I),TAG(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1111)
 1111   FORMAT('***** ERROR IN LEVENE TEST--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1112)
 1112   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE RESPONSE ',
     1         'VARIABLE IS LESS THAN TWO.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1114)N
 1114   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO1135I=2,N
        IF(Y(I).NE.HOLD)GOTO1139
 1135 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1111)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1131)HOLD
 1131 FORMAT('      THE RESPONSE VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      GOTO9000
 1139 CONTINUE
C
      HOLD=TAG(1)
      DO1235I=2,N
      IF(TAG(I).NE.HOLD)GOTO1239
 1235 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1111)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1231)HOLD
 1231 FORMAT('      THE GROUP-ID VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      GOTO9000
 1239 CONTINUE
C
C               ******************************
C               **  STEP 41--               **
C               **  CARRY OUT CALCULATIONS  **
C               **  FOR    LEVENE'S TEST    **
C               ******************************
C
      ISTEPN='41'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWRITE='OFF'
      CALL DISTIN(TAG,N,IWRITE,DTAG,NUMDIS,IBUGA3,IERROR)
C
      DO4200IDIS=1,NUMDIS
         J=0
         DO4300I=1,N
            IF(TAG(I).EQ.DTAG(IDIS))THEN
               J=J+1
               YTEMP(J)=Y(I)
            ENDIF
 4300    CONTINUE
         CALL MEDIAN(YTEMP,J,IWRITE,XTEMP,MAXNXT,YMED,
     1               IBUGA3,IERROR)
         CALL MEAN(YTEMP,J,IWRITE,YMEANT,IBUGA3,IERROR)
         CALL SD(YTEMP,J,IWRITE,YSD,IBUGA3,IERROR)
         TEMP1(IDIS)=REAL(J)
         TEMP2(IDIS)=YMEANT
         TEMP3(IDIS)=YMED
         TEMP4(IDIS)=YSD
         IF(ICASAN.EQ.'LMED')THEN
           YMEDIA(IDIS)=YMED
         ELSEIF(ICASAN.EQ.'LMEA')THEN
           YMEDIA(IDIS)=YMEANT
         ELSEIF(ICASAN.EQ.'LTRI')THEN
           NTRIM1=-1
           NTRIM2=-1
           PROP1=10.0
           PROP2=10.0
           IUPPER=MAXOBV
           CALL TRIMME(YTEMP,J,PROP1,PROP2,NTRIM1,NTRIM2,IWRITE,XTEMP,
     1                 IUPPER,YMEDIA(IDIS),
     1                 IBUGA3,ISUBRO,IERROR)
           TEMP3(IDIS)=YMEDIA(IDIS)
         ELSE
           CALL MEDIAN(YTEMP,J,IWRITE,XTEMP,MAXNXT,YMEDIA(IDIS),
     1                 IBUGA3,IERROR)
         ENDIF
         DO4400I=1,N
           IF(TAG(I).EQ.DTAG(IDIS))T(I)=ABS(Y(I)-YMEDIA(IDIS))
 4400    CONTINUE
 4200 CONTINUE
C
CCCCC BUG FIX IN FOLLOWING LINE.  AUGUST 1999.
CCCCC CALL MEAN(Y,N,IWRITE,TBAR,IBUGA3,IERROR)
      CALL MEAN(T,N,IWRITE,TBAR,IBUGA3,IERROR)
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LTE2')THEN
        WRITE(ICOUT,4901)TBAR
 4901   FORMAT('TBAR = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        DO4905I=1,N
          WRITE(ICOUT,4906)I,TAG(I),DTAG(I),Y(I),T(I)
 4906     FORMAT('I,TAG(I),DTAG(I),Y(I),T(I)=',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
 4905   CONTINUE
      ENDIF
C
      DO5200IDIS=1,NUMDIS
         J=0
         DO5300I=1,N
            IF(TAG(I).EQ.DTAG(IDIS))THEN
               J=J+1
CCCCC BUG FIS: AUGUST 1999
CCCCC          YTEMP(J)=Y(I)
               YTEMP(J)=T(I)
            ENDIF
 5300    CONTINUE
         CALL MEAN(YTEMP,J,IWRITE,YMEAN(IDIS),IBUGA3,IERROR)
         DO5400I=1,N
           IF(TAG(I).EQ.DTAG(IDIS))TBARIV(I)=YMEAN(IDIS)
 5400    CONTINUE
 5200 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LTE2')THEN
        DO5205I=1,N
          WRITE(ICOUT,5206)I,TAG(I),DTAG(I),TBARIV(I)
 5206     FORMAT('I,TAG(I),DTAG(I),TBARIV(I)=',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
 5205   CONTINUE
      ENDIF
C
      DSUM1=0.D0
      DO6100I=1,N
        DSUM1=DSUM1 + (TBARIV(I)-TBAR)**2
 6100 CONTINUE
      SSQ=REAL(DSUM1)
      NUMDF=NUMDIS-1
      ANUMMS=SSQ/REAL(NUMDF)
C
      DSUM1=0.D0
      DO6200I=1,N
        DSUM1=DSUM1 + (T(I)-TBARIV(I))**2
 6200 CONTINUE
      SSQ=REAL(DSUM1)
      IDENDF=N-NUMDIS
      DENMS=SSQ/REAL(IDENDF)
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LTE2')THEN
        WRITE(ICOUT,6201)ANUMMS,DENMS
 6201   FORMAT('ANUMMS,DENMS=',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      STATVA=ANUMMS/DENMS
      CALL FCDF(STATVA,NUMDF,IDENDF,STATCD)
      PVAL=1.0-STATCD
C
      KM1=NUMDIS-1
      NMK=N-NUMDIS
C
      CUT0=0.0
      CALL FPPF(.50,KM1,NMK,CUT50)
      CALL FPPF(.75,KM1,NMK,CUT75)
      CALL FPPF(.90,KM1,NMK,CUT90)
      CALL FPPF(.95,KM1,NMK,CUT95)
      CALL FPPF(.99,KM1,NMK,CUT975)
      CALL FPPF(.99,KM1,NMK,CUT99)
      CALL FPPF(.999,KM1,NMK,CUT999)
C
C               ******************************
C               **   STEP 42--              **
C               **   WRITE OUT EVERYTHING   **
C               **   FOR   LEVENE'S TEST    **
C               ******************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Levene F-Test for Shift in Variation'
      NCTITL=36
      IF(ICASAN.EQ.'LMED')THEN
        ITITLZ='(Case: Test Based on Medians)'
        NCTITZ=29
      ELSEIF(ICASAN.EQ.'LMEA')THEN
        ITITLZ='(Case: Test Based on Means)'
        NCTITZ=27
      ELSEIF(ICASAN.EQ.'LTRI')THEN
        ITITLZ='(Case: Test Based on Trimmed Means)'
        NCTITZ=35
      ENDIF
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      IF(IMULT.EQ.'OFF')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Response Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
C
        ICNT=ICNT+1
        ITEXT(ICNT)='Group-ID Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(2)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(2)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
C     IF REQUESTED, PRINT OUT GROUP INFORMATION.  SINCE NUMBER
C     OF GROUPS IS UNKNOWN (AND POTENTIALLY LARGE, PRINT EACH
C     GROUP AS A SEPARATE TABLE.
C
      IF(ILEVGS.EQ.'ON')THEN
C
        DO2160I=1,NUMDIS
C
          NUMROW=ICNT
          DO2165II=1,NUMROW
            NTOT(II)=15
 2165     CONTINUE
C
          IFRST=.TRUE.
          ILAST=.TRUE.
C
          CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1                AVALUE,IDIGIT,
     1                NTOT,NUMROW,
     1                ICAPSW,ICAPTY,ILAST,IFRST,
     1                ISUBRO,IBUGA3,IERROR)
          ICNT=0
          ITITLE=' '
          NCTITL=0
          ITITLZ=' '
          NCTITZ=0
C
          ICNT=ICNT+1
          ITEXT(ICNT)=' '
          NCTEXT(ICNT)=1
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
C
          IF(IMULT.EQ.'ON')THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='Group Variable: '
            WRITE(ITEXT(ICNT)(17:20),'(A4)')IVARID(I)(1:4)
            WRITE(ITEXT(ICNT)(21:24),'(A4)')IVARI2(I)(1:4)
            NCTEXT(ICNT)=24
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ELSE
            ICNT=ICNT+1
            ITEXT(ICNT)='Group    '
            WRITE(ITEXT(ICNT)(7:9),'(I3)')I
            NCTEXT(ICNT)=9
            AVALUE(ICNT)=0.0
            IDIGIT(ICNT)=-1
          ENDIF
          ICNT=ICNT+1
          ITEXT(ICNT)='Number of Observations:'
          NCTEXT(ICNT)=23
          AVALUE(ICNT)=TEMP1(I)
          IDIGIT(ICNT)=0
          ICNT=ICNT+1
          ITEXT(ICNT)='Mean:'
          NCTEXT(ICNT)=5
          AVALUE(ICNT)=TEMP2(I)
          IDIGIT(ICNT)=NUMDIG
          IF(ICASAN.EQ.'LTRI')THEN
            ICNT=ICNT+1
            ITEXT(ICNT)='Trimmed Mean:'
            NCTEXT(ICNT)=13
            AVALUE(ICNT)=TEMP3(I)
            IDIGIT(ICNT)=NUMDIG
          ELSE
            ICNT=ICNT+1
            ITEXT(ICNT)='Median:'
            NCTEXT(ICNT)=7
            AVALUE(ICNT)=TEMP3(I)
            IDIGIT(ICNT)=NUMDIG
          ENDIF
          ICNT=ICNT+1
          ITEXT(ICNT)='SD:'
          NCTEXT(ICNT)=3
          AVALUE(ICNT)=TEMP4(I)
          IDIGIT(ICNT)=NUMDIG
 2160   CONTINUE
C
        IF(ICNT.GT.0)THEN
          NUMROW=ICNT
          DO2168II=1,NUMROW
            NTOT(II)=15
 2168     CONTINUE
C
          IFRST=.TRUE.
          ILAST=.TRUE.
C
          CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1                AVALUE,IDIGIT,
     1                NTOT,NUMROW,
     1                ICAPSW,ICAPTY,ILAST,IFRST,
     1                ISUBRO,IBUGA3,IERROR)
          ICNT=0
        ENDIF
C
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='H0: Homogeneous Variances'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Ha: Variances Are Not Homogeneous'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Total Number of Observations:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Groups:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=REAL(NUMDIS)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Levene Test Statistic Value:'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='CDF of Test Statistic:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=STATCD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='P-Value:'
      NCTEXT(ICNT)=8
      AVALUE(ICNT)=1.0 - STATCD
      IDIGIT(ICNT)=NUMDIG
C
      NUMROW=ICNT
      DO4210I=1,NUMROW
        NTOT(I)=15
 4210 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='42A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='42B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ITITLE=' '
      NCTITL=0
C
      ITITL9=' '
      NCTIT9=0
      ITITLE(1:44)='Percent Points of the Reference Distribution'
      NCTITL=44
      NUMLIN=1
      NUMROW=8
      NUMCOL=3
      ITITL2(1,1)='Percent Point'
      ITITL2(1,2)=' '
      ITITL2(1,3)='Value'
      NCTIT2(1,1)=13
      NCTIT2(1,2)=1
      NCTIT2(1,3)=5
C
      NMAX=0
      DO4221I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.2)NTOT(I)=5
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=NUMDIG
        ITYPCO(I)='NUME'
 4221 CONTINUE
      ITYPCO(2)='ALPH'
      IDIGIT(1)=1
      IDIGIT(3)=3
      DO4223I=1,NUMROW
        DO4225J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          NCVALU(I,J)=0
          AMAT(I,J)=0.0
          IF(J.EQ.1)THEN
            AMAT(I,J)=ALPHA(I)
          ELSEIF(J.EQ.2)THEN
            IVALUE(I,J)='='
            NCVALU(I,J)=1
          ELSEIF(J.EQ.3)THEN
            IF(I.EQ.1)THEN
              AMAT(I,J)=RND(CUT0,IDIGIT(J))
            ELSEIF(I.EQ.2)THEN
              AMAT(I,J)=RND(CUT50,IDIGIT(J))
            ELSEIF(I.EQ.3)THEN
              AMAT(I,J)=RND(CUT75,IDIGIT(J))
            ELSEIF(I.EQ.4)THEN
              AMAT(I,J)=RND(CUT90,IDIGIT(J))
            ELSEIF(I.EQ.5)THEN
              AMAT(I,J)=RND(CUT95,IDIGIT(J))
            ELSEIF(I.EQ.6)THEN
              AMAT(I,J)=RND(CUT975,IDIGIT(J))
            ELSEIF(I.EQ.7)THEN
              AMAT(I,J)=RND(CUT99,IDIGIT(J))
            ELSEIF(I.EQ.8)THEN
              AMAT(I,J)=RND(CUT999,IDIGIT(J))
            ENDIF
          ENDIF
 4225   CONTINUE
 4223 CONTINUE
C
      IWHTML(1)=150
      IWHTML(2)=50
      IWHTML(3)=150
      IWRTF(1)=2000
      IWRTF(2)=IWRTF(1)+500
      IWRTF(3)=IWRTF(2)+2000
      IFRST=.TRUE.
      ILAST=.FALSE.
C
      ISTEPN='42C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='42D'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CDF1=CUT90
      CDF2=CUT95
      CDF3=CUT975
      CDF4=CUT99
C
      ITITL9=' '
      NCTIT9=0
      ITITLE='Conclusions (Upper 1-Tailed Test)'
      NCTITL=33
      NUMLIN=1
      NUMROW=4
      NUMCOL=4
      ITITL2(1,1)='Alpha'
      ITITL2(1,2)='CDF'
      ITITL2(1,3)='Critical Value'
      ITITL2(1,4)='Conclusion'
      NCTIT2(1,1)=5
      NCTIT2(1,2)=3
      NCTIT2(1,3)=14
      NCTIT2(1,4)=10
C
      NMAX=0
      DO4321I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1 .OR. I.EQ.2)NTOT(I)=7
        IF(I.EQ.3)NTOT(I)=17
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=3
        ITYPCO(I)='ALPH'
 4321 CONTINUE
      ITYPCO(3)='NUME'
      IDIGIT(1)=0
      IDIGIT(2)=0
      DO4323I=1,NUMROW
        DO4325J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          NCVALU(I,J)=0
          AMAT(I,J)=0.0
 4325   CONTINUE
 4323 CONTINUE
      IVALUE(1,1)='10%'
      IVALUE(2,1)='5%'
      IVALUE(3,1)='2.5%'
      IVALUE(4,1)='1%'
      IVALUE(1,2)='90%'
      IVALUE(2,2)='95%'
      IVALUE(3,2)='97.5%'
      IVALUE(4,2)='99%'
      NCVALU(1,1)=3
      NCVALU(2,1)=2
      NCVALU(3,1)=4
      NCVALU(4,1)=2
      NCVALU(1,2)=3
      NCVALU(2,2)=3
      NCVALU(3,2)=5
      NCVALU(4,2)=3
      IVALUE(1,4)='Accept H0'
      IVALUE(2,4)='Accept H0'
      IVALUE(3,4)='Accept H0'
      IVALUE(4,4)='Accept H0'
      NCVALU(1,4)=9
      NCVALU(2,4)=9
      NCVALU(3,4)=9
      NCVALU(4,4)=9
      IF(STATVA.GT.CUT90)IVALUE(1,4)='Reject H0'
      IF(STATVA.GT.CUT95)IVALUE(2,4)='Reject H0'
      IF(STATVA.GT.CUT975)IVALUE(3,4)='Reject H0'
      IF(STATVA.GT.CUT99)IVALUE(4,4)='Reject H0'
      AMAT(1,3)=RND(CUT90,IDIGIT(3))
      AMAT(2,3)=RND(CUT95,IDIGIT(3))
      AMAT(3,3)=RND(CUT975,IDIGIT(3))
      AMAT(4,3)=RND(CUT99,IDIGIT(3))
C
      IWHTML(1)=150
      IWHTML(2)=150
      IWHTML(3)=150
      IWHTML(4)=150
      IWRTF(1)=1500
      IWRTF(2)=IWRTF(1)+1500
      IWRTF(3)=IWRTF(2)+2000
      IWRTF(4)=IWRTF(3)+2000
      IFRST=.FALSE.
      ILAST=.TRUE.
C
      ISTEPN='42E'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LTE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LTE2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLTE2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)N,IBUGA3,IERROR
 9012   FORMAT('N,IBUGA3,IERROR = ',I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9014)STATVA,STATCD,PVAL
 9014   FORMAT('STATVA,STATCD,PVAL = ',3G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLUJA(XTEMP1,MAXNXT,
     1                  ICASAN,ICAPSW,IFORSW,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT LJUNG BOX TEST FOR RANDOMNESS
C     EXAMPLE--LJUNG BOX TEST Y
C     REFERENCE--PETER BROCKWELL AND RICHARD DAVIS (2002).
C                "INTRODUCTION TO TIME SERIES AND FORECASTING",
C                SECOND EDITION, SPRINGER.
C     TEST--  Q=N*(N+2_SUM[J=1 TO H][RHOHAT**2/(N-J)
C             REJECT RANDOMNESS IF Q > CHI-SQUARE PPF(H,1-ALPHA)
C             WHERE RHOHAT IS THE SAMPLE AUTOCORRELATION
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2003/3
C     ORIGINAL VERSION--FEBRUARY  2003.
C     UPDATED         --MARCH     2011. USE DPPARS ROUTINE
C     UPATED          --MARCH     2011. REWRITTEN TO HANDLE MULTIPLE
C                                       RESPONSE VARIABLES, GROUP-ID
C                                       VARIABLES, OR A LAB-ID VARIABLE
C     UPATED          --JULY      2019. TWEAK TO SCRATCH STORAGE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 MESSAG
      CHARACTER*4 IHWUSE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IFLAGU
C
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
      CHARACTER*4 ICTMP1
      CHARACTER*4 ICTMP2
      CHARACTER*4 ICTMP3
      CHARACTER*4 ICTMP4
      CHARACTER*4 ICASE
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      CHARACTER*4 IVARID(1)
      CHARACTER*4 IVARI2(1)
      REAL PVAR(MAXSPN)
      REAL PID(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      DIMENSION XTEMP1(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION YTEMP1(MAXOBV)
      DIMENSION XDESGN(MAXOBV,7)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XIDTE3(MAXOBV)
      DIMENSION XIDTE4(MAXOBV)
      DIMENSION XIDTE5(MAXOBV)
      DIMENSION XIDTE6(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
C
      EQUIVALENCE (GARBAG(IGARB1),YTEMP1(1))
      EQUIVALENCE (GARBAG(IGARB2),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB3),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB4),XIDTE2(1))
      EQUIVALENCE (GARBAG(IGARB5),XIDTE3(1))
      EQUIVALENCE (GARBAG(IGARB6),XIDTE4(1))
      EQUIVALENCE (GARBAG(IGARB7),XIDTE5(1))
      EQUIVALENCE (GARBAG(IGARB8),XIDTE6(1))
      EQUIVALENCE (GARBAG(IGARB9),TEMP2(1))
      EQUIVALENCE (GARBAG(IGAR10),XDESGN(1,1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLU'
      ISUBN2='JA  '
      ICASAN='LUJA'
      IREPL='NO'
      IMULT='NO'
      IFOUND='NO'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ********************************************
C               **  TREAT THE LJUNG-BOX        TEST CASE  **
C               ********************************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLUJA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO,MAXNXT
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO,MAXNXT = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *****************************************************
C               **  STEP 1--                                       **
C               **  EXTRACT THE COMMAND                            **
C               **  LOOK FOR ONE OF THE FOLLOWING COMMANDS:        **
C               **    1) LJUNG-BOX TEST   Y                        **
C               **    2) MULTIPLE LJUNG-BOX TEST   Y1 ... YK       **
C               **    3) REPLICATED LJUNG-BOX TEST   Y X1 ... XK   **
C               *****************************************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILASTC=9999
      ILASTZ=9999
C
      DO100I=0,NUMARG-1
C
        IF(I.EQ.0)THEN
          ICTMP1=ICOM
        ELSE
          ICTMP1=IHARG(I)
        ENDIF
        ICTMP2=IHARG(I+1)
        ICTMP3=IHARG(I+2)
        ICTMP4=IHARG(I+3)
C
        IF(ICTMP1.EQ.'=')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(ICTMP1.EQ.'LJUN' .AND. ICTMP2.EQ.'BOX' .AND.
     1         ICTMP3.EQ.'TEST')THEN
          IFOUND='YES'
          ILASTC=I
          ILASTZ=I+2
        ELSEIF(ICTMP1.EQ.'LJUN' .AND. ICTMP2.EQ.'BOX')THEN
          IFOUND='YES'
          ILASTC=I
          ILASTZ=I+1
        ELSEIF(ICTMP1.EQ.'REPL')THEN
          IREPL='ON'
          ILASTC=MIN(ILASTC,I)
          ILASTZ=MAX(ILASTZ,I)
        ELSEIF(ICTMP1.EQ.'MULT')THEN
          IMULT='ON'
          ILASTC=MIN(ILASTC,I)
          ILASTZ=MAX(ILASTZ,I)
        ENDIF
  100 CONTINUE
C
      IF(IFOUND.EQ.'NO')GOTO9000
C
      ISHIFT=ILASTZ
      CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGA2,IERROR)
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')THEN
        WRITE(ICOUT,91)ICASAN,IMULT,IREPL,ISHIFT
   91   FORMAT('DPFRTE: ICASAN,IMULT,IREPL,ISHIFT = ',3(A4,2X),I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IMULT.EQ.'ON')THEN
        IF(IREPL.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN LJUNG-BOX TEST--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,103)
  103     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"REPLICATION"')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,104)
  104     FORMAT('      FOR THE LJUNG-BOX TEST COMMAND.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
C               *********************************
C               **  STEP 4--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='4'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='LJUNG-BOX TEST'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=0
      IFLAGM=1
      IF(IREPL.EQ.'ON')THEN
        IFLAGM=0
        IFLAGE=1
      ENDIF
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=MAXSPN
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ***********************************************
C               **  STEP 5--                                 **
C               **  DETERMINE:                               **
C               **  1) NUMBER OF REPLICATION VARIABLES (0-6) **
C               **  2) NUMBER OF RESPONSE    VARIABLES (>= 1)**
C               ***********************************************
C
      ISTEPN='5'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NRESP=0
      NREPL=0
      IF(IMULT.EQ.'ON')THEN
        NRESP=NUMVAR
      ELSEIF(IREPL.EQ.'ON')THEN
        NRESP=1
        NREPL=NUMVAR-NRESP
        IF(NREPL.LT.1 .OR. NREPL.GT.6)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,511)
  511     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,512)
  512     FORMAT('      MUST BE BETWEEN ONE AND SIX.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,513)NREPL
  513     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ELSE
        NRESP=NUMVAR
        IMULT='ON'
      ENDIF
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')THEN
        WRITE(ICOUT,521)NRESP,NREPL
  521   FORMAT('NRESP,NREPL = ',2I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *****************************************************
C               **  STEP 53--                                      **
C               **  DETERMINE IF THE ANALYST HAS SPECIFIED THE     **
C               **  NUMBER OF LAGS DESIRED FOR THE LJUNG-BOX TEST. **
C               **  SEARCH FOR ONE OF THE FOLLOWING PREVIOUSLY     **
C               **  DEFINED PARAMETER NAMES:                       **
C               **       LAGS, LAG, OR NUMLAG                      **
C               **  IF FOUND, USE THE SPECIFIED VALUE              **
C               **  (WHICH MUST BE BETWEEN 1 AND 1000, INCLUSIVE); **
C               **  IF NOT FOUND, USE THE DEFAULT VALUE            **
C               **  (USUALLY NS/4) WHICH WILL BE DEFINED           **
C               **  IN THE SUBROUTINE DPLJU2.                      **
C               *****************************************************
C
      ISTEPN='53'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMLAG=0
C
      IH='LAGS'
      IH2='    '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'NO')THEN
        NUMLAG=INT(VALUE(ILOCV)+0.5)
        GOTO590
      ENDIF
C
      IH='LAG '
      IH2='    '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'NO')THEN
        NUMLAG=INT(VALUE(ILOCV)+0.5)
        GOTO590
      ENDIF
C
      IH='NUML'
      IH2='AG  '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'NO')THEN
        NUMLAG=INT(VALUE(ILOCV)+0.5)
        GOTO590
      ENDIF
C
  590 CONTINUE
C
C               ******************************************************
C               **  STEP 6--                                        **
C               **  GENERATE THE LJUNG-BOX        TEST FOR THE      **
C               **  VARIOUS CASES                                   **
C               ******************************************************
C
      ISTEPN='6'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ******************************************
C               **  STEP 8A--                           **
C               **  CASE 1: NO REPLICATION VARIABLES    **
C               ******************************************
C
      IF(NREPL.LT.1)THEN
        ISTEPN='8A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
        NCURVE=0
        DO810IRESP=1,NRESP
          NCURVE=NCURVE+1
C
          IINDX=ICOLR(IRESP)
          PID(1)=CPUMIN
          IVARID(1)=IVARN1(IRESP)
          IVARI2(1)=IVARN2(IRESP)
C
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,811)IRESP,NCURVE
  811       FORMAT('IRESP,NCURVE = ',2I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y,XTEMP1,XTEMP1,NS1,NLOCA2,NLOCA3,ICASE,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C         *****************************************************
C         **  STEP 8B--                                      **
C         *****************************************************
C
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LUJA')THEN
            ISTEPN='8B'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,822)
  822       FORMAT('***** FROM THE MIDDLE  OF DPLUJA--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,823)ICASAN,NUMVAR,NLOCAL
  823       FORMAT('ICASAN,NUMVAR,NQ = ',A4,2I8)
            CALL DPWRST('XXX','BUG ')
            IF(NLOCAL.GE.1)THEN
              DO825I=1,NLOCAL
                WRITE(ICOUT,826)I,Y(I)
  826           FORMAT('I,Y(I) = ',I8,G15.7)
                CALL DPWRST('XXX','BUG ')
  825         CONTINUE
            ENDIF
          ENDIF
C
          CALL DPLUJ2(Y,NS1,MAXNXT,
     1                ICAPSW,ICAPTY,IFORSW,ICASAN,
     1                PID,IVARID,IVARI2,NREPL,
     1                STATVA,STATCD,PVAL,
     1                CUT0,CUT50,CUT75,CUT90,CUT95,
     1                CUT975,CUT99,CUT999,
     1                YTEMP1,NUMLAG,
     1                ISUBRO,IBUGA3,IERROR)
C
C               ***************************************
C               **  STEP 8C--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
          ISTEPN='8C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(NRESP.GT.1)THEN
            IFLAGU='FILE'
          ELSE
            IFLAGU='ON'
          ENDIF
          IFRST=.FALSE.
          ILAST=.FALSE.
          IF(IRESP.EQ.1)IFRST=.TRUE.
          IF(IRESP.EQ.NRESP)ILAST=.TRUE.
          CALL DPFRT5(STATVA,STATCD,PVAL,
     1                CUT0,CUT50,CUT75,CUT90,CUT95,
     1                CUT975,CUT99,CUT999,
     1                IFLAGU,IFRST,ILAST,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
  810   CONTINUE
C
C               ****************************************************
C               **  STEP 9A--                                     **
C               **  CASE 3: ONE OR MORE REPLICATION VARIABLES.    **
C               **          FOR THIS CASE, THE NUMBER OF RESPONSE **
C               **          VARIABLES MUST BE EXACTLY 1.          **
C               **          FOR THIS CASE, ALL VARIABLES MUST     **
C               **          HAVE THE SAME LENGTH.                 **
C               ****************************************************
C
      ELSEIF(NREPL.GE.1)THEN
        ISTEPN='9A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        J=0
        IMAX=NRIGHT(1)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO910I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO910
          J=J+1
C
C         RESPONSE VARIABLE IN Y
C
          ICOLC=1
          IJ=MAXN*(ICOLR(ICOLC)-1)+I
          IF(ICOLR(ICOLC).LE.MAXCOL)Y(J)=V(IJ)
          IF(ICOLR(ICOLC).EQ.MAXCP1)Y(J)=PRED(I)
          IF(ICOLR(ICOLC).EQ.MAXCP2)Y(J)=RES(I)
          IF(ICOLR(ICOLC).EQ.MAXCP3)Y(J)=YPLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP4)Y(J)=XPLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP5)Y(J)=X2PLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP6)Y(J)=TAGPLO(I)
C
          IF(NREPL.GE.1)THEN
            DO920IR=1,MIN(NREPL,6)
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)XDESGN(J,IR)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XDESGN(J,IR)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XDESGN(J,IR)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XDESGN(J,IR)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XDESGN(J,IR)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XDESGN(J,IR)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XDESGN(J,IR)=TAGPLO(I)
  920       CONTINUE
          ENDIF
C
  910   CONTINUE
        NLOCAL=J
C
C       *****************************************************
C       **  STEP 9B--                                      **
C       **  CALL DPLUJ2 TO PERFORM LJUNG-BOX        TEST.  **
C       *****************************************************
C
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LUJA')THEN
          ISTEPN='9C'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,941)
  941     FORMAT('***** FROM THE MIDDLE  OF DPLUJA--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,942)ICASAN,NUMVAR,NLOCAL,NREPL
  942     FORMAT('ICASAN,NUMVAR,NLOCAL,NREPL = ',
     1           A4,3I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO945I=1,NLOCAL
              WRITE(ICOUT,946)I,Y(I),XDESGN(I,1),XDESGN(I,2)
  946         FORMAT('I,Y(I),XDESGN(I,1),XDESGN(I,2) = ',
     1               I8,4F12.5)
              CALL DPWRST('XXX','BUG ')
  945       CONTINUE
          ENDIF
        ENDIF
C
C       *****************************************************
C       **  STEP 9C--                                      **
C       **  FIND THE DISTINCT VALUES IN EACH OF THE        **
C       **  REPLICATION VARIABLES.                         **
C       *****************************************************
C
        CALL DPPP5(XDESGN(1,1),XDESGN(1,2),XDESGN(1,3),
     1             XDESGN(1,4),XDESGN(1,5),XDESGN(1,6),
     1             NREPL,NLOCAL,MAXOBV,
     1             XIDTEM,XIDTE2,XIDTE3,XIDTE4,XIDTE5,XIDTE6,
     1             XTEMP1,TEMP2,
     1             NUMSE1,NUMSE2,NUMSE3,NUMSE4,NUMSE5,NUMSE6,
     1             IBUGA3,ISUBRO,IERROR)
C
C       *****************************************************
C       **  STEP 9D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        NCURVE=0
        IADD=1
C
        IF(NREPL.EQ.1)THEN
          J=0
          DO1110ISET1=1,NUMSE1
            K=0
            PID(IADD+1)=XIDTEM(ISET1)
            DO1130I=1,NLOCAL
              IF(XIDTEM(ISET1).EQ.XDESGN(I,1))THEN
                K=K+1
                TEMP1(K)=Y(I)
              ENDIF
 1130       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPLUJ2(TEMP1,NTEMP,MAXNXT,
     1                    ICAPSW,ICAPTY,IFORSW,ICASAN,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    YTEMP1,NUMLAG,
     1                    ISUBRO,IBUGA3,IERROR)
            ENDIF
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            CALL DPFRT5(STATVA,STATCD,PVAL,
     1                  CUT0,CUT50,CUT75,CUT90,CUT95,
     1                  CUT975,CUT99,CUT999,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1110     CONTINUE
        ELSEIF(NREPL.EQ.2)THEN
          J=0
          NTOT=NUMSE1*NUMSE2
          DO1210ISET1=1,NUMSE1
          DO1220ISET2=1,NUMSE2
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            DO1290I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
              ENDIF
 1290       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPLUJ2(TEMP1,NTEMP,MAXNXT,
     1                    ICAPSW,ICAPTY,IFORSW,ICASAN,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    YTEMP1,NUMLAG,
     1                    ISUBRO,IBUGA3,IERROR)
              IFLAGU='FILE'
              IFRST=.FALSE.
              ILAST=.FALSE.
              IF(NCURVE.EQ.1)IFRST=.TRUE.
              IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
              CALL DPFRT5(STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    IFLAGU,IFRST,ILAST,
     1                    IBUGA2,IBUGA3,ISUBRO,IERROR)
            ENDIF
 1220     CONTINUE
 1210     CONTINUE
        ELSEIF(NREPL.EQ.3)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3
          DO1310ISET1=1,NUMSE1
          DO1320ISET2=1,NUMSE2
          DO1330ISET3=1,NUMSE3
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            DO1390I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
              ENDIF
 1390       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPLUJ2(TEMP1,NTEMP,MAXNXT,
     1                    ICAPSW,ICAPTY,IFORSW,ICASAN,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    YTEMP1,NUMLAG,
     1                    ISUBRO,IBUGA3,IERROR)
              IFLAGU='FILE'
              IFRST=.FALSE.
              ILAST=.FALSE.
              IF(NCURVE.EQ.1)IFRST=.TRUE.
              IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
              CALL DPFRT5(STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    IFLAGU,IFRST,ILAST,
     1                    IBUGA2,IBUGA3,ISUBRO,IERROR)
            ENDIF
 1330     CONTINUE
 1320     CONTINUE
 1310     CONTINUE
        ELSEIF(NREPL.EQ.4)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4
          DO1410ISET1=1,NUMSE1
          DO1420ISET2=1,NUMSE2
          DO1430ISET3=1,NUMSE3
          DO1440ISET4=1,NUMSE4
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            PID(4+IADD)=XIDTE4(ISET4)
            DO1490I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
              ENDIF
 1490       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPLUJ2(TEMP1,NTEMP,MAXNXT,
     1                    ICAPSW,ICAPTY,IFORSW,ICASAN,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    YTEMP1,NUMLAG,
     1                    ISUBRO,IBUGA3,IERROR)
              IFLAGU='FILE'
              IFRST=.FALSE.
              ILAST=.FALSE.
              IF(NCURVE.EQ.1)IFRST=.TRUE.
              IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
              CALL DPFRT5(STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    IFLAGU,IFRST,ILAST,
     1                    IBUGA2,IBUGA3,ISUBRO,IERROR)
            ENDIF
 1440     CONTINUE
 1430     CONTINUE
 1420     CONTINUE
 1410     CONTINUE
        ELSEIF(NREPL.EQ.5)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5
          DO1510ISET1=1,NUMSE1
          DO1520ISET2=1,NUMSE2
          DO1530ISET3=1,NUMSE3
          DO1540ISET4=1,NUMSE4
          DO1550ISET5=1,NUMSE5
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            PID(4+IADD)=XIDTE4(ISET4)
            PID(5+IADD)=XIDTE5(ISET4)
            DO1590I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
              ENDIF
 1590       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPLUJ2(TEMP1,NTEMP,MAXNXT,
     1                    ICAPSW,ICAPTY,IFORSW,ICASAN,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    YTEMP1,NUMLAG,
     1                    ISUBRO,IBUGA3,IERROR)
              IFLAGU='FILE'
              IFRST=.FALSE.
              ILAST=.FALSE.
              IF(NCURVE.EQ.1)IFRST=.TRUE.
              IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
              CALL DPFRT5(STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    IFLAGU,IFRST,ILAST,
     1                    IBUGA2,IBUGA3,ISUBRO,IERROR)
            ENDIF
 1550     CONTINUE
 1540     CONTINUE
 1530     CONTINUE
 1520     CONTINUE
 1510     CONTINUE
        ELSEIF(NREPL.EQ.6)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5*NUMSE6
          DO1610ISET1=1,NUMSE1
          DO1620ISET2=1,NUMSE2
          DO1630ISET3=1,NUMSE3
          DO1640ISET4=1,NUMSE4
          DO1650ISET5=1,NUMSE5
          DO1660ISET6=1,NUMSE6
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            PID(4+IADD)=XIDTE4(ISET4)
            PID(5+IADD)=XIDTE5(ISET4)
            PID(6+IADD)=XIDTE6(ISET4)
            DO1690I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5) .AND.
     1           XIDTE6(ISET6).EQ.XDESGN(I,6)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
              ENDIF
 1690       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPLUJ2(TEMP1,NTEMP,MAXNXT,
     1                    ICAPSW,ICAPTY,IFORSW,ICASAN,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    YTEMP1,NUMLAG,
     1                    ISUBRO,IBUGA3,IERROR)
              IFLAGU='FILE'
              IFRST=.FALSE.
              ILAST=.FALSE.
              IF(NCURVE.EQ.1)IFRST=.TRUE.
              IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
              CALL DPFRT5(STATVA,STATCD,PVAL,
     1                    CUT0,CUT50,CUT75,CUT90,CUT95,
     1                    CUT975,CUT99,CUT999,
     1                    IFLAGU,IFRST,ILAST,
     1                    IBUGA2,IBUGA3,ISUBRO,IERROR)
            ENDIF
 1660     CONTINUE
 1650     CONTINUE
 1640     CONTINUE
 1630     CONTINUE
 1620     CONTINUE
 1610     CONTINUE
        ENDIF
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LUJA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLUJA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLUJ2(Y,N,MAXNXT,
     1                  ICAPSW,ICAPTY,IFORSW,ICASAN,
     1                  PID,IVARID,IVARI2,NREPL,
     1                  STATVA,STATCD,PVAL,
     1                  CUT0,CUT50,CUT75,CUT90,CUT95,
     1                  CUT975,CUT99,CUT999,
     1                  YTEMP1,NUMLAG,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE CARRIES OUT THE LJUNG-BOX TEST
C              FOR RANDOMNESS.
C     EXAMPLE--LJUNG-BOX TEST Y
C     REFERENCE--PETER BROCKWELL AND RICHARD DAVIS (2002).
C                "INTRODUCTION TO TIME SERIES AND FORECASTING",
C                SECOND EDITION, SPRINGER.
C     TEST--  Q=N*(N+2_SUM[J=1 TO H][RHOHAT**2/(N-J)
C             REJECT RANDOMNESS IF Q > CHI-SQUARE PPF(H,1-ALPHA)
C             WHERE RHOHAT IS THE SAMPLE AUTOCORRELATION
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2003/3
C     ORIGINAL VERSION--FEBRUARY  2003.
C     UPDATED         --MARCH     2011. USE DPDTA1 AND DPDTA5 TO PRINT
C                                       TABLES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 ICASAN
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION YTEMP1(*)
      DIMENSION PID(*)
C
      PARAMETER (NUMALP=8)
C
      PARAMETER(NUMCLI=5)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=NUMALP)
      PARAMETER (MAXRO2=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*1  ITITL9
      CHARACTER*60 ITEXT(MAXRO2)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXRO2)
      INTEGER      NCTEXT(MAXRO2)
      INTEGER      IDIGIT(MAXRO2)
      INTEGER      NTOT(MAXRO2)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLU'
      ISUBN2='J2  '
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LUJ2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPLUJ2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)ICASAN,IBUGA3,ISUBRO,N
   52   FORMAT('ICASAN,IBUGA3,ISUBRO,N = ',3(A4,2X),I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I)
   57     FORMAT('I,Y(I), = ',I8,G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LUJ2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N.LE.5)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1111)
 1111   FORMAT('***** ERROR IN LJUNG-BOX TEST.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1113)
 1113   FORMAT('      AT LEAST SIX OBSERVATIONS REQUIRED.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1115)N
 1115   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO1135I=2,N
      IF(Y(I).NE.HOLD)GOTO1139
 1135 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1111)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,1131)HOLD
 1131 FORMAT('      THE RESPONSE VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      IERROR='YES'
      GOTO9000
 1139 CONTINUE
C
C               *******************************
C               **  STEP 2--                 **
C               **  IF NECESSARY,            **
C               **  COMPUTE THE MAXIMUM LAG  **
C               *******************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LUJ2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MAXLAG=MAXNXT
      IF(NUMLAG.GE.1)KMAX=NUMLAG
      IF(NUMLAG.LE.0)KMAX=N/4
      IF(NUMLAG.LE.0.AND.N.LE.32)KMAX=N/2
      IF(NUMLAG.LE.0.AND.N.LE.16)KMAX=N
      IF(KMAX.GT.MAXLAG)KMAX=MAXLAG
      NM1=N-1
      IF(KMAX.GT.NM1)KMAX=NM1
      IF(N.LE.16)THEN
         NM2=N-2
         IF(KMAX.GT.NM2)KMAX=NM2
      ENDIF
      KMAXM1=KMAX-1
      AKMAXM=KMAXM1
C
C               ******************************************************
C               **  STEP 2.1--                                      **
C               **  COMPUTE THE AUTOCORRELATIONS FOR THE Y  DATA    **
C               **  DO SO IN 3 STEPS--                              **
C               **     1) COMPUTE THE SAMPLE MEAN;                  **
C               **     2) COMPUTE THE SAMPLE VARIANCE;              **
C               **     3) COMPUTE THE AUTOCORRELATIONS;             **
C               **  REFERENCE--JENKINS AND WATTS, PAGE 382 (9.3.1)  **
C               ******************************************************
C
      ISTEPN='2.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LUJ2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     COMPUTE AUTOCORRELATIONS FOR N <= 20
C
      IF(N.LE.16)THEN
        AN=N
C
        DO2110K=1,KMAXM1
          NMK=N-K
          ANMK=NMK
          SUM1=0.0
          SUM2=0.0
          DO2120I=1,NMK
            J=I+K
            SUM1=SUM1+Y(I)
            SUM2=SUM2+Y(J)
 2120     CONTINUE
          Y1BAR=SUM1/ANMK
          Y2BAR=SUM2/ANMK
C
          SUM1=0.0
          SUM2=0.0
          DO2130I=1,NMK
            J=I+K
            SUM1=SUM1+(Y(I)-Y1BAR)**2
            SUM2=SUM2+(Y(J)-Y2BAR)**2
 2130     CONTINUE
          SSQ1=SUM1
          SSQ2=SUM2
C
          SUM1=0.0
          DO2140I=1,NMK
            J=I+K
            SUM1=SUM1+(Y(I)-Y1BAR)*(Y(J)-Y2BAR)
 2140     CONTINUE
          ANUM=SUM1
C
          SQRT1=0.0
          IF(SSQ1.GT.0.0)SQRT1=SQRT(SSQ1)
          SQRT2=0.0
          IF(SSQ2.GT.0.0)SQRT2=SQRT(SSQ2)
          DENOM=SQRT1*SQRT2
          AC=0.0
          IF(DENOM.GT.0.0)AC=ANUM/DENOM
          YTEMP1(K)=AC
 2110   CONTINUE
      ELSE
C
C     COMPUTE AUTOCORRELATIONS FOR N >= 21
C
        AN=N
C
        SUM1=0.0
        DO2210I=1,N
          SUM1=SUM1+Y(I)
 2210   CONTINUE
        Y1BAR=SUM1/AN
C
        SUM1=0.0
        DO2220I=1,N
          SUM1=SUM1+(Y(I)-Y1BAR)*(Y(I)-Y1BAR)
 2220   CONTINUE
        VARB1=SUM1/AN
        VAR1=SUM1/(AN-1.0)
C
        DO2230K=1,KMAXM1
          SUM1=0.0
          NMK=N-K
          DO2240I=1,NMK
            J=I+K
            SUM1=SUM1+(Y(I)-Y1BAR)*(Y(J)-Y1BAR)
 2240     CONTINUE
          YTEMP1(K)=SUM1/AN
          YTEMP1(K)=YTEMP1(K)/VARB1
 2230   CONTINUE
      ENDIF
C
C               ******************************
C               **  STEP 23--               **
C               **  CARRY OUT CALCULATIONS  **
C               **  FOR LJUNG-BOX     TEST  **
C               ******************************
C
      ISTEPN='23'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LUJ2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWRITE='OFF'
C
      SUM1=0.0
      DO2310I=1,KMAXM1
        SUM1=SUM1 + YTEMP1(I)*YTEMP1(I)/REAL(N-I)
 2310 CONTINUE
C
      Q=AN*(AN+2.0)*SUM1
      STATVA=Q
      CALL CHSCDF(Q,KMAXM1,STATCD)
      PVAL=1.0-STATCD
C
      CUT0=0.
C
      ALPHA=.5
      P2=1.0-ALPHA
      CALL CHSPPF(P2,KMAXM1,CUT50)
C
      ALPHA=.25
      P2=1.0-ALPHA
      CALL CHSPPF(P2,KMAXM1,CUT75)
C
      ALPHA=.10
      P2=1.0-ALPHA
      CALL CHSPPF(P2,KMAXM1,CUT90)
C
      ALPHA=.05
      P2=1.0-ALPHA
      CALL CHSPPF(P2,KMAXM1,CUT95)
C
      ALPHA=.025
      P2=1.0-ALPHA
      CALL CHSPPF(P2,KMAXM1,CUT975)
C
      ALPHA=.01
      P2=1.0-ALPHA
      CALL CHSPPF(P2,KMAXM1,CUT99)
C
      ALPHA=.001
      P2=1.0-ALPHA
      CALL CHSPPF(P2,KMAXM1,CUT999)
C
C               *********************************
C               **   STEP 41--                 **
C               **   WRITE OUT EVERYTHING      **
C               **   FOR LJUNG-BOX TEST        **
C               *********************************
C
      ISTEPN='41'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LUJ2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Ljung-Box Test for Randomness'
      NCTITL=29
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Response Variable: '
      WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
      WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IF(NREPL.GT.0)THEN
        IADD=1
        DO2101I=1,NREPL
          ICNT=ICNT+1
          ITEMP=I+IADD
          ITEXT(ICNT)='Factor Variable  : '
          WRITE(ITEXT(ICNT)(17:17),'(I1)')I
          WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(ITEMP)(1:4)
          WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(ITEMP)(1:4)
          NCTEXT(ICNT)=27
          AVALUE(ICNT)=PID(ITEMP)
          IDIGIT(ICNT)=NUMDIG
 2101   CONTINUE
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='H0: The Data Are Random'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Ha: The Data Are Not Random'
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Lag Tested:'
      NCTEXT(ICNT)=11
      AVALUE(ICNT)=REAL(KMAXM1)
      IDIGIT(ICNT)=0
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Lag 1 Autocorrelation:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=YTEMP1(1)
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Lag 2 Autocorrelation:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=YTEMP1(2)
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Lag 3 Autocorrelation:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=YTEMP1(3)
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Ljung-Box Test Statistic:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='CDF Value:'
      NCTEXT(ICNT)=10
      AVALUE(ICNT)=STATCD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='P-Value:'
      NCTEXT(ICNT)=8
      AVALUE(ICNT)=PVAL
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO4110I=1,NUMROW
        NTOT(I)=15
 4110 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='42A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LUJ2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='42D'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LUJ2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ITITL9=' '
      NCTIT9=0
      ITITLE='Conclusions (Upper One-Tailed Test)'
      NCTITL=35
C
      DO5030J=1,5
        DO5040I=1,3
          ITITL2(I,J)=' '
          NCTIT2(I,J)=0
 5040   CONTINUE
 5030 CONTINUE
C
      ITITL2(2,1)='Null'
      NCTIT2(2,1)=4
      ITITL2(3,1)='Hypothesis'
      NCTIT2(3,1)=10
C
      ITITL2(2,2)='Confidence'
      NCTIT2(2,2)=10
      ITITL2(3,2)='Level'
      NCTIT2(3,2)=5
C
      ITITL2(2,3)='Test'
      NCTIT2(2,3)=4
      ITITL2(3,3)='Statistic'
      NCTIT2(3,3)=9
C
      ITITL2(2,4)='Critical'
      NCTIT2(2,4)=8
      ITITL2(3,4)='Value (>)'
      NCTIT2(3,4)=9
C
      ITITL2(1,5)='Null'
      NCTIT2(1,5)=4
      ITITL2(2,5)='Hypothesis'
      NCTIT2(2,5)=10
      ITITL2(3,5)='Conclusion'
      NCTIT2(3,5)=10
C
      NMAX=0
      NUMCOL=5
      DO2050I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1)NTOT(I)=12
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='ALPH'
        IF(I.EQ.3 .OR. I.EQ.4)ITYPCO(I)='NUME'
        IDIGIT(I)=NUMDIG
        IWHTML(1)=150
        IWHTML(2)=125
        IWHTML(3)=150
        IWHTML(4)=150
        IWHTML(5)=150
        IINC=1600
        IINC2=1400
        IINC3=2200
        IWRTF(1)=IINC
        IWRTF(2)=IWRTF(1)+IINC
        IWRTF(3)=IWRTF(2)+IINC3
        IWRTF(4)=IWRTF(3)+IINC3
        IWRTF(5)=IWRTF(4)+IINC3
C
        DO2060J=1,NUMALP
C
          AMAT(J,I)=0.0
          AMAT(J,3)=STATVA
          IVALUE(J,1)='Random'
          NCVALU(J,1)=6
          IVALUE(J,5)(1:6)='REJECT'
          IF(J.EQ.1)THEN
            IVALUE(J,2)(1:5)='0.0%'
            AMAT(J,4)=CUT0
            IF(STATVA.LT.CUT0)IVALUE(J,5)(1:6)='ACCEPT'
          ELSEIF(J.EQ.2)THEN
            IVALUE(J,2)(1:5)='50.0%'
            AMAT(J,4)=CUT50
            IF(STATVA.LT.CUT50)IVALUE(J,5)(1:6)='ACCEPT'
          ELSEIF(J.EQ.3)THEN
            IVALUE(J,2)(1:5)='75.0%'
            AMAT(J,4)=CUT75
            IF(STATVA.LT.CUT75)IVALUE(J,5)(1:6)='ACCEPT'
          ELSEIF(J.EQ.4)THEN
            IVALUE(J,2)(1:5)='90.0%'
            AMAT(J,4)=CUT90
            IF(STATVA.LT.CUT90)IVALUE(J,5)(1:6)='ACCEPT'
          ELSEIF(J.EQ.5)THEN
            IVALUE(J,2)(1:5)='95.0%'
            AMAT(J,4)=CUT95
            IF(STATVA.LT.CUT95)IVALUE(J,5)(1:6)='ACCEPT'
          ELSEIF(J.EQ.6)THEN
            IVALUE(J,2)(1:5)='97.5%'
            AMAT(J,4)=CUT975
            IF(STATVA.LT.CUT975)IVALUE(J,5)(1:6)='ACCEPT'
          ELSEIF(J.EQ.7)THEN
            IVALUE(J,2)(1:5)='99.0%'
            AMAT(J,4)=CUT99
            IF(STATVA.LT.CUT99)IVALUE(J,5)(1:6)='ACCEPT'
          ELSEIF(J.EQ.8)THEN
            IVALUE(J,2)(1:5)='99.9%'
            AMAT(J,4)=CUT999
            IF(STATVA.LT.CUT999)IVALUE(J,5)(1:6)='ACCEPT'
          ENDIF
          NCVALU(J,2)=5
          NCVALU(J,5)=6
C
 2060   CONTINUE
 2050 CONTINUE
C
      ICNT=NUMALP
      NUMLIN=3
      NUMCOL=5
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
      CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LUJ2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLUJ2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)IERROR,STATVA,STATCD,PVAL
 9012   FORMAT('IERROR,STATVA,STATCD,PVAL = ',A4,2X,3G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMABA(IHARG,IARGT,ARG,NUMARG,ADEMBA,MAXMAR,AMARBA,
     1IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE MARKER BASES.
C              THESE ARE LOCATED IN THE VECTOR AMARBA(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --ADEMBA
C                     --MAXMAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--AMARBA (A FLOATING POINT VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
      DIMENSION AMARBA(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPMA'
      ISUBN2='BA  '
C
      NUMMAR=0
      IHOLD1='-999'
      HOLD1=-999.0
      HOLD2=-999.0
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPMABA--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXMAR,NUMMAR
   53 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,HOLD1,HOLD2
   54 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)ADEMBA
   55 FORMAT('ADEMBA = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',2(A4,2X),G15.7)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)AMARBA(1)
   70 FORMAT('AMARBA(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,AMARBA(I)
   76 FORMAT('I,AMARBA(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='    '
      IF(IHARG(2).EQ.'ALL')HOLD1=ADEMBA
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')HOLD1=ARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')HOLD1=ARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMMAR=1
      AMARBA(1)=ADEMBA
      GOTO1270
C
 1220 CONTINUE
      NUMMAR=NUMARG-1
      IF(NUMMAR.GT.MAXMAR)NUMMAR=MAXMAR
      DO1225I=1,NUMMAR
      J=I+1
      IHOLD1=IHARG(J)
      HOLD1=ARG(J)
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=ADEMBA
      IF(IHOLD1.EQ.'OFF')HOLD2=ADEMBA
      IF(IHOLD1.EQ.'AUTO')HOLD2=ADEMBA
      IF(IHOLD1.EQ.'DEFA')HOLD2=ADEMBA
      AMARBA(I)=HOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMMAR
      WRITE(ICOUT,1276)I,AMARBA(I)
 1276 FORMAT('THE BASE OF MARKER ',I6,
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMMAR=MAXMAR
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=ADEMBA
      IF(IHOLD1.EQ.'OFF')HOLD2=ADEMBA
      IF(IHOLD1.EQ.'AUTO')HOLD2=ADEMBA
      IF(IHOLD1.EQ.'DEFA')HOLD2=ADEMBA
      DO1315I=1,NUMMAR
      AMARBA(I)=HOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)AMARBA(I)
 1316 FORMAT('THE BASE OF ALL MARKERS',
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPMABA--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXMAR,NUMMAR
 9013 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,HOLD1,HOLD2
 9014 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)ADEMBA
 9015 FORMAT('ADEMBA = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9030)AMARBA(1)
 9030 FORMAT('AMARBA(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,AMARBA(I)
 9036 FORMAT('I,AMARBA(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPMACL(IHARG,IARG,NUMARG,IDEFMC,IRGBMX,IMARCO,IMARC2,
     1                  IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE COLOR FOR THE MARGIN (THE REGION OUTSIDE THE
C              FRAME LINES).  THE COLOR FOR THE MARGIN WILL BE PLACED
C              IN THE CHARACTER VARIABLE IMARCO.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEFMC
C     OUTPUT ARGUMENTS--IMARCO
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --MAY       1982.
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IDEFMC
      CHARACTER*4 IMARCO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      CHARACTER*4 IHARG(*)
      DIMENSION IARG(*)
      DIMENSION IMARC2(3)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)THEN
        IMARCO=IDEFMC
      ELSEIF(IHARG(1).EQ.'COLO')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     NUMARG.EQ.1)THEN
          IMARCO=IDEFMC
        ELSE
          IMARCO=IHARG(NUMARG)
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1181)IMARCO
 1181     FORMAT('THE MARGIN COLOR HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      ELSEIF(IHARG(1).EQ.'RGB ' .AND. IHARG(2).EQ.'COLO')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     NUMARG.LE.4)THEN
          IMARC2(1)=-1
          IMARC2(2)=-1
          IMARC2(3)=-1
        ELSE
          IMARC2(1)=IARG(3)
          IMARC2(2)=IARG(4)
          IMARC2(3)=IARG(5)
          IF(IMARC2(1).LT.0 .OR. IMARC2(1).GT.IRGBMX)IMARC2(1)=-1
          IF(IMARC2(2).LT.0 .OR. IMARC2(2).GT.IRGBMX)IMARC2(2)=-1
          IF(IMARC2(3).LT.0 .OR. IMARC2(3).GT.IRGBMX)IMARC2(3)=-1
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2181)IMARC2(1),IMARC2(2),IMARC2(3)
 2181     FORMAT('THE MARGIN RGB COLORS HAVE JUST BEEN SET TO ',3I6)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMACR(ICOM,ICOM2,
     1                  IMACRO,IMACNU,IMACCS,
     1                  IMACL1,IMACL2,IMACLR,IMALEV,
     1                  IHNAME,IHNAM2,IUSE,IVALUE,VALUE,NUMNAM,MAXNAM,
     1                  IANSLC,IANS,IWIDTH,
     1                  IHARG,IHARG2,IARGT,IARG,ARG,NUMARG,
     1                  IOFILE,
     1                  ILOOST,ILOOLI,NUMLIL,NUMLOS,
     1                  IANSLO,IWIDLL,MAXCI2,MAXLI2,
     1                  IBUGS2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--OPERATE ON MACROS (= SUB-PROGRAMS).
C              THERE ARE 3 CAPABILITITES IN THIS REGARD--
C                 1) TURN THE MACRO SWITCH 'ON' WHICH WILL
C                    ALLOW A MACRO TO BE CREATED.
C                 2) TURN THE MACRO SWITCH 'OFF' WHICH WILL
C                    TERMINATE THE CREATION OF A MACRO.
C                 3) ADD THE CONTENTS OF A MACRO TO THE INPUT RUNSTTREAM
C                    WHICH (IN EFFECT) WILL ALLOW A MACRO
C                    TO BE EXECUTED.
C
C     CALLED BY--MAIN, MAINSU
C
C     NOTE--THESE CAPABILITITIES WILL ALLOW MACROS TO BE DYNAMICALLY
C           CONSTRUCTED AND USED FROM WITHIN A DATAPLOT PROGRAM.
C           WHEN THE MACRO SWITCH IS ON, ALL ENTERED DATAPLOT
C           INSTRUCTIONS ARE AUTOMATICALLY COPIED INTO A SPECIFIED
C           SYSTEM FILE OR SUBFILE.  WHEN THE MACRO SWITCH IS OFF,
C           NO SUCH COPYING IS DONE.  THE SPECIFIED STATUS (ON/OFF)
C           OF THE MACRO WILL BE PLACED IN THE HOLLERITH VARIABLE IMACRO.
C           IMACL1 = FIRST LINE OF THE MACRO TO BE EXECUTED
C           IMACL2 = LAST  LINE OF THE MACRO TO BE EXECUTED
C           IMACLR = NUMBER OF LINES OF MACRO ALREADY READ
C     INPUT  ARGUMENTS--ICOM
C                     --ICOM2
C     INPUT  ARGUMENTS--IMACNU (AN INTEGER VALUE
C                              BY WHICH THE MACRO FILE/SUBFILE MAY BE
C                              REFERENCED IN A FORTRAN I/O STATEMENT.
C                     --IMACCS (A HOLLERITH VARIABLE CONTAINING STATUS
C                              INFORMATION FOR THE MACRO FILE/SUBFILE
C                     --IANSLC (A  HOLLERITH VECTOR WHOSE I-TH ELEMENT
C                              CONTAINS THE I-TH CHARACTER OF THE
C                              ORIGINAL INPUT COMMAND LINE.
C                     --IWIDTH (AN INTEGER VARIABLE WHICH CONTAINS THE
C                              NUMBER OF CHARACTERS IN THE ORIGINAL
C                              COMMAND LINE.
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG (AN INTEGER VARIABLE)
C                     --IBUG   (A HOLLERITH VARIABLE FOR DEBUGGING
C     OUTPUT ARGUMENTS--IMACRO (AN INTEGER VARIABLE WHICH IF 'ON'
C                              INDICATES THAT CURRENT COMMANDS ARE ALSO
C                              BEING DIVERTED SO AS TO CONSTRUCT A MACRO;
C                              AND IF OFF INDICATES THAT A MACRO IS NOT
C                              BEING CONSTRUCTED.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--86/1
C     ORIGINAL VERSION--NOVEMBER  1980.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --JUNE      1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --JANUARY   1982.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --JANUARY   1983.
C     UPDATED         --SEPTEMBER 1983.
C     UPDATED         --JANUARY   1986.
C     UPDATED         --MAY       1990. FOR CALL CASE, SET FILE STATUS='OLD'
C     UPDATED         --AUGUST    1994. SIMPLIFY CODE THROUGHOUT
C     UPDATED         --AUGUST    1994. EXECUTE A SUBSET OF A FILE
C     UPDATED         --APRIL     1997. DIFFERENT UNIT FOR "CREATE
C                                       FILE." CASE TO FIX BUG IF
C                                       "CALL FILE." ENCOUNTERED WHILE
C                                       CREATE IS ON.
C     UPDATED         --JULY      2003. BUG: FILE NAME < 80
C                                       CHARACTERS, BUT COMMAND LINE
C                                       > 80 CHARACTERS
C     UPDATED         --SEPTEMBER 2005. SUPPORT FOR ARGUMENTS TO
C                                       MACROS.  THIS ROUTINE STORES
C                                       THE ARGUMENTS.
C     UPDATED         --OCTOBER   2014. MAXIMUM NUMBER OF COMMAND LINE
C                                       ARGUMENTS RAISED FROM 10 TO 50
C     UPDATED         --OCTOBER   2014. SET FILE NAME QUOTE TO "ON" WHEN
C                                       PARSING COMMAND LINE ARGUMENTS
C     UPDATED         --MARCH     2015. ADD "CALL EXIT" "CALL EXIT ALL"
C                                       COMMANDS
C     UPDATED         --NOVEMBER  2015. LOOP STORE DOES NOT DO COMMAND
C                                       SUBSTITUTION (I.E., "^").  CHECK
C                                       IF FILE NAME STARTS WITH "^"
C                                       (NOTE THAT THIS DOES NOT FIX
C                                       PROBLEM IF "^" STRING DEPENDS
C                                       ON THE LOOP INDEX).
C     UPDATED         --MAY       2016. OPTION ON WHETHER TO STRIP
C                                       QUOTES FROM MACROS
C     UPDATED         --SEPTEMBER 2016. IF FIRST ARGUMENT IS "NULL",
C                                       RE-INITIALIZE ARGUMENT LIST
C     UPDATED         --JANUARY   2017. COMMAND LINE ARGUMENTS THAT
C                                       START WITH "-" (DPEXWO TREATS
C                                       AS WORD SEPARATOR)
C     UPDATED         --JULY      2017. WHEN CALL ENTERED WITHIN A LOOP,
C                                       INSERT A "INSERT CALL LINE
C                                       ARGUMENTS" COMMAND IN SAVED LOOP
C                                       LINES.
C     UPDATED         --MAY       2018. SUPPORT VARIOUS NEW FORMS FOR
C                                       PASSING COMMAND LINE ARGUMENTS
C     UPDATED         --OCTOBER   2020. SAVE CURRENT CALL COMMAND LINE
C     UPDATED         --MARCH     2021. FOR
C                                          CALL X = X2
C                                       REMOVE SPACES AROUND "="
C     UPDATED         --MARCH     2021. FIX BUG WITH
C                                          CALL MACRO.DP STR="Y(23)"
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      INCLUDE 'DPCOPA.INC'
C
      CHARACTER*4 ICOM
      CHARACTER*4 ICOM2
      CHARACTER*4 IMACRO
      CHARACTER*12 IMACCS
      CHARACTER*4 IHNAME(*)
      CHARACTER*4 IHNAM2(*)
      CHARACTER*4 IUSE
      CHARACTER*4 IANSLC(*)
      CHARACTER*4 IANS(*)
      CHARACTER*4 IHARG(*)
      CHARACTER*4 IHARG2(*)
      CHARACTER*4 IARGT(*)
      CHARACTER*4 IOFILE
      CHARACTER*4 ILOOST
      CHARACTER*4 IANSLO
      CHARACTER*4 IBUGS2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
CCCCC CHARACTER*80 IFILE
      CHARACTER (LEN=MAXFNC) :: IFILE
      CHARACTER*12 ISTAT
      CHARACTER*12 IFORM
      CHARACTER*12 IACCES
      CHARACTER*12 IPROT
      CHARACTER*12 ICURST
      CHARACTER*4 IENDFI
      CHARACTER*4 IREWIN
      CHARACTER*4 ISUBN0
      CHARACTER*4 IERRFI
C
      CHARACTER*4 IANSI
CCCCC CHARACTER*80 ICANS
CCCCC CHARACTER*255 ICANS
      CHARACTER (LEN=MAXSTR) :: ICANS
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IFILQZ
      CHARACTER*4 IHYPS2
      CHARACTER*4 ICOMC2
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED     AUGUST 1994
CCCCC CHARACTER*4 ICASEQ
CCCCC CHARACTER*4 IBUGQ
      CHARACTER*1 ICJUNK
C
CCCCC CHARACTER*255 ISTR
CCCCC CHARACTER*255 ISTR2
      CHARACTER (LEN=MAXSTR) :: ISTR
      CHARACTER (LEN=MAXSTR) :: ISTR2
C
C ---------------------------------------------------------------------
C
      DIMENSION IARG(*)
      DIMENSION ARG(*)
C
      DIMENSION IUSE(*)
      DIMENSION IVALUE(*)
      DIMENSION VALUE(*)
C
      DIMENSION IANSLO(MAXLI2,MAXCI2)
      DIMENSION IWIDLL(*)
C
C-----COMMON----------------------------------------------------------
C
      CHARACTER (LEN=MAXFNC) :: IMANAM(10)
      COMMON/IMAC/IMACN2,IMALE2,IMANAM
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
CCCCC THE FOLLOWING LINE WAS ADDED        AUGUST 1994
CCCCC INCLUDE 'DPCODA.INC' BOMBS
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOFO.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='YES'
      IERROR='NO'
      ISUBN1='DPMA'
      ISUBN2='CR  '
      ICOMC2=ICOMCL
C
      IF(ICOM.EQ.'MACR' .AND. IHARG(1).EQ.'SUBS' .AND.
     1   IHARG(2).EQ.'CHAR')GOTO9000
C
CCCCC THE FOLLOWING LINE WAS ADDED    AUGUST 1994
      MINN2=1
C
      KMIN=0
      KDEL=0
      KMAX=0
      JP3=0
      JP4=0
      JP5=0
      IH='UNKN'
      IH2='UNKN'
      J12=0
      J22=0
      J32=0
      J42=0
      J52=0
      J62=0
      J72=0
      J82=0
      J92=0
      J102=0
      IPAR2=0
      IPAR3=0
      IPAR4=0
      IPAR5=0
      IPAR6=0
      IPAR7=0
      IPAR8=0
      IPAR9=0
      IPAR10=0
C
      P2=0.0
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
         WRITE(ICOUT,999)
  999    FORMAT(1X)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,51)
   51    FORMAT('***** AT THE BEGINNING OF DPMACR--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,52)IMACRO,IMACNU,IMACCS,IMACL1,IMACL2
   52    FORMAT('IMACRO,IMACNU,IMACCS,IMACL1,IMACL2 = ',
     1   A4,I8,2X,A12,I8,I8)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,53)IBUGS2,IERROR,ICOM,ICOM2,MAXOBV,IWIDTH
   53    FORMAT('IBUGS2,IERROR,ICOM,ICOM2,MAXOBV,IWIDTH = ',
     1          4(A4,2X),2I8)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,55)(IANS(I),I=1,MIN(120,IWIDTH))
   55    FORMAT('IANS(1...120) = ',120A1)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,56)(IANSLC(I),I=1,MIN(120,IWIDTH))
   56    FORMAT('IANSLC(1...120) = ',120A1)
         CALL DPWRST('XXX','BUG ')
C
         WRITE(ICOUT,57)NUMARG
   57    FORMAT('NUMARG = ',I8)
         CALL DPWRST('XXX','BUG ')
         IF(NUMARG.GE.1)THEN
            DO58I=1,NUMARG
               WRITE(ICOUT,59)I,IHARG(I),IHARG2(I),IARGT(I),ARG(I)
   59          FORMAT('I,IHARG(I),IHARG2(I),IARGT(I),ARG(I) = ',
     1                I8,2X,3(A4,2X),G15.7)
               CALL DPWRST('XXX','BUG ')
   58       CONTINUE
         ENDIF
C
         WRITE(ICOUT,62)MAXNAM,NUMNAM,NUMCHA,ICRENU,NUMLOS
   62    FORMAT('MAXNAM,NUMNAM,NUMCHA,ICRENU,NUMLOS = ',5I8)
         CALL DPWRST('XXX','BUG ')
         IF(NUMNAM.GE.1)THEN
            DO65I=1,NUMNAM
               WRITE(ICOUT,66)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1         IVALUE(I),VALUE(I)
   66          FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),',
     1         'IVALUE(I),VALUE(I) = ',I8,2X,A4,2X,A4,2X,A4,I8,E15.7)
               CALL DPWRST('XXX','BUG ')
   65       CONTINUE
         ENDIF
         WRITE(ICOUT,73)(IA(I),I=1,MIN(100,NUMCHA))
   73    FORMAT('(IA(I),I=1,NUMCHA) = ',100A1)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,82)ICRENA
   82    FORMAT('ICRENA = ',A80)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,83)ICREST,ICREFO,ICREAC,ICREFO,ICRECS
   83    FORMAT('ICREST,ICREFO,ICREAC,ICREFO,ICRECS = ',4(A12,2X),A12)
         CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************************
C               **  STEP 11--                                     **
C               **  FOR THE SPECIAL CASE WHEN THE                 **
C               **  EXECUTION OF A MACRO HAS JUST BEEN FINISHED,  **
C               **  JUMP TO CLOSING THE FILE                      **
C               ****************************************************
C
      ISTEPN='11'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     2015/03: CHECK FOR "CALL EXIT" AND "CALL EXIT ALL" COMMANDS
C
      IF(IMACCS.EQ.'CLO2        ')GOTO5000
      IF(ICOM.EQ.'CALL' .AND. IHARG(1).EQ.'EXIT')THEN
        IF(IHARG(2).EQ.'ALL ')GOTO5500
CCCCC   GOTO5000
        GOTO5500
      ENDIF
C
C               ***********************************************
C               **  STEP 12--                                **
C               **  FOR THE SPECIAL CASE WHEN HAVE THE       **
C               **  END CREATE     COMMAND, OR THE           **
C               **  END MACRO      COMMAND, OR THE           **
C               **  END OF CREATE      COMMAND,              **
C               **  END OF MACRO       COMMAND,              **
C               **  JUMP IMMEDIATELY TO THE SECTION OF CODE  **
C               **  WHICH PUTS ON AN END OF FILE AND         **
C               **  CLOSES THE FILE/SUBFILE.                 **
C               ***********************************************
C
      ISTEPN='12'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICOM.EQ.'END ')THEN
        IF(NUMARG.EQ.1 .AND. (IHARG(1).EQ.'CREA' .OR.
     1    IHARG(1).EQ.'MACR'))GOTO4000
        IF(NUMARG.EQ.2 .AND. IHARG(1).EQ.'OF  ' .AND.
     1    (IHARG(2).EQ.'CREA' .OR. IHARG(2).EQ.'MACR'))GOTO4000
CCCCC   IF(NUMARG.EQ.1 .AND. IHARG(1).EQ.'CALL')GOTOxxxx
CCCCC   IF(NUMARG.EQ.2 .AND. IHARG(1).EQ.'OF  ' .AND.
CCCCC1    IHARG(2).EQ.'CALL')GOTOxxxx
      ENDIF
C
C               ***************************************************************
C               **  STEP 13--
C               **  DETERMINE THE TYPE CASE--
C               **       1) OPERATE ON A MACRO RESIDING IN A FILE;
C               **       2) OPERATE ON A MACRO FROM THE TERMINAL (ILLEGAL).
C               **  NOTE--IOFILE  WILL EQUAL 'YES' ONLY IN FILE CASE.
C               **  IN OTHER WORDS, THIS STEP MAKES SURE
C               **  THAT A FILE NAME IS EXISTENT AFTER THE
C               **  CREATE   AND   CALL   COMMANDS.
C               ***************************************************************
C
      ISTEPN='13'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWORD=2
      CALL DPFILE(IANSLC,IWIDTH,IWORD,
     1IOFILE,IBUGS2,ISUBRO,IERROR)
C
C               **********************************************
C               **  STEP 14--                               **
C               **  IF NO FILE NAME GIVEN,                  **
C               **  THEN GENERATE AN ERROR MESSAGE.         **
C               **********************************************
C
      ISTEPN='14'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IOFILE.NE.'YES')THEN
         IERROR='YES'
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1411)
 1411    FORMAT('***** ERROR IN DPMACR--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1412)
 1412    FORMAT('      THE DESIRED MACRO OPERATION CANNOT BE CARRIED')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1414)
 1414    FORMAT('      BECAUSE NO USER FILE NAME WAS GIVEN.')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1415)
 1415    FORMAT('      ILLUSTRATIVE EXAMPLE TO DEMONSTRATE THE ',
     1          'PROPER FORM--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1417)
 1417    FORMAT('      SUPPOSE THE ANALYST WISHES TO EXECUTE A MACRO ')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1419)
 1419    FORMAT('      RESIDING IN THE MASS STORAGE FILE    MAC3.  ,')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1420)
 1420    FORMAT('      THEN THE FOLLOWING COMMAND LINE IS ENTERED--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1421)
 1421    FORMAT('         CALL MAC3.')
         CALL DPWRST('XXX','BUG ')
         GOTO9000
      ENDIF
C
C               *************************************
C               **  STEP 15--                      **
C               **  IF HAVE THE FILE INPUT CASE    **
C               **  (WHICH WE MUST HAVE)--         **
C               **  COPY OVER VARIABLES            **
C               *************************************
C
      ISTEPN='15'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOUNIT=ICRENU
      IFILE=ICRENA
      ISTAT=ICREST
      IF(IFILE.EQ.ISYSNA)ISTAT=ISYSST
      IF(IFILE.EQ.ILOGNA)ISTAT=ILOGST
      IFORM=ICREFO
      IACCES=ICREAC
      IPROT=ICREPR
C     (SEE ADDITIONAL RESETTING OF   IPROT   BELOW
C     IF HAVE THE SYSTEM LOGIN AND/OR THE LOCAL LOGIN MACRO FILES)
      ICURST=ICRECS
C
      ISUBN0='MACR'
      IERRFI='NO'
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
         WRITE(ICOUT,1513)ISUBN0,IERRFI,IOUNIT
 1513    FORMAT('ISUBN0,IERRFI,IOUNIT = ',2(A4,2X),I8)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1514)IFILE
 1514    FORMAT('IFILE = ',A80)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1515)ISTAT,IFORM,IACCES,IPROT,ICURST
 1515    FORMAT('ISTAT,IFORM,IACCES,IPROT,ICURST = ',4(A12,2X),A12)
         CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***********************************************
C               **  STEP 16--                                **
C               **  IF HAVE THE FILE INPUT CASE--            **
C               **  (WHICH WE MUST HAVE)--                   **
C               **  CHECK TO SEE IF THE MACRO FILE MAY EXIST **
C               ***********************************************
C
      ISTEPN='16'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ISTAT.EQ.'NONE')THEN
         IERROR='YES'
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1611)
 1611    FORMAT('***** IMPLEMENTATION ERROR IN DPMACR--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1612)
 1612    FORMAT('      THE DESIRED MACRO CREATE/CALL CANNOT BE CARRIED')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1614)
 1614    FORMAT('      OUT BECAUSE THE INTERNAL VARIABLE    ICREST ')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1615)
 1615    FORMAT('      WHICH ALLOWS SUCH MACRO OPERATIONS HAS BEEN ',
     1          'SET TO    NONE.')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1617)ISTAT,ICREST
 1617    FORMAT('ISTAT,ICREST = ',A12,2X,A12)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1618)
 1618    FORMAT('      PLEASE CONTACT YOUR DATAPLOT IMPLEMENTOR')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1619)
 1619    FORMAT('      TO CORRECT THE SETTING IN SUBROUTINE INITFO.')
         CALL DPWRST('XXX','BUG ')
         GOTO9000
      ENDIF
C
C               ********************************
C               **  STEP 17--                 **
C               **  EXTRACT THE FILE NAME.    **
C               **  THIS IS NEEDED FOR MOST   **
C               **  (BUT NOT ALL) VARIATIONS  **
C               **  OF THE MACRO COMMAND.     **
C               ********************************
C
      ISTEPN='17'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1710I=1,MAXSTR
         IANSI=IANSLC(I)
         ICANS(I:I)=IANSI(1:1)
 1710 CONTINUE
C
      ISTART=1
      ISTOP=IWIDTH
      IWORD=2
      CALL DPEXWO(ICANS,ISTART,ISTOP,IWORD,
     1            ICOL1,ICOL2,IFILE,NCFILE,
     1            IBUGS2,ISUBRO,IERROR)
C
      IF(NCFILE.LE.0)THEN
         IERROR='YES'
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1411)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1742)
 1742    FORMAT('      A USER FILE NAME IS REQUIRED IN THE CREATE AND ',
     1          'CALL COMMANDS')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1744)
 1744    FORMAT('      (FOR EXAMPLE,    CALL PROG7.DP) BUT NONE WAS ',
     1          'GIVEN HERE.')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1746)
 1746    FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
         CALL DPWRST('XXX','BUG ')
         IF(IWIDTH.GE.1)THEN
           WRITE(ICOUT,1747)(IANSLC(I),I=1,MIN(100,IWIDTH))
 1747      FORMAT('      ',100A1)
           CALL DPWRST('XXX','BUG ')
         ELSE
           WRITE(ICOUT,999)
           CALL DPWRST('XXX','BUG ')
         ENDIF
         GOTO9000
      ENDIF
C
      IF(IERROR.EQ.'YES')GOTO9000
      IF(IFILE.EQ.ISYSNA)IPROT=ISYSPR
      IF(IFILE.EQ.ILOGNA)IPROT=ILOGPR
C
C               *****************************************
C               **  STEP 25--                          **
C               **  CHECK THE DESIRED MACRO OPERATION  **
C               **  (ON, OFF, OR EXECUTE).             **
C               *****************************************
C
      ISTEPN='25'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICOM.EQ.'MACR'.AND.ICOM2.EQ.'O   ')THEN
        IF(NUMARG.LE.0)GOTO2900
        IF(NUMARG.EQ.1 .OR. IHARG(2).EQ.'ON' .OR.
     1     IHARG(2).EQ.'AUTO')GOTO3000
        IF(IHARG(2).EQ.'OFF' .OR. IHARG(2).EQ.'DEFA')GOTO4000
        IF(IHARG(2).EQ.'CLOS')GOTO5000
C
        IF(IHARG(2).EQ.'EXEC')THEN
          NSARG=3
          GOTO6000
        ELSEIF(IHARG(2).EQ.'ADD')THEN
          NSARG=3
          GOTO6000
        ELSEIF(IHARG(2).EQ.'CALL')THEN
          NSARG=3
          GOTO6000
        ELSEIF(IHARG(2).EQ.'RUN')THEN
          NSARG=3
          GOTO6000
        ENDIF
      ELSEIF(ICOM.EQ.'END '.AND.ICOM2.EQ.'    ')THEN
        IF(NUMARG.EQ.1 .AND. IHARG(1).EQ.'CREA')GOTO4000
        IF(NUMARG.GE.2 .AND. IHARG(1).EQ.'OF  ' .AND.
     1    IHARG(2).EQ.'CREA')GOTO4000
      ELSEIF(ICOM.EQ.'CREA'.AND.ICOM2.EQ.'TE  ')THEN
        IF(NUMARG.GE.1)GOTO3000
      ELSEIF(
     1  (ICOM.EQ.'CALL' .AND. ICOM2.EQ.'    ') .OR.
     1  (ICOM.EQ.'ADD ' .AND. ICOM2.EQ.'    ') .OR.
     1  (ICOM.EQ.'RUN ' .AND. ICOM2.EQ.'    ') .OR.
     1  (ICOM.EQ.'EXEC' .AND. ICOM2.EQ.'UTE '))THEN
        NSARG=2
        IF(NUMARG.GE.1)GOTO6000
      ENDIF
C
 2900 CONTINUE
C
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1411)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2912)
 2912 FORMAT('      THE DESIRED MACRO OPERATION CANNOT BE CARRIED OUT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2914)
 2914 FORMAT('      BECAUSE THE SPECIFIED OPERATION WAS ILLEGAL.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1415)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1417)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1419)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1420)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1421)
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
C               ********************************************************
C               **  STEP 30--                                         **
C               **  TREAT THE MACRO ON (= CREATE) CASE.  CARRY OUT    **
C               **  WHATEVER SYSTEM OPERATIONS ARE NEEDED IN ORDER TO **
C               **  OPERATE ON THE FILE OR SUBFILE.  FOR MOST         **
C               **  INSTALLATIONS, THIS REQUIRES                      **
C               **      1) AN OPENING OF THE FILE OR SUBFILE;         **
C               **      2) AN EQUIVALENCING OF THE FILE OR SUBFILE;   **
C               **      3) A  REWINDING OF THE FILE OR SUBFILE.       **
C               **  THE CODE BELOW OPENS THE FILE OR SUBFILE.  THE    **
C               **  CODE ALSO EQUIVALENCES THE FILES OR SUBFILES      **
C               **  TO THE FORTRAN LOGICAL UNIT NUMBER DESIGNATED IN  **
C               **  THE VARIABLE IMACNU (IN THE SUBROUTINE INITFO;    **
C               **  THE CODE ALSO REWINDS THE FILE OR SUBFILE.        **
C               ********************************************************
C
 3000 CONTINUE
      ISTEPN='30'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IMACRO='ON'
CCCCC IOUNIT=IMACNU       OCTOBER 8, 1986
CCCCC APRIL 1997.  SEPARATE UNIT FOR CREATE AND CALL TO AVOID INFINITE
CCCCC LOOP
CCCCC IOUNIT=ICRENU
      IOUNIT=ICREN2
C
      IREWIN='ON'
      CALL DPOPFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
      IF(IERRFI.EQ.'YES')THEN
        IERROR='YES'
        GOTO9000
      ENDIF
      IMACCS=ICURST
C
      IF(IFEEDB.EQ.'ON')THEN
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,3011)
 3011    FORMAT('THE CREATE (MACRO) SWITCH HAS JUST BEEN TURNED ON.')
         CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
C
C               ****************************************************************
C               **  STEP 40--
C               **  TREAT THE MACRO OFF (= END OF CREATE) CASE.
C               **  CARRY OUT WHATEVER SYSTEM OPERATIONS ARE NEEDED
C               **  IN ORDER TO OPERATE ON THE FILE OR SUBFILE.
C               **  FOR MOST INSTALLATIONS, THIS REQUIRES
C               **      1) A PLACING OF AN END MARK OF THE FILE OR SUBFILE;
C               **      2) A FREEING (DEASSIGNING) OF THE FILE OR SUBFILE;
C               ****************************************************************
C
 4000 CONTINUE
      ISTEPN='40'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IMACRO='OFF'
CCCCC IOUNIT=IMACNU       OCTOBER 8, 1986
CCCCC APRIL 1997.  SEPARATE UNIT FOR CREATE AND CALL
CCCCC IOUNIT=ICRENU
      IOUNIT=ICREN2
C
      IENDFI='ON'
      IREWIN='ON'
      CALL DPCLFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1IENDFI,IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
      IF(IERRFI.EQ.'YES')GOTO9000
C
      IF(IFEEDB.EQ.'ON')THEN
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,4011)
 4011    FORMAT('THE CREATE (MACRO) SWITCH HAS JUST BEEN TURNED OFF.')
         CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
C
C               ************************************
C               **  STEP 50--                     **
C               **  TREAT THE MACRO CLOSE CASE.   **
C               ************************************
C
C     NOTE 10/14/2008: WHEN MACROS ARE NESTED, ICURST GETS SET
C                      TO CLOSED WHEN THE INNER-MOST MACRO IS
C                      CLOSED.  THIS RESULTS IN SUBSEQUENT MACROS
C                      NOT GETTING CLOSED.  SINCE WE DO NOT KEEP
C                      A SEPARATE STATUS FLAG FOR EACH FILE IN
C                      THE NEST, NEED TO BE SURE THAT WE CLOSE
C                      THE FILE REGARDLESS OF VALUE OF "ICURST".
C
 5000 CONTINUE
      ISTEPN='50'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOUNIT=IMACNU
      IENDFI='OFF'
      IREWIN='ON'
      ICURST='OPEN'
      CALL DPCLFI(IOUNIT,IMANAM(IMALEV),ISTAT,IFORM,IACCES,IPROT,ICURST,
     1IENDFI,IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
      IF(IERRFI.EQ.'YES')GOTO9000
C
C     NOW RESET MACRO LEVEL
C
      IMACCS='JUNK'
      IF(IMALEV.GE.1)IMANAM(IMALEV)='NO'
      IMALEV=IMALEV-1
      IF(IMALEV.LE.0)THEN
        IMACNU=IRD
        IMALEV=0
        IMACRO='OFF'
      ELSE
        IMACNU=IMACNU-1
        IF(IMALEV.EQ.1)IMACNU=ICRENU
      ENDIF
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,5011)IMACNU
 5011    FORMAT('MACRO FILE NUMBER ',I8,' HAS JUST BEEN CLOSED')
         CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
C
C               ************************************
C               **  STEP 55--                     **
C               **  TREAT THE CALL EXIT   CASE.   **
C               ************************************
C
C     NOTE 2015/03: ADD SUPPORT FOR A "CALL EXIT" CASE.  FOR EXAMPLE,
C                   THIS CAN BE USED TO EXIT A MACRO IF AN ERROR
C                   CONDITION IS ENCOUNTERED.
C
C                   THERE ARE 2 CASES:
C
C                      1. EXIT THE CURRENT MACRO ONLY
C
C                      2. EXIT ALL MACROS (I.E., RETURN CONTROL
C                         TO THE TERMINAL).
C
C                   THE EXIT CURRENT CASE IS HANDLED BY THE STEP 50 CODE.
C                   THIS BLOCK HANDLES THE EXIT ALL CASE.
C
 5500 CONTINUE
      ISTEPN='55'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IMALEV.GE.1)THEN
        DO5510II=1,IMALEV
          IOUNIT=IMACNU
          IENDFI='OFF'
          IREWIN='ON'
          ICURST='OPEN'
          CALL DPCLFI(IOUNIT,IMANAM(IMALEV),ISTAT,IFORM,IACCES,IPROT,
     1                ICURST,IENDFI,IREWIN,ISUBN0,IERRFI,
     1                IBUGS2,ISUBRO,IERROR)
          IF(IERRFI.EQ.'YES')GOTO9000
C
C         NOW RESET MACRO LEVEL
C
          IF(IMALEV.GE.1)IMANAM(IMALEV)='NO'
          IMALEV=IMALEV-1
          IF(IMALEV.LE.0)THEN
            IMACNU=IRD
            IMALEV=0
            IMACRO='OFF'
          ELSEIF(IMALEV.EQ.1)THEN
            IMACNU=ICRENU
          ELSEIF(IMALEV.GE.2)THEN
            IMACNU=IMACNU-1
          ENDIF
 5510   CONTINUE
      ENDIF
C
      IMACCS='JUNK'
C
      IF(IFEEDB.EQ.'ON')THEN
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,5511)
 5511    FORMAT('ALL MACRO FILES HAVE BEEN CLOSED.')
         CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
C
C               ********************************************************
C               **  STEP 60--                                         **
C               **  TREAT THE MACRO (= CALL) CASE.                    **
C               **  CARRY OUT WHATEVER SYSTEM OPERATIONS ARE NEEDED   **
C               **  IN ORDER TO OPERATE ON THE FILE OR SUBFILE.       **
C               **  FOR MOST INSTALLATIONS, THIS REQUIRES             **
C               **      1) AN OPENING OF THE FILE OR SUBFILE;         **
C               **      2) AN EQUIVALENCING OF THE FILE OR SUBFILE;   **
C               **      3) A  REWINDING OF THE FILE OR SUBFILE.       **
C               **      4) SKIPPING OVER ANY FRONT LINES              **
C               ********************************************************
C
 6000 CONTINUE
      ISTEPN='60'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     OCTOBER 2020: SAVE THE CURRENT CALL COMMAND LINE
C
      IMCRCL=' '
      DO6003II=1,MIN(IWIDTH,1024)
        IMCRCL(II:II)=IANSLC(II)(1:1)
 6003 CONTINUE
C
CCCCC THE FOLLOWING SECTION WAS ADDED   AUGUST 1994
CCCCC TO ALLOW FOR FOR/SUBSET           AUGUST 1994
C               *****************************************
C               **  STEP 61--                          **
C               **  CHECK TO SEE THE TYPE CASE--       **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET/EXCEPT; OR             **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='61'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC THE FOLLOWING SECTION WAS ADDED   AUGUST 1994
CCCCC TO ALLOW FOR FOR/SUBSET           AUGUST 1994
C               *********************************************
C               **  STEP 62--                              **
C               **  BRANCH    TO THE APPROPRIATE SUBCASE   **
C               **  (FULL, SUBSET, OR FOR).                **
C               *********************************************
C
      ISTEPN='62'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               **************************************************
C               **  STEP 63--                                   **
C               **  FIND THE FIRST AND LAST ROW OF THE SUB-CHUNK**
C               **  OF THE FILE BEING EXECUTED                  **
C               **  IMACL1 = FIRST LINE TO BE EXECUTED          **
C               **  IMACL2 = LAST  LINE TO BE EXECUTED          **
C               **  IMACLR = NUMBER OF LINES ALREADY EXECUTED   **
C               **************************************************
C
      ISTEPN='63'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,6001)IMALEV,NUMARG,NSARG
 6001   FORMAT('IMALEV,NUMARG,NSARG = ',3I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
CCCCC THE FOLLOWING IS A PATCH                          AUGUST 1994
CCCCC TO MAKE    CALL <FILE> FOR I = ... ... ... WORK   AUGUST 1994
C
CCCCC SEPTEMBER 2005.  IF NO FOR CLAUSE, THEN INTERPRET ANY
CCCCC                  ARGUMENTS AFTER "CALL FILE." AS COMMAND
CCCCC                  LINE ARGUMENTS.
CCCCC
CCCCC                  IF THIS IS THE FIRST LEVEL CALL, CLEAR THE
CCCCC                  COMMAND LINE ARGUMENTS IF NO ARGUMENTS ARE
CCCCC                  GIVEN.
CCCCC
CCCCC MAY 2016.        OPTION TO ALLOW USER TO SPECIFY WHETHER QUOTES
CCCCC                  SHOULD BE STRIPPED OFF OF COMMAND LINE ARGUMENTS.
CCCCC
CCCCC SEPTEMBER 2016.  IF FIRST ARGUMENT IS "NULL", CLEAR ARGUMENT LIST.
CCCCC
CCCCC OCTOBER 2016.    UPDATE MAXIMUM NUMBER OF CHARACTERS FOR ARGUMENT
CCCCC                  TO 80.  ALSO ALLOW NAMED ARGUMENTS, E.G.
CCCCC
CCCCC                      CALL TEST.DP  Y=Y3  X=X2
CCCCC
CCCCC JANUARY   2017.  IF ARGUMENT STARTS WITH "-", DPEXWO TREATS AS
CCCCC                  WORD SEPARATOR AND REMOVES IT.  ADD OPTION TO
CCCCC                  NOT TREAT LEADING "-" AS WORD SEPARATOR.
CCCCC
CCCCC JULY      2017.  IF THE CALL COMMAND IS GIVEN WITHIN A LOOP,
CCCCC                  DATAPLOT SAVES THE CONTENTS OF THE CALL FILE
CCCCC                  RATHER THAN CALL COMMAND.  THIS MEANS THAT
CCCCC                  ARGUMENTS ARE LOST AFTER THE FIRST ITERATION
CCCCC                  OF THE LOOP.  THE COMMAND
CCCCC
CCCCC                     INSERT CALL LINE ARGUMENTS <string>
CCCCC
CCCCC                  WAS ADDED TO ADDRESS THIS PROBLEM.  THIS ROUTINE
CCCCC                  WILL INSERT THE COMMAND INTO THE SAVED LOOP
CCCCC                  COMMANDS.  WHEN THE LOOP IS EXECUTED, THAT
CCCCC                  COMMAND WILL RESTORE THE COMMAND LINE ARGUMENTS.
CCCCC
CCCCC MAY       2018.  IF NO COMMAND LINE ARGUMENTS GIVEN, THEN
CCCCC                  DON'T CLEAR PREVIOUS LIST.
CCCCC
CCCCC MARCH     2021.  FOR NAMED ARGUMENTS, REMOVE SPACES AROUND "="
CCCCC                  SIGNS
C
      IF(NUMARG.LT.NSARG)GOTO6399
C
      IBLANK=0
      ICNT=0
      IFLAGP=0
C
C     2021/03: 1) COMMAND LINE LENGTH RAISED FROM 255 TO 1024
C              2) REMOVE SPACES AROUND EQUAL SIGNS NOT EMBEDDED
C                 IN QUOTES
C
      IMACCL=' '
      DO6290I=1,MIN(IWIDTH,1024)
        IF(IBLANK.EQ.0 .AND. IANSLC(I)(1:1).EQ.' ')GOTO6290
        IBLANK=1
        ICNT=ICNT+1
        IMACCL(ICNT:ICNT)=IANSLC(I)(1:1)
 6290 CONTINUE
      NMACCL=ICNT
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
        WRITE(ICOUT,6291)NMACCL,IMACCL(1:NMACCL)
 6291   FORMAT('AFTER 6290: NMACCL,IMACCL(1:NMACCL) = ',I6,2X,A)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     2021/03: STRIP OUT SPACES AROUND EQUAL SIGNS NOT EMBEDDED
C              IN QUOTES
C
      IFLAGQ=0
      IFLAGE=0
      ICNT=0
      ISTR=' '
      ISPACE=0
      DO6293I=1,NMACCL
C
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
          WRITE(ICOUT,66291)I,IFLAGQ,IFLAGE,ICNT,IMACCL(I:I),
     1                      ISTR(1:MAX(1,ICNT))
66291     FORMAT('6293: I,IFLAGQ,IFLAGE,ICNT,IMACCL(I:I),ISTR = ',
     1           4I6,2X,A1,2X,A)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(IMACCL(I:I).EQ.'"')THEN
C
C         CHECK FOR QUOTE AND DETERMINE WHETHER OPENING OR CLOSING QUOTE
C
          ICNT=ICNT+1
          ISTR(ICNT:ICNT)=IMACCL(I:I)
          IF(IFLAGQ.EQ.0)THEN
            IFLAGQ=1
            IFLAGE=0
          ELSE
            IFLAGQ=0
            ISPACE=1
          ENDIF
        ELSEIF(IFLAGE.EQ.1)THEN
C
C         NON-QUOTED EQUAL SIGN, REMOVE BLANKS AFTER
C
          IF(IMACCL(I:I).NE.' ')THEN
            ICNT=ICNT+1
            ISTR(ICNT:ICNT)=IMACCL(I:I)
            IFLAGE=0
          ELSE
            GOTO6293
          ENDIF
        ELSEIF(IMACCL(I:I).EQ.'=' .AND. IFLAGQ.EQ.0)THEN
C
C         NON-QUOTED EQUAL, REMOVE PRECEEDING BLANKS
C
C         ONE AMBIGUITY:
C
C             call sub.dp  frame=   type=data
C
C         IS "type=data" THE ARGUMENT FOR frame OR DOES IT
C         DEFINE A NEW NAMED ARGUMENT?  CHECK: IF THERE IS A
C         SINGLE UNQUOTED WORD BEFORE NEXT UNQUOTED EQUAL SIGN,
C         THEN ASSUME IT IS AN ARGUMENT NAME.  ADDRESS THIS BY
C         ADDING A BLANK CHARACTER AFTER THE "frame=".
C
          ISKIP=0
          IF(I.GT.1)THEN
            DO6295JJ=I-1,1,-1
              IF(IMACCL(JJ:JJ).NE.' ')THEN
                GOTO6296
              ELSE
                ISKIP=ISKIP+1
              ENDIF
 6295       CONTINUE
 6296       CONTINUE
            IF(ISKIP.GT.0)THEN
              ICNT=ICNT-ISKIP
              ISTR(ICNT+1:ICNT+ISKIP)=' '
            ENDIF
            ICNT=ICNT+1
            ISTR(ICNT:ICNT)=IMACCL(I:I)
            IFLAGE=1
          ENDIF
C
          IF(I.LT.NMACCL)THEN
            NWORD=0
            IFLAGC=0
            DO67291JJ=I+1,NMACCL
C
              IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
                WRITE(ICOUT,96299)I,JJ,IMACCL(JJ:JJ)
96299           FORMAT('AT 6729: I,JJ,IMACCL(JJ:JJ) = ',2I6,2X,A1)
                CALL DPWRST('XXX','BUG ')
              ENDIF
C
              IF(IMACCL(JJ:JJ).EQ.'"')GOTO6293
              IF(IMACCL(JJ:JJ).EQ.'=')THEN
C
                IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
                  WRITE(ICOUT,96291)NWORD
96291             FORMAT('AT NEXT =: NWORD = ',I6)
                  CALL DPWRST('XXX','BUG ')
                ENDIF
C
                IF(NWORD.LE.1)THEN
                  ICNT=ICNT+1
                  ISTR(ICNT:ICNT)='"'
                  ICNT=ICNT+1
                  ISTR(ICNT:ICNT)=' '
                  ICNT=ICNT+1
                  ISTR(ICNT:ICNT)='"'
                  ICNT=ICNT+1
                  ISTR(ICNT:ICNT)=' '
                ENDIF
                GOTO6293
              ENDIF
C
              IF(IMACCL(JJ:JJ).EQ.' ')THEN
C
                IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
                  WRITE(ICOUT,96292)IFLAGC
96292             FORMAT('SPACE CHARACTER: IFLAGC = ',I6)
                  CALL DPWRST('XXX','BUG ')
                ENDIF
C
                IF(IFLAGC.EQ.1)IFLAGC=0
              ELSE
                IF(IFLAGC.EQ.0)NWORD=NWORD+1
                IFLAGC=1
C
                IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
                  WRITE(ICOUT,96293)IMACCL(JJ:JJ)
96293             FORMAT('NON-SPACE CHARACTER: IMACCL(JJ:JJ) = ',A1)
                  CALL DPWRST('XXX','BUG ')
                ENDIF
              ENDIF
67291       CONTINUE
          ENDIF
C
        ELSE
          ICNT=ICNT+1
          ISTR(ICNT:ICNT)=IMACCL(I:I)
        ENDIF
 6293 CONTINUE
C
      IF(ICNT.NE.NMACCL)THEN
        IMACCL=' '
        IMACCL(1:ICNT)=ISTR(1:ICNT)
        NMACCL=ICNT
        DO6297II=1,NMACCL
          IANSLC(II)=IMACCL(II:II)
          IANS(II)=IMACCL(II:II)
          ICANS(II:II)=IANSLC(II)(1:1)
 6297   CONTINUE
        DO6298II=NMACCL+1,IWIDTH
          IANSLC(II)=' '
          IANS(II)=' '
          ICANS(II:II)=IANSLC(II)(1:1)
 6298   CONTINUE
        IWIDTH=NMACCL
      ENDIF
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
        WRITE(ICOUT,6299)NMACCL,IMACCL(1:NMACCL)
 6299   FORMAT('AFTER 6299: NMACCL,IMACCL(1:NMACCL) = ',I6,2X,A)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IMACL1=1
      IMACL2=100000
      IHYPS2=IHYPSW
      ICOMCL='ON'
C
      IF(IMALEV.EQ.1)THEN
        DO6380II=1,50
          IMACAR(II)=' '
          IMACLA(II)=' '
          IMACLL(II)=0
 6380   CONTINUE
        NMACAG=0
        NMACLA=0
      ENDIF
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
        WRITE(ICOUT,6381)NUMARG,NSARG,ILOOLI,ILOOST
 6381   FORMAT('NUMARG,NSARG,ILOOLI,ILOOST = ',3I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IHARG(2).EQ.'FOR ')THEN
         IF(NUMARG.GE.7)THEN
            IMACL1=IARG(5)
            IMACL2=IARG(7)
         ENDIF
      ELSE IF(NUMARG.GE.NSARG)THEN
        NMACAG=0
        NMACLA=0
        DO6390II=1,50
          IMACAR(II)=' '
          IMACLA(II)=' '
          IMACLL(II)=0
 6390   CONTINUE
        IFILQZ=IFILQU
C
C       ENTER THE CALL ARGUMENTS IN THE SAVED LOOP COMMANDS
C
        IF(ILOOST.EQ.'STOR' .AND. ILOOLI.LT.MAXLIL)THEN
          NCSTR=22
          ISTR(1:NCSTR)='INSERT CALL ARGUMENTS '
C
          DO6391I=1,MAXSTR
            ICANS(I:I)=IANSLC(I)(1:1)
 6391     CONTINUE
C
          ISTART=1
          ISTOP=IWIDTH
          IWORD=3
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
            WRITE(ICOUT,6382)ISTART,ISTOP
 6382       FORMAT('BEFORE DPEXW3: ISTART,ISTOP = ',2I8)
            CALL DPWRST('XXX','BUG ')
            DO6383JJ=1,IWIDTH
              WRITE(ICOUT,6384)JJ,ICANS(JJ:JJ)
 6384         FORMAT('JJ,ICANS(JJ:JJ) = ',I5,2X,A1)
              CALL DPWRST('XXX','BUG ')
 6383       CONTINUE
          ENDIF
C
          CALL DPEXW3(ICANS,ISTART,ISTOP,IWORD,
     1                ICOL1,ICOL2,ISTR2,NCTEMP,
     1                IBUGS2,ISUBRO,IERROR)
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
            WRITE(ICOUT,6386)ICOL1,ICOL2,NCTEMP
 6386       FORMAT('AFTER DPEXW3: ICOL1,ICOL2,NCTEMP = ',3I8)
            CALL DPWRST('XXX','BUG ')
            DO6387JJ=1,NCTEMP
              WRITE(ICOUT,6388)JJ,ISTR2(JJ:JJ)
 6388         FORMAT('JJ,ISTR2(JJ:JJ) = ',I5,2X,A1)
              CALL DPWRST('XXX','BUG ')
 6387       CONTINUE
          ENDIF
C
          IF(ICOL1.LE.ICOL2)THEN
            DO6392JJ=1,NCTEMP
              NCSTR=NCSTR+1
              ISTR(NCSTR:NCSTR)=ISTR2(JJ:JJ)
 6392       CONTINUE
C
            IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
              WRITE(ICOUT,16387)
16387         FORMAT('AFTER INSERTING COMMAND LINE ARGUMENTS')
              CALL DPWRST('XXX','BUG ')
              DO16388JJ=1,NCSTR
                WRITE(ICOUT,16389)JJ,ISTR(JJ:JJ)
16389           FORMAT('JJ,ISTR(JJ:JJ) = ',I5,2X,A1)
                CALL DPWRST('XXX','BUG ')
16388         CONTINUE
            ENDIF
C
          ENDIF
C
          ILOOLI=ILOOLI+1
          NUMLIL=ILOOLI
          IWIDLL(ILOOLI)=NCSTR
          IF(NCSTR.GT.MAXCIL)NCSTR=MAXCIL
          DO6393JJ=1,NCSTR
            IANSLO(ILOOLI,JJ)(1:1)=ISTR(JJ:JJ)
 6393     CONTINUE
C
        ENDIF
C
C       DPTYPE DOES NOT SPLIT WORDS IN THE WAY NEEDED IN PARSING
C       COMMAND LINE ARGUMENTS.  CALL DPNUWO TO DETERMINE THE
C       NUMBER OF WORDS ON THE COMMAND LINE.
C
        ISTR=' '
        DO16381II=1,IWIDTH
          ISTR(II:II)=IANSLC(II)(1:1)
16381   CONTINUE
        ISTART=1
        CALL DPNUWO(ISTR,ISTART,IWIDTH,NWORD,IBUGS2,ISUBRO,IERROR)
C
        IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
          WRITE(ICOUT,16382)NWORD,IERROR
16382     FORMAT('AFTER DPNUWO: NWORD,IERROR = ',I5,2X,A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IFILQU='ON'
        DO6370J=NSARG+1,NWORD
          NMACAG=NMACAG+1
          IF(NMACAG.GT.50)GOTO6379
          ISTART=1
          ISTOP=IWIDTH
          IWORD=J
          IHYPSW='OFF'
          CALL DPEXWO(ICANS,ISTART,ISTOP,IWORD,
     1                ICOL1,ICOL2,IMACAR(NMACAG),NCTEMP,
     1                IBUGS2,ISUBRO,IERROR)
          IHYPSW=IHYPS2
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
            ISTEPN='637'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,6394)J,IWORD,NMACAG,NCTEMP,IMACAR(NMACAG)
 6394       FORMAT('6370: J,IWORD,NMACAG,NCTEMP,IMACAR(NMACAG) = ',
     1             4I5,2X,A100)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
C         CHECK IF 80 CHARACTERS EXCEEDED (BE SURE TO MAKE LAST
C         CHARACTER A QUOTE IF FIRST CHARACTER IS A QUOTE).
C
CCCCC     IF(NCTEMP.GT.80)THEN
          IF(NCTEMP.GT.MAXFNC)THEN
            NCTEMP=MAXFNC
            IF(IMACAR(NMACAG)(1:1).EQ.'"')
     1         IMACAR(NMACAG)(NCTEMP:NCTEMP)='"'
          ENDIF
C
C         REMOVE LEADING/TRAILING QUOTES IF NEEEDED
C
          IF(IMACAR(NMACAG)(1:1).EQ.'"' .AND.
     1       IMACAR(NMACAG)(NCTEMP:NCTEMP).EQ.'"')THEN
            IF(IQUOST.EQ.'ON')THEN
              IMACAR(NMACAG)(1:NCTEMP-2)=IMACAR(NMACAG)(2:NCTEMP-1)
              NCTEMP=NCTEMP-2
              IMACAR(NMACAG)(NCTEMP+1:NCTEMP+2)='  '
            ENDIF
          ENDIF
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
            WRITE(ICOUT,17394)
17394       FORMAT('AFTER STRIP QUOTES: NMACAG,IMACAR(NMACAG) =',
     1             I5,2X,A100)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
C         2016/09: IF FIRST ARGUMENT IS "NULL", THEN BLANK OUT
C                  ARGUMENT LIST AND SET NUMBER OF ARGUMENTS TO 0.
C
          IF(NMACAG.EQ.1)THEN
            IF(IMACAR(1).EQ.'NULL' .OR. IMACAR(1).EQ.'null')THEN
              IMACAR(1)=' '
              NMACAG=0
              GOTO6379
            ENDIF
          ENDIF
C
C         2018/05: ALLOW "EMPTY" ARGUMENTS, DO NOT SET TO ZZZZNULL
C
C         2021/03: TEMPORARILY SET BLANK ARGUMENTS TO "ZZZZEMPTY",
C                  THESE WILL BE SET TO BLANK AT THE END.
C
          IF(NCTEMP.EQ.1 .AND. IMACAR(NMACAG)(1:1).EQ.' ')THEN
            IMACAR(NMACAG)='ZZZZEMPTY'
            NCTEMP=9
          ELSEIF(NCTEMP.EQ.0)THEN
            IMACAR(NMACAG)='ZZZZEMPTY'
            NCTEMP=9
          ENDIF
C
C         2016/10: CHECK FOR NAMED ARGUMENTS
C
C         2018/04: CHECK FOR FOLLOWING 2 CASES
C
C                  1.  "FRAME=FOR I = 1 1 50"
C                  2.   FRAME="FOR I = 1 1 50"
C
C                  AS FIRST STEP, CHECK FOR FIRST OCCURENCE OF QUOTE
C                  (IF ANY) AND FIRST OCCURRENCE OF EQUAL SIGN.
C
C                  NOTE THAT CODE WAS ADDED IN MAIN AND DPTYPE ROUTINES
C                  SO THAT EQUAL SIGN WILL NOT BE A DELIMITER ON A CALL
C                  COMMAND.
C
          IPOSQU=0
          IPOSEQ=0
C
C         CHECK FOR FIRST EQUAL CHARACTER.  HOWEVER, IF THE EQUAL
C         CHARACTER IS PRECEEDED BY AN ESCAPE CHARACTER ("\"), THEN
C         REMOVE THE ESCAPE CHARACTER BUT TREAT AS NO EQUAL CHARACTER
C         CASE.  START WITH CHARACTER POSITION 2 AS THERE NEEDS TO BE
C         AT LEAST ONE CHARACTER FOR THE ARGUMENT NAME.
C
C         2019/11: ONLY TRIGGER "NAMED" ARGUMENT IF THERE IS A SINGLE
C                  WORD TO LEFT OF EQUAL SIGN.
C
          DO36311II=2,NCTEMP-1
            IF(IMACAR(NMACAG)(II:II).EQ.'=')THEN
              IF(II.GT.1 .AND. IMACAR(NMACAG)(II-1:II-1).EQ.'\')THEN
                IMACAR(NMACAG)(II-1:NCTEMP-1)=IMACAR(NMACAG)(II:NCTEMP)
                IMACAR(NMACAG)(NCTEMP:NCTEMP)=' '
                NCTEMP=NCTEMP-1
                GOTO36319
              ENDIF
              DO36113LL=1,II-1
                IF(IMACAR(NMACAG)(LL:LL).NE.' ')THEN
                  IFRST=LL
                  GOTO36114
                ENDIF
36113         CONTINUE
              GOTO36319
36114         CONTINUE
              DO36115LL=II-1,IFRST,-1
                IF(IMACAR(NMACAG)(LL:LL).NE.' ')THEN
                  ILAST=LL
                  GOTO36116
                ENDIF
36115         CONTINUE
              GOTO36319
36116         CONTINUE
              DO36117LL=IFRST,ILAST
                IF(IMACAR(NMACAG)(LL:LL).EQ.' ')THEN
                  GOTO36319
                ENDIF
36117         CONTINUE
C
              IPOSEQ=II
              GOTO36319
            ENDIF
36311     CONTINUE
36319     CONTINUE
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
            WRITE(ICOUT,18394)NMACAG,IMACAR(NMACAG)
18394       FORMAT('AT 36319: NMACAG,IMACAR(NMACAG) = ',I5,2X,A)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,18396)IFRST,ILAST,IPOSEQ
18396       FORMAT('IFRST,ILAST,IPOSEQ = ',3I6)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
C         NOW CHECK FOR OCCURENCE OF QUOTE.  NOTE THAT QUOTE IS ONLY
C         TREATED AS AN ARGUMENT DELIMITER IF IT IS THE FIRST CHARACTER
C         IN THE STRING OR THE FIRST CHARACTER AFTER THE EQUAL SIGN.  IN
C         ADDITION, IF A QUOTE DELIMITER IS FOUND, CHECK FOR A QUOTE AS
C         THE LAST CHARACTER.  IF NOT FOUND, THEN ADD IT.
C
          IF(IMACAR(NMACAG)(1:1).EQ.'"')THEN
            IPOSQU=1
          ELSEIF(IMACAR(NMACAG)(IPOSEQ+1:IPOSEQ+1).EQ.'"')THEN
            IPOSQU=IPOSEQ+1
          ENDIF
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
            WRITE(ICOUT,36394)IPOSEQ,IPOSQU,NCTEMP
36394       FORMAT('IPOSEQ,IPOSQU,NCTEMP = ',3I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
C         IF ENDING QUOTE NOT PRESENT, ADD IT.
C
          IF(IPOSQU.GT.0)THEN
            IF(IMACAR(NMACAG)(NCTEMP:NCTEMP).EQ.')')THEN
              IF(IMACAR(NMACAG)(NCTEMP-1:NCTEMP-1).NE.'"')THEN
                NCTEMP=NCTEMP+1
                IMACAR(NMACAG)(NCTEMP-1:NCTEMP)='")'
              ENDIF
            ELSE
              IF(IMACAR(NMACAG)(NCTEMP:NCTEMP).NE.'"')THEN
                NCTEMP=NCTEMP+1
                IMACAR(NMACAG)(NCTEMP:NCTEMP)='"'
              ENDIF
            ENDIF
          ENDIF
C
C         PROCESS STRING BASED ON WHETHER QUOTES/EQUAL SIGNS ARE
C         PRESENT.
C
          IF(IPOSEQ.EQ.0 .AND. IPOSQU.EQ.0)THEN
C
C           CASE WITH NO EQUAL AND NO QUOTE.  IN THIS CASE, WE HAVE
C           A POSITIONAL ARGUMENT AND DO NOT NEED TO PROCESS QUOTES.
C
C           IN THIS CASE, NO ADDITIONAL PROCESSING IS REQUIRED.
C
            IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
              WRITE(ICOUT,46351)
46351         FORMAT('NO EQUAL, NO QUOTE CASE: NOTHING DONE')
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
          ELSEIF(IPOSEQ.EQ.0 .AND. IPOSQU.GE.1)THEN
C
C           CASE WITH NO EQUAL BUT WITH QUOTE.  IN THIS CASE, WE HAVE
C           A POSITIONAL ARGUMENT AND WE NEED TO PROCESS QUOTES.
C
C           ONLY PROCESSING REQUIRED IS TO STRIP OFF LEADING/TRAILING
C           QUOTE IF THAT OPTION SET.
C
            IF(IQUOST.EQ.'ON')THEN
              IF(IMACAR(NMACAG)(NCTEMP:NCTEMP).EQ.')')THEN
                IMACAR(NMACAG)(1:NCTEMP-3)=IMACAR(NMACAG)(2:NCTEMP-2)
                NCTEMP=NCTEMP-2
                IMACAR(NMACAG)(NCTEMP:NCTEMP+2)=')  '
              ELSE
                IMACAR(NMACAG)(1:NCTEMP-2)=IMACAR(NMACAG)(2:NCTEMP-1)
                IMACAR(NMACAG)(NCTEMP+1:NCTEMP+2)='  '
                NCTEMP=NCTEMP-2
              ENDIF
            ENDIF
C
            IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
              WRITE(ICOUT,46361)
46361         FORMAT('NO EQUAL, QUOTE CASE:')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,46363)NMACAG,NCTEMP,IMACAR(NMACAG)
46363         FORMAT('NMACAG,NCTEMP,IMACAR(NMACAG) = ',2I8,A100)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
          ELSEIF(IPOSEQ.GE.1 .AND. IPOSQU.EQ.0)THEN
C
C           CASE WITH EQUAL AND NO QUOTE.  IN THIS CASE, WE HAVE
C           A NAMED ARGUMENT AND DO NOT NEED TO PROCESS QUOTES.
C
C           IN THIS CASE, NEED TO MODIFY THE MACRO NAME TABLE AND
C           ALSO ADJUST THE ARGUMENT STRING.
C
            NMACLA=NMACLA+1
            IMACLL(NMACLA)=NMACAG
            IMACLA(NMACLA)(1:IPOSEQ-1)=IMACAR(NMACAG)(1:IPOSEQ-1)
            IMACNC(NMACLA)=IPOSEQ-1
            ICNT2=NCTEMP-IPOSEQ
            IF(ICNT2.GE.1)THEN
              IMACAR(NMACAG)(1:ICNT2)=IMACAR(NMACAG)(IPOSEQ+1:NCTEMP)
              IMACAR(NMACAG)(ICNT2+1:NCTEMP)=' '
              NCTEMP=ICNT2
            ELSE
              IMACAR(NMACAG)=' '
              NCTEMP=1
            ENDIF
C
            IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
              WRITE(ICOUT,46371)
46371         FORMAT('EQUAL, NO QUOTE CASE:')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,46373)NMACAG,NCTEMP,IMACAR(NMACAG)
46373         FORMAT('NMACAG,NCTEMP,IMACAR(NMACAG) = ',2I8,2X,A100)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,46375)NMACLA,IMACLL(NMACLA),IMACNC(NMACLA),
     1                          IMACLA(NMACLA)
46375         FORMAT('NMACLA,IMACLL(NMACLA),IMACNC(NMACLA),'
     1               'IMACLA(NMACLA) = ',3I8,A8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
          ELSEIF(IPOSEQ.GE.1 .AND. IPOSQU.GE.1)THEN
C
C           CASE WITH EQUAL AND QUOTE.  IN THIS CASE, WE HAVE
C           A NAMED ARGUMENT AND WE NEED TO PROCESS QUOTES.
C
C           TREAT CASE WHERE QUOTE IS FOR THE FULL STRING SEPARATELY
C           FROM CASE WHERE QUOTE IS FOR THE VALUE ONLY.
C
            IF(IPOSQU.EQ.1)THEN
              NMACLA=NMACLA+1
              IMACLL(NMACLA)=NMACAG
              ICNT=IPOSEQ-2
              IMACLA(NMACLA)(1:ICNT)=IMACAR(NMACAG)(2:IPOSEQ-1)
              IMACNC(NMACLA)=ICNT
              ICNT2=NCTEMP-IPOSEQ-1
              IF(ICNT2.GE.1)THEN
                IMACAR(NMACAG)(1:ICNT2)=
     1            IMACAR(NMACAG)(IPOSEQ+1:NCTEMP-1)
                IMACAR(NMACAG)(ICNT2+1:MAXFNC)=' '
                NCTEMP=ICNT2
              ELSE
                IMACAR(NMACAG)='ZZZZEMPTY'
                NCTEMP=9
              ENDIF
            ELSE
              NMACLA=NMACLA+1
              IMACLL(NMACLA)=NMACAG
              ICNT=IPOSEQ-1
              IMACLA(NMACLA)(1:ICNT)=IMACAR(NMACAG)(1:IPOSEQ-1)
              IMACNC(NMACLA)=ICNT
              ICNT2=NCTEMP-IPOSEQ
              IF(ICNT2.GE.1)THEN
                IMACAR(NMACAG)(1:ICNT2)=IMACAR(NMACAG)(IPOSEQ+1:NCTEMP)
                IMACAR(NMACAG)(ICNT2+1:MAXFNC)=' '
                NCTEMP=ICNT2
              ELSE
                IMACAR(NMACAG)='ZZZZEMPTY'
                NCTEMP=9
              ENDIF
              IF(IQUOST.EQ.'ON' .AND. NCTEMP.GE.2)THEN
                IF(IMACAR(NMACAG)(NCTEMP:NCTEMP).EQ.')')THEN
                  IMACAR(NMACAG)(1:NCTEMP-3)=IMACAR(NMACAG)(2:NCTEMP-2)
                  NCTEMP=NCTEMP-2
                  IMACAR(NMACAG)(NCTEMP:NCTEMP+2)=')  '
                ELSE
                  IMACAR(NMACAG)(1:NCTEMP-2)=IMACAR(NMACAG)(2:NCTEMP-1)
                  NCTEMP=NCTEMP-2
                  IMACAR(NMACAG)(NCTEMP+1:NCTEMP+2)='  '
                ENDIF
                IF(NCTEMP.LE.0)THEN
                  IMACAR(NMACAG)='ZZZZEMPTY'
                  NCTEMP=9
                ENDIF
              ENDIF
            ENDIF
C
            IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
              WRITE(ICOUT,46381)
46381         FORMAT('EQUAL, QUOTE CASE:')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,46373)NMACAG,NCTEMP,IMACAR(NMACAG)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,46375)NMACLA,IMACLL(NMACLA),IMACNC(NMACLA),
     1                          IMACLA(NMACLA)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
          ENDIF
C
          IF(IBUGS2.EQ.'ON' .OR. ISUBRO.EQ.'MACR')THEN
            WRITE(ICOUT,6373)NMACAG,NCTEMP,IMACAR(NMACAG)
 6373       FORMAT('NMACAG,NCTEMP,IMACAR(NMACAG) = ',2I5,2X,A100)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 6370   CONTINUE
 6379   CONTINUE
        IFILQU=IFILQZ
C
C       2018/04: CHECK FOR OPENING AND CLOSING PARENTHEIS AROUND FULL
C                ARGUMENT LIST (E.G., CALL (Y=Y,X=X)).
C
C                NOTE THAT THE LEFT PARENTHESIS MAY BE PART OF THE
C                ARGUMENT LABEL (IF GIVEN) OR THE ARGUMENT VALUE
C                (IF ARGUMENTS ENTERED BY POSITION).  THE RIGHT
C                PARENTHESIS WILL ALWAYS BE PART OF THE ARGUMENT
C                VALUE.
C
C                AS A FURTHER COMPLICATION, NEED TO CHECK IF THE
C                LEFT PARENTHESIS IS FOLLOWED BY A SPACE AND LIKEWISE
C                IF THE RIGHT PARENTHESIS IS PRECEEDED BY A SPACE.
C
        IF(NMACAG.GE.1)THEN
C
C         STEP 1: CHECK IF EITHER FIRST LABEL OR FIRST ARGUMENT IS
C                 STARTS WITH A PARENTHESIS.  CHECK LABEL FIRST.
C
          IFLAG=0
          IFLAGL=0
          IF(IMACLA(1)(1:1).EQ.'(')THEN
            IFLAG=1
            IFLAGL=1
            DO16392KK=1,7
              IMACLA(1)(KK:KK)=IMACLA(1)(KK+1:KK+1)
16392       CONTINUE
            IMACLA(1)(8:8)=' '
            IMACNC(1)=IMACNC(1)-1
C
C           NOW REMOVE ANY LEADING SPACES FROM LABEL
C
            DO16394KK=1,IMACNC(1)
              IF(IMACLA(1)(KK:KK).NE.' ')THEN
                IF(KK.GT.1)THEN
                  NCTEMP=IMACNC(1) - KK + 1
                  IMACLA(1)(1:NCTEMP)=IMACLA(1)(KK:IMACNC(1))
                  IMACLA(1)(NCTEMP+1:8)=' '
                  IMACNC(1)=NCTEMP
                ENDIF
                GOTO16396
              ENDIF
16394       CONTINUE
16396       CONTINUE
          ELSEIF(IMACAR(1)(1:1).EQ.'(')THEN
            IFLAG=2
            IFLAGL=2
            DO16393KK=1,MAXFNC-1
              IMACAR(1)(KK:KK)=IMACAR(1)(KK+1:KK+1)
16393       CONTINUE
            IMACAR(1)(MAXFNC:MAXFNC)=' '
          ENDIF
C
          IF(IBUGS2.EQ.'ON' .OR. ISUBRO.EQ.'MACR')THEN
            WRITE(ICOUT,46661)IFLAG
46661       FORMAT('IFLAG = ',I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
C         STEP 2: CHECK IF LAST ARGUMENT VALUE ENDS WITH RIGHT
C                 PARENTHESIS
C
C                 2021/03/15: ONLY DO THIS IF THERE WAS A BEGINNING
C                             LEFT PARETHESIS
C
          IF(IFLAGL.GT.0)THEN
            DO16391JJ=MAXFNC,1,-1
              IF(IMACAR(NMACAG)(JJ:JJ).EQ.')')THEN
                IMACAR(NMACAG)(JJ:JJ)=' '
              ENDIF
16391       CONTINUE
          ENDIF
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
            WRITE(ICOUT,46391)
46391       FORMAT('AFTER REMOVE LEADING/TRAILING PARENTHESIS')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,46392)NMACLA,IMACLL(1),IMACNC(1),
     1                        IMACLA(1)
46392       FORMAT('NMACLA,IMACLL(1),IMACNC(1),IMACLA(1) = ',
     1             3I8,2X,A8)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,46375)NMACLA,IMACLL(NMACLA),
     1                        IMACNC(NMACCL),IMACLA(NMACLA)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ENDIF
C
 6399 CONTINUE
C
C     2021/03: CHECK FOR "ZZZZEMPTY" ON ANY ARGUMENTS AND
C              RESET THIS TO AN EMPTY ARGUMENT
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
        WRITE(ICOUT,49391)
49391   FORMAT('CHECK FOR ZZZZEMPTY')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NMACAG.GE.1)THEN
        DO66381II=1,NMACAG
C
          IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
            WRITE(ICOUT,6639)II,NCTEMP,IMACNC(II)
 6639       FORMAT('II,NCTEMP,IMACNC(II) = ',3I6)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(IMACAR(II)(1:9).EQ.'ZZZZEMPTY')THEN
            IMACAR(II)=' '
          ENDIF
66381   CONTINUE
      ENDIF
C
      IF(IBUGS2.EQ.'ON' .OR. ISUBRO.EQ.'MACR')THEN
        WRITE(ICOUT,6375)NMACLA,NMACAG
 6375   FORMAT('NMACLA,NMACAG = ',2I5)
        CALL DPWRST('XXX','BUG ')
        IF(NMACLA.GE.1)THEN
          DO6376JJ=1,NMACLA
            WRITE(ICOUT,6377)JJ,IMACLL(JJ),IMACNC(JJ),IMACLA(JJ)
 6377       FORMAT('JJ,IMACLL(JJ),IMACNC(JJ),IMACLA(JJ) = ',3I5,2X,A8)
            CALL DPWRST('XXX','BUG ')
 6376     CONTINUE
        ENDIF
C
        IF(NMACAG.GE.1)THEN
          DO26386JJ=1,NMACAG
            WRITE(ICOUT,26387)JJ,IMACAR(JJ)
26387       FORMAT('JJ,IMACAR(JJ) = ',I5,2X,A100)
            CALL DPWRST('XXX','BUG ')
26386     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************************
C               **  STEP 64--                                         **
C               **  THE CODE BELOW OPENS THE FILE OR SUBFILE. THE     **
C               **  CODE ALSO EQUIVALENCES THE FILES OR SUBFILES TO   **
C               **  THE FORTRAN LOGICAL UNIT NUMBER DESIGNATED        **
C               **  IN THE VARIABLE IMACNU (IN THE MAIN PROGRAM);     **
C               **  THE RECOMMENDED VALUE FOR IMACNU IS 34; IF THIS   **
C               **  IS INAPPROPRIATE, MAKE CHANGES IN INITHK AND DPSYOP.
C               **  THE CODE ALSO REWINDS THE FILE OR SUBFILE.        **
C               ********************************************************
C
      ISTEPN='64'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC IMACRO='EXEC'
CCCCC IOUNIT=IMACN2
      IOUNIT=IMACNU
C
      IREWIN='ON'
CCCCC MAY,1990.  SET ISTAT TO "OLD" FOR CALL CASE.  DO THIS SO WILL
CCCCC SEARCH THE SYSTEM DIRECTORY IF NOT FOUND AS REQUESTED. (ALAN)
      ISTAT='OLD'
      CALL DPOPFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
      IF(IERRFI.EQ.'YES')THEN
        IERROR='YES'
        GOTO9000
      ENDIF
      IMACRO='EXEC'
      IMACCS=ICURST
C
C     2014/02: SAVE NAME OF MACRO.
C
CCCCC ICRENA=IFILE
      IMANAM(IMALEV)=' '
      IMANAM(IMALEV)=IFILE
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,6411)
 6411    FORMAT('A MACRO FILE HAS JUST BEEN OPENED FOR EXECUTION')
         CALL DPWRST('XXX','BUG ')
      ENDIF
C
CCCCC THE FOLLOWING SECTION WAS ADDED    AUGUST 1994
C               **************************************************
C               **  STEP 65--                                   **
C               **  IF THE CALL COMMAND IS EXECUTING ONLY A     **
C               **  (NECESSARILY CONTIGUOUS) PART OF A FILE,    **
C               **  THEN SKIP OVER ANY NON-EXECUTING FRONT LINES**
C               **  OF THE FILE (THAT IS, READ THE FILE         **
C               **  FROM LINE 1 TO LINE (IMACL1-1)).            **
C               **************************************************
C
      ISTEPN='65'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IMACLR=0
      IF(IMACL1.GE.2)THEN
         IMAX=IMACL1-1
         DO6500I=1,IMAX
CCCCC       CALL DPREFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
CCCCC1      IA,NUMCHA,
CCCCC1      ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
CCCCC       IF(IERROR.EQ.'YES')GOTO9000
CCCCC THE FOLLOWING IS ALSO A PATCH   FOR   CALL <FILE> FOR ETC.
            IMACLR=IMACLR+1
            READ(IOUNIT,6511)ICJUNK
 6511       FORMAT(A1)
 6500    CONTINUE
      ENDIF
      GOTO9000
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
C
      ICOMCL=ICOMC2
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MACR')THEN
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9011)
 9011    FORMAT('***** AT THE END       OF DPMACR--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9012)IMACRO,IMACNU,IMACCS,IMACL1,IMACL2
 9012    FORMAT('IMACRO,IMACNU,IMACCS,IMACL1,IMACL2 = ',
     1   A4,I8,2X,A12,I8,I8)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9013)IBUGS2,IFOUND,IERROR,IOUNIT,NUMCHA
 9013    FORMAT('IBUGS2,IFOUND,IERROR,IOUNIT,NUMCHA = ',3(A4,2X),2I8)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9015)ICOM,ICOM2,IOFILE,IWIDTH,NUMARG,NMACAG
 9015    FORMAT('ICOM,ICOM2,IOFILE,IWIDTH,NUMARG,NMACAG = ',
     1          3(A4,2X),3I8)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9017)(IANSLC(I),I=1,MIN(120,IWIDTH))
 9017    FORMAT('IANSLC(.) = ',120A1)
         CALL DPWRST('XXX','BUG ')
C
         IF(NUMARG.GE.1)THEN
            DO9019I=1,NUMARG
               WRITE(ICOUT,9020)I,IHARG(I),IHARG2(I)
 9020          FORMAT('I,IHARG(I),IHARG2(I) = ',I8,2(2X,A4))
               CALL DPWRST('XXX','BUG ')
 9019       CONTINUE
         ENDIF
C
         WRITE(ICOUT,9031)JP3,JP4,JP5,KMIN,KDEL,KMAX
 9031    FORMAT('JP2,JP3,JP4,KMIN,KDEL,KMAX = ',6I8)
         CALL DPWRST('XXX','BUG ')
C
         WRITE(ICOUT,9032)NUMNAM
 9032    FORMAT('NUMNAM = ',I8)
         CALL DPWRST('XXX','BUG ')
         IF(NUMNAM.GE.1)THEN
            DO9035I=1,NUMNAM
               WRITE(ICOUT,9036)I,IHNAME(I),IHNAM2(I),IUSE(I),
     1         IVALUE(I),VALUE(I)
 9036          FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),',
     1         'IVALUE(I),VALUE(I) = ',I8,2X,A4,2X,A4,2X,A4,I8,E15.7)
               CALL DPWRST('XXX','BUG ')
 9035       CONTINUE
         ENDIF
C
         WRITE(ICOUT,9043)(IA(I),I=1,MIN(120,NUMCHA))
 9043    FORMAT('(IA(I),I=1,IMAX) = ',120A1)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9052)IFILE
 9052    FORMAT('IFILE  = ',A80)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9053)ISTAT,IFORM,IACCES,IPROT,ICURST
 9053    FORMAT('ISTAT,IFORM,IACCES,IPROT  = ',4(A12,2X),A12)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9058)IENDFI,IREWIN,IERRFI,ISUBN0
 9058    FORMAT('IENDFI,IREWIN,IERRFI,ISUBN0 = ',3(A4,2X),A12)
         CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAHA(MAXNXT,ICASAN,ICAPSW,IFORSW,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--COMPUTE MANTEL-HAENSZEL TEST.
C     EXAMPLE--MANTEL-HAENSZEL TEST Y1 Y2
C            --MANTEL-HAENSZEL TEST Y1 Y2 GROUPID
C            --MANTEL-HAENSZEL TEST Y1 GROUPID1 Y2 GROUPID2
C     REFERENCE--FLEISS, LEVIN, AND PAIK (2003), "STATISTICAL
C                METHODS FOR RATES AND PROPORTIONS", THIRD
C                EDITION, WILEY, PP. 250-253.
C              --CONOVER (1999), "PRACTICAL NONPARAMETRIC
C                STATISTICS", THIRD EDITION, WILEY, PP. 192-195.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/5
C     ORIGINAL VERSION--MAY       2007.
C     UPDATED         --JANUARY   2011. USE DPPARS, DPPAR3
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
C
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASEQ
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IHOST1
      CHARACTER*4 ISUBN0
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
C
      PARAMETER (MAXSPN=20)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      REAL TEMP1(MAXOBV)
      REAL TEMP2(MAXOBV)
      REAL TEMP3(MAXOBV)
      REAL TEMP4(MAXOBV)
      REAL TEMP5(MAXOBV)
      REAL XIDTEM(MAXOBV)
      REAL XIDTE2(MAXOBV)
      REAL Y1(MAXOBV)
      REAL Y2(MAXOBV)
      REAL XGROU1(MAXOBV)
      REAL XGROU2(MAXOBV)
C
      EQUIVALENCE (GARBAG(IGARB1),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB2),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB3),TEMP3(1))
      EQUIVALENCE (GARBAG(IGARB4),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB5),XIDTE2(1))
      EQUIVALENCE (GARBAG(IGARB6),Y1(1))
      EQUIVALENCE (GARBAG(IGARB7),Y2(1))
      EQUIVALENCE (GARBAG(IGARB8),XGROU1(1))
      EQUIVALENCE (GARBAG(IGARB9),XGROU2(1))
      EQUIVALENCE (GARBAG(IGAR10),TEMP4(1))
      EQUIVALENCE (GARBAG(JGAR11),TEMP5(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMA'
      ISUBN2='HA  '
      IFOUND='YES'
      IERROR='NO'
      ICASE='RAW '
      ICASEQ='UNKN'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      MINN2=2
C
C
C               *********************************************
C               **  TREAT THE MANTEL-HAENSZEL TEST CASE    **
C               *********************************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MAHA')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAHA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,56)MAXNXT,NUMARG
   56   FORMAT('MAXNXT,NUMARG = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO59I=1,NUMARG
          WRITE(ICOUT,57)I,IHARG(I),IHARG2(I),ARG(I)
   57     FORMAT('I,IHARG(I),IHARG2(I),ARG(I) = ',I5,A4,A4,G15.7)
   59   CONTINUE
      ENDIF
C
C               *********************************
C               **  STEP 4--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='4'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MAHA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='MANTEL-HAENSZEL TEST'
      MINNA=2
      MAXNA=100
      MINN2=2
      IFLAGE=19
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=2
      MAXNVA=4
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MAHA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),PVAR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),PVAR(I) = ',I8,2X,A4,A4,2X,3I8,G15.7)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C     NOTE: THE NUMBER OF VARIABLES DETERMINES HOW THE
C           ARGUMENTS ARE DETERMINED:
C
C           NUMVAR = 2: BOTH VARIABLES ARE RESPONSE VARIABLES
C                       (Y1 AND Y2)
C           NUMVAR = 3: VARIABLES 1 AND 2 ARE THE RESPONSE
C                       VARIABLES (Y1 AND Y2) AND VARIABLE 3
C                       IS THE GROUP ID VARIABLE (XGROU1).
C           NUMVAR = 4: VARIABLE 1 = FIRST RESPONSE VARIABLE
C                       VARIABLE 2 = FIRST GROUP ID VARIABLE
C                       VARIABLE 3 = SECOND RESPONSE VARIABLE
C                       VARIABLE 2 = SECOND GROUP ID VARIABLE
C
      IF(NUMVAR.EQ.2)THEN
        ICASE='VARI'
        ICOL=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1,Y2,TEMP1,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NS1=NLOCAL
        NS2=0
      ELSEIF(NUMVAR.EQ.3)THEN
        ICASE='VARI'
        ICOL=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1,Y2,XGROU1,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NS1=NLOCAL
        NS2=0
      ELSEIF(NUMVAR.EQ.4)THEN
        ICOL=1
        CALL DPPAR7(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1,XGROU1,Y2,XGROU2,NLOCAL,NLOCA2,NLOCA3,NLOCA4,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NS1=NLOCAL
        NS2=NLOCA3
      ENDIF
C
C               *****************************************
C               **  STEP 61--                         **
C               **  COMPUTE THE MANTEL-HAENSZEL TEST  **
C               ****************************************
C
      ISTEPN='61'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MAHA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MAHA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6111)
 6111   FORMAT('***** FROM DPMAHA--READY TO COMPUTE TEST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6112)NS1
 6112   FORMAT('NS1 = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        DO6120I=1,MIN(100,NS1)
          WRITE(ICOUT,6122)I,Y1(I),Y2(I),XGROU1(I),XGROU2(I)
 6122     FORMAT('I,Y1(I),Y2(I),XGROU1(I),XGROU2(I) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
 6120   CONTINUE
      ENDIF
C
      CALL DPMAH2(Y1,XGROU1,NS1,Y2,XGROU2,NS2,NUMVAR,
     1            XIDTEM,XIDTE2,
     1            TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,
     1            ICASE,ICASAN,
     1            ICAPSW,ICAPTY,IFORSW,
     1            STATVA,CDF,
     1            ISUBRO,IBUGA3,IERROR)
C
C               ***************************************
C               **  STEP 62--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='62'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MAHA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISUBN0='MAHA'
C
      IH='STAT'
      IH2='VAL '
      VALUE0=STATVA
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='STAT'
      IH2='CDF '
      VALUE0=CDF
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MAHA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMAHA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA2,IBUGA3
 9012   FORMAT('IBUGA2,IBUGA3 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IERROR
 9016   FORMAT('IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAH2(Y1,X1,N1,Y2,X2,N2,NUMVAR,
     1                  XIDTEM,XIDTE2,
     1                  TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,
     1                  ICASE,ICASAN,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  STATVA,CDF,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--PERFORM AN MANTEL-HAENSZEL TEST
C              THE INPUT CAN EITHER BE RAW DATA OR SUMMARY DATA:
C
C                  1) RAW DATA - EQUAL SAMPLE SIZES
C
C                     IN THIS CASE, THERE ARE THREE VARIABLES.
C                     THE FIRST TWO OF THESE VARIABLES SHOULD CONTAIN
C                     1'S (FOR SUCCESS) OR 0'S (FAILURES).  THE THIRD
C                     VARIABLE IS A GROUP-ID VARIABLE.
C
C                     IN THIS CASE, THE FIRST TASK IS TO
C                     CROSS TABULATE THE FIRST TWO VARIABLES
C                     INTO THE K TABLES.
C
C                     THIS CASE CAN HANDLE UNEQUAL SAMPLE SIZES
C                     BY SPECIFYING MISSING VALUES (USING THE
C                     SET STATISTIC MISSING VALUE COMMAND TO
C                     SPECIFY WHAT VALUE IS INTERPRETED AS THE
C                     MISSING VALUE).
C
C                  2) RAW DATA - UNEQUAL SAMPLE SIZES
C
C                     IN THIS CASE, THERE ARE FOUR VARIABLES.
C
C                     VARIABLE 1 = RESPONSE VARIABLE FOR SAMPLE 1
C                                  (SHOULD CONTAIN 1's TO DENOTE
C                                  SUCCESS AND 0's TO DENOTE
C                                  FAILURE).
C                     VARIABLE 2 = GROUP ID VARIABLE FOR SAMPLE 1.
C                     VARIABLE 3 = RESPONSE VARIABLE FOR SAMPLE 2
C                                  (SHOULD CONTAIN 1's TO DENOTE
C                                  SUCCESS AND 0's TO DENOTE
C                                  FAILURE).
C                     VARIABLE 4 = GROUP ID VARIABLE FOR SAMPLE 2.
C
C                     IN THIS CASE, THE FIRST TASK IS TO
C                     CROSS TABULATE THE FIRST TWO VARIABLES
C                     INTO THE K TABLES.
C
C                  3) SUMMARY DATA
C
C                     IN THIS CASE, THERE ARE TWO VARIABLES.
C                     THE VARIABLES CONTAIN A SERIES 2X2 TABLES.
C                     THAT IS, ROWS 1 AND 2 DEFINE TABLE 1,
C                     ROWS 3 AND 4 DEFINE TABLE 2, AND SO ON.
C
C              ULTIMATELY, WE SHOULD END UP WITH K TABLES WHERE
C              THE ITH TABLE LOOKS LIKE:
C
C                  X(I)         R(I)-X(I)             | R(I)
C                  C(I)-X(i)    N(I)-R(I)-C(I)+X(I)   | N(I)-R(I)
C                  ==============================================
C                  C(I)         N(I)-C(I)             | N(I)
C
C              THIS ROUTINE IMPLEMENTS THE MANTEL-HAENSZEL TEST
C              DOCUMENTED IN SECTION 5 CHAPTER 10 OF THE
C              FLEIS, LEVIN, AND PAIK BOOK CITED BELOW.  SEE THIS
C              REFERENCE FOR THE DETAILS OF THE METHOD.
C
C     EXAMPLE--MANTEL-HAENSZEL TEST Y1 Y2
C            --MANTEL-HAENSZEL TEST Y1 Y2 GROUPID
C            --MANTEL-HAENSZEL TEST Y1 GROUPID1 Y2 GROUPID2
C     REFERENCE--FLEISS, LEVIN, AND PAIK (2003), "STATISTICAL
C                METHODS FOR RATES AND PROPORTIONS", THIRD
C                EDITION, WILEY, PP. 250-253.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGYU LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/5
C     ORIGINAL VERSION--MAY       2007.
C     UPDATED         --FEBRUARY  2011. USE DPAUFI TO OPEN/CLOSE
C                                       AUXILLARY FILES
C     UPDATED         --FEBRUARY  2011. USE DPDTA1, DPDT5B TO PRINT
C                                       TABLES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
      CHARACTER*4 ICASE
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
C
      CHARACTER*6 ICONC1
      CHARACTER*6 ICONC2
      CHARACTER*6 ICONC3
      CHARACTER*6 ICONC4
      CHARACTER*6 ICONC5
      CHARACTER*6 ICONC6
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IOP
C
C---------------------------------------------------------------------
C
      DOUBLE PRECISION DSUM1
      DOUBLE PRECISION DSUM2
      DOUBLE PRECISION DSUM3
      DOUBLE PRECISION DSUM4
      DOUBLE PRECISION DSUM5
      DOUBLE PRECISION DSUM6
      DOUBLE PRECISION DSUM7
      DOUBLE PRECISION DSUM8
      DOUBLE PRECISION DSUM9
      DOUBLE PRECISION DTERM1
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION X1(*)
      DIMENSION X2(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION TEMP4(*)
      DIMENSION TEMP5(*)
      DIMENSION XIDTEM(*)
      DIMENSION XIDTE2(*)
C
      PARAMETER (NUMALP=6)
      DIMENSION SIGVAL(NUMALP)
      DIMENSION ALOWCL(NUMALP)
      DIMENSION AUPPCL(NUMALP)
      DIMENSION ALOWC2(NUMALP)
      DIMENSION AUPPC2(NUMALP)
C
      PARAMETER(NUMCLI=5)
      PARAMETER(MAXLIN=4)
      PARAMETER (MAXROW=NUMALP)
      PARAMETER (MAXRO2=30)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXRO2)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXRO2)
      INTEGER      NCTEXT(MAXRO2)
      INTEGER      IDIGIT(MAXRO2)
      INTEGER      IDIGI2(MAXRO2,NUMCLI)
      INTEGER      NTOT(MAXRO2)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXRO2,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXRO2,NUMCLI)
      INTEGER      NCOLSP(MAXLIN,NUMCLI)
      INTEGER      ROWSEP(MAXRO2)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXRO2,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
      DATA SIGVAL /0.50, 0.80, 0.90, 0.95, 0.975, 0.99/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMA'
      ISUBN2='H2  '
      IERROR='NO'
      IWRITE='NO'
C
      ICONC1='ACCEPT'
      ICONC2='ACCEPT'
      ICONC3='ACCEPT'
      ICONC4='ACCEPT'
      ICONC5='ACCEPT'
      ICONC6='ACCEPT'
C
      NSUMM=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAH2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMAH2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASE
   52   FORMAT('IBUGA3,ISUBRO,ICASE = ',2(A4,2X),A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,55)N1,N2,NUMVAR,PSTAMV
   55   FORMAT('N1,N2,NUMVAR = ',3I8,G15.7)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N1
          WRITE(ICOUT,57)I,Y1(I),Y2(I),X1(I),X2(I)
   57     FORMAT('I,Y1(I),Y2(I),X1(I),X2(I) = ',I8,4G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 0--                              **
C               **  IF ONLY TWO VARIABLES GIVEN, CREATE   **
C               **  THE GROUP-ID VARIABLE.  FOR THREE     **
C               **  VARIABLES, CHECK WHETHER WE HAVE RAW  **
C               **  DATA OR SUMMARY DATA.                 **
C               ********************************************
C
      ISTEPN='0'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAH2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMVAR.EQ.2)THEN
        ICASE='SUMM'
        NGROUP=0
        DO100I=1,N1
          ITEMP=MOD(I,2)
          IF(ITEMP.EQ.1)THEN
            NGROUP=NGROUP+1
          ENDIF
          X1(I)=REAL(NGROUP)
          X2(I)=REAL(NGROUP)
  100   CONTINUE
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAH2')THEN
          WRITE(ICOUT,151)NGROUP
  151     FORMAT('TWO-VARIABLE CASE: NGROUPS = ',I8)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ELSEIF(NUMVAR.EQ.3)THEN
        ICASE='SUMM'
        CALL DISTIN(X1,N1,IWRITE,XIDTEM,NGROUP,IBUGA3,IERROR)
        CALL SORT(XIDTEM,NGROUP,XIDTEM)
        DO200K=1,NGROUP
          HOLD=XIDTEM(K)
          L=0
          DO210I=1,N1
            IF(X1(I).EQ.HOLD)THEN
              L=L+1
            ENDIF
  210     CONTINUE
          IF(L.NE.2)THEN
            ICASE='RAW'
            GOTO299
          ENDIF
  200   CONTINUE
C
      ELSEIF(NUMVAR.EQ.4)THEN
        ICASE='SUMM'
        CALL DISTIN(X1,N1,IWRITE,XIDTEM,NGROU1,IBUGA3,IERROR)
        CALL SORT(XIDTEM,NGROU2,XIDTEM)
        CALL DISTIN(X2,N2,IWRITE,XIDTE2,NGROU2,IBUGA3,IERROR)
        CALL SORT(XIDTE2,NGROU2,XIDTE2)
C
        IF(NGROU1.NE.NGROU2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1101)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,231)
  231     FORMAT('     THE NUMBER OF GROUPS IS DIFFERENT FOR ',
     1           'SAMPLE ONE AND SAMPLE TWO.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,233)NGROU1
  233     FORMAT('     SAMPLE ONE HAS ',I8,' GROUPS.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,235)NGROU2
  235     FORMAT('     SAMPLE TWO HAS ',I8,' GROUPS.')
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        EPS=0.01
        DO240K=1,NGROU1
          DIFF=ABS(XIDTEM(K) - XIDTE2(K))
          IF(DIFF.GT.EPS)THEN
             WRITE(ICOUT,999)
             CALL DPWRST('XXX','WRIT')
             WRITE(ICOUT,1101)
             CALL DPWRST('XXX','WRIT')
             WRITE(ICOUT,241)
  241        FORMAT('     THE GROUP IDs DIFFER FOR THE TWO ',
     1              'SAMPLES.')
             CALL DPWRST('XXX','WRIT')
             IERROR='YES'
             GOTO9000
          ENDIF
  240   CONTINUE
C
C       CHECK BOTH GROUP-ID VARIABLES.  CURRENTLY, BOTH SAMPLES
C       SHOULD BE THE SAME (I.E., EITHER BOTH SUMMARY DATA OR
C       BOTH RAW DATA, BUT NOT ONE RAW AND THE OTHER SUMMARY).
C
        DO250K=1,NGROU1
          HOLD=XIDTEM(K)
          L=0
          DO260I=1,N1
            IF(X1(I).EQ.HOLD)THEN
              L=L+1
            ENDIF
  260     CONTINUE
          IF(L.NE.2)THEN
            ICASE='RAW'
            GOTO299
          ENDIF
  250   CONTINUE
C
        DO270K=1,NGROU2
          HOLD=XIDTE2(K)
          L=0
          DO280I=1,N1
            IF(X2(I).EQ.HOLD)THEN
              L=L+1
            ENDIF
  280     CONTINUE
          IF(L.NE.2)THEN
            ICASE='RAW'
            GOTO299
          ENDIF
  270   CONTINUE
C
      ENDIF
C
  299 CONTINUE
C
C               ********************************************
C               **  STEP 1--                              **
C               **  FOR RAW DATA CASE, CROSS TABULATE     **
C               **  THE DATA.  PUT SUMMARY DATA IN TEMP1  **
C               **  AND TEMP2.                            **
C               ********************************************
C
C
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAH2')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,251)ICASAN,ICASE
  251   FORMAT('THREE-VARIABLE CASE: ICASAN, ICASE = ',A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      IF(N1.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1101)
 1101   FORMAT('***** ERROR IN MANTEL-HAENSZEL TEST--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1103)
 1103   FORMAT('      THE NUMBER OF OBSERVATIONS  IS < 2.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1105)N1
 1105   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(ICASE.EQ.'SUMM')THEN
        DO300I=1,N1
          TEMP1(I)=Y1(I)
          TEMP2(I)=Y2(I)
  300   CONTINUE
        NSUMM=N1
        NGROUP=N1/2
C
C       CASE WHERE SAMPLES HAVE EQUAL SIZES FOR EACH GROUP
C
      ELSEIF(NUMVAR.EQ.3)THEN 
C
        EPS=0.01
        ICNT2=0
        DO400K=1,NGROUP
          HOLD=XIDTEM(K)
          ICNT=0
          DO410I=1,N1
            DIFF=ABS(HOLD-X1(I))
            IF(DIFF.LE.EPS)THEN
              ICNT=ICNT+1
              TEMP3(ICNT)=Y1(I)
              TEMP4(ICNT)=Y2(I)
            ENDIF
  410     CONTINUE
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAH2')THEN
            WRITE(ICOUT,401)K,ICNT,HOLD
  401       FORMAT('K,ICNT,HOLD = ',2I8,G15.7)
            CALL DPWRST('XXX','WRIT')
          ENDIF
C
          CALL ODDDIS(TEMP3,ICNT,PSTAMV,IWRITE,TEMP5,N11,N21,NOUT,
     1                IBUGA3,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
          CALL ODDDIS(TEMP4,ICNT,PSTAMV,IWRITE,TEMP5,N12,N22,NOUT,
     1                IBUGA3,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAH2')THEN
            WRITE(ICOUT,411)N11,N21,N12,N22
  411       FORMAT('N11,N21,N12,N22 = ',4I8)
            CALL DPWRST('XXX','WRIT')
          ENDIF
C
          ICNT2=ICNT2+1
          TEMP1(ICNT2)=REAL(N11)
          TEMP2(ICNT2)=REAL(N12)
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAH2')THEN
            WRITE(ICOUT,413)ICNT2,TEMP1(ICNT2),TEMP2(ICNT2)
  413       FORMAT('ICNT2,TEMP1(ICNT2),TEMP2(ICNT2) = ',I8,2G15.7)
            CALL DPWRST('XXX','WRIT')
          ENDIF
C
          ICNT2=ICNT2+1
          TEMP1(ICNT2)=REAL(N21)
          TEMP2(ICNT2)=REAL(N22)
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAH2')THEN
            WRITE(ICOUT,413)ICNT2,TEMP1(ICNT2),TEMP2(ICNT2)
            CALL DPWRST('XXX','WRIT')
          ENDIF
C
  400   CONTINUE
        NSUMM=ICNT2
C
      ELSEIF(NUMVAR.EQ.4)THEN 
C
        EPS=0.01
        ICNT2=0
        DO500K=1,NGROU1
          HOLD=XIDTEM(K)
          ICNT=0
          DO510I=1,N1
            DIFF=ABS(HOLD-X1(I))
            IF(DIFF.LE.EPS)THEN
              ICNT=ICNT+1
              TEMP3(ICNT)=Y1(I)
            ENDIF
  510     CONTINUE
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAH2')THEN
            WRITE(ICOUT,501)K,ICNT,HOLD
  501       FORMAT('K,ICNT,HOLD = ',2I8,G15.7)
            CALL DPWRST('XXX','WRIT')
          ENDIF
C
          CALL ODDDIS(TEMP3,ICNT,PSTAMV,IWRITE,TEMP5,N11,N21,NOUT,
     1                IBUGA3,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
          ICNT2=ICNT2+1
          TEMP1(ICNT2)=REAL(N11)
          ICNT2=ICNT2+1
          TEMP1(ICNT2)=REAL(N21)
  500   CONTINUE
C
        ICNT2=0
        DO550K=1,NGROU2
          HOLD=XIDTE2(K)
          ICNT=0
          DO560I=1,N2
            DIFF=ABS(HOLD-X2(I))
            IF(DIFF.LE.EPS)THEN
              ICNT=ICNT+1
              TEMP4(ICNT)=Y2(I)
            ENDIF
  560     CONTINUE
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAH2')THEN
            WRITE(ICOUT,561)K,ICNT,HOLD
  561       FORMAT('K,ICNT,HOLD = ',2I8,G15.7)
            CALL DPWRST('XXX','WRIT')
          ENDIF
C
          CALL ODDDIS(TEMP4,ICNT,PSTAMV,IWRITE,TEMP5,N12,N22,NOUT,
     1                IBUGA3,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
          ICNT2=ICNT2+1
          TEMP2(ICNT2)=REAL(N12)
          ICNT2=ICNT2+1
          TEMP2(ICNT2)=REAL(N22)
  550   CONTINUE
C
        NSUMM=ICNT2
        NGROUP=NGROU1
C
      ENDIF
C
C               ********************************************
C               **  STEP 14--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               **  ALL TABLE ENTRIES SHOULD BE           **
C               **  NON-NEGATIVE INTEGERS.  NEGATIVE      **
C               **  VALUES WILL BE FLAGGED AS ERRORS      **
C               **  WHILE NON-INTEGER VALUES WILL BE      **
C               **  ROUNDED TO NEAREST INTEGER.           **
C               ********************************************
C
      ISTEPN='14'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAH2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IERROR='NO'
C
      NTEMP=MOD(NSUMM,2)
      IF(NTEMP.EQ.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1411)
 1411   FORMAT('      FOR THE SUMMARY DATA, THE NUMBER OF ROWS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1413)
 1413   FORMAT('      SHOULD BE EVEN;  SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1415)NSUMM
 1415   FORMAT('      THE NUMBER OF ROWS = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      DO1420I=1,NSUMM
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAH2')THEN
          WRITE(ICOUT,1401)I,TEMP1(I),TEMP2(I)
 1401     FORMAT('I,TEMP1(I),TEMP2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
        ITEMP=INT(TEMP1(I)+0.5)
        IF(ITEMP.LT.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1101)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1421)
 1421     FORMAT('      FOR THE SUMMARY DATA, THE DATA VALUES ',
     1          'DENOTE COUNTS.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1423)I
 1423     FORMAT('      A NEGATIVE COUNT WAS ENCOUNTERED FOR ',
     1           'RESPONSE VARIABLE ONE FOR ROW ',I8)
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ENDIF
        TEMP1(I)=REAL(ITEMP)
C
        ITEMP=INT(TEMP2(I)+0.5)
        IF(ITEMP.LT.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1101)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1431)
 1431     FORMAT('      FOR THE SUMMARY DATA CASE, THE DATA VALUES ',
     1          'DENOTE COUNTS.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1433)I
 1433     FORMAT('      A NEGATIVE COUNT WAS ENCOUNTERED FOR ',
     1           'RESPONSE VARIABLE TWO FOR ROW ',I8)
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ENDIF
        TEMP2(I)=REAL(ITEMP)
 1420 CONTINUE
C
C               ********************************************
C               **  STEP 20--                             **
C               **  GENERATE THE LOG ODDS RATIO TABLE     **
C               **  AND COMPUTE THE CHI-SQUARE ANALYSIS   **
C               **  OF THE LOG ODDS RATIO.                **
C               ********************************************
C
      ISTEPN='20'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAH2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     FLEISS AND HIS CO-AUTHORS DEFINE THE TABLE:
C
C                 |  SAMPLE 1     SAMPLE 2      |
C        =====================================================
C        PRESENT  |  X(i)         m(i) - X(i)   | m(i)
C        ABSENT   |  N(i1)-X(i)   X(i) - l(i)   | N(i.) - m(i)
C        =================================================
C                 |  N(i1)        N(i2)         | N(i.)
C
C     IN OUR CODING:
C
C         N11 = X(i)
C         N21 = N(i1)
C         N12 = m(i) - X(i)
C         N22 = X(i) - L(i)
C
C     FLEISS THEN DENOTES
C
C         R(i) = X(i)*(X(i) - l(i))/N(i.) 
C              = N11*N22/NTOT
C         S(i) = (m(i) - X(i))*(N(i1) - X(i))/N(i.)
C              = N12*N21/NTOT
C         P(i) = (X(i) + X(i) - l(i))/N(i.)
C              = (N11 + N22)/NTOT
C         Q(i) = (m(i) - X(i) + N(i1) - X(i))/N(i.)
C              = 1 - P(i)
C              = (N12 +  N21)/NTOT
C      
C     R, S, P, AND Q ARE THE SUMS OVER ALL GROUPS FOR EACH
C     OF THESE.
C
C     THEN THE MANTEL-HAENSZEL ESTIMATE IS:
C
C        COMMON ODDS RATIO = OMEGAHAT(MH)
C                          = R/S
C
C     AND THE VARIANCE OF THE LOG OF THE COMMON ODDS RATIO IS
C
C         VAR(LN(OMEGAHAT(MH))) = 0.5*{SUM[P(i)*R(i)]/R**2 +
C                                 SUM[P(i)*S(i) + Q(i)*R(i)]/R*S +
C                                 SUM[Q(i)*S(i)]/S**2}
C
C         WHERE ALL SUMMATIONS ARE OVER THE GROUPS.
C
C     THE MANTEL-HAENSZEL CHI-SQUARE TEST STATISTIC IS THEN
C
C         {|SUM[i=1 to NGROUP][(N(i1)*N(i2)/N(i.))*
C                              (P(i1)-P(i2)| - 0.5}**2/
C         SUM[i=1 to NGROUP][N(i1)*N(i2)*pbar(i)*qbar(i)/(N(i.)]
C
C     WHERE
C
C         P(i1) = N11/Ni1
C         P(i2) = N12/Ni2
C
C         pbar(i) = (N(i1)*P(i1) + N(i2)*P(i2))/NTOT
C         qbar(i) = 1 - pbar(i)
C
      IOP='OPEN'
      IFLAG1=1
      IFLAG2=1
      IFLAG3=0
      IFLAG4=0
      IFLAG5=0
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      NTEMP=2
      MAXGRP=10000
      DSUM1=0.0D0
      DSUM2=0.0D0
      DSUM3=0.0D0
      DSUM4=0.0D0
      DSUM5=0.0D0
      DSUM6=0.0D0
      DSUM7=0.0D0
      DSUM8=0.0D0
      DSUM9=0.0D0
C
      DO2010K=1,NGROUP
        ISTRT=(K-1)*2+1
C
        AN11=TEMP1(ISTRT)
        AN21=TEMP1(ISTRT+1)
        AN12=TEMP2(ISTRT)
        AN22=TEMP2(ISTRT+1)
        ANTOT=AN11 + AN21 + AN12 + AN22
        RI=AN11*AN22/ANTOT
        SI=AN12*AN21/ANTOT
        PI=(AN11 + AN22)/ANTOT
        QI=1.0 - PI
        AN1=AN11+AN21
        AN2=AN12+AN22
        PI1=AN11/AN1
        PI2=AN12/AN2
        PIBAR=(AN1*PI1 + AN2*PI2)/ANTOT
C
        DSUM1=DSUM1 + DBLE(RI)
        DSUM2=DSUM2 + DBLE(SI)
        DSUM3=DSUM3 + DBLE(PI)
        DSUM4=DSUM4 + DBLE(QI)
        DSUM5=DSUM5 + DBLE(PI*RI)
        DSUM6=DSUM6 + DBLE(PI*SI + QI*RI)
        DSUM7=DSUM7 + DBLE(QI*SI)
        DSUM8=DSUM8 + DBLE(PI1-PI2)*DBLE(AN1)*DBLE(AN2)/DBLE(ANTOT)
        DSUM9=DSUM9 + DBLE(PIBAR)*(1.0D0-DBLE(PIBAR))*DBLE(AN1)*
     1                DBLE(AN2)/(DBLE(ANTOT)-1.0D0)
C
        CALL ODDRAT(TEMP1(ISTRT),NTEMP,TEMP2(ISTRT),NTEMP,PSTAMV,
     1              IWRITE,TEMP5,STAT,
     1              IBUGA3,IERROR)
        TEMP3(K)=STAT
        CALL LOGIT(TEMP1(ISTRT),NTEMP,TEMP2(ISTRT),NTEMP,PSTAMV,
     1              IWRITE,TEMP5,STAT,
     1              IBUGA3,IERROR)
        TEMP3(MAXGRP+K)=STAT
        CALL LOGISE(TEMP1(ISTRT),NTEMP,TEMP2(ISTRT),NTEMP,PSTAMV,
     1              IWRITE,TEMP5,STAT,
     1              IBUGA3,IERROR)
        TEMP3(2*MAXGRP+K)=STAT
        TEMP3(3*MAXGRP+K)=RI
        TEMP3(4*MAXGRP+K)=SI
        TEMP3(5*MAXGRP+K)=PI
        TEMP3(6*MAXGRP+K)=QI
C
        WRITE(IOUNI2,2004)RI,SI,PI,QI,PIBAR
 2004   FORMAT(5E15.7)
C
 2010 CONTINUE
      R=REAL(DSUM1)
      S=REAL(DSUM2)
      P=REAL(DSUM3)
      Q=REAL(DSUM4)
C
      ODDRCO=REAL(DSUM1/DSUM2)
      DTERM1=(DSUM5/DSUM1**2) + (DSUM6/(DSUM1*DSUM2)) +
     1       (DSUM7/DSUM2**2)
      DTERM1=DTERM1/2.0D0
      ODDRSE=SQRT(DTERM1)
C
      DTERM1=(DABS(DSUM8) - 0.5D0)**2/DSUM9
      STATVA=REAL(DTERM1)
C
      IOP='CLOS'
      IFLAG1=0
      IFLAG2=1
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C     PRINT SUMMARY OF LOG(ODDS RATIO) TABLE
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE(1:26)='Summary of Log(Odds Ratio)'
      NCTITL=26
      ITITL9=' '
      NCTIT9=0
C
      ITITL2(1,1)=' '
      NCTIT2(1,1)=0
      ITITL2(2,1)=' '
      NCTIT2(2,1)=0
      ITITL2(3,1)='Group'
      NCTIT2(3,1)=5
C
      ITITL2(1,2)=' | '
      NCTIT2(1,2)=3
      ITITL2(2,2)=' | '
      NCTIT2(2,2)=3
      ITITL2(3,2)=' | '
      NCTIT2(3,2)=3
C
      ITITL2(1,3)=' '
      NCTIT2(1,3)=0
      ITITL2(2,3)='Odds Ratio'
      NCTIT2(2,3)=10
      ITITL2(3,3)='O(i)'
      NCTIT2(3,3)=4
C
      ITITL2(1,4)='Log of'
      NCTIT2(1,4)=6
      ITITL2(2,4)='Odds Ratio'
      NCTIT2(2,4)=10
      ITITL2(3,4)='L(i)'
      NCTIT2(3,4)=4
C
      ITITL2(1,5)='Standard'
      NCTIT2(1,5)=8
      ITITL2(2,5)='Error'
      NCTIT2(2,5)=5
      ITITL2(3,5)='SE(L(i))'
      NCTIT2(3,5)=8
C
      NMAX=0
      NUMCOL=5
      DO4010I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        ITYPCO(I)='NUME'
        NTOT(I)=15
        NCOLSP(1,I)=1
        NCOLSP(2,I)=1
        NCOLSP(3,I)=1
        IF(I.EQ.2)THEN
          ITYPCO(I)='ALPH'
          NTOT(I)=3
        ENDIF
        NMAX=NMAX+NTOT(I)
 4010 CONTINUE
      IWHTML(1)=125
      IWHTML(2)=50
      IWHTML(3)=150
      IWHTML(4)=150
      IWHTML(5)=150
      IINC=1600
      IINC2=200
      IINC3=1000
      IWRTF(1)=IINC3
      IWRTF(2)=IWRTF(1)+IINC2
      IWRTF(3)=IWRTF(2)+IINC
      IWRTF(4)=IWRTF(3)+IINC
      IWRTF(5)=IWRTF(4)+IINC
C
      DO4081J=1,NGROUP
        DO4083I=1,NUMCOL
          IVALUE(J,I)=' '
          NCVALU(J,I)=0
          AMAT(J,I)=0.0
          IF(I.EQ.1)THEN
            IDIGIT(I)=0
          ELSE
            IDIGIT(I)=NUMDIG
          ENDIF
 4083   CONTINUE
        IVALUE(J,2)=' | '
        NCVALU(J,2)=3
        IJUNK=INT(XIDTEM(J)+0.5)
        AMAT(J,1)=REAL(IJUNK)
        AMAT(J,3)=TEMP3(J)
        AMAT(J,4)=TEMP3(MAXGRP+J)
        AMAT(J,5)=TEMP3(2*MAXGRP+J)
 4081 CONTINUE
C
      ICNT=NGROUP
      NUMLIN=3
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
      CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXRO2,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
      IDFAS=1
      CALL CHSCDF(STATVA,IDFAS,CDFASS)
      CDF=CDFASS
C
      ITITLE='Mantel-Haenszel Test'
      NCTITL=20
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Groups:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=REAL(NGROUP)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='M-H Estimate of Combined Log(Odds Ratio):'
      NCTEXT(ICNT)=41
      AVALUE(ICNT)=ODDRCO
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='M-H Standard Error of Combined Log(Odds Ratio):'
      NCTEXT(ICNT)=47
      AVALUE(ICNT)=ODDRSE
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Mantel-Haenszel Test Statistic (Association):'
      NCTEXT(ICNT)=45
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Chi-Square Degrees of Freedom:'
      NCTEXT(ICNT)=30
      AVALUE(ICNT)=REAL(IDFAS)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Chi-Square CDF of Test Statistic:'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=CDF
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO4090I=1,NUMROW
        NTOT(I)=15
 4090 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,
     1            NCTEXT,AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               ************************************************
C               **  STEP 22--                                 **
C               **  PRINT TABLE FOR OVERALL ASSOCIATION TEST  **
C               ************************************************
C
      ISTEPN='22'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'ODC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICONC1='REJECT'
      ICONC2='REJECT'
      ICONC3='REJECT'
      ICONC4='REJECT'
      ICONC5='REJECT'
      ICONC6='REJECT'
C
      CALL CHSPPF(SIGVAL(1),IDFAS,CV1)
      CALL CHSPPF(SIGVAL(2),IDFAS,CV2)
      CALL CHSPPF(SIGVAL(3),IDFAS,CV3)
      CALL CHSPPF(SIGVAL(4),IDFAS,CV4)
      CALL CHSPPF(SIGVAL(5),IDFAS,CV5)
      CALL CHSPPF(SIGVAL(6),IDFAS,CV6)
C
      IF(0.000.LE.CDFASS.AND.CDFASS.LE.SIGVAL(1))ICONC1='ACCEPT'
      IF(0.000.LE.CDFASS.AND.CDFASS.LE.SIGVAL(2))ICONC2='ACCEPT'
      IF(0.000.LE.CDFASS.AND.CDFASS.LE.SIGVAL(3))ICONC3='ACCEPT'
      IF(0.000.LE.CDFASS.AND.CDFASS.LE.SIGVAL(4))ICONC4='ACCEPT'
      IF(0.000.LE.CDFASS.AND.CDFASS.LE.SIGVAL(5))ICONC5='ACCEPT'
      IF(0.000.LE.CDFASS.AND.CDFASS.LE.SIGVAL(6))ICONC6='ACCEPT'
C
      ITITLE(1:39)='Mantel-Haenszel Test for Overall Degree'
      ITITLE(40:54)=' of Association'
      NCTITL=54
      ITITL9=' '
      NCTIT9=0
C
      ITITL2(1,1)=' '
      NCTIT2(1,1)=0
      ITITL2(2,1)='Null'
      NCTIT2(2,1)=4
      ITITL2(3,1)='Hypothesis'
      NCTIT2(3,1)=10
C
      ITITL2(1,2)=' '
      NCTIT2(1,2)=0
      ITITL2(2,2)='Confidence'
      NCTIT2(2,2)=10
      ITITL2(3,2)='Level'
      NCTIT2(3,2)=5
C
      ITITL2(1,3)=' '
      NCTIT2(1,3)=0
      ITITL2(2,3)='Critical'
      NCTIT2(2,3)=8
      ITITL2(3,3)='Value'
      NCTIT2(3,3)=5
C
      ITITL2(1,4)='Null Hypothesis'
      NCTIT2(1,4)=15
      ITITL2(2,4)='Acceptance'
      NCTIT2(2,4)=10
      ITITL2(3,4)='Interval'
      NCTIT2(3,4)=8
C
      ITITL2(1,5)='Null'
      NCTIT2(1,5)=4
      ITITL2(2,5)='Hypothesis'
      NCTIT2(2,5)=10
      ITITL2(3,5)='Conclusion'
      NCTIT2(3,5)=10
C
      NMAX=0
      NUMCOL=5
      DO4110I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        NMAX=NMAX+NTOT(I)
        IF(I.EQ.3)THEN
          ITYPCO(I)='NUME'
        ELSE
          ITYPCO(I)='ALPH'
        ENDIF
        IF(I.EQ.2)THEN
          IDIGIT(I)=1
        ELSEIF(I.EQ.3)THEN
          IDIGIT(I)=2
        ELSE
          IDIGIT(I)=NUMDIG
        ENDIF
        DO4111J=1,NUMALP
          NCVALU(J,I)=0
 4111   CONTINUE
 4110 CONTINUE
C
      IWHTML(1)=150
      IWHTML(2)=125
      IWHTML(3)=125
      IWHTML(4)=150
      IWHTML(5)=150
      IINC=1600
      IINC2=1400
      IINC3=2200
      IWRTF(1)=IINC
      IWRTF(2)=IWRTF(1)+IINC
      IWRTF(3)=IWRTF(2)+IINC2
      IWRTF(4)=IWRTF(3)+IINC3
      IWRTF(5)=IWRTF(4)+IINC2
C
      IVALUE(1,2)='50.0%'
      NCVALU(1,2)=5
      AMAT(1,3)=CV1
      IVALUE(1,4)='(0,0.500)'
      NCVALU(1,4)=9
      IVALUE(1,5)(1:6)=ICONC1(1:6)
      NCVALU(1,5)=6
C
      IVALUE(2,2)='80.0%'
      NCVALU(2,2)=5
      AMAT(2,3)=CV2
      IVALUE(2,4)='(0,0.800)'
      NCVALU(2,4)=9
      IVALUE(2,5)(1:6)=ICONC2(1:6)
      NCVALU(2,5)=6
C
      IVALUE(3,2)='90.0%'
      NCVALU(3,2)=5
      AMAT(3,3)=CV3
      IVALUE(3,4)='(0,0.900)'
      NCVALU(3,4)=9
      IVALUE(3,5)(1:6)=ICONC3(1:6)
      NCVALU(3,5)=6
C
      IVALUE(4,2)='95.0%'
      NCVALU(4,2)=5
      AMAT(4,3)=CV4
      IVALUE(4,4)='(0,0.950)'
      NCVALU(4,4)=9
      IVALUE(4,5)(1:6)=ICONC4(1:6)
      NCVALU(4,5)=6
C
      IVALUE(5,2)='97.5%'
      NCVALU(5,2)=5
      AMAT(5,3)=CV5
      IVALUE(5,4)='(0,0.975)'
      NCVALU(5,4)=9
      IVALUE(5,5)(1:6)=ICONC5(1:6)
      NCVALU(5,5)=6
C
      IVALUE(6,2)='99.0%'
      NCVALU(6,2)=5
      AMAT(6,3)=CV6
      IVALUE(6,4)='(0,0.990)'
      NCVALU(6,4)=9
      IVALUE(6,5)(1:6)=ICONC6(1:6)
      NCVALU(6,5)=6
C
      DO4120J=1,NUMALP
        AMAT(J,1)=0.0
        AMAT(J,2)=0.0
        AMAT(J,4)=0.0
        AMAT(J,5)=0.0
        IVALUE(J,1)='No Association'
        NCVALU(J,1)=14
 4120 CONTINUE
C
      ICNT=NUMALP
      NUMLIN=3
      NUMCOL=5
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
C
      CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXRO2,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
C               ************************************************
C               **  STEP 24--                                 **
C               **  PRINT TABLE FOR CONFIDENCE INTERVAL FOR   **
C               **  COMMON LOG(ODDS RATIO)                    **
C               ************************************************
C
      ISTEPN='24'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAH2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO4270I=1,NUMALP
        ALPHA=(1.0 - SIGVAL(I))/2.0
        CALL NORPPF(ALPHA,CV)
        ALOWCL(I)=ODDRCO + CV*ODDRSE
        AUPPCL(I)=ODDRCO - CV*ODDRSE
        ALOWC2(I)=EXP(ALOWCL(I))
        AUPPC2(I)=EXP(AUPPCL(I))
        WRITE(IOUNI1,4271)ALPHA,ALOWCL(I),AUPPCL(I),
     1                    ALOWC2(I),AUPPC2(I)
 4271   FORMAT(F10.5,1X,4E15.7)
 4270 CONTINUE
C
      IOP='CLOS'
      IFLAG1=1
      IFLAG2=0
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      ITITLE(1:33)='Large Sample Confidence Interval '
      ITITLE(34:52)='for Log(Odds Ratio)'
      NCTITL=52
      ITITL9=' '
      NCTIT9=0
C
      ITITL2(1,1)=' '
      NCTIT2(1,1)=0
      NCOLSP(1,1)=1
      ITITL2(2,1)=' '
      NCTIT2(2,1)=0
      NCOLSP(2,1)=1
      ITITL2(3,1)='Confidence'
      NCTIT2(3,1)=10
      NCOLSP(3,1)=1
      ITITL2(4,1)='Value (%)'
      NCTIT2(4,1)=9
      NCOLSP(4,1)=1
C
      ITITL2(1,2)='Log(Odds Ratio)'
      NCTIT2(1,2)=15
      NCOLSP(1,2)=2
      ITITL2(2,2)='(               )'
      WRITE(ITITL2(2,2)(2:16),'(G15.7)')ODDRCO
      NCTIT2(2,2)=17
      NCOLSP(2,2)=2
      ITITL2(3,2)='Lower'
      NCTIT2(3,2)=5
      NCOLSP(3,2)=1
      ITITL2(4,2)='Limit'
      NCTIT2(4,2)=5
      NCOLSP(4,2)=1
C
      ITITL2(1,3)=' '
      NCTIT2(1,3)=0
      NCOLSP(1,3)=0
      ITITL2(2,3)=' '
      NCTIT2(2,3)=0
      NCOLSP(2,3)=0
      ITITL2(3,3)='Upper'
      NCTIT2(3,3)=5
      NCOLSP(3,3)=1
      ITITL2(4,3)='Limit'
      NCTIT2(4,3)=5
      NCOLSP(4,3)=1
C
      ITITL2(1,4)='Odds Ratio'
      NCTIT2(1,4)=10
      NCOLSP(1,4)=2
      ITITL2(2,4)='(               )'
      WRITE(ITITL2(2,4)(2:16),'(G15.7)')EXP(ODDRCO)
      NCTIT2(2,4)=17
      NCOLSP(2,4)=2
      ITITL2(3,4)='Lower'
      NCTIT2(3,4)=5
      NCOLSP(3,4)=1
      ITITL2(4,4)='Limit'
      NCTIT2(4,4)=5
      NCOLSP(4,4)=1
C
      ITITL2(1,5)=' '
      NCTIT2(1,5)=0
      NCOLSP(1,5)=0
      ITITL2(2,5)=' '
      NCTIT2(2,5)=0
      NCOLSP(2,5)=0
      ITITL2(3,5)='Upper'
      NCTIT2(3,5)=5
      NCOLSP(3,5)=1
      ITITL2(4,5)='Limit'
      NCTIT2(4,5)=5
      NCOLSP(4,5)=1
C
      NMAX=0
      DO4410I=1,NUMCLI
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        DO4420J=1,MAXROW
          IF(I.EQ.1)THEN
            IDIGI2(J,I)=2
          ELSE
            IDIGI2(J,I)=NUMDIG
          ENDIF
 4420   CONTINUE
        IWHTML(1)=75
        IWHTML(2)=150
        IWHTML(3)=150
        IWHTML(4)=150
        IWHTML(5)=150
        IINC=1400
        IWRTF(1)=IINC
        IWRTF(2)=IWRTF(1)+IINC
        IWRTF(3)=IWRTF(2)+IINC
        IWRTF(4)=IWRTF(3)+IINC
        IWRTF(5)=IWRTF(4)+IINC
        IFRST=.TRUE.
        ILAST=.TRUE.
C
        DO4430J=1,NUMALP
          ATEMP=100.0*SIGVAL(J)
          AMAT(J,1)=ATEMP
          AMAT(J,2)=ALOWCL(J)
          AMAT(J,3)=AUPPCL(J)
          AMAT(J,4)=ALOWC2(J)
          AMAT(J,5)=AUPPC2(J)
          IVALUE(J,1)=' '
          IVALUE(J,2)=' '
          IVALUE(J,3)=' '
          IVALUE(J,4)=' '
          IVALUE(J,5)=' '
          NCVALU(J,1)=0
          NCVALU(J,2)=0
          NCVALU(J,3)=0
          NCVALU(J,4)=0
          NCVALU(J,5)=0
          ROWSEP(J)=0
 4430   CONTINUE
C
 4410 CONTINUE
C
      NUMLIN=4
      NUMCOL=5
      ICNT=NUMALP
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
      CALL DPDT5B(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXRO2,ICNT,
     1            IDIGI2,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            NCOLSP,ROWSEP,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAH2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMAH2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)AN11,AN21,AN12,AN22
 9013   FORMAT('AN11,AN21,AN12,AN22=',4G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9015)AN1,AN2
 9015   FORMAT('AN1,AN2=',2G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9017)N11,N21,N12,N22
 9017   FORMAT('N11,N21,N12,N22=',4I8)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAND(ICAPSW,IFORSW,ISEED,IBOOSS,
     1                  ISUBRO,IBUGA2,IBUGA3,IBUGQ,
     1                  IFOUND,IERROR)
C
C     PURPOSE--COMPUTE CONSENSUS MEANS USING FOLLOWING APPROACHES:
C              1) MANDEL-PAULE
C              2) MODIFIED MANDEL-PAULE
C              3) VANGEL-RUKHIN MAXIMUM LIKELIHOOD
C              4) DERSIMONIAN AND LARID
C              5) GRAYBILL-DEAL
C              6) FAIRWEATHER
C              7) GENERALIZED CONFIDENCE INTERVALS
C              8) GRAND MEAN
C              9) MEAN OF MEANS
C             10) BOB
C             11) SCHILLER-EBERHARDT
C             12) BAYESIAN CONSENSUS PROCEDURE OF GUTHRIE AND HAGWOOD
C             13) MEDIAN OF MEANS
C             14) HUBER MEAN OF MEANS
C             15) LINEAR POOL
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C                 CODE FOR MANDEL-PAULE, VANGEL-RUKHIN
C                 PROVIDED BY MARK VANGEL, BOB BASED ON MACROS
C                 PROVIDED BY STEFAN LEIGH.  GENERALIZED CONFIDENCE
C                 INTERVAL CODE PROVIDED BY JACK WANG.
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2000/10
C     ORIGINAL VERSION--OCTOBER   2000.
C     UPDATED         --AUGUST    2001. IWRITE VARIABLE
C     UPDATED         --OCTOBER   2002. SUPPORT FOR "CAPTURE HTML"
C                                       (ADD ICAPSW TO CALL LIST)
C     UPDATED         --MARCH     2006. ADD IFORSW TO CALL LIST
C                                       DPMAN2 COMPLETELY REWRITTEN:
C                                       1) CODE MODULARIZED INTO
C                                          DISTINCT SUBROUTINES
C                                       2) FORMATTING REVISED FOR
C                                          CONSISTENCY AND CLARITY
C                                       3) NEW METHODS ADDED
C     UPDATED         --FEBRUARY  2010. USE DPPARS
C     UPDATED         --JUNE      2010. FIVE METHODS CAN USE LABS WITH
C                                       ZERO STANDARD DEVIATION
C     UPDATED         --OCTOBER   2011. FOR SUMMARY CASE, ADD OPTIONAL
C                                       LABID COLUMN
C     UPDATED         --JUNE      2012. ADD ISEED AND IBOOSS (FOR
C                                       BOOTSTRAP COMPUTATIONS)
C     UPDATED         --OCTOBER   2014. FOR SUMMARY DATA, OPTION TO
C                                       INPUT MEAN AND UNCERTAINTY
C                                       (I.E., S/SQRT(N) INSTEAD OF
C                                       S AND N).  IN SOME CASES, DATA
C                                       IS AVAILABLE IN THIS FORM.
C     UPDATED         --MARCH     2017. MEDIAN OF MEANS
C     UPDATED         --MARCH     2017. HUBER MEAN OF MEANS
C     UPDATED         --JULY      2019. TWEAK SCRATCH STORAGE
C     UPDATED         --APRIL     2023. LINEAR POOL METHOD
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES----------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASEQ
C
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICASE
C
      DOUBLE PRECISION YDL
      DOUBLE PRECISION DLOWD2
      DOUBLE PRECISION DHIGD2
      DOUBLE PRECISION DLOWD3
      DOUBLE PRECISION DHIGD3
      DOUBLE PRECISION DLOWD4
      DOUBLE PRECISION DHIGD4
      DOUBLE PRECISION DLOWD5
      DOUBLE PRECISION DHIGD5
      DOUBLE PRECISION DLOWD6
      DOUBLE PRECISION DHIGD6
      DOUBLE PRECISION SEBOK1
      DOUBLE PRECISION SEBOK2
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION Y3(MAXOBV)
C
      INTEGER IZ(MAXOBV)
      INTEGER IZ2(MAXOBV)
      INTEGER ITEMP1(MAXOBV)
C
      DOUBLE PRECISION Z2(MAXOBV)
      DOUBLE PRECISION Z3(MAXOBV)
      DOUBLE PRECISION Z4(MAXOBV)
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
      DOUBLE PRECISION DTEMP3(MAXOBV)
C
      DIMENSION Z1(MAXOBV)
      DIMENSION Z6(MAXOBV)
      DIMENSION Z7(MAXOBV)
      DIMENSION Z8(MAXOBV)
      DIMENSION Z9(MAXOBV)
      DIMENSION PLABID(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XTEMP3(MAXOBV)
      DIMENSION XTEMP4(MAXOBV)
      DIMENSION XPLOTZ(MAXOBV)
      DIMENSION YPLOTZ(MAXOBV)
      DIMENSION WTS(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y2(1))
      EQUIVALENCE (GARBAG(IGARB3),Y3(1))
      EQUIVALENCE (GARBAG(IGARB4),Z1(1))
      EQUIVALENCE (GARBAG(IGARB5),Z6(1))
      EQUIVALENCE (GARBAG(IGARB4),Z7(1))
      EQUIVALENCE (GARBAG(IGARB8),Z8(1))
      EQUIVALENCE (GARBAG(IGARB9),Z9(1))
      EQUIVALENCE (GARBAG(IGAR10),PLABID(1))
      EQUIVALENCE (GARBAG(JGAR11),XTEMP1(1))
      EQUIVALENCE (GARBAG(JGAR12),XTEMP2(1))
      EQUIVALENCE (GARBAG(JGAR13),XTEMP3(1))
      EQUIVALENCE (GARBAG(JGAR14),XTEMP4(1))
      EQUIVALENCE (GARBAG(JGAR15),XPLOTZ(1))
      EQUIVALENCE (GARBAG(JGAR16),YPLOTZ(1))
      EQUIVALENCE (GARBAG(JGAR17),WTS(1))
C
      INCLUDE 'DPCOZD.INC'
      EQUIVALENCE (DGARBG(IDGAR1),Z2(1))
      EQUIVALENCE (DGARBG(IDGAR2),Z3(1))
      EQUIVALENCE (DGARBG(IDGAR3),Z4(1))
      EQUIVALENCE (DGARBG(IDGAR4),DTEMP1(1))
      EQUIVALENCE (DGARBG(IDGAR5),DTEMP2(1))
      EQUIVALENCE (DGARBG(IDGAR6),DTEMP3(1))
C
      INCLUDE 'DPCOZI.INC'
      EQUIVALENCE (IGARBG(IIGAR1),IZ(1))
      EQUIVALENCE (IGARBG(IIGAR2),IZ2(1))
      EQUIVALENCE (IGARBG(IIGAR3),ITEMP1(1))
C
C-----COMMON----------------------------------------------------
C
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
      INCLUDE 'DPCOST.INC'
C
C-----START POINT------------------------------------------------
C
      ISUBN1='DPMA'
      ISUBN2='ND  '
      IERROR='NO'
      ICASEQ='UNKN'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               **************************************
C               **  TREAT THE MANDEL ANALYSIS CASE  **
C               **************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MAND')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAND--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MAND')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILASTC=0
      IF(NUMARG.GE.1.AND.ICOM.EQ.'MAND'.AND.
     1  IHARG(1).EQ.'PAUL')THEN
        ILASTC=1
      ELSEIF(NUMARG.GE.1.AND.ICOM.EQ.'MAND'.AND.
     1  IHARG(1).EQ.'ANAL')THEN
        ILASTC=1
      ELSEIF(NUMARG.GE.2.AND.ICOM.EQ.'MAND'.AND.
     1  IHARG(1).EQ.'PAUL'.AND.IHARG(2).EQ.'ANAL')THEN
        ILASTC=2
      ELSEIF(NUMARG.GE.2.AND.ICOM.EQ.'CONS'.AND.
     1  IHARG(1).EQ.'MEAN'.AND.IHARG(2).EQ.'ANAL')THEN
        ILASTC=2
      ELSEIF(NUMARG.GE.1.AND.ICOM.EQ.'CONS'.AND.
     1  IHARG(1).EQ.'MEAN')THEN
        ILASTC=1
      ELSEIF(NUMARG.GE.1.AND.ICOM.EQ.'BOB '.AND.
     1  IHARG(1).EQ.'ANAL')THEN
        ILASTC=1
      ELSEIF(ICOM.EQ.'MAND')THEN
        ILASTC=0
      ELSEIF(ICOM.EQ.'BOB ')THEN
        ILASTC=0
      ELSEIF(NUMARG.GE.2.AND.ICOM.EQ.'SUMM'.AND.
     1  IHARG(1).EQ.'MAND'.AND.IHARG(2).EQ.'PAUL')THEN
        ILASTC=2
      ELSEIF(NUMARG.GE.2.AND.ICOM.EQ.'SUMM'.AND.
     1  IHARG(1).EQ.'MAND'.AND.IHARG(2).EQ.'ANAL')THEN
        ILASTC=2
      ELSEIF(NUMARG.GE.3.AND.ICOM.EQ.'SUMM'.AND.
     1  IHARG(1).EQ.'MAND'.AND.IHARG(2).EQ.'PAUL'.AND.
     1  IHARG(3).EQ.'ANAL')THEN
        ILASTC=3
      ELSEIF(NUMARG.GE.3.AND.ICOM.EQ.'SUMM'.AND.
     1  IHARG(1).EQ.'CONS'.AND.IHARG(2).EQ.'MEAN'.AND.
     1  IHARG(3).EQ.'ANAL')THEN
        ILASTC=3
      ELSEIF(NUMARG.GE.2.AND.ICOM.EQ.'SUMM'.AND.
     1  IHARG(1).EQ.'CONS'.AND.IHARG(2).EQ.'MEAN')THEN
        ILASTC=2
      ELSEIF(NUMARG.GE.2.AND.ICOM.EQ.'SUMM'.AND.
     1  IHARG(1).EQ.'BOB '.AND.IHARG(2).EQ.'ANAL')THEN
        ILASTC=2
      ELSEIF(NUMARG.GE.1.AND.ICOM.EQ.'SUMM'.AND.
     1  IHARG(1).EQ.'MAND')THEN
        ILASTC=1
      ELSEIF(NUMARG.GE.1.AND.ICOM.EQ.'SUMM'.AND.
     1  IHARG(1).EQ.'BOB ')THEN
        ILASTC=1
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      IFOUND='YES'
      IF(ILASTC.GT.0)THEN
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MAND')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='CONSENSUS MEAN'
      MINNA=2
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=2
      MAXNVA=4
      DO210I=1,MAXSPN
        IVARTY(I)='XXXX'
  210 CONTINUE
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MAND')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ****************************************
C               **  STEP 3--                          **
C               **  EXTRACT THE DATA                  **
C               ****************************************
C
C     THE FOLLOWING CASES ARE SUPPORTED:
C
C       1) NUMVAR = 2
C
C          RAW DATA CASE, THE "X" VARIABLE IS ALSO THE LAB-ID
C
C       2) NUMVAR = 3
C
C          SUMMARY DATA CASE, NO LAB-ID VARIABLE GIVEN
C
C       2) NUMVAR = 4
C
C          SUMMARY DATA CASE, LAB-ID VARIABLE GIVEN
C
      ICASE='VARI'
      ICOL=1
      CALL DPPAR5(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y1,Y2,Y3,PLABID,Z9,Z9,Z9,NS,
     1            IBUGA3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(NUMVAR.EQ.3)THEN
        DO310I=1,NS
          PLABID(I)=REAL(I)
  310   CONTINUE
      ENDIF
C
C               **************************************************
C               **  STEP 8--                                    **
C               **  PREPARE FOR ENTRANCE INTO DPMAN2--          **
C               **************************************************
C
      ISTEPN='8'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MAND')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IH='SIGM'
      IH2='AH  '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        SIGMAH=0.0
      ELSE
        SIGMAH=VALUE(ILOCP)
        IF(SIGMAH.LT.0.0)SIGMAH=0.0
      ENDIF
      IH='DFH '
      IH2='    '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        IDFH=1
      ELSE
        IDFH=INT(VALUE(ILOCP)+ 0.5)
      ENDIF
      IF(IDFH.LE.0)IDFH=1
C
C     2023/04: LINEAR POOL METHOD SUPPORTS A WEIGHTS VARIABLE
C              FOR THE LABS
C
      DO410JJ=1,MAXOBV
        WTS(JJ)=0.0
  410  CONTINUE
C
      IF(ILIPCM.EQ.'ON' .AND. ILIPWT.NE.'OFF ')THEN
        IH=ILIPWT(1:4)
        IH2=ILIPWT(5:8)
        IHWUSE='V'
        MESSAG='NO'
        CALL CHECKN(IH,IH2,IHWUSE,
     1       IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1       ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
C
        IF(IERROR.EQ.'NO')THEN
          ICOLQP=IVALUE(ILOCV)
          NTEMP=IN(ILOCV)
          ICNT=0
          DO418I=1,NTEMP
            IJ=MAXN*(ICOLQP-1)+I
            ICNT=ICNT+1
            IF(ICOLQP.LE.MAXCOL)WTS(ICNT)=V(IJ)
            IF(ICOLQP.EQ.MAXCP1)WTS(ICNT)=PRED(I)
            IF(ICOLQP.EQ.MAXCP2)WTS(ICNT)=RES(I)
            IF(ICOLQP.EQ.MAXCP3)WTS(ICNT)=YPLOT(I)
            IF(ICOLQP.EQ.MAXCP4)WTS(ICNT)=XPLOT(I)
            IF(ICOLQP.EQ.MAXCP5)WTS(ICNT)=X2PLOT(I)
            IF(ICOLQP.EQ.MAXCP6)WTS(ICNT)=TAGPLO(I)
  418     CONTINUE
        ENDIF
      ENDIF
C               ***********************************************
C               **  STEP 9--                                 **
C               **  CARRY OUT THE CONSENSUS MEANS ANALYSIS   **
C               ***********************************************
C
      ISTEPN='9'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MAND')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,711)
  711   FORMAT('***** FROM DPMAND, AS WE ARE ABOUT TO CALL DPMAN2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,712)NLEFT,MAXN,NS,NUMVAR
  712   FORMAT('NLEFT,MAXN,NS,NUMVAR = ',4I8)
        CALL DPWRST('XXX','BUG ')
        DO715I=1,NS
          WRITE(ICOUT,716)I,Y(I),Y2(I),Y3(I),PLABID(I)
  716     FORMAT('I,Y1(I),Y2(I),Y3(I),PLABID(I) = ',
     1           I6,2X,4G15.7)
          CALL DPWRST('XXX','BUG ')
  715   CONTINUE
      ENDIF
C
      NPLOT=0
      IWRITE='OFF'
      CALL DPMAN2(Y1,Y2,Y3,PLABID,NS,NUMVAR,MAXOBV,
     1            Z1,Z2,Z3,Z4,
     1            Z6,Z7,IZ,
     1            Z8,Z9,IZ2,
     1            XTEMP1,XTEMP2,XTEMP3,XTEMP4,ITEMP1,
     1            DTEMP1,DTEMP2,DTEMP3,
     1            XPLOTZ,YPLOTZ,WTS,NPLOT,
     1            IVARN1(1),IVARN2(1),IVARN1(2),IVARN2(2),
     1            IVARN1(3),IVARN2(3),
     1            SIGMAH,IDFH,
     1            XGRAND,S2WPOO,SW,ASD2,ASD3,
     1            SET1,SET2,
     1            XMPS,S2BMPS,SEMP,
     1            XMMPS,S2BMMP,SEMMP,
     1            XMLS,S2BMLS,SEML,
     1            XSE,XSES2,ABIAS,ISEDF,
     1            ASM,ASB,AKU,
CCCCC             MARCH   2006.  ADD FOLLOWING 2 LINES TO CALL LIST
     1            XGD,XGDS2,
     1            XGCI,XDL,XDLS2,YDL,SEDLK1,SEHDK1,SERUK1,
     1            XDLK2,XDLK3,DLOWD2,DHIGD2,DLOWD3,DHIGD3,
     1            SEBOK1,SEBOK2,DLOWD4,DHIGD4,
     1            DLOWD5,DHIGD5,DLOWD6,DHIGD6,
     1            SEGCI,XFW,SEFWK1,SEFWK2,
     1            XBCP,XBCPSE,XBCPK1,XBCPK2,XMEDME,SEMEK1,
     1            XH15,SEHMK1,SEHMK2,H15LCL,H15UCL,
     1            XLP,XLIPSE,ALOWLP,AUPPLP,
     1            IWRITE,
CCCCC             OCTOBER 2002.  ADD ICAPSW, ICAPTY TO CALL LIST
CCCCC             MARCH   2006.  ADD IFORSW TO CALL LIST
     1            ICAPSW,ICAPTY,IFORSW,ISEED,IBOOSS,
     1            ISUBRO,IBUGA3,IERROR)
C
C               ***************************************
C               **  STEP 10--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='10'
      IF(IBUGA2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NPLOT.GT.0)THEN
        NPLOTP=NPLOT
        DO810I=1,NPLOT
          XPLOT(I)=XPLOTZ(I)
          YPLOT(I)=YPLOTZ(I)
  810   CONTINUE
      ENDIF
C
      IH='XGRA'
      IH2='ND  '
      VALUE0=XGRAND
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='S2PO'
      IH2='OOL '
      VALUE0=S2WPOO
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='YBAR'
      IH2='SD1 '
      VALUE0=ASD2
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='YBAR'
      IH2='SD2 '
      VALUE0=ASD3
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='T1ST'
      IH2='DERR'
      VALUE0=SET1
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='T2ST'
      IH2='DERR'
      VALUE0=SET2
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='SEME'
      IH2='AN  '
      VALUE0=XSE
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='SES2'
      IH2='    '
      VALUE0=XSES2
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BIAS'
      IH2='ALLO'
      VALUE0=ABIAS
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='SEDF'
      IH2='    '
      VALUE0=REAL(ISEDF)
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MPME'
      IH2='AN  '
      VALUE0=XMPS
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MPS2'
      IH2='    '
      VALUE0=S2BMPS
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='SEMP'
      IH2='    '
      VALUE0=SEMP
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MPSE'
      IH2='    '
      VALUE0=SEMP
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MMPM'
      IH2='EAN '
      VALUE0=XMMPS
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MMPS'
      IH2='2   '
      VALUE0=S2BMMP
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='SEMM'
      IH2='P   '
      VALUE0=SEMMP
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MLME'
      IH2='AN  '
      VALUE0=XMLS
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MLS2'
      IH2='    '
      VALUE0=S2BMLS
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='SEML'
      IH2='    '
      VALUE0=SEML
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BOBM'
      IH2='EAN '
      VALUE0=ASM
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BOBS'
      IH2='2   '
      VALUE0=ASB
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BOBS'
      IH2='2W  '
      VALUE0=SW
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BOBK'
      IH2='U   '
      VALUE0=AKU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='GDME'
      IH2='AN  '
      VALUE0=XGD
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='GDS2'
      IH2='    '
      VALUE0=XGDS2
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='GCIM'
      IH2='EAN '
      VALUE0=XGCI
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='GCIS'
      IH2='E   '
      VALUE0=SEGCI
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DERS'
      IH2='MEAN'
      VALUE0=XDL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='YDL '
      IH2='    '
      VALUE0=YDL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DERS'
      IH2='VARI'
      VALUE0=XDLS2
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DERS'
      IH2='SE  '
      VALUE0=SEDLK1
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DERS'
      IH2='95LL'
      VALUE0=DLOWD2
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DERS'
      IH2='95UL'
      VALUE0=DHIGD2
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DHHD'
      IH2='95LL'
      VALUE0=DLOWD3
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DHHD'
      IH2='95UL'
      VALUE0=DHIGD3
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DERS'
      IH2='SEHD'
      VALUE0=SEHDK1
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DERS'
      IH2='SERU'
      VALUE0=SERUK1
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DERS'
      IH2='SEBS'
      VALUE0=SEBOK1
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DERS'
      IH2='BOK2'
      VALUE0=XDLK2
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='DERS'
      IH2='BOK3'
      VALUE0=XDLK3
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FAIR'
      IH2='MEAN'
      VALUE0=XFW
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FAIR'
      IH2='SE  '
      VALUE0=SEFWK1
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BCPM'
      IH2='EAN '
      VALUE0=XBCP
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BCPS'
      IH2='E   '
      VALUE0=XBCPSE
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MEDO'
      IH2='FMEA'
      VALUE0=XMEDME
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MEDM'
      IH2='EASE'
      VALUE0=SEMEK1
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='H15O'
      IH2='FMEA'
      VALUE0=XH15
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='H15M'
      IH2='EASE'
      VALUE0=SEHMK1
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='LINP'
      IH2='MEAN'
      VALUE0=XLP
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='LINP'
      IH2='SE  '
      VALUE0=XLIPSE
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='LINP'
      IH2='95LL'
      VALUE0=ALOWLP
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='LINP'
      IH2='95UL'
      VALUE0=AUPPLP
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MAN2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMAND--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NS,NUMVAR,ABIAS,ICASEQ
 9014   FORMAT('NS,NUMVAR,ABIAS,ICASEQ = ',2I8,G15.7,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAN2(Y1,Y2,Y3,PLABID,NPTS,NUMVAR,MAXNXT,
     1                  DAT,X,T,W,
     1                  AMEAN,ASD,N,
     1                  AMEANF,ASDF,NFULL,
     1                  XTEMP1,XTEMP2,XTEMP3,XTEMP4,ITEMP1,
     1                  DTEMP1,DTEMP2,DTEMP3,
     1                  XPLOT,YPLOT,WTS,NPLOT,
     1                  IHLEFT,IHLEF2,IHRIGH,IHRIG2,IHRI21,IHRI22,
     1                  SIGMAH,IDFH,
     1                  XGRAND,S2WPOO,SW,ASD2,ASD3,
     1                  SET1,SET2,
     1                  XMPS,S2BMPS,SEMP,
     1                  XMMPS,S2BMMP,SEMMP,
     1                  XMLS,S2BMLS,SEML,
     1                  XSE,XSES2,ABIAS,ISEDF,
     1                  ASM,ASB,AKU,
     1                  XGD,XGDS2,
     1                  XGCI,XDL,XDLS2,YDL,SEDLK1,SEHDK1,SERUK1,
     1                  XDLK2,XDLK3,DLOWD2,DHIGD2,DLOWD3,DHIGD3,
     1                  SEBOK1,SEBOK2,DLOWD4,DHIGD4,
     1                  DLOWD5,DHIGD5,DLOWD6,DHIGD6,
     1                  SEGCI,XFW,SEFWK1,SEFWK2,
     1                  XBCP,XBCPSE,XBCPK1,XBCPK2,XMEDME,SEMEK1,
     1                  XH15,SEHMK1,SEHMK2,H15LCL,H15UCL,
     1                  XLP,XLIPSE,ALOWLP,AUPPLP,
     1                  IWRITE,
CCCCC                   OCTOBER 2002.  ADD ICAPSW, ICAPTY TO CALL LIST
     1                  ICAPSW,ICAPTY,IFORSW,ISEED,IBOOSS,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--PERFORM A CONSENSUS MEAN ANALYSIS USING FOLLOWING
C              APPROACHES
C              1) MANDEL-PAULE
C              2) MODIFIED MANDEL-PAULE
C              3) VANGEL-RUKHIN MAXIMUM LIKELIHOOD
C              4) DERSIMONIAN AND LARID
C              5) GRAYBILL-DEAL
C              6) FAIRWEATHER
C              7) GENERALIZED CONFIDENCE INTERVALS
C              8) GRAND MEAN
C              9) MEAN OF MEANS
C             10) BOB
C             11) SCHILLER-EBERHARDT
C             12) BAYESIAN CONSENSUS PROCEDURE OF GUTHRIE AND HAGWOOD
C             13) MEDIAN OF MEANS
C             14) HUBER MEAN OF MEANS
C             15) LINEAR POOL
C     WRITTEN BY--CODE FOR MANDEL-PAULE, MAXIMUM LIKELIHOOD 
C                 PROVIDED BY MARK VANGEL, BOB BASED ON MACROS
C                 PROVIDED BY STEFAN LEIGH.
C     PRINTING--YES
C     SUBROUTINES NEEDED--FCDF
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2000/10
C     ORIGINAL VERSION--OCTOBER   2000.
C     UPDATED  VERSION--FEBRUARY  2001. FROM JAMES YEN, A FEW
C                                       TERMINOLOGY CHANGES,
C                                       FIX TO BOB COMPUTATION
C     UPDATED  VERSION--AUGUST    2001. ADD IWRITE
C     UPDATED  VERSION--APRIL     2002. PRINTING OF GRAND MEAN
C     UPDATED  VERSION--OCTOBER   2002. SUPPORT FOR "CAPTURE HTML"
C     UPDATED  VERSION--OCTOBER   2003. SUPPORT FOR "CAPTURE LATEX"
C     UPDATED  VERSION--APRIL     2004. SOME MODIFICATIONS TO THE
C                                       FORMATTING OF THE OUTPUT
C     UPDATED  VERSION--MARCH     2006. SPLIT ROUTINE INTO MULTIPLE
C                                       SUBROUTINES
C     UPDATED  VERSION--MARCH     2006. IFORSW FOR SIGNIFICANT DIGITS
C     UPDATED  VERSION--MARCH     2006. REVISE OUTPUT FORMAT
C     UPDATED  VERSION--JUNE      2006. SET COMMANDS TO INDIVIDUALLY
C                                       CONTROL WHETHER A PARTICULAR
C                                       METHOD IS APPLIED
C     UPDATED  VERSION--JUNE      2006. OMIT LABS WITH ONLY ONE
C                                       OBSERVATION
C     UPDATED  VERSION--JUNE      2006. ADD THE BAYESIAN CONSENSUS
C                                       PROCEDURE METHOD OF HAGWOOD
C                                       AND GUTHRIE (A REFINEMENT OF
C                                       BOB)
C     UPDATED  VERSION--FEBRUARY  2007. FOR THE BAYESIAN CONSENSUS
C                                       AND BOB METHODS,
C                                       AUTOMATICALLY SUPPRESS IF
C                                       TOO MANY LABS
C     UPDATED  VERSION--FEBRUARY  2010. USE DPDTA1, DPDTA2 FOR TABLES
C     UPDATED  VERSION--JUNE      2010. FIVE METHODS CAN HANDLE CASE
C                                       WHERE SOME LABS HAVE 0 STANDARD
C                                       DEVIATION
C     UPDATED  VERSION--OCTOBER   2011. OPTIONAL LABID VARIABLE FOR
C                                       SUMMARY DATA CASE
C     UPDATED         --OCTOBER   2014. FOR SUMMARY DATA, OPTION TO
C                                       INPUT MEAN AND UNCERTAINTY
C                                       (I.E., S/SQRT(N) INSTEAD OF
C                                       S AND N) (IN SOME CASES, DATA
C                                       IS ONLY AVAILABLE IN THIS FORM).
C     UPDATED         --AUGUST    2015. DON'T RESTART VERBATIM MODE
C                                       HERE AS THIS IS ALREADY DONE
C                                       BY THE LAST TABLE ROUTINE
C     UPDATED         --MARCH     2017. MEDIAN OF MEANS
C     UPDATED         --MARCH     2017. HUBER MEAN OF MEANS
C     UPDATED         --APRIL     2023. LINEAR POOL
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 IPTEMP
      CHARACTER*4 IPRISV
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
C
      LOGICAL IFLAG9
C
      REAL SIGMAH
      REAL XMPS
      REAL XMMPS
      REAL S2BMPS
      REAL S2BMMP
      REAL XMLS
      REAL S2BMLS
      REAL AMNX
      REAL AMXX
      REAL ASM
      REAL ASB
      REAL AKU
      REAL AKUK1
      REAL AKUK2
      REAL XGRAND
      REAL SW
      REAL S2WPOO
      REAL SEMP
      REAL SEMPK1
      REAL SEMPK2
      REAL SEML
      REAL SEMLK1
      REAL SEMLK2
      REAL SEMLBO
      REAL SEMLB2
      REAL SEMMP
      REAL SEMMP1
      REAL SEMMP2
      REAL SDGRAN
      REAL ASD2
      REAL ASD3
      REAL ABIAS
      REAL XGD
      REAL XGDS2
      REAL XGCI
      REAL SET1
      REAL SET1K1
      REAL SET1K2
      REAL SET2
      REAL SET2K1
      REAL SET2K2
      REAL XSE
      REAL XSES2
      REAL SEGDK1
      REAL SEGDK2
      REAL SESUK1
      REAL SESUK2
      REAL XDL
      REAL XDLS2
      REAL SEDLK1
      REAL SEDLK2
      REAL SERUK1
      REAL SERUK2
      REAL SEHDK1
      REAL SEHDK2
      REAL XDLK2
      REAL XDLK3
      REAL SEGCI
      REAL XFW
      REAL XFWS2
      REAL SEFWK1
      REAL SEFWK2
      REAL XBCP
      REAL XBCPSE
      REAL XBCPK1
      REAL XBCPK2
      REAL YDL2
      REAL XMEDME
      REAL SEMED
      REAL SEMED2
      REAL SEMEDB
      REAL SEMDB2
      REAL STS2B
      REAL STXMU
      REAL SEMEK1
      REAL SEMEK2
      REAL ALOWCL
      REAL AUPPCL
      REAL XH15
      REAL SEHMK1
      REAL SEHMK2
      REAL H15LCL
      REAL H15UCL
C
      CHARACTER*4 IOP
C
C----------------------------------------------------------------
C
      REAL Y1(*)
      REAL Y2(*)
      REAL Y3(*)
      REAL PLABID(*)
      REAL AMEAN(*)
      REAL ASD(*)
      REAL AMEANF(*)
      REAL ASDF(*)
      REAL XTEMP1(*)
      REAL XTEMP2(*)
      REAL XTEMP3(*)
      REAL XTEMP4(*)
      REAL XPLOT(*)
      REAL YPLOT(*)
      REAL WTS(*)
C
      INTEGER N(*)
      INTEGER NFULL(*)
      INTEGER ITEMP1(*)
C
      REAL DAT(*)
      DOUBLE PRECISION X(*)
      DOUBLE PRECISION T(*)
      DOUBLE PRECISION W(*)
      DOUBLE PRECISION DTEMP1(*)
      DOUBLE PRECISION DTEMP2(*)
      DOUBLE PRECISION DTEMP3(*)
C
      COMMON /MPCOM/ T0, T1
C
      INCLUDE 'DPCOST.INC'
C
      CHARACTER*4 IBOBSV
      CHARACTER*4 IBCPSV
      CHARACTER*4 IUNCFL
      CHARACTER*4 IDFFL
C
      INTEGER NUMDIG
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      IPTEMP=IPRINT
      IFLAG9=.TRUE.
      IUNCFL='OFF'
      IDFFL='OFF'
      ISUBN1='DPMA'
      ISUBN2='N2  '
C
      IBOBSV=IBOBCM
      IBCPSV=IBCPCM
C
      XMPS=CPUMIN
      XMMPS=CPUMIN
      XMLS=CPUMIN
      XDL=CPUMIN
      XGD=CPUMIN
      XFW=CPUMIN
      XGCI=CPUMIN
      XGRAND=CPUMIN
      ASM=CPUMIN
      XSE=CPUMIN
      XBCP=CPUMIN
      SEMED=CPUMIN
      SEMED2=CPUMIN
      SEMEDB=CPUMIN
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAN2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NUMVAR,IFORSW
   52   FORMAT('NPTS,NUMVAR,IFORSW = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NPTS
          WRITE(ICOUT,56)I,Y1(I),Y2(I),Y3(I),PLABID(I)
   56     FORMAT('I,Y1(I),Y2(I),Y3(I),PLABID(I) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(NPTS.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN CONSENSUS MEANS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,102)
  102   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE CONSENSUS',
     1         'MEANS ANALYSIS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,103)
  103   FORMAT('      MUST BE AT LEAST 2; THE ENTERED NUMBER OF')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,104)NPTS
  104   FORMAT('      OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               **************************************************
C               **  STEP 1.1--                                  **
C               **   OPEN THE STORAGE FILES                     **
C               **************************************************
C
      ISTEPN='1.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOP='OPEN'
      IFLAG1=1
      IFLAG2=1
      IFLAG3=1
      IFLAG4=1
      IFLAG5=1
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-7
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
C               ***********************************************
C               **  STEP 2.1--                               **
C               **  IF TWO VARIABLES ENTERED, THEN           **
C               **     Y1 = RESPONSE VARIABLE                **
C               **     Y2 = LAB ID VARIABLE                  **
C               **  1) COPY RESPONSE DATA TO "DAT"           **
C               **  2) DETERMINE NUMBER OF DISTINCT LABS     **
C               **  3) SORT RESPONSE (DAT) BY LAB ID         **
C               **  4) DETERMINE NUMER OF POINTS IN EACH LAB **
C               ***********************************************
C
      IF(NUMVAR.GE.3)GOTO6100
C
      CALL DPMAN3(Y1,Y2,Y3,NPTS,NUMVAR,NLAB,
     1            DAT,X,T,
     1            AMEAN,ASD,N,
     1            AMEANF,ASDF,NFULL,NLABF,NPTSF,
     1            IHLEFT,IHLEF2,IHRIGH,IHRIG2,
     1            ASM,ASD2,ASD3,
     1            XGRAND,S2WPOO,SW,
     1            AMNX,AMXX,
     1            IWRITE,IOUNI1,
     1            ICAPSW,ICAPTY,NUMDIG,
     1            ISUBRO,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C     FEBRUARY 2007: FOR BOB, SUPPRESS IF NLAB > 5.  FOR
C                    BAYESIAN CONSENSUS PROCEDURE, SUPPRESS
C                    IF NLAB > 6.
C
      IF(NLAB.GT.6)IBCPCM='OFF'
      IF(NLAB.GT.5)IBOBCM='OFF'
C
      IF(IERROR.EQ.'YES')GOTO9000
C
C     FOLLOWING CALL NEEDED TO INITIALIZE MANDEL-PAULE
C     AND VANGEL-RUKHIN METHODS
C
      CALL MPPREP (NLAB, X, T, T0, T1)
C
C     MANDEL-PAULE
C
      IF(IMPACM.EQ.'ON' .OR. IVRUCM.EQ.'ON' .OR. ISCECM.EQ.'ON')THEN
        IFLAGZ=0
        IF(IMPACM.EQ.'OFF' .AND. IVRUCM.EQ.'OFF')IFLAGZ=1
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPMNPL(Y1,Y2,Y3,NPTS,NLAB,
     1              X,T,N,
     1              XMPS,S2BMPS,SEMP,SEMPK1,SEMPK2,
     1              DLOWMP,DHIGMP,STXMU,STS2B,
     1              IWRITE,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
C
        WRITE(IOUNI5,1122)
 1122   FORMAT('WEIGHTS FOR MANDEL-PAULE')
        DO1123I=1,NLAB
          DTERM1=DBLE(ASD(I))**2/DBLE(N(I))
          WITEMP=1.0D0/(S2BMPS + DTERM1)
          WRITE(IOUNI5,'(E15.7)')WITEMP
 1123   CONTINUE
C
      ENDIF
C
C     MODIFIED MANDEL-PAULE
C
      IF(IMMPCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPMMPL(Y1,Y2,Y3,NPTS,NLAB,
     1              X,T,N,
     1              XMMPS,S2BMMP,SEMMP,SEMMP1,SEMMP2,
     1              DLOWMM,DHIGMM,
     1              IWRITE,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
C
        WRITE(IOUNI5,1132)
 1132   FORMAT('WEIGHTS FOR MODIFIED MANDEL-PAULE')
        DO1133I=1,NLAB
          DTERM1=DBLE(ASD(I))**2/DBLE(N(I))
          WITEMP=1.0D0/(S2BMMP + DTERM1)
          WRITE(IOUNI5,'(E15.7)')WITEMP
 1133   CONTINUE
C
      ENDIF
C
C     VANGEL-RUKHIN MAXIMUM LIKELIHOOD
C
      IF(IVRUCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPVRML(NPTS,NLAB,
     1              AMEAN,ASD,N,
     1              XTEMP3(1),XTEMP3(MAXNXT/2),ITEMP1,XTEMP1,XTEMP2,
     1              X,T,W,DTEMP1,DTEMP2,
     1              XMLS,S2BMLS,SEML,SEMLK1,SEMLK2,
     1              DLOWML,DHIGML,STXMU,STS2B,
     1              SEMLBO,DLOWM2,DHIGM2,
     1              IWRITE,
     1              ICAPSW,ICAPTY,IOUNI5,NUMDIG,ISEED,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C  DERSIMONIAN LAIRD
C
      IF(IDSLCM.EQ.'ON' .OR. IDS2CM.EQ.'ON' .OR.
     1   IDS3CM.EQ.'ON' .OR. IDS4CM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPDERS(NPTS,NLAB,
     1              AMEAN,ASD,N,
     1              XTEMP3(1),XTEMP3(MAXNXT/2),ITEMP1,XTEMP1,XTEMP2,
     1              XTEMP4,DTEMP1,DTEMP2,DTEMP3,
     1              YPLOT,XPLOT,NPLOT,
     1              XDL,XDLS2,YDL,SEDLK1,SEDLK2,DLOWDL,DHIGDL,
     1              SERUK1,SERUK2,DLOWD2,DHIGD2,
     1              SEHDK1,SEHDK2,DLOWD3,DHIGD3,
     1              SEBOK1,SEBOK2,DLOWD4,DHIGD4,
     1              DLOWD5,DHIGD5,DLOWD6,DHIGD6,
     1              XDLK2,XDLK3,
     1              IWRITE,IOUNI5,
     1              ICAPSW,ICAPTY,NUMDIG,ISEED,IBOOSS,
     1              ISUBRO,IBUGA3,IERROR)
        YDL2=REAL(YDL)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C  GRAYBILL-DEAL
C
      IF(IGRDCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPGRAY(NPTS,NLAB,
     1              AMEAN,ASD,N,
     1              XGD,XGDS2,SEGDK1,SEGDK2,
     1              XGDS20,XGDSZ1,XGDSZ2,
     1              DLOWGD,DHIGGD,
     1              IWRITE,IOUNI5,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C  FAIRWEATHER
C
      IF(IFAICM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPFAIR(NPTS,NLAB,
     1              AMEAN,ASD,N,
     1              XFW,XFWS2,SEFWK1,SEFWK2,
     1              DLOWFW,DHIGFW,DLOWF2,DHIGF2,DLOWF3,DHIGF3,
     1              IWRITE,
     1              ICAPSW,ICAPTY,IFLAG9,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C  IYER-WANG GENERALIZED CONFIDENCE INTERVAL
C
      IF(IGCICM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPGCI(NPTS,NLAB,
     1             AMEAN,ASD,N,
     1             T,W,
     1             XGCI,SEGCI,
     1             DLOWGC,DHIGGC,
     1             IWRITE,IOUNI5,
     1             ICAPSW,ICAPTY,NUMDIG,
     1             ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     GRAND MEAN
C
      IF(IGMECM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPGMEA(NPTSF,NLABF,
     1              XGRAND,ASD2,SET1,SET1K1,SET1K2,
     1              DLOWT2,DHIGT2,
     1              IWRITE,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     MEAN OF MEANS
C
      IF(IMOMCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPMMEA(NPTSF,NLABF,
     1              ASM,ASD2,SET2,SET2K1,SET2K2,
     1              DLOWT1,DHIGT1,
     1              IWRITE,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     BOB (BOUND ON BIAS)
C
      IF(IBOBCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPBOB(NPTSF,NLABF,
     1             AMEANF,ASDF,AMNX,AMXX,SW,
     1             ASM,ASB,AKU,AKUK1,AKUK2,
     1             DLOWBO,DHIGBO,
     1             IWRITE,
     1             ICAPSW,ICAPTY,NUMDIG,
     1             ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     SCHILLER-EBERHARDT
C
      IF(ISCECM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPSCEB(NPTS,NLAB,
     1              W,N,
     1              AMEAN,ASD,S2BMPS,
     1              XSE,XSES2,IDFH,SIGMAH,
     1              SESUK1,SESUK2,
     1              DLOWSE,DHIGSE,
     1              IWRITE,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
      IF(IBCPCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPBCP(NPTS,NLAB,
     1             AMEAN,ASD,N,AMNX,AMXX,
     1             XBCP,XBCPSE,XBCPK1,XBCPK2,
     1             DLOWBC,DHIGBC,
     1             IWRITE,
     1             ICAPSW,ICAPTY,NUMDIG,
     1             ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     MEDIAN OF MEANS
C
      IF(IMEMCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPMEDM(NLAB,AMEANF,ASDF,XTEMP1,XTEMP2,
     1              IWRITE,ICAPSW,ICAPTY,NUMDIG,MAXNXT,
     1              XMEDME,SEMEK1,SEMEK2,ALOWCL,AUPPCL,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     HUBER H15 MEAN OF MEANS
C
      IF(IHUBCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPHMEA(NLAB,AMEANF,ASDF,XTEMP1,XTEMP2,
     1              IWRITE,ICAPSW,ICAPTY,NUMDIG,MAXNXT,
     1              XH15,SEHMK1,SEHMK2,H15LCL,H15UCL,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     LINEAR POOL
C
      IF(ILIPCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPLIPO(NLAB,AMEANF,ASDF,WTS,NFULL,
     1              XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1              XLP,XLIPSE,ALOWLP,AUPPLP,
     1              IWRITE,IOUNI5,
     1              ICAPSW,ICAPTY,MAXNXT,NUMDIG,ISEED,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     MEDIAN OF MEANS
C
CCCCC IF(IMEMCM.EQ.'ON')THEN
CCCCC   IFLAGZ=0
CCCCC   IF(ICMET5.EQ.'OFF')IFLAGZ=1
CCCCC   IF(IFLAGZ.EQ.1)THEN
CCCCC     IPRISV=IPRINT
CCCCC     IPRINT='OFF'
CCCCC   ENDIF
CCCCC   CALL DPMMED(NPTSF,NLABF,AMEANF,ASDF,
CCCCC1              XTEMP1,XTEMP2,XTEMP3,XTEMP4,ITEMP1,
CCCCC1              DTEMP1,DTEMP2,DTEMP3,
CCCCC1              XMEDME,SEMED,SEMEDB,
CCCCC1              DLWME0,DHGME0,DLWME1,DHGME1,
CCCCC1              DLWME2,DHGME2,DLWME3,DHGME3,
CCCCC1              IWRITE,IOUNI5,MAXNXT,
CCCCC1              ICAPSW,ICAPTY,NUMDIG,ISEED,IBOOSS,
CCCCC1              ISUBRO,IBUGA3,IERROR)
CCCCC   IF(IFLAGZ.EQ.1)THEN
CCCCC     IPRINT=IPRISV
CCCCC   ENDIF
CCCCC ENDIF
C
C     CONFIDENCE LIMITS TABLE
C
      CALL DPMAN5(NPTS,NLAB,
     1XGRAND,XMPS,XMMPS,XMLS,XSE,
     1ASM,XGD,XGCI,XDL,XFW,XBCP,
     1DLOWMP,DHIGMP,DLOWMM,DHIGMM,DLOWML,DHIGML,DLOWM2,DHIGM2,
     1DLOWBO,DHIGBO,DLOWSE,DHIGSE,DLOWT1,DHIGT1,
     1DLOWT2,DHIGT2,DLOWGD,DHIGGD,DLOWGC,DHIGGC,
     1DLOWDL,DHIGDL,DLOWD2,DHIGD2,DLOWD3,DHIGD3,DLOWD4,DHIGD4,
     1DLOWD5,DHIGD5,DLOWD6,DHIGD6,
     1DLOWFW,DHIGFW,DLOWF2,DHIGF2,DLOWF3,DHIGF3,
     1DLOWBC,DHIGBC,
     1XMEDME,SEMED,
     1DLWME0,DHGME0,DLWME1,DHGME1,
     1DLWME2,DHGME2,DLWME3,DHGME3,
     1SEMPK1,SEMMP1,SEMLK1,SEMLBO,AKUK1,SESUK1,SET2K1,
     1SET1K1,SEGDK1,SEDLK1,SEHDK1,SERUK1,SEBOK1,SEGCI,
     1SEFWK1,XBCPK1,SEMEDB,ALOWCL,AUPPCL,SEMEK1,
     1XH15,SEHMK1,XLP,XLIPSE,ALOWLP,AUPPLP,
     1IWRITE,IOUNI2,
     1ICAPSW,ICAPTY,NUMDIG,IFLAG9,
     1ISUBRO,IBUGA3,IERROR)
C
C     STANDARD AND EXPANDED UNCERTAINTIES TABLE
C
      IK=1
      CALL DPMAN6(NPTS,NLAB,
     1XGRAND,XMPS,XMMPS,XMLS,XSE,
     1ASM,XGD,XDL,XGCI,XFW,XBCP,
     1SEMPK1,SEMMP1,SEMLK1,SEMLBO,AKUK1,SESUK1,SET1K1,
     1SET2K1,SEGDK1,SEDLK1,SEHDK1,SERUK1,SEBOK1,SEGCI,SEFWK1,XBCPK1,
     1XMEDME,SEMED,SEMEDB,SEMEK1,XH15,SEHMK1,XLP,XLIPSE,
     1IWRITE,
     1ICAPSW,ICAPTY,IK,IOUNI3,NUMDIG,IFLAG9,
     1ISUBRO,IBUGA3,IERROR)
C
      IK=2
      SEMLB2=2.0*SEMLBO
      SEMED2=2.0*SEMED
      SEMDB2=2.0*SEMEDB
      XLIPS2=2.0*XLIPSE
      CALL DPMAN6(NPTS,NLAB,
     1XGRAND,XMPS,XMMPS,XMLS,XSE,
     1ASM,XGD,XDL,XGCI,XFW,XBCP,
     1SEMPK2,SEMMP2,SEMLK2,SEMLB2,AKUK2,SESUK2,SET1K2,
     1SET2K2,SEGDK2,SEDLK2,SEHDK2,SERUK2,SEBOK2,
     12.0*SEGCI,SEFWK2,XBCPK2,
     1XMEDME,SEMED2,SEMDB2,SEMEK2,XH15,SEHMK2,XLP,XLIPS2,
     1IWRITE,
     1ICAPSW,ICAPTY,IK,IOUNI4,NUMDIG,IFLAG9,
     1ISUBRO,IBUGA3,IERROR)
C
      GOTO8000
C
C               ***********************************************
C               **  STEP 2.1--                               **
C               **  IF THREE VARIABLES ENTERED, THEN FIRST   **
C               **  VARIABLE IS LAB MEANS, SECOND VARIABLE IS**
C               **  LAB SD, AND THIRD VARIABLE IS NUMBER OF  **
C               **  OBSERVATIONS FOR LAB.                    **
C               ***********************************************
C
C     2014/10: SUPPORT FOR CASE WHERE DATA GIVEN IN THE FORM OF
C              LAB MEAN AND LAB UNCERTAINTY (I.E., S/SQRT(N)).
C              DATA FROM EXTERNAL LABS IS OFTEN REPORTED IN THIS
C              FORM.
C
C              FOR THIS TYPE OF DATA, THE "SAMPLE SIZE" FIELD
C              CAN BE ENTERED IN ONE OF THE FOLLOWING TWO WAYS:
C
C                  1) IF THE SAMPLE SIZE IS GIVEN AS A NEGATIVE
C                     VALUE, THEN THE ABSOLUTE VALUE OF THE
C                     SAMPLE SIZE WILL BE INTERPRETED AS THE
C                     "EFFECTIVE DEGREES OF FREEDOM".  NOTE THAT
C                     IN MANY OF THE FORMULAS, THERE WILL BE
C
C                         S(i)/N(i)
C
C                     TERMS.  FOR NEGATIVE SAMPLE SIZE, THE S(i)
C                     ENTERED WILL BE INTERPRETED AS S(i)/N(i) FOR
C                     THESE FORMULAS.  SOME FORMULAS WILL HAVE AN
C                     "N(i) - C" TERM.  THESE FORMULAS WILL USE THE
C                     ABSOLUTE VALUE OF THE SAMPLE SIZE FOR N(i).
C
C                  1) IF THE SAMPLE SIZE IS GIVEN AS 0, THEN THIS MEANS
C                     NO EFFECTIVE DEGREES OF FREEDOM ARE AVAILABLE.
C                     FOR THIS CASE, FORMULAS THAT REQUIRE "N(i) - C"
C                     TERMS WILL NOT BE SUPPORTED.
C
 6100 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
C
      NLAB=NPTS
      IF(NLAB.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,6211)
 6211   FORMAT('***** ERROR IN CONSENSUS MEANS ANALYSIS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,6212)
 6212   FORMAT('      FOR THE SUMMARY CASE OF THE CONSENSUS MEANS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,6214)
 6214   FORMAT('      COMMAND, THERE MUST BE AT LEAST TWO LABS.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,6220)
 6220   FORMAT('      SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      NTOT=0
      IF(NUMVAR.GE.3)THEN
        DO6110I=1,NLAB
          IF(Y3(I).GE.0.0)THEN
            IVAL=INT(Y3(I)+0.5)
          ELSE
            AVAL=ABS(Y3(I))
            IVAL=INT(AVAL+0.5)
          ENDIF
          N(I)=IVAL
          NTOT=NTOT+N(I)
 6110   CONTINUE
      ENDIF
C
      CALL DPMAN4(Y1,Y2,Y3,PLABID,NLAB,NTOT,NUMVAR,
     1            DAT,X,T,
     1            AMEAN,ASD,N,
     1            AMEANF,ASDF,NFULL,NLABF,NTOTF,
     1            IHLEFT,IHLEF2,IHRIGH,IHRIG2,IHRI21,IHRI22,
     1            ASM,ASD2,ASD3,SDGRAN,
     1            XGRAND,S2WPOO,SW,
     1            AMNX,AMXX,
     1            IWRITE,IOUNI1,
     1            ICAPSW,ICAPTY,NUMDIG,IUNCFL,IDFFL,
     1            ISUBRO,IBUGA3,IERROR)
C
      IF(IERROR.EQ.'YES')GOTO9000
C
CCCCC CALL MPPREP (NLAB, X, T, T0, T1)
C
      EPS=0.00001
      T0=AMNX - EPS
      T1=AMXX
      DO6120I=1,NLAB
        X(I)=(X(I)-T0)/(T1-T0)
        T(I)=T(I)/((T1-T0)**2)
 6120 CONTINUE
C
C
C     MANDEL-PAULE
C
      IF(IMPACM.EQ.'ON' .OR. IVRUCM.EQ.'ON' .OR. ISCECM.EQ.'ON')THEN
        IFLAGZ=0
        IF(IMPACM.EQ.'OFF' .AND. IVRUCM.EQ.'OFF')IFLAGZ=1
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPMNPL(Y1,Y2,Y3,NTOT,NLAB,
     1              X,T,N,
     1              XMPS,S2BMPS,SEMP,SEMPK1,SEMPK2,
     1              DLOWMP,DHIGMP,STXMU,STS2B,
     1              IWRITE,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
C
        WRITE(IOUNI5,6122)
 6122   FORMAT('WEIGHTS FOR MANDEL-PAULE')
        DO6123I=1,NLAB
          DTERM1=DBLE(Y2(I))**2/DBLE(N(I))
          WITEMP=1.0D0/(S2BMPS + DTERM1)
          WRITE(IOUNI5,'(E15.7)')WITEMP
 6123   CONTINUE
C
      ENDIF
C
C     MODIFIED MANDEL-PAULE
C
      IF(IMMPCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPMMPL(Y1,Y2,Y3,NTOT,NLAB,
     1              X,T,N,
     1              XMMPS,S2BMMP,SEMMP,SEMMP1,SEMMP2,
     1              DLOWMM,DHIGMM,
     1              IWRITE,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
C
        WRITE(IOUNI5,6132)
 6132   FORMAT('WEIGHTS FOR MODIFIED MANDEL-PAULE')
        DO6133I=1,NLAB
          DTERM1=DBLE(Y2(I))**2/DBLE(N(I))
          WITEMP=1.0D0/(S2BMMP + DTERM1)
          WRITE(IOUNI5,'(E15.7)')WITEMP
 6133   CONTINUE
C
      ENDIF
C
C     VANGEL-RUKHIN MAXIMUM LIKELIHOOD
C
      IF(IVRUCM.EQ.'ON' .AND. IDFFL.EQ.'OFF')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPVRML(NTOT,NLAB,
     1              AMEAN,ASD,N,
     1              XTEMP3(1),XTEMP3(MAXNXT/2),ITEMP1,XTEMP1,XTEMP2,
     1              X,T,W,DTEMP1,DTEMP2,
     1              XMLS,S2BMLS,SEML,SEMLK1,SEMLK2,
     1              DLOWML,DHIGML,STXMU,STS2B,
     1              SEMLBO,DLOWM2,DHIGM2,
     1              IWRITE,
     1              ICAPSW,ICAPTY,IOUNI5,NUMDIG,ISEED,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C  DERSIMONIAN LAIRD
C
      IF(IDSLCM.EQ.'ON' .OR. IDS2CM.EQ.'ON' .OR.
     1   IDS3CM.EQ.'ON' .OR. IDS4CM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPDERS(NTOT,NLAB,
     1              AMEAN,ASD,N,
     1              XTEMP3(1),XTEMP3(MAXNXT/2),ITEMP1,
     1              XTEMP1,XTEMP2,XTEMP4,
     1              DTEMP1,DTEMP2,DTEMP3,
     1              YPLOT,XPLOT,NPLOT,
     1              XDL,XDLS2,YDL,SEDLK1,SEDLK2,DLOWDL,DHIGDL,
     1              SERUK1,SERUK2,DLOWD2,DHIGD2,
     1              SEHDK1,SEHDK2,DLOWD3,DHIGD3,
     1              SEBOK1,SEBOK2,DLOWD4,DHIGD4,
     1              DLOWD5,DHIGD5,DLOWD6,DHIGD6,
     1              XDLK2,XDLK3,
     1              IWRITE,IOUNI5,
     1              ICAPSW,ICAPTY,NUMDIG,ISEED,IBOOSS,
     1              ISUBRO,IBUGA3,IERROR)
        YDL2=REAL(YDL)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C  GRAYBILL-DEAL
C
      IF(IGRDCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPGRAY(NTOT,NLAB,
     1              AMEAN,ASD,N,
     1              XGD,XGDS2,SEGDK1,SEGDK2,
     1              XGDS20,XGDSZ1,XGDSZ2,
     1              DLOWGD,DHIGGD,
     1              IWRITE,IOUNI5,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C  FAIRWEATHER
C
      IF(IFAICM.EQ.'ON' .AND. IUNCFL.EQ.'OFF')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPFAIR(NTOT,NLAB,
     1              AMEAN,ASD,N,
     1              XFW,XFWS2,SEFWK1,SEFWK2,
     1              DLOWFW,DHIGFW,DLOWF2,DHIGF2,DLOWF3,DHIGF3,
     1              IWRITE,
     1              ICAPSW,ICAPTY,IFLAG9,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C  IYER-WANG GENERALIZED CONFIDENCE INTERVAL
C
      IF(IGCICM.EQ.'ON' .AND. IDFFL.EQ.'OFF')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPGCI(NTOT,NLAB,
     1             AMEAN,ASD,N,
     1             T,W,
     1             XGCI,SEGCI,
     1             DLOWGC,DHIGGC,
     1             IWRITE,IOUNI5,
     1             ICAPSW,ICAPTY,NUMDIG,
     1             ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     GRAND MEAN
C
      IF(IGMECM.EQ.'ON' .AND. IUNCFL.EQ.'OFF')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPGMEA(NTOTF,NLABF,
     1              XGRAND,SDGRAN,SET1,SET1K1,SET1K2,
     1              DLOWT2,DHIGT2,
     1              IWRITE,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     MEAN OF MEANS
C
      IF(IMOMCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPMMEA(NTOTF,NLABF,
     1              ASM,ASD2,SET2,SET2K1,SET2K2,
     1              DLOWT1,DHIGT1,
     1              IWRITE,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     BOB (BOUND ON BIAS)
C
      IF(IBOBCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPBOB(NTOTF,NLABF,
     1             AMEANF,ASDF,AMNX,AMXX,SW,
     1             ASM,ASB,AKU,AKUK1,AKUK2,
     1             DLOWBO,DHIGBO,
     1             IWRITE,
     1             ICAPSW,ICAPTY,NUMDIG,
     1             ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     SCHILLER-EBERHARDT
C
      IF(ISCECM.EQ.'ON' .AND. IDFFL.EQ.'OFF')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPSCEB(NTOT,NLAB,
     1              W,N,
     1              AMEAN,ASD,S2BMPS,
     1              XSE,XSES2,IDFH,SIGMAH,
     1              SESUK1,SESUK2,
     1              DLOWSE,DHIGSE,
     1              IWRITE,
     1              ICAPSW,ICAPTY,NUMDIG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
      IF(IBCPCM.EQ.'ON' .AND. IDFFL.EQ.'OFF')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPBCP(NTOT,NLAB,
     1             AMEAN,ASD,N,AMNX,AMXX,
     1             XBCP,XBCPSE,XBCPK1,XBCPK2,
     1             DLOWBC,DHIGBC,
     1             IWRITE,
     1             ICAPSW,ICAPTY,NUMDIG,
     1             ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C     MEDIAN OF MEANS
C
      IF(IMEMCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPMEDM(NLAB,AMEANF,ASDF,XTEMP1,XTEMP2,
     1              IWRITE,ICAPSW,ICAPTY,NUMDIG,MAXNXT,
     1              XMEDME,SEMEK1,SEMEK2,ALOWCL,AUPPCL,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
CCCCC IF(IMEMCM.EQ.'ON')THEN
CCCCC   IFLAGZ=0
CCCCC   IF(ICMET5.EQ.'OFF')IFLAGZ=1
CCCCC   IF(IFLAGZ.EQ.1)THEN
CCCCC     IPRISV=IPRINT
CCCCC     IPRINT='OFF'
CCCCC   ENDIF
CCCCC   CALL DPMMED(NTOTF,NLABF,AMEANF,ASDF,
CCCCC1              XTEMP1,XTEMP2,XTEMP3,XTEMP4,ITEMP1,
CCCCC1              DTEMP1,DTEMP2,DTEMP3,
CCCCC1              XMEDME,SEMED,SEMEDB,
CCCCC1              DLWME0,DHGME0,DLWME1,DHGME1,
CCCCC1              DLWME2,DHGME2,DLWME3,DHGME3,
CCCCC1              IWRITE,IOUNI5,MAXNXT,
CCCCC1              ICAPSW,ICAPTY,NUMDIG,ISEED,IBOOSS,
CCCCC1              ISUBRO,IBUGA3,IERROR)
CCCCC   IF(IFLAGZ.EQ.1)THEN
CCCCC     IPRINT=IPRISV
CCCCC   ENDIF
CCCCC ENDIF
C
C     HUBER H15 MEAN OF MEANS
C
      IF(IHUBCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPHMEA(NLAB,AMEANF,ASDF,XTEMP1,XTEMP2,
     1              IWRITE,ICAPSW,ICAPTY,NUMDIG,MAXNXT,
     1              XH15,SEHMK1,SEHMK2,H15LCL,H15UCL,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
      IF(ILIPCM.EQ.'ON')THEN
        IFLAGZ=0
        IF(ICMET5.EQ.'OFF')IFLAGZ=1
        IF(IFLAGZ.EQ.1)THEN
          IPRISV=IPRINT
          IPRINT='OFF'
        ENDIF
        CALL DPLIPO(NLAB,AMEAN,ASD,WTS,N,
     1              XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1              XLP,XLIPSE,ALOWLP,AUPPLP,
     1              IWRITE,IOUNI5,
     1              ICAPSW,ICAPTY,MAXNXT,NUMDIG,ISEED,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IFLAGZ.EQ.1)THEN
          IPRINT=IPRISV
        ENDIF
      ENDIF
C
C
C     CONFIDENCE LIMITS TABLE
C
      CALL DPMAN5(NPTS,NLAB,
     1XGRAND,XMPS,XMMPS,XMLS,XSE,
     1ASM,XGD,XGCI,XDL,XFW,XBCP,
     1DLOWMP,DHIGMP,DLOWMM,DHIGMM,DLOWML,DHIGML,DLOWM2,DHIGM2,
     1DLOWBO,DHIGBO,DLOWSE,DHIGSE,DLOWT1,DHIGT1,
     1DLOWT2,DHIGT2,DLOWGD,DHIGGD,DLOWGC,DHIGGC,
     1DLOWDL,DHIGDL,DLOWD2,DHIGD2,DLOWD3,DHIGD3,DLOWD4,DHIGD4,
     1DLOWD5,DHIGD5,DLOWD6,DHIGD6,
     1DLOWFW,DHIGFW,DLOWF2,DHIGF2,DLOWF3,DHIGF3,
     1DLOWBC,DHIGBC,
     1XMEDME,SEMED,
     1DLWME0,DHGME0,DLWME1,DHGME1,
     1DLWME2,DHGME2,DLWME3,DHGME3,
     1SEMPK1,SEMMP1,SEMLK1,SEMLBO,AKUK1,SESUK1,SET2K1,
     1SET1K1,SEGDK1,SEDLK1,SEHDK1,SERUK1,SEBOK1,SEGCI,
     1SEFWK1,XBCPK1,SEMEDB,ALOWCL,AUPPCL,SEMEK1,
     1XH15,SEHMK1,XLP,XLIPSE,ALOWLP,AUPPLP,
     1IWRITE,IOUNI2,
     1ICAPSW,ICAPTY,NUMDIG,IFLAG9,
     1ISUBRO,IBUGA3,IERROR)
C
      IK=1
      CALL DPMAN6(NPTS,NLAB,
     1XGRAND,XMPS,XMMPS,XMLS,XSE,
     1ASM,XGD,XDL,XGCI,XFW,XBCP,
     1SEMPK1,SEMMP1,SEMLK1,SEMLBO,AKUK1,SESUK1,SET1K1,
     1SET2K1,SEGDK1,SEDLK1,SEHDK1,SERUK1,SEBOK1,SEGCI,SEFWK1,XBCPK1,
     1XMEDME,SEMED,SEMEDB,SEMEK1,XH15,SEHMK1,XLP,XLIPSE,
     1IWRITE,
     1ICAPSW,ICAPTY,IK,IOUNI3,NUMDIG,IFLAG9,
     1ISUBRO,IBUGA3,IERROR)
C
      IK=2
      SEMLB2=2.0*SEMLBO
      SEMED2=2.0*SEMED
      SEMDB2=2.0*SEMEDB
      XLIPS2=2.0*XLIPSE
      CALL DPMAN6(NPTS,NLAB,
     1XGRAND,XMPS,XMMPS,XMLS,XSE,
     1ASM,XGD,XDL,XGCI,XFW,XBCP,
     1SEMPK2,SEMMP2,SEMLK2,SEMLB2,AKUK2,SESUK2,SET1K2,
     1SET2K2,SEGDK2,SEDLK2,SEHDK2,SERUK2,SEBOK2,
     12.0*SEGCI,SEFWK2,XBCPK2,
     1XMEDME,SEMED2,SEMDB2,SEMEK2,XH15,SEHMK2,XLP,XLIPS2,
     1IWRITE,
     1ICAPSW,ICAPTY,IK,IOUNI4,NUMDIG,IFLAG9,
     1ISUBRO,IBUGA3,IERROR)
C
      GOTO8000
C
 8000 CONTINUE
C
C     RESET "ASIS" MODE
C
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'HTML')THEN
 5195   FORMAT('<PRE>')
        WRITE(ICOUT,5195)
        CALL DPWRST('XXX','WRIT')
C
C     2015/08: NOTE THAT TABLE ROUTINES ALREADY RESET
C              "VERBATIM" MODE, SO THIS IS REDUNDANT
C              HERE.
C
      ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'LATE')THEN
CCCCC   CALL DPCONA(92,IBASLC)
C8190   FORMAT(A1,'begin{verbatim}')
CCCCC   WRITE(ICOUT,8190)IBASLC
CCCCC   CALL DPWRST('XXX','WRIT')
CCCCC   WRITE(ICOUT,999)
CCCCC   CALL DPWRST('XXX','WRIT')
      ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
      ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'WOML')THEN
      ENDIF
C
C     CLOSE OUTPUT FILES
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C     DESCRIBE OUTPUT TO TEMPORARY OUTPUT FILES
C
      IF(IFEEDB.EQ.'OFF')GOTO8099
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'HTML')GOTO8099
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'LATE')GOTO8099
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')GOTO8099
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'WOML')GOTO8099
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8002)
 8002 FORMAT('Automatic Output:')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,8005)
 8005 FORMAT('The following variables were written to the file ',
     1       'dpst1f.dat:')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8011)
 8011 FORMAT('   1. Lab ID')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8021)
 8021 FORMAT('   2. Number of Observations for Lab')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8031)
 8031 FORMAT('   3. Mean of Lab')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8041)
 8041 FORMAT('   4. Variance of Lab')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8051)
 8051 FORMAT('   5. Standard Deviation of Lab')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8054)
 8054 FORMAT('   6. Standard Deviation of Mean of Lab')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,8056)
 8056 FORMAT('The following variables were written to the file ',
     1       'dpst2f.dat:')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8058)
 8058 FORMAT('   1. Consensus Means from the Various Methods')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8060)
 8060 FORMAT('   2. Lower 95% Confidence Limit from the ',
     1       'Various Methods')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8062)
 8062 FORMAT('   3. Upper 95% Confidence Limit from the ',
     1       'Various Methods')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,8064)
 8064 FORMAT('The following variables were written to the file ',
     1       'dpst3f.dat:')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8058)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8066)
 8066 FORMAT('   2. Standard Uncertainty (k=1) for the Various ',
     1       'Methods')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8068)
 8068 FORMAT('   3. Relative Standard (k=1) Uncertainty ',
     1       '(100*Consensus Mean/Standard Uncertainty)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,8070)
 8070 FORMAT('The following variables were written to the file ',
     1       'dpst4f.dat:')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8058)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8072)
 8072 FORMAT('   2. Expanded Uncertainty (k=2) for the Various ',
     1       'Methods')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8074)
 8074 FORMAT('   3. Relative Expanded (k=2) Uncertainty ',
     1       '(100*Consensus Mean/Expanded Uncertainty)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,8075)
 8075 FORMAT('The following variables were written to the file ',
     1       'dpst5f.dat:')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8081)
C8081 FORMAT('   1. Maximum Likelihood Weights')
 8081 FORMAT('   1. Consensus Means from Generalized Confidence ',
     1       'Interval Simulations')
      CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,8083)
C8083 FORMAT('   2. Estimate of Tau for Maximum Likelihood')
CCCCC CALL DPWRST('XXX','BUG ')
C
 8099 CONTINUE
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IBOBCM=IBOBSV
      IBCPCM=IBCPSV
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMAN2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR,ISEDF,ABIAS
 9012   FORMAT('IERROR,ISEDF,ABIAS = ',A4,2X,I8,G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPTS,NUMVAR,NLAB,NUMDIG
 9013   FORMAT('NPTS,NUMVAR,NLAB,NUMDIG = ',4I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAN3(Y1,Y2,Y3,NPTS,NUMVAR,NLAB,
     1                  DAT,X,T,
     1                  AMEAN,ASD,N,
     1                  AMEANF,ASDF,NFULL,NLABF,NPTSF,
     1                  IHLEFT,IHLEF2,IHRIGH,IHRIG2,
     1                  ASM,ASD2,ASD3,
     1                  XGRAND,S2WPOO,SW,
     1                  AMNX,AMXX,
     1                  IWRITE,IOUNI1,
     1                  ICAPSW,ICAPTY,NUMDIG,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--GENERATE INITIAL SUMMARY TABLES FOR CONSENSUS MEANS
C              COMMAND (FULL DATA CASE).
C     PRINTING--YES
C     SUBROUTINES NEEDED--NONE
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/3
C     ORIGINAL VERSION--MARCH     2006. EXTRACTED FROM DPMAN2.
C     UPDATED         --FEBRUARY  2010. USE DPDTA1 AND DPDTA4
C     UPDATED         --JUNE      2010. RETURN VERSIONS OF LAB MEAN AND
C                                       STANDARD DEVIATIONS THAT INCLUDE
C                                       CASES WITH ZERO STANDARD
C                                       DEVIATIONS
C     UPDATED         --OCTOBER   2011. USE "LABID" TO LABEL OUTPUT
C     UPDATED         --JANUARY   2017. OPTION TO SUPPRESS PRINTING
C                                       TABLE (ICMET1)
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      REAL ATEMP
      REAL RIGHT
      REAL XGRAND
      REAL SW
      REAL S2WPOO
      REAL SDGRAN
      REAL AMNX
      REAL AMXX
      REAL ASM
      REAL ASD2
      REAL ASD3
C
C----------------------------------------------------------------
C
      REAL Y1(*)
      REAL Y2(*)
      REAL Y3(*)
      REAL AMEAN(*)
      REAL ASD(*)
      REAL AMEANF(*)
      REAL ASDF(*)
C
      INTEGER N(*)
      INTEGER NFULL(*)
C
      REAL DAT(*)
      DOUBLE PRECISION X(*)
      DOUBLE PRECISION T(*)
C
      COMMON /MPCOM/ T0, T1
C
      INCLUDE 'DPCOST.INC'
C
      CHARACTER*1 IBASLC
      CHARACTER*4 IRTFMD
      COMMON/COMRTF/IRTFMD
C
      PARAMETER(NUMCLI=6)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=50)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*60 ITEXT2(MAXROW,NUMCLI)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      CALL DPCONA(92,IBASLC)
C
      IERROR='NO'
      ISUBN1='DPMA'
      ISUBN2='N3  '
C
      DO110JJ=1,NUMCLI
        DO120II=1,MAXROW
          ITEXT2(II,JJ)=' '
          NCVALU(II,JJ)=0
  120   CONTINUE
  110 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAN3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NUMVAR
   52   FORMAT('NPTS,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NPTS
          WRITE(ICOUT,56)I,Y1(I),Y2(I),Y3(I)
   56     FORMAT('I,Y1(I),Y2(I),Y3(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               ***********************************************
C               **  STEP 2.1--                               **
C               **  COMPUTE OVERALL STATISTICS AND COMPUTE   **
C               **  NUMBER OF DISTINCT LABS.                 **
C               **  IF TWO VARIABLES ENTERED, THEN           **
C               **     Y1 = RESPONSE VARIABLE                **
C               **     Y2 = LAB ID VARIABLE                  **
C               **  1) COPY RESPONSE DATA TO "DAT"           **
C               **  2) DETERMINE NUMBER OF DISTINCT LABS     **
C               **  3) SORT RESPONSE (DAT) BY LAB ID         **
C               ***********************************************
C
      CALL MEAN(Y1,NPTS,IWRITE,XGRAND,IBUGA3,IERROR)
      CALL SD(Y1,NPTS,IWRITE,SDGRAN,IBUGA3,IERROR)
      CALL SORTC(Y2,Y1,NPTS,Y2,DAT)
      CALL DISTIN(Y2,NPTS,IWRITE,Y3,NLAB,IBUGA3,IERROR)
C
      IF(IERROR.EQ.'YES')GOTO9000
CCCCC IF(NLAB.LT.2 .OR. NLAB.GE.NPTS)THEN
      IF(NLAB.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,211)
  211   FORMAT('***** ERROR IN CONSENSUS MEANS ANALYSIS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,212)
  212   FORMAT('      FOR THE TWO VARIABLE SYNTAX OF THE CONSENSUS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,214)
  214   FORMAT('      MEANS COMMAND, THE SECOND VARIABLE IS THE')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,216)
  216   FORMAT('      LAB ID VARIABLE.  THE NUMBER OF LABS SHOULD')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,218)
  218   FORMAT('      BE AT LEAST 2 AND LESS THAN THE NUMBER OF')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,220)
  220   FORMAT('      POINTS.  SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,222)NLAB
  222   FORMAT('      NUMBER OF UNIQUE LAB IDS = ',I8)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,224)NPTS
  224   FORMAT('      TOTAL NUMBER OF POINTS   = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ***********************************************
C               **  STEP 2.2--                               **
C               **  COMPUTE THE SUMMARY STATISTICS BY LAB    **
C               **  1) DETERMINE NUMER OF POINTS IN EACH LAB **
C               **  2) MEAN FOR EACH LAB                     **
C               **  3) SD FOR EACH LAB                       **
C               ***********************************************
C
      AMNX=CPUMAX
      AMXX=CPUMIN
      AMNSD=CPUMAX
      AMXSD=CPUMIN
C
      DO250I=1,NLAB
        ATEMP=Y3(I)
        N(I)=0
        DO259J=1,NPTS
          IF(Y2(J).EQ.ATEMP)THEN
            N(I)=N(I)+1
            Y1(N(I))=DAT(J)
          ENDIF
  259   CONTINUE
C
        IF(N(I).LE.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,254)Y3(I)
  254     FORMAT('      LAB ',F10.5,' HAS NO DATA')
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ELSE
          CALL MEAN(Y1,N(I),IWRITE,RIGHT,IBUGA3,IERROR)
          X(I)=DBLE(RIGHT)
          AMEAN(I)=RIGHT
          IF(AMEAN(I).LT.AMNX)AMNX=AMEAN(I)
          IF(AMEAN(I).GT.AMXX)AMXX=AMEAN(I)
          CALL SD(Y1,N(I),IWRITE,ASD(I),IBUGA3,IERROR)
C
          IF(ASD(I).GT.0.0)THEN
            IF(ASD(I).LT.AMNSD)AMNSD=ASD(I)
            IF(ASD(I).GT.AMXSD)AMXSD=ASD(I)
          ENDIF
C
          CALL SDMEAN(Y1,N(I),IWRITE,RIGHT,IBUGA3,IERROR)
          T(I)=DBLE(RIGHT**2)
C
      ENDIF
C
  250 CONTINUE
C
      CALL MEAN(AMEAN,NLAB,IWRITE,ASM,IBUGA3,IERROR)
      CALL SD(AMEAN,NLAB,IWRITE,ASD2,IBUGA3,IERROR)
C
C     COMPUTE:  SQRT{SUM[(YBAR(I) - YGRAND)**2/(N-1)]}
C
      DSUM1=0.0D0
      DO260I=1,NLAB
        DTERM1=DBLE(AMEAN(I)) - DBLE(XGRAND)
        DSUM1=DSUM1 + DTERM1**2
  260 CONTINUE
      DTERM1=DSQRT(DSUM1/DBLE(NLAB-1))
      ASD3=REAL(DTERM1)
C
      DSUM1=0.0D0
      DSUM2=0.0D0
      DSUM3=0.0D0
C
      DO270J=1,NLAB
        DTERM1=DBLE(N(J)-1.0D0)
        DSUM2=DSUM2 + DTERM1*(DBLE(ASD(J))**2)
        DSUM3=DSUM3 + DTERM1
        DTERM1=DBLE(N(J))
        IF(DTERM1.NE.0.0D0)THEN
          DSUM1=DSUM1 + DBLE(ASD(J))**2/DTERM1
        ENDIF
  270 CONTINUE
C
      DTEMP=DSQRT(DSUM1)/DBLE(NLAB)
      S2WPOO=DSUM2/DSUM3
      SW=REAL(DTEMP)
C
      IF(IPRINT.EQ.'OFF' .OR. ICMET1.EQ.'OFF')GOTO8000
C
      ITITLE='Consensus Means Analysis'
      NCTITL=24
      ITITLZ='(Full Sample Case)'
      NCTITZ=18
C
      ICNT=1
      ITEXT(ICNT)='Data Summary:'
      NCTEXT(ICNT)=13
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Response Variable: '
      WRITE(ITEXT(ICNT)(20:23),'(A4)')IHLEFT
      WRITE(ITEXT(ICNT)(24:27),'(A4)')IHLEF2
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Lab-ID Variable: '
      WRITE(ITEXT(ICNT)(18:21),'(A4)')IHRIGH
      WRITE(ITEXT(ICNT)(22:25),'(A4)')IHRIG2
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(NPTS)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Grand Mean:'
      NCTEXT(ICNT)=11
      AVALUE(ICNT)=XGRAND
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Grand Standard Deviation:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=SDGRAN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Total Number of Labs:'
      NCTEXT(ICNT)=21
      AVALUE(ICNT)=NLAB
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Minimum Lab Mean:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=AMNX
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Maximum Lab Mean:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=AMXX
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Minimum Lab SD:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=AMNSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Maximum Lab SD:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=AMXSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Mean of Lab Means:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=ASM
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='SD of Lab Means:'
      NCTEXT(ICNT)=16
      AVALUE(ICNT)=ASD2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='SD of Lab Means (wrt to grand mean):'
      NCTEXT(ICNT)=36
      AVALUE(ICNT)=ASD3
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Within Lab (pooled) SD:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=SQRT(S2WPOO)
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Within Lab (pooled) Variance:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=S2WPOO
      IDIGIT(ICNT)=NUMDIG
C
      NUMROW=ICNT
      DO310I=1,NUMROW
        NTOT(I)=15
  310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.FALSE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
      ITITL9=' '
      NCTIT9=0
C
      ITITL9=' '
      NCTIT9=0
      ITITLE(1:42)='Table 1: Summary Statistics by Lab'
      NCTITL=34
      NUMLIN=3
      NUMCOL=6
      ITITL2(1,1)=' '
      ITITL2(2,1)='Lab'
      ITITL2(3,1)='ID'
      NCTIT2(1,1)=0
      NCTIT2(2,1)=3
      NCTIT2(3,1)=2
      ITITL2(1,2)=' '
      ITITL2(2,2)=' '
      ITITL2(3,2)='n(i)'
      NCTIT2(1,2)=0
      NCTIT2(2,2)=0
      NCTIT2(3,2)=4
      ITITL2(1,3)=' '
      ITITL2(2,3)=' '
      ITITL2(3,3)='Mean'
      NCTIT2(1,3)=0
      NCTIT2(2,3)=0
      NCTIT2(3,3)=4
      ITITL2(1,4)=' '
      ITITL2(2,4)=' '
      ITITL2(3,4)='Variance'
      NCTIT2(1,4)=0
      NCTIT2(2,4)=0
      NCTIT2(3,4)=8
      ITITL2(1,5)=' '
      ITITL2(2,5)='Standard'
      ITITL2(3,5)='Deviation'
      NCTIT2(1,5)=0
      NCTIT2(2,5)=8
      NCTIT2(3,5)=9
      ITITL2(1,6)='Standard'
      ITITL2(2,6)='Deviation'
      ITITL2(3,6)='of the Mean'
      NCTIT2(1,6)=8
      NCTIT2(2,6)=9
      NCTIT2(3,6)=11
      NMAX=0
      DO2421I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1 .OR. I.EQ.2)NTOT(I)=8
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=NUMDIG
        ITYPCO(I)='NUME'
 2421 CONTINUE
C
      IWHTML(1)=75
      IWHTML(2)=75
      IWHTML(3)=125
      IWHTML(4)=125
      IWHTML(5)=125
      IWHTML(6)=125
      IWRTF(1)=800
      IWRTF(2)=IWRTF(1)+800
      IWRTF(3)=IWRTF(2)+1440
      IWRTF(4)=IWRTF(3)+1440
      IWRTF(5)=IWRTF(4)+1440
      IWRTF(6)=IWRTF(5)+1440
      IFRST=.FALSE.
      ILAST=.TRUE.
C
C     PRINT OUT 50 LINES AT A TIME
C
      NSTRT=1
      NSTOP=MIN(NLAB,50)
C
 2420 CONTINUE
      IDIGIT(1)=0
      IDIGIT(2)=0
      ICNT=0
      DO2423I=NSTRT,NSTOP
        ICNT=ICNT+1
        NCTEXT(ICNT)=0
        AMAT(ICNT,1)=Y3(I)
        AMAT(ICNT,2)=REAL(N(I))
        AMAT(ICNT,3)=X(I)
        AMAT(ICNT,4)=ASD(I)**2
        AMAT(ICNT,5)=ASD(I)
        AMAT(ICNT,6)=SQRT(T(I))
        DO2425J=1,NUMCOL
          NCVALU(ICNT,J)=0
 2425   CONTINUE
 2423 CONTINUE
C
      NLABT=NSTOP-NSTRT+1
      CALL DPDTA4(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            ITEXT,NCVALU,AMAT,ITYPCO,MAXROW,NLABT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
       IF(NSTOP.LT.NLAB)THEN
         NSTRT=NSTOP+1
         NSTOP=NSTRT+50-1
         IF(NSTOP.GT.NLAB)NSTOP=NLAB
         GOTO2420
       ENDIF
C
      DO4190I=1,NLAB
CCCCC   WRITE(IOUNI1,4196)REAL(I),REAL(N(I)),X(I),ASD(I)**2,
        WRITE(IOUNI1,4196)Y3(I),REAL(N(I)),X(I),ASD(I)**2,
     1                    ASD(I),SQRT(T(I))
 4196   FORMAT(F6.0,2X,F6.0,2X,4E15.7)
 4190 CONTINUE
C
C               *************************************
C               **  STEP 80--                      **
C               **  REMOVE ANY LABS WITH LESS THAN **
C               **  TWO OBSERVATIONS               **
C               *************************************
C
 8000 CONTINUE
      ICNT=0
      ICNT2=0
      NLABF=NLAB
      NPTSF=NPTS
      DO9100I=1,NLAB
        AMEANF(I)=AMEAN(I)
        ASDF(I)=ASD(I)
        NFULL(I)=N(I)
        IF(ASD(I).GT.0.0)THEN
          ICNT=ICNT+1
          AMEAN(ICNT)=AMEAN(I)
          ASD(ICNT)=ASD(I)
          N(ICNT)=N(I)
          Y3(ICNT)=Y3(I)
          X(ICNT)=X(I)
          T(ICNT)=T(I)
          ICNT2=ICNT2+N(ICNT)
        ELSE
          IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'HTML')THEN
            WRITE(ICOUT,9201)
 9201       FORMAT('<PRE>')
            CALL DPWRST('XXX','WRIT')
          ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'LATE')THEN
            WRITE(ICOUT,9301)IBASLC
 9301       FORMAT(A1,'begin{verbatim}')
            CALL DPWRST('XXX','WRIT')
          ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
            IRTFMD='VERB'
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          WRITE(ICOUT,9103)I
 9103     FORMAT('LAB ',I8,' HAS A NON-POSITIVE STANDARD DEVIATION.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,9105)
 9105     FORMAT('THIS LAB WILL BE OMITTED FROM THE ANALYSIS EXCEPT ',
     1           'FOR')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,9107)
 9107     FORMAT('GRAND MEAN, MEAN/MEDIAN OF MEANS, BOB, AND BCP ',
     1           'METHODS.')
          CALL DPWRST('XXX','WRIT')
C
          IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'HTML')THEN
            WRITE(ICOUT,9211)
 9211       FORMAT('</PRE>')
            CALL DPWRST('XXX','WRIT')
          ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'LATE')THEN
            WRITE(ICOUT,9311)IBASLC
 9311       FORMAT(A1,'end{verbatim}')
            CALL DPWRST('XXX','WRIT')
          ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
            IRTFMD='OFF'
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
 9100 CONTINUE
      NLAB=ICNT
      NPTS=ICNT2
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMAN3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPTS,NUMVAR,NLAB
 9013   FORMAT('NPTS,NUMVAR,NLAB = ',3I8)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,NLAB
          WRITE(ICOUT,9023)I,AMEAN(I),ASD(I)
 9023     FORMAT('I,AMEAN(I),ASD(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAN4(Y1,Y2,Y3,PLABID,NLAB,NTOT,NUMVAR,
     1                  DAT,X,T,
     1                  AMEAN,ASD,N,
     1                  AMEANF,ASDF,NFULL,NLABF,NTOTF,
     1                  IHLEFT,IHLEF2,IHRIGH,IHRIG2,IHRI21,IHRI22,
     1                  ASM,ASD2,ASD3,SDGRAN,
     1                  XGRAND,S2WPOO,SW,
     1                  AMNX,AMXX,
     1                  IWRITE,IOUNI1,
     1                  ICAPSW,ICAPTY,NUMDIG,IUNCFL,IDFFL,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--GENERATE INITIAL SUMMARY TABLES FOR CONSENSUS MEANS
C              COMMAND (SUMMARY DATA CASE).
C     PRINTING--YES
C     SUBROUTINES NEEDED--NONE
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/3
C     ORIGINAL VERSION--MARCH     2006. EXTRACTED FROM DPMAN2.
C     UPDATED         --FEBRUARY  2010. USE DPDTA1 AND DPDTA4
C     UPDATED         --JUNE      2010. SOME METHODS CAN ACCOMODATE
C                                       ZERO STANDARD DEVIATIONS
C     UPDATED         --OCTOBER   2011. SUPPORT FOR OPTIONAL LAB-ID
C                                       VARIABLE
C     UPDATED         --OCTOBER   2014. SUPPORT FOR CASE WHERE
C                                       UNCERTAINTY REPORTED RATHER
C                                       THAN SD AND SAMPLE SIZE
C     UPDATED         --JANUARY   2017. OPTION TO SUPPRESS PRINTING
C                                       TABLE (ICMET1)
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IUNCFL
      CHARACTER*4 IDFFL
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IHRI21
      CHARACTER*4 IHRI22
C
      REAL XGRAND
      REAL SW
      REAL S2WPOO
      REAL SDGRAN
      REAL AMNX
      REAL AMXX
      REAL ASM
      REAL ASD2
      REAL ASD3
C
C----------------------------------------------------------------
C
      REAL Y1(*)
      REAL Y2(*)
      REAL Y3(*)
      REAL PLABID(*)
      REAL AMEAN(*)
      REAL ASD(*)
      REAL AMEANF(*)
      REAL ASDF(*)
C
      INTEGER N(*)
      INTEGER NFULL(*)
C
      REAL DAT(*)
      DOUBLE PRECISION X(*)
      DOUBLE PRECISION T(*)
C
      COMMON /MPCOM/ T0, T1
C
      CHARACTER*4 IRTFMD
      COMMON/COMRTF/IRTFMD
C
      PARAMETER(NUMCLI=6)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=50)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*60 ITEXT2(MAXROW,NUMCLI)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT9(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      IUNCFL='OFF'
      IDFFL='OFF'
      ISUBN1='DPMA'
      ISUBN2='N4  '
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN4')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAN4--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NLAB,NTOT,IOUNI1
   52   FORMAT('NPTS,NTOT,IOUNI1 = ',3I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NLAB
          WRITE(ICOUT,56)I,Y1(I),Y2(I),Y3(I),DAT(I)
   56     FORMAT('I,Y1(I),Y2(I),Y3(I),DAT(I) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               ***********************************************
C               **  STEP 2.2--                               **
C               **  COMPUTE THE SUMMARY STATISTICS BY LAB    **
C               **  1) DETERMINE NUMER OF POINTS IN EACH LAB **
C               **  2) MEAN FOR EACH LAB                     **
C               **  3) SD FOR EACH LAB                       **
C               ***********************************************
C
C     2014/10: SOME LABS MAY REPORT AN UNCERTAINTY VALUE RATHER THAN
C              A STANDARD DEVIATION.  SPECIFICALLY, IF THE SAMPLE SIZE
C              IS NON-POSITIVE, THEN IT IS ASSUMED THAT THE STANDARD
C              DEVIATION IS AN "UNCERTAINTY" VALUE.  THIS APPROACH
C              ALLOWS A MIX OF "SD/SAMPLE SIZE" AND "UNCERTAINTY".
C              THIS IS USEFUL BECAUSE INTERNAL LABS TYPICALLY HAVE
C              THE RAW STANDARD DEVIATION AND SAMPLE SIZE WHILE
C              EXTERNAL LABS SOMETIMES ONLY REPORT AN UNCERTAINTY
C              VALUE.
C
C              NOTE THAT IN THIS CASE, A NEGATIVE VALUE FOR THE SAMPLE
C              SIZE WILL BE INTERPRETED AS AN "EFFECTIVE DEGREES OF
C              FREEDOM" WHILE A VALUE OF ZERO INDICATES NO EFFECTIVE
C              DEGREES OF FREEDOM ARE AVAILABLE.
C
C              NOTE THAT IF ONE OR MORE LABS ONLY REPORT AN UNCERTATINY
C              VALUE, THEN CERTAIN SUMMARY STATISTICS CANNOT BE COMPUTED.
C
      T0=10000000.D0
      T1=-T0
C
      AMNX=CPUMAX
      AMXX=CPUMIN
      AMNSD=CPUMAX
      AMXSD=CPUMIN
C
      DO110JJ=1,NUMCLI
        DO120II=1,MAXROW
          ITEXT2(II,JJ)=' '
          NCVALU(II,JJ)=0
          AMAT(II,JJ)=0.0
  120   CONTINUE
  110 CONTINUE
C
      DO250I=1,NLAB
C
        X(I)=DBLE(Y1(I))
        IF(X(I).LT.T0) T0=X(I)
        IF(X(I).GT.T1) T1=X(I)
        AMEAN(I)=Y1(I)
        ASD(I)=Y2(I)
        IF(Y3(I).GE.0)THEN
          N(I)=INT(Y3(I)+0.5)
        ELSE
          N(I)=INT(Y3(I)-0.5)
        ENDIF
        IF(NUMVAR.EQ.3)PLABID(I)=REAL(I)
        IF(N(I).LE.0)THEN
CCCCC     WRITE(ICOUT,999)
CCCCC     CALL DPWRST('XXX','WRIT')
CCCCC     WRITE(ICOUT,211)
  211     FORMAT('***** ERROR IN CONSENSUS MEANS ANALYSIS--')
CCCCC     CALL DPWRST('XXX','WRIT')
CCCCC     WRITE(ICOUT,254)I
CC254     FORMAT('      LAB ',I8,' HAS NO DATA')
CCCCC     CALL DPWRST('XXX','WRIT')
CCCCC     IERROR='YES'
CCCCC     GOTO9000
          IUNCFL='ON'
CCCCC     N(I)=0
        ENDIF
C
        IF(ASD(I).LT.0.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,211)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,256)I,ASD(I)
  256     FORMAT('      LAB ',I8,' HAS NEGATIVE STANDARD DEVIATION (',
     1           G15.7,')')
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IF(N(I).EQ.0)THEN
          T(I)=DBLE(ASD(I))**2
          IDFFL='NONE'
        ELSEIF(N(I).LT.0)THEN
          T(I)=DBLE(ASD(I))**2
          IF(IDFFL.NE.'NONE')IDFFL='ON'
        ELSE
          T(I)=DBLE(ASD(I))**2/DBLE(N(I))
        ENDIF
        IF(AMEAN(I).LT.AMNX)AMNX=AMEAN(I)
        IF(AMEAN(I).GT.AMXX)AMXX=AMEAN(I)
C
        IF(ASD(I).GT.0.0)THEN
          IF(ASD(I).LT.AMNSD)AMNSD=ASD(I)
          IF(ASD(I).GT.AMXSD)AMXSD=ASD(I)
        ENDIF
C
  250 CONTINUE
C
      CALL MEAN(AMEAN,NLAB,IWRITE,ASM,IBUGA3,IERROR)
      CALL SD(AMEAN,NLAB,IWRITE,ASD2,IBUGA3,IERROR)
C
C     FOLLOWING COMPUTATIONS ONLY AVAILABLE IF A POSITIVE SAMPLE SIZE
C     IS GIVEN FOR EACH LAB.
C
      IF(IUNCFL.EQ.'OFF')THEN
        DSUM1=0.0D0
        DO255I=1,NLAB
          DSUM1=DSUM1 + (DBLE(N(I))/DBLE(NTOT))*DBLE(AMEAN(I))
  255   CONTINUE
        XGRAND=DSUM1
C
        DSUM1=0.0D0
        DO258I=1,NLAB
          DSUM1=DSUM1 + DBLE(N(I))*DBLE(ASD(I))
  258   CONTINUE
        SDGRAN=REAL(DSUM1/DBLE(NTOT-NLAB))
C
C       COMPUTE:  SQRT{SUM[(YBAR(I) - YGRAND)**2/(N-1)]}
C
        DSUM1=0.0D0
        DO260I=1,NLAB
          DTERM1=DBLE(AMEAN(I)) - DBLE(XGRAND)
          DSUM1=DSUM1 + DTERM1**2
  260   CONTINUE
        DTERM1=DSQRT(DSUM1/DBLE(NLAB-1))
        ASD3=REAL(DTERM1)
C
        DSUM1=0.0D0
        DSUM2=0.0D0
        DSUM3=0.0D0
        DO270J=1,NLAB
          DTERM1=DBLE(N(J)-1.0D0)
          DSUM2=DSUM2 + DTERM1*(DBLE(ASD(J))**2)
          DSUM3=DSUM3 + DTERM1
          DSUM1=DSUM1 + DBLE(ASD(J))**2/DBLE(N(J))
  270   CONTINUE
        XJUNK=XGRAND
        DTEMP=DSQRT(DSUM1)/DBLE(NLAB)
        S2WPOO=DSUM2/DSUM3
        SW=REAL(DTEMP)
      ENDIF
C
      IF(IPRINT.EQ.'OFF')GOTO8000
C
      ITITLE='Consensus Means Analysis'
      NCTITL=24
      ITITLZ='(Summary Statistics Case)'
      NCTITZ=25
C
      ICNT=1
      ITEXT(ICNT)='Data Summary:'
      NCTEXT(ICNT)=13
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Mean Variable: '
      WRITE(ITEXT(ICNT)(16:19),'(A4)')IHLEFT
      WRITE(ITEXT(ICNT)(20:23),'(A4)')IHLEF2
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='SD Variable: '
      WRITE(ITEXT(ICNT)(14:17),'(A4)')IHRIGH
      WRITE(ITEXT(ICNT)(18:21),'(A4)')IHRIG2
      NCTEXT(ICNT)=21
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Size Variable: '
      WRITE(ITEXT(ICNT)(23:26),'(A4)')IHRI21
      WRITE(ITEXT(ICNT)(27:30),'(A4)')IHRI22
      NCTEXT(ICNT)=30
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IF(IUNCFL.EQ.'OFF')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Total Number of Observations:'
        NCTEXT(ICNT)=29
        AVALUE(ICNT)=REAL(NTOT)
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Grand Mean:'
        NCTEXT(ICNT)=11
        AVALUE(ICNT)=XGRAND
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Grand Standard Deviation:'
        NCTEXT(ICNT)=25
        AVALUE(ICNT)=SDGRAN
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      ICNT=ICNT+1
      ITEXT(ICNT)='Total Number of Labs:'
      NCTEXT(ICNT)=21
      AVALUE(ICNT)=NLAB
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Minimum Lab Mean:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=AMNX
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Maximum Lab Mean:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=AMXX
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Minimum Lab SD:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=AMNSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Maximum Lab SD:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=AMXSD
      IDIGIT(ICNT)=NUMDIG
      IF(IUNCFL.EQ.'OFF')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Within Lab (pooled) SD:'
        NCTEXT(ICNT)=23
        AVALUE(ICNT)=SQRT(S2WPOO)
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Within Lab (pooled) Variance:'
        NCTEXT(ICNT)=29
        AVALUE(ICNT)=S2WPOO
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Mean of Lab Means:'
        NCTEXT(ICNT)=18
        AVALUE(ICNT)=ASM
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='SD of Lab Means:'
        NCTEXT(ICNT)=16
        AVALUE(ICNT)=ASD2
        IDIGIT(ICNT)=NUMDIG
      ENDIF
C
      NUMROW=ICNT
      DO310I=1,NUMROW
        NTOT9(I)=15
  310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.FALSE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT9,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
      ITITL9=' '
      NCTIT9=0
C
      IF(IUNCFL.EQ.'OFF')THEN
        ITITL9=' '
        NCTIT9=0
        ITITLE(1:42)='Table 1: Summary Statistics by Lab'
        NCTITL=34
        NUMLIN=3
        NUMCOL=6
        ITITL2(1,1)=' '
        ITITL2(2,1)='Lab'
        ITITL2(3,1)='ID'
        NCTIT2(1,1)=0
        NCTIT2(2,1)=3
        NCTIT2(3,1)=2
        ITITL2(1,2)=' '
        ITITL2(2,2)=' '
        ITITL2(3,2)='n(i)'
        NCTIT2(1,2)=0
        NCTIT2(2,2)=0
        NCTIT2(3,2)=4
        ITITL2(1,3)=' '
        ITITL2(2,3)=' '
        ITITL2(3,3)='Mean'
        NCTIT2(1,3)=0
        NCTIT2(2,3)=0
        NCTIT2(3,3)=4
        ITITL2(1,4)=' '
        ITITL2(2,4)=' '
        ITITL2(3,4)='Variance'
        NCTIT2(1,4)=0
        NCTIT2(2,4)=0
        NCTIT2(3,4)=8
        ITITL2(1,5)=' '
        ITITL2(2,5)='Standard'
        ITITL2(3,5)='Deviation'
        NCTIT2(1,5)=0
        NCTIT2(2,5)=8
        NCTIT2(3,5)=9
        ITITL2(1,6)='Standard'
        ITITL2(2,6)='Deviation'
        ITITL2(3,6)='of the Mean'
        NCTIT2(1,6)=8
        NCTIT2(2,6)=9
        NCTIT2(3,6)=11
        NMAX=0
        DO2401I=1,NUMCOL
          VALIGN(I)='b'
          ALIGN(I)='r'
          NTOT9(I)=15
          IF(I.EQ.1 .OR. I.EQ.2)NTOT9(I)=8
          NMAX=NMAX+NTOT9(I)
          IDIGIT(I)=NUMDIG
          ITYPCO(I)='NUME'
 2401   CONTINUE
C
        IWHTML(1)=75
        IWHTML(2)=75
        IWHTML(3)=125
        IWHTML(4)=125
        IWHTML(5)=125
        IWHTML(6)=125
        IWRTF(1)=800
        IWRTF(2)=IWRTF(1)+800
        IWRTF(3)=IWRTF(2)+1440
        IWRTF(4)=IWRTF(3)+1440
        IWRTF(5)=IWRTF(4)+1440
        IWRTF(6)=IWRTF(5)+1440
        IFRST=.TRUE.
        ILAST=.TRUE.
C
C       PRINT OUT 50 LINES AT A TIME
C
        NSTRT=1
        NSTOP=MIN(NLAB,50)
C
 2420   CONTINUE
        IDIGIT(1)=0
        IDIGIT(2)=0
        ICNT=0
        DO2423I=NSTRT,NSTOP
          ICNT=ICNT+1
          NCTEXT(ICNT)=0
          AMAT(ICNT,1)=PLABID(I)
          AMAT(ICNT,2)=REAL(N(I))
          AMAT(ICNT,3)=X(I)
          AMAT(ICNT,4)=ASD(I)**2
          AMAT(ICNT,5)=ASD(I)
          AMAT(ICNT,6)=SQRT(T(I))
          DO2425J=1,NUMCOL
            NCVALU(ICNT,J)=0
            ITEXT2(ICNT,J)=' '
 2425     CONTINUE
 2423   CONTINUE
C
        NLABT=NSTOP-NSTRT+1
        IF(ICMET1.EQ.'ON')THEN
          CALL DPDTA4(ITITLE,NCTITL,
     1                ITITL9,NCTIT9,ITITL2,NCTIT2,
     1                MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1                ITEXT2,NCVALU,AMAT,ITYPCO,MAXROW,NLABT,
     1                IDIGIT,NTOT9,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1                ICAPSW,ICAPTY,IFRST,ILAST,
     1                ISUBRO,IBUGA3,IERROR)
        ENDIF
C
        IF(NSTOP.LT.NLAB)THEN
          NSTRT=NSTOP+1
          NSTOP=NSTRT+50-1
          IF(NSTOP.GT.NLAB)NSTOP=NLAB
          GOTO2420
        ENDIF
      ELSE
        ITITL9=' '
        NCTIT9=0
        ITITLE(1:42)='Table 1: Summary Statistics by Lab'
        NCTITL=34
        NUMLIN=2
        NUMCOL=4
        ITITL2(1,1)='Lab'
        ITITL2(2,1)='ID'
        NCTIT2(1,1)=3
        NCTIT2(2,1)=2
        ITITL2(1,2)=' '
        ITITL2(2,2)='Mean'
        NCTIT2(1,2)=0
        NCTIT2(2,2)=4
        ITITL2(1,3)=' '
        ITITL2(2,3)='Uncertainty'
        NCTIT2(1,3)=0
        NCTIT2(2,3)=11
        ITITL2(1,4)='Effective'
        ITITL2(2,4)='Deg of Freedom'
        NCTIT2(1,4)=9
        NCTIT2(2,4)=14
        NMAX=0
        DO2501I=1,NUMCOL
          VALIGN(I)='b'
          ALIGN(I)='r'
          NTOT9(I)=15
          IF(I.EQ.1)NTOT9(I)=8
          NMAX=NMAX+NTOT9(I)
          IDIGIT(I)=NUMDIG
          ITYPCO(I)='NUME'
 2501   CONTINUE
C
        IWHTML(1)=75
        IWHTML(2)=125
        IWHTML(3)=125
        IWRTF(1)=800
        IWRTF(2)=IWRTF(1)+1440
        IWRTF(3)=IWRTF(2)+1440
        IFRST=.TRUE.
        ILAST=.TRUE.
C
C       PRINT OUT 50 LINES AT A TIME
C
        NSTRT=1
        NSTOP=MIN(NLAB,50)
C
 2520   CONTINUE
        IDIGIT(1)=0
        IDIGIT(4)=0
        ICNT=0
        DO2523I=NSTRT,NSTOP
          ICNT=ICNT+1
          NCTEXT(ICNT)=0
          AMAT(ICNT,1)=PLABID(I)
          AMAT(ICNT,2)=X(I)
          AMAT(ICNT,3)=SQRT(T(I))
          IF(N(I).GE.0)THEN
            AMAT(ICNT,4)=REAL(N(I)+0.1)
          ELSE
            AVAL=REAL(N(I))
            AVAL=ABS(AVAL)
            AMAT(ICNT,4)=AVAL+0.1
          ENDIF
          DO2525J=1,NUMCOL
            NCVALU(ICNT,J)=0
            ITEXT2(ICNT,J)=' '
 2525    CONTINUE
 2523  CONTINUE
C
        NLABT=NSTOP-NSTRT+1
        IF(ICMET1.EQ.'ON')THEN
          CALL DPDTA4(ITITLE,NCTITL,
     1               ITITL9,NCTIT9,ITITL2,NCTIT2,
     1               MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1               ITEXT2,NCVALU,AMAT,ITYPCO,MAXROW,NLABT,
     1               IDIGIT,NTOT9,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1               ICAPSW,ICAPTY,IFRST,ILAST,
     1               ISUBRO,IBUGA3,IERROR)
        ENDIF
C
        IF(NSTOP.LT.NLAB)THEN
          NSTRT=NSTOP+1
          NSTOP=NSTRT+50-1
          IF(NSTOP.GT.NLAB)NSTOP=NLAB
          GOTO2520
        ENDIF
      ENDIF
C
      DO4190I=1,NLAB
CCCCC   WRITE(IOUNI1,4196)REAL(I),REAL(N(I)),X(I),ASD(I)**2,
        WRITE(IOUNI1,4196)PLABID(I),REAL(N(I)),X(I),ASD(I)**2,
     1                    ASD(I),SQRT(T(I))
 4196   FORMAT(F6.0,2X,F6.0,2X,4E15.7)
 4190 CONTINUE
C
C               *****************************************
C               **  STEP 80--                          **
C               **  REMOVE ANY LABS WITH NON-POSITIVE  **
C               **  UNCERTAINTY                        **
C               *****************************************
C
 8000 CONTINUE
      ICNT=0
      ICNT2=0
      NLABF=NLAB
      NTOTF=NTOT
      DO9100I=1,NLAB
        AMEANF(I)=AMEAN(I)
        ASDF(I)=ASD(I)
        NFULL(I)=N(I)
        IF(ASD(I).GT.0.0)THEN
          ICNT=ICNT+1
          AMEAN(ICNT)=AMEAN(I)
          ASD(ICNT)=ASD(I)
          N(ICNT)=N(I)
          PLABID(ICNT)=PLABID(I)
          T(ICNT)=T(I)
          X(ICNT)=X(I)
          ICNT2=ICNT2+N(I)
        ELSE
          IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'HTML')THEN
            WRITE(ICOUT,9201)
 9201       FORMAT('<PRE>')
            CALL DPWRST('XXX','WRIT')
          ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'LATE')THEN
            WRITE(ICOUT,9301)IBASLC
 9301       FORMAT(A1,'begin{verbatim}')
            CALL DPWRST('XXX','WRIT')
          ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
            IRTFMD='VERB'
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          WRITE(ICOUT,9103)I
 9103     FORMAT('LAB ',I8,' HAS A NON-POSITIVE STANDARD DEVIATION.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,9105)
 9105     FORMAT('THIS LAB WILL BE OMITTED FROM THE ANALYSIS EXCEPT ',
     1           'FOR')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,9107)
 9107     FORMAT('METHODS GRAND MEAN, MEAN/MEDIAN OF MEANS, BOB, AND ',
     1           'BCP.')
          CALL DPWRST('XXX','WRIT')
C
          IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'HTML')THEN
            WRITE(ICOUT,9211)
 9211       FORMAT('</PRE>')
            CALL DPWRST('XXX','WRIT')
          ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'LATE')THEN
            WRITE(ICOUT,9311)IBASLC
 9311       FORMAT(A1,'end{verbatim}')
            CALL DPWRST('XXX','WRIT')
          ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
            IRTFMD='OFF'
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
 9100 CONTINUE
      NLAB=ICNT
      NTOT=ICNT2
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN4')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMAN4--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NTOT
 9013   FORMAT('NTOT = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IBUGA3
 9014   FORMAT('IBUGA3 = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAN5(NPTS,NLAB,
     1                  XGRAND,XMPS,XMMPS,XMLS,XSE,
     1                  ASM,XGD,XGCI,XDL,XFAIR,XBCP,
     1                  DLOWMP,DHIGMP,DLOWMM,DHIGMM,DLOWML,DHIGML,
     1                  DLOWM2,DHIGM2,
     1                  DLOWBO,DHIGBO,DLOWSE,DHIGSE,DLOWT1,DHIGT1,
     1                  DLOWT2,DHIGT2,DLOWGD,DHIGGD,DLOWGC,DHIGGC,
     1                  DLOWDL,DHIGDL,DLOWD2,DHIGD2,DLOWD3,DHIGD3,
     1                  DLOWD4,DHIGD4,DLOWD5,DHIGD5,DLOWD6,DHIGD6,
     1                  DLOWFW,DHIGFW,DLOWF2,DHIGF2,DLOWF3,DHIGF3,
     1                  DLOWBC,DHIGBC,
     1                  XMEDME,SEMED,
     1                  DLWME0,DHGME0,DLWME1,DHGME1,
     1                  DLWME2,DHGME2,DLWME3,DHGME3,
     1                  SEMPK1,SEMMP1,SEMLK1,SEMLBO,AKUK1,SESUK1,SET2K1,
     1                  SET1K1,SEGDK1,SEDLK1,SEHDK1,SERUK1,SEBOK1,SEGCI,
     1                  SEFWK1,XBCPK1,SEMEDB,ALOWCL,AUPPCL,SEMEK1,
     1                  XH15,SEHMK1,XLP,SELPK1,ALOWLP,AUPPLP,
     1                  IWRITE,IOUNI2,
     1                  ICAPSW,ICAPTY,NUMDIG,IFLAG9,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--GENERATE THE CONFIDENCE INTERVAL TABLE FOR THE
C              CONSENSUS MEANS COMMAND
C     PRINTING--YES
C     SUBROUTINES NEEDED--NONE
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/3
C     ORIGINAL VERSION--MARCH     2006. EXTRACTED FROM DPMAN2
C                                       ROUTINE
C     UPDATED  VERSION--JUNE      2006. ADD FAIRWEATHER, BCP
C     UPDATED  VERSION--FEBRUARY  2010. USE DPDTA4 TO PRINT TABLE
C     UPDATED  VERSION--MAY       2010. MODIFICATIONS TO DERSIMONIAN-LARID
C     UPDATED  VERSION--OCTOBER   2011. DERSIMONIAN-LARID BOOTSTRAP
C     UPDATED  VERSION--OCTOBER   2011. VANGEL-RUKHIN BOOTSTRAP
C     UPDATED  VERSION--OCTOBER   2012. DERSIMONIAN-LARID BOOTSTRAP UPDATES
C     UPDATED  VERSION--OCTOBER   2012. MEDIAN OF MEANS UPDATE
C     UPDATED  VERSION--JUNE      2013. ADD "UNCERTAINTY INTERVAL" TO
C                                       TABLE
C     UPDATED  VERSION--AUGUST    2014. FOR DSL, K FACTOR WAS COMPUTED
C                                       USING MANDEL-PAULE CONSENSUS
C                                       VALUE.  CORRECTED TO USE DSL
C                                       CONSENSUS VALUE.
C     UPDATED  VERSION--JANUARY   2017. OPTION TO SUPPRESS PRINTING
C                                       TABLE (ICMET3)
C     UPDATED  VERSION--MARCH     2017. MEDIAN OF MEANS UPDATE
C     UPDATED  VERSION--MARCH     2017. HUBER H15 MEAN OF MEANS UPDATE
C     UPDATED  VERSION--APRIL     2023. LINEAR POOL UPDATE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      CHARACTER*45 IMETH
C
      REAL XMPS
      REAL XMMPS
      REAL XMLS
      REAL ASM
      REAL XGRAND
      REAL XGD
      REAL XSE
      REAL XGCI
      REAL XDL
      REAL XFAIR
      REAL XBCP
      REAL XMEDME
      REAL SEMED
      REAL SEMPK1
      REAL SEMMP1
      REAL SEMLK1
      REAL SEMLBO
      REAL SEHDK1
      REAL SEGCI
      REAL AKUK1
      REAL SESUK1
      REAL SET2K1
      REAL SET1K1
      REAL SEGDK1
      REAL SEDLK1
      REAL SEFWK1
      REAL XBCPK1
      REAL SEMEDB
      REAL SERUK1
      REAL ALOWCL
      REAL AUPPCL
      REAL SEMEK1
      REAL XH15
      REAL SEHMK1
      REAL XLP
      REAL SELPK1
      REAL ALOWLP
      REAL AUPPLP
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER(MAXLIN=2)
      PARAMETER(MAXROW=20)
      PARAMETER(MAXCOL=5)
      CHARACTER*4  ALIGN(MAXCOL)
      CHARACTER*4  VALIGN(MAXCOL)
      INTEGER      IDIGIT(MAXCOL)
      INTEGER      NTOT(MAXCOL)
      INTEGER      IWHTML(MAXCOL)
      INTEGER      IWRTF(MAXCOL)
      INTEGER      NCTEXT(MAXROW,MAXCOL)
      INTEGER      NCTIT2(MAXLIN,MAXCOL)
      CHARACTER*40 ITITL9
      CHARACTER*40 ITITLE
      CHARACTER*20 ITITL2(MAXLIN,MAXCOL)
      CHARACTER*40 ITEXT(MAXROW,MAXCOL)
      CHARACTER*4  ITYPCO(MAXCOL)
      REAL         AMAT(MAXROW,MAXCOL)
      LOGICAL      IFRST
      LOGICAL      ILAST
      LOGICAL      IFLAG9
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPMA'
      ISUBN2='N5  '
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN5')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAN5--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NLAB,IWRITE
   52   FORMAT('NPTS,NLAB,IWRITE = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)AKUK1,DHGME0,DHGME1,DHGME2,DHGME3
   54   FORMAT('AKUK1,DHGME0,DHGME1,DHGME2,DHGME3 = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,56)DLWME0,DLWME1,DLWME2,DLWME3
   56   FORMAT('DLWME0,DLWME1,DLWME2,DLWME3 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,58)SEBOK1,SEDLK1,SEFWK1,SEGCI,SEGDK1
   58   FORMAT('SEBOK1,SEDLK1,SEFWK1,SEGCI,SEGDK1 = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,59)SEMED,SEMEDB,SEMEK1,SEMLBO,SEMLK1
   59   FORMAT('SEMED,SEMEDB,SEMEK1,SEMLBO,SEMKL1 = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,61)SEMMP1,SEMPK1,SERUK1,SESUK1
   61   FORMAT('SEMMP1,SEMPK1,SERUK1,SESUK1 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)SET1K1,SET2K1,XBCPK1,SEHDK1
   63   FORMAT('SET1K1,SET2K1,XBCPK1,SEHDK1 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,64)XLP,SELPK1,ALOWLP,AUPPLP
   64   FORMAT('XLP,SELPK1,ALOWLP,AUPPLP = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      NCTIT9=0
      ITITL9=' '
      NCTITL=34
      ITITLE(1:NCTITL)='Table 2:  95% Confidence Limits'
      NUMLIN=2
      NUMCOL=5
      ITITL2(1,1)=' '
      ITITL2(2,1)='Method'
      ITITL2(1,2)='Consensus'
      ITITL2(2,2)='Mean'
      ITITL2(1,3)='Lower'
      ITITL2(2,3)='Limit'
      ITITL2(1,4)='Upper'
      ITITL2(2,4)='Limit'
      ITITL2(1,5)='Uncertainty'
      ITITL2(2,5)='(k*SE)'
      NCTIT2(1,1)=0
      NCTIT2(2,1)=6
      NCTIT2(1,2)=9
      NCTIT2(2,2)=4
      NCTIT2(1,3)=5
      NCTIT2(2,3)=5
      NCTIT2(1,4)=5
      NCTIT2(2,4)=5
      NCTIT2(1,5)=11
      NCTIT2(2,5)=6
      NMAX=0
      NTOT(1)=40
      NTOT(2)=15
      NTOT(3)=15
      NTOT(4)=15
      NTOT(5)=15
      DO4010J=1,MAXCOL
        VALIGN(J)='b'
        ALIGN(J)='r'
        NMAX=NMAX+NTOT(J)
        IDIGIT(J)=NUMDIG
        IWHTML(J)=125
        ITYPCO(J)='NUME'
 4010 CONTINUE
      ITYPCO(1)='ALPH'
      ALIGN(1)='l'
      IWHTML(1)=225
      IWRTF(1)=3800
      IWRTF(2)=IWRTF(1)+1700
      IWRTF(3)=IWRTF(2)+1700
      IWRTF(4)=IWRTF(3)+1700
      IWRTF(5)=IWRTF(4)+1700
C
C     POPULATE ROWS OF ARRAY.  NOTE THAT SPECIFIC METHODS ARE
C     CONDITIONAL.
C
      ICNT=0
C
      DO4020I=1,MAXROW
        DO4030J=1,MAXCOL
          AMAT(I,J)=0.0
          NCTEXT(I,J)=0
          ITEXT(I,J)=' '
 4030   CONTINUE
 4020 CONTINUE
C
C     2013/06: ADD THE "UNCERTAINTY INTERVAL" TO THE TABLE.  THIS IS
C     "K*STANDARD ERROR".  PRINT THIS IN THE TABLE BECAUSE THIS IS THE
C     VALUE THAT WILL BE EXTRACTED FOR THE CERTIFICATE.
C 
      ISTRT=0
      IF(IMPACM.EQ.'ON' .AND. XMPS.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  1. Mandel-Paule'
        NCTEXT(ICNT,1)=17
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XMPS
        AMAT(ICNT,ISTRT+3)=DLOWMP
        AMAT(ICNT,ISTRT+4)=DHIGMP
        AKL=XMPS - DLOWMP
        AKU=DHIGMP - XMPS
CCCCC   AK=0.0
CCCCC   IF(SEMPK1.NE.0.0)AK=MAX(AKL,AKU)/SEMPK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Mandel-Paule'
        WRITE(IOUNI2,4001)XMPS,DLOWMP,DHIGMP,AK,IMETH
 4001   FORMAT(4E15.7,15X,A45)
      ENDIF
C
      IF(IMMPCM.EQ.'ON' .AND. XMMPS.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  2. Modified Mandel-Paule'
        NCTEXT(ICNT,1)=26
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XMMPS
        AMAT(ICNT,ISTRT+3)=DLOWMM
        AMAT(ICNT,ISTRT+4)=DHIGMM
        AKL=XMMPS - DLOWMM
        AKU=DHIGMM - XMMPS
CCCCC   AK=0.0
CCCCC   IF(SEMMP1.NE.0.0)AK=MAX(AKL,AKU)/SEMMP1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Modified Mandel-Paule'
        WRITE(IOUNI2,4001)XMMPS,DLOWMM,DHIGMM,AK,IMETH
      ENDIF
C
      IF(IVRUCM.EQ.'ON' .AND. XMLS.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 3a. Vangel-Rukhin ML'
        NCTEXT(ICNT,1)=21
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XMLS
        AMAT(ICNT,ISTRT+3)=DLOWML
        AMAT(ICNT,ISTRT+4)=DHIGML
        AKL=XMLS - DLOWML
        AKU=DHIGML - XMLS
CCCCC   AK=0.0
CCCCC   IF(SEMLK1.NE.0.0)AK=MAX(AKL,AKU)/SEMLK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Vangel-Rukhin ML'
        WRITE(IOUNI2,4001)XMLS,DLOWML,DHIGML,AK,IMETH
      ENDIF
C
      IF(IVRBCM.EQ.'ON' .AND. XMLS.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 3b. Vangel-Rukhin (bootstrap)'
        NCTEXT(ICNT,1)=30
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XMLS
        AMAT(ICNT,ISTRT+3)=DLOWM2
        AMAT(ICNT,ISTRT+4)=DHIGM2
        AKL=XMLS - DLOWM2
        AKU=DHIGM2 - XMLS
CCCCC   AK=0.0
CCCCC   IF(SEMLBO.NE.0.0)AK=MAX(AKL,AKU)/SEMLBO
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Vangel-Rukhin Bootstrap'
        WRITE(IOUNI2,4001)XMLS,DLOWM2,DHIGM2,AK,IMETH
      ENDIF
C
      IF(IDSLCM.EQ.'ON' .AND. XDL.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 4a. DerSimonian-Laird (original)'
        NCTEXT(ICNT,1)=33
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XDL
        AMAT(ICNT,ISTRT+3)=DLOWDL
        AMAT(ICNT,ISTRT+4)=DHIGDL
        AKL=XDL - DLOWDL
        AKU=DHIGDL - XDL
CCCCC   AK=0.0
CCCCC   IF(SEDLK1.NE.0.0)AK=MAX(AKL,AKU)/SEDLK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='DerSimonian-Laird (original)'
        WRITE(IOUNI2,4001)XDL,DLOWDL,DHIGDL,AK,IMETH
      ENDIF
C
      IF(IDS2CM.EQ.'ON' .AND. XDL.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 4b. DerSimonian-Laird (H-H-D)'
        NCTEXT(ICNT,1)=30
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XDL
        AMAT(ICNT,ISTRT+3)=DLOWD3
        AMAT(ICNT,ISTRT+4)=DHIGD3
        AKL=XDL - DLOWD3
        AKU=DHIGD3 - XDL
CCCCC   AK=0.0
CCCCC   IF(SEHDK1.NE.0.0)AK=MAX(AKL,AKU)/SEHDK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='DerSimonian-Laird (HHD)'
        WRITE(IOUNI2,4001)XDL,DLOWD3,DHIGD3,AK,IMETH
      ENDIF
C
      IF(IDS3CM.EQ.'ON' .AND. XDL.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 4c. DerSimonian-Laird (minmax)'
        NCTEXT(ICNT,1)=31
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XDL
        AMAT(ICNT,ISTRT+3)=DLOWD2
        AMAT(ICNT,ISTRT+4)=DHIGD2
        AKL=XDL - DLOWD2
        AKU=DHIGD2 - XDL
CCCCC   AK=0.0
CCCCC   IF(SERUK1.NE.0.0)AK=MAX(AKL,AKU)/SERUK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='DerSimonian-Laird (Minmax)'
        WRITE(IOUNI2,4001)XDL,DLOWD2,DHIGD2,AK,IMETH
      ENDIF
C
      IF(IDS4CM.EQ.'ON' .AND. XDL.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 4d. DerSimonian-Laird (perc. bootstrap)'
        NCTEXT(ICNT,1)=41
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XDL
        AMAT(ICNT,ISTRT+3)=DLOWD4
        AMAT(ICNT,ISTRT+4)=DHIGD4
        AKL=XDL - DLOWD4
        AKU=DHIGD4 - XDL
CCCCC   AK=0.0
CCCCC   IF(SEBOK1.NE.0.0)AK=MAX(AKL,AKU)/SEBOK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='DSL (Percentile Bootstrap)'
        WRITE(IOUNI2,4001)XDL,DLOWD4,DHIGD4,AK,IMETH
CC
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 4d. DerSimonian-Laird (symm. bootstrap)'
        NCTEXT(ICNT,1)=40
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XDL
        AMAT(ICNT,ISTRT+3)=DLOWD5
        AMAT(ICNT,ISTRT+4)=DHIGD5
        AKL=XDL - DLOWD5
        AKU=DHIGD5 - XDL
CCCCC   AK=0.0
CCCCC   IF(SEBOK1.NE.0.0)AK=MAX(AKL,AKU)/SEBOK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='DerSimonian-Laird (Symmetric Bootstrap)'
        WRITE(IOUNI2,4001)XDL,DLOWD5,DHIGD5,AK,IMETH
CC
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 4d. DerSimonian-Laird (kern bootstrap)'
        NCTEXT(ICNT,1)=39
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XDL
        AMAT(ICNT,ISTRT+3)=DLOWD6
        AMAT(ICNT,ISTRT+4)=DHIGD6
        AKL=XDL - DLOWD6
        AKU=DHIGD6 - XDL
CCCCC   AK=0.0
CCCCC   IF(SEBOK1.NE.0.0)AK=MAX(AKL,AKU)/SEBOK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='DerSimonian-Laird (Kernel Bootstrap)'
        WRITE(IOUNI2,4001)XDL,DLOWD6,DHIGD6,AK,IMETH
      ENDIF
C
      IF(IGRDCM.EQ.'ON' .AND. XGD.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  5. Graybill-Deal'
        NCTEXT(ICNT,1)=18
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XGD
        AMAT(ICNT,ISTRT+3)=DLOWGD
        AMAT(ICNT,ISTRT+4)=DHIGGD
        AKL=XGD - DLOWGD
        AKU=DHIGGD - XGD
CCCCC   AK=0.0
CCCCC   IF(SEGDK1.NE.0.0)AK=MAX(AKL,AKU)/SEGDK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Graybill-Deal'
        WRITE(IOUNI2,4001)XGD,DLOWGD,DHIGGD,AK,IMETH
      ENDIF
C
      IF(IFAICM.EQ.'ON' .AND. IFLAG9 .AND. XFAIR.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 6a. Fairweather (Fairweather)'
        NCTEXT(ICNT,1)=31
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XFAIR
        AMAT(ICNT,ISTRT+3)=DLOWF2
        AMAT(ICNT,ISTRT+4)=DHIGF2
        AKL=XFAIR - DLOWF2
        AKU=DHIGF2 - XFAIR
CCCCC   AK=0.0
CCCCC   IF(SEFWK1.NE.0.0)AK=MAX(AKL,AKU)/SEFWK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Fairweather (Fairweather)'
        WRITE(IOUNI2,4001)XFAIR,DLOWF2,DHIGF2,AK,IMETH
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 6b. Fairweather (Cox)'
        NCTEXT(ICNT,1)=23
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XFAIR
        AMAT(ICNT,ISTRT+3)=DLOWF3
        AMAT(ICNT,ISTRT+4)=DHIGF3
        AKL=XFAIR - DLOWF3
        AKU=DHIGF3 - XFAIR
CCCCC   AK=0.0
CCCCC   IF(SEFWK1.NE.0.0)AK=MAX(AKL,AKU)/SEFWK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Fairweather (Cox)'
        WRITE(IOUNI2,4001)XFAIR,DLOWF3,DHIGF3,AK,IMETH
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 6c. Fairweather (Minmax)'
        NCTEXT(ICNT,1)=26
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XFAIR
        AMAT(ICNT,ISTRT+3)=DLOWFW
        AMAT(ICNT,ISTRT+4)=DHIGFW
        AKL=XFAIR - DLOWFW
        AKU=DHIGFW - XFAIR
CCCCC   AK=0.0
CCCCC   IF(SEFWK1.NE.0.0)AK=MAX(AKL,AKU)/SEFWK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Fairweather (Minmax)'
        WRITE(IOUNI2,4001)XFAIR,DLOWFW,DHIGFW,AK,IMETH
      ENDIF
C
      IF(IGCICM.EQ.'ON' .AND. XGCI.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  7. Generalized CI'
        NCTEXT(ICNT,1)=20
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XGCI
        AMAT(ICNT,ISTRT+3)=DLOWGC
        AMAT(ICNT,ISTRT+4)=DHIGGC
        AKL=XGCI - DLOWGC
        AKU=DHIGGC - XGCI
CCCCC   AK=0.0
CCCCC   IF(SEGCI.NE.0.0)AK=MAX(AKL,AKU)/SEGCI
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Generalized CI'
        WRITE(IOUNI2,4001)XGCI,DLOWGC,DHIGGC,AK,IMETH
      ENDIF
C
      IF(IGMECM.EQ.'ON' .AND. XGRAND.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  8. Grand Mean'
        NCTEXT(ICNT,1)=16
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XGRAND
        AMAT(ICNT,ISTRT+3)=DLOWT2
        AMAT(ICNT,ISTRT+4)=DHIGT2
        AKL=XGRAND - DLOWT2
        AKU=DHIGT2 - XGRAND
CCCCC   AK=0.0
CCCCC   IF(SET1K1.NE.0.0)AK=MAX(AKL,AKU)/SET1K1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Grand Mean'
        WRITE(IOUNI2,4001)XGRAND,DLOWT2,DHIGT2,AK,IMETH
      ENDIF
C
      IF(IMOMCM.EQ.'ON' .AND. ASM.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  9. Mean of Means'
        NCTEXT(ICNT,1)=18
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=ASM
        AMAT(ICNT,ISTRT+3)=DLOWT1
        AMAT(ICNT,ISTRT+4)=DHIGT1
        AKL=ASM - DLOWT1
        AKU=DHIGT1 - ASM
CCCCC   AK=0.0
CCCCC   IF(SET2K1.NE.0.0)AK=MAX(AKL,AKU)/SET2K1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Mean of Means'
        WRITE(IOUNI2,4001)ASM,DLOWT1,DHIGT1,AK,IMETH
      ENDIF
C
      IF(IBOBCM.EQ.'ON' .AND. ASM.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 11. BOB'
        NCTEXT(ICNT,1)=8
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=ASM
        AMAT(ICNT,ISTRT+3)=DLOWBO
        AMAT(ICNT,ISTRT+4)=DHIGBO
        AKL=ASM - DLOWBO
        AKU=DHIGBO - ASM
CCCCC   AK=0.0
CCCCC   IF(AKUK1.NE.0.0)AK=MAX(AKL,AKU)/AKUK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Bob'
        WRITE(IOUNI2,4001)ASM,DLOWBO,DHIGBO,AK,IMETH
      ENDIF
C
      IF(ISCECM.EQ.'ON' .AND. XSE.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 12. Schiller-Eberhardt'
        NCTEXT(ICNT,1)=23
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XSE
        AMAT(ICNT,ISTRT+3)=DLOWSE
        AMAT(ICNT,ISTRT+4)=DHIGSE
        AKL=XSE - DLOWSE
        AKU=DHIGSE - XSE
CCCCC   AK=0.0
CCCCC   IF(SESUK1.NE.0.0)AK=MAX(AKL,AKU)/SESUK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Schiller-Eberhardt'
        WRITE(IOUNI2,4001)XSE,DLOWSE,DHIGSE,AK,IMETH
      ENDIF
C
      IF(IBCPCM.EQ.'ON' .AND. XBCP.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 13. BCP'
        NCTEXT(ICNT,1)=9
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XBCP
        AMAT(ICNT,ISTRT+3)=DLOWBC
        AMAT(ICNT,ISTRT+4)=DHIGBC
        AKL=XBCP - DLOWBC
        AKU=DHIGBC - XBCP
CCCCC   AK=0.0
CCCCC   IF(XBCPK1.NE.0.0)AK=MAX(AKL,AKU)/XBCPK1
        AK=MAX(AKL,AKU)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='BCP'
        WRITE(IOUNI2,4001)XBCP,DLOWBC,DHIGBC,AK,IMETH
      ENDIF
C
      IF(IMEMCM.EQ.'ON' .AND. XMEDME.NE.CPUMIN)THEN
C
C       FOR ANAYLTIC, USE 1.96*SE, COMMENT OUT THE
C       HETTMANSPERGER-SHEATER INTERVALS FOR NOW.
C
C       2017/03: UPDATED ANALYTICAL METHOD FROM CCQM GUIDANCE NOTE
C                (COMPUTED IN DPMEDM).
C
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 14. Median of Means'
        NCTEXT(ICNT,1)=20
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XMEDME
        AMAT(ICNT,ISTRT+3)=ALOWCL
        AMAT(ICNT,ISTRT+4)=AUPPCL
        AK=XMEDME - ALOWCL
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Median of Means'
        WRITE(IOUNI2,4001)XMEDME,ALOWCL,AUPPCL,AK,IMETH
C
CCCCC   ICNT=ICNT+1
CCCCC   ITEXT(ICNT,1)='14a. Median of Means (Analytic)'
CCCCC   NCTEXT(ICNT,1)=31
CCCCC   AMAT(ICNT,ISTRT+1)=0.0
CCCCC   AMAT(ICNT,ISTRT+2)=XMEDME
CCCCC   AMAT(ICNT,ISTRT+3)=DLWME0
CCCCC   AMAT(ICNT,ISTRT+4)=DHGME0
CCCCC   IMETH='Median of Means (Analytic)'
CCCCC   WRITE(IOUNI2,4001)XMEDME,DLWME0,DHGME0,AK,IMETH
C
CCCCC   ICNT=ICNT+1
CCCCC   ITEXT(ICNT,1)='14b. Median of Means (perc. bootstrap)'
CCCCC   NCTEXT(ICNT,1)=38
CCCCC   AMAT(ICNT,ISTRT+1)=0.0
CCCCC   AMAT(ICNT,ISTRT+2)=XMEDME
CCCCC   AMAT(ICNT,ISTRT+3)=DLWME1
CCCCC   AMAT(ICNT,ISTRT+4)=DHGME1
CCCCC   AKL=XMEDME - DLWME1
CCCCC   AKU=DHGME1 - XMEDME
CCCCC   AK=0.0
CCCCC   IF(SEMEDB.NE.0.0)AK=MAX(AKL,AKU)/SEMEDB
CCCCC   AK=MAX(AKL,AKU)
CCCCC   AMAT(ICNT,ISTRT+5)=AK
CCCCC   IMETH='Median of Means (Percentile Bootstrap)'
CCCCC   WRITE(IOUNI2,4001)XMEDME,DLWME1,DHGME1,AK,IMETH
C
CCCCC   ICNT=ICNT+1
CCCCC   ITEXT(ICNT,1)='14c. Median of Means (symm. bootstrap)'
CCCCC   NCTEXT(ICNT,1)=38
CCCCC   AMAT(ICNT,ISTRT+1)=0.0
CCCCC   AMAT(ICNT,ISTRT+2)=XMEDME
CCCCC   AMAT(ICNT,ISTRT+3)=DLWME2
CCCCC   AMAT(ICNT,ISTRT+4)=DHGME2
CCCCC   AKL=XMEDME - DLWME2
CCCCC   AKU=DHGME2 - XMEDME
CCCCC   AK=0.0
CCCCC   IF(SEMEDB.NE.0.0)AK=MAX(AKL,AKU)/SEMEDB
CCCCC   AK=MAX(AKL,AKU)
CCCCC   AMAT(ICNT,ISTRT+5)=AK
CCCCC   IMETH='Median of Means (Symmetric Bootstrap)'
CCCCC   WRITE(IOUNI2,4001)XMEDME,DLWME2,DHGME2,AK,IMETH
C
CCCCC   ICNT=ICNT+1
CCCCC   ITEXT(ICNT,1)='14d. Median of Means (kernel bootstrap)'
CCCCC   NCTEXT(ICNT,1)=39
CCCCC   AMAT(ICNT,ISTRT+1)=0.0
CCCCC   AMAT(ICNT,ISTRT+2)=XMEDME
CCCCC   AMAT(ICNT,ISTRT+3)=DLWME3
CCCCC   AMAT(ICNT,ISTRT+4)=DHGME3
CCCCC   AKL=XMEDME - DLWME3
CCCCC   AKU=DHGME3 - XMEDME
CCCCC   AK=0.0
CCCCC   IF(SEMEDB.NE.0.0)AK=MAX(AKL,AKU)/SEMEDB
CCCCC   AK=MAX(AKL,AKU)
CCCCC   AMAT(ICNT,ISTRT+5)=AK
CCCCC   IMETH='Median of Means (Kernel Bootstrap)'
CCCCC   WRITE(IOUNI2,4001)XMEDME,DLWME3,DHGME3,AK,IMETH
C
      ENDIF
C
      IF(IHUBCM.EQ.'ON' .AND. XH15.NE.CPUMIN)THEN
C
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 15. Huber H15 Mean of Means'
        NCTEXT(ICNT,1)=27
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XH15
        H15LCL=XH15 - 1.96*SEHMK1
        H15UCL=XH15 + 1.96*SEHMK1
        AMAT(ICNT,ISTRT+3)=H15LCL
        AMAT(ICNT,ISTRT+4)=H15UCL
        AK=XH15 - H15LCL
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Huber H15 Mean of Means'
        WRITE(IOUNI2,4001)XH15,H15LCL,H15UCL,AK,IMETH
      ENDIF
C
      IF(ILIPCM.EQ.'ON' .AND. XLP.NE.CPUMIN)THEN
C
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 16. Linear Pool'
        NCTEXT(ICNT,1)=16
        AMAT(ICNT,ISTRT+1)=0.0
        AMAT(ICNT,ISTRT+2)=XLP
        AMAT(ICNT,ISTRT+3)=ALOWLP
        AMAT(ICNT,ISTRT+4)=AUPPLP
        AKT1=XLP - ALOWLP
        AKT2=AUPPLP - XLP
        AK=MAX(AKT1,AKT2)
        AMAT(ICNT,ISTRT+5)=AK
        IMETH='Linear Pool'
        WRITE(IOUNI2,4001)XLP,ALOWLP,AUPPLP,AK,IMETH
      ENDIF
C
      NUMCOL=5
      NUMLIN=2
      NUMROW=ICNT
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN5')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4091)
 4091   FORMAT('IN DPMAN5 BEFORE CALL DPDTA4:')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4093)MAXCOL,MAXLIN,NUMCOL,NUMLIN,NUMROW
 4093   FORMAT('MAXCOL,MAXLIN,NUMCOL,NUMLIN,NUMROW=',5I5)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4095)NMAX,NUMDIG
 4095   FORMAT('NMAX,NUMDIG = ',2I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IPRINT.EQ.'OFF' .OR. ICMET3.EQ.'OFF')GOTO9000
C
      CALL DPDTA4(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,MAXCOL,NUMCOL,
     1            ITEXT,NCTEXT,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN5')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMAN5--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAN6(NPTS,NLAB,
     1XGRAND,XMPS,XMMPS,XMLS,XSE,
     1ASM,XGD,XDL,XGCI,XFAIR,XBCP,
     1SEMPK1,SEMMP1,SEMLK1,SEMLBO,AKUK1,SESUK1,SET1K1,
     1SET2K1,SEGDK1,SEDLK1,SEHDK1,SERUK1,SEBOK1,SEGCI,SEFWK1,XBCPK1,
     1XMEDME,SEMED,SEMEDB,SEMEK1,XH15,SEHMK1,XLP,SELPK1,
     1IWRITE,
     1ICAPSW,ICAPTY,IK,IOUNIT,NUMDIG,IFLAG9,
     1ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--GENERATE THE STANDARD AND EXPANDED UNCERTAINTY
C              TABLE FOR THE CONSENSUS MEANS COMMAND
C              (CALLED TWICE: ONCE FOR K = 1 AND ONCE FOR K = 2)
C     PRINTING--YES
C     SUBROUTINES NEEDED--NONE
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/3
C     ORIGINAL VERSION--MARCH     2006. EXTRACTED FROM DPMAN2
C                                       ROUTINE
C     UPDATED         --JUNE      2006. USER CAN SELECT WHICH
C                                       METHODS ARE APPLIED
C     UPDATED         --JUNE      2006. ADD FAIRWEATHER AND BCP
C     UPDATED         --FEBRUARY  2010. USE DPDTA4 TO PRINT TABLE
C     UPDATED         --OCTOBER   2012. DERSIMONIAN-LAIRD BOOTSTRAP
C     UPDATED         --OCTOBER   2012. MEDIAN OF MEANS
C     UPDATED         --JANUARY   2017. OPTION TO SUPPRESS PRINTING
C                                       TABLE (ICMET3)
C     UPDATED         --MARCH     2017. UPDATE TO MEDIAN OF MEANS
C     UPDATED         --MARCH     2017. HUBER H15 MEAN OF MEANS
C     UPDATED         --APRIL     2023. LINEAR POOL
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ICMETZ
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      CHARACTER*8  IUNCT
      CHARACTER*30 IMETH
C
      LOGICAL IFLAG9
C
      REAL XMPS
      REAL XMMPS
      REAL XMLS
      REAL ASM
      REAL XGRAND
      REAL XGD
      REAL XDL
      REAL XGCI
      REAL XSE
      REAL SEMPK1
      REAL SEMMP1
      REAL SEMLK1
      REAL SEMLBO
      REAL SEHDK1
      REAL SEGCI
      REAL AKUK1
      REAL SESUK1
      REAL SET2K1
      REAL SET1K1
      REAL SEGDK1
      REAL SEDLK1
      REAL XFAIR
      REAL SEFWK1
      REAL XBCP
      REAL XBCPK1
      REAL XMEDME
      REAL SEMED
      REAL SEMEDB
      REAL SERUK1
      REAL SEMEK1
      REAL XH15
      REAL SEHMK1
      REAL XLP
      REAL SELPK1
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
C
      CHARACTER*4 IRTFMD
      COMMON/COMRTF/IRTFMD
C
      PARAMETER(MAXLIN=3)
      PARAMETER(MAXROW=20)
      PARAMETER(MAXCOL=4)
      CHARACTER*4  ALIGN(MAXCOL)
      CHARACTER*4  VALIGN(MAXCOL)
      INTEGER      IDIGIT(MAXCOL)
      INTEGER      NTOT(MAXCOL)
      INTEGER      IWHTML(MAXCOL)
      INTEGER      IWRTF(MAXCOL)
      INTEGER      NCTEXT(MAXROW,MAXCOL)
      INTEGER      NCTIT2(MAXLIN,MAXCOL)
      CHARACTER*40 ITITL9
      CHARACTER*40 ITITLE
      CHARACTER*20 ITITL2(MAXLIN,MAXCOL)
      CHARACTER*40 ITEXT(MAXROW,MAXCOL)
      CHARACTER*4  ITYPCO(MAXCOL)
      REAL         AMAT(MAXROW,MAXCOL)
      LOGICAL      IFRST
      LOGICAL      ILAST
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPMA'
      ISUBN2='N6  '
C
      IF(IK.EQ.1)THEN
        ICMETZ=ICMET3
      ELSE
        ICMETZ=ICMET4
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN6')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAN6--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IWRITE,NPTS,NLAB,IOUNIT
   52   FORMAT('IWRITE,NPTS,NLAB,IOUNIT = ',A4,2X,3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)SEMED,SEMEDB
   54   FORMAT('SEMED,SEMEDB = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IK.EQ.1)THEN
        IUNCT='Standard'
      ELSE
        IUNCT='Expanded'
      ENDIF
C
      NCTIT9=0
      ITITL9=' '
      NCTITL=40
      ITITLE(1:NCTITL)='Table x:  xxxxxxxx Uncertainties (k = x)'
      WRITE(ITITLE(7:7),'(I1)')IK+2
      WRITE(ITITLE(11:18),'(A8)')IUNCT
      WRITE(ITITLE(39:39),'(I1)')IK
      NUMLIN=3
      NUMCOL=4
C
      ITITL2(1,1)=' '
      ITITL2(2,1)=' '
      ITITL2(3,1)='Method'
      NCTIT2(1,1)=0
      NCTIT2(2,1)=0
      NCTIT2(3,1)=6
C
      ITITL2(1,2)=' '
      ITITL2(2,2)='Consensus'
      ITITL2(3,2)='Mean'
      NCTIT2(1,2)=0
      NCTIT2(2,2)=9
      NCTIT2(3,2)=4
C
      WRITE(ITITL2(1,3)(1:8),'(A8)')IUNCT
      ITITL2(2,3)='Uncertainty'
      ITITL2(3,3)='(k = x)'
      WRITE(ITITL2(3,3)(6:6),'(I1)')IK
      NCTIT2(1,3)=8
      NCTIT2(2,3)=11
      NCTIT2(3,3)=7
C
      ITITL2(1,4)='Relative'
      WRITE(ITITL2(2,4)(1:8),'(A8)')IUNCT
      ITITL2(3,4)='Uncertainty (%)'
      NCTIT2(1,4)=8
      NCTIT2(2,4)=8
      NCTIT2(3,4)=15
C
      NMAX=0
      NTOT(1)=35
      NTOT(2)=15
      NTOT(3)=15
      NTOT(4)=18
      DO4010J=1,MAXCOL
        VALIGN(J)='b'
        ALIGN(J)='r'
        NMAX=NMAX+NTOT(J)
        IDIGIT(J)=NUMDIG
        IWHTML(J)=125
        ITYPCO(J)='NUME'
 4010 CONTINUE
      ITYPCO(1)='ALPH'
      ALIGN(1)='l'
      IWHTML(1)=225
      IWRTF(1)=3800
      IWRTF(2)=IWRTF(1)+1700
      IWRTF(3)=IWRTF(2)+1700
      IWRTF(4)=IWRTF(3)+1700
      IFRST=.TRUE.
      ILAST=.TRUE.
C
C     POPULATE ROWS OF ARRAY.  NOTE THAT SPECIFIC METHODS ARE
C     CONDITIONAL.
C
      ICNT=0
C
      DO4020I=1,MAXROW
        DO4030J=1,MAXCOL
          AMAT(I,J)=0.0
          NCTEXT(I,J)=0
          ITEXT(I,J)=' '
 4030   CONTINUE
 4020 CONTINUE
C
      IF(IMPACM.EQ.'ON' .AND. XMPS.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  1. Mandel-Paule'
        NCTEXT(ICNT,1)=17
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XMPS
        AMAT(ICNT,3)=SEMPK1
        AMAT(ICNT,4)=100.0*SEMPK1/XMPS
        ATEMP1=100.0*SEMPK1/XMPS
        IMETH='Mandel-Paule'
        WRITE(IOUNIT,4001)XMPS,SEMPK1,ATEMP1,IMETH
 4001   FORMAT(3E15.7,15X,A30)
      ENDIF
C
      IF(IMMPCM.EQ.'ON' .AND. XMMPS.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  2. Modified Mandel-Paule'
        NCTEXT(ICNT,1)=27
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XMMPS
        AMAT(ICNT,3)=SEMMP1
        AMAT(ICNT,4)=100.0*SEMMP1/XMMPS
        ATEMP1=100.0*SEMMP1/XMMPS
        IMETH='Modified Mandel-Paule'
        WRITE(IOUNIT,4001)XMMPS,SEMMP1,ATEMP1,IMETH
      ENDIF
C
      IF(IVRUCM.EQ.'ON' .AND. XMLS.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 3a. Vangel-Rukhin ML'
        NCTEXT(ICNT,1)=21
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XMLS
        AMAT(ICNT,3)=SEMLK1
        AMAT(ICNT,4)=100.0*SEMLK1/XMLS
        ATEMP1=100.0*SEMLK1/XMLS
        IMETH='Vangel-Rukhin ML'
        WRITE(IOUNIT,4001)XMLS,SEMLK1,ATEMP1,IMETH
      ENDIF
C
      IF(IVRBCM.EQ.'ON' .AND. XMLS.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 3b. Vangel-Rukhin (bootstrap)'
        NCTEXT(ICNT,1)=30
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XMLS
        AMAT(ICNT,3)=SEMLBO
        AMAT(ICNT,4)=100.0*SEMLBO/XMLS
        ATEMP1=100.0*SEMLBO/XMLS
        IMETH='Vangel-Rukhin Bootstrap'
        WRITE(IOUNIT,4001)XMLS,SEMLBO,ATEMP1,IMETH
      ENDIF
C
      IF(IDSLCM.EQ.'ON' .AND. XDL.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 4a. DerSimonian-Laird (original)'
        NCTEXT(ICNT,1)=33
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XDL
        AMAT(ICNT,3)=SEDLK1
        AMAT(ICNT,4)=100.0*SEDLK1/XDL
        ATEMP1=100.0*SEDLK1/XDL
        IMETH='DerSimonian-Laird (Original)'
        WRITE(IOUNIT,4001)XDL,SEDLK1,ATEMP1,IMETH
      ENDIF
C
      IF(IDS2CM.EQ.'ON' .AND. XDL.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 4b. DerSimonian-Laird (H-H-D)'
        NCTEXT(ICNT,1)=30
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XDL
        AMAT(ICNT,3)=SEHDK1
        AMAT(ICNT,4)=100.0*SEHDK1/XDL
        ATEMP1=100.0*SEHDK1/XDL
        IMETH='DerSimonian-Laird (HHD)'
        WRITE(IOUNIT,4001)XDL,SEHDK1,ATEMP1,IMETH
      ENDIF
C
      IF(IDS3CM.EQ.'ON' .AND. XDL.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 4c. DerSimonian-Laird (minmax)'
        NCTEXT(ICNT,1)=31
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XDL
        AMAT(ICNT,3)=SERUK1
        AMAT(ICNT,4)=100.0*SERUK1/XDL
        ATEMP1=100.0*SERUK1/XDL
        IMETH='DerSimonian-Laird (Minmax)'
        WRITE(IOUNIT,4001)XDL,SERUK1,ATEMP1,IMETH
      ENDIF
C
      IF(IDS4CM.EQ.'ON' .AND. XDL.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 4d. DerSimonian-Laird (bootstrap)'
        NCTEXT(ICNT,1)=34
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XDL
        AMAT(ICNT,3)=SEBOK1
        AMAT(ICNT,4)=100.0*SEBOK1/XDL
        ATEMP1=100.0*SEBOK1/XDL
        IMETH='DerSimonian-Laird (Bootstrap)'
        WRITE(IOUNIT,4001)XDL,SEBOK1,ATEMP1,IMETH
      ENDIF
C
      IF(IGRDCM.EQ.'ON' .AND. XGD.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  5. Graybill-Deal'
        NCTEXT(ICNT,1)=20
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XGD
        AMAT(ICNT,3)=SEGDK1
        AMAT(ICNT,4)=100.0*SEGDK1/XGD
        ATEMP1=100.0*SEGDK1/XGD
        IMETH='Graybill-Deal'
        WRITE(IOUNIT,4001)XGD,SEGDK1,ATEMP1,IMETH
      ENDIF
C
      IF(IFAICM.EQ.'ON' .AND. IFLAG9 .AND. XFAIR.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  6. Fairweather (Minmax)'
        NCTEXT(ICNT,1)=25
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XFAIR
        AMAT(ICNT,3)=SEFWK1
        AMAT(ICNT,4)=100.0*SEFWK1/XFAIR
        ATEMP1=100.0*SEFWK1/XFAIR
        IMETH='Fairweather'
        WRITE(IOUNIT,4001)XFAIR,SEFWK1,ATEMP1,IMETH
      ENDIF
C
      IF(IGCICM.EQ.'ON' .AND. XGCI.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  7. Generalized CI'
        NCTEXT(ICNT,1)=19
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XGCI
        AMAT(ICNT,3)=SEGCI
        AMAT(ICNT,4)=100.0*SEGCI/XGCI
        ATEMP1=100.0*SEGCI/XGCI
        IMETH='Generalized CI'
        WRITE(IOUNIT,4001)XGCI,SEGCI,ATEMP1,IMETH
      ENDIF
C
      IF(IGMECM.EQ.'ON' .AND. XGRAND.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  8. Grand Mean'
        NCTEXT(ICNT,1)=15
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XGRAND
        AMAT(ICNT,3)=SET1K1
        AMAT(ICNT,4)=100.0*SET1K1/XGRAND
        ATEMP1=100.0*SET1K1/XGRAND
        IMETH='Grand Mean'
        WRITE(IOUNIT,4001)XGRAND,SET1K1,ATEMP1,IMETH
      ENDIF
C
      IF(IMOMCM.EQ.'ON' .AND. ASM.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)='  9. Mean of Means'
        NCTEXT(ICNT,1)=18
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=ASM
        AMAT(ICNT,3)=SET2K1
        AMAT(ICNT,4)=100.0*SET2K1/ASM
        ATEMP1=100.0*SET2K1/ASM
        IMETH='Mean of Means'
        WRITE(IOUNIT,4001)ASM,SET2K1,ATEMP1,IMETH
      ENDIF
C
      IF(IBOBCM.EQ.'ON' .AND. ASM.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 11. BOB'
        NCTEXT(ICNT,1)=8
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=ASM
        AMAT(ICNT,3)=AKUK1
        AMAT(ICNT,4)=100.0*AKUK1/ASM
        ATEMP1=100.0*AKUK1/ASM
        IMETH='Bob'
        WRITE(IOUNIT,4001)ASM,AKUK1,ATEMP1,IMETH
      ENDIF
C
      IF(ISCECM.EQ.'ON' .AND. XSE.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 12. Schiller-Eberhardt'
        NCTEXT(ICNT,1)=23
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XSE
        AMAT(ICNT,3)=SESUK1
        AMAT(ICNT,4)=100.0*SESUK1/XSE
        ATEMP1=100.0*SESUK1/XSE
        IMETH='Schiller-Eberhardt'
        WRITE(IOUNIT,4001)XSE,SESUK1,ATEMP1,IMETH
      ENDIF
C
      IF(IBCPCM.EQ.'ON' .AND. XBCP.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 13. BCP'
        NCTEXT(ICNT,1)=8
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XBCP
        AMAT(ICNT,3)=XBCPK1
        AMAT(ICNT,4)=100.0*XBCPK1/XBCP
        ATEMP1=100.0*XBCPK1/XBCP
        IMETH='BCP'
        WRITE(IOUNIT,4001)XBCP,XBCPK1,ATEMP1,IMETH
      ENDIF
C
      IF(IMEMCM.EQ.'ON' .AND. XMEDME.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 14. Median of Means'
        NCTEXT(ICNT,1)=20
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XMEDME
        AMAT(ICNT,3)=SEMEK1
        AMAT(ICNT,4)=100.0*SEMEK1/XMEDME
        ATEMP1=100.0*SEMEK1/XMEDME
        IMETH='Median of Means'
        WRITE(IOUNIT,4001)XMEDME,SEMEK1,ATEMP1,IMETH
C
CCCCC   ICNT=ICNT+1
CCCCC   ITEXT(ICNT,1)='14b. Median of Means (bootstrap)'
CCCCC   NCTEXT(ICNT,1)=32
CCCCC   AMAT(ICNT,1)=0.0
CCCCC   AMAT(ICNT,2)=XMEDME
CCCCC   AMAT(ICNT,3)=SEMEDB
CCCCC   AMAT(ICNT,4)=100.0*SEMEDB/XMEDME
CCCCC   ATEMP1=100.0*SEMEDB/XMEDME
CCCCC   IMETH='Meidan of Means (Bootstrap)'
CCCCC   WRITE(IOUNIT,4001)XMEDME,SEMEDB,ATEMP1,IMETH
      ENDIF
C
      IF(IHUBCM.EQ.'ON' .AND. XH15.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 15. Huber H15 Mean of Means'
        NCTEXT(ICNT,1)=28
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XH15
        AMAT(ICNT,3)=SEHMK1
        AMAT(ICNT,4)=100.0*SEHMK1/XH15
        ATEMP1=100.0*SEMEK1/XMEDME
        IMETH='Huber H15 Mean of Means'
        WRITE(IOUNIT,4001)XH15,SEHMK1,ATEMP1,IMETH
      ENDIF
C
      IF(ILIPCM.EQ.'ON' .AND. XLP.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT,1)=' 16. Linear Pool'
        NCTEXT(ICNT,1)=16
        AMAT(ICNT,1)=0.0
        AMAT(ICNT,2)=XLP
        AMAT(ICNT,3)=SELPK1
        ATEMP1=100.0*SELPK1/XLP
        AMAT(ICNT,4)=ATEMP1
        IMETH='Linear Pool'
        WRITE(IOUNIT,4001)XLP,SELPK1,ATEMP1,IMETH
      ENDIF
C
      NUMCOL=4
      NUMLIN=3
      NUMROW=ICNT
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      IF(IPRINT.EQ.'OFF' .OR. ICMETZ.EQ.'OFF')GOTO9000
C
      CALL DPDTA4(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,MAXCOL,NUMCOL,
     1            ITEXT,NCTEXT,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAN6')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMAN6--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMANN(MAXNXT,ICAPSW,IFORSW,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT A 2-SAMPLE MANN-WHITNEY RANK SUM TEST
C     EXAMPLE--MANN-WHITNEY RANK SUM TEST Y1 Y2
C              RANK SUM TEST Y1 Y2
C              MANN-WHITNEY RANK SUM TEST Y1 Y2 Y3 Y4
C              MANN-WHITNEY RANK SUM TEST Y1 TO Y10
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/7
C     ORIGINAL VERSION--JULY      1999.
C     UPDATED         --JANUARY   2007.  CALL LIST TO RANK
C     UPDATED         --MAY       2011.  USE DPPARS AND DPPAR3
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASA2
      CHARACTER*4 ICTMP1
      CHARACTER*4 ICTMP2
      CHARACTER*4 ICTMP3
      CHARACTER*4 ICTMP4
      CHARACTER*4 ICTMP5
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASE
      CHARACTER*4 IVARID
      CHARACTER*4 IVARI2
      CHARACTER*4 IVARI3
      CHARACTER*4 IVARI4
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
      CHARACTER*4 IFLAGU
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOST.INC'
C
      DIMENSION YRANK(2*MAXOBV)
      DIMENSION YTEMP(2*MAXOBV)
      DIMENSION XTEMP3(2*MAXOBV)
      EQUIVALENCE(GARBAG(IGARB1),YRANK(1))
      EQUIVALENCE(GARBAG(IGARB3),YTEMP(1))
      EQUIVALENCE(GARBAG(IGARB5),XTEMP3(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMA'
      ISUBN2='NN  '
      IFOUND='NO'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ************************************************
C               **  TREAT THE MANN-WHITNEY RANK SUM TEST CASE  **
C               ************************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MANN')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMANN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO,MAXNXT
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',4(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************************
C               **  STEP 1--                                           **
C               **  EXTRACT THE COMMAND                                **
C               *********************************************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MANN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILASTZ=9999
      ICASAN='MTES'
      ICASA2='TWOT'
C
C     LOOK FOR:
C
C          RANK SUM TEST/MANN-WHITNEY RANK SUM TEST
C          LOWER TAILED
C          UPPER TAILED
C
      DO100I=0,NUMARG-1
C
        IF(I.EQ.0)THEN
          ICTMP1=ICOM
        ELSE
          ICTMP1=IHARG(I)
        ENDIF
        ICTMP2=IHARG(I+1)
        ICTMP3=IHARG(I+2)
        ICTMP4=IHARG(I+3)
        ICTMP5=IHARG(I+4)
C
        IF(ICTMP1.EQ.'=')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(ICTMP1.EQ.'MANN' .AND. ICTMP2.EQ.'WHIT' .AND.
     1         ICTMP3.EQ.'RANK' .AND. ICTMP4.EQ.'SUM ' .AND.
     1         ICTMP5.EQ.'TEST')THEN
          IFOUND='YES'
          ICASAN='MTES'
          ILASTZ=I+4
        ELSEIF(ICTMP1.EQ.'MANN' .AND. ICTMP2.EQ.'WHIT' .AND.
     1         ICTMP3.EQ.'RANK' .AND. ICTMP4.EQ.'SUM ')THEN
          IFOUND='YES'
          ICASAN='MTES'
          ILASTZ=I+3
        ELSEIF(ICTMP1.EQ.'MANN' .AND. ICTMP2.EQ.'WHIT' .AND.
     1         ICTMP3.EQ.'TEST')THEN
          IFOUND='YES'
          ICASAN='MTES'
          ILASTZ=I+2
        ELSEIF(ICTMP1.EQ.'MANN' .AND. ICTMP2.EQ.'WHIT')THEN
          IFOUND='YES'
          ICASAN='MTES'
          ILASTZ=I+1
        ELSEIF(ICTMP1.EQ.'RANK' .AND. ICTMP2.EQ.'SUM ' .AND.
     1         ICTMP3.EQ.'TEST')THEN
          IFOUND='YES'
          ICASAN='MTES'
          ILASTZ=I+2
        ELSEIF(ICTMP1.EQ.'RANK' .AND. ICTMP2.EQ.'SUM ')THEN
          IFOUND='YES'
          ICASAN='MTES'
          ILASTZ=I+1
        ELSEIF(ICTMP1.EQ.'LOWE' .AND. ICTMP2.EQ.'TAIL')THEN
          ICASA2='LOWE'
          ILASTZ=MAX(ILASTZ,I+1)
        ELSEIF(ICTMP1.EQ.'UPPE' .AND. ICTMP2.EQ.'TAIL')THEN
          ICASA2='UPPE'
          ILASTZ=MAX(ILASTZ,I+1)
        ENDIF
  100 CONTINUE
C
      IF(IFOUND.EQ.'NO')GOTO9000
C
      ISHIFT=ILASTZ
      CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGA2,IERROR)
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MANN')THEN
        WRITE(ICOUT,91)ICASAN,ICASA2,ISHIFT
   91   FORMAT('DPMANN: ICASAN,ICASA2,ISHIFT = ',
     1         2(A4,2X),I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MANN')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='MANN-WHITNEY RANK SUM TEST'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=0
      IFLAGM=1
      MINNVA=2
      MAXNVA=MAXSPN
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MANN')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ******************************************************
C               **  STEP 3A--                                       **
C               **  CASE 1: TWO RESPONSE VARIABLES, NO REPLICATION  **
C               **          HANDLE MULTIPLE RESPONSE VARIABLES      **
C               **          DIFFERENTLY FOR ONE SAMPLE AND TWO      **
C               **          SAMPLE TESTS.                           **
C               ******************************************************
C
      ISTEPN='3A'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MANN')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMVA2=1
      DO5210I=1,NUMVAR
        ICOL=I
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y,Y,Y,NS1,NLOCA2,NLOCA3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        ISTRT2=I+1
        ISTOP2=NUMVAR
C
        DO5220J=ISTRT2,ISTOP2
C
          ICOL=J
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                X,X,X,NS2,NLOCA2,NLOCA3,ICASE,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C               *******************************************
C               **  STEP 52--                            **
C               **  PERFORM A MANN-WHITNEY RANK SUM TEST **
C               *******************************************
C
          ISTEPN='52'
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MANN')THEN
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,5211)
 5211       FORMAT('***** FROM DPMANN, BEFORE CALL DPMNN2--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,5212)I,J,NS1,NS2,MAXN
 5212       FORMAT('I,J,NS1,NS2,MAXN = ',5I8)
            CALL DPWRST('XXX','BUG ')
            DO5215II=1,MAX(NS1,NS2)
              WRITE(ICOUT,5216)II,Y(II),X(II)
 5216         FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
              CALL DPWRST('XXX','BUG ')
 5215       CONTINUE
          ENDIF
C
          IVARID=IVARN1(I)
          IVARI2=IVARN2(I)
          IVARI3=IVARN1(J)
          IVARI4=IVARN2(J)
          CALL DPMNN2(Y,NS1,X,NS2,ICASA2,
     1               YRANK,YTEMP,XTEMP3,MAXNXT,
     1               ICAPSW,ICAPTY,IFORSW,
     1               IVARID,IVARI2,IVARI3,IVARI4,
     1               STATVA,STATCD,ITAB,
     1               PVAL2T,PVALLT,PVALUT,
     1               CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1               CTU999,CTU995,CTU990,CT975,CTU950,CTU900,
     1               CVL001,CVL005,CVL010,CVL025,CVL050,CVL100,
     1               CVU999,CVU995,CVU990,CVU975,CVU950,CVU900,
     1               IBUGA3,ISUBRO,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C               ***************************************
C               **  STEP 8C--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
          ISTEPN='8C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MANN')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(NUMVAR.GT.2)THEN
            IFLAGU='FILE'
          ELSE
            IFLAGU='ON'
          ENDIF
          IFRST=.FALSE.
          ILAST=.FALSE.
          IF(I.EQ.1 .AND. J.EQ.2)IFRST=.TRUE.
          IF(I.EQ.NUMVAR .AND. J.EQ.NUMVAR)ILAST=.TRUE.
          IF(ITAB.EQ.1)THEN
            CTL001=CVL001
            CTL005=CVL005
            CTL010=CVL010
            CTL025=CVL025
            CTL050=CVL050
            CTL100=CVL100
            CTU999=CVU999
            CTU995=CVU995
            CTU990=CVU990
            CTU975=CVU975
            CTU950=CVU950
            CTU900=CVU900
          ENDIF
          CALL DPMNN5(ICASA2,
     1                STATVA,STATCD,
     1                PVAL2T,PVALLT,PVALUT,
     1                CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1                CTU999,CTU995,CTU990,CT975,CTU950,CTU900,
     1                IFLAGU,IFRST,ILAST,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
C
 5220   CONTINUE
 5210 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MANN')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMANN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMNN2(Y1,N1,Y2,N2,ICASAN,
     1                  TEMP1,TEMP2,TEMP3,MAXNXT,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  IVARID,IVARI2,IVARI3,IVARI4,
     1                  STATVA,STATCD,ITAB,
     1                  PVAL2T,PVALLT,PVALUT,
     1                  CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1                  CTU999,CTU995,CTU990,CTU975,CTU950,CTU900,
     1                  CVL001,CVL005,CVL010,CVL025,CVL050,CVL100,
     1                  CVU999,CVU995,CVU990,CVU975,CVU950,CVU900,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--THIS ROUTINE CARRIES OUT A 2-SAMPLE MANN WHITNEY RANK SUM
C              TEST
C
C              NOTE THAT THIS COMPUTES THE W (RANK STATISTIC), NOT THE
C              U STATISTIC THAT SOME PREFER.
C
C     EXAMPLE--RANK SUM TEST Y1 Y2
C              MANN WHITNEY RANK SUM TEST Y1 Y2
C     SAMPLE 1 IS IN INPUT VECTOR Y1
C              (WITH N1 OBSERVATIONS).
C     SAMPLE 2 IS IN INPUT VECTOR Y2
C              (WITH N1 OBSERVATIONS).
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/6
C     ORIGINAL VERSION--JUNE      1999.
C     UPDATED         --AUGUST    2002.
C     UPDATED         --JANUARY   2007. CALL LIST TO RANK
C     UPDATED         --MAY       2011. SWITCH FROM WALPOLE/MEYERS
C                                       FORMULATION TO CONOVER
C                                       IMPLEMENTATION SINCE CONOVER HAS
C                                       A MORE COMPLETE SET OF TABLES FOR
C                                       SMALL SAMPLES
C     UPDATED         --MAY       2011. USE DPDTA1, DPDTA5 TO PRINT
C                                       OUTPUT.  REFORMAT OUTPUT
C                                       SOMEWHAT AS WELL.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IVARID
      CHARACTER*4 IVARI2
      CHARACTER*4 IVARI3
      CHARACTER*4 IVARI4
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 ICASAN
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
C
      PARAMETER (NUMALP=6)
      REAL ALPHA(NUMALP)
      PARAMETER (NUMAL2=4)
      REAL ALPHA2(NUMAL2)
C
      PARAMETER(NUMCLI=5)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=40)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA ALPHA/0.90, 0.95, 0.975, 0.99, 0.995, 0.999/
      DATA ALPHA2/0.80, 0.90, 0.95, 0.99/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMN'
      ISUBN2='N2  '
      IERROR='NO'
      IWRITE='OFF'
C
      CTL001=0.0
      CTL005=0.0
      CTL010=0.0
      CTL025=0.0
      CTL050=0.0
      CTL100=0.0
      CTU999=0.0
      CTU995=0.0
      CTU990=0.0
      CTU975=0.0
      CTU950=0.0
      CTU900=0.0
      CVL001=0.0
      CVL005=0.0
      CVL010=0.0
      CVL025=0.0
      CVL050=0.0
      CVL100=0.0
      CVL999=0.0
      CVL995=0.0
      CVL990=0.0
      CVL975=0.0
      CVL950=0.0
      CVL900=0.0
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      CTL001=CPUMIN
      CTL005=CPUMIN
      CTL010=CPUMIN
      CTL025=CPUMIN
      CTL050=CPUMIN
      CTL100=CPUMIN
      CTU900=CPUMIN
      CTU950=CPUMIN
      CTU975=CPUMIN
      CTU990=CPUMIN
      CTU995=CPUMIN
      CTU999=CPUMIN
C
      CVL001=CPUMIN
      CVL005=CPUMIN
      CVL010=CPUMIN
      CVL025=CPUMIN
      CVL050=CPUMIN
      CVL100=CPUMIN
      CVU900=CPUMIN
      CVU950=CPUMIN
      CVU975=CPUMIN
      CVU990=CPUMIN
      CVU995=CPUMIN
      CVU999=CPUMIN
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MNN2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMNN2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASAN
   52   FORMAT('IBUGA3,ISUBRO,ICASAN = ',2(A4,2X),A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,53)IVARID,IVARI2,IVARI3,IVARI4
   53   FORMAT('IVARID,IVARI2,IVARI3,IVARI4 = ',3(A4,2X),A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,55)N1,NUMDIG,D0
   55   FORMAT('N1,NUMDIG,D0 = ',2I8,G15.7)
        CALL DPWRST('XXX','WRIT')
        IF(N1.GE.1)THEN
          DO56I=1,N1
            WRITE(ICOUT,57)I,Y1(I),Y2(I)
   57       FORMAT('I,Y1(I),Y2(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','WRIT')
   56     CONTINUE
        ENDIF
      ENDIF
C
C               ************************************
C               **   STEP 1--                     **
C               **   CALL DPMNN3 TO COMPUTE THE   **
C               **   BASIC TEST STATISTIC (FOR    **
C               **   EITHER 1-SAMPLE OR 2-SAMPLE  **
C               **   CASE).                       **
C               ************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MNN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPMNN3(Y1,N1,Y2,N2,
     1            TEMP1,TEMP2,TEMP3,MAXNXT,
     1            STATVA,STATV1,STATV2,STATV3,STATCD,NTIES,
     1            PVAL2T,PVALLT,PVALUT,
     1            IBUGA3,ISUBRO,IERROR)
      CALL MEAN(Y1,N1,IWRITE,YMEAN1,IBUGA3,IERROR)
      CALL MEDIAN(Y1,N1,IWRITE,TEMP1,MAXNXT,YMED1,IBUGA3,IERROR)
      CALL MEAN(Y2,N2,IWRITE,YMEAN2,IBUGA3,IERROR)
      CALL MEDIAN(Y2,N2,IWRITE,TEMP1,MAXNXT,YMED2,IBUGA3,IERROR)
C
C               ***************************************
C               **  STEP 21--                        **
C               **  COMPUTE THE CRITICAL VALUES FOR  **
C               **  VARIOUS VALUES OF ALPHA          **
C               ***************************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MNN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     LARGE SAMPLE NORMAL APPROXIMATION VALUES FIRST
C
      CALL NORPPF(.005,CTL005)
      CALL NORPPF(.010,CTL010)
      CALL NORPPF(.025,CTL025)
      CALL NORPPF(.050,CTL050)
      CALL NORPPF(.100,CTL100)
      CALL NORPPF(.200,CTL200)
      CALL NORPPF(.500,CTL500)
      CALL NORPPF(.500,CTU500)
      CALL NORPPF(.800,CTU800)
      CALL NORPPF(.900,CTU900)
      CALL NORPPF(.950,CTU950)
      CALL NORPPF(.975,CTU975)
      CALL NORPPF(.990,CTU990)
      CALL NORPPF(.995,CTU995)
C
C     NOW GENERATE EXACT CRITICAL VALUES FROM CONOVER TABLES
C     IF THERE ARE NO TIES AND N1 AND N2 ARE BOTH <= 20.
C
      ITAB=0
      IF(NTIES.EQ.0 .AND. N1.LE.20 .AND. N2.LE.20)THEN
        ITAB=1
        CALL DPMNN6(N1,N2,
     1              CVL001,CVL005,CVL010,CVL025,CVL050,CVL100,
     1              IBUGA3,ISUBRO)
C
        AN1=REAL(N1)
        AN2=REAL(N2)
        CONST=AN1*(AN1+AN2+1.0)
        CVU999=CONST - CVL001
        CVU995=CONST - CVL005
        CVU990=CONST - CVL010
        CVU975=CONST - CVL025
        CVU950=CONST - CVL050
        CVU900=CONST - CVL100
      ENDIF
C
C               *************************************************
C               **   STEP 22--                                 **
C               **   WRITE OUT EVERYTHING                      **
C               **   FOR A MANN WHITNEY RANK SUM TEST          **
C               *************************************************
C
      ISTEPN='22'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MNN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      IF(ICASAN.EQ.'LOWE')THEN
        ITITLE='Two Sample Lower-Tailed Mann Whitney Rank Sum Test'
        NCTITL=50
      ELSEIF(ICASAN.EQ.'UPPE')THEN
        ITITLE='Two Sample Upper-Tailed Mann Whitney Rank Sum Test'
        NCTITL=50
      ELSE
        ITITLE='Two Sample Two-Sided Mann Whitney Rank Sum Test'
        NCTITL=47
      ENDIF
      ITITLZ='(Conover Formulation)'
      NCTITZ=21
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='First Response Variable: '
      WRITE(ITEXT(ICNT)(26:29),'(A4)')IVARID(1:4)
      WRITE(ITEXT(ICNT)(30:33),'(A4)')IVARI2(1:4)
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Second Response Variable: '
      WRITE(ITEXT(ICNT)(27:30),'(A4)')IVARI3(1:4)
      WRITE(ITEXT(ICNT)(31:34),'(A4)')IVARI4(1:4)
      NCTEXT(ICNT)=34
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='H0: F(x) = G(x)   for all x'
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Ha: F(x) <> G(x)  for some x'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations for Sample 1:'
      NCTEXT(ICNT)=36
      AVALUE(ICNT)=REAL(N1)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Mean for Sample 1:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=YMEAN1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Median for Sample 1:'
      NCTEXT(ICNT)=20
      AVALUE(ICNT)=YMED1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations for Sample 2:'
      NCTEXT(ICNT)=36
      AVALUE(ICNT)=REAL(N2)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Mean for Sample 2:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=YMEAN2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Median for Sample 2:'
      NCTEXT(ICNT)=20
      AVALUE(ICNT)=YMED2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Tied Ranks:'
      NCTEXT(ICNT)=21
      AVALUE(ICNT)=REAL(NTIES)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IF(ITAB.EQ.1)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Test (Small Sample, No Ties, Exact):'
        NCTEXT(ICNT)=38
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='Test (Normal Approximation):'
        NCTEXT(ICNT)=30
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Test Statistic Value (W):'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='CDF Value:'
      NCTEXT(ICNT)=10
      AVALUE(ICNT)=STATCD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='P-Value (2-tailed test):'
      NCTEXT(ICNT)=24
      AVALUE(ICNT)=PVAL2T
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='P-Value (lower-tailed test):'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=PVALLT
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='P-Value (upper-tailed test):'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=PVALUT
      IDIGIT(ICNT)=NUMDIG
C
      NUMROW=ICNT
      DO2110I=1,NUMROW
        NTOT(I)=15
 2110 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='21A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MNN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='21B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MNN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ITAB.EQ.0)THEN
        ITITLE='Two-Tailed Test: Normal Approximation'
        NCTITL=37
      ELSE
        ITITLE='Two-Tailed Test: Exact - Small Sample, No Ties'
        NCTITL=46
      ENDIF
      ITITL9='H0: F(x) = G(x); Ha: F(x) <> G(x)  for some x'
      NCTIT9=45
C
      DO2130J=1,NUMCLI
        DO2140I=1,MAXLIN
          ITITL2(I,J)=' '
          NCTIT2(I,J)=0
 2140   CONTINUE
 2130 CONTINUE
C
      IF(ITAB.EQ.0)THEN
        NUMCOL=4
        ITITL2(2,1)='Significance'
        NCTIT2(2,1)=12
        ITITL2(3,1)='Level'
        NCTIT2(3,1)=5
C
        ITITL2(2,2)='Test '
        NCTIT2(2,2)=4
        ITITL2(3,2)='Statistic'
        NCTIT2(3,2)=9
C
        ITITL2(2,3)='Critical'
        NCTIT2(2,3)=8
        ITITL2(3,3)='Value (+/-)'
        NCTIT2(3,3)=11
C
        ITITL2(1,4)='Null'
        NCTIT2(1,4)=4
        ITITL2(2,4)='Hypothesis'
        NCTIT2(2,4)=10
        ITITL2(3,4)='Conclusion'
        NCTIT2(3,4)=10
C
      ELSE
        NUMCOL=5
        ITITL2(2,1)='Significance'
        NCTIT2(2,1)=12
        ITITL2(3,1)='Level'
        NCTIT2(3,1)=5
C
        ITITL2(2,2)='Test '
        NCTIT2(2,2)=4
        ITITL2(3,2)='Statistic'
        NCTIT2(3,2)=9
C
        ITITL2(1,3)='Lower'
        NCTIT2(1,3)=5
        ITITL2(2,3)='Critical'
        NCTIT2(2,3)=8
        ITITL2(3,3)='Value (<)'
        NCTIT2(3,3)=9
C
        ITITL2(1,4)='Upper'
        NCTIT2(1,4)=5
        ITITL2(2,4)='Critical'
        NCTIT2(2,4)=8
        ITITL2(3,4)='Value (>)'
        NCTIT2(3,4)=9
C
        ITITL2(1,5)='Null'
        NCTIT2(1,5)=4
        ITITL2(2,5)='Hypothesis'
        NCTIT2(2,5)=10
        ITITL2(3,5)='Conclusion'
        NCTIT2(3,5)=10
C
      ENDIF
C
      NMAX=0
      DO2150I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        IDIGIT(I)=NUMDIG
        IF(ITAB.EQ.0)THEN
          IF(I.EQ.1 .OR. I.EQ.4)THEN
            ITYPCO(I)='ALPH'
          ENDIF
        ELSE
          IF(I.EQ.1 .OR. I.EQ.5)THEN
            ITYPCO(I)='ALPH'
          ENDIF
        ENDIF
 2150 CONTINUE
C
      IWHTML(1)=125
      IWHTML(2)=175
      IWHTML(3)=175
      IWHTML(4)=175
      IWHTML(5)=175
      IINC=1800
      IINC2=1400
      IWRTF(1)=IINC
      IWRTF(2)=IWRTF(1)+IINC
      IWRTF(3)=IWRTF(2)+IINC
      IWRTF(4)=IWRTF(3)+IINC
      IWRTF(5)=IWRTF(4)+IINC
C
      IF(ITAB.EQ.0)THEN
        ICNT=NUMAL2
        DO2160J=1,NUMAL2
C
          AMAT(J,2)=STATVA
          ALPHAT=ALPHA2(J)
          ATEMP=(1.0 - ALPHAT)/2.0
          ATEMP=1.0 - ATEMP
          CALL NORPPF(ATEMP,CUTTMP)
          AMAT(J,3)=CUTTMP
          IVALUE(J,4)(1:6)='REJECT'
          IF(ABS(STATVA).LT.AMAT(J,3))THEN
            IVALUE(J,4)(1:6)='ACCEPT'
          ENDIF
          NCVALU(J,4)=6
C
          WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
          IVALUE(J,1)(5:5)='%'
          NCVALU(J,1)=5
 2160   CONTINUE
      ELSE
        ICNT=NUMAL2
        DO3160J=1,ICNT
C
          AMAT(J,2)=STATVA
          ALPHAT=ALPHA2(J)
          IF(J.EQ.1)THEN
            AMAT(J,3)=CVL100
            AMAT(J,4)=CVU900
          ELSEIF(J.EQ.2)THEN
            AMAT(J,3)=CVL050
            AMAT(J,4)=CVU950
          ELSEIF(J.EQ.3)THEN
            AMAT(J,3)=CVL025
            AMAT(J,4)=CVU975
          ELSEIF(J.EQ.4)THEN
            AMAT(J,3)=CVL005
            AMAT(J,4)=CVU995
          ENDIF
          IVALUE(J,5)(1:6)='ACCEPT'
          IF(STATVA.LT.AMAT(J,3))THEN
            IVALUE(J,5)(1:6)='REJECT'
          ELSEIF(STATVA.GT.AMAT(J,4))THEN
            IVALUE(J,5)(1:6)='REJECT'
          ENDIF
          NCVALU(J,5)=6
C
          WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
          IVALUE(J,1)(5:5)='%'
          NCVALU(J,1)=5
 3160   CONTINUE
      ENDIF
C
      NUMLIN=3
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
C
      IF(ICASAN.EQ.'TWOT')THEN
        CALL DPDTA5(ITITLE,NCTITL,
     1              ITITL9,NCTIT9,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              IFLAGS,IFLAGE,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
C
      IF(ICASAN.EQ.'LOWE')THEN
C
        IF(ITAB.EQ.0)THEN
          ITITLE='Lower-Tailed Test: Normal Approximation'
          NCTITL=39
        ELSE
          ITITLE='Lower-Tailed Test: Exact - Small Sample, No Ties'
          NCTITL=48
        ENDIF
        ITITL9='H0: F(x) = G(x); Ha: F(x) < G(x)  for some x'
        NCTIT9=44
C
        IF(ITAB.EQ.0)THEN
          ITITL2(2,3)='Critical'
          NCTIT2(2,3)=8
          ITITL2(3,3)='Value (<)'
          NCTIT2(3,3)=9
          NUMCOL=4
        ELSE
          NUMCOL=4
          ITITL2(1,3)='Lower'
          NCTIT2(1,3)=5
          ITITL2(2,3)='Critical'
          NCTIT2(2,3)=8
          ITITL2(3,3)='Value (<)'
          NCTIT2(3,3)=9
C
          ITITL2(1,4)='Null'
          NCTIT2(1,4)=4
          ITITL2(2,4)='Hypothesis'
          NCTIT2(2,4)=10
          ITITL2(3,4)='Conclusion'
          NCTIT2(3,4)=10
        ENDIF
C
        NMAX=0
        DO2250I=1,NUMCOL
          NTOT(I)=15
          NMAX=NMAX+NTOT(I)
 2250   CONTINUE
        ITYPCO(4)='ALPH'
C
        IF(ITAB.EQ.0)THEN
          ICNT=NUMALP
          DO2260J=1,NUMALP
C
            AMAT(J,2)=STATVA
            ALPHAT=ALPHA(J)
            ATEMP=(1.0 - ALPHAT)
            CALL NORPPF(ATEMP,CUTTMP)
            AMAT(J,3)=CUTTMP
            IVALUE(J,4)(1:6)='ACCEPT'
            IF(ABS(STATVA).LT.AMAT(J,3))THEN
              IVALUE(J,4)(1:6)='REJECT'
            ENDIF
            NCVALU(J,4)=6
            WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
            IVALUE(J,1)(5:5)='%'
            NCVALU(J,1)=5
 2260     CONTINUE
        ELSE
          ICNT=NUMALP
          DO3260J=1,ICNT
C
            AMAT(J,2)=STATVA
            ALPHAT=ALPHA(J)
            IF(J.EQ.1)THEN
              AMAT(J,3)=CVL100
            ELSEIF(J.EQ.2)THEN
              AMAT(J,3)=CVL050
            ELSEIF(J.EQ.3)THEN
              AMAT(J,3)=CVL025
            ELSEIF(J.EQ.4)THEN
              AMAT(J,3)=CVL010
            ELSEIF(J.EQ.5)THEN
              AMAT(J,3)=CVL005
            ELSEIF(J.EQ.6)THEN
              AMAT(J,3)=CVL001
            ENDIF
            IVALUE(J,4)(1:6)='ACCEPT'
            IF(STATVA.LT.AMAT(J,3))THEN
              IVALUE(J,5)(1:6)='REJECT'
            ENDIF
            NCVALU(J,4)=6
C
            WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
            IVALUE(J,1)(5:5)='%'
            NCVALU(J,1)=5
 3260     CONTINUE
        ENDIF
C
        NUMLIN=3
        IFRST=.TRUE.
        ILAST=.TRUE.
        IFLAGS=.TRUE.
        IFLAGE=.TRUE.
        CALL DPDTA5(ITITLE,NCTITL,
     1              ITITL9,NCTIT9,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              IFLAGS,IFLAGE,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
C
      IF(ICASAN.EQ.'UPPE')THEN
C
        IF(ITAB.EQ.0)THEN
          ITITLE='Upper-Tailed Test: Normal Approximation'
          NCTITL=39
        ELSE
          ITITLE='Upper-Tailed Test: Exact - Small Sample, No Ties'
          NCTITL=48
        ENDIF
        ITITL9='H0: F(x) = G(x); Ha: F(x) > G(x)  for some x'
        NCTIT9=44
C
        IF(ITAB.EQ.0)THEN
          ITITL2(2,3)='Critical'
          NCTIT2(2,3)=8
          ITITL2(3,3)='Value (>)'
          NCTIT2(3,3)=9
          NUMCOL=4
        ELSE
          NUMCOL=4
          ITITL2(1,3)='Upper'
          NCTIT2(1,3)=5
          ITITL2(2,3)='Critical'
          NCTIT2(2,3)=8
          ITITL2(3,3)='Value (>)'
          NCTIT2(3,3)=9
C
          ITITL2(1,4)='Null'
          NCTIT2(1,4)=4
          ITITL2(2,4)='Hypothesis'
          NCTIT2(2,4)=10
          ITITL2(3,4)='Conclusion'
          NCTIT2(3,4)=10
        ENDIF
C
        NMAX=0
        DO2350I=1,NUMCOL
          NTOT(I)=15
          NMAX=NMAX+NTOT(I)
 2350   CONTINUE
        ITYPCO(4)='ALPH'
C
        IF(ITAB.EQ.0)THEN
          ICNT=NUMALP
          DO2360J=1,NUMALP
C
            AMAT(J,2)=STATVA
            ALPHAT=ALPHA(J)
            ATEMP=ALPHAT
            CALL NORPPF(ATEMP,CUTTMP)
            AMAT(J,3)=CUTTMP
            IVALUE(J,4)(1:6)='ACCEPT'
            IF(ABS(STATVA).GT.AMAT(J,3))THEN
              IVALUE(J,4)(1:6)='REJECT'
            ENDIF
            NCVALU(J,4)=6
            WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
            IVALUE(J,1)(5:5)='%'
            NCVALU(J,1)=5
 2360     CONTINUE
        ELSE
          ICNT=NUMALP
          DO3360J=1,ICNT
C
            AMAT(J,2)=STATVA
            ALPHAT=ALPHA(J)
            IF(J.EQ.1)THEN
              AMAT(J,3)=CVL900
            ELSEIF(J.EQ.2)THEN
              AMAT(J,3)=CVL950
            ELSEIF(J.EQ.3)THEN
              AMAT(J,3)=CVL975
            ELSEIF(J.EQ.4)THEN
              AMAT(J,3)=CVL990
            ELSEIF(J.EQ.5)THEN
              AMAT(J,3)=CVL995
            ELSEIF(J.EQ.6)THEN
              AMAT(J,3)=CVL999
            ENDIF
            IVALUE(J,4)(1:6)='ACCEPT'
            IF(STATVA.GT.AMAT(J,3))THEN
              IVALUE(J,5)(1:6)='REJECT'
            ENDIF
            NCVALU(J,4)=6
C
            WRITE(IVALUE(J,1)(1:4),'(F4.1)')100.0*ALPHAT
            IVALUE(J,1)(5:5)='%'
            NCVALU(J,1)=5
 3360     CONTINUE
        ENDIF
C
        NUMLIN=3
        IFRST=.TRUE.
        ILAST=.TRUE.
        IFLAGS=.TRUE.
        IFLAGE=.TRUE.
        CALL DPDTA5(ITITLE,NCTITL,
     1              ITITL9,NCTIT9,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              IFLAGS,IFLAGE,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MNN2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMNN2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)STATVA,STATV2,STATCD,PVAL2T,PVALLT,PVALUT
 9013   FORMAT('STATVA,STATV2,STATCD,PVAL2T,PVALLT,PVALUT = ',6G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMNN3(Y1,N1,Y2,N2,
     1                  TEMP1,TEMP2,YRANK,MAXNXT,
     1                  STATVA,STATV1,STATV2,STATV3,STATCD,NTIES,
     1                  PVAL2T,PVALLT,PVALUT,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--THIS ROUTINE COMPUTES THE MANN-WHITNEY 2-SAMPLE RANK
C              SUM TEST STATISTIC AND ASSOCIATED CDF AND P-VALUES.
C
C              THIS PART IS EXTRACTED FROM DPMNN2 IN ORDER TO
C              ALLOW IT TO BE COMPUTED FROM THE "STATISTICS" ROUTINES
C              (E.G., STATISTIC PLOT, BOOTSTRAP).
C
C     EXAMPLE--MANN WHITNEY RANK SUM TEST Y1 Y2
C              SAMPLE 1 IS IN INPUT VECTOR Y1 (WITH N1 OBSERVATIONS)
C              SAMPLE 2 IS IN INPUT VECTOR Y2 (WITH N2 OBSERVATIONS).
C     REFERENCE--CONOVER (1999), "PRACTICAL NONPARAMETRIC STATISTICS",
C                THIRD EDITION, WILEY, PP. 272 - 281.
C              --WALPOLE AND MEYERS (19xx), "ENGINEERING STATISTICS",
C                XX, PP. XX.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/5
C     ORIGINAL VERSION--MAY       2011. EXTRACTED FROM DPMNN2
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION YRANK(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMN'
      ISUBN2='N3  '
      IERROR='NO'
      IWRITE='OFF'
C
      STATVA=CPUMIN
      STATV1=CPUMIN
      STATV2=CPUMIN
      STATV3=CPUMIN
      STATCD=CPUMIN
      PVAL2T=CPUMIN
      PVALLT=CPUMIN
      PVALUT=CPUMIN
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MNN3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMNN3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,N1,N2
   52   FORMAT('IBUGA3,ISUBRO,N1,N2 = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,MAX(N1,N2)
          WRITE(ICOUT,57)I,Y1(I),Y2(I)
   57     FORMAT('I,Y1(I),Y2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 01--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='01'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MNN3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N1.LE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN MANN-WHITNEY RANK SUM TEST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,112)
  112   FORMAT('      THE INPUT NUMBER OF OBSERVATIONS FOR THE ',
     1         'FIRST RESPONSE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
  113   FORMAT('      VARIABLE MUST BE 2 OR LARGER.  SUCH WAS NOT THE ',
     1         'CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,117)N1
  117   FORMAT('      THE INPUT NUMBER OF OBSERVATIONS   = ',I8,'.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N2.LE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,122)
  122   FORMAT('      THE INPUT NUMBER OF OBSERVATIONS FOR THE ',
     1         'SECOND RESPONSE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,117)N2
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y1(1)
      DO135I=2,N1
        IF(Y1(I).NE.HOLD)GOTO139
  135 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,131)HOLD
  131 FORMAT('      THE FIRST RESPONSE VARIABLE HAS ALL ELEMENTS = ',
     1       G15.7)
      CALL DPWRST('XXX','WRIT')
      IERROR='YES'
      GOTO9000
  139 CONTINUE
C
      HOLD=Y2(1)
      DO145I=2,N1
        IF(Y2(I).NE.HOLD)GOTO149
  145 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,141)HOLD
  141 FORMAT('      THE SECOND RESPONSE VARIABLE HAS ALL ELEMENTS = ',
     1       G15.7)
      CALL DPWRST('XXX','WRIT')
      IERROR='YES'
      GOTO9000
  149 CONTINUE
C
C               ************************************
C               **   STEP 11--                    **
C               **   COMPUTE RANK SUM TEST.       **
C               ************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MNN3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1100I=1,N1
        TEMP1(I)=Y1(I)
 1100 CONTINUE
      NTOT=N1
      DO1110I=1,N2
        NTOT=NTOT+1
        TEMP1(NTOT)=Y2(I)
 1110 CONTINUE
      CALL RANK(TEMP1,NTOT,IWRITE,YRANK,TEMP2,MAXNXT,IBUGA3,IERROR)
C
C     THE COMPUTED TEST STATISTIC DEPENDS ON WHETHER OR NOT THERE ARE
C     NO TIES IN THE RANKS.
C
C        1) CASE WHERE THERE ARE NO TIES:
C
C               T = SUM[i=1 to N1][R(Y1(i))]
C
C            WHERE R() IS THE RANK FROM THE COMBINED SAMPLE
C
C        2) CASE WHERE THERE ARE MANY TIES IN THE DATA:
C
C               T1 = (T - N1*(N1+N2+1)/2)/
C                    SQRT((N1*N2/((N1+N2)*N1+N2-1))*SUM[i=1 to N1+N2][R(i)**2] -
C                    (N1*N2*(N1+N2+1)**2/(4*(N1+N2-1))
C
C     SO CHECK FOR NUMBER OF TIED RANKS.  BASICALLY, IF THE RANK IS
C     A NON-INTEGER VALUE, THIS IMPLIES THAT IT IS A TIED RANK.
C
      ISTEPN='12'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MNN3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NTIES=0
      RSUM=0.0
      DO1210I=1,NTOT
        ARANK=YRANK(I)
        RSUM=RSUM + ARANK**2
        ITEMP=INT(ARANK)
        ATEMP=ARANK - REAL(ITEMP)
        IF(ABS(ATEMP).GE.0.1)THEN
          NTIES=NTIES+1
        ENDIF
 1210 CONTINUE
C
      T=0.0
      DO1230I=1,N1
        T=T+YRANK(I)
 1230 CONTINUE
      STATV1=T
      AN1=REAL(N1)
      AN2=REAL(N2)
      AN=REAL(N1 + N2)
      C1=AN1*(AN+1.0)/2.0
      C2=AN1*AN2/(AN*(AN-1.0))
      C3=AN1*AN2*(AN+1.0)**2/(4.0*(AN-1.0))
      T1=(T - C1)/SQRT(C2*RSUM - C3)
      STATV2=T1
      STATV3=AN1*AN2 + 0.5*AN1*(AN1 + 1.0) - T
C
      IF(NTIES.EQ.0 .AND. N1.LE.20 .AND. N2.LE.20)THEN
        STATVA=STATV1
        TP=AN1*(AN + 1.0)*T
        TVAL=MIN(T,TP)
        ANUM=TVAL + 0.5 -AN1*(AN+1.0)/2.0
        ADEN=SQRT(AN1*AN2*(AN+1.0)/12.0)
        AVAL=ANUM/ADEN
        CALL NORCDF(AVAL,CDF)
        PVAL2T=2.0*CDF
        IF(AVAL.LE.0.0)THEN
          PVAL2T=2.0*CDF
        ELSE
          PVAL2T=2.0*(1.0 - CDF)
        ENDIF
        ANUM=T + 0.5 -AN1*(AN+1.0)/2.0
        ADEN=SQRT(AN1*AN2*(AN+1.0)/12.0)
        AVAL=ANUM/ADEN
        CALL NORCDF(AVAL,CDF)
        PVALLT=CDF
        ANUM=TP + 0.5 -AN1*(AN+1.0)/2.0
        ADEN=SQRT(AN1*AN2*(AN+1.0)/12.0)
        AVAL=ANUM/ADEN
        CALL NORCDF(AVAL,CDF)
        PVALUT=CDF
        STATCD=PVALLT
      ELSE
        STATVA=STATV2
        CALL NORCDF(T1,VAL1)
        VAL2=1.0 - VAL1
        PVALLT=VAL1
        PVALUT=VAL2
        STATCD=VAL1
CCCCC   VAL=MIN(VAL1,VAL2)
CCCCC   PVAL2T=2.0*VAL
        IF(T1.LE.0.0)THEN
          PVAL2T=2.0*PVALLT
        ELSE
          PVAL2T=2.0*PVALUT
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MNN3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMNN3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)STATVA,STATV1,STATV2,STATV3,STATCD
 9013   FORMAT('STATVA,STATV1,STATV2,STATV3,STATCD = ',5G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9014)PVALLT,PVALUT,PVAL2T
 9014   FORMAT('PVALLT,PVALUT,PVAL2T = ',3G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9015)NTIES,RSUM,C1,C2,C3
 9015   FORMAT('NTIES,RSUM,C1,C2,C3 = ',I8,4G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMNN5(ICASAN,
     1                  STATVA,STATCD,
     1                  PVAL2T,PVALLT,PVALUT,
     1                  CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1                  CTU999,CTU995,CTU990,CTU975,CTU950,CTU900,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--UTILITY ROUTINE USED BY DPMANN TO UPDATE VARIOUS
C              INTERNAL PARAMETERS AFTER A MANN WHITNEY RANK SUM TEST.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/5
C     ORIGINAL VERSION--MAY       2011.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 IFLAGU
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IOP
C
      SAVE IOUNI1
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MNN5')THEN
        ISTEPN='1'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMNN5--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)STATVA,STATCD,PVAL2T,PVALLT,PVALUT
   53   FORMAT('STATVA,STATCD,PVAL2T,PVALLT,PVALUT = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)ICASAN
   55   FORMAT('ICASAN = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFLAGU.EQ.'FILE')THEN
C
        IF(IFRST)THEN
          IOP='OPEN'
          IFLAG1=1
          IFLAG2=0
          IFLAG3=0
          IFLAG4=0
          IFLAG5=0
          CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGA3,ISUBRO,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
          WRITE(IOUNI1,295)
  295     FORMAT(10X,'STATVAL',8X,'STATCDF',
     1            9X,'PVAL2T',9X,'PVALLT',9X,'PVALUT',
     1            7X,'CUTLO001',7X,'CUTLO005',7X,'CUTLOW01',
     1            7X,'CUTLO025',7X,'CUTLOW05',7X,'CUTLOW10',
     1            7X,'CUTUPP90',7X,'CUTUPP95',7X,'CUTUP975',
     1            7X,'CUTUPP99',7X,'CUTUP995',7X,'CUTUP999')
        ENDIF
        WRITE(IOUNI1,298)STATVA,STATCD,PVAL2T,PVALLT,PVALUT,
     1                   CTL001,CTL005,CTL010,CTL025,CTL050,CTL100,
     1                   CTU900,CTU950,CTU975,CTU990,CTU995,CTU999
  298   FORMAT(17E15.7)
      ELSEIF(IFLAGU.EQ.'ON')THEN
        IH='STAT'
        IH2='VALU'
        VALUE0=STATVA
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='STAT'
        IH2='CDF '
        VALUE0=STATCD
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='PVAL'
        IH2='UE  '
        VALUE0=PVAL2T
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='PVAL'
        IH2='UELT'
        VALUE0=PVALLT
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='PVAL'
        IH2='UEUT'
        VALUE0=PVALUT
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTU'
        IH2='PP90'
        VALUE0=CTU900
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTL'
        IH2='OW10'
        VALUE0=CTL100
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTU'
        IH2='PP95'
        VALUE0=CTU950
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTL'
        IH2='OW05'
        VALUE0=CTL050
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTU'
        IH2='P975'
        VALUE0=CTU975
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTL'
        IH2='O025'
        VALUE0=CTL025
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTU'
        IH2='PP99'
        VALUE0=CTU990
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTL'
        IH2='OW01'
        VALUE0=CTL010
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTU'
        IH2='P995'
        VALUE0=CTU995
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTL'
        IH2='O005'
        VALUE0=CTL005
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTU'
        IH2='P999'
        VALUE0=CTU999
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='CUTL'
        IH2='O001'
        VALUE0=CTL001
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
      ENDIF
C
      IF(IFLAGU.EQ.'FILE')THEN
        IF(ILAST)THEN
          IOP='CLOS'
          IFLAG1=1
          IFLAG2=0
          IFLAG3=0
          IFLAG4=0
          IFLAG5=0
          CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGA3,ISUBRO,IERROR)
C
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MNN5')THEN
            ISTEPN='3A'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,301)IERROR
  301       FORMAT('AFTER CALL DPCLFI, IERROR = ',A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(IERROR.EQ.'YES')GOTO9000
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MNN5')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPMNN5--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMNN6(N1,N2,
     1                  CVL001,CVL005,CVL010,CVL025,CVL050,CVL100,
     1                  IBUGA3,ISUBRO)
C
C     PURPOSE--UTILITY ROUTINE USED BY DPMN2 TO GENERATE CRITICAL
C              VALUES FOR RANK SUM (MANN-WHITNEY) TEST FOR SMALL
C              VALUES OF N1 AND N2 (N1 <= 20, N2 <= 20).
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2023/06
C     ORIGINAL VERSION--JUNE      2023. EXTRACTED AS A SEPARATE
C                                       ROUTINE FROM DPMNN2
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MNN6')THEN
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMNN6--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      CVL001=CPUMIN
      CVL005=CPUMIN
      CVL010=CPUMIN
      CVL025=CPUMIN
      CVL050=CPUMIN
      CVL100=CPUMIN
C
      IF(N1.EQ.2)THEN
        IF(N2.EQ.2)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=3
          CVL050=3
          CVL100=3
        ELSEIF(N2.EQ.3)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=3
          CVL050=3
          CVL100=4
        ELSEIF(N2.EQ.4)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=3
          CVL050=3
          CVL100=4
        ELSEIF(N2.EQ.5)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=3
          CVL050=4
          CVL100=5
        ELSEIF(N2.EQ.6)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=3
          CVL050=4
          CVL100=5
        ELSEIF(N2.EQ.7)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=3
          CVL050=4
          CVL100=5
        ELSEIF(N2.EQ.8)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=4
          CVL050=5
          CVL100=6
        ELSEIF(N2.EQ.9)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=4
          CVL050=5
          CVL100=6
        ELSEIF(N2.EQ.10)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=4
          CVL050=5
          CVL100=7
        ELSEIF(N2.EQ.11)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=5
          CVL050=5
          CVL100=7
        ELSEIF(N2.EQ.12)THEN
          CVL001=3
          CVL005=3
          CVL010=3
          CVL025=5
          CVL050=6
          CVL100=8
        ELSEIF(N2.EQ.13)THEN
          CVL001=3
          CVL005=3
          CVL010=4
          CVL025=5
          CVL050=6
          CVL100=8
        ELSEIF(N2.EQ.14)THEN
          CVL001=3
          CVL005=3
          CVL010=4
          CVL025=5
          CVL050=7
          CVL100=8
        ELSEIF(N2.EQ.15)THEN
          CVL001=3
          CVL005=3
          CVL010=4
          CVL025=5
          CVL050=7
          CVL100=9
        ELSEIF(N2.EQ.16)THEN
          CVL001=3
          CVL005=3
          CVL010=4
          CVL025=5
          CVL050=7
          CVL100=9
        ELSEIF(N2.EQ.17)THEN
          CVL001=3
          CVL005=3
          CVL010=4
          CVL025=6
          CVL050=7
          CVL100=10
        ELSEIF(N2.EQ.18)THEN
          CVL001=3
          CVL005=3
          CVL010=4
          CVL025=6
          CVL050=8
          CVL100=10
        ELSEIF(N2.EQ.19)THEN
          CVL001=3
          CVL005=3
          CVL010=5
          CVL025=6
          CVL050=8
          CVL100=11
        ELSEIF(N2.EQ.20)THEN
          CVL001=3
          CVL005=4
          CVL010=5
          CVL025=6
          CVL050=8
          CVL100=11
        ENDIF
      ELSEIF(N1.EQ.3)THEN
        IF(N2.EQ.2)THEN
          CVL001=6
          CVL005=6
          CVL010=6
          CVL025=6
          CVL050=6
          CVL100=7
        ELSEIF(N2.EQ.3)THEN
          CVL001=6
          CVL005=6
          CVL010=6
          CVL025=6
          CVL050=7
          CVL100=8
        ELSEIF(N2.EQ.4)THEN
          CVL001=6
          CVL005=6
          CVL010=6
          CVL025=6
          CVL050=7
          CVL100=8
        ELSEIF(N2.EQ.5)THEN
          CVL001=6
          CVL005=6
          CVL010=6
          CVL025=7
          CVL050=8
          CVL100=9
        ELSEIF(N2.EQ.6)THEN
          CVL001=6
          CVL005=6
          CVL010=6
          CVL025=8
          CVL050=9
          CVL100=10
        ELSEIF(N2.EQ.7)THEN
          CVL001=6
          CVL005=6
          CVL010=7
          CVL025=8
          CVL050=9
          CVL100=11
        ELSEIF(N2.EQ.8)THEN
          CVL001=6
          CVL005=6
          CVL010=7
          CVL025=9
          CVL050=10
          CVL100=12
        ELSEIF(N2.EQ.9)THEN
          CVL001=6
          CVL005=7
          CVL010=8
          CVL025=9
          CVL050=11
          CVL100=12
        ELSEIF(N2.EQ.10)THEN
          CVL001=6
          CVL005=7
          CVL010=8
          CVL025=10
          CVL050=11
          CVL100=13
        ELSEIF(N2.EQ.11)THEN
          CVL001=6
          CVL005=7
          CVL010=8
          CVL025=10
          CVL050=12
          CVL100=14
        ELSEIF(N2.EQ.12)THEN
          CVL001=6
          CVL005=8
          CVL010=9
          CVL025=11
          CVL050=12
          CVL100=15
        ELSEIF(N2.EQ.13)THEN
          CVL001=6
          CVL005=8
          CVL010=9
          CVL025=11
          CVL050=13
          CVL100=16
        ELSEIF(N2.EQ.14)THEN
          CVL001=6
          CVL005=8
          CVL010=9
          CVL025=12
          CVL050=14
          CVL100=17
        ELSEIF(N2.EQ.15)THEN
          CVL001=6
          CVL005=9
          CVL010=10
          CVL025=12
          CVL050=14
          CVL100=17
        ELSEIF(N2.EQ.16)THEN
          CVL001=6
          CVL005=9
          CVL010=10
          CVL025=13
          CVL050=15
          CVL100=18
        ELSEIF(N2.EQ.17)THEN
          CVL001=7
          CVL005=9
          CVL010=11
          CVL025=13
          CVL050=16
          CVL100=19
        ELSEIF(N2.EQ.18)THEN
          CVL001=7
          CVL005=9
          CVL010=11
          CVL025=14
          CVL050=16
          CVL100=20
        ELSEIF(N2.EQ.19)THEN
          CVL001=7
          CVL005=10
          CVL010=11
          CVL025=14
          CVL050=17
          CVL100=21
        ELSEIF(N2.EQ.20)THEN
          CVL001=7
          CVL005=10
          CVL010=12
          CVL025=15
          CVL050=18
          CVL100=22
        ENDIF
      ELSEIF(N1.EQ.4)THEN
        IF(N2.EQ.2)THEN
          CVL001=10
          CVL005=10
          CVL010=10
          CVL025=10
          CVL050=10
          CVL100=11
        ELSEIF(N2.EQ.3)THEN
          CVL001=10
          CVL005=10
          CVL010=10
          CVL025=10
          CVL050=11
          CVL100=12
        ELSEIF(N2.EQ.4)THEN
          CVL001=10
          CVL005=10
          CVL010=10
          CVL025=11
          CVL050=12
          CVL100=14
        ELSEIF(N2.EQ.5)THEN
          CVL001=10
          CVL005=10
          CVL010=11
          CVL025=12
          CVL050=13
          CVL100=15
        ELSEIF(N2.EQ.6)THEN
          CVL001=10
          CVL005=11
          CVL010=12
          CVL025=13
          CVL050=14
          CVL100=16
        ELSEIF(N2.EQ.7)THEN
          CVL001=10
          CVL005=11
          CVL010=12
          CVL025=14
          CVL050=15
          CVL100=17
        ELSEIF(N2.EQ.8)THEN
          CVL001=10
          CVL005=12
          CVL010=13
          CVL025=15
          CVL050=16
          CVL100=18
        ELSEIF(N2.EQ.9)THEN
          CVL001=10
          CVL005=12
          CVL010=14
          CVL025=15
          CVL050=17
          CVL100=20
        ELSEIF(N2.EQ.10)THEN
          CVL001=11
          CVL005=13
          CVL010=14
          CVL025=16
          CVL050=18
          CVL100=21
        ELSEIF(N2.EQ.11)THEN
          CVL001=11
          CVL005=13
          CVL010=15
          CVL025=17
          CVL050=19
          CVL100=22
        ELSEIF(N2.EQ.12)THEN
          CVL001=11
          CVL005=14
          CVL010=16
          CVL025=18
          CVL050=20
          CVL100=23
        ELSEIF(N2.EQ.13)THEN
          CVL001=12
          CVL005=14
          CVL010=16
          CVL025=19
          CVL050=21
          CVL100=24
        ELSEIF(N2.EQ.14)THEN
          CVL001=12
          CVL005=15
          CVL010=17
          CVL025=20
          CVL050=22
          CVL100=26
        ELSEIF(N2.EQ.15)THEN
          CVL001=12
          CVL005=16
          CVL010=18
          CVL025=21
          CVL050=23
          CVL100=27
        ELSEIF(N2.EQ.16)THEN
          CVL001=13
          CVL005=16
          CVL010=18
          CVL025=22
          CVL050=25
          CVL100=28
        ELSEIF(N2.EQ.17)THEN
          CVL001=13
          CVL005=17
          CVL010=19
          CVL025=22
          CVL050=26
          CVL100=29
        ELSEIF(N2.EQ.18)THEN
          CVL001=14
          CVL005=17
          CVL010=20
          CVL025=23
          CVL050=27
          CVL100=31
        ELSEIF(N2.EQ.19)THEN
          CVL001=14
          CVL005=18
          CVL010=20
          CVL025=24
          CVL050=28
          CVL100=32
        ELSEIF(N2.EQ.20)THEN
          CVL001=14
          CVL005=19
          CVL010=21
          CVL025=25
          CVL050=29
          CVL100=33
        ENDIF
      ELSEIF(N1.EQ.5)THEN
        IF(N2.EQ.2)THEN
          CVL001=15
          CVL005=15
          CVL010=15
          CVL025=15
          CVL050=16
          CVL100=17
        ELSEIF(N2.EQ.3)THEN
          CVL001=15
          CVL005=15
          CVL010=15
          CVL025=16
          CVL050=17
          CVL100=18
        ELSEIF(N2.EQ.4)THEN
          CVL001=15
          CVL005=15
          CVL010=16
          CVL025=17
          CVL050=18
          CVL100=20
        ELSEIF(N2.EQ.5)THEN
          CVL001=15
          CVL005=16
          CVL010=17
          CVL025=18
          CVL050=20
          CVL100=21
        ELSEIF(N2.EQ.6)THEN
          CVL001=15
          CVL005=17
          CVL010=18
          CVL025=19
          CVL050=21
          CVL100=23
        ELSEIF(N2.EQ.7)THEN
          CVL001=15
          CVL005=17
          CVL010=19
          CVL025=21
          CVL050=22
          CVL100=24
        ELSEIF(N2.EQ.8)THEN
          CVL001=16
          CVL005=18
          CVL010=20
          CVL025=22
          CVL050=24
          CVL100=26
        ELSEIF(N2.EQ.9)THEN
          CVL001=17
          CVL005=19
          CVL010=21
          CVL025=23
          CVL050=25
          CVL100=28
        ELSEIF(N2.EQ.10)THEN
          CVL001=17
          CVL005=20
          CVL010=22
          CVL025=24
          CVL050=27
          CVL100=29
        ELSEIF(N2.EQ.11)THEN
          CVL001=18
          CVL005=21
          CVL010=23
          CVL025=25
          CVL050=28
          CVL100=31
        ELSEIF(N2.EQ.12)THEN
          CVL001=18
          CVL005=22
          CVL010=24
          CVL025=27
          CVL050=29
          CVL100=33
        ELSEIF(N2.EQ.13)THEN
          CVL001=19
          CVL005=23
          CVL010=25
          CVL025=28
          CVL050=31
          CVL100=34
        ELSEIF(N2.EQ.14)THEN
          CVL001=19
          CVL005=23
          CVL010=26
          CVL025=29
          CVL050=32
          CVL100=36
        ELSEIF(N2.EQ.15)THEN
          CVL001=20
          CVL005=24
          CVL010=27
          CVL025=30
          CVL050=34
          CVL100=38
        ELSEIF(N2.EQ.16)THEN
          CVL001=21
          CVL005=25
          CVL010=28
          CVL025=31
          CVL050=35
          CVL100=39
        ELSEIF(N2.EQ.17)THEN
          CVL001=21
          CVL005=26
          CVL010=29
          CVL025=33
          CVL050=36
          CVL100=41
        ELSEIF(N2.EQ.18)THEN
          CVL001=22
          CVL005=27
          CVL010=30
          CVL025=34
          CVL050=38
          CVL100=43
        ELSEIF(N2.EQ.19)THEN
          CVL001=23
          CVL005=28
          CVL010=31
          CVL025=35
          CVL050=39
          CVL100=44
        ELSEIF(N2.EQ.20)THEN
          CVL001=23
          CVL005=29
          CVL010=32
          CVL025=36
          CVL050=41
          CVL100=46
        ENDIF
      ELSEIF(N1.EQ.6)THEN
        IF(N2.EQ.2)THEN
          CVL001=21
          CVL005=21
          CVL010=21
          CVL025=21
          CVL050=22
          CVL100=23
        ELSEIF(N2.EQ.3)THEN
          CVL001=21
          CVL005=21
          CVL010=21
          CVL025=23
          CVL050=24
          CVL100=25
        ELSEIF(N2.EQ.4)THEN
          CVL001=21
          CVL005=22
          CVL010=23
          CVL025=24
          CVL050=25
          CVL100=27
        ELSEIF(N2.EQ.5)THEN
          CVL001=21
          CVL005=23
          CVL010=24
          CVL025=25
          CVL050=27
          CVL100=29
        ELSEIF(N2.EQ.6)THEN
          CVL001=21
          CVL005=24
          CVL010=25
          CVL025=27
          CVL050=29
          CVL100=31
        ELSEIF(N2.EQ.7)THEN
          CVL001=21
          CVL005=25
          CVL010=26
          CVL025=28
          CVL050=30
          CVL100=33
        ELSEIF(N2.EQ.8)THEN
          CVL001=23
          CVL005=26
          CVL010=28
          CVL025=30
          CVL050=32
          CVL100=35
        ELSEIF(N2.EQ.9)THEN
          CVL001=24
          CVL005=27
          CVL010=29
          CVL025=32
          CVL050=34
          CVL100=37
        ELSEIF(N2.EQ.10)THEN
          CVL001=25
          CVL005=28
          CVL010=30
          CVL025=33
          CVL050=36
          CVL100=39
        ELSEIF(N2.EQ.11)THEN
          CVL001=26
          CVL005=29
          CVL010=31
          CVL025=35
          CVL050=38
          CVL100=41
        ELSEIF(N2.EQ.12)THEN
          CVL001=26
          CVL005=31
          CVL010=33
          CVL025=36
          CVL050=39
          CVL100=43
        ELSEIF(N2.EQ.13)THEN
          CVL001=27
          CVL005=32
          CVL010=34
          CVL025=38
          CVL050=41
          CVL100=45
        ELSEIF(N2.EQ.14)THEN
          CVL001=28
          CVL005=33
          CVL010=35
          CVL025=39
          CVL050=43
          CVL100=47
        ELSEIF(N2.EQ.15)THEN
          CVL001=29
          CVL005=34
          CVL010=37
          CVL025=41
          CVL050=45
          CVL100=49
        ELSEIF(N2.EQ.16)THEN
          CVL001=30
          CVL005=35
          CVL010=38
          CVL025=43
          CVL050=47
          CVL100=51
        ELSEIF(N2.EQ.17)THEN
          CVL001=31
          CVL005=37
          CVL010=40
          CVL025=44
          CVL050=48
          CVL100=53
        ELSEIF(N2.EQ.18)THEN
          CVL001=32
          CVL005=38
          CVL010=41
          CVL025=46
          CVL050=50
          CVL100=56
        ELSEIF(N2.EQ.19)THEN
          CVL001=33
          CVL005=39
          CVL010=42
          CVL025=47
          CVL050=52
          CVL100=58
        ELSEIF(N2.EQ.20)THEN
          CVL001=34
          CVL005=40
          CVL010=44
          CVL025=49
          CVL050=54
          CVL100=60
        ENDIF
      ELSEIF(N1.EQ.7)THEN
        IF(N2.EQ.2)THEN
          CVL001=28
          CVL005=28
          CVL010=28
          CVL025=28
          CVL050=29
          CVL100=30
        ELSEIF(N2.EQ.3)THEN
          CVL001=28
          CVL005=28
          CVL010=29
          CVL025=30
          CVL050=31
          CVL100=33
        ELSEIF(N2.EQ.4)THEN
          CVL001=28
          CVL005=29
          CVL010=30
          CVL025=32
          CVL050=33
          CVL100=35
        ELSEIF(N2.EQ.5)THEN
          CVL001=28
          CVL005=30
          CVL010=32
          CVL025=34
          CVL050=35
          CVL100=37
        ELSEIF(N2.EQ.6)THEN
          CVL001=29
          CVL005=32
          CVL010=33
          CVL025=35
          CVL050=37
          CVL100=40
        ELSEIF(N2.EQ.7)THEN
          CVL001=30
          CVL005=33
          CVL010=35
          CVL025=37
          CVL050=40
          CVL100=42
        ELSEIF(N2.EQ.8)THEN
          CVL001=31
          CVL005=35
          CVL010=36
          CVL025=39
          CVL050=42
          CVL100=45
        ELSEIF(N2.EQ.9)THEN
          CVL001=32
          CVL005=36
          CVL010=38
          CVL025=41
          CVL050=44
          CVL100=47
        ELSEIF(N2.EQ.10)THEN
          CVL001=34
          CVL005=38
          CVL010=40
          CVL025=43
          CVL050=46
          CVL100=50
        ELSEIF(N2.EQ.11)THEN
          CVL001=35
          CVL005=39
          CVL010=41
          CVL025=45
          CVL050=48
          CVL100=52
        ELSEIF(N2.EQ.12)THEN
          CVL001=36
          CVL005=41
          CVL010=43
          CVL025=47
          CVL050=50
          CVL100=55
        ELSEIF(N2.EQ.13)THEN
          CVL001=37
          CVL005=42
          CVL010=45
          CVL025=49
          CVL050=53
          CVL100=57
        ELSEIF(N2.EQ.14)THEN
          CVL001=38
          CVL005=44
          CVL010=46
          CVL025=51
          CVL050=55
          CVL100=60
        ELSEIF(N2.EQ.15)THEN
          CVL001=39
          CVL005=45
          CVL010=48
          CVL025=53
          CVL050=57
          CVL100=62
        ELSEIF(N2.EQ.16)THEN
          CVL001=40
          CVL005=47
          CVL010=50
          CVL025=55
          CVL050=59
          CVL100=65
        ELSEIF(N2.EQ.17)THEN
          CVL001=42
          CVL005=48
          CVL010=52
          CVL025=57
          CVL050=62
          CVL100=67
        ELSEIF(N2.EQ.18)THEN
          CVL001=43
          CVL005=50
          CVL010=53
          CVL025=59
          CVL050=64
          CVL100=70
        ELSEIF(N2.EQ.19)THEN
          CVL001=44
          CVL005=51
          CVL010=55
          CVL025=61
          CVL050=66
          CVL100=72
        ELSEIF(N2.EQ.20)THEN
          CVL001=45
          CVL005=53
          CVL010=57
          CVL025=63
          CVL050=68
          CVL100=75
        ENDIF
      ELSEIF(N1.EQ.8)THEN
        IF(N2.EQ.2)THEN
          CVL001=36
          CVL005=36
          CVL010=36
          CVL025=37
          CVL050=38
          CVL100=39
        ELSEIF(N2.EQ.3)THEN
          CVL001=36
          CVL005=36
          CVL010=37
          CVL025=39
          CVL050=40
          CVL100=42
        ELSEIF(N2.EQ.4)THEN
          CVL001=36
          CVL005=38
          CVL010=39
          CVL025=41
          CVL050=42
          CVL100=44
        ELSEIF(N2.EQ.5)THEN
          CVL001=37
          CVL005=39
          CVL010=41
          CVL025=43
          CVL050=45
          CVL100=47
        ELSEIF(N2.EQ.6)THEN
          CVL001=38
          CVL005=41
          CVL010=43
          CVL025=45
          CVL050=47
          CVL100=50
        ELSEIF(N2.EQ.7)THEN
          CVL001=39
          CVL005=43
          CVL010=44
          CVL025=47
          CVL050=50
          CVL100=53
        ELSEIF(N2.EQ.8)THEN
          CVL001=41
          CVL005=44
          CVL010=46
          CVL025=50
          CVL050=52
          CVL100=56
        ELSEIF(N2.EQ.9)THEN
          CVL001=42
          CVL005=46
          CVL010=48
          CVL025=52
          CVL050=55
          CVL100=59
        ELSEIF(N2.EQ.10)THEN
          CVL001=43
          CVL005=48
          CVL010=50
          CVL025=54
          CVL050=57
          CVL100=61
        ELSEIF(N2.EQ.11)THEN
          CVL001=45
          CVL005=50
          CVL010=52
          CVL025=56
          CVL050=60
          CVL100=64
        ELSEIF(N2.EQ.12)THEN
          CVL001=46
          CVL005=52
          CVL010=54
          CVL025=59
          CVL050=63
          CVL100=67
        ELSEIF(N2.EQ.13)THEN
          CVL001=48
          CVL005=54
          CVL010=56
          CVL025=61
          CVL050=65
          CVL100=70
        ELSEIF(N2.EQ.14)THEN
          CVL001=49
          CVL005=55
          CVL010=59
          CVL025=63
          CVL050=68
          CVL100=73
        ELSEIF(N2.EQ.15)THEN
          CVL001=51
          CVL005=57
          CVL010=61
          CVL025=66
          CVL050=70
          CVL100=76
        ELSEIF(N2.EQ.16)THEN
          CVL001=52
          CVL005=59
          CVL010=63
          CVL025=68
          CVL050=73
          CVL100=79
        ELSEIF(N2.EQ.17)THEN
          CVL001=54
          CVL005=61
          CVL010=65
          CVL025=71
          CVL050=76
          CVL100=82
        ELSEIF(N2.EQ.18)THEN
          CVL001=55
          CVL005=63
          CVL010=67
          CVL025=73
          CVL050=78
          CVL100=85
        ELSEIF(N2.EQ.19)THEN
          CVL001=57
          CVL005=65
          CVL010=69
          CVL025=75
          CVL050=81
          CVL100=88
        ELSEIF(N2.EQ.20)THEN
          CVL001=58
          CVL005=67
          CVL010=71
          CVL025=78
          CVL050=84
          CVL100=91
        ENDIF
      ELSEIF(N1.EQ.9)THEN
        IF(N2.EQ.2)THEN
          CVL001=45
          CVL005=45
          CVL010=45
          CVL025=46
          CVL050=47
          CVL100=48
        ELSEIF(N2.EQ.3)THEN
          CVL001=45
          CVL005=46
          CVL010=47
          CVL025=48
          CVL050=50
          CVL100=51
        ELSEIF(N2.EQ.4)THEN
          CVL001=45
          CVL005=47
          CVL010=49
          CVL025=50
          CVL050=52
          CVL100=55
        ELSEIF(N2.EQ.5)THEN
          CVL001=47
          CVL005=49
          CVL010=51
          CVL025=53
          CVL050=55
          CVL100=58
        ELSEIF(N2.EQ.6)THEN
          CVL001=48
          CVL005=51
          CVL010=53
          CVL025=56
          CVL050=58
          CVL100=61
        ELSEIF(N2.EQ.7)THEN
          CVL001=49
          CVL005=53
          CVL010=55
          CVL025=58
          CVL050=61
          CVL100=64
        ELSEIF(N2.EQ.8)THEN
          CVL001=51
          CVL005=55
          CVL010=57
          CVL025=61
          CVL050=64
          CVL100=68
        ELSEIF(N2.EQ.9)THEN
          CVL001=53
          CVL005=57
          CVL010=60
          CVL025=63
          CVL050=67
          CVL100=71
        ELSEIF(N2.EQ.10)THEN
          CVL001=54
          CVL005=59
          CVL010=62
          CVL025=66
          CVL050=70
          CVL100=74
        ELSEIF(N2.EQ.11)THEN
          CVL001=56
          CVL005=62
          CVL010=64
          CVL025=69
          CVL050=73
          CVL100=77
        ELSEIF(N2.EQ.12)THEN
          CVL001=58
          CVL005=64
          CVL010=67
          CVL025=72
          CVL050=76
          CVL100=81
        ELSEIF(N2.EQ.13)THEN
          CVL001=60
          CVL005=66
          CVL010=69
          CVL025=74
          CVL050=79
          CVL100=84
        ELSEIF(N2.EQ.14)THEN
          CVL001=61
          CVL005=68
          CVL010=72
          CVL025=77
          CVL050=82
          CVL100=87
        ELSEIF(N2.EQ.15)THEN
          CVL001=63
          CVL005=70
          CVL010=74
          CVL025=80
          CVL050=85
          CVL100=91
        ELSEIF(N2.EQ.16)THEN
          CVL001=65
          CVL005=73
          CVL010=77
          CVL025=83
          CVL050=88
          CVL100=94
        ELSEIF(N2.EQ.17)THEN
          CVL001=67
          CVL005=75
          CVL010=79
          CVL025=85
          CVL050=91
          CVL100=98
        ELSEIF(N2.EQ.18)THEN
          CVL001=69
          CVL005=77
          CVL010=82
          CVL025=88
          CVL050=94
          CVL100=101
        ELSEIF(N2.EQ.19)THEN
          CVL001=71
          CVL005=79
          CVL010=84
          CVL025=91
          CVL050=97
          CVL100=104
        ELSEIF(N2.EQ.20)THEN
          CVL001=72
          CVL005=82
          CVL010=86
          CVL025=94
          CVL050=100
          CVL100=108
        ENDIF
      ELSEIF(N1.EQ.10)THEN
        IF(N2.EQ.2)THEN
          CVL001=55
          CVL005=55
          CVL010=55
          CVL025=56
          CVL050=57
          CVL100=59
        ELSEIF(N2.EQ.3)THEN
          CVL001=55
          CVL005=56
          CVL010=57
          CVL025=59
          CVL050=60
          CVL100=62
        ELSEIF(N2.EQ.4)THEN
          CVL001=56
          CVL005=58
          CVL010=59
          CVL025=61
          CVL050=63
          CVL100=66
        ELSEIF(N2.EQ.5)THEN
          CVL001=57
          CVL005=60
          CVL010=62
          CVL025=64
          CVL050=67
          CVL100=69
        ELSEIF(N2.EQ.6)THEN
          CVL001=59
          CVL005=62
          CVL010=64
          CVL025=67
          CVL050=70
          CVL100=73
        ELSEIF(N2.EQ.7)THEN
          CVL001=61
          CVL005=65
          CVL010=67
          CVL025=70
          CVL050=73
          CVL100=77
        ELSEIF(N2.EQ.8)THEN
          CVL001=62
          CVL005=67
          CVL010=69
          CVL025=73
          CVL050=76
          CVL100=80
        ELSEIF(N2.EQ.9)THEN
          CVL001=64
          CVL005=69
          CVL010=72
          CVL025=76
          CVL050=80
          CVL100=84
        ELSEIF(N2.EQ.10)THEN
          CVL001=66
          CVL005=72
          CVL010=75
          CVL025=79
          CVL050=83
          CVL100=88
        ELSEIF(N2.EQ.11)THEN
          CVL001=68
          CVL005=74
          CVL010=78
          CVL025=82
          CVL050=87
          CVL100=92
        ELSEIF(N2.EQ.12)THEN
          CVL001=70
          CVL005=77
          CVL010=80
          CVL025=85
          CVL050=90
          CVL100=95
        ELSEIF(N2.EQ.13)THEN
          CVL001=73
          CVL005=80
          CVL010=83
          CVL025=89
          CVL050=93
          CVL100=99
        ELSEIF(N2.EQ.14)THEN
          CVL001=75
          CVL005=82
          CVL010=86
          CVL025=92
          CVL050=97
          CVL100=103
        ELSEIF(N2.EQ.15)THEN
          CVL001=77
          CVL005=85
          CVL010=89
          CVL025=95
          CVL050=100
          CVL100=107
        ELSEIF(N2.EQ.16)THEN
          CVL001=79
          CVL005=87
          CVL010=92
          CVL025=98
          CVL050=105
          CVL100=110
        ELSEIF(N2.EQ.17)THEN
          CVL001=81
          CVL005=90
          CVL010=94
          CVL025=101
          CVL050=107
          CVL100=114
        ELSEIF(N2.EQ.18)THEN
          CVL001=83
          CVL005=93
          CVL010=97
          CVL025=104
          CVL050=111
          CVL100=118
        ELSEIF(N2.EQ.19)THEN
          CVL001=85
          CVL005=95
          CVL010=100
          CVL025=108
          CVL050=114
          CVL100=122
        ELSEIF(N2.EQ.20)THEN
          CVL001=88
          CVL005=98
          CVL010=103
          CVL025=111
          CVL050=118
          CVL100=126
        ENDIF
      ELSEIF(N1.EQ.11)THEN
        IF(N2.EQ.2)THEN
          CVL001=66
          CVL005=66
          CVL010=66
          CVL025=67
          CVL050=68
          CVL100=70
        ELSEIF(N2.EQ.3)THEN
          CVL001=66
          CVL005=67
          CVL010=68
          CVL025=70
          CVL050=72
          CVL100=74
        ELSEIF(N2.EQ.4)THEN
          CVL001=67
          CVL005=69
          CVL010=71
          CVL025=73
          CVL050=75
          CVL100=78
        ELSEIF(N2.EQ.5)THEN
          CVL001=69
          CVL005=72
          CVL010=74
          CVL025=76
          CVL050=79
          CVL100=82
        ELSEIF(N2.EQ.6)THEN
          CVL001=71
          CVL005=74
          CVL010=76
          CVL025=80
          CVL050=83
          CVL100=86
        ELSEIF(N2.EQ.7)THEN
          CVL001=73
          CVL005=77
          CVL010=79
          CVL025=83
          CVL050=86
          CVL100=90
        ELSEIF(N2.EQ.8)THEN
          CVL001=75
          CVL005=80
          CVL010=82
          CVL025=86
          CVL050=90
          CVL100=94
        ELSEIF(N2.EQ.9)THEN
          CVL001=77
          CVL005=83
          CVL010=85
          CVL025=90
          CVL050=94
          CVL100=98
        ELSEIF(N2.EQ.10)THEN
          CVL001=79
          CVL005=85
          CVL010=89
          CVL025=93
          CVL050=98
          CVL100=103
        ELSEIF(N2.EQ.11)THEN
          CVL001=82
          CVL005=88
          CVL010=92
          CVL025=97
          CVL050=101
          CVL100=107
        ELSEIF(N2.EQ.12)THEN
          CVL001=84
          CVL005=91
          CVL010=95
          CVL025=100
          CVL050=105
          CVL100=111
        ELSEIF(N2.EQ.13)THEN
          CVL001=87
          CVL005=94
          CVL010=98
          CVL025=104
          CVL050=109
          CVL100=115
        ELSEIF(N2.EQ.14)THEN
          CVL001=89
          CVL005=97
          CVL010=101
          CVL025=107
          CVL050=113
          CVL100=119
        ELSEIF(N2.EQ.15)THEN
          CVL001=91
          CVL005=100
          CVL010=104
          CVL025=111
          CVL050=117
          CVL100=124
        ELSEIF(N2.EQ.16)THEN
          CVL001=94
          CVL005=103
          CVL010=108
          CVL025=114
          CVL050=121
          CVL100=128
        ELSEIF(N2.EQ.17)THEN
          CVL001=96
          CVL005=106
          CVL010=111
          CVL025=118
          CVL050=124
          CVL100=132
        ELSEIF(N2.EQ.18)THEN
          CVL001=99
          CVL005=109
          CVL010=114
          CVL025=122
          CVL050=128
          CVL100=136
        ELSEIF(N2.EQ.19)THEN
          CVL001=101
          CVL005=112
          CVL010=117
          CVL025=125
          CVL050=132
          CVL100=140
        ELSEIF(N2.EQ.20)THEN
          CVL001=104
          CVL005=115
          CVL010=120
          CVL025=129
          CVL050=136
          CVL100=145
        ENDIF
      ELSEIF(N1.EQ.12)THEN
        IF(N2.EQ.2)THEN
          CVL001=78
          CVL005=78
          CVL010=78
          CVL025=80
          CVL050=81
          CVL100=83
        ELSEIF(N2.EQ.3)THEN
          CVL001=78
          CVL005=80
          CVL010=81
          CVL025=83
          CVL050=84
          CVL100=87
        ELSEIF(N2.EQ.4)THEN
          CVL001=79
          CVL005=82
          CVL010=84
          CVL025=86
          CVL050=88
          CVL100=91
        ELSEIF(N2.EQ.5)THEN
          CVL001=81
          CVL005=85
          CVL010=87
          CVL025=90
          CVL050=92
          CVL100=96
        ELSEIF(N2.EQ.6)THEN
          CVL001=83
          CVL005=88
          CVL010=90
          CVL025=93
          CVL050=96
          CVL100=100
        ELSEIF(N2.EQ.7)THEN
          CVL001=86
          CVL005=91
          CVL010=93
          CVL025=97
          CVL050=100
          CVL100=105
        ELSEIF(N2.EQ.8)THEN
          CVL001=88
          CVL005=94
          CVL010=96
          CVL025=101
          CVL050=105
          CVL100=109
        ELSEIF(N2.EQ.9)THEN
          CVL001=91
          CVL005=97
          CVL010=100
          CVL025=105
          CVL050=109
          CVL100=114
        ELSEIF(N2.EQ.10)THEN
          CVL001=93
          CVL005=100
          CVL010=103
          CVL025=108
          CVL050=111
          CVL100=118
        ELSEIF(N2.EQ.11)THEN
          CVL001=96
          CVL005=103
          CVL010=107
          CVL025=112
          CVL050=117
          CVL100=123
        ELSEIF(N2.EQ.12)THEN
          CVL001=98
          CVL005=106
          CVL010=110
          CVL025=116
          CVL050=121
          CVL100=128
        ELSEIF(N2.EQ.13)THEN
          CVL001=102
          CVL005=110
          CVL010=114
          CVL025=120
          CVL050=126
          CVL100=132
        ELSEIF(N2.EQ.14)THEN
          CVL001=104
          CVL005=113
          CVL010=117
          CVL025=124
          CVL050=130
          CVL100=137
        ELSEIF(N2.EQ.15)THEN
          CVL001=106
          CVL005=116
          CVL010=121
          CVL025=128
          CVL050=134
          CVL100=142
        ELSEIF(N2.EQ.16)THEN
          CVL001=110
          CVL005=120
          CVL010=125
          CVL025=132
          CVL050=139
          CVL100=146
        ELSEIF(N2.EQ.17)THEN
          CVL001=113
          CVL005=123
          CVL010=128
          CVL025=136
          CVL050=143
          CVL100=151
        ELSEIF(N2.EQ.18)THEN
          CVL001=116
          CVL005=126
          CVL010=132
          CVL025=140
          CVL050=147
          CVL100=156
        ELSEIF(N2.EQ.19)THEN
          CVL001=118
          CVL005=130
          CVL010=135
          CVL025=144
          CVL050=151
          CVL100=160
        ELSEIF(N2.EQ.20)THEN
          CVL001=131
          CVL005=133
          CVL010=139
          CVL025=148
          CVL050=156
          CVL100=165
        ENDIF
      ELSEIF(N1.EQ.13)THEN
        IF(N2.EQ.2)THEN
          CVL001=91
          CVL005=91
          CVL010=92
          CVL025=93
          CVL050=94
          CVL100=96
        ELSEIF(N2.EQ.3)THEN
          CVL001=91
          CVL005=93
          CVL010=94
          CVL025=96
          CVL050=98
          CVL100=101
        ELSEIF(N2.EQ.4)THEN
          CVL001=93
          CVL005=95
          CVL010=97
          CVL025=100
          CVL050=102
          CVL100=105
        ELSEIF(N2.EQ.5)THEN
          CVL001=95
          CVL005=99
          CVL010=101
          CVL025=104
          CVL050=107
          CVL100=110
        ELSEIF(N2.EQ.6)THEN
          CVL001=97
          CVL005=102
          CVL010=104
          CVL025=108
          CVL050=111
          CVL100=115
        ELSEIF(N2.EQ.7)THEN
          CVL001=100
          CVL005=105
          CVL010=110
          CVL025=112
          CVL050=116
          CVL100=120
        ELSEIF(N2.EQ.8)THEN
          CVL001=103
          CVL005=109
          CVL010=112
          CVL025=116
          CVL050=120
          CVL100=125
        ELSEIF(N2.EQ.9)THEN
          CVL001=106
          CVL005=112
          CVL010=115
          CVL025=120
          CVL050=125
          CVL100=130
        ELSEIF(N2.EQ.10)THEN
          CVL001=109
          CVL005=116
          CVL010=119
          CVL025=125
          CVL050=129
          CVL100=135
        ELSEIF(N2.EQ.11)THEN
          CVL001=112
          CVL005=119
          CVL010=123
          CVL025=129
          CVL050=134
          CVL100=140
        ELSEIF(N2.EQ.12)THEN
          CVL001=115
          CVL005=123
          CVL010=127
          CVL025=133
          CVL050=139
          CVL100=145
        ELSEIF(N2.EQ.13)THEN
          CVL001=118
          CVL005=126
          CVL010=131
          CVL025=137
          CVL050=143
          CVL100=150
        ELSEIF(N2.EQ.14)THEN
          CVL001=121
          CVL005=130
          CVL010=135
          CVL025=142
          CVL050=148
          CVL100=155
        ELSEIF(N2.EQ.15)THEN
          CVL001=124
          CVL005=134
          CVL010=139
          CVL025=146
          CVL050=153
          CVL100=160
        ELSEIF(N2.EQ.16)THEN
          CVL001=127
          CVL005=137
          CVL010=143
          CVL025=151
          CVL050=157
          CVL100=166
        ELSEIF(N2.EQ.17)THEN
          CVL001=130
          CVL005=141
          CVL010=147
          CVL025=155
          CVL050=162
          CVL100=171
        ELSEIF(N2.EQ.18)THEN
          CVL001=134
          CVL005=145
          CVL010=151
          CVL025=159
          CVL050=167
          CVL100=176
        ELSEIF(N2.EQ.19)THEN
          CVL001=137
          CVL005=149
          CVL010=155
          CVL025=164
          CVL050=172
          CVL100=181
        ELSEIF(N2.EQ.20)THEN
          CVL001=140
          CVL005=152
          CVL010=159
          CVL025=168
          CVL050=176
          CVL100=186
        ENDIF
      ELSEIF(N1.EQ.14)THEN
        IF(N2.EQ.2)THEN
          CVL001=105
          CVL005=105
          CVL010=106
          CVL025=107
          CVL050=109
          CVL100=110
        ELSEIF(N2.EQ.3)THEN
          CVL001=105
          CVL005=107
          CVL010=108
          CVL025=111
          CVL050=113
          CVL100=116
        ELSEIF(N2.EQ.4)THEN
          CVL001=107
          CVL005=110
          CVL010=112
          CVL025=115
          CVL050=117
          CVL100=121
        ELSEIF(N2.EQ.5)THEN
          CVL001=109
          CVL005=113
          CVL010=116
          CVL025=119
          CVL050=122
          CVL100=126
        ELSEIF(N2.EQ.6)THEN
          CVL001=112
          CVL005=117
          CVL010=119
          CVL025=123
          CVL050=127
          CVL100=131
        ELSEIF(N2.EQ.7)THEN
          CVL001=115
          CVL005=121
          CVL010=123
          CVL025=128
          CVL050=132
          CVL100=137
        ELSEIF(N2.EQ.8)THEN
          CVL001=118
          CVL005=124
          CVL010=128
          CVL025=132
          CVL050=137
          CVL100=142
        ELSEIF(N2.EQ.9)THEN
          CVL001=121
          CVL005=128
          CVL010=132
          CVL025=137
          CVL050=142
          CVL100=147
        ELSEIF(N2.EQ.10)THEN
          CVL001=125
          CVL005=132
          CVL010=136
          CVL025=142
          CVL050=147
          CVL100=153
        ELSEIF(N2.EQ.11)THEN
          CVL001=128
          CVL005=136
          CVL010=140
          CVL025=146
          CVL050=152
          CVL100=158
        ELSEIF(N2.EQ.12)THEN
          CVL001=131
          CVL005=140
          CVL010=144
          CVL025=151
          CVL050=157
          CVL100=164
        ELSEIF(N2.EQ.13)THEN
          CVL001=135
          CVL005=144
          CVL010=149
          CVL025=156
          CVL050=162
          CVL100=169
        ELSEIF(N2.EQ.14)THEN
          CVL001=138
          CVL005=148
          CVL010=153
          CVL025=161
          CVL050=167
          CVL100=175
        ELSEIF(N2.EQ.15)THEN
          CVL001=142
          CVL005=152
          CVL010=157
          CVL025=165
          CVL050=172
          CVL100=180
        ELSEIF(N2.EQ.16)THEN
          CVL001=145
          CVL005=156
          CVL010=162
          CVL025=170
          CVL050=177
          CVL100=186
        ELSEIF(N2.EQ.17)THEN
          CVL001=149
          CVL005=160
          CVL010=166
          CVL025=175
          CVL050=183
          CVL100=191
        ELSEIF(N2.EQ.18)THEN
          CVL001=152
          CVL005=164
          CVL010=171
          CVL025=180
          CVL050=188
          CVL100=197
        ELSEIF(N2.EQ.19)THEN
          CVL001=156
          CVL005=169
          CVL010=175
          CVL025=184
          CVL050=193
          CVL100=203
        ELSEIF(N2.EQ.20)THEN
          CVL001=160
          CVL005=173
          CVL010=179
          CVL025=189
          CVL050=198
          CVL100=208
        ENDIF
      ELSEIF(N1.EQ.15)THEN
        IF(N2.EQ.2)THEN
          CVL001=120
          CVL005=120
          CVL010=121
          CVL025=122
          CVL050=124
          CVL100=126
        ELSEIF(N2.EQ.3)THEN
          CVL001=120
          CVL005=123
          CVL010=124
          CVL025=126
          CVL050=128
          CVL100=131
        ELSEIF(N2.EQ.4)THEN
          CVL001=122
          CVL005=126
          CVL010=128
          CVL025=131
          CVL050=133
          CVL100=137
        ELSEIF(N2.EQ.5)THEN
          CVL001=125
          CVL005=129
          CVL010=132
          CVL025=135
          CVL050=139
          CVL100=143
        ELSEIF(N2.EQ.6)THEN
          CVL001=128
          CVL005=133
          CVL010=136
          CVL025=140
          CVL050=144
          CVL100=148
        ELSEIF(N2.EQ.7)THEN
          CVL001=133
          CVL005=137
          CVL010=140
          CVL025=145
          CVL050=149
          CVL100=154
        ELSEIF(N2.EQ.8)THEN
          CVL001=135
          CVL005=141
          CVL010=145
          CVL025=150
          CVL050=154
          CVL100=160
        ELSEIF(N2.EQ.9)THEN
          CVL001=138
          CVL005=145
          CVL010=149
          CVL025=155
          CVL050=160
          CVL100=166
        ELSEIF(N2.EQ.10)THEN
          CVL001=142
          CVL005=150
          CVL010=154
          CVL025=160
          CVL050=165
          CVL100=172
        ELSEIF(N2.EQ.11)THEN
          CVL001=145
          CVL005=154
          CVL010=158
          CVL025=165
          CVL050=171
          CVL100=178
        ELSEIF(N2.EQ.12)THEN
          CVL001=149
          CVL005=158
          CVL010=163
          CVL025=170
          CVL050=176
          CVL100=184
        ELSEIF(N2.EQ.13)THEN
          CVL001=153
          CVL005=163
          CVL010=168
          CVL025=175
          CVL050=182
          CVL100=189
        ELSEIF(N2.EQ.14)THEN
          CVL001=157
          CVL005=167
          CVL010=172
          CVL025=180
          CVL050=187
          CVL100=195
        ELSEIF(N2.EQ.15)THEN
          CVL001=161
          CVL005=172
          CVL010=177
          CVL025=185
          CVL050=193
          CVL100=201
        ELSEIF(N2.EQ.16)THEN
          CVL001=164
          CVL005=176
          CVL010=182
          CVL025=191
          CVL050=198
          CVL100=207
        ELSEIF(N2.EQ.17)THEN
          CVL001=168
          CVL005=181
          CVL010=187
          CVL025=196
          CVL050=204
          CVL100=213
        ELSEIF(N2.EQ.18)THEN
          CVL001=172
          CVL005=185
          CVL010=191
          CVL025=201
          CVL050=209
          CVL100=219
        ELSEIF(N2.EQ.19)THEN
          CVL001=176
          CVL005=190
          CVL010=196
          CVL025=206
          CVL050=215
          CVL100=225
        ELSEIF(N2.EQ.20)THEN
          CVL001=180
          CVL005=194
          CVL010=201
          CVL025=211
          CVL050=221
          CVL100=231
        ENDIF
      ELSEIF(N1.EQ.16)THEN
        IF(N2.EQ.2)THEN
          CVL001=136
          CVL005=136
          CVL010=137
          CVL025=138
          CVL050=140
          CVL100=142
        ELSEIF(N2.EQ.3)THEN
          CVL001=136
          CVL005=139
          CVL010=140
          CVL025=143
          CVL050=145
          CVL100=148
        ELSEIF(N2.EQ.4)THEN
          CVL001=139
          CVL005=142
          CVL010=144
          CVL025=148
          CVL050=151
          CVL100=154
        ELSEIF(N2.EQ.5)THEN
          CVL001=142
          CVL005=146
          CVL010=149
          CVL025=152
          CVL050=156
          CVL100=160
        ELSEIF(N2.EQ.6)THEN
          CVL001=145
          CVL005=150
          CVL010=153
          CVL025=156
          CVL050=162
          CVL100=166
        ELSEIF(N2.EQ.7)THEN
          CVL001=148
          CVL005=155
          CVL010=158
          CVL025=163
          CVL050=167
          CVL100=173
        ELSEIF(N2.EQ.8)THEN
          CVL001=152
          CVL005=159
          CVL010=163
          CVL025=168
          CVL050=173
          CVL100=179
        ELSEIF(N2.EQ.9)THEN
          CVL001=156
          CVL005=164
          CVL010=168
          CVL025=174
          CVL050=179
          CVL100=185
        ELSEIF(N2.EQ.10)THEN
          CVL001=160
          CVL005=168
          CVL010=173
          CVL025=179
          CVL050=185
          CVL100=191
        ELSEIF(N2.EQ.11)THEN
          CVL001=164
          CVL005=173
          CVL010=178
          CVL025=184
          CVL050=191
          CVL100=198
        ELSEIF(N2.EQ.12)THEN
          CVL001=168
          CVL005=178
          CVL010=183
          CVL025=190
          CVL050=197
          CVL100=204
        ELSEIF(N2.EQ.13)THEN
          CVL001=172
          CVL005=182
          CVL010=188
          CVL025=196
          CVL050=202
          CVL100=211
        ELSEIF(N2.EQ.14)THEN
          CVL001=176
          CVL005=187
          CVL010=193
          CVL025=201
          CVL050=208
          CVL100=217
        ELSEIF(N2.EQ.15)THEN
          CVL001=180
          CVL005=192
          CVL010=198
          CVL025=207
          CVL050=214
          CVL100=223
        ELSEIF(N2.EQ.16)THEN
          CVL001=185
          CVL005=197
          CVL010=203
          CVL025=212
          CVL050=220
          CVL100=230
        ELSEIF(N2.EQ.17)THEN
          CVL001=189
          CVL005=202
          CVL010=208
          CVL025=218
          CVL050=226
          CVL100=236
        ELSEIF(N2.EQ.18)THEN
          CVL001=193
          CVL005=207
          CVL010=213
          CVL025=223
          CVL050=232
          CVL100=243
        ELSEIF(N2.EQ.19)THEN
          CVL001=197
          CVL005=211
          CVL010=219
          CVL025=229
          CVL050=238
          CVL100=249
        ELSEIF(N2.EQ.20)THEN
          CVL001=202
          CVL005=216
          CVL010=224
          CVL025=235
          CVL050=244
          CVL100=256
        ENDIF
      ELSEIF(N1.EQ.17)THEN
        IF(N2.EQ.2)THEN
          CVL001=153
          CVL005=153
          CVL010=154
          CVL025=156
          CVL050=157
          CVL100=160
        ELSEIF(N2.EQ.3)THEN
          CVL001=154
          CVL005=156
          CVL010=158
          CVL025=160
          CVL050=163
          CVL100=166
        ELSEIF(N2.EQ.4)THEN
          CVL001=156
          CVL005=160
          CVL010=162
          CVL025=165
          CVL050=169
          CVL100=172
        ELSEIF(N2.EQ.5)THEN
          CVL001=159
          CVL005=164
          CVL010=167
          CVL025=171
          CVL050=174
          CVL100=179
        ELSEIF(N2.EQ.6)THEN
          CVL001=163
          CVL005=169
          CVL010=172
          CVL025=176
          CVL050=180
          CVL100=185
        ELSEIF(N2.EQ.7)THEN
          CVL001=167
          CVL005=173
          CVL010=177
          CVL025=182
          CVL050=187
          CVL100=192
        ELSEIF(N2.EQ.8)THEN
          CVL001=171
          CVL005=178
          CVL010=182
          CVL025=188
          CVL050=193
          CVL100=199
        ELSEIF(N2.EQ.9)THEN
          CVL001=175
          CVL005=183
          CVL010=187
          CVL025=193
          CVL050=199
          CVL100=206
        ELSEIF(N2.EQ.10)THEN
          CVL001=179
          CVL005=188
          CVL010=192
          CVL025=199
          CVL050=205
          CVL100=212
        ELSEIF(N2.EQ.11)THEN
          CVL001=183
          CVL005=193
          CVL010=198
          CVL025=205
          CVL050=211
          CVL100=219
        ELSEIF(N2.EQ.12)THEN
          CVL001=188
          CVL005=198
          CVL010=203
          CVL025=211
          CVL050=218
          CVL100=226
        ELSEIF(N2.EQ.13)THEN
          CVL001=192
          CVL005=203
          CVL010=209
          CVL025=217
          CVL050=224
          CVL100=233
        ELSEIF(N2.EQ.14)THEN
          CVL001=197
          CVL005=208
          CVL010=214
          CVL025=223
          CVL050=231
          CVL100=239
        ELSEIF(N2.EQ.15)THEN
          CVL001=201
          CVL005=214
          CVL010=220
          CVL025=229
          CVL050=237
          CVL100=246
        ELSEIF(N2.EQ.16)THEN
          CVL001=206
          CVL005=219
          CVL010=225
          CVL025=235
          CVL050=243
          CVL100=253
        ELSEIF(N2.EQ.17)THEN
          CVL001=211
          CVL005=224
          CVL010=231
          CVL025=241
          CVL050=250
          CVL100=260
        ELSEIF(N2.EQ.18)THEN
          CVL001=215
          CVL005=229
          CVL010=236
          CVL025=247
          CVL050=256
          CVL100=267
        ELSEIF(N2.EQ.19)THEN
          CVL001=220
          CVL005=235
          CVL010=242
          CVL025=253
          CVL050=263
          CVL100=274
        ELSEIF(N2.EQ.20)THEN
          CVL001=224
          CVL005=240
          CVL010=247
          CVL025=259
          CVL050=269
          CVL100=281
        ENDIF
      ELSEIF(N1.EQ.18)THEN
        IF(N2.EQ.2)THEN
          CVL001=171
          CVL005=171
          CVL010=172
          CVL025=174
          CVL050=176
          CVL100=178
        ELSEIF(N2.EQ.3)THEN
          CVL001=172
          CVL005=174
          CVL010=176
          CVL025=179
          CVL050=181
          CVL100=185
        ELSEIF(N2.EQ.4)THEN
          CVL001=175
          CVL005=178
          CVL010=181
          CVL025=184
          CVL050=188
          CVL100=192
        ELSEIF(N2.EQ.5)THEN
          CVL001=178
          CVL005=183
          CVL010=186
          CVL025=190
          CVL050=194
          CVL100=199
        ELSEIF(N2.EQ.6)THEN
          CVL001=182
          CVL005=188
          CVL010=191
          CVL025=196
          CVL050=200
          CVL100=206
        ELSEIF(N2.EQ.7)THEN
          CVL001=186
          CVL005=193
          CVL010=196
          CVL025=202
          CVL050=207
          CVL100=213
        ELSEIF(N2.EQ.8)THEN
          CVL001=190
          CVL005=198
          CVL010=202
          CVL025=208
          CVL050=213
          CVL100=220
        ELSEIF(N2.EQ.9)THEN
          CVL001=195
          CVL005=203
          CVL010=208
          CVL025=214
          CVL050=220
          CVL100=227
        ELSEIF(N2.EQ.10)THEN
          CVL001=199
          CVL005=209
          CVL010=213
          CVL025=220
          CVL050=227
          CVL100=234
        ELSEIF(N2.EQ.11)THEN
          CVL001=204
          CVL005=214
          CVL010=219
          CVL025=227
          CVL050=233
          CVL100=241
        ELSEIF(N2.EQ.12)THEN
          CVL001=209
          CVL005=219
          CVL010=225
          CVL025=233
          CVL050=240
          CVL100=249
        ELSEIF(N2.EQ.13)THEN
          CVL001=214
          CVL005=225
          CVL010=231
          CVL025=239
          CVL050=247
          CVL100=256
        ELSEIF(N2.EQ.14)THEN
          CVL001=218
          CVL005=230
          CVL010=237
          CVL025=246
          CVL050=254
          CVL100=263
        ELSEIF(N2.EQ.15)THEN
          CVL001=223
          CVL005=236
          CVL010=242
          CVL025=252
          CVL050=260
          CVL100=270
        ELSEIF(N2.EQ.16)THEN
          CVL001=228
          CVL005=242
          CVL010=248
          CVL025=258
          CVL050=267
          CVL100=278
        ELSEIF(N2.EQ.17)THEN
          CVL001=233
          CVL005=247
          CVL010=254
          CVL025=265
          CVL050=274
          CVL100=285
        ELSEIF(N2.EQ.18)THEN
          CVL001=238
          CVL005=253
          CVL010=260
          CVL025=271
          CVL050=281
          CVL100=292
        ELSEIF(N2.EQ.19)THEN
          CVL001=243
          CVL005=259
          CVL010=266
          CVL025=278
          CVL050=288
          CVL100=300
        ELSEIF(N2.EQ.20)THEN
          CVL001=248
          CVL005=264
          CVL010=272
          CVL025=284
          CVL050=295
          CVL100=307
        ENDIF
      ELSEIF(N1.EQ.19)THEN
        IF(N2.EQ.2)THEN
          CVL001=190
          CVL005=191
          CVL010=192
          CVL025=193
          CVL050=195
          CVL100=198
        ELSEIF(N2.EQ.3)THEN
          CVL001=191
          CVL005=194
          CVL010=195
          CVL025=198
          CVL050=201
          CVL100=205
        ELSEIF(N2.EQ.4)THEN
          CVL001=194
          CVL005=198
          CVL010=200
          CVL025=204
          CVL050=208
          CVL100=212
        ELSEIF(N2.EQ.5)THEN
          CVL001=198
          CVL005=203
          CVL010=206
          CVL025=210
          CVL050=214
          CVL100=219
        ELSEIF(N2.EQ.6)THEN
          CVL001=202
          CVL005=208
          CVL010=211
          CVL025=216
          CVL050=221
          CVL100=227
        ELSEIF(N2.EQ.7)THEN
          CVL001=206
          CVL005=213
          CVL010=217
          CVL025=223
          CVL050=228
          CVL100=234
        ELSEIF(N2.EQ.8)THEN
          CVL001=211
          CVL005=219
          CVL010=223
          CVL025=229
          CVL050=235
          CVL100=242
        ELSEIF(N2.EQ.9)THEN
          CVL001=216
          CVL005=224
          CVL010=229
          CVL025=236
          CVL050=242
          CVL100=249
        ELSEIF(N2.EQ.10)THEN
          CVL001=220
          CVL005=230
          CVL010=235
          CVL025=243
          CVL050=249
          CVL100=257
        ELSEIF(N2.EQ.11)THEN
          CVL001=225
          CVL005=236
          CVL010=241
          CVL025=249
          CVL050=256
          CVL100=264
        ELSEIF(N2.EQ.12)THEN
          CVL001=231
          CVL005=242
          CVL010=247
          CVL025=256
          CVL050=263
          CVL100=272
        ELSEIF(N2.EQ.13)THEN
          CVL001=236
          CVL005=248
          CVL010=254
          CVL025=263
          CVL050=271
          CVL100=280
        ELSEIF(N2.EQ.14)THEN
          CVL001=241
          CVL005=254
          CVL010=260
          CVL025=269
          CVL050=278
          CVL100=288
        ELSEIF(N2.EQ.15)THEN
          CVL001=246
          CVL005=260
          CVL010=266
          CVL025=276
          CVL050=285
          CVL100=295
        ELSEIF(N2.EQ.16)THEN
          CVL001=251
          CVL005=265
          CVL010=273
          CVL025=283
          CVL050=292
          CVL100=303
        ELSEIF(N2.EQ.17)THEN
          CVL001=257
          CVL005=272
          CVL010=279
          CVL025=290
          CVL050=300
          CVL100=311
        ELSEIF(N2.EQ.18)THEN
          CVL001=262
          CVL005=278
          CVL010=285
          CVL025=297
          CVL050=307
          CVL100=319
        ELSEIF(N2.EQ.19)THEN
          CVL001=268
          CVL005=284
          CVL010=292
          CVL025=304
          CVL050=314
          CVL100=326
        ELSEIF(N2.EQ.20)THEN
          CVL001=273
          CVL005=290
          CVL010=298
          CVL025=310
          CVL050=321
          CVL100=334
        ENDIF
      ELSEIF(N1.EQ.20)THEN
        IF(N2.EQ.2)THEN
          CVL001=210
          CVL005=211
          CVL010=212
          CVL025=213
          CVL050=215
          CVL100=218
        ELSEIF(N2.EQ.3)THEN
          CVL001=211
          CVL005=214
          CVL010=216
          CVL025=219
          CVL050=222
          CVL100=226
        ELSEIF(N2.EQ.4)THEN
          CVL001=214
          CVL005=219
          CVL010=221
          CVL025=225
          CVL050=229
          CVL100=233
        ELSEIF(N2.EQ.5)THEN
          CVL001=218
          CVL005=224
          CVL010=227
          CVL025=231
          CVL050=236
          CVL100=241
        ELSEIF(N2.EQ.6)THEN
          CVL001=223
          CVL005=229
          CVL010=233
          CVL025=238
          CVL050=243
          CVL100=249
        ELSEIF(N2.EQ.7)THEN
          CVL001=227
          CVL005=235
          CVL010=239
          CVL025=245
          CVL050=250
          CVL100=257
        ELSEIF(N2.EQ.8)THEN
          CVL001=232
          CVL005=241
          CVL010=245
          CVL025=251
          CVL050=258
          CVL100=265
        ELSEIF(N2.EQ.9)THEN
          CVL001=237
          CVL005=247
          CVL010=251
          CVL025=259
          CVL050=265
          CVL100=273
        ELSEIF(N2.EQ.10)THEN
          CVL001=243
          CVL005=253
          CVL010=258
          CVL025=266
          CVL050=273
          CVL100=281
        ELSEIF(N2.EQ.11)THEN
          CVL001=248
          CVL005=259
          CVL010=264
          CVL025=273
          CVL050=280
          CVL100=289
        ELSEIF(N2.EQ.12)THEN
          CVL001=253
          CVL005=265
          CVL010=271
          CVL025=280
          CVL050=288
          CVL100=293
        ELSEIF(N2.EQ.13)THEN
          CVL001=259
          CVL005=271
          CVL010=278
          CVL025=287
          CVL050=295
          CVL100=305
        ELSEIF(N2.EQ.14)THEN
          CVL001=265
          CVL005=278
          CVL010=284
          CVL025=294
          CVL050=303
          CVL100=313
        ELSEIF(N2.EQ.15)THEN
          CVL001=270
          CVL005=284
          CVL010=291
          CVL025=301
          CVL050=311
          CVL100=321
        ELSEIF(N2.EQ.16)THEN
          CVL001=276
          CVL005=290
          CVL010=298
          CVL025=309
          CVL050=318
          CVL100=330
        ELSEIF(N2.EQ.17)THEN
          CVL001=281
          CVL005=297
          CVL010=304
          CVL025=316
          CVL050=326
          CVL100=338
        ELSEIF(N2.EQ.18)THEN
          CVL001=287
          CVL005=303
          CVL010=311
          CVL025=323
          CVL050=334
          CVL100=346
        ELSEIF(N2.EQ.19)THEN
          CVL001=293
          CVL005=310
          CVL010=318
          CVL025=330
          CVL050=341
          CVL100=354
        ELSEIF(N2.EQ.20)THEN
          CVL001=299
          CVL005=316
          CVL010=325
          CVL025=338
          CVL050=349
          CVL100=362
        ENDIF
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MNN6')THEN
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPMNN6--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)CVL001,CVL005,CVL010
 9013   FORMAT('CVL001,CVL005,CVL010 = ',3F12.1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)CVL025,CVL050,CVL100
 9015   FORMAT('CVL025,CVL050,CVL100 = ',3F12.1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMMEA(NPTS,NLAB,
     1                  ASM,ASD2,SET2,SET2K1,SET2K2,
     1                  DLOWT1,DHIGT1,
     1                  IWRITE,
     1                  ICAPSW,ICAPTY,NUMDIG,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT MEAN OF MEANS APPROACH TO CONSENSUS MEANS
C     PRINTING--YES
C     SUBROUTINES NEEDED--TPPF
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/3
C     ORIGINAL VERSION--MARCH     2006. EXTRACTED FROM DPMAN2 ROUTINE
C     UPDATED         --OCTOBER   2006. CALL LIST TO TPPF
C     UPDATED         --FEBRUARY  2010. USE DPDTA1 TO PRINT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      REAL APPF
      REAL ASM
      REAL ASD2
      REAL SET2
      REAL SET2K1
      REAL SET2K2
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPMM'
      ISUBN2='EA  '
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MMEA')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMMEA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NLAB,ASM,ASD2
   52   FORMAT('NPTS,NLAB,ASM,ASD2 = ',2I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IWRITE
   54   FORMAT('IWRITE = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      SET2=ASD2/SQRT(REAL(NLAB))
      SET2K1=SET2
      SET2K2=2.0*SET2
      IDF=NLAB-1
      CALL TPPF(0.975,REAL(IDF),APPF)
      DLOWT1=DBLE(ASM - APPF*SET2)
      DHIGT1=DBLE(ASM + APPF*SET2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)=' 9. Method: Mean of Means'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='    Mean of Lab Means:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=ASM
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Deviation of Lab Means:'
      NCTEXT(ICNT)=36
      AVALUE(ICNT)=ASD2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Uncertainty (sd/sqrt(n)):'
      NCTEXT(ICNT)=38
      AVALUE(ICNT)=SET2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    SD of Consensus Mean (sd/sqrt(n)):'
      NCTEXT(ICNT)=38
      AVALUE(ICNT)=SET2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Uncertainty (k = 1):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=SET2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k = 2):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=2.0*SET2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k =           ):'
      WRITE(ITEXT(ICNT)(31:40),'(F10.7)')APPF
      NCTEXT(ICNT)=42
      AVALUE(ICNT)=APPF*SET2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Degrees of Freedom:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(IDF)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='    t Percent Point Value (alpha = 0.05):'
      NCTEXT(ICNT)=41
      AVALUE(ICNT)=APPF
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Lower 95% (normal) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=DLOWT1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Upper 95% (normal) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=DHIGT1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Note: Mean of Means Best Usage:'
      NCTEXT(ICNT)=35
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='          Any Number of Labs:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO310I=1,NUMROW
        NTOT(I)=15
  310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
      ITITL9=' '
      NCTIT9=0
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MMEA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMMEA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IERRO,NPTS,NLAB
 9013   FORMAT('IERROR,NPTS,NLAB = ',A4,2X,2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)SET1,SET2,DLOWT1,DHIGT1
 9015   FORMAT('SET1,SET2,DLOWT1,DHIGT1 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMMED(NPTS,NLAB,AMEAN,ASD,
     1                  TEMP1,TEMP2,TEMP3,AINDEX,IINDEX,
     1                  SMOOTH,FT,DTEMP1,
     1                  XMEDME,SEMED,SEMEK1,
     1                  DLOWM0,DHIGM0,DLOWM1,DHIGM1,
     1                  DLOWM2,DHIGM2,DLOWM3,DHIGM3,
     1                  IWRITE,IOUNI5,MAXNXT,
     1                  ICAPSW,ICAPTY,NUMDIG,ISEED,IBOOSS,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT:
C
C              1) MEDIAN OF MEANS
C
C              STANDARD ERRORS ARE OBTAINED VIA A BOOTSTRAP METHOD
C     PRINTING--YES
C     SUBROUTINES NEEDED--TPPF
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2012/10
C     ORIGINAL VERSION--OCTOBER   2012.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C
      REAL AMEAN(*)
      REAL ASD(*)
      REAL TEMP1(*)
      REAL TEMP2(*)
      REAL TEMP3(*)
      REAL AINDEX(*)
C
      DOUBLE PRECISION SMOOTH(*)
      DOUBLE PRECISION FT(*)
      DOUBLE PRECISION DTEMP1(*)
C
      INTEGER IINDEX(*)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
      CHARACTER*4 IWRITE
      CHARACTER*4 ICASJB
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      REAL XMEDME
      REAL XMED
      REAL XSD
      REAL SEMED
      REAL SEMEK1
      REAL SEMEK2
      REAL ALPHAL
      REAL ALPHAU
      REAL XPERC
      REAL XPERCL
      REAL XPERCU
      REAL XPERC1
      REAL XPERC2
      REAL WIDTH
      REAL P
      REAL ANI
      REAL AN
      REAL A2NI
      REAL REM
      REAL AIQ
      REAL DIFF
      REAL DIFFT
      REAL ALOW
      REAL AUPP
      REAL AK3
      REAL AIVAR
      REAL ALAMB
      REAL ALPHA
      REAL AK
      REAL CDF1
      REAL CDF2
      REAL GK
      REAL GKP1
      REAL AKP
      REAL ANMK
      REAL ANMKP
      REAL P100
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=30)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPMM'
      ISUBN2='ED  '
C
      IINDX=0
      ICNT=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MMED')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMMED--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NLAB,ASM,ASD2
   52   FORMAT('NPTS,NLAB,ASM,ASD2 = ',2I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO60I=1,NLAB
          WRITE(ICOUT,62)I,AMEAN(I),ASD(I)
   62     FORMAT('I,AMEAN(I),ASD(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   60   CONTINUE
      ENDIF
C
C     STEP 1: COMPUTE THE MEDIAN OF THE MEANS, THE STANDARD ERROR,
C             AND THE HETTMANSPERGER-SHEATHER 95% CONFIDENCE INTERVAL.
C
      CALL MEDIAN(AMEAN,NLAB,IWRITE,TEMP1,MAXNXT,XMEDME,IBUGA3,IERROR)
      P100=0.5
      CALL QUANSE(P100,AMEAN,NLAB,IWRITE,TEMP1,MAXNXT,IQUASE,SEMED,
     1            IBUGA3,IERROR)
C
      DP=0.5D0
      AN=REAL(NLAB)
      CALL SORT(AMEAN,NLAB,TEMP1)
      ALPHA=(100.0-95.0)/100.
      CALL BINPPF(DBLE(ALPHA/2.0),DP,NLAB,DPPF)
      AK=REAL(DPPF)
      CALL BINCDF(DBLE(AN-AK),DP,NLAB,DCDF)
      CDF1=REAL(DCDF)
      CALL BINCDF(DBLE(AK-1.0),DP,NLAB,DCDF)
      CDF2=REAL(DCDF)
      GK=CDF1-CDF2
      IF(GK.GE.1.0-ALPHA)THEN
        CALL BINCDF(DBLE(AN-AK-1.0),DP,NLAB,DCDF)
        CDF1=REAL(DCDF)
        CALL BINCDF(DBLE(AK-1.0),DP,NLAB,DCDF)
        CDF2=REAL(DCDF)
        GKP1=CDF1-CDF2
        AKP=AK+1.0
      ELSE
        AK=AK-1.0
        CALL BINCDF(DBLE(AN-AK),DP,NLAB,DCDF)
        CDF1=REAL(DCDF)
        CALL BINCDF(DBLE(AK-1.0),DP,NLAB,DCDF)
        CDF2=REAL(DCDF)
        GKP1=CDF1-CDF2
        AKP=AK+1.0
      ENDIF
      ANMK=AN-AK
      ANMKP=ANMK+1.0
      AIVAR=(GK-1.0+ALPHA)/(GK-GKP1)
      ALAMB=((AN-AK)*AIVAR)/(AK+(AN-2.0*AK)*AIVAR)
      DLOWM0=ALAMB*TEMP1(INT(AKP)) + (1.0-ALAMB)*TEMP1(INT(AK))
      DHIGM0=ALAMB*TEMP1(INT(ANMK)) + (1.0-ALAMB)*TEMP1(INT(ANMKP))
C
C     STEP 2: NOW COMPUTE THE STANDARD ERROR BASED ON A NON-PARAMETRIC
C             BOOTSTRAP.
C
      ICASJB='BOOT'
      NRESAM=IBOOSS
C
      IF(IOUNI5.GT.0)THEN
        WRITE(IOUNI5,1009)
 1009   FORMAT('CONSENSUS MEAN ESTIMATES FROM MEDIAN OF MEANS ',
     1         'BOOTSTRAP SAMPLES')
      ENDIF
C
      DO1100IRESAM=1,NRESAM
        CALL DPJBS3(AMEAN,NLAB,ICASJB,IJACIN,ISEED,TEMP2,NTEMP,
     1              IINDEX,AINDEX,
     1              IBUGA3,IERROR)
        CALL MEDIAN(TEMP2,NTEMP,IWRITE,TEMP1,MAXNXT,XMED,
     1              IBUGA3,IERROR)
        TEMP3(IRESAM)=XMED
        DTEMP1(IRESAM)=XMED
        IF(IOUNI5.GT.0)WRITE(IOUNI5,'(E15.7)')XMED
C
 1100 CONTINUE
C
C     STEP 3: COMPUTE BOOTSTRAP BASED STANDARD ERRORS
C
C             3 METHODS FOR COMPUTING 95% CONFIDENCE INTERVAL:
C
C             1) PERCENTILE (THESE ARE NOT NECESSARILY SYMMETRIC
C
C             2) SYMMETRIC INTERVALS EASY WAY - TAKE LARGER OF
C                (MEAN - 0.025 PERCENTILE) AND (0.975 PERCENTILE - MEAN)
C
C             3) COMPUTE KERNEL DENSITY ESTIMATE, MOVE OUT FROM MEAN
C                IN EQUAL INCREMENTS UNTIL APPROPRIATE COVERAGE REACHED
C
C     PERCENTILE METHOD
C
      CALL SD(TEMP3,NRESAM,IWRITE,XSD,IBUGA3,IERROR)
      SEMEK1=XSD
      SEMEK2=2.0*XSD
      ALPHAL=100.0*0.025
      ALPHAU=100.0*0.975
C
      CALL PERCEN(ALPHAL,TEMP3,NRESAM,IWRITE,TEMP1,NRESAM,
     1            XPERC,IBUGA3,IERROR)
      XPERCL=XPERC
      CALL PERCEN(ALPHAU,TEMP3,NRESAM,IWRITE,TEMP1,NRESAM,
     1            XPERC,IBUGA3,IERROR)
      XPERCU=XPERC
C
      DLOWM1=DBLE(XPERCL)
      DHIGM1=DBLE(XPERCU)
C
C     SIMPLE SYMMETRIC INTERVAL
C
      WIDTH=MAX(ABS(XMEDME - XPERCL),ABS(XPERCU  - XMEDME))
      DLOWM2=DBLE(XMEDME - WIDTH)
      DHIGM2=DBLE(XMEDME + WIDTH)
      AK2=WIDTH/SEMEK1
C
C     NOW GENERATE THE KERNEL DENSITY TRACE
C
      KFLAG=1
      CALL DSORT(DTEMP1,DTEMP1,NRESAM,KFLAG,IERROR)
      DN=REAL(NRESAM)
      DSUM=0.0D0
      DO11410I=1,NRESAM
        DSUM=DSUM + DTEMP1(I)
11410 CONTINUE
      DMEAN=DSUM/DN
      DSUM=0.0D0
      DO11420I=1,NRESAM
        DX=DTEMP1(I)
        DSUM=DSUM+(DX-DMEAN)**2
11420 CONTINUE
      DVAR=DSUM/(DN-1.0D0)
      DSD=0.0D0
      IF(DVAR.GT.0.0D0)DSD=DSQRT(DVAR)
C
      P=0.25
      AN=REAL(DN)
      ANI=P*(AN+1.0)
      NI=INT(ANI)
      A2NI=REAL(NI)
      REM=ANI-A2NI
      NIP1=NI+1
      IF(NI.LE.1)NI=1
      IF(NI.GE.NRESAM)NI=NRESAM
      IF(NIP1.LE.1)NIP1=1
      IF(NIP1.GE.NRESAM)NIP1=NRESAM
      XPERC1=(1.0-REM)*DTEMP1(NI)+REM*DTEMP1(NIP1)
C
      P=0.75
      ANI=P*(AN+1.0)
      NI=INT(ANI)
      A2NI=REAL(ANI)
      REM=ANI-A2NI
      NIP1=NI+1
      IF(NI.LE.1)NI=1
      IF(NI.GE.NRESAM)NI=NRESAM
      IF(NIP1.LE.1)NIP1=1
      IF(NIP1.GE.NRESAM)NIP1=NRESAM
      XPERC2=(1.0-REM)*DTEMP1(NI)+REM*DTEMP1(NIP1)
      AIQ=(XPERC2-XPERC1)/1.34
      AIQ=ABS(AIQ)
C
      DH=0.9D0*MIN(DSD,DBLE(AIQ))*DN**(-1.0D0/5.0D0)
      DLO=DTEMP1(1) - 3.0D0*DH
      DHI=DTEMP1(NRESAM) + 3.0D0*DH
C
      ICAL=0
      IKENDP=2048
      IERROR='NO'
      CALL DENEST(DTEMP1,NRESAM,DLO,DHI,DH,FT,SMOOTH,IKENDP,ICAL,
     1            IERROR)
      DIFF=CPUMAX
      DO11430I=1,IKENDP
        TEMP1(I)=REAL(SMOOTH(I))
        TEMP3(I)=REAL(DLO + (DBLE(I) - 0.5D0)*(DHI-DLO)/DBLE(IKENDP))
CCCCC   XPLOT(I)=TEMP3(I)
CCCCC   YPLOT(I)=TEMP1(I)
        DIFFT=ABS(TEMP3(I) - XMEDME)
        IF(DIFFT.LT.DIFF)THEN
          IINDX=I
          DIFF=DIFFT
        ENDIF
11430 CONTINUE
      NPLOT=IKENDP
      NUMVAR=2
      CALL CUMINT(TEMP1,TEMP3,IKENDP,NUMVAR,IWRITE,TEMP2,
     1            IBUGA3,IERROR)
C
C     THE CUMULATIVE INTEGRAL IS NOW IN TEMP2 (AND TEMP4 IS THE
C     X-COORDINATE).  START FROM XMEDME VALUE AND MOVE IN EQUAL
C     INCREMENTS UNTIL SUFFICENT COVERAGE IS OBTAINED.
C
      ICNT=0
      DHIGM3=TEMP3(IKENDP)
      DLOWM3=TEMP3(1)
      DO11500I=IINDX,IKENDP
        ICNT=ICNT+1
        IUPP=IINDX+ICNT
        ILOW=IINDX-ICNT
        IF(ILOW.LT.1)GOTO11509
        AUPP=1.0 - TEMP2(IUPP)
        ALOW=TEMP2(ILOW)
        IF(ALOW+AUPP.LT.0.05)THEN
          DHIGM3=TEMP3(IUPP)
          DLOWM3=TEMP3(ILOW)
          GOTO11509
        ENDIF
11500 CONTINUE
11509 CONTINUE
C
      WIDTH=REAL(DHIGM3 - DBLE(XMEDME))
      AK3=WIDTH/SEMEK1
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)='14. Method: Median of Means'
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='    Median of Lab Means:'
      NCTEXT(ICNT)=24
      AVALUE(ICNT)=XMEDME
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Variance of Median of Means:'
      NCTEXT(ICNT)=32
      AVALUE(ICNT)=SQRT(SEMED)
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Uncertainty (k = 1):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=SEMED
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k = 2):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=2.0*SEMED
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Lower 95% Confidence Interval:'
      NCTEXT(ICNT)=34
CCCCC AVALUE(ICNT)=DLOWM0
      AVALUE(ICNT)=XMEDME - 1.96*SEMED
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Upper 95% Confidence Interval:'
      NCTEXT(ICNT)=34
CCCCC AVALUE(ICNT)=DHIGM0
      AVALUE(ICNT)=XMEDME + 1.96*SEMED
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='    Bootstrap Uncertainties:'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='    Number of Bootstrap Samples:'
      NCTEXT(ICNT)=31
      AVALUE(ICNT)=REAL(NRESAM)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='    Variance of Consensus Mean:'
      NCTEXT(ICNT)=31
      AVALUE(ICNT)=SEMEK1**2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Uncertainty (k = 1):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=SEMEK1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k = 2):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=SEMEK2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=
     1 '    Lower 95% (percentile bootstrap) Confidence Limit:'
      NCTEXT(ICNT)=54
      AVALUE(ICNT)=DLOWM1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=
     1 '    Upper 95% (percentile bootstrap) Confidence Limit:'
      NCTEXT(ICNT)=54
      AVALUE(ICNT)=DHIGM1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=
     1 '    Lower 95% (symmetric bootstrap) Confidence Limit:'
      NCTEXT(ICNT)=53
      AVALUE(ICNT)=DLOWM2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=
     1 '    Upper 95% (symmetric bootstrap) Confidence Limit:'
      NCTEXT(ICNT)=53
      AVALUE(ICNT)=DHIGM2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    K (symmetric bootstrap) Coverage Factor:'
      NCTEXT(ICNT)=44
      AVALUE(ICNT)=AK2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=
     1 '    Lower 95% (kernel bootstrap) Confidence Limit:'
      NCTEXT(ICNT)=50
      AVALUE(ICNT)=DLOWM3
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=
     1 '    Upper 95% (kernel bootstrap) Confidence Limit:'
      NCTEXT(ICNT)=50
      AVALUE(ICNT)=DHIGM3
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    K (kernel bootstrap) Coverage Factor:'
      NCTEXT(ICNT)=41
      AVALUE(ICNT)=AK3
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='    Note: Median of Means Best Usage:'
      NCTEXT(ICNT)=37
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='          Any Number of Labs:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO310I=1,NUMROW
        NTOT(I)=15
  310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
      ITITL9=' '
      NCTIT9=0
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MMED')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMMED--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IERRO,NPTS,NLAB
 9013   FORMAT('IERROR,NPTS,NLAB = ',A4,2X,2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)SET1,SET2,DLOWT1,DHIGT1
 9015   FORMAT('SET1,SET2,DLOWT1,DHIGT1 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMMPL(Y1,Y2,Y3,NPTS,NLAB,
     1X,T,N,
     1XMMPS,S2BMMP,SEMMP,SEMMP1,SEMMP2,
     1DLOWMM,DHIGMM,
     1IWRITE,
     1ICAPSW,ICAPTY,NUMDIG,
     1ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT MODIFIED MANDEL-PAULE APPROACH TO
C              CONSENSUS MEANS
C     WRITTEN BY--CODE FOR MODIFIED MANDEL-PAULE PROVIDED BY
C                 MARK VANGEL.
C     PRINTING--YES
C     SUBROUTINES NEEDED--MPSUB
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/3
C     ORIGINAL VERSION--MARCH     2006. EXTRACTED FROM DPMAN2 ROUTINE
C     UPDATED         --FEBRUARY  2010. USE DPDTA1 TO PRINT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      REAL APPF
      REAL XMP
      REAL XMMPS
      REAL S2BMP
      REAL S2BMMP
      REAL SEMMP
      REAL SEMP
      REAL SEMMP1
      REAL SEMMP2
C
C----------------------------------------------------------------
C
      REAL Y1(*)
      REAL Y2(*)
      REAL Y3(*)
C
      INTEGER N(*)
C
      DOUBLE PRECISION X(*)
      DOUBLE PRECISION T(*)
C
      COMMON /MPCOM/ T0, T1
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPMM'
      ISUBN2='PL  '
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MMPL')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMMPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NLAB,T0,T1
   52   FORMAT('NPTS,NLAB,T0,T1 = ',2I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NLAB
          WRITE(ICOUT,56)I,Y1(I),Y2(I),Y3(I),X(I),T(I),N(I)
   56     FORMAT('I,Y1(I),Y2(I),Y3(I),X(I),T(I),N(I) = ',
     1           I8,5G15.7,I8)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,59)IWRITE
   59   FORMAT('IWRITE = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IMANPA='MODI'
      CALL MPSUB  (NLAB, N, X, T, DXMP, DS2BMP, IMANPA,IBUGA3)
C
      IF(IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        DO102J=1,NLAB
        WRITE(ICOUT,101)J,T(J)
  101   FORMAT('AFTER MPSUB: J,T(J)=',I8,G15.7)
        CALL DPWRST('XXX','WRIT')
  102   CONTINUE
      ENDIF
C
      XMP=REAL(DXMP)
      S2BMP=REAL(DS2BMP)
C
      CALL NORPPF(0.975,APPF)
      XMPS=(T1-T0)*XMP + T0
      S2BMPS=REAL(((T1-T0)**2)*S2BMP)
      DSUM1=0.0D0
      DSUM2=0.0D0
      DO340J=1,NLAB
        TI=DBLE(S2BMPS) + ((T1-T0)**2)*T(J)
        XJ=(T1-T0)*X(J) + T0
        DSUM1=DSUM1 +  (XJ-DBLE(XMPS))**2/(TI**2)
        DSUM2=DSUM2 + 1.0D0/TI
  340 CONTINUE
      STDERR=SQRT(DSUM1)/DSUM2
      SEMP=REAL(STDERR)
      SEMMP1=SEMP
      SEMMP2=2.0*SEMP
      DLOWER=XMPS - DBLE(APPF)*STDERR
      DUPPER=XMPS + DBLE(APPF)*STDERR
      DLOWMM=DLOWER
      DHIGMM=DUPPER
C
      IF(IPRINT.EQ.'OFF')GOTO8000
C
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)=' 2. Method: Modified Mandel-Paule'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='    Estimate of (unscaled) Consensus Mean:'
      NCTEXT(ICNT)=42
      AVALUE(ICNT)=XMPS
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Estimate of (scaled) Consensus Mean:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=XMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Between Lab Variance (unscaled):'
      NCTEXT(ICNT)=36
      AVALUE(ICNT)=S2BMPS
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Between Lab SD (unscaled):'
      NCTEXT(ICNT)=30
      AVALUE(ICNT)=SQRT(S2BMPS)
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Between Lab Variance (scaled):'
      NCTEXT(ICNT)=34
      AVALUE(ICNT)=S2BMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Deviation of Consensus Mean:'
      NCTEXT(ICNT)=41
      AVALUE(ICNT)=SEMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Uncertainty (k = 1):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=SEMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k = 2):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=2.0*SEMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k =           ):'
      WRITE(ITEXT(ICNT)(31:40),'(F10.7)')APPF
      NCTEXT(ICNT)=42
      AVALUE(ICNT)=APPF*SEMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Normal PPF of 0.975:'
      NCTEXT(ICNT)=24
      AVALUE(ICNT)=APPF
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Lower 95% (normal) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=DLOWER
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Upper 95% (normal) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=DUPPER
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Note: Modified Mandel-Paule Best Usage:'
      NCTEXT(ICNT)=43
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='          6 or More Labs:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO310I=1,NUMROW
        NTOT(I)=15
  310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
      ITITL9=' '
      NCTIT9=0
C
 8000 CONTINUE
      XMMPS=REAL(XMPS)
      S2BMMP=REAL(S2BMPS)
      SEMMP=REAL(STDERR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MMPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMMPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPTS,NLAB
 9013   FORMAT('NPTS,NLAB = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)XMMPS,S2BMMP,SEMMP
 9014   FORMAT('XMMPS,S2BMMP,SEMMP = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)DLOWER,DUPPER
 9015   FORMAT('DLOWER,DUPPER = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMNPL(Y1,Y2,Y3,NPTS,NLAB,
     1                  X,T,N,
     1                  XMPS,S2BMPS,SEMP,SEMPK1,SEMPK2,
     1                  DLOWMP,DHIGMP,STXMU,ST2SB,
     1                  IWRITE,
     1                  ICAPSW,ICAPTY,NUMDIG,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT MANDEL-PAULE APPROACH TO CONSENSUS MEANS
C     WRITTEN BY--CODE FOR MANDEL-PAULE PROVIDED BY MARK VANGEL.
C     PRINTING--YES
C     SUBROUTINES NEEDED--MPSUB
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/3
C     ORIGINAL VERSION--MARCH     2006. EXTRACTED FROM DPMAN2 ROUTINE
C     UPDATED         --FEBRUARY  2010. USE DPDTA1 TO PRINT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      REAL APPF
      REAL XMP
      REAL XMPS
      REAL S2BMP
      REAL S2BMPS
      REAL STXMU
      REAL ST2SB
      REAL SEMP
      REAL SEMPK1
      REAL SEMPK2
C
C----------------------------------------------------------------
C
      REAL Y1(*)
      REAL Y2(*)
      REAL Y3(*)
C
      INTEGER N(*)
C
      DOUBLE PRECISION X(*)
      DOUBLE PRECISION T(*)
C
      COMMON /MPCOM/ T0, T1
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPMN'
      ISUBN2='PL  '
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MNPL')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMNPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NLAB,IWRITE
   52   FORMAT('NPTS,NLAB,IWRITE = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NPTS
          WRITE(ICOUT,56)I,Y1(I),Y2(I),Y3(I)
   56     FORMAT('I,Y1(I),Y2(I),Y3(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
      IMANPA='REGU'
      CALL MPSUB  (NLAB, N, X, T, DXMP, DS2BMP, IMANPA,IBUGA3)
C
      IF(IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        DO102J=1,NLAB
        WRITE(ICOUT,101)J,T(J)
  101   FORMAT('AFTER MPSUB: J,T(J)=',I8,G15.7)
        CALL DPWRST('XXX','WRIT')
  102   CONTINUE
      ENDIF
C
      XMP=REAL(DXMP)
      S2BMP=REAL(DS2BMP)
C
      CALL NORPPF(0.975,APPF)
      XMPS=REAL((T1-T0)*XMP + T0)
      S2BMPS=REAL(((T1-T0)**2)*S2BMP)
      DSUM1=0.0D0
      DSUM2=0.0D0
      DO109J=1,NLAB
        TI=DBLE(S2BMPS) + ((T1-T0)**2)*T(J)
        XJ=(T1-T0)*X(J) + T0
        DSUM1=DSUM1 +  (XJ-DBLE(XMPS))**2/(TI**2)
        DSUM2=DSUM2 + 1.0D0/TI
  109 CONTINUE
C
      STDERR=SQRT(DSUM1)/DSUM2
      SEMP=REAL(STDERR)
      SEMPK1=SEMP
      SEMPK2=2.0*SEMP
      DLOWER=XMPS - DBLE(APPF)*STDERR
      DUPPER=XMPS + DBLE(APPF)*STDERR
      DLOWMP=DLOWER
      DHIGMP=DUPPER
C
      IF(IPRINT.EQ.'OFF')GOTO8000
C
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)=' 1. Method: Mandel-Paule'
      NCTEXT(ICNT)=24
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='    Estimate of (unscaled) Consensus Mean:'
      NCTEXT(ICNT)=42
      AVALUE(ICNT)=XMPS
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Estimate of (scaled) Consensus Mean:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=XMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Between Lab Variance (unscaled):'
      NCTEXT(ICNT)=36
      AVALUE(ICNT)=S2BMPS
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Between Lab SD (unscaled):'
      NCTEXT(ICNT)=30
      AVALUE(ICNT)=SQRT(S2BMPS)
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Between Lab Variance (scaled):'
      NCTEXT(ICNT)=34
      AVALUE(ICNT)=S2BMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Deviation of Consensus Mean:'
      NCTEXT(ICNT)=41
      AVALUE(ICNT)=SEMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Uncertainty (k = 1):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=SEMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k = 2):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=2.0*SEMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k =           ):'
      WRITE(ITEXT(ICNT)(31:40),'(F10.7)')APPF
      NCTEXT(ICNT)=42
      AVALUE(ICNT)=APPF*SEMP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Normal PPF of 0.975:'
      NCTEXT(ICNT)=24
      AVALUE(ICNT)=APPF
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Lower 95% (normal) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=DLOWER
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Upper 95% (normal) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=DUPPER
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Note: Mandel-Paule Best Usage:'
      NCTEXT(ICNT)=34
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='          6 or More Labs:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO310I=1,NUMROW
        NTOT(I)=15
  310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
      ITITL9=' '
      NCTIT9=0
C
 8000 CONTINUE
      STXMU = DXMP
      ST2SB = DS2BMP
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MNPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMNPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPTS,NLAB
 9013   FORMAT('NPTS,NLAB = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)XMPS,S2BMPS,SEMP
 9014   FORMAT('XMPS,S2BMPs,SEMP = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)DLOWER,DUPPER
 9015   FORMAT('DLOWER,DUPPER = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMARG(IHARG,IARGT,ARG,NUMARG,PDEFMR,PTEXMR,
     1                  IBUGD2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE MARGIN FOR TEXT CHARACTERS.
C              THE MARGIN FOR TEXT CHARACTERS WILL BE PLACED
C              IN THE FLOATING POINT VARIABLE PTEXMR.
C     NOTE--THE MARGIN IS IN STANDARDIZED UNITS (0.0 TO 100.0).
C     NOTE--THE MARGIN DOES NOT INCLUDE BETWEEN-LINE GAP.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT
C                     --ARG
C                     --NUMARG
C                     --PDEFMR
C                     --IBUGD2
C     OUTPUT ARGUMENTS--PTEXMR
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1981.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IBUGD2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(IBUGD2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPMARG--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)PDEFMR
   53 FORMAT('PDEFMR = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)NUMARG
   54 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO55I=1,NUMARG
      WRITE(ICOUT,56)I,IHARG(I),IARGT(I),ARG(I)
   56 FORMAT('I,IHARG(I),IARGT(I),ARG(I) = ',I8,2X,A4,2X,A4,E15.7)
      CALL DPWRST('XXX','BUG ')
   55 CONTINUE
   90 CONTINUE
C
C               *****************************
C               **  TREAT THE MARGIN CASE  **
C               *****************************
C
      IF(NUMARG.LE.0)GOTO1150
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'?')GOTO8100
C
      IF(NUMARG.GE.1.AND.IARGT(NUMARG).EQ.'NUMB')
     1GOTO1160
C
      IERROR='YES'
      WRITE(ICOUT,1121)
 1121 FORMAT('***** ERROR IN DPMARG--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1122)
 1122 FORMAT('      ILLEGAL FORM FOR MARGIN ',
     1'COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1124)
 1124 FORMAT('      TEST EXAMPLE TO DEMONSTRATE THE ',
     1'PROPER FORM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1125)
 1125 FORMAT('      SUPPOSE IT IS DESIRED (AFTER THE TEXT COMMAND)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1126)
 1126 FORMAT('      THAT THE CURSOR RETURN TO X = 5')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1127)
 1127 FORMAT('      (WHERE THE HORIZONTAL SCREEN UNITS RANGE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1128)
 1128 FORMAT('      FROM 0 TO 100,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1130)
 1130 FORMAT('      THEN THE ALLOWABLE FORM IS--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1131)
 1131 FORMAT('           MARGIN 5 ')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 1150 CONTINUE
      PTEXMR=PDEFMR
      GOTO1180
C
 1160 CONTINUE
      PTEXMR=ARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE MARGIN (AFTER TEXT IS WRITTEN OUT)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)PTEXMR
 1182 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO9000
C
C               ********************************************
C               **  STEP 81--                             **
C               **  TREAT THE    ?    CASE--              **
C               **  DUMP OUT CURRENT AND DEFAULT VALUES.  **
C               ********************************************
C
 8100 CONTINUE
      IFOUND='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8111)PTEXMR
 8111 FORMAT('THE CURRENT (TEXT) MARGIN IS ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8112)PDEFMR
 8112 FORMAT('THE DEFAULT (TEXT) MARGIN IS ',E15.7)
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGD2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPMARG--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGD2,ISUBRO,IFOUND,IERROR
 9012 FORMAT('IBUGD2,ISUBRO,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)PTEXMR
 9013 FORMAT('PTEXMR = ',E15.7)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
CCCCC SUBROUTINE DPMATC(ICASL7,ILOCV,IFTEXP,
      SUBROUTINE DPMATC(ICASL7,ICASS7,ISTANR,ISTARA,
     1                  ILOCV,IFTEXP,IFTORD,ISEED,
     1                  IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
CCCCC OCTOBER 1998.  SPLIT INTO 2 FILES (LAHEY COMPILER
CCCCC SEEMS TO HAVE MEMORY TROUBLES WITH THE FULL ROUTINE).
CCCCC ESSENTIALLY, SPLIT OUT THE MATRIX AND NON-MATRIX COMMANDS.
C
C     PURPOSE--TREAT THE TYPE 7 LET CASE--
C            --NOTE: MATRIX COMMANDS NOW IMPLEMENTED IN DPMAT2
C              (THESE COMMANDS WILL SIMPLY DO A RETURN FROM THIS
C              ROUTINE)
C                      LET Y = SORT X
C                      LET Y1 Y2 = SORT2 X1 X2
C                      LET Y1 Y2 Y3 = SORT3 X1 X2 X3
C                      LET Y1 Y2 Y3 Y4 = SORT3 X1 X2 X3 X4
C                      LET Y = SORTC X X2
C                      LET Y = COCODE X XREF
C                      LET Y = COCOPY X XREF YREF
C                      LET Y = RANK X
C                      LET Y = RANK INDEX  X
C                      LET Y = PERCENTAGE RANK X
C                      LET Y1 Y2 = RANK2 X1 X2
C                      LET Y1 Y2 Y3 = RANK2 X1 X2 X3
C                      LET Y = CODE  X
C                      LET Y = CODEH  X
C                      LET Y = CODE2  X
C                      LET Y = CODE4  X
C                      LET Y = CODE4  X
C                      LET Y = CODE8  X
C                      LET Y = CODE10  X
C                      LET Y = CODEZ  X
C                      LET Y = CODEX  X
C                      LET Y = CODEDEX X
C                      LET Y = CODE DEX X
C                      LET Y = CODE DEX 2-LEVEL X
C                      LET Y = EXPAND  XLAB XVAL
C                      LET Y = CODE CROSS TABULATE X1 X2
C                      LET Y = CODE CROSS TABULATE X1 X2 X3
C                      LET Y = CODE CROSS TABULATE X1 X2 X3 X4
C                      LET Y = CODE CROSS TABULATE X1 X2 X3 X4 X5
C                      LET Y = CODE CROSS TABULATE X1 X2 X3 X4 X5 X6
C                      LET Y = BIWEIGHT X
C                      LET Y = TRICUBE X
C                      LET Y = BOOTSTRAP SAMPLE X1 X2
C                      LET Y = SUBSAMPLE X1 X2
C                      LET Y = JACKNIFE INDEX I N
C                      LET Y TAG = SAMPLE RANDOM PERMUTATION N NKEEP P NITER
C                      LET Y = GATHER X INDEX
C                      LET Y = SCATTER X INDEX
C                      LET Y = SHIFT X NSHIFT
C                      LET Y = COMBINE Y1 Y2 .... YK
C                      LET TAG = KEEP GROUPID XREF
C                      LET TAG = OMIT GROUPID XREF
C                      LET Y2 TAG = THRESHOLD MINIMUM Y TVAL
C                      LET Y2 TAG = THRESHOLD MAXIMUM Y TVAL
C                      LET Y = DIGITS X
C                      LET Y = LARGEST X NVALUES
C                      LET Y = SMALLEST X NVALUES
C                      LET Y = BREAK LOCATIONS X
C                      LET Y = FRAGMENT LOCATIONS X
C                      LET Y = FRAGMENT LENGTHS X
C                      LET Y1 Y2 = 2D GRID X1 X2
C                      LET Y1 Y2 Y3 = 3D GRID X1 X2 X3
C                      LET Y1 Y2 Y3 Y4 = 4D GRID X1 X2 X3 X4
C
C                      LET Y = FREQUENCY X XD
C                      LET Y = DISTINCT X
C                      LET Y = DIFFERENCE X
C                      LET Y = SEQUENTIAL DIFFERENCE X
C                      LET Y = SEQUENTIAL SUM X
C                      LET Y = SEQUENTIAL MEAN X
C                      LET Y = SEQUENTIAL MINIMUM X
C                      LET Y = SEQUENTIAL MAXIMUM X
C                      LET Y = SEQUENTIAL PRODUCT X
C                      LET Y = SEQUENTIAL LOWER X
C                      LET Y = SEQUENTIAL UPPER X
C                      LET Y = INTERARRIVAL TIMES X
C                      LET Y = TOTAL TIME ON TEST X TAG
C                      LET Y = SCALED TOTAL TIME ON TEST X TAG
C                      LET Y = CUMULATIVE HAZARD X TAG
C                      LET Y = CUMULATIVE DIFFERENCE X
C                      LET Y = CUMULATIVE SUM X
C                      LET Y = CUMULATIVE INTEGRAL X
C                      LET Y = CUMULATIVE PRODUCT X
C                      LET Y = CUMULATIVE MEAN X
C                      LET Y = CUMULATIVE MINIMUM X
C                      LET Y = CUMULATIVE MAXIMUM X
C                      LET Y = CUMULATIVE <STAT> X
C                      LET Z = CONVOLUTION X Y
C                      LET Z = DECONVOLUTION X Y
C                      LET Y = SUMD X XD  (NOT IMPLEMENTED)
C                      LET Y2 = INTERPOLATION Y X X2
C                      LET Y2 = LINEAR INTERPOLATION Y X X2
C                      LET Z2 = 2D INTERPOLATION Z Y X Y2 X2
C                      LET Z2 = BILINEAR INTERPOLATION Z Y X Y2 X2
C                      LET Z2 = BIVARIATE INTERPOLATION Z Y X Y2 X2
C                      LET Y2 = HERMITE INTERPOLATION Y X X2
C                      LET Y2 = HERMITE DERIVATIVE Y X X2
C                      LET Y2 = HERMITE INTERGRATION Y X LOWLIM UPPLIM
C
C                      LET T = SINE TRANSFORM Y
C                      LET T = COSINE TRANSFORM Y
C                      LET T1 T2 = FOURIER TRANSFORM Y1 Y2 (OR JUST Y1)
C                      LET T1 T2 = INVERSE FOURIER TRANSFORM Y1 Y2 (OR JUST Y1)
C                      LET T1 T2 = FFT Y1 Y2
C                      LET T1 T2 = INVERSE FFT Y1 Y2
C                      LET T = LAPLACE TRANSFORM Y  (NOT IMPLEMENTED)
C                      LET T = INVERSE LAPLACE TRANSFORM Y (NOT IMPLENETED)
C                      LET Y2 = LOW  PASS FILTER Y
C                      LET Y2 = HIGH PASS FILTER Y
C
C                      LET Y5 Y6 = COMPLEX ADDITION Y1 Y2 Y3 Y4
C                      LET Y5 Y6 = COMPLEX SUBTRACTION Y1 Y2 Y3 Y4
C                      LET Y5 Y6 = COMPLEX MULTIPLICATION Y1 Y2 Y3 Y4
C                      LET Y5 Y6 = COMPLEX DIVISION Y1 Y2 Y3 Y4
C                      LET Y5 Y6 = COMPLEX EXPONENTIATION Y1 Y2
C                      LET Y5 Y6 = COMPLEX SQUARE ROOT Y1 Y2
C                      LET Y5 Y6 = COMPLEX ROOTS Y1 Y2 (OR JUST Y1)
C                      LET Y5 Y6 = COMPLEX CONJUGATE Y1 Y2
C
C                      LET C3 = POLYNOMIAL ADDITION C1 C2
C                      LET C3 = POLYNOMIAL SUBTRACTION C1 C2
C                      LET C3 = POLYNOMIAL MULTIPLICATION C1 C2
C                      LET C3 = POLYNOMIAL DIVISION C1 C2
C                      LET C3 = POLYNOMIAL SQUARE C1
C                      LET C3 = POLYNOMIAL SQUARE ROOT C1  (FUTURE--NOT YET IMP)
C                      LET C3 = POLYNOMIAL GCD C1 C2       (FUTURE--NOT YET IMP)
C                      LET C3 = POLYNOMIAL LCM C1 C2       (FUTURE--NOT YET IMP)
C                      LET Y  = POLYNOMIAL EVALUATION C X
C
C                      LET V3 = VECTOR ADDITION V1 V2
C                      LET V3 = VECTOR SUBTRACTION V1 V2
C                      LET V3 = VECTOR DOT PRODUCT V1 V2 (INNER PRODUCT)
C                      LET V3 = VECTOR CROSS PRODUCT V1 V2 (FUTURE--NOT YET IMP)
C                      LET V3 = VECTOR LENGTH V1
C                      LET V3 = VECTOR DISTANCE V1 V2
C                      LET V3 = VECTOR ANGLE V1 V2
C
C                      LET S3 = SET UNION S1 S2
C                      LET S3 = SET INTERSECTION S1 S2
C                      LET S3 = SET COMPLEMENT S1 S2
C                      LET S3 = SET CARDINALITY S1
C                      LET S3 S4 = SET CARTESIAN PRODUCT S1 S2
C                      LET S3 = SET ELEMENTS S1    (DISTINCT)
C
C                      LET L3 = LOGICAL AND L1 L2 (CONJUNCTION)
C                      LET L3 = LOGICAL OR L1 L2 (DISJUNCTION)
C                      LET L3 = LOGICAL NAND L1 L2
C                      LET L3 = LOGICAL NOR L1 L2
C                      LET L3 = LOGICAL IFTHEN L1 L2 (IMPLICATION)
C                      LET L3 = LOGICAL IFF L1 L2 (EQUIVALENCE)
C                      LET L3 = LOGICAL NOT L1  (NEGATION OR COMPLEMENT)
C                      LET L3 = LOGICAL XOR L1 L2 (EXCLUS. OR OR EXCL. DISJ.)
C
C                      (FOR A FULL OR PARTIAL DATA SET)
C
C                      LET X2 Y2 = FRACTAL X1 Y1
C
C                      LET C3 = GENERATOR MULTIPLICATION C1 C2
C
C                      LET Y2 = CUSUM ARL Y
C                      LET Y2 = ONE-SIDED CUSUM ARL Y
C
C                      LET Y2 = STANDARDIZE Y  (OR ZSCORE, ZSCORE STAN)
C                      LET Y2 = STANDARDIZE Y GROUP1
C                      LET Y2 = STANDARDIZE Y GROUP1 GROUP2
C                      LET Y2 = LOCATION STANDARDIZE Y
C                      LET Y2 = LOCATION STANDARDIZE Y GROUP1
C                      LET Y2 = LOCATION STANDARDIZE Y GROUP1 GROUP2
C                      LET Y2 = SCALE STANDARDIZE Y
C                      LET Y2 = SCALE STANDARDIZE Y GROUP1
C                      LET Y2 = SCALE STANDARDIZE Y GROUP1 GROUP2
C                      LET Y2 = ZSCORE Y
C                      LET Y2 = ZSCORE Y GROUP1
C                      LET Y2 = ZSCORE Y GROUP1 GROUP2
C                      LET Y2 = USCORE Y
C                      LET Y2 = VAN DER WAERDEN SCORE Y
C                      LET Y2 = SAVAGE SCORE Y, LET Y2 = EXPONENTIAL SCORE Y
C                      LET Y2 = ANSARI BRADLEY SCORE Y
C                      LET Y2 = MOOD SCORE Y
C                      LET Y2 = MEDIAN SCORE Y
C                      LET Y2 = KLOTZ SCORE Y
C                      LET Y2 = CONOVER SCORE Y X
C                      LET Y2 X2 = PLACEMENT SCORE Y X
C                      LET Y2 = USCORE Y GROUP1
C                      LET Y2 = USCORE Y GROUP1 GROUP2
C                      LET Y2 = JSCORE Z ROUNDID
C                      LET Y2 ROUND2 MAT2 = JSCORE Z ROUNDID MATID
C                      LET Y2 = ISO 13528 EN  Y ULAB XREF UREF
C                      LET Y2 = ISO 13528 ZSCORE  Y XREF SIGMA
C                      LET Y2 = ISO 13528 ZPRIME SCORE Y XREF SIGMA UREF
C                      LET Y2 = ISO 13528 ZETA SCORE Y ULAB XREF UREF
C                      LET Y2 = ISO 13528 EZMINUS SCORE Y ULAB XREF UREF
C                      LET Y2 = ISO 13528 EZPLUS SCORE Y ULAB XREF UREF
C                      LET Y2 = ISO 13528 PA Y XREF DELTAE
C                      LET Y2 = ISO 13528 DIPERC Y XREF
C                      LET Y2 = RANDOM ERROR QUANTITY X Y
C                      LET Y2 = CROSS TABULATE <STAT> Y
C                      LET Y2 = CROSS TABULATE <STAT> Y GROUP1
C                      LET Y2 = CROSS TABULATE <STAT> Y GROUP1 GROUP2
C                      LET Y2 = CROSS TABULATE <STAT> Y GROUP1 GROUP2 GROUP3
C                      LET Y2 = CROSS TABULATE <STAT> Y GROUP1 GROUP2 GROUP3 GROUP4
C                      LET Y2 = CROSS TABULATE CUMULATIVE <STAT> Y
C                      LET Y2 = CROSS TABULATE CUMULATIVE <STAT> Y GROUP1
C                      LET Y2 = CROSS TABULATE CUMULATIVE <STAT> Y GROUP1 GROUP2
C                      LET Y2 = CROSS TABULATE CUMULATIVE <STAT> Y GROUP1 GROUP2 GROUP3
C                      LET Y2 = CROSS TABULATE CUMULATIVE <STAT> Y GROUP1 GROUP2 GROUP3 GROUP4
C                      LET Y = MOVING <STAT> Y1 ... Y3
C                      LET Y = WINDOW <STAT> Y1 ... Y3
C                      LET INDX = MATCH Y X
C                      LET Y2 = MATCH X X2 Y
C                      LET Y2 = CELL MATCH X VALUE
C                      LET Y2 = REPLACE X X2
C                      LET Y2 = REPLACE X X2 Y
C                      LET Y2 = WINSORIZED Y
C                      LET Y2 = SORT BY <STAT> Y GROUP1
C
C                      LET Y X = STACK X1 ... XK
C                      LET Y X1 X2 = REPLICATED STACK X1 ... XK LAB
C                      LET Y2 = SHUFFLE GROUPS Y X INDEX
C                      LET Z  = UNSTACK Y X
C                      LET Y3 = INSERT Y1 Y2 NLOC
C
C                      LET Y2 X2 = BINNED Y  (OR FREQUENCY TABLE)
C                      LET Y2 X2 CODE = CODED BINNED Y
C                      LET Y2 X2 = ASH BINNED Y
C                      LET Y2 X2 = COUNTS ASH BINNED Y
C                      LET Y = FREQUENCY TO RAW X FREQ
C                      LET Y2 X1 X2 = COMBINE FREQUENCY TABLE Y X
C                      LET Y2 X1 X2 = INTEGER FREQUENCY TABLE Y
C                      LET Y2 X2 = PEAKS OF FREQUENCY TABLE Y
C                      LET X FREQ CDF = MANN WHITNEY U STATISTIC FREQUENCY N1 N2
C                      LET Y2 X2 = EMPIRICAL QUANTILE FUNCTION Y
C                      LET Y2 X2 = INFORMATIVE QUANTILE FUNCTION Y
C                      LET Y2 X2 = TRUNCATED INFORMATIVE QUANTILE FUNCTION Y
C                      LET Y2 X2 = PEAKS Y X
C                      LET AREA = PEAKS TRIANGLE AREAS Y X
C
C                      LET Y = BRITTLE FIBER WEIBULL PDF
C                              X L P GAMMA LOC SCALE
C                      LET Y = BRITTLE FIBER WEIBULL CDF
C                              X L P GAMMA LOC SCALE
C                      LET Y = BRITTLE FIBER WEIBULL PPF
C                              X L P GAMMA LOC SCALE
C
C                      LET Y = END EFFECTS WEIBULL PDF
C                              X L P GAMMA1 SCALE1 GAMMA2 SCALE2 LOC
C                      LET Y = END EFFECTS WEIBULL CDF
C                              X L P GAMMA1 SCALE1 GAMMA2 SCALE2 LOC
C                      LET Y = END EFFECTS WEIBULL PPF
C                              X L P GAMMA1 SCALE1 GAMMA2 SCALE2 LOC
C
C                      LET Y X = NORMAL KERNEL DENSITY MIXTURE YMEAN YSD
C
C                      LET Y = H CONSISTENCY STATISTIC Y X
C                      LET Y = K CONSISTENCY STATISTIC Y X
C
C                      LET Y = L MOMENTS X NMOM
C                      LET Y = PROBABILITY WEIGHTED MOMENTS X NMOM
C                      LET Y = BETA PROBABILITY WEIGHTED MOMENTS X NMOM
C                      LET Y = WEIBULL MOMENT ESTIMATES X
C                      LET Y = LOGNORMAL MOMENT ESTIMATES X
C                      LET Y = GAMMA MOMENT ESTIMATES X
C                      LET Y = INVERSE GAUSSIAN MOMENT ESTIMATES X
C
C                      LET Y = JITTER X DELTA
C
C                      LET AL AU = AGRESTI COULL LIMITS P N ALPHA
C                      LET AL = EXACT BINOMIAL LOWER LIMIT P N ALPHA
C                      LET AU = EXACT BINOMIAL UPPER LIMIT P N ALPHA
C                      LET AL AU = EXACT BINOMIAL CONFIDENCE LIMIT P N ALPHA
C                      LET AL AU = DIFFERENCE OF PROPORTION CONFIDENCE
C                                  LIMITS P1 N1 P2 N2 ALPHA
C                      LET PVAL = DIFFERENCE OF PROPORTION HYPOTHESIS
C                                 TEST P1 N1 P2 N2 ALPHA
C                      LET PVAL = DIFFERENCE OF PROPORTION LOWER TAIL
C                                 HYPOTHESIS TEST P1 N1 P2 N2 ALPHA
C                      LET PVAL = DIFFERENCE OF PROPORTION UPPER TAIL
C                                 HYPOTHESIS TEST P1 N1 P2 N2 ALPHA
C                      LET PVAL ALOWLM AUPPLM = RUHKIN 1 TEST
C                                 P1 N1 P2 N2 P3 N3 ALPHA
C                      LET PVAL ALOWLM AUPPLM = RUHKIN 1 LOWER TAIL TEST
C                                 P1 N1 P2 N2 P3 N3 ALPHA
C                      LET PVAL ALOWLM AUPPLM = RUHKIN 1 UPPER TAIL TEST
C                                 P1 N1 P2 N2 P3 N3 ALPHA
C                      LET PVAL ALOWLM AUPPLM = RUHKIN 2 TEST
C                                 P1 N1 P2 N2 ALPHA
C                      LET PVAL ALOWLM AUPPLM = RUHKIN 2 LOWER TAIL TEST
C                                 P1 N1 P2 N2 ALPHA
C                      LET PVAL ALOWLM AUPPLM = RUHKIN 2 UPPER TAIL TEST
C                                 P1 N1 P2 N2 ALPHA
C                      LET PVAL ALOWLM AUPPLM = RUHKIN 3 TEST
C                                 P1 N1 P2 N2 P3 N3 P4 N4 ALPHA
C                      LET PVAL ALOWLM AUPPLM = RUHKIN 3 LOWER TAIL TEST
C                                 P1 N1 P2 N2 P3 N3 P4 N4 ALPHA
C                      LET PVAL ALOWLM AUPPLM = RUHKIN 3 UPPER TAIL TEST
C                                 P1 N1 P2 N2 P3 N3 P4 N4 ALPHA
C                      LET ALOWLM AUPPLM = BINOMIAL RATIO CONFIDENCE LIMITS
C                                          P1 N1 P2 N2 ALPHA
C                      LET SE ALOWLM AUPPLM = BINOMIAL PRODUCT CONFIDENCE LIMITS
C                                          P1 N1 P2 N2 ALPHA
C
C                      LET ZY ZX = 2D CONVEX HULL Y X
C                      LET Y = POINT IN POLYGON XVAL YVAL XPOLY YPOLY
C                      LET ZY ZX = TRANSFORM POINTS Y X  TX TY SX SY THETA
C                      LET ZY ZX = EXTREME POINTS Y X
C                      LET ZY ZX = ENCLOSING RECTANGLE Y X
C                      LET ZY ZX = LINE INTERSECTIONS  X1 Y1 X2 Y2
C                                                      X3 Y3 X4 Y4
C                      LET ZY ZX = PARALLEL LINE X1 Y1 X2 Y2 X3 Y3
C                      LET ZY ZX = PERPINDICULAR LINE X1 Y1 X2 Y2 X3 Y3
C
C                      LET Y2 X2 TAG = EDGES TO VERTICES EDGE1 EDGE2 Y X
C                      LET Y2 X2 TAG = SPANNING FOREST EDGE1 EDGE2 Y X
C                      LET EDGE1 EDGE2 TAG NV = SPANNING FOREST
C                                               EDGE1 EDGE2 NVERT
C                      LET YINDEX = NEAREST NEIGHBOR INDEX Y1 X1
C                      LET YDIST  = NEAREST NEIGHBOR DISTANCE Y1 X1
C                      LET YINDEX YDIST = NEAREST NEIGHBOR Y1 X1
C                      LET YINDEX = NEAREST NEIGHBOR Y1 X1
C                      LET Y3 X3 TAG3 = NEAREST NEIGHBOR JOIN Y1 X1 YINDEX
C                      LET Y3 X3 YDIST  = FIRST NEAREST NEIGHBOR 
C                                         Y1 X1 Y2 X2
C                      LET Y3 X3 YDIST TAG1 TAG2 = ALL NEAREST NEIGHBORS
C                                         Y1 X1 Y2 X2
C
C                      LET Y = NEXT SUBSET N YPREV
C                      LET Y = NEXT PERMUTATION N YPREV
C                      LET Y = NEXT K-SET OF N-SET N K YPREV
C                      LET Y = NEXT COMPOSITION N K YPREV
C                      LET Y YREP = NEXT PARTITION N YPREV YREPPREV
C                      LET Y1 Y2 = NEXT EQUIVALENCE RELATION N YPREV YREPPREV
C                      LET Y = NEXT YOUNG TABLEAUX N LAMBDA Y
C                      LET VAL ROWID = CONVERT YOUNG TABLEAUX Y
C                      LET HOOK = YOUNG TABLEAUX HOOK LENGTH VAL ROWID
C
C                      LET YMIN YMAX = YFRAME Y
C                      LET XMIN XMAX = XFRAME X
C                      LET YOUT = YTIC SCREEN COORDINATES
C                      LET YOUT = YTIC DATA COORDINATES
C                      LET YOUT = XTIC SCREEN COORDINATES
C                      LET YOUT = XTIC DATA COORDINATES
C
C                      LET Y = VECTOR PERCENTILE X NPERC
C
C                      LET WSDF POOLSD = VARIANCES WELCH SATTERTHWAITE YVAR YDF
C                      LET WSDF        = GUM       WELCH SATTERTHWAITE YSD  YDF YSENS
C
C     NOTE--THIS SUBROUTINE OPERATES ON A VECTOR AND PRODUCES A VECTOR;
C           THIS IS TO BE CONTRASTED WITH DPLET8 WHICH OPERATES ON A
C           VECTOR BUT PRODUCES A PARAMETER (= A SCALAR).
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--87/10
C     ORIGINAL VERSION--MARCH 1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --FEBRUARY  1979.
C     UPDATED         --MARCH     1979.
C     UPDATED         --APRIL     1979.
C     UPDATED         --JULY      1979.
C     UPDATED         --JUNE      1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --SEPTEMBER 1981.
C     UPDATED         --OCTOBER   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --JANUARY   1987.
C     UPDATED         --APRIL     1987.
C     UPDATED         --AUGUST    1987.  COMPLEX SQUARE ROOT
C     UPDATED         --AUGUST    1987.  COMPLEX ROOTS (POLYNOMIAL)
C     UPDATED         --AUGUST    1987.  ARITHMETIC
C     UPDATED         --AUGUST    1987.  VECTOR ARITHMETIC
C     UPDATED         --AUGUST    1987.  SET ARITHMETIC
C     UPDATED         --AUGUST    1987.  LOGICAL ARITHMETIC
C     UPDATED         --SEPTEMBER 1987.  FFT AND INVERSE FFT
C     UPDATED         --SEPTEMBER 1987.  MATRIX OPERATIONS
C     UPDATED         --SEPTEMBER 1987.  COMPLEX CONJUGATE
C     UPDATED         --NOVEMBER  1987.  (EXIT OUT IF ERROR)
C     UPDATED         --FEBRUARY  1988.  (BIWEIGHT AND TRICUBE)
C     UPDATED         --JULY      1988.  FRACTAL
C     UPDATED         --AUGUST    1988.  LENGTH TRAP FOR FRACTAL
C     UPDATED         --JANAURY   1988.  BOOTSTRAP SAMPLE
C     UPDATED         --AUGUST    1988.  (VARIANCE-COVARIANCE MATRIX)
C     UPDATED         --AUGUST    1988.  (CORRELATION MATRIX)
C     UPDATED         --AUGUST    1988.  (PRINCIPLE COMPONENTS)
C     UPDATED         --AUGUST    1988.  (... PRINCIPLE COMPONENTS)
C     UPDATED         --JANUARY   1989.  FIX A FORMAT STATEMENT (ALAN)
C     UPDATED         --NOVEMBER  1989.  FIX INTERPOLATION
C     UPDATED         --DECEMBER  1989.  (DEX) GENERATOR MULTIPLICATION
C     UPDATED         --JANUARY   1990.  SUBSAMPLE
C     UPDATED         --JULY      1991.  COCODE ('COCD')
C     UPDATED         --JULY      1991.  COCOPY ('COCP')
C     UPDATED         --FEBRUARY  1992.  FIX COCOPY ('COCP')
C     UPDATED         --MARCH     1992. EXT. SORT&CARRY TO MULTI ARGS
C     UPDATED         --MARCH     1992. ID IN ALL ERROR STATEMENTS
C     UPDATED         --APRIL     1992. SPLIT LONG FORMAT STATEMENTS
C     UPDATED         --MAY       1992. FIX IF .AND. IF
C     UPDATED         --MAY       1992. FIX COMPLEX ARITH./SUBSET BUG
C     UPDATED         --MAY       1992. FIX COMPLEX ARITH./SUBSET BUG
C                     --MAY       1992.(SHOULD FOR POLARI,LOGARI,..?)
C     UPDATED         --JULY      1993. UPDATES FOR MATRIX CODE
C     UPDATED         --AUGUST    1993. UPDATES FOR MATRIX CODE
C     UPDATED         --SEPTEMBER 1993. UPDATES FOR MATRIX CODE
C     UPDATED         --SEPTEMBER 1993. FIX BUG FOR COMPLEX ROOTS
C     UPDATED         --OCTOBER   1993. JACNIFE INDEX
C     UPDATED         --OCTOBER   1993. ADDITIONAL MATRIX COMMANDS
C     UPDATED         --MAY       1994. LINEAR INTERPOLATE, 2D INTERPOL
C                                       BILINEAR INTERPOLATE, BIVARIATE
C                                       INTERPOLATE
C     UPDATED         --JUNE      1995. BUG IN MATRIX REPLACE ELEMENT
C     UPDATED         --AUGUST    1995. ZERO PADDING NO LONGER REQUIRED
C                                       FOR FFT.
C     UPDATED         --JANUARY   1998. RECODE MATRIX CODE TO USE FEWER
C                                       MATRICES (AND THUS CAN HANDLE
C                                       LARGER MATRICES).
C     UPDATED         --JANUARY   1998. RECODE MATRIX CODE TO USE
C                                       1-DIMENSIONAL SCRATCH ARRAYS
C                                       (WILL BE 2-D IN MATARI, MATAR2)
C     UPDATED         --MAY       1998. INTERARRIVAL TIMES CASE
C     UPDATED         --MAY       1998. CUMULATIVE AVERAGE CASE
C     UPDATED         --MAY       1998. REVERSE CASE
C     UPDATED         --MAY       1998. CUMULATIVE HAZARD CASE
C     UPDATED         --MAY       1998. HAZARD CASE
C     UPDATED         --SEPTEMBER 1998. EXPONENTIAL SMOOTHING
C     UPDATED         --JUNE      1998. SOME NEW MATRIX COMMANDS
C     UPDATED         --AUGUST    1998. MATRIX MEAN
C     UPDATED         --AUGUST    1998. MATRIX ADD ROW, MATRIX DELE ROW
C     UPDATED         --AUGUST    1998. DISTANCE FROM MEAN
C     UPDATED         --AUGUST    1998. FOR MATRIX COMMANDS, FIX HOW
C                                       SUBSETTING HANDLED WHEN OUTPUT
C                                       IS SAVED.  THE IUPFLG USED TO
C                                       CONTROL WHETHER OUTPUT IS SAVED
C                                       WITH SUBSETTING OR IS SAVED
C                                       AS A "FULL" MATRIX.  E.G.,
C                                       MATRIX ADDITION MAINTAINS THE
C                                       SUBSET WHEN SAVING THE OUTPUT,
C                                       WHILE CORRELATION MATRIX IS
C                                       SAVED AS A "FULL" MATRIX.
C     UPDATED         --SEPTEMBER 1998. MATRIX GROUP MEANS
C     UPDATED         --SEPTEMBER 1998. MATRIX GROUP SD
C     UPDATED         --SEPTEMBER 1998. POOLED VARIANCE-COVARIANCE
C                                       MATRIX (MORE THAN 2 GROUPS)
C     UPDATED         --OCTOBER   1998. SPLIT INTO 2 ROUTINES
C     UPDATED         --NOVEMBER  1998. BINNED COMMAND
C     UPDATED         --MARCH     2001. STANDARDIZE, LOCATION STAND
C     UPDATED         --SEPTEMBER 2001. CROSS TABULATE
C     UPDATED         --OCTOBER   2001. MATCH (A 2-VARIABLE AND
C                                       3-VARIABLE SYNTAX SUPPORTED)
C     UPDATED         --JULY      2002. WINSORIZE
C     UPDATED         --APRIL     2003. ARGUMENT LIST TO GRPSTA, GRPST2
C     UPDATED         --MAY       2003. STACK COMMAND
C     UPDATED         --SEPTEMBER 2004. ASH BIN
C     UPDATED         --SEPTEMBER 2004. COUNTS ASH BIN
C     UPDATED         --OCTOBER   2004. COMBINE FREQUENCY TABLE
C     UPDATED         --FEBRUARY  2005. H CONSISTENCY STATISTIC
C     UPDATED         --FEBRUARY  2005. K CONSISTENCY STATISTIC
C     UPDATED         --JUNE      2005. L MOMENTS
C     UPDATED         --JUNE      2005. PROBABILITY WEIGHTED MOMENTS
C     UPDATED         --DECEMBER  2005. BETA PROBABILITY WEIGHTED
C                                       MOMENTS
C     UPDATED         --DECEMBER  2005. SORT BY <STAT>
C     UPDATED         --DECEMBER  2005. SUBSTANTIAL REWRITE FOR
C                                       BETTER CLARITY (SIMILAR TO
C                                       CHANGES IN DPMAT2)
C     UPDATED         --FEBRUARY  2006. CALL LIST TO BIVAR FIXED
C     UPDATED         --FEBRUARY  2006. REPLACE
C     UPDATED         --MARCH     2006. CALL LIST TO DPBIN
C     UPDATED         --MAY       2006. INTEGER FREQUENCY TABLE
C     UPDATED         --JANUARY   2007. CALL LIST TO RANK, HAZARD,
C                                       CUMHAZ, RANKCM, RANKCR,
C                                       RANKCV
C     UPDATED         --JANUARY   2007. JITTER
C     UPDATED         --FEBRUARY  2007. AGRESTI-COULL LIMITS
C     UPDATED         --FEBRUARY  2007. EXACT BINOMIAL LOWER LIMIT
C     UPDATED         --FEBRUARY  2007. EXACT BINOMIAL UPPER LIMIT
C     UPDATED         --APRIL     2008. 2D CONVEX HULL
C     UPDATED         --APRIL     2008. EDGES TO VERTICES
C     UPDATED         --APRIL     2008. NEXT SUBSET
C     UPDATED         --APRIL     2008. NEXT PERMUTATION
C     UPDATED         --APRIL     2008. NEXT K-SET OF N-SET
C     UPDATED         --APRIL     2008. NEXT COMPOSITION
C     UPDATED         --MAY       2008. LET Y = X WHERE X IS VARIABLE
C     UPDATED         --MAY       2008. NEXT PARTITION
C     UPDATED         --JUNE      2008. NEXT EQUIVALENCE RELATION
C     UPDATED         --JUNE      2008. SPANNING FOREST
C     UPDATED         --AUGUST    2008. NEXT YOUNG TABLEAUX
C     UPDATED         --AUGUST    2008. CONVERT YOUNG TABLEAUX
C     UPDATED         --AUGUST    2008. YOUNG TABLEAUX HOOK LENGTH
C     UPDATED         --AUGUST    2008. DIFFERENCE OF PROPORTION
C                                       CONFIDENCE LIMITS AND
C                                       P-VALUES
C     UPDATED         --SEPTEMBER 2008. RUHKIN 1 TEST
C     UPDATED         --SEPTEMBER 2008. RUHKIN 2 TEST
C     UPDATED         --OCTOBER   2008. SORT2, SORT3, SORT4
C     UPDATED         --NOVEMBER  2008. GATHER
C     UPDATED         --NOVEMBER  2008. SCATTER
C     UPDATED         --DECEMBER  2008. RANK2
C     UPDATED         --JANUARY   2009. FOR "NEXT ... ", CREATE A
C                                       INTERNAL PARAMETER THAT
C                                       IDENTIFIES WHETHER OR NOT
C                                       CURRENT SEQUENCE IS LAST
C                                       SEQUENCE IN THE SET
C     UPDATED         --FEBRUARY  2009. SHIFT, CIRCULAR SHIFT
C     UPDATED         --JUNE      2009. CODE CROSS TABULATE
C     UPDATED         --OCTOBER   2009. BINOMIAL RATIO CONF LIMITS
C     UPDATED         --JUNE      2010. RANK INDEX
C     UPDATED         --JUNE      2010. RUHKIN 3 TEST
C     UPDATED         --SEPTEMBER 2010. COMBINE
C     UPDATED         --OCTOBER   2010. MOVING <STAT>
C     UPDATED         --OCTOBER   2010. BRITTLE FIBER WEIBULL PDF/CDF/PPF
C     UPDATED         --OCTOBER   2010. EXACT BINOMIAL CONFIDENCE LIMITS
C     UPDATED         --NOVEMBER  2010. END EFFECTS WEIBULL PDF/CDF/PPF
C     UPDATED         --APRIL     2011. KEEP/OMIT
C     UPDATED         --MAY       2011. MANN WHITNEY U STATISTIC FREQUENCY
C     UPDATED         --JULY      2011. THRESHOLD MINIMUM
C     UPDATED         --JULY      2011. THRESHOLD MAXIMUM
C     UPDATED         --SEPTEMBER 2011. POINTS IN POLYGON
C     UPDATED         --JANUARY   2012. PERCENTAGE RANK
C     UPDATED         --JANUARY   2012. EXPAND
C     UPDATED         --JANUARY   2012. EN
C     UPDATED         --JANUARY   2012. ISO 13528 ZSCORE
C     UPDATED         --JANUARY   2012. ISO 13528 ZPRIME SCORE
C     UPDATED         --JANUARY   2012. ISO 13528 ZETA SCORE
C     UPDATED         --JANUARY   2012. ISO 13528 EZMINUS SCORE
C     UPDATED         --JANUARY   2012. ISO 13528 EZPLUS SCORE
C     UPDATED         --FEBRUARY  2012. JSCORE
C     UPDATED         --JUNE      2012. WEIBULL MOMENT ESTIMATES
C     UPDATED         --JUNE      2012. PARTIAL CORRELATION MATRIX
C     UPDATED         --AUGUST    2012. LOW  PASS FILTER
C     UPDATED         --AUGUST    2012. HIGH PASS FILTER
C     UPDATED         --OCTOBER   2012. TRANSFORM POINTS
C     UPDATED         --OCTOBER   2012. EXTREME POINTS
C     UPDATED         --OCTOBER   2012. ENCLOSING RECTANGLE
C     UPDATED         --OCTOBER   2012. LINE INTERSECTIONS
C     UPDATED         --OCTOBER   2012. PARALLEL LINES
C     UPDATED         --OCTOBER   2012. PERPINDICULAR LINES
C     UPDATED         --DECEMBER  2012. CUMULATIVE MINIMUM
C     UPDATED         --DECEMBER  2012. CUMULATIVE MAXIMUM
C     UPDATED         --JANUARY   2013. CUMULATIVE <STAT>
C     UPDATED         --JANUARY   2013. CROSS TABULATE CUMULATIVE <STAT>
C     UPDATED         --JANUARY   2013. CODED BINNED
C     UPDATED         --JANUARY   2013. CODED RELATIVE BINNED
C     UPDATED         --AUGUST    2013. JOIN
C     UPDATED         --AUGUST    2013. NEAREST NEIGHBOR
C     UPDATED         --AUGUST    2013. NEAREST NEIGHBOR INDEX
C     UPDATED         --AUGUST    2013. NEAREST NEIGHBOR DISTANCE
C     UPDATED         --AUGUST    2013. PEAKS
C     UPDATED         --AUGUST    2013. PEAKS TRIANGLE AREAS
C     UPDATED         --SEPTEMBER 2013. FIRST NEAREST NEIGHBOR
C     UPDATED         --SEPTEMBER 2013. ALL NEAREST NEIGHBORS
C     UPDATED         --JANUARY   2014. FOR LET ... = CROSS TABULATE,
C                                       SUPPORT 6 (UP FROM 4) FACTOR
C                                       VARIABLES
C     UPDATED         --APRIL     2014. LOGNORMAL MOMENT ESTIMATES
C     UPDATED         --APRIL     2014. GAMMA MOMENT ESTIMATES
C     UPDATED         --APRIL     2014. INVERSE GAUSSIAN MOMENT ESTIMATES
C     UPDATED         --JULY      2014. SHUFFLE GROUPS
C     UPDATED         --DECEMBER  2014. RANDOM ERROR QUANTITY
C     UPDATED         --OCTOBER   2015. JSCORE TABLE
C     UPDATED         --DECEMBER  2015. YFRAME, XFRAME
C     UPDATED         --FEBRUARY  2016. ISO 13528 PA SCORE
C     UPDATED         --FEBRUARY  2016. ISO 13528 DI PERCENT SCORE
C     UPDATED         --FEBRUARY  2016. SEQUENTIAL SUM
C     UPDATED         --FEBRUARY  2016. SEQUENTIAL MEAN
C     UPDATED         --FEBRUARY  2016. SEQUENTIAL MINIMUM
C     UPDATED         --FEBRUARY  2016. SEQUENTIAL MAXIMUM
C     UPDATED         --FEBRUARY  2016. SEQUENTIAL PRODUCT
C     UPDATED         --FEBRUARY  2016. SEQUENTIAL LOWER
C     UPDATED         --FEBRUARY  2016. SEQUENTIAL UPPER
C     UPDATED         --FEBRUARY  2016. SEQUENTIAL <STAT> WITH GROUP-ID
C                                       VARIABLE
C     UPDATED         --JUNE      2016. WINDOW <STAT>
C     UPDATED         --JUNE      2016. VECTOR PERCENTILE
C     UPDATED         --JUNE      2016. CODEZ
C     UPDATED         --AUGUST    2016. UNSTACK
C     UPDATED         --JANUARY   2017. VARIANCES WELCH SATTERTHWAITE
C     UPDATED         --JANUARY   2017. GUM       WELCH SATTERTHWAITE
C     UPDATED         --FEBRUARY  2017. NORMAL KERNEL DENSITY MIXTURE
C     UPDATED         --FEBRUARY  2017. EMPIRICAL QUANTILE FUNCTION
C     UPDATED         --MARCH     2017. INFORMATVE QUANTILE FUNCTION
C     UPDATED         --MARCH     2017. TRUNCATED INFORMATVE QUANTILE FUNCTION
C     UPDATED         --JULY      2017. CODEX
C     UPDATED         --JULY      2017. CORRECTIONS TO WELCH
C                                       SATTERTHWAITE
C     UPDATED         --AUGUST    2017. SAMPLE RANDOM PERMUTATION
C     UPDATED         --AUGUST    2017. HERMITE INTERPOLATION
C     UPDATED         --AUGUST    2017. HERMITE INTERGRATION
C     UPDATED         --NOVEMBER  2017. HERMITE DERIVATIVE
C     UPDATED         --JANUARY   2018. CODE DEX
C     UPDATED         --JULY      2018. MEAN RANK
C     UPDATED         --OCTOBER   2018. LARGEST
C     UPDATED         --OCTOBER   2018. SMALLEST
C     UPDATED         --OCTOBER   2018. <YTIC/XTIC> <SCREEN/DATA>
C                                       COORDINATES
C     UPDATED         --OCTOBER   2018. CODE DEX 2-LEVEL
C     UPDATED         --JUNE      2019. CALL LIST TO COMARI, BOOTSS,
C                                       BILINR
C     UPDATED         --JULY      2019. CALL LIST TO SETARI, LININT,
C                                       INT2D, INTERP
C     UPDATED         --JULY      2019. TWEAK SCRATCH STORAGE
C     UPDATED         --JULY      2019. BREAK LOCATIONS
C     UPDATED         --JULY      2019. FRAGMENT LOCATIONS
C     UPDATED         --JULY      2019. FRAGMENT LENGTHS
C     UPDATED         --AUGUST    2019. 2D GRID, 3D GRID, 4D GRID
C     UPDATED         --FEBRUARY  2020. INSERT
C     UPDATED         --JUNE      2020. TOTAL TIME ON TEST
C     UPDATED         --JUNE      2020. SCALED TOTAL TIME ON TEST
C     UPDATED         --AUGUST    2022. VAN DER WAERDEN SCORE
C     UPDATED         --MAY       2023. SAVAGE SCORE
C     UPDATED         --JUNE      2023. MOOD SCORE
C     UPDATED         --JUNE      2023. MEDIAN SCORE
C     UPDATED         --JUNE      2023. ANSARI BRADLEY SCORE
C     UPDATED         --JULY      2023. KLOTZ SCORE
C     UPDATED         --JULY      2023. CONOVER SCORE
C     UPDATED         --JULY      2023. PLACEMENT SCORE
C     UPDATED         --AUGUST    2023. ADD ISTARA TO CALL LIST
C     UPDATED         --AUGUST    2023. CALL LIST TO CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASL7
      CHARACTER*4 ICASS7
      CHARACTER*4 ISTARA
      CHARACTER*4 ICASE
      CHARACTER*4 ICASE2
      CHARACTER*4 ICASMT
      CHARACTER*4 ICASAN
      CHARACTER*4 IFTEXP
      CHARACTER*4 IFTORD
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      PARAMETER(MAXCAS=30)
      PARAMETER(MAXCA2=5)
C
      CHARACTER*4 ICASEQ
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 IH
      CHARACTER*4 IH1
      CHARACTER*4 IH2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IWRITE
      CHARACTER*4 ITCASE
      CHARACTER*4 IACASE
      CHARACTER*4 ISTAT
      CHARACTER*4 IHREPL
      CHARACTER*4 IHREP2
C
      CHARACTER*4 NEWNAM(MAXCA2)
      CHARACTER*4 ILEFT(MAXCA2)
      CHARACTER*4 ILEF2(MAXCA2)
      CHARACTER*4 IHSET
      CHARACTER*4 IHSET2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 IMATSW
      CHARACTER*4 ITYP91
      CHARACTER*4 ITYP92
      CHARACTER*4 ITYP93
C
      CHARACTER*4 ITYPA(MAXCAS)
C
      CHARACTER*4 IUPFLG
      CHARACTER*4 IRELAT
      CHARACTER*4 IOP
C
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 ISUBN0
C
      CHARACTER*4 IHRIGH(MAXCAS)
      CHARACTER*4 IHRIG2(MAXCAS)
C
      INTEGER ILISL(MAXCA2)
      INTEGER ICOLL(MAXCA2)
      INTEGER ILOCR(MAXCAS)
      INTEGER ILISR(MAXCAS)
      INTEGER ICOLR(MAXCAS)
      INTEGER NIRIGH(MAXCAS)
      REAL TEMPS(MAXCAS)
C
      DOUBLE PRECISION ATEMP
      DOUBLE PRECISION BTEMP
      DOUBLE PRECISION FC
C
      LOGICAL ISPLINE
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCOZD.INC'
C
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
      DIMENSION TEMP5(MAXOBV)
      DIMENSION TEMP12(2*MAXOBV)
      DIMENSION TEMP91(MAXOBV)
      DIMENSION TEMP92(MAXOBV)
      DIMENSION TEMPC1(2*MAXOBV)
      DIMENSION TEMP6(5*MAXOBV)
      DIMENSION TEMP7(MAXOBV)
      DIMENSION TEMP8(MAXOBV)
      DIMENSION TEMP9(MAXOBV)
      DIMENSION TEMP21(MAXOBV)
      DIMENSION TEMP22(MAXOBV)
      DIMENSION TEMP23(MAXOBV)
      DIMENSION TEMP24(MAXOBV)
      DIMENSION TEMP25(MAXOBV)
      DIMENSION TEMP26(MAXOBV)
      DIMENSION TEMP27(MAXOBV)
      DIMENSION TEMP28(MAXOBV)
C
      DIMENSION ITEMP1(MAXOBV)
      DIMENSION ITEMP2(MAXOBV)
      DIMENSION ITEMP3(MAXOBV)
      DIMENSION ITEMP4(MAXOBV)
      DIMENSION ITEMP5(MAXOBV)
      DIMENSION ITEMP6(MAXOBV)
      DIMENSION ITEMP7(MAXOBV)
C
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
      DOUBLE PRECISION DTEMP3(MAXOBV)
C
      EQUIVALENCE (GARBAG(IGARB1),TEMP1)
      EQUIVALENCE (GARBAG(IGARB2),TEMP2)
      EQUIVALENCE (GARBAG(IGARB3),TEMP3)
      EQUIVALENCE (GARBAG(IGARB4),TEMP4)
      EQUIVALENCE (GARBAG(IGARB5),TEMP12)
      EQUIVALENCE (GARBAG(IGARB7),TEMP91)
      EQUIVALENCE (GARBAG(IGARB8),TEMP92)
      EQUIVALENCE (GARBAG(IGARB9),TEMP5)
      EQUIVALENCE (GARBAG(IGAR10),TEMPC1)
      EQUIVALENCE (GARBAG(JGAR12),TEMP7)
      EQUIVALENCE (GARBAG(JGAR13),TEMP8)
      EQUIVALENCE (GARBAG(JGAR14),TEMP9)
      EQUIVALENCE (GARBAG(JGAR15),TEMP21)
      EQUIVALENCE (GARBAG(JGAR16),TEMP22)
      EQUIVALENCE (GARBAG(JGAR17),TEMP23)
      EQUIVALENCE (GARBAG(JGAR18),TEMP24)
      EQUIVALENCE (GARBAG(JGAR19),TEMP25)
      EQUIVALENCE (GARBAG(IGAR11),TEMP26)
      EQUIVALENCE (GARBAG(IGAR12),TEMP6)
      EQUIVALENCE (GARBAG(IGAR17),TEMP27)
      EQUIVALENCE (GARBAG(IGAR18),TEMP28)
C
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1)
      EQUIVALENCE (IGARBG(IIGAR2),ITEMP2)
      EQUIVALENCE (IGARBG(IIGAR3),ITEMP3)
      EQUIVALENCE (IGARBG(IIGAR4),ITEMP4)
      EQUIVALENCE (IGARBG(IIGAR5),ITEMP5)
      EQUIVALENCE (IGARBG(IIGAR6),ITEMP6)
      EQUIVALENCE (IGARBG(IIGAR7),ITEMP7)
C
      EQUIVALENCE (DGARBG(IDGAR1),DTEMP1(1))
      EQUIVALENCE (DGARBG(IDGAR2),DTEMP2(1))
      EQUIVALENCE (DGARBG(IDGAR3),DTEMP3(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOST.INC'
C
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOPC.INC'
C
      COMMON/NIJWIL/NLAST,KLAST
      LOGICAL MTC
      SAVE MTC
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
CCCCC DON'T PROCESS MATRIX COMMANDS.
C
      IF(ICASL7.EQ.'MAAD')GOTO19090
      IF(ICASL7.EQ.'MASU')GOTO19090
      IF(ICASL7.EQ.'MAMU')GOTO19090
      IF(ICASL7.EQ.'MASO')GOTO19090
      IF(ICASL7.EQ.'MAIN')GOTO19090
      IF(ICASL7.EQ.'MATR')GOTO19090
      IF(ICASL7.EQ.'MAAJ')GOTO19090
      IF(ICASL7.EQ.'MACE')GOTO19090
      IF(ICASL7.EQ.'MAEA')GOTO19090
      IF(ICASL7.EQ.'MAEE')GOTO19090
      IF(ICASL7.EQ.'MARA'.AND.NUMARG.EQ.5)GOTO19090
      IF(ICASL7.EQ.'MARA'.AND.NUMARG.EQ.6)GOTO19090
      IF(ICASL7.EQ.'MADE')GOTO19090
      IF(ICASL7.EQ.'MAPE')GOTO19090
      IF(ICASL7.EQ.'MASN')GOTO19090
      IF(ICASL7.EQ.'MASR')GOTO19090
      IF(ICASL7.EQ.'MANR')GOTO19090
      IF(ICASL7.EQ.'MANC')GOTO19090
      IF(ICASL7.EQ.'MASS')GOTO19090
      IF(ICASL7.EQ.'MATC')GOTO19090
      IF(ICASL7.EQ.'MASM')GOTO19090
      IF(ICASL7.EQ.'MAMI')GOTO19090
      IF(ICASL7.EQ.'MACF')GOTO19090
      IF(ICASL7.EQ.'MADF'.AND.NUMARG.EQ.7)GOTO19090
      IF(ICASL7.EQ.'MADF'.AND.NUMARG.EQ.8)GOTO19090
      IF(ICASL7.EQ.'MAEN')GOTO19090
      IF(ICASL7.EQ.'MARW')GOTO19090
      IF(ICASL7.EQ.'MAEL')GOTO19090
C
      IF(ICASL7.EQ.'MAVC')GOTO19090
      IF(ICASL7.EQ.'MACO')GOTO19090
      IF(ICASL7.EQ.'MACC')GOTO19090
      IF(ICASL7.EQ.'MACP')GOTO19090
      IF(ICASL7.EQ.'MACM')GOTO19090
      IF(ICASL7.EQ.'MAPC')GOTO19090
      IF(ICASL7.EQ.'MAP1')GOTO19090
      IF(ICASL7.EQ.'MAP2')GOTO19090
      IF(ICASL7.EQ.'MAP3')GOTO19090
      IF(ICASL7.EQ.'MAP4')GOTO19090
      IF(ICASL7.EQ.'MAP5')GOTO19090
      IF(ICASL7.EQ.'MAP6')GOTO19090
      IF(ICASL7.EQ.'MAP7')GOTO19090
      IF(ICASL7.EQ.'MAP8')GOTO19090
      IF(ICASL7.EQ.'MAP9')GOTO19090
      IF(ICASL7.EQ.'MA10')GOTO19090
      IF(ICASL7.EQ.'MASV')GOTO19090
      IF(ICASL7.EQ.'MASD')GOTO19090
      IF(ICASL7.EQ.'MASF')GOTO19090
      IF(ICASL7.EQ.'MACH')GOTO19090
      IF(ICASL7.EQ.'MAAU')GOTO19090
      IF(ICASL7.EQ.'MADI')GOTO19090
      IF(ICASL7.EQ.'MARR')GOTO19090
      IF(ICASL7.EQ.'MAAR')GOTO19090
      IF(ICASL7.EQ.'MADR')GOTO19090
      IF(ICASL7.EQ.'MAMM')GOTO19090
      IF(ICASL7.EQ.'MADM')GOTO19090
      IF(ICASL7.EQ.'DIMA')GOTO19090
      IF(ICASL7.EQ.'MAVT')GOTO19090
      IF(ICASL7.EQ.'MARE')GOTO19090
      IF(ICASL7.EQ.'MATD')GOTO19090
      IF(ICASL7.EQ.'MATS')GOTO19090
      IF(ICASL7.EQ.'MATI')GOTO19090
      IF(ICASL7.EQ.'MAIS')GOTO19090
      IF(ICASL7.EQ.'MQFO')GOTO19090
      IF(ICASL7.EQ.'MALC')GOTO19090
      IF(ICASL7.EQ.'MAGM')GOTO19090
      IF(ICASL7.EQ.'MAGS')GOTO19090
      IF(ICASL7.EQ.'MPIN')GOTO19090
      IF(ICASL7.EQ.'MHT1')GOTO19090
      IF(ICASL7.EQ.'MHT2')GOTO19090
      IF(ICASL7.EQ.'MPVC')GOTO19090
      IF(ICASL7.EQ.'MDER')GOTO19090
      IF(ICASL7.EQ.'MDEC')GOTO19090
      IF(ICASL7.EQ.'MDMR')GOTO19090
      IF(ICASL7.EQ.'MDMC')GOTO19090
      IF(ICASL7.EQ.'MDBR')GOTO19090
      IF(ICASL7.EQ.'MDBC')GOTO19090
      IF(ICASL7.EQ.'MDKR')GOTO19090
      IF(ICASL7.EQ.'MDKC')GOTO19090
      IF(ICASL7.EQ.'MDCR')GOTO19090
      IF(ICASL7.EQ.'MDCC')GOTO19090
      IF(ICASL7.EQ.'MCSR')GOTO19090
      IF(ICASL7.EQ.'MCSC')GOTO19090
      IF(ICASL7.EQ.'MCDR')GOTO19090
      IF(ICASL7.EQ.'MCDC')GOTO19090
      IF(ICASL7.EQ.'MZSR')GOTO19090
      IF(ICASL7.EQ.'MASC')GOTO19090
      IF(ICASL7.EQ.'MZDR')GOTO19090
      IF(ICASL7.EQ.'MADC')GOTO19090
      IF(ICASL7.EQ.'MJSR')GOTO19090
      IF(ICASL7.EQ.'MJSC')GOTO19090
      IF(ICASL7.EQ.'MJDR')GOTO19090
      IF(ICASL7.EQ.'MJDC')GOTO19090
      IF(ICASL7.EQ.'MPDR')GOTO19090
      IF(ICASL7.EQ.'MPDC')GOTO19090
      IF(ICASL7.EQ.'MHDR')GOTO19090
      IF(ICASL7.EQ.'MPSC')GOTO19090
      IF(ICASL7.EQ.'MHSR')GOTO19090
      IF(ICASL7.EQ.'MHDC')GOTO19090
      IF(ICASL7.EQ.'MXDR')GOTO19090
      IF(ICASL7.EQ.'MXDC')GOTO19090
      IF(ICASL7.EQ.'MRSC')GOTO19090
      IF(ICASL7.EQ.'MCSC')GOTO19090
      IF(ICASL7.EQ.'MDIP')GOTO19090
      IF(ICASL7.EQ.'MQRD')GOTO19090
      IF(ICASL7.EQ.'MROW')GOTO19090
      IF(ICASL7.EQ.'MCOL')GOTO19090
      IF(ICASL7.EQ.'MACA')GOTO19090
      IF(ICASL7.EQ.'MVRN')GOTO19090
      IF(ICASL7.EQ.'MURN')GOTO19090
      IF(ICASL7.EQ.'MPDF')GOTO19090
      IF(ICASL7.EQ.'WIRN')GOTO19090
      IF(ICASL7.EQ.'MTRN')GOTO19090
      IF(ICASL7.EQ.'IURN')GOTO19090
      IF(ICASL7.EQ.'DIRN')GOTO19090
      IF(ICASL7.EQ.'DPDF')GOTO19090
      IF(ICASL7.EQ.'DLPD')GOTO19090
      IF(ICASL7.EQ.'NCDF')GOTO19090
      IF(ICASL7.EQ.'TCDF')GOTO19090
      IF(ICASL7.EQ.'VINF')GOTO19090
      IF(ICASL7.EQ.'CIND')GOTO19090
      IF(ICASL7.EQ.'XTXI')GOTO19090
      IF(ICASL7.EQ.'CRMA')GOTO19090
      IF(ICASL7.EQ.'INRN')GOTO19090
      IF(ICASL7.EQ.'MSUM')GOTO19090
      IF(ICASL7.EQ.'MPAR')GOTO19090
      IF(ICASL7.EQ.'MGRA')GOTO19090
      IF(ICASL7.EQ.'MATB')GOTO19090
      IF(ICASL7.EQ.'MARB')GOTO19090
      IF(ICASL7.EQ.'MATZ')GOTO19090
      IF(ICASL7.EQ.'MAUZ')GOTO19090
      IF(ICASL7.EQ.'MSPT')GOTO19090
      IF(ICASL7.EQ.'MSP2')GOTO19090
      IF(ICASL7.EQ.'MARN')GOTO19090
      IF(ICASL7.EQ.'ADMA')GOTO19090
      IF(ICASL7.EQ.'ADMD')GOTO19090
      IF(ICASL7.EQ.'BIPL')GOTO19090
      IF(ICASL7.EQ.'MFTR')GOTO19090
      IF(ICASL7.EQ.'MFTC')GOTO19090
      IF(ICASL7.EQ.'VMAT')GOTO19090
      IF(ICASL7.EQ.'MVAR')GOTO19090
      IF(ICASL7.EQ.'MCRO')GOTO19090
      IF(ICASL7.EQ.'MCCO')GOTO19090
      IF(ICASL7.EQ.'MACN')GOTO19090
      IF(ICASL7.EQ.'MARC')GOTO19090
      IF(ICASL7.EQ.'MPCO')GOTO19090
      IF(ICASL7.EQ.'MPCC')GOTO19090
      IF(ICASL7.EQ.'MPCP')GOTO19090
      IF(ICASL7.EQ.'GMST')GOTO19090
      IF(ICASL7.EQ.'CORE')GOTO19090
      IF(ICASL7.EQ.'CONF')GOTO19090
      IF(ICASL7.EQ.'CKCL')GOTO19090
      IF(ICASL7.EQ.'CKCP')GOTO19090
      IF(ICASL7.EQ.'2WDM')GOTO19090
C
      IUPFLG='SUBS'
      ISUBN1='DPMA'
      ISUBN2='TC  '
      IFOUND='NO'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      ILOCR(1)=ILOCV
      DO10I=2,MAXCAS
        ILOCR(I)=ILOCR(I-1)+1
        ITYPA(I)='VARI'
        TEMPS(I)=(-999.0)
        ILISR(I)=(-999)
        ICOLR(I)=(-999)
        NIRIGH(I)=(-999)
   10 CONTINUE
      DO15I=2,MAXCA2
        NEWNAM(I)='NO'
        ILISL(I)=(-999)
        ICOLL(I)=(-999)
   15 CONTINUE
C
      DO20I=1,MAXOBV
        ISUB(I)=1
   20 CONTINUE
C
C
      NUMVAL=1
      SCAL91=(-999.0)
      NITEM2=0
      NITEM3=0
      NITEM4=0
      NITEM5=0
      NITEM5=0
      NS99=-99
      NREPL=-99
      NIFOR=-99
      ICOLRP=-99
      IJUNK1=-99
      NILEF1=-99
C
      IMATSW='NO'
      ICASMT='INDE'
      ITYP91='VECT'
      ITYP92='VECT'
      ITYP93='VECT'
C
C               ******************************************************
C               **  TREAT THE SUBCASE OF PERFORMING CERTAIN SPECIAL **
C               **  DATA MANIPULATIONS (SORT, RANK, CODE)           **
C               **       1) FOR A FULL VARIABLE, OR                 **
C               **       2) FOR PART OF A VARIABLE.                 **
C               ******************************************************
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMATC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA3,IBUGQ,ISUBRO = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASL7,ICASS7,IFTEXP,ILOCV,NUMARG
   53   FORMAT('ICASL7,ICASS7,IFTEXP,ILOCV,NUMARG = ',3(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        ISTEPN='1'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
      ENDIF
C
C     ***************************************************************
C     **  STEP 2A--                                                 *
C     **  EXAMINE THE LEFT-HAND SIDE--                              *
C     **  IS THE VARIABLE NAME TO LEFT OF = SIGN                    *
C     **  ALREADY IN THE NAME LIST?    AS A VARIABLE?               *
C     **  NOTE THAT     ILEFT(I)   IS THE NAME OF THE VARIABLE      *
C     **  ON THE LEFT.                                              *
C     **  NOTE THAT     ILISL(I)  IS THE LINE IN THE TABLE          *
C     **  OF THE NAME ON THE LEFT.                                  *
C     **  NOTE THAT     ICOLL(I)  IS THE DATA COLUMN (1 TO 12)      *
C     **  FOR THE NAME OF THE LEFT.                                 *
C     ***************************************************************
C
      ICASEZ=1
      CALL DPMAT6(ICASL7,ICASEZ,MAXCA2,
     1            ILEFT,ILEF2,NEWNAM,ILISL,ICOLL,
     1            NUMVAL,NIOLD,
     1            IBUGA3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO19000
C
C     FEBRUARY 2006: THE REPLACE COMMAND REQUIRES THAT THE
C                    LEFT-HAND SIDE VARIABLE ALREADY EXISTS.
C
C     AUGUST   2016: THE UNSTACK COMMAND USES THE LEFT-HAND SIDE
C                    VARIABLE AS A "BASE NAME".
C
      IF(ICASL7.EQ.'REPL')THEN
        IF(NEWNAM(ICASEZ).EQ.'YES')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN DPMATC--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,103)
  103     FORMAT('      THE FIRST VARIABLE ON THE LEFT-HAND SIDE OF')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,105)ILEFT(ICASEZ),ILEF2(ICASEZ)
  105     FORMAT('      THE EQUAL SIGN, (',A4,A4,'), MUST ALREADY ',
     1           'EXIST.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,107)
  107     FORMAT('      SUCH WAS NOT THE CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSE
          NILEF1=NIOLD
        ENDIF
      ENDIF
C
      IF(ICASL7.EQ.'FOUT'.OR.ICASL7.EQ.'FOU1'.OR.
     1   ICASL7.EQ.'IFOU'.OR.ICASL7.EQ.'IFO1'.OR.
     1   ICASL7.EQ.'FFT' .OR.ICASL7.EQ.'BINN'.OR.
     1   ICASL7.EQ.'BINR'.OR.ICASL7.EQ.'CUMH'.OR.
     1   ICASL7.EQ.'BINP'.OR.ICASL7.EQ.'BIRP'.OR.
     1   ICASL7.EQ.'ASHR'.OR.ICASL7.EQ.'ASHC'.OR.
CCCCC1   ICASL7.EQ.'MTCH'.OR.ICASL7.EQ.'HAZA'.OR.
CCCCC1   ICASL7.EQ.'FRAW'.OR.ICASL7.EQ.'FFT1'.OR.
     1   ICASL7.EQ.'FFT1'.OR.ICASL7.EQ.'NKDM'.OR.
     1   ICASL7.EQ.'IFFT'.OR.ICASL7.EQ.'IFF1'.OR.
     1   ICASL7.EQ.'COAD'.OR.ICASL7.EQ.'COSU'.OR.
     1   ICASL7.EQ.'COMU'.OR.ICASL7.EQ.'CODI'.OR.
     1   ICASL7.EQ.'COEX'.OR.ICASL7.EQ.'COSR'.OR.
     1   ICASL7.EQ.'CORO'.OR.ICASL7.EQ.'COR1'.OR.
     1   ICASL7.EQ.'COCO'.OR.ICASL7.EQ.'PODI'.OR.
     1   ICASL7.EQ.'SECP'.OR.ICASL7.EQ.'FRAC'.OR.
     1   ICASL7.EQ.'STAC'.OR.ICASL7.EQ.'RSTA'.OR.
     1   ICASL7.EQ.'CFRT'.OR.ICASL7.EQ.'HCO2'.OR.
     1   ICASL7.EQ.'MWUF'.OR.ICASL7.EQ.'JOIN'.OR.
     1   ICASL7.EQ.'IFRT'.OR.ICASL7.EQ.'AGCO'.OR.
     1   ICASL7.EQ.'EBLL'.OR.ICASL7.EQ.'EBUL'.OR.
     1   ICASL7.EQ.'BRAT'.OR.ICASL7.EQ.'EBCL'.OR.
     1   ICASL7.EQ.'R1TS'.OR.ICASL7.EQ.'R1LT'.OR.
     1   ICASL7.EQ.'R1UT'.OR.ICASL7.EQ.'EQUF'.OR.
     1   ICASL7.EQ.'IQUF'.OR.ICASL7.EQ.'TIQF'.OR.
     1   ICASL7.EQ.'R2TS'.OR.ICASL7.EQ.'R2LT'.OR.
     1   ICASL7.EQ.'R2UT'.OR.ICASL7.EQ.'NNE3'.OR.
     1   ICASL7.EQ.'FNNE'.OR.ICASL7.EQ.'ANNE'.OR.
     1   ICASL7.EQ.'TPOI'.OR.ICASL7.EQ.'EXTP'.OR.
     1   ICASL7.EQ.'ENCB'.OR.ICASL7.EQ.'INTL'.OR.
     1   ICASL7.EQ.'PARL'.OR.ICASL7.EQ.'PERL'.OR.
     1   ICASL7.EQ.'R3TS'.OR.ICASL7.EQ.'R3LT'.OR.
     1   ICASL7.EQ.'R3UT'.OR.ICASL7.EQ.'BPSE'.OR.
     1   ICASL7.EQ.'2DCH'.OR.ICASL7.EQ.'EDGV'.OR.
     1   ICASL7.EQ.'2DCH'.OR.ICASL7.EQ.'EDGV'.OR.
     1   ICASL7.EQ.'SPF1'.OR.ICASL7.EQ.'SPF2'.OR.
     1   ICASL7.EQ.'KCO2'.OR.ICASL7.EQ.'SRTB'.OR.
     1   ICASL7.EQ.'CYTB'.OR.ICASL7.EQ.'DPCL'.OR.
     1   ICASL7.EQ.'SOR2'.OR.ICASL7.EQ.'SOR3'.OR.
     1   ICASL7.EQ.'TMIN'.OR.ICASL7.EQ.'TMAX'.OR.
     1   ICASL7.EQ.'SOR4'.OR.ICASL7.EQ.'PEAK'.OR.
     1   ICASL7.EQ.'2DGR'.OR.ICASL7.EQ.'3DGR'.OR.
     1   ICASL7.EQ.'4DGR'.OR.
     1   ICASL7.EQ.'CBIN'.OR.ICASL7.EQ.'CBIR'.OR.
     1   ICASL7.EQ.'JSCT'.OR.ICASL7.EQ.'WSAT'.OR.
CCCCC1   ICASL7.EQ.'GATH'.OR.ICASL7.EQ.'SCAT'.OR.
     1   ICASL7.EQ.'YFRA'.OR.ICASL7.EQ.'XFRA'.OR.
     1   ICASL7.EQ.'GSQD'.OR.ICASL7.EQ.'GSQS'.OR.
     1   ICASL7.EQ.'GSQP'.OR.ICASL7.EQ.'GSQM'.OR.
     1   ICASL7.EQ.'GQMN'.OR.ICASL7.EQ.'GQMX'.OR.
     1   ICASL7.EQ.'GSQL'.OR.ICASL7.EQ.'GSQU'.OR.
     1   ICASL7.EQ.'SRNP'.OR.ICASL7.EQ.'PSCO'.OR.
     1   ICASL7.EQ.'NEPA'.OR.ICASL7.EQ.'NEXE')THEN
C
        ICASEZ=2
        CALL DPMAT6(ICASL7,ICASEZ,MAXCA2,
     1              ILEFT,ILEF2,NEWNAM,ILISL,ICOLL,
     1              NUMVAL,NIOLD,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
      ENDIF
C
      IF(ICASL7.EQ.'CFRT' .OR. ICASL7.EQ.'RSTA' .OR.
     1   ICASL7.EQ.'IFRT' .OR. ICASL7.EQ.'EDGV' .OR.
     1   ICASL7.EQ.'R1TS' .OR. ICASL7.EQ.'R1LT' .OR.
     1   ICASL7.EQ.'R1UT' .OR. ICASL7.EQ.'MWUF' .OR.
     1   ICASL7.EQ.'R2TS' .OR. ICASL7.EQ.'R2LT' .OR.
     1   ICASL7.EQ.'R2UT' .OR. ICASL7.EQ.'BRAT' .OR.
     1   ICASL7.EQ.'R3TS' .OR. ICASL7.EQ.'R3LT' .OR.
     1   ICASL7.EQ.'R3UT' .OR. ICASL7.EQ.'BPSE' .OR.
     1   ICASL7.EQ.'SOR3' .OR. ICASL7.EQ.'SOR4' .OR.
     1   ICASL7.EQ.'3DGR' .OR. ICASL7.EQ.'4DGR'.OR.
     1   ICASL7.EQ.'RAN3' .OR. ICASL7.EQ.'DPCL' .OR.
     1   ICASL7.EQ.'HCO2' .OR. ICASL7.EQ.'KCO2' .OR.
     1   ICASL7.EQ.'CBIN' .OR. ICASL7.EQ.'CBIR' .OR.
     1   ICASL7.EQ.'JOIN' .OR. ICASL7.EQ.'JSCT' .OR.
     1   ICASL7.EQ.'FNNE' .OR. ICASL7.EQ.'ANNE' .OR.
     1   ICASL7.EQ.'SPF1' .OR. ICASL7.EQ.'SPF2')THEN
        ICASEZ=3
        CALL DPMAT6(ICASL7,ICASEZ,MAXCA2,
     1              ILEFT,ILEF2,NEWNAM,ILISL,ICOLL,
     1              NUMVAL,NIOLD,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
      ENDIF
C
      IF(ICASL7.EQ.'SPF2'.OR.ICASL7.EQ.'SOR4'.OR.
     1   ICASL7.EQ.'4DGR'.OR. ICASL7.EQ.'ANNE')THEN
        ICASEZ=4
        CALL DPMAT6(ICASL7,ICASEZ,MAXCA2,
     1              ILEFT,ILEF2,NEWNAM,ILISL,ICOLL,
     1              NUMVAL,NIOLD,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
      ENDIF
C
      IF(ICASL7.EQ.'ANNE')THEN
        ICASEZ=5
        CALL DPMAT6(ICASL7,ICASEZ,MAXCA2,
     1              ILEFT,ILEF2,NEWNAM,ILISL,ICOLL,
     1              NUMVAL,NIOLD,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAT2')THEN
        WRITE(ICOUT,491)NUMVAL
  491   FORMAT('AT THE END OF STEP 2--NUMVAL=',I8)
        CALL DPWRST('XXX','BUG ')
        DO494I=1,MAXCA2
        WRITE(ICOUT,492)ILEFT(I),ILEF2(I),NEWNAM(I),NUMNAM,
     1                  ILISL(I),NUMCOL,ICOLL(I),NIOLD
        CALL DPWRST('XXX','BUG ')
  492   FORMAT('ILEFT(I),ILEFT(I),NEWNAM(I),NUMNAM,ILISL(I),',
     1         'NUMCOL,ICOLL(I),NIOLD = ',A4,A4,2X,A4,2X,5I8)
  494   CONTINUE
      ENDIF
C
C     ****************************************************************
C     **  STEP 4--                                                   *
C     **  EXAMINE THE RIGHT-HAND SIDE--                              *
C     **  HAS EACH VARIABLE ON THE RIGHT                             *
C     **  ALREADY BEEN DEFINED?                                      *
C     **  NOTE THAT     ILISR(1), ILISR(2), ILISR(3), ILISR(4)       *
C     **  IS THE LINE IN THE TABLE                                   *
C     **  OF THE FIRST, SECOND, THIRD, FOURTH VARIABLE ON THE RIGHT, *
C     **  RESPECTIVELY.                                              *
C     **  NOTE THAT     ICOLR(1), ICOLR(2), ICOLR(3), ICOLR(4)       *
C     **  IS THE DATA COLUMN (1 TO 10+6)                             *
C     **  OF THE FIRST, SECOND, THIRD, FOURTH VARIABLE ON THE RIGHT, *
C     **  RESPECTIVELY.                                              *
C     ****************************************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MATC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ********************************************
C               **  STEP 4.1--                            **
C               **  DETERMINE THE NUMBER OF VARIABLES     **
C               **  ON THE RIGHT--1, 2, 3, OR 4           **
C               ********************************************
C
      ISTEPN='4.1'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MATC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IMATSW='NO'
      NUMVAR=1
C
      IF(ICASL7.EQ.'Y1TS'.OR.ICASL7.EQ.'Y1TD'.OR.
     1   ICASL7.EQ.'Y2TS'.OR.ICASL7.EQ.'Y2TD'.OR.
     1   ICASL7.EQ.'X1TS'.OR.ICASL7.EQ.'X1TD'.OR.
     1   ICASL7.EQ.'X2TS'.OR.ICASL7.EQ.'X2TD')THEN
        NUMVAR=0
      ENDIF
      IF(ICASL7.EQ.'FOU1'.OR.ICASL7.EQ.'IFO1'.OR.
     1   ICASL7.EQ.'BINN'.OR.ICASL7.EQ.'BINR'.OR.
     1   ICASL7.EQ.'BINP'.OR.ICASL7.EQ.'BIRP'.OR.
     1   ICASL7.EQ.'ASHR'.OR.ICASL7.EQ.'ASHC'.OR.
     1   ICASL7.EQ.'FFT1'.OR.ICASL7.EQ.'IFF1'.OR.
     1   ICASL7.EQ.'COR1'.OR.ICASL7.EQ.'POSQ'.OR.
     1   ICASL7.EQ.'POSR'.OR.ICASL7.EQ.'VELE'.OR.
     1   ICASL7.EQ.'SECA'.OR.ICASL7.EQ.'SEEL'.OR.
     1   ICASL7.EQ.'IFRT'.OR.ICASL7.EQ.'COPV'.OR.
     1   ICASL7.EQ.'RANS'.OR.ICASL7.EQ.'RANP'.OR.
     1   ICASL7.EQ.'WMOM'.OR.ICASL7.EQ.'WMOM'.OR.
     1   ICASL7.EQ.'CBIN'.OR.ICASL7.EQ.'CBIR'.OR.
     1   ICASL7.EQ.'LPFI'.OR.ICASL7.EQ.'HPFI'.OR.
     1   ICASL7.EQ.'DIGI'.OR.ICASL7.EQ.'EQUF'.OR.
     1   ICASL7.EQ.'IQUF'.OR.ICASL7.EQ.'TIQF'.OR.
     1   ICASL7.EQ.'LONT'.OR.ICASL7.EQ.'WINS')THEN
        NUMVAR=1
      ELSEIF(ICASL7.EQ.'CONV'.OR.ICASL7.EQ.'DECO'.OR.
     1       ICASL7.EQ.'BOOT'.OR.ICASL7.EQ.'FREQ'.OR.
     1       ICASL7.EQ.'SUMD'.OR.ICASL7.EQ.'SUBS'.OR.
     1       ICASL7.EQ.'FOUT'.OR.ICASL7.EQ.'IFOU'.OR.
     1       ICASL7.EQ.'FFT' .OR.ICASL7.EQ.'CUMH'.OR.
     1       ICASL7.EQ.'HAZA'.OR.ICASL7.EQ.'FRAW'.OR.
     1       ICASL7.EQ.'EXPS'.OR.ICASL7.EQ.'IFFT'.OR.
     1       ICASL7.EQ.'COEX'.OR.ICASL7.EQ.'COSR'.OR.
     1       ICASL7.EQ.'CORO'.OR.ICASL7.EQ.'COCO'.OR.
     1       ICASL7.EQ.'POAD'.OR.ICASL7.EQ.'POSU'.OR.
     1       ICASL7.EQ.'POMU'.OR.ICASL7.EQ.'PODI'.OR.
     1       ICASL7.EQ.'POGC'.OR.ICASL7.EQ.'POLC'.OR.
     1       ICASL7.EQ.'POEV'.OR.ICASL7.EQ.'VEAD'.OR.
     1       ICASL7.EQ.'VESU'.OR.ICASL7.EQ.'VEDP'.OR.
     1       ICASL7.EQ.'VECP'.OR.ICASL7.EQ.'VEDI'.OR.
     1       ICASL7.EQ.'2DCH'.OR.ICASL7.EQ.'YTHL'.OR.
     1       ICASL7.EQ.'NEXS'.OR.ICASL7.EQ.'NEXP'.OR.
     1       ICASL7.EQ.'SOR2'.OR.ICASL7.EQ.'RAN2'.OR.
     1       ICASL7.EQ.'MWUF'.OR.ICASL7.EQ.'EXTP'.OR.
     1       ICASL7.EQ.'ENCB'.OR.ICASL7.EQ.'NNE1'.OR.
     1       ICASL7.EQ.'NNE2'.OR.ICASL7.EQ.'NNE3'.OR.
     1       ICASL7.EQ.'NNE4'.OR.ICASL7.EQ.'RAEQ'.OR.
     1       ICASL7.EQ.'GSQD'.OR.ICASL7.EQ.'GSQS'.OR.
     1       ICASL7.EQ.'GSQP'.OR.ICASL7.EQ.'GSQM'.OR.
     1       ICASL7.EQ.'GQMN'.OR.ICASL7.EQ.'GQMX'.OR.
     1       ICASL7.EQ.'GSQL'.OR.ICASL7.EQ.'GSQU'.OR.
     1       ICASL7.EQ.'UNST'.OR.ICASL7.EQ.'WSAT'.OR.
     1       ICASL7.EQ.'PSCO'.OR.ICASL7.EQ.'CSCO'.OR.
     1       ICASL7.EQ.'NKDM'.OR.ICASL7.EQ.'2DGR'.OR.
     1       ICASL7.EQ.'VEAN'.OR.ICASL7.EQ.'SEUN')THEN
        NUMVAR=2
      ELSEIF(ICASL7.EQ.'SEIN'.OR.ICASL7.EQ.'SECO'.OR.
     1       ICASL7.EQ.'SECP'.OR.ICASL7.EQ.'LOAN'.OR.
     1       ICASL7.EQ.'LOOR'.OR.ICASL7.EQ.'LONA'.OR.
     1       ICASL7.EQ.'LONO'.OR.ICASL7.EQ.'LOIM'.OR.
     1       ICASL7.EQ.'LOEQ'.OR.ICASL7.EQ.'LOXO'.OR.
     1       ICASL7.EQ.'FRAC'.OR.ICASL7.EQ.'GEMU'.OR.
     1       ICASL7.EQ.'JAIN'.OR.ICASL7.EQ.'CFRT'.OR.
     1       ICASL7.EQ.'HCON'.OR.ICASL7.EQ.'KCON'.OR.
     1       ICASL7.EQ.'LMOM'.OR.ICASL7.EQ.'PWMO'.OR.
     1       ICASL7.EQ.'BPWM'.OR.ICASL7.EQ.'SRTB'.OR.
     1       ICASL7.EQ.'GATH'.OR.ICASL7.EQ.'SCAT'.OR.
     1       ICASL7.EQ.'SHIF'.OR.ICASL7.EQ.'CSHI'.OR.
     1       ICASL7.EQ.'LARG'.OR.ICASL7.EQ.'SMAL'.OR.
     1       ICASL7.EQ.'VPER'.OR.
     1       ICASL7.EQ.'KEEP'.OR.ICASL7.EQ.'OMIT'.OR.
     1       ICASL7.EQ.'TMIN'.OR.ICASL7.EQ.'TMAX'.OR.
     1       ICASL7.EQ.'EXPA'.OR.ICASL7.EQ.'JSCO'.OR.
     1       ICASL7.EQ.'PEAK'.OR.ICASL7.EQ.'PEAR'.OR.
     1       ICASL7.EQ.'DIPE'.OR.ICASL7.EQ.'MTC2'.OR.
     1       ICASL7.EQ.'TTT '.OR.ICASL7.EQ.'STTT'.OR.
     1       ICASL7.EQ.'COCD'.OR.ICASL7.EQ.'JITT')THEN
        NUMVAR=2
      ELSEIF(ICASL7.EQ.'INTR'.OR.ICASL7.EQ.'LINT'.OR.
     1       ICASL7.EQ.'HCO2'.OR.ICASL7.EQ.'KCO2'.OR.
     1       ICASL7.EQ.'COCP'.OR.ICASL7.EQ.'AGCO'.OR.
     1       ICASL7.EQ.'KNSE'.OR.ICASL7.EQ.'NEXC'.OR.
     1       ICASL7.EQ.'NEPA'.OR.ICASL7.EQ.'NEXE'.OR.
     1       ICASL7.EQ.'SPF2'.OR.ICASL7.EQ.'NEYT'.OR.
     1       ICASL7.EQ.'SOR3'.OR.ICASL7.EQ.'RAN3'.OR.
     1       ICASL7.EQ.'EBCL'.OR.ICASL7.EQ.'IZSC'.OR.
     1       ICASL7.EQ.'JOIN'.OR.ICASL7.EQ.'GRPS'.OR.
     1       ICASL7.EQ.'JSCT'.OR.ICASL7.EQ.'PA  '.OR.
     1       ICASL7.EQ.'GWSA'.OR.ICASL7.EQ.'3DGR'.OR.
     1       ICASL7.EQ.'HERI'.OR.ICASL7.EQ.'HERD'.OR.
     1       ICASL7.EQ.'INSE'.OR.
     1       ICASL7.EQ.'EBLL'.OR.ICASL7.EQ.'EBUL')THEN
        NUMVAR=3
      ELSEIF(ICASL7.EQ.'COAD'.OR.ICASL7.EQ.'COSU'.OR.
     1       ICASL7.EQ.'COMU'.OR.ICASL7.EQ.'CODI'.OR.
     1       ICASL7.EQ.'SOR4'.OR.ICASL7.EQ.'POPL'.OR.
     1       ICASL7.EQ.'EN  '.OR.ICASL7.EQ.'ZPRI'.OR.
     1       ICASL7.EQ.'EZPL'.OR.ICASL7.EQ.'EZMI'.OR.
     1       ICASL7.EQ.'IZET'.OR.ICASL7.EQ.'SRNP'.OR.
     1       ICASL7.EQ.'FNNE'.OR.ICASL7.EQ.'ANNE'.OR.
     1       ICASL7.EQ.'HERG'.OR.ICASL7.EQ.'4DGR'.OR.
     1       ICASL7.EQ.'EDGV'.OR.ICASL7.EQ.'SPF1')THEN
        NUMVAR=4
      ELSEIF(ICASL7.EQ.'2DIN'.OR.ICASL7.EQ.'BILI'.OR.
     1       ICASL7.EQ.'DPCL'.OR.ICASL7.EQ.'DPTS'.OR.
     1       ICASL7.EQ.'DPLT'.OR.ICASL7.EQ.'DPUT'.OR.
     1       ICASL7.EQ.'BRAT'.OR.ICASL7.EQ.'BPSE'.OR.
     1       ICASL7.EQ.'R2TS'.OR.ICASL7.EQ.'R2LT'.OR.
     1       ICASL7.EQ.'R2UT'.OR.ICASL7.EQ.'BIVA')THEN
        NUMVAR=5
      ELSEIF(ICASL7.EQ.'BFPD'.OR.ICASL7.EQ.'BFCD'.OR.
     1       ICASL7.EQ.'BFPP'.OR.ICASL7.EQ.'PARL'.OR.
     1       ICASL7.EQ.'PERL')THEN
        NUMVAR=6
      ELSEIF(ICASL7.EQ.'R1TS'.OR.ICASL7.EQ.'R1LT'.OR.
     1       ICASL7.EQ.'R1UT'.OR.ICASL7.EQ.'TPOI')THEN
        NUMVAR=7
      ELSEIF(ICASL7.EQ.'EEPD'.OR.ICASL7.EQ.'EECD'.OR.
     1       ICASL7.EQ.'EEPP'.OR.ICASL7.EQ.'INTL')THEN
        NUMVAR=8
      ELSEIF(ICASL7.EQ.'R3TS'.OR.ICASL7.EQ.'R3LT'.OR.
     1       ICASL7.EQ.'R3UT')THEN
        NUMVAR=9
      ELSEIF(ICASL7.EQ.'SORC'.OR.ICASL7.EQ.'STAC'.OR.
     1       ICASL7.EQ.'RSTA'.OR.ICASL7.EQ.'MTCH'.OR.
     1       ICASL7.EQ.'STAN'.OR.ICASL7.EQ.'ZSCO'.OR.
     1       ICASL7.EQ.'USCO'.OR.ICASL7.EQ.'LSTA'.OR.
     1       ICASL7.EQ.'VSCO'.OR.ICASL7.EQ.'SSCO'.OR.
     1       ICASL7.EQ.'MSCO'.OR.ICASL7.EQ.'DSCO'.OR.
     1       ICASL7.EQ.'ASCO'.OR.
     1       ICASL7.EQ.'CUMI'.OR.ICASL7.EQ.'REPL'.OR.
     1       ICASL7.EQ.'LSST'.OR.ICASL7.EQ.'CRTA'.OR.
     1       ICASL7.EQ.'CTCU'.OR.
     1       ICASL7.EQ.'CDCT'.OR.ICASL7.EQ.'COMB'.OR.
     1       ICASL7.EQ.'MOVI'.OR.ICASL7.EQ.'CUMU'.OR.
     1       ICASL7.EQ.'WIND'.OR.
     1       ICASL7.EQ.'MNRK'.OR.ICASL7.EQ.'MDRK'.OR.
     1       ICASL7(1:2).EQ.'CT')THEN
C
        ISTRT=ILOCV
        ILAST=NUMARG
        DO1051I=ISTRT,NUMARG
          IHRIGH(I)=IHARG(I)
          IHRIG2(I)=IHARG2(I)
          IF(IHRIGH(I).EQ.'SUBS'.AND.IHRIG2(I).EQ.'ET  ')THEN
            ILAST=I-1
            GOTO1054
          ELSEIF(IHRIGH(I).EQ.'EXCE'.AND.IHRIG2(I).EQ.'PT  ')THEN
            ILAST=I-1
            GOTO1054
          ELSEIF(IHRIGH(I).EQ.'FOR '.AND.IHRIG2(I).EQ.'    ')THEN
            ILAST=I-1
            GOTO1054
          ENDIF
 1051   CONTINUE
 1054   CONTINUE
        NUMVAR=ILAST-ISTRT+1
C
        IF(ICASL7.EQ.'MTCH' .OR. ICASL7.EQ.'REPL')THEN
          IF(NUMVAR.EQ.2)THEN
            ICASMT='INDE'
          ELSEIF(NUMVAR.EQ.3)THEN
            ICASMT='TRAN'
          ELSE
            IF(ICASL7.EQ.'MTCH')THEN
              WRITE(ICOUT,1061)
            ELSEIF(ICASL7.EQ.'REPL')THEN
              WRITE(ICOUT,1062)
            ENDIF
 1061       FORMAT('****** FOR THE MATCH COMMAND, THE NUMBER OF ',
     1             'VARIABLES TO THE RIGHT')
 1062       FORMAT('****** FOR THE REPLACE COMMAND, THE NUMBER OF ',
     1             'VARIABLES TO THE RIGHT')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1063)NUMVAR
 1063       FORMAT('       MUST BE 2 OR 3.  ',I8,' VARIABLES FOUND.')
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ENDIF
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MATC')THEN
        WRITE(ICOUT,1091)ICASL7,NUMVAR
 1091   FORMAT('ICASL7,NUMVAR = ',A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************************
C               **  STEP 5.1--                       **
C               **  EXAMINE THE VARIABLES            **
C               **  ON THE RIGHT.                    **
C               ***************************************
C
      ISTEPN='5.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MATC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFLAG1=0
      IF(ICASL7.EQ.'JAIN'.OR.ICASL7.EQ.'AGCO'.OR.
     1   ICASL7.EQ.'EBLL'.OR.ICASL7.EQ.'EBUL'.OR.
     1   ICASL7.EQ.'EBCL'.OR.
     1   ICASL7.EQ.'DPCL'.OR.ICASL7.EQ.'DPTS'.OR.
     1   ICASL7.EQ.'DPLT'.OR.ICASL7.EQ.'DPUT'.OR.
     1   ICASL7.EQ.'R1TS'.OR.ICASL7.EQ.'R1LT'.OR.
     1   ICASL7.EQ.'R1UT'.OR.ICASL7.EQ.'INTL'.OR.
     1   ICASL7.EQ.'PARL'.OR.ICASL7.EQ.'PERL'.OR.
     1   ICASL7.EQ.'R2TS'.OR.ICASL7.EQ.'R2LT'.OR.
     1   ICASL7.EQ.'R2UT'.OR.ICASL7.EQ.'BRAT'.OR.
     1   ICASL7.EQ.'R3TS'.OR.ICASL7.EQ.'R3LT'.OR.
     1   ICASL7.EQ.'R3UT'.OR.ICASL7.EQ.'BPSE'.OR.
     1   ICASL7.EQ.'RANS'.OR.ICASL7.EQ.'RANP'.OR.
     1   ICASL7.EQ.'MWUF'.OR.ICASL7.EQ.'DIGI'.OR.
     1   ICASL7.EQ.'NEXS'.OR.ICASL7.EQ.'NEXP'.OR.
     1   ICASL7.EQ.'KNSE'.OR.ICASL7.EQ.'NEXC'.OR.
     1   ICASL7.EQ.'NEPA'.OR.ICASL7.EQ.'NEXE'.OR.
     1   ICASL7.EQ.'SRNP'.OR.
     1   ICASL7.EQ.'NEYT'.OR.ICASL7.EQ.'COMB'
     1   )THEN
         IFLAG1=1
      ENDIF
      ICASEZ=1
      IF(NUMVAR.GE.1)THEN
        CALL DPMAT7(ICASL7,ICASEZ,MAXCAS,ILOCR,
     1              IHRIGH(1),IHRIG2(1),ICOLR,ILISR,NIRIGH,ITYPA,TEMPS,
     1              IFLAG1,ATEMP2,ITEMP,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
      IF(ICASL7.EQ.'NEXS' .OR. ICASL7.EQ.'NEXP'.OR.
     1   ICASL7.EQ.'NEPA' .OR. ICASL7.EQ.'NEXE')THEN
        IJUNK=INT(TEMPS(1)+0.01)
        IF(IJUNK.LE.0 .OR. IJUNK.NE.NLAST)THEN
          NUMVAR=1
        ENDIF
      ELSEIF(ICASL7.EQ.'KNSE' .OR. ICASL7.EQ.'NEXC')THEN
        IJUNK1=INT(TEMPS(1)+0.01)
      ELSEIF(ICASL7.EQ.'NEYT')THEN
        IJUNK1=INT(TEMPS(1)+0.01)
        IF(IJUNK1.NE.NLAST)THEN
          NUMVAR=2
        ENDIF
      ENDIF
C
      IF(NUMVAR.GE.2)THEN
        IFLAG1=0
        IF(ICASL7.EQ.'LMOM' .OR. ICASL7.EQ.'PWMO' .OR.
     1     ICASL7.EQ.'BPWM' .OR. ICASL7.EQ.'JAIN' .OR.
     1     ICASL7.EQ.'EXPS' .OR. ICASL7.EQ.'MTCH' .OR.
     1     ICASL7.EQ.'MTC2' .OR.
     1     ICASL7.EQ.'EBLL' .OR. ICASL7.EQ.'EBUL' .OR.
     1     ICASL7.EQ.'EBCL' .OR. ICASL7.EQ.'INTL' .OR.
     1     ICASL7.EQ.'PARL' .OR. ICASL7.EQ.'PERL'.OR.
     1     ICASL7.EQ.'DPCL' .OR. ICASL7.EQ.'DPTS' .OR.
     1     ICASL7.EQ.'DPLT' .OR. ICASL7.EQ.'DPUT' .OR.
     1     ICASL7.EQ.'R1TS' .OR. ICASL7.EQ.'R1LT' .OR.
     1     ICASL7.EQ.'R1UT' .OR. ICASL7.EQ.'IZSC' .OR.
     1     ICASL7.EQ.'R2TS' .OR. ICASL7.EQ.'R2LT' .OR.
     1     ICASL7.EQ.'R2UT' .OR. ICASL7.EQ.'BRAT' .OR.
     1     ICASL7.EQ.'R3TS' .OR. ICASL7.EQ.'R3LT' .OR.
     1     ICASL7.EQ.'R3UT' .OR. ICASL7.EQ.'BPSE' .OR.
     1     ICASL7.EQ.'SHIF' .OR. ICASL7.EQ.'CSHI' .OR.
     1     ICASL7.EQ.'LARG' .OR. ICASL7.EQ.'SMAL' .OR.
     1     ICASL7.EQ.'VPER' .OR. ICASL7.EQ.'SRNP' .OR.
     1     ICASL7.EQ.'KNSE' .OR. ICASL7.EQ.'NEXC' .OR.
     1     ICASL7.EQ.'COMB' .OR. ICASL7.EQ.'MWUF' .OR.
     1     ICASL7.EQ.'IZSC' .OR. ICASL7.EQ.'ZPRI' .OR.
     1     ICASL7.EQ.'PA  ' .OR. ICASL7.EQ.'DIPE' .OR.
     1     ICASL7.EQ.'AGCO' .OR. ICASL7.EQ.'JITT')THEN
          IFLAG1=1
        ENDIF
        ICASEZ=2
        CALL DPMAT7(ICASL7,ICASEZ,MAXCAS,ILOCR,
     1              IHRIGH(2),IHRIG2(2),ICOLR,ILISR,NIRIGH,
     1              ITYPA,TEMPS,
     1              IFLAG1,ATEMP2,ITEMP,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
      IF(ICASL7.EQ.'KNSE' .OR. ICASL7.EQ.'NEXC')THEN
        IJUNK2=INT(TEMPS(2)+0.01)
        IF((IJUNK1.LE.0 .OR. IJUNK1.NE.KLAST) .OR.
     1     (IJUNK2.LE.0 .OR. IJUNK2.NE.NLAST))THEN
          NUMVAR=2
        ENDIF
      ENDIF
C
      IF(NUMVAR.GE.3)THEN
        IFLAG1=0
        IF(ICASL7.EQ.'EBLL' .OR. ICASL7.EQ.'EBUL' .OR.
     1     ICASL7.EQ.'EBCL' .OR. ICASL7.EQ.'SRNP' .OR.
     1     ICASL7.EQ.'DPCL' .OR. ICASL7.EQ.'DPTS' .OR.
     1     ICASL7.EQ.'DPLT' .OR. ICASL7.EQ.'DPUT' .OR.
     1     ICASL7.EQ.'R1TS' .OR. ICASL7.EQ.'R1LT' .OR.
     1     ICASL7.EQ.'R1UT' .OR. ICASL7.EQ.'INTL' .OR.
     1     ICASL7.EQ.'PARL' .OR. ICASL7.EQ.'PERL' .OR.
     1     ICASL7.EQ.'R2TS' .OR. ICASL7.EQ.'R2LT' .OR.
     1     ICASL7.EQ.'R2UT' .OR. ICASL7.EQ.'BRAT' .OR.
     1     ICASL7.EQ.'R3TS' .OR. ICASL7.EQ.'R3LT' .OR.
     1     ICASL7.EQ.'R3UT' .OR. ICASL7.EQ.'BPSE' .OR.
     1     ICASL7.EQ.'COMB' .OR. ICASL7.EQ.'EN  ' .OR.
     1     ICASL7.EQ.'IZSC' .OR. ICASL7.EQ.'ZPRI' .OR.
     1     ICASL7.EQ.'EZPL' .OR. ICASL7.EQ.'EZMI' .OR.
     1     ICASL7.EQ.'IZET' .OR. ICASL7.EQ.'TPOI' .OR.
     1     ICASL7.EQ.'PA  ' .OR. ICASL7.EQ.'GWSA' .OR.
     1     ICASL7.EQ.'HERG' .OR. ICASL7.EQ.'INSE' .OR.
     1     ICASL7.EQ.'AGCO' .OR. ICASL7.EQ.'SPF2')THEN
          IFLAG1=1
        ENDIF
        ICASEZ=3
        CALL DPMAT7(ICASL7,ICASEZ,MAXCAS,ILOCR,
     1              IHRIGH(3),IHRIG2(3),ICOLR,ILISR,NIRIGH,
     1              ITYPA,TEMPS,
     1              IFLAG1,ATEMP2,ITEMP,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
      IF(NUMVAR.GE.4)THEN
        IFLAG1=0
        IF(ICASL7.EQ.'DPCL'.OR.ICASL7.EQ.'DPTS'.OR.
     1     ICASL7.EQ.'R1TS'.OR.ICASL7.EQ.'R1LT'.OR.
     1     ICASL7.EQ.'R1UT'.OR.ICASL7.EQ.'INTL'.OR.
     1     ICASL7.EQ.'PARL'.OR.ICASL7.EQ.'PERL'.OR.
     1     ICASL7.EQ.'R3TS'.OR.ICASL7.EQ.'R3LT'.OR.
     1     ICASL7.EQ.'R3UT'.OR.ICASL7.EQ.'BPSE'.OR.
     1     ICASL7.EQ.'R2TS'.OR.ICASL7.EQ.'R2LT'.OR.
     1     ICASL7.EQ.'R2UT'.OR.ICASL7.EQ.'BRAT'.OR.
     1     ICASL7.EQ.'COMB'.OR.ICASL7.EQ.'SRNP'.OR.
     1     ICASL7.EQ.'BFPD'.OR.ICASL7.EQ.'BFCD'.OR.
     1     ICASL7.EQ.'BFPP'.OR.ICASL7.EQ.'TPOI'.OR.
     1     ICASL7.EQ.'EEPD'.OR.ICASL7.EQ.'EECD'.OR.
     1     ICASL7.EQ.'EEPP'.OR.ICASL7.EQ.'EN  '.OR.
     1     ICASL7.EQ.'EZPL'.OR.ICASL7.EQ.'EZMI' .OR.
     1     ICASL7.EQ.'IZET'.OR.ICASL7.EQ.'ZPRI' .OR.
     1     ICASL7.EQ.'HERG'.OR.
     1     ICASL7.EQ.'DPLT'.OR.ICASL7.EQ.'DPUT')THEN
          IFLAG1=1
        ENDIF
        ICASEZ=4
        CALL DPMAT7(ICASL7,ICASEZ,MAXCAS,ILOCR,
     1              IHRIGH(4),IHRIG2(4),ICOLR,ILISR,NIRIGH,
     1              ITYPA,TEMPS,
     1              IFLAG1,ATEMP2,ITEMP,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
C  5 OR MORE VARIABLES.
C
      IF(NUMVAR.GE.5)THEN
        IFLAG1=0
        IF(ICASL7.EQ.'DPCL'.OR.ICASL7.EQ.'DPTS'.OR.
     1     ICASL7.EQ.'R1TS'.OR.ICASL7.EQ.'R1LT'.OR.
     1     ICASL7.EQ.'R1UT'.OR.ICASL7.EQ.'INTL'.OR.
     1     ICASL7.EQ.'PARL'.OR.ICASL7.EQ.'PERL'.OR.
     1     ICASL7.EQ.'R3TS'.OR.ICASL7.EQ.'R3LT'.OR.
     1     ICASL7.EQ.'R3UT'.OR.ICASL7.EQ.'BPSE'.OR.
     1     ICASL7.EQ.'R2TS'.OR.ICASL7.EQ.'R2LT'.OR.
     1     ICASL7.EQ.'R2UT'.OR.ICASL7.EQ.'BRAT'.OR.
     1     ICASL7.EQ.'COMB'.OR.
     1     ICASL7.EQ.'BFPD'.OR.ICASL7.EQ.'BFCD'.OR.
     1     ICASL7.EQ.'BFPP'.OR.
     1     ICASL7.EQ.'EEPD'.OR.ICASL7.EQ.'EECD'.OR.
     1     ICASL7.EQ.'EEPP'.OR.ICASL7.EQ.'TPOI'.OR.
     1     ICASL7.EQ.'DPLT'.OR.ICASL7.EQ.'DPUT')THEN
          IFLAG1=1
        ENDIF
        DO1110ICASEZ=5,NUMVAR
          CALL DPMAT7(ICASL7,ICASEZ,MAXCAS,ILOCR,
     1                IHRIGH(ICASEZ),IHRIG2(ICASEZ),
     1                ICOLR,ILISR,NIRIGH,
     1                ITYPA,TEMPS,
     1                IFLAG1,ATEMP2,ITEMP,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
C
C         LOCATION PARAMETER OPTIONAL FOR END EFFECTS WEIBULL,
C         SO CHECK TO SEE IF LAST PARAMETER GIVEN.
C
          IF(ICASL7.EQ.'EEPD'.OR.ICASL7.EQ.'EECD'.OR.
     1       ICASL7.EQ.'EEPP'.AND.ICASEZ.EQ.8)THEN
             IF(IERROR.EQ.'YES')THEN
               NUMVAR=7
               IERROR='NO'
             ENDIF
          ENDIF
 1110   CONTINUE
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
C
C               ******************************************************
C               **  STEP 6.1--                                      **
C               **  FOR CERTAIN 2-VARIABLE AND 3-VARIABLE CASES,    **
C               **  CHECK THAT VARIABLES 1 AND 2 HAVE THE SAME      **
C               **  NUMBER OF ELEMENTS.                             **
C               **  THIS CHECK IS NOT DONE FOR CONVOLUTION,         **
C               **  DECONVOLUTION, FREQUENCY                        **
C               **  AND SUM (DISTINCT)                              **
C               ******************************************************
C
      ISTEPN='6.1'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C  CASE 1: NO VARIABLES NEED TO BE SAME LENGTH
C
      IF(ICASL7.EQ.'CONV'.OR.ICASL7.EQ.'DECO'.OR.
     1   ICASL7.EQ.'FREQ'.OR.ICASL7.EQ.'SUMD'.OR.
     1   ICASL7.EQ.'SUBS'.OR.ICASL7.EQ.'POAD'.OR.
     1   ICASL7.EQ.'POSU'.OR.ICASL7.EQ.'POMU'.OR.
     1   ICASL7.EQ.'PODI'.OR.ICASL7.EQ.'POSQ'.OR.
     1   ICASL7.EQ.'POSR'.OR.ICASL7.EQ.'POGC'.OR.
     1   ICASL7.EQ.'POLC'.OR.ICASL7.EQ.'POEV'.OR.
     1   ICASL7.EQ.'SEUN'.OR.ICASL7.EQ.'SEIN'.OR.
     1   ICASL7.EQ.'SECO'.OR.ICASL7.EQ.'SECA'.OR.
     1   ICASL7.EQ.'SECP'.OR.ICASL7.EQ.'SEEL'.OR.
     1   ICASL7.EQ.'LONT'.OR.ICASL7.EQ.'VELE'.OR.
     1   ICASL7.EQ.'GEMU'.OR.ICASL7.EQ.'COCD'.OR.
     1   ICASL7.EQ.'KEEP'.OR.ICASL7.EQ.'OMIT'.OR.
     1   ICASL7.EQ.'COCP'.OR.ICASL7.EQ.'EXPS'.OR.
     1   ICASL7.EQ.'MTCH'.OR.ICASL7.EQ.'STAC'.OR.
     1   ICASL7.EQ.'MTC2'.OR.ICASL7.EQ.'STAC'.OR.
     1   ICASL7.EQ.'RSTA'.OR.ICASL7.EQ.'LMOM'.OR.
     1   ICASL7.EQ.'PWMO'.OR.ICASL7.EQ.'BPWM'.OR.
     1   ICASL7.EQ.'EBLL'.OR.ICASL7.EQ.'EBUL'.OR.
     1   ICASL7.EQ.'EBCL'.OR.ICASL7.EQ.'EXPA'.OR.
     1   ICASL7.EQ.'AGCO'.OR.ICASL7.EQ.'COMB'.OR.
     1   ICASL7.EQ.'DPCL'.OR.ICASL7.EQ.'DPTS'.OR.
     1   ICASL7.EQ.'DPLT'.OR.ICASL7.EQ.'DPUT'.OR.
     1   ICASL7.EQ.'R1TS'.OR.ICASL7.EQ.'R1LT'.OR.
     1   ICASL7.EQ.'R1UT'.OR.ICASL7.EQ.'INTL'.OR.
     1   ICASL7.EQ.'PARL'.OR.ICASL7.EQ.'PERL'.OR.
     1   ICASL7.EQ.'R3TS'.OR.ICASL7.EQ.'R3LT'.OR.
     1   ICASL7.EQ.'R3UT'.OR.ICASL7.EQ.'BPSE'.OR.
     1   ICASL7.EQ.'R2TS'.OR.ICASL7.EQ.'R2LT'.OR.
     1   ICASL7.EQ.'R2UT'.OR.ICASL7.EQ.'BRAT'.OR.
     1   ICASL7.EQ.'NEXS'.OR.ICASL7.EQ.'NEXP'.OR.
     1   ICASL7.EQ.'KNSE'.OR.ICASL7.EQ.'NEXC'.OR.
     1   ICASL7.EQ.'GATH'.OR.ICASL7.EQ.'SCAT'.OR.
     1   ICASL7.EQ.'TMIN'.OR.ICASL7.EQ.'TMAX'.OR.
     1   ICASL7.EQ.'SHIF'.OR.ICASL7.EQ.'CSHI'.OR.
     1   ICASL7.EQ.'LARG'.OR.ICASL7.EQ.'SMAL'.OR.
     1   ICASL7.EQ.'VPER'.OR.ICASL7.EQ.'SRNP'.OR.
     1   ICASL7.EQ.'INSE'.OR.ICASL7.EQ.'PSCO'.OR.
     1   NUMVAR.LE.1)THEN
        GOTO2190
C
C  CASE 1A: ALL VARIABLES NEED TO BE SAME LENGTH
C
      ELSEIF(ICASL7.EQ.'STAN' .OR. ICASL7.EQ.'ZSCO'.OR.
     1       ICASL7.EQ.'USCO' .OR. ICASL7.EQ.'LSTA'.OR.
     1       ICASL7.EQ.'VSCO' .OR. ICASL7.EQ.'SSCO'.OR.
     1       ICASL7.EQ.'MSCO' .OR. ICASL7.EQ.'DSCO'.OR.
     1       ICASL7.EQ.'ASCO' .OR. 
     1       ICASL7.EQ.'LSST' .OR. ICASL7.EQ.'CRTA'.OR.
     1       ICASL7.EQ.'CTCU' .OR. ICASL7(1:2).EQ.'CT' .OR.
     1       ICASL7.EQ.'INTL' .OR. ICASL7.EQ.'SOR3' .OR.
     1       ICASL7.EQ.'SOR4' .OR. ICASL7.EQ.'RAN3' .OR.
     1       ICASL7.EQ.'WIND' .OR. ICASL7.EQ.'WSAT' .OR.
     1       ICASL7.EQ.'MNRK' .OR. ICASL7.EQ.'MDRK' .OR.
     1       ICASL7.EQ.'CSCO' .OR.
     1       ICASL7.EQ.'MOVI' .OR. ICASL7.EQ.'CUMU')THEN
        DO2199I=2,NUMVAR
          IF(NIRIGH(1).NE.NIRIGH(I))THEN
            IERROR='YES'
            WRITE(ICOUT,2191)
 2191       FORMAT('***** ERROR 2191 IN DPMATC--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2192)NUMVAR
 2192       FORMAT('      ALL ',I8,' VARIABLES SHOULD HAVE THE SAME ',
     1             'NUMBER OF ELEMENTS.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2193)NIRIGH(1)
 2193       FORMAT('      VARIABLE ONE HAS ',I8,' OBSERVATIONS.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2194)I,NIRIGH(I)
 2194       FORMAT('      VARIABLE ',I2,' HAS ',I8,' OBSERVATIONS.')
            CALL DPWRST('XXX','BUG ')
          ENDIF
 2199   CONTINUE
C
        IF(IERROR.EQ.'YES')THEN
          IF(IWIDTH.GE.1)THEN
             WRITE(ICOUT,2119)(IANS(I),I=1,MAX(100,IWIDTH))
             CALL DPWRST('XXX','BUG ')
           ENDIF
           GOTO19000
        ENDIF
C
C  CASE 2: SAME LENGTH REQUIRED FOR VARIABLES 1 AND 2
C
      ELSEIF(ICASL7.EQ.'COEX'.OR.ICASL7.EQ.'COSR'.OR.
     1       ICASL7.EQ.'CORO'.OR.
     1       ICASL7.EQ.'COCO'.OR.ICASL7.EQ.'CFRT'.OR.
     1       ICASL7.EQ.'VEAD'.OR.ICASL7.EQ.'VESU'.OR.
     1       ICASL7.EQ.'VEDP'.OR.ICASL7.EQ.'VECP'.OR.
     1       ICASL7.EQ.'VEDI'.OR.ICASL7.EQ.'VEAN'.OR.
     1       ICASL7.EQ.'LOAN'.OR.ICASL7.EQ.'LOOR'.OR.
     1       ICASL7.EQ.'LONA'.OR.ICASL7.EQ.'LONO'.OR.
     1       ICASL7.EQ.'LOIM'.OR.ICASL7.EQ.'LOEQ'.OR.
     1       ICASL7.EQ.'LOXO'.OR.ICASL7.EQ.'HCON'.OR.
     1       ICASL7.EQ.'KCON'.OR.ICASL7.EQ.'SRTB'.OR.
     1       ICASL7.EQ.'2DCH'.OR.ICASL7.EQ.'EDGV'.OR.
     1       ICASL7.EQ.'SPF1'.OR.ICASL7.EQ.'SPF2'.OR.
     1       ICASL7.EQ.'YTHL'.OR.ICASL7.EQ.'EN  '.OR.
     1       ICASL7.EQ.'EZPL'.OR.ICASL7.EQ.'EZMI'.OR.
     1       ICASL7.EQ.'IZET'.OR.ICASL7.EQ.'JSCO'.OR.
     1       ICASL7.EQ.'SOR2'.OR.ICASL7.EQ.'RAN2'.OR.
     1       ICASL7.EQ.'TPOI'.OR.ICASL7.EQ.'EXTP'.OR.
     1       ICASL7.EQ.'PEAK'.OR.ICASL7.EQ.'PEAR'.OR.
     1       ICASL7.EQ.'ENCB'.OR.ICASL7.EQ.'RAEQ'.OR.
     1       ICASL7.EQ.'NNE1'.OR.ICASL7.EQ.'NNE2'.OR.
     1       ICASL7.EQ.'NNE3'.OR.ICASL7.EQ.'NNE4'.OR.
     1       ICASL7.EQ.'GSQD'.OR.ICASL7.EQ.'GSQS'.OR.
     1       ICASL7.EQ.'GSQP'.OR.ICASL7.EQ.'GSQM'.OR.
     1       ICASL7.EQ.'GQMN'.OR.ICASL7.EQ.'GQMX'.OR.
     1       ICASL7.EQ.'GSQL'.OR.ICASL7.EQ.'GSQU'.OR.
     1       (ICASL7.EQ.'ZSCO'.OR.ICASL7.EQ.'LSTA'.OR.
     1        ICASL7.EQ.'USCO'.OR.ICASL7.EQ.'LSST'.OR.
     1        ICASL7.EQ.'VSCO'.OR.ICASL7.EQ.'SSCO'.OR.
     1        ICASL7.EQ.'MSCO'.OR.ICASL7.EQ.'DSCO'.OR.
     1        ICASL7.EQ.'ASCO'.OR.
     1        ICASL7.EQ.'CRTA'.OR.ICASL7.EQ.'STAN'.OR.
     1        ICASL7.EQ.'CTCU'.OR.ICASL7.EQ.'WIND'.OR.
     1        ICASL7.EQ.'MOVI'.OR.ICASL7.EQ.'CUMU'.OR.
     1        ICASL7.EQ.'MNRK'.OR.ICASL7.EQ.'MDRK'.OR.
     1        ICASL7(1:2).EQ.'CT' .AND. NUMVAR.GE.2))THEN
        IF(NIRIGH(1).NE.NIRIGH(2))THEN
          WRITE(ICOUT,2111)
 2111     FORMAT('***** ERROR 2111 IN DPMATC--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2112)
 2112     FORMAT('      VARIABLES ONE AND TWO MUST HAVE THE SAME')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2113)
 2113     FORMAT('      NUMBER OF OBSERVATIONS;  SUCH WAS NOT ',
     1           'THE CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          DO2114J=1,2
            WRITE(ICOUT,2115)IHRIGH(J),IHRIG2(J),NIRIGH(J)
 2115       FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,
     1             ' OBSERVATIONS;')
            CALL DPWRST('XXX','BUG ')
 2114     CONTINUE
          WRITE(ICOUT,2118)
 2118     FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2119)(IANS(I),I=1,MAX(100,IWIDTH))
 2119       FORMAT('      ',100A1)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO19000
        ENDIF
C
C  CASE 3: SAME LENGTH REQUIRED FOR VARIABLES 1, 2, AND 3
C
      ELSEIF(ICASL7.EQ.'HCO2'.OR.ICASL7.EQ.'KCO2'.OR.
     1       ICASL7.EQ.'GWSA'.OR.
     1       ICASL7.EQ.'2DIN'.OR.ICASL7.EQ.'JOIN')THEN
        IF(NIRIGH(1).NE.NIRIGH(2) .OR. NIRIGH(1).NE.NIRIGH(3))THEN
          WRITE(ICOUT,2121)
 2121     FORMAT('***** ERROR 2121 IN DPMATC--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2122)
 2122     FORMAT('      VARIABLES ONE , TWO, AND THREE MUST HAVE ',
     1           'THE SAME')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2123)
 2123     FORMAT('      NUMBER OF OBSERVATIONS;  SUCH WAS NOT ',
     1           'THE CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          DO2124J=1,3
            WRITE(ICOUT,2115)IHRIGH(J),IHRIG2(J),NIRIGH(J)
            CALL DPWRST('XXX','BUG ')
 2124     CONTINUE
          WRITE(ICOUT,2118)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2119)(IANS(I),I=1,MAX(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO19000
        ENDIF
C
C  CASE 4: SAME LENGTH REQUIRED FOR VARIABLES 1, 2, 3, AND 4
C
      ELSEIF(ICASL7.EQ.'COAD'.OR.ICASL7.EQ.'COSU'.OR.
     1       ICASL7.EQ.'COMU'.OR.ICASL7.EQ.'CODI')THEN
        IF(NIRIGH(1).NE.NIRIGH(2) .OR. NIRIGH(1).NE.NIRIGH(3) .OR.
     1     NIRIGH(1).NE.NIRIGH(4))THEN
          WRITE(ICOUT,2131)
 2131     FORMAT('***** ERROR 2131 IN DPMATC--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2132)
 2132     FORMAT('      VARIABLES ONE , TWO, THREE, AND FOUR ',
     1           'MUST HAVE THE SAME')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2133)
 2133     FORMAT('      NUMBER OF OBSERVATIONS;  SUCH WAS NOT ',
     1           'THE CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          DO2134J=1,4
            WRITE(ICOUT,2115)IHRIGH(J),IHRIG2(J),NIRIGH(J)
            CALL DPWRST('XXX','BUG ')
 2134     CONTINUE
          WRITE(ICOUT,2136)IHRIGH(1),IHRIG2(1),NIRIGH(1)
 2136     FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,
     1           ' OBSERVATIONS;')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2136)IHARG(ILOCV+1),IHARG2(ILOCV+1),NIRIGH(2)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2136)IHARG(ILOCV+2),IHARG2(ILOCV+2),NIRIGH(3)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2136)IHARG(ILOCV+3),IHARG2(ILOCV+3),NIRIGH(4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2118)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2119)(IANS(I),I=1,MAX(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO19000
        ENDIF
C
C  CASE 5: SAME LENGTH REQUIRED FOR VARIABLES 1, 2, AND 3 AND
C          FOR VARIABLES 4 AND 5
C
      ELSEIF(ICASL7.EQ.'BILI'.OR.ICASL7.EQ.'BIVA')THEN
        IF(NIRIGH(1).EQ.NIRIGH(2).AND.NIRIGH(2).EQ.NIRIGH(3).AND.
     1     NIRIGH(4).EQ.NIRIGH(5))GOTO2190
        WRITE(ICOUT,2141)
 2141   FORMAT('***** ERROR 2141 IN DPMATC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2142)
 2142   FORMAT('      FOR 2D INTERPOLATION, THE NUMBER OF ',
     1         'OBSERVATIONS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2143)
 2143   FORMAT('     IN THE FIRST THREE VARIABLES AND IN VARIABLES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2144)
 2144   FORMAT('      4 AND 5 MUST BE THE SAME; SUCH WAS NOT THE ',
     1         'CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        DO2146J=1,5
          WRITE(ICOUT,2115)IHRIGH(J),IHRIG2(J),NIRIGH(J)
          CALL DPWRST('XXX','BUG ')
 2146   CONTINUE
        WRITE(ICOUT,2118)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,2119)(IANS(I),I=1,MAX(100,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO19000
C
C  CASE 6: VARIABLE 1 AND VARIABLE 3 MUST HAVE SAME LENGTH
C
      ELSEIF((ICASL7.EQ.'MTCH'.AND.ICASMT.EQ.'TRAN') .OR.
     1       (ICASL7.EQ.'REPL'.AND.ICASMT.EQ.'TRAN'))THEN
        IF(NIRIGH(1).NE.NIRIGH(3))THEN
          WRITE(ICOUT,2151)
 2151     FORMAT('***** ERROR 2151 IN DPMATC--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2152)
 2152     FORMAT('      VARIABLES ONE AND THREE MUST HAVE THE SAME')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2153)
 2153     FORMAT('      NUMBER OF OBSERVATIONS;  SUCH WAS NOT ',
     1           'THE CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2115)IHRIGH(1),IHRIG2(1),NIRIGH(1)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2115)IHRIGH(3),IHRIG2(3),NIRIGH(3)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2158)
 2158     FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2119)(IANS(I),I=1,MAX(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO19000
        ENDIF
C
C  CASE 7: SAME LENGTH REQUIRED FOR VARIABLES 1 AND 2 AND
C          FOR VARIABLES 3 AND 4
C
      ELSEIF(ICASL7.EQ.'EDGV' .OR. ICASL7.EQ.'SPF1' .OR.
     1       ICASL7.EQ.'FNNE' .OR. ICASL7.EQ.'ANNE' .OR.
     1       ICASL7.EQ.'POPL')THEN
        IF(NIRIGH(1).NE.NIRIGH(2))THEN
          WRITE(ICOUT,2161)
 2161     FORMAT('***** ERROR IN DPMATC--')
          CALL DPWRST('XXX','BUG ')
          IF(ICASL7.EQ.'EDGV')THEN
            WRITE(ICOUT,2162)
 2162       FORMAT('      FOR EDGE TO VERTICES, THE NUMBER OF ',
     1             'OBSERVATIONS')
          ELSEIF(ICASL7.EQ.'SPF1')THEN
            WRITE(ICOUT,2168)
 2168       FORMAT('      FOR SPANNING FOREST, THE NUMBER OF ',
     1             'OBSERVATIONS')
          ELSEIF(ICASL7.EQ.'POPL')THEN
            WRITE(ICOUT,2169)
 2169       FORMAT('      FOR POINTS IN POLYGON, THE NUMBER OF ',
     1             'OBSERVATIONS')
          ELSEIF(ICASL7.EQ.'FNNE')THEN
            WRITE(ICOUT,22162)
22162       FORMAT('      FOR FIRST NEAREST NEIGHBOR, THE NUMBER OF ',
     1             'OBSERVATIONS')
          ELSEIF(ICASL7.EQ.'ANNE')THEN
            WRITE(ICOUT,22163)
22163       FORMAT('      FOR ALL NEAREST NEIGHBORS, THE NUMBER OF ',
     1             'OBSERVATIONS')
          ENDIF
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2163)
 2163     FORMAT('     FOR VARIABLES ONE AND TWO MUST BE THE SAME.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2164)
 2164     FORMAT('      SUCH WAS NOT THE CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          DO2166J=1,2
            WRITE(ICOUT,2115)IHRIGH(J),IHRIG2(J),NIRIGH(J)
            CALL DPWRST('XXX','BUG ')
 2166     CONTINUE
          WRITE(ICOUT,2118)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2119)(IANS(I),I=1,MAX(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO19000
        ENDIF
C
        IF(NIRIGH(3).NE.NIRIGH(4))THEN
          WRITE(ICOUT,2171)
 2171     FORMAT('***** ERROR IN DPMATC--')
          CALL DPWRST('XXX','BUG ')
          IF(ICASL7.EQ.'EDGV')THEN
            WRITE(ICOUT,2172)
 2172       FORMAT('      FOR EDGE TO VERTICES, THE NUMBER OF ',
     1             'OBSERVATIONS')
          ELSE
            WRITE(ICOUT,2178)
 2178       FORMAT('      FOR SPANNING FOREST, THE NUMBER OF ',
     1             'OBSERVATIONS')
          ENDIF
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2173)
 2173     FORMAT('     FOR VARIABLES THREE AND FOUR MUST BE THE SAME.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2174)
 2174     FORMAT('      SUCH WAS NOT THE CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          DO2176J=3,4
            WRITE(ICOUT,2115)IHRIGH(J),IHRIG2(J),NIRIGH(J)
            CALL DPWRST('XXX','BUG ')
 2176     CONTINUE
          WRITE(ICOUT,2118)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2119)(IANS(I),I=1,MAX(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO19000
        ENDIF
C
C  CASE 8: SAME LENGTH REQUIRED FOR VARIABLES 2 AND 3
C
      ELSEIF(ICASL7.EQ.'NEPA' .OR.
     1       ICASL7.EQ.'BFPD'.OR.ICASL7.EQ.'BFCD'.OR.
     1       ICASL7.EQ.'BFPP'.OR.
     1       ICASL7.EQ.'EEPD'.OR.ICASL7.EQ.'EECD'.OR.
     1       ICASL7.EQ.'EEPP'.OR.
     1       (ICASL7.EQ.'NEYT' .AND. NUMVAR.EQ.3))THEN
        IF(NIRIGH(2).NE.NIRIGH(3))THEN
          WRITE(ICOUT,2181)
 2181     FORMAT('***** ERROR IN DPMATC--')
          CALL DPWRST('XXX','BUG ')
          IF(ICASL7.EQ.'NEPA')THEN
            WRITE(ICOUT,2182)
 2182       FORMAT('      FOR NEXT PARTITION, THE NUMBER OF ',
     1             'OBSERVATIONS')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASL7.EQ.'NEYT')THEN
            WRITE(ICOUT,2183)
 2183       FORMAT('      FOR NEXT YOUNG TABLEAUX, THE NUMBER OF ',
     1             'OBSERVATIONS')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASL7.EQ.'BFPD' .OR. ICASL7.EQ.'BFCD' .OR.
     1           ICASL7.EQ.'BFPP')THEN
            WRITE(ICOUT,2184)
 2184       FORMAT('      FOR BRITTLE FIBER WEIBULL PDF/CDF/PPF, ',
     1             'THE NUMBER OF OBSERVATIONS')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICASL7.EQ.'EEPD' .OR. ICASL7.EQ.'EECD' .OR.
     1           ICASL7.EQ.'EEPP')THEN
            WRITE(ICOUT,2185)
 2185       FORMAT('      FOR END EFFECTS WEIBULL PDF/CDF/PPF, ',
     1             'THE NUMBER OF OBSERVATIONS')
            CALL DPWRST('XXX','BUG ')
          ENDIF
          WRITE(ICOUT,2186)
 2186     FORMAT('     FOR VARIABLES TWO AND THREE MUST BE THE SAME.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2187)
 2187     FORMAT('      SUCH WAS NOT THE CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          DO2188J=2,3
            WRITE(ICOUT,2115)IHRIGH(J),IHRIG2(J),NIRIGH(J)
            CALL DPWRST('XXX','BUG ')
 2188     CONTINUE
          WRITE(ICOUT,2119)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2119)(IANS(I),I=1,MAX(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO19000
        ENDIF
C
      ENDIF
C
 2190 CONTINUE
C
C               *******************************
C               **  STEP 7--                 **
C               **  DETERMINE THE SUBCASE    **
C               **  AND BRANCH ACCORDINGLY.  **
C               *******************************
C
      ISTEPN='7'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,7003)NUMVAR,NUMARG
 7003   FORMAT('7008--NUMVAR,NUMARG = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO7005I=1,NUMVAR
        WRITE(ICOUT,7008)I,ITYPA(I),ILOCR(I)
 7008   FORMAT('7008-I,ITYPA(I),ILOCR(I) = ',I4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
 7005   CONTINUE
        WRITE(ICOUT,7006)IHARG(ILOCR(NUMVAR)),IHARG2(ILOCR(NUMVAR))
 7006   FORMAT('IHARG(ILOCR(NUMVAR)),IHARG2(ILOCR(NUMVAR)) = ',2A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7007)IHARG(ILOCR(NUMVAR)+1),
     1                   IHARG2(ILOCR(NUMVAR)+1)
 7007   FORMAT('IHARG(ILOCR(NUMVAR)+1),IHARG2(ILOCR(NUMVAR)+1) = ',
     1         2A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
CCCCC FOR EXPONENTIAL SMOOTH, SECOND ARGUMENT OPTIONAL.
C
      IF(ICASL7.EQ.'EXPS')THEN
        IF(ILOCR(1).EQ.NUMARG)THEN
          TEMPS(2)=0.0
          NUMVAR=1
          GOTO8000
        ELSEIF(IHARG(ILOCR(2)).EQ.'SUBS'.OR.
     1         IHARG(ILOCR(2)).EQ.'EXCE'.OR.
     1         IHARG(ILOCR(2)).EQ.'FOR ')THEN
          TEMPS(2)=0.0
          NUMVAR=1
          IF(IHARG(ILOCR(2)).EQ.'SUBS')GOTO9000
          IF(IHARG(ILOCR(2)).EQ.'EXCE')GOTO9000
          IF(IHARG(ILOCR(2)).EQ.'FOR ')GOTO10000
        ENDIF
      ELSEIF(ICASL7.EQ.'SORC' .OR. ICASL7.EQ.'STAC'.OR.
     1       ICASL7.EQ.'RSTA' .OR. ICASL7.EQ.'COMB')THEN
        NUMVAR=1
        ISTRT=4
        IF(ICASL7.EQ.'STAC')ISTRT=5
        IF(ICASL7.EQ.'RSTA')ISTRT=7
        IF(NUMARG.LE.ISTRT)GOTO8000
        DO7051I=ISTRT+1,NUMARG
          ILOCR7=I
          NUMVAR=NUMVAR+1
          IF(ILOCR7.GE.NUMARG)GOTO8000
          IF(ILOCR7.LT.NUMARG.AND.IHARG(ILOCR7+1).EQ.'SUBS'.AND.
     1       IHARG2(ILOCR7+1).EQ.'ET  ')GOTO9000
          IF(ILOCR7.LT.NUMARG.AND.IHARG(ILOCR7+1).EQ.'EXCE'.AND.
     1       IHARG2(ILOCR7+1).EQ.'PT  ')GOTO9000
          IF(ILOCR7.LT.NUMARG.AND.IHARG(ILOCR7+1).EQ.'FOR '.AND.
     1       IHARG2(ILOCR7+1).EQ.'    ')GOTO10000
 7051   CONTINUE
        GOTO8000
      ENDIF
C
      IF(ILOCR(NUMVAR).EQ.NUMARG)GOTO8000
      IF(NUMVAR.EQ.0)GOTO11000
C
      IF(ILOCR(NUMVAR).LT.NUMARG)THEN
        IT1=ILOCR(NUMVAR+1)
        IF(IHARG(IT1).EQ.'SUBS'.AND.IHARG2(IT1).EQ.'ET  ')GOTO9000
        IF(IHARG(IT1).EQ.'EXCE'.AND.IHARG2(IT1).EQ.'PT  ')GOTO9000
        IF(IHARG(IT1).EQ.'FOR '.AND.IHARG2(IT1).EQ.'    ')GOTO10000
      ENDIF
C
      WRITE(ICOUT,7081)
 7081 FORMAT('***** ERROR 7081 IN DPMATC--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,7082)
 7082 FORMAT('      ILLEGAL SYNTAX FOR LET COMMAND AT 7082--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,7083)
 7083 FORMAT('      THE COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,7084)(IANS(I),I=1,MAX(100,IWIDTH))
 7084 FORMAT(100A1)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,7088)ILOCV,NUMARG,NUMVAR
 7088 FORMAT('ILOCV,NUMARG,NUMVAR = ',3I8)
      CALL DPWRST('XXX','BUG ')
      DO7089I=1,NUMVAR
      WRITE(ICOUT,7086)I,ILOCR(I)
 7086 FORMAT('I,ILOCR(I) = ',I4,2X,I8)
      CALL DPWRST('XXX','BUG ')
 7089 CONTINUE
      IERROR='YES'
      GOTO19000
C
C               ************************************************
C               **  STEP 8--                                  **
C               **  TREAT THE FULL VARIABLE CASE.             **
C               **  EXAMPLE--LET Y = SORT X                   **
C               **         --LET Y(I) = SORT X                **
C               **  THEN JUMP TO STEP NUMBER 10 BELOW         **
C               **  FOR THE LIST UPDATING AND                 **
C               **  FOR SOME INFORMATIVE PRINTING.            **
C               ************************************************
C
C
 8000 CONTINUE
      ISTEPN='8'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,8011)NUMVAR,NIRIGH(1)
 8011   FORMAT('NUMVAR,NIRIGH(1) = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ICASEQ='FULL'
      NIOLD=NIRIGH(1)
      IF(NUMVAR.GE.2)THEN
        DO8020I=2,NUMVAR
          IF(NIRIGH(I).GT.NIOLD)NIOLD=NIRIGH(I)
 8020   CONTINUE
      ENDIF
      NINEW=NIOLD
      NIFOR=NINEW
      DO8100I=1,NINEW
        ISUB(I)=1
 8100 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        WRITE(ICOUT,8021)NINEW,NIRIGH(1)
 8021   FORMAT('NINEW,NIRIGH(1) = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO11000
C
C               **************************************************
C               **  STEP 9--                                     *
C               **  TREAT THE PARTIAL VARIABLE SUBSET CASE.      *
C               **  EXAMPLE--LET Y = SORT X     SUBSET 2 3 5     *
C               **         --LET Y(I) = SORT X  SUBSET 2 3 5     *
C               **  JUMP TO STEP NUMBER 11 BELOW                 *
C               **  FOR THE ACTUAL MATHEMATICAL OPERATION,       *
C               **  FOR THE LIST UPDATING, AND                   *
C               **  FOR SOME INFORMATIVE PRINTING.               *
C               **************************************************
C
 9000 CONTINUE
      ISTEPN='9'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='SUBS'
      ILOCSV=ILOCR(NUMVAR)+2
      IHSET=IHARG(ILOCSV)
      IHSET2=IHARG2(ILOCSV)
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        WRITE(ICOUT,9002)ILOCSV,IHSET,IHSET2
 9002   FORMAT('ILOCSV,IHSET,IHSET2 = ',I8,2X,A4,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHSET,IHSET2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
      IF(IERROR.EQ.'YES')GOTO19000
      NIOLD=IN(ILOC)
      CALL DPSUBS(NIOLD,ILOCS,NSTEMP,IBUGQ,IERROR)
      NINEW=NIOLD
      NIFOR=NINEW
      GOTO11000
C
C               **************************************************
C               **  STEP 10--                                    *
C               **  TREAT THE PARTIAL VARIABLE FOR CASE.         *
C               **  EXAMPLE--LET Y = SORT X     FOR I = 1 2 10   *
C               **         --LET Y(I) = SORT X  FOR I = 1 2 10   *
C               **  JUMP TO STEP NUMBER 11 BELOW                 *
C               **  FOR THE ACTUAL MATHEMATICAL OPERATION,       *
C               **  FOR THE LIST UPDATING, AND                   *
C               **  FOR SOME INFORMATIVE PRINTING.               *
C               **************************************************
C
10000 CONTINUE
      ISTEPN='10'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FOR'
      CALL DPFOR(NIOLD,NINEW,IROW1,IROWN,
     1NLOCAL,ILOCS,NSTEMP,IBUGQ,IERROR)
      NIFOR=NINEW
      GOTO11000
C
C               *******************************************
C               **  STEP 11--                            **
C               **  CARRY OUT THE                        **
C               **  MATHEMATICAL OPERATION.              **
C               *******************************************
C
11000 CONTINUE
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        DO11109I=1,NUMVAR
          WRITE(ICOUT,11101)I,ITYPA(I)
11101     FORMAT('11101--I,ITYPA(I) = ',I4,2X,A4)
          CALL DPWRST('XXX','BUG ')
11109   CONTINUE
      ENDIF
C
      NITEMX=NINEW
      NS1=0
      NS2=0
      NS3=0
      NS4=0
      NS5=0
      NS6=0
      NS7=0
      NS8=0
      NS9=0
C
CCCCC NOTE: FOR SCATTER, EXTRACT CURRENT VALUES OF VARIABLE
CCCCC       ON LEFT HAND SIDE IF VARIABLE ALREADY EXISTS:
CCCCC
      IF(ICASL7.EQ.'SCAT')THEN
        IF(NEWNAM(1).EQ.'NO')THEN
          NILEFT=IN(ILISL(1))
          NS99=0
          DO11110I=1,NILEFT
            IJ=MAXN*(ICOLL(1)-1)+I
            NS99=NS99+1
            IF(ICOLL(1).LE.MAXCOL)TEMP91(NS99)=V(IJ)
            IF(ICOLL(1).EQ.MAXCP1)TEMP91(NS99)=PRED(I)
            IF(ICOLL(1).EQ.MAXCP2)TEMP91(NS99)=RES(I)
            IF(ICOLL(1).EQ.MAXCP3)TEMP91(NS99)=YPLOT(I)
            IF(ICOLL(1).EQ.MAXCP4)TEMP91(NS99)=XPLOT(I)
            IF(ICOLL(1).EQ.MAXCP5)TEMP91(NS99)=X2PLOT(I)
            IF(ICOLL(1).EQ.MAXCP6)TEMP91(NS99)=TAGPLO(I)
11110     CONTINUE
        ELSE
          NS99=-1
        ENDIF
      ENDIF
C
      IF(NUMVAR.GE.1 .AND. ITYPA(1).EQ.'VARI')THEN
        DO11111I=1,NINEW
          IF(ISUB(I).EQ.0)GOTO11111
          IF(I.GT.NIRIGH(1))GOTO11119
          IJ=MAXN*(ICOLR(1)-1)+I
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MATC')THEN
            WRITE(ICOUT,11112)I,NS1,NINEW,ISUB(I),IJ,V(IJ)
11112       FORMAT('I,NS1,NINEW,ISUB(I),IJ,V(IJ) = ',5I8,F12.5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          NS1=NS1+1
          IF(ICOLR(1).LE.MAXCOL)TEMP1(NS1)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)TEMP1(NS1)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)TEMP1(NS1)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)TEMP1(NS1)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)TEMP1(NS1)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)TEMP1(NS1)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)TEMP1(NS1)=TAGPLO(I)
11111   CONTINUE
11119   CONTINUE
      ENDIF
C
C     FOR BRITTLE FIBER WEIBULL AND END EFFECTS WEIBULL CASES, IGNORE
C     SUBSET CLAUSE, ALSO CAN BE DIFFERENT LENGTH THAN VARIABLE 1.
C
      IF(NUMVAR.GE.2 .AND. ITYPA(2).EQ.'VARI')THEN
        IFLAGN=0
        IF(ICASL7.EQ.'BFPD' .OR. ICASL7.EQ.'BFCD' .OR.
     1     ICASL7.EQ.'BFPP') THEN
           IFLAGN=1
        ELSEIF(ICASL7.EQ.'EEPD' .OR. ICASL7.EQ.'EECD' .OR.
     1     ICASL7.EQ.'EEPP') THEN
           IFLAGN=1
        ELSEIF(ICASL7.EQ.'TMIN' .OR. ICASL7.EQ.'TMAX')THEN
           IFLAGN=1
        ENDIF
        DO11121I=1,NIRIGH(2)
          IF(ISUB(I).EQ.0 .AND. IFLAGN.EQ.0)GOTO11121
          IF(I.GT.NIRIGH(2))GOTO11129
          NS2=NS2+1
          IJ=MAXN*(ICOLR(2)-1)+I
          IF(ICOLR(2).LE.MAXCOL)TEMP2(NS2)=V(IJ)
          IF(ICOLR(2).EQ.MAXCP1)TEMP2(NS2)=PRED(I)
          IF(ICOLR(2).EQ.MAXCP2)TEMP2(NS2)=RES(I)
          IF(ICOLR(2).EQ.MAXCP3)TEMP2(NS2)=YPLOT(I)
          IF(ICOLR(2).EQ.MAXCP4)TEMP2(NS2)=XPLOT(I)
          IF(ICOLR(2).EQ.MAXCP5)TEMP2(NS2)=X2PLOT(I)
          IF(ICOLR(2).EQ.MAXCP6)TEMP2(NS2)=TAGPLO(I)
11121   CONTINUE
11129   CONTINUE
      ENDIF
C
C     FOR BRITTLE FIBER WEIBULL AND END EFFECT WEIBULL CASES, IGNORE
C     SUBSET CLAUSE, ALSO CAN BE DIFFERENT LENGTH THAN VARIABLE 1.
C
      IF(NUMVAR.GE.3 .AND. ITYPA(3).EQ.'VARI')THEN
        IFLAGN=0
        IF(ICASL7.EQ.'BFPD' .OR. ICASL7.EQ.'BFCD' .OR.
     1     ICASL7.EQ.'BFPP') THEN
           IFLAGN=1
        ELSEIF(ICASL7.EQ.'EEPD' .OR. ICASL7.EQ.'EECD' .OR.
     1     ICASL7.EQ.'EEPP') THEN
           IFLAGN=1
        ENDIF
        DO11131I=1,NIRIGH(3)
          IF(ISUB(I).EQ.0 .AND. IFLAGN.EQ.0)GOTO11131
          IF(I.GT.NIRIGH(3))GOTO11139
          NS3=NS3+1
          IJ=MAXN*(ICOLR(3)-1)+I
          IF(ICOLR(3).LE.MAXCOL)TEMP3(NS3)=V(IJ)
          IF(ICOLR(3).EQ.MAXCP1)TEMP3(NS3)=PRED(I)
          IF(ICOLR(3).EQ.MAXCP2)TEMP3(NS3)=RES(I)
          IF(ICOLR(3).EQ.MAXCP3)TEMP3(NS3)=YPLOT(I)
          IF(ICOLR(3).EQ.MAXCP4)TEMP3(NS3)=XPLOT(I)
          IF(ICOLR(3).EQ.MAXCP5)TEMP3(NS3)=X2PLOT(I)
          IF(ICOLR(3).EQ.MAXCP6)TEMP3(NS3)=TAGPLO(I)
11131   CONTINUE
11139   CONTINUE
      ENDIF
C
      IF(NUMVAR.GE.4 .AND. ITYPA(4).EQ.'VARI')THEN
        DO11141I=1,NIRIGH(4)
          IF(ISUB(I).EQ.0)GOTO11141
          IF(I.GT.NIRIGH(4))GOTO11149
          NS4=NS4+1
          IJ=MAXN*(ICOLR(4)-1)+I
          IF(ICOLR(4).LE.MAXCOL)TEMP4(NS4)=V(IJ)
          IF(ICOLR(4).EQ.MAXCP1)TEMP4(NS4)=PRED(I)
          IF(ICOLR(4).EQ.MAXCP2)TEMP4(NS4)=RES(I)
          IF(ICOLR(4).EQ.MAXCP3)TEMP4(NS4)=YPLOT(I)
          IF(ICOLR(4).EQ.MAXCP4)TEMP4(NS4)=XPLOT(I)
          IF(ICOLR(4).EQ.MAXCP5)TEMP4(NS4)=X2PLOT(I)
          IF(ICOLR(4).EQ.MAXCP6)TEMP4(NS4)=TAGPLO(I)
11141   CONTINUE
11149   CONTINUE
      ENDIF
C
      IF(NUMVAR.GE.5 .AND. ITYPA(5).EQ.'VARI')THEN
        DO11151I=1,NIRIGH(5)
          IF(ISUB(I).EQ.0)GOTO11151
          IF(I.GT.NIRIGH(5))GOTO11159
          NS5=NS5+1
          IJ=MAXN*(ICOLR(5)-1)+I
          IF(ICOLR(5).LE.MAXCOL)TEMP5(NS5)=V(IJ)
          IF(ICOLR(5).EQ.MAXCP1)TEMP5(NS5)=PRED(I)
          IF(ICOLR(5).EQ.MAXCP2)TEMP5(NS5)=RES(I)
          IF(ICOLR(5).EQ.MAXCP3)TEMP5(NS5)=YPLOT(I)
          IF(ICOLR(5).EQ.MAXCP4)TEMP5(NS5)=XPLOT(I)
          IF(ICOLR(5).EQ.MAXCP5)TEMP5(NS5)=X2PLOT(I)
          IF(ICOLR(5).EQ.MAXCP6)TEMP5(NS5)=TAGPLO(I)
11151   CONTINUE
11159   CONTINUE
      ENDIF
C
      IF(NUMVAR.GE.6 .AND. ITYPA(6).EQ.'VARI')THEN
        DO11161I=1,NIRIGH(6)
          IF(ISUB(I).EQ.0)GOTO11161
          IF(I.GT.NIRIGH(6))GOTO11169
          NS6=NS6+1
          IJ=MAXN*(ICOLR(6)-1)+I
          IF(ICOLR(6).LE.MAXCOL)TEMP6(NS6)=V(IJ)
          IF(ICOLR(6).EQ.MAXCP1)TEMP6(NS6)=PRED(I)
          IF(ICOLR(6).EQ.MAXCP2)TEMP6(NS6)=RES(I)
          IF(ICOLR(6).EQ.MAXCP3)TEMP6(NS6)=YPLOT(I)
          IF(ICOLR(6).EQ.MAXCP4)TEMP6(NS6)=XPLOT(I)
          IF(ICOLR(6).EQ.MAXCP5)TEMP6(NS6)=X2PLOT(I)
          IF(ICOLR(6).EQ.MAXCP6)TEMP6(NS6)=TAGPLO(I)
11161   CONTINUE
11169   CONTINUE
      ENDIF
C
      IF(NUMVAR.GE.7 .AND. ITYPA(7).EQ.'VARI')THEN
        DO11171I=1,NIRIGH(7)
          IF(ISUB(I).EQ.0)GOTO11171
          IF(I.GT.NIRIGH(6))GOTO11179
          NS7=NS7+1
          IJ=MAXN*(ICOLR(7)-1)+I
          IF(ICOLR(7).LE.MAXCOL)TEMP7(NS7)=V(IJ)
          IF(ICOLR(7).EQ.MAXCP1)TEMP7(NS7)=PRED(I)
          IF(ICOLR(7).EQ.MAXCP2)TEMP7(NS7)=RES(I)
          IF(ICOLR(7).EQ.MAXCP3)TEMP7(NS7)=YPLOT(I)
          IF(ICOLR(7).EQ.MAXCP4)TEMP7(NS7)=XPLOT(I)
          IF(ICOLR(7).EQ.MAXCP5)TEMP7(NS7)=X2PLOT(I)
          IF(ICOLR(7).EQ.MAXCP6)TEMP7(NS7)=TAGPLO(I)
11171   CONTINUE
11179   CONTINUE
      ENDIF
C
      IF(NUMVAR.GE.8 .AND. ITYPA(8).EQ.'VARI')THEN
        DO11181I=1,NIRIGH(8)
          IF(ISUB(I).EQ.0)GOTO11181
          IF(I.GT.NIRIGH(6))GOTO11189
          NS8=NS8+1
          IJ=MAXN*(ICOLR(8)-1)+I
          IF(ICOLR(8).LE.MAXCOL)TEMP8(NS8)=V(IJ)
          IF(ICOLR(8).EQ.MAXCP1)TEMP8(NS8)=PRED(I)
          IF(ICOLR(8).EQ.MAXCP2)TEMP8(NS8)=RES(I)
          IF(ICOLR(8).EQ.MAXCP3)TEMP8(NS8)=YPLOT(I)
          IF(ICOLR(8).EQ.MAXCP4)TEMP8(NS8)=XPLOT(I)
          IF(ICOLR(8).EQ.MAXCP5)TEMP8(NS8)=X2PLOT(I)
          IF(ICOLR(8).EQ.MAXCP6)TEMP8(NS8)=TAGPLO(I)
11181   CONTINUE
11189   CONTINUE
      ENDIF
C
      IF(NUMVAR.GE.9 .AND. ITYPA(9).EQ.'VARI')THEN
        DO11191I=1,NIRIGH(9)
          IF(ISUB(I).EQ.0)GOTO11191
          IF(I.GT.NIRIGH(6))GOTO11199
          NS9=NS9+1
          IJ=MAXN*(ICOLR(9)-1)+I
          IF(ICOLR(9).LE.MAXCOL)TEMP9(NS9)=V(IJ)
          IF(ICOLR(9).EQ.MAXCP1)TEMP9(NS9)=PRED(I)
          IF(ICOLR(9).EQ.MAXCP2)TEMP9(NS9)=RES(I)
          IF(ICOLR(9).EQ.MAXCP3)TEMP9(NS9)=YPLOT(I)
          IF(ICOLR(9).EQ.MAXCP4)TEMP9(NS9)=XPLOT(I)
          IF(ICOLR(9).EQ.MAXCP5)TEMP9(NS9)=X2PLOT(I)
          IF(ICOLR(9).EQ.MAXCP6)TEMP9(NS9)=TAGPLO(I)
11191   CONTINUE
11199   CONTINUE
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')THEN
        WRITE(ICOUT,11292)NINEW,ICASL7,ICASEQ
11292   FORMAT('11292--NINEW,ICASL7,ICASEQ = ',I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11293)NS1,NS2,NS3,NS4,NS5,NS6,NS7
11293   FORMAT('NS1,NS2,NS3,NS4,NS5,NS6,NS7 = ',7I8)
        CALL DPWRST('XXX','BUG ')
        DO11294II=1,7
          WRITE(ICOUT,11291)II,ICOLR(II),ITYPA(II)
11291     FORMAT('II,ICOLR(II),ITYPA(II) = ',I8,2X,I8,2X,A4)
          CALL DPWRST('XXX','BUG ')
11294   CONTINUE
        WRITE(ICOUT,11296)IMATSW,ICASL7
11296   FORMAT('IMATSW,ICASL7 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     -----BRANCH TO THE PROPER CASE-----
C
      IWRITE='ON'
      IF(IPRINT.EQ.'OFF')IWRITE='OFF'
      IF(IFEEDB.EQ.'OFF')IWRITE='OFF'
C
      IF(ICASL7.EQ.'SORT')THEN
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')THEN
          DO11310I=1,NS1
            WRITE(ICOUT,11311)I,TEMP1(I)
11311       FORMAT('I,TEMP1(I) = ',I8,2X,F10.5)
            CALL DPWRST('XXX','BUG ')
11310     CONTINUE
        ENDIF
        CALL SORT(TEMP1,NS1,TEMP1)
CCCCC   CHECK DIRECTION.  JANUARY 2000.
        IF(ISORDI.EQ.'DESC')THEN
          DO11315I=1,NS1
            TEMP2(I)=TEMP1(I)
11315     CONTINUE
          DO11317I=1,NS1
            II=NS1-I+1
            TEMP1(I)=TEMP2(II)
11317     CONTINUE
        ENDIF
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')THEN
          DO11312I=1,NS1
            WRITE(ICOUT,11311)I,TEMP1(I)
            CALL DPWRST('XXX','BUG ')
11312     CONTINUE
        ENDIF
      ELSEIF(ICASL7.EQ.'SOR2')THEN
        CALL SORT2(TEMP1,TEMP2,N,IWRITE,TEMP91,TEMP92,
     1             TEMP3,TEMP4,
     1             ISORDI,ISUBRO,IBUGA3,IERROR)
        DO11313I=1,N
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11313   CONTINUE
      ELSEIF(ICASL7.EQ.'SOR3')THEN
        CALL SORT3(TEMP1,TEMP2,TEMP3,N,IWRITE,TEMP91,TEMP92,TEMP4,
     1             TEMP5,TEMP12(1),TEMP12(MAXOBV+1),TEMP6(1),
     1             TEMP6(MAXOBV+1),TEMP6(2*MAXOBV+1),
     1             TEMP6(3*MAXOBV+1),
     1             ISORDI,ISUBRO,IBUGA3,IERROR)
        DO11314I=1,N
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
          TEMP91(I)=TEMP4(I)
11314   CONTINUE
      ELSEIF(ICASL7.EQ.'SOR4')THEN
        CALL SORT4(TEMP1,TEMP2,TEMP3,TEMP4,N,IWRITE,
     1             TEMP91,TEMP92,TEMP5,TEMP6(1),
     1             TEMP12(1),TEMP12(MAXOBV+1),
     1             TEMP6(MAXOBV+1),TEMP6(2*MAXOBV+1),
     1             TEMP6(3*MAXOBV+1),TEMP6(4*MAXOBV+1),
     1             TEMP7,TEMP8,
     1             TEMP21,TEMP22,TEMP23,
     1             TEMP24,TEMP25,TEMP26,
     1             ISORDI,ISUBRO,IBUGA3,IERROR)
        DO11319I=1,N
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
          TEMP91(I)=TEMP5(I)
          TEMP92(I)=TEMP6(I)
11319   CONTINUE
      ELSEIF(ICASL7.EQ.'2DGR')THEN
        CALL DP2DGR(TEMP1,NS1,TEMP2,NS2,IWRITE,
     1              TEMP91,TEMP92,TEMP21,NITEMX,MAXOBV,
     1              ISUBRO,IBUGA3,IERROR)
        DO14323I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
14323   CONTINUE
        IUPFLG='FULL'
      ELSEIF(ICASL7.EQ.'3DGR')THEN
        CALL DP3DGR(TEMP1,NS1,TEMP2,NS2,TEMP3,NS3,IWRITE,
     1              TEMP8,TEMP9,TEMP91,TEMP21,
     1              NITEMX,MAXOBV,ISUBRO,IBUGA3,IERROR)
        DO14325I=1,NITEMX
          TEMP1(I)=TEMP8(I)
          TEMP2(I)=TEMP9(I)
14325   CONTINUE
        IUPFLG='FULL'
      ELSEIF(ICASL7.EQ.'4DGR')THEN
        CALL DP4DGR(TEMP1,NS1,TEMP2,NS2,TEMP3,NS3,TEMP4,NS4,IWRITE,
     1              TEMP8,TEMP9,TEMP91,TEMP92,TEMP21,
     1              NITEMX,MAXOBV,ISUBRO,IBUGA3,IERROR)
        DO14327I=1,NITEMX
          TEMP1(I)=TEMP8(I)
          TEMP2(I)=TEMP9(I)
14327   CONTINUE
        IUPFLG='FULL'
      ELSEIF(ICASL7.EQ.'RANK')THEN
        CALL RANK(TEMP1,NS1,IWRITE,TEMP1,TEMP5,MAXOBV,IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'DIGI')THEN
        CALL DIGITS(TEMPS(1),IWRITE,TEMP1,NITEMX,
     1              ISUBRO,IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'YFRA' .OR. ICASL7.EQ.'XFRA')THEN
        ICASPL='Y'
        IF(ICASL7.EQ.'XFRA')ICASPL='X'
        CALL DPFRLI(ICASPL,IFRALI,TEMP1,NS1,
     1              GX1MIN,GX1MAX,GY1MIN,GY1MAX,
     1              IX1TSC,IX1TSW,IY1TSC,IY1TSW,
     1              IX1JSW,IY1JSW,
     1              NMJX1T,NMNX1T,IX1NSW,NMJY1T,NMNY1T,IY1NSW,
     1              PX1COO,X1COOR,NX1COO,
     1              PY1COO,Y1COOR,NY1COO,
     1              PX1CMN,X1COMN,NX1CMN,PX1TOL,PX1TOR,
     1              PY1CMN,Y1COMN,NY1CMN,PY1TOB,PY1TOT,
     1              ITICUN,PXMIN,PXMAX,PYMIN,PYMAX,
     1              SCAL91,SCAL92,
     1              IBUGA3,ISUBRO,IERROR)
        ITYP91='SCAL'
        ITYP92='SCAL'
      ELSEIF(ICASL7.EQ.'Y1TS' .OR. ICASL7.EQ.'Y1TD' .OR.
     1       ICASL7.EQ.'Y2TS' .OR. ICASL7.EQ.'Y2TD' .OR.
     1       ICASL7.EQ.'X1TS' .OR. ICASL7.EQ.'X1TD' .OR.
     1       ICASL7.EQ.'X2TS' .OR. ICASL7.EQ.'X2TD')THEN
        IF(ICASL7.EQ.'Y1TS')THEN
          ICASPL='Y1  '
          ICASP2='SCRE'
        ELSEIF(ICASL7.EQ.'Y1TD')THEN
          ICASPL='Y1  '
          ICASP2='DATA'
        ELSEIF(ICASL7.EQ.'Y2TS')THEN
          ICASPL='Y2  '
          ICASP2='SCRE'
        ELSEIF(ICASL7.EQ.'Y2TD')THEN
          ICASPL='Y2  '
          ICASP2='DATA'
        ELSEIF(ICASL7.EQ.'X1TS')THEN
          ICASPL='X1  '
          ICASP2='SCRE'
        ELSEIF(ICASL7.EQ.'X1TD')THEN
          ICASPL='X1  '
          ICASP2='DATA'
        ELSEIF(ICASL7.EQ.'X2TS')THEN
          ICASPL='X2  '
          ICASP2='SCRE'
        ELSEIF(ICASL7.EQ.'X2TD')THEN
          ICASPL='X2  '
          ICASP2='DATA'
        ENDIF
        CALL DPCOOR(ICASPL,ICASP2,TEMP1,NITEMX,
     1              PX1COO,X1COOR,NX1COO,
     1              PX2COO,X2COOR,NX2COO,
     1              PY1COO,Y1COOR,NY1COO,
     1              PY2COO,Y2COOR,NY2COO,
     1              IBUGA3,ISUBRO,IERROR)
        ITYP91='VECT'
        IUPFLG='FULL'
      ELSEIF(ICASL7.EQ.'WSAT' .OR. ICASL7.EQ.'GWSA')THEN
        IF(ICASL7.EQ.'GWSA')THEN
          IFLAG=2
CCCCC     UNC=TEMPS(4)
        ELSE
          IFLAG=1
        ENDIF
        UNC=0.0
        CALL DPWSAT(TEMP1,TEMP2,TEMP3,NS1,IFLAG,UNC,
     1              SCAL91,SCAL92,
     1              ISUBRO,IBUGA3,IERROR)
        ITYP91='SCAL'
        IF(ICASL7.EQ.'WSAT')ITYP92='SCAL'
      ELSEIF(ICASL7.EQ.'PERA')THEN
        CALL PERCRA(TEMP1,NS1,IWRITE,TEMP1,TEMP5,MAXOBV,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'RANI')THEN
        CALL RANKI(TEMP1,NS1,IWRITE,TEMP1,TEMP5,ITEMP1,MAXOBV,
     1            IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'RAN2')THEN
        CALL RANK2(TEMP1,TEMP2,N,IWRITE,TEMP91,
     1             TEMP3,TEMP4,TEMP5,ITEMP1,
     1             MAXOBV,ISUBRO,IBUGA3,IERROR)
        DO11321I=1,N
          TEMP1(I)=TEMP91(I)
11321   CONTINUE
        NITEMX=N
      ELSEIF(ICASL7.EQ.'RAN3')THEN
        CALL RANK3(TEMP1,TEMP2,TEMP3,N,IWRITE,TEMP91,
     1             TEMP4,TEMP5,TEMP12,TEMP6,ITEMP1,
     1             MAXOBV,ISUBRO,IBUGA3,IERROR)
        DO11323I=1,N
          TEMP1(I)=TEMP91(I)
11323   CONTINUE
        NITEMX=N
      ELSEIF(ICASL7.EQ.'CODE')THEN
        CALL CODE(TEMP1,NS1,IWRITE,TEMP1,TEMP5,MAXOBV,IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'CODZ')THEN
        CALL CODEZ(TEMP1,NS1,IWRITE,TEMP1,IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'CODX')THEN
        CALL CODEX(TEMP1,NS1,IWRITE,TEMP1,IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'CDEX')THEN
        CALL CODEDX(TEMP1,NS1,IWRITE,TEMP1,TEMP5,IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'CDE2')THEN
        CALL CODED2(TEMP1,NS1,IWRITE,TEMP1,NOUT,TEMP5,
     1              IBUGA3,ISUBRO,IERROR)
        NITEMX=NOUT
      ELSEIF(ICASL7.EQ.'CDCT')THEN
        IF(NUMVAR.EQ.2)THEN
          CALL CODCT2(TEMP1,TEMP2,NS1,ICCTOF,ICCTG1,IWRITE,
     1                TEMP91,TEMP3,TEMP4,
     1                IBUGA3,ISUBRO,IERROR)
        ELSEIF(NUMVAR.EQ.3)THEN
          CALL CODCT3(TEMP1,TEMP2,TEMP3,NS1,ICCTOF,ICCTG1,ICCTG2,IWRITE,
     1                TEMP91,TEMP4,TEMP5,TEMP6,
     1                IBUGA3,ISUBRO,IERROR)
        ELSEIF(NUMVAR.EQ.4)THEN
          CALL CODCT4(TEMP1,TEMP2,TEMP3,TEMP4,
     1                NS1,ICCTOF,ICCTG1,ICCTG2,ICCTG3,IWRITE,
     1                TEMP91,TEMP5,TEMP6,TEMP7,TEMP8,
     1                IBUGA3,ISUBRO,IERROR)
        ELSEIF(NUMVAR.EQ.5)THEN
          CALL CODCT5(TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,
     1                NS1,ICCTOF,ICCTG1,ICCTG2,ICCTG3,ICCTG4,IWRITE,
     1                TEMP91,TEMP6,TEMP7,TEMP8,
     1                TEMP12(1),TEMP12(MAXOBV+1),
     1                IBUGA3,ISUBRO,IERROR)
        ELSEIF(NUMVAR.EQ.6)THEN
          CALL CODCT6(TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,NS1,
     1                ICCTOF,ICCTG1,ICCTG2,ICCTG3,ICCTG4,ICCTG5,IWRITE,
     1                TEMP91,TEMP7,TEMP8,TEMP21,
     1                TEMP12(1),TEMP12(MAXOBV+1),TEMP22,
     1                IBUGA3,ISUBRO,IERROR)
        ENDIF
        DO11324I=1,NS1
          TEMP1(I)=TEMP91(I)
11324   CONTINUE
        NITEMX=NS1
      ELSEIF(ICASL7.EQ.'DIST')THEN
        CALL DISTIN(TEMP1,NS1,IWRITE,TEMP1,NITEMX,IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'BLOC' .OR. ICASL7.EQ.'FLOC' .OR.
     1       ICASL7.EQ.'FLEN')THEN
        CALL DPFRAG(TEMP1,NS1,IWRITE,TEMP2,NBREAK,TEMP3,TEMP4,NFRAG,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        IF(ICASL7.EQ.'BLOC')THEN
          DO21324I=1,NBREAK
            TEMP1(I)=TEMP2(I)
21324     CONTINUE
          NITEMX=NBREAK
        ELSEIF(ICASL7.EQ.'FLOC')THEN
          NITEMX=NFRAG
          IF(NFRAG.GE.1)THEN
            DO21326I=1,NFRAG
              TEMP1(I)=TEMP3(I)
21326       CONTINUE
          ENDIF
        ELSEIF(ICASL7.EQ.'FLEN')THEN
          NITEMX=NFRAG
          IF(NFRAG.GE.1)THEN
            DO21328I=1,NFRAG
              TEMP1(I)=TEMP4(I)
21328       CONTINUE
          ENDIF
        ENDIF
      ELSEIF(ICASL7.EQ.'SEQD')THEN
        ISTAT='DIFF'
        CALL SEQDIF(TEMP1,NS1,IWRITE,TEMP1,NITEMX,ISTAT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'SEME')THEN
        ISTAT='MEAN'
        CALL SEQDIF(TEMP1,NS1,IWRITE,TEMP1,NITEMX,ISTAT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'SEMN')THEN
        ISTAT='MINI'
        CALL SEQDIF(TEMP1,NS1,IWRITE,TEMP1,NITEMX,ISTAT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'SEMX')THEN
        ISTAT='MAXI'
        CALL SEQDIF(TEMP1,NS1,IWRITE,TEMP1,NITEMX,ISTAT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'SEQS')THEN
        ISTAT='SUM '
        CALL SEQDIF(TEMP1,NS1,IWRITE,TEMP1,NITEMX,ISTAT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'SEQP')THEN
        ISTAT='PROD'
        CALL SEQDIF(TEMP1,NS1,IWRITE,TEMP1,NITEMX,ISTAT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'SEQL')THEN
        ISTAT='LOWE'
        CALL SEQDIF(TEMP1,NS1,IWRITE,TEMP1,NITEMX,ISTAT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'SEQU')THEN
        ISTAT='UPPE'
        CALL SEQDIF(TEMP1,NS1,IWRITE,TEMP1,NITEMX,ISTAT,
     1              IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'GSQD' .OR. ICASL7.EQ.'GSQS' .OR.
     1       ICASL7.EQ.'GSQP' .OR. ICASL7.EQ.'GSQM' .OR.
     1       ICASL7.EQ.'GQMN' .OR. ICASL7.EQ.'GQMX' .OR.
     1       ICASL7.EQ.'GSQL' .OR. ICASL7.EQ.'GSQU')THEN
        ISTAT='DIFF'
        IF(ICASL7.EQ.'GSQS')ISTAT='SUM'
        IF(ICASL7.EQ.'GSQP')ISTAT='PROD'
        IF(ICASL7.EQ.'GSQM')ISTAT='MEAN'
        IF(ICASL7.EQ.'GQMN')ISTAT='MINI'
        IF(ICASL7.EQ.'GQMX')ISTAT='MAXI'
        IF(ICASL7.EQ.'GSQL')ISTAT='LOWE'
        IF(ICASL7.EQ.'GSQU')ISTAT='UPPE'
        CALL SEQDI2(TEMP1,TEMP2,NS1,IWRITE,TEMP91,TEMP3,NITEMX,ISTAT,
     1              TEMP4,TEMP5,
     1              IBUGA3,ISUBRO,IERROR)
        DO11326I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP3(I)
11326   CONTINUE
      ELSEIF(ICASL7.EQ.'IART')THEN
        CALL INTARR(TEMP1,NS1,IWRITE,TEMP1,NITEMX,IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'CUMS')THEN
        CALL CUMSUM(TEMP1,NS1,IWRITE,TEMP3,IBUGA3,IERROR)
        INCX=1
        CALL SCOPY(NS1,TEMP3,INCX,TEMP1,INCX)
      ELSEIF(ICASL7.EQ.'RAEQ')THEN
        CALL RANERR(TEMP1,TEMP2,NS1,IWRITE,TEMP3,MAXOBV,TEMP4,
     1              IBUGA3,ISUBRO,IERROR)
        INCX=1
        CALL SCOPY(NS1,TEMP4,INCX,TEMP1,INCX)
      ELSEIF(ICASL7.EQ.'CMIN')THEN
        CALL CUMMIN(TEMP1,NS1,IWRITE,TEMP3,IBUGA3,ISUBRO,IERROR)
        INCX=1
        CALL SCOPY(NS1,TEMP3,INCX,TEMP1,INCX)
      ELSEIF(ICASL7.EQ.'CMAX')THEN
        CALL CUMMAX(TEMP1,NS1,IWRITE,TEMP3,IBUGA3,ISUBRO,IERROR)
        INCX=1
        CALL SCOPY(NS1,TEMP3,INCX,TEMP1,INCX)
      ELSEIF(ICASL7.EQ.'CUMA')THEN
        CALL CUMAVE(TEMP1,NS1,IWRITE,TEMP1,IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'CUMH')THEN
        CALL CUMHAZ(TEMP1,TEMP2,NS1,IWRITE,TEMP1,TEMP5,MAXOBV,
     1              IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'HAZA')THEN
        CALL HAZARD(TEMP1,TEMP2,NS1,IWRITE,TEMP1,TEMP5,MAXOBV,
     1              IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'TTT ' .OR. ICASL7.EQ.'STTT')THEN
        ICASE='UNSC'
        IF(ICASL7.EQ.'STTT')ICASE='SCAL'
        CALL TTT(TEMP1,TEMP2,NS1,ICASE,IWRITE,TEMP9,NOUT,TEMP3,TEMP4,
     1           MAXOBV,IBUGA3,ISUBRO,IERROR)
        NS1=NOUT
        DO71185I=1,NS1
          TEMP1(I)=TEMP9(I)
71185   CONTINUE
      ELSEIF(ICASL7.EQ.'EXPS')THEN
        IF(TEMPS(2).GT.0.0.AND.TEMPS(2).LT.1.0)THEN
          CALL EXPSMO(TEMP1,TEMP2,TEMPS(2),TEMPS(3),NS1,IWRITE,TEMP1,
     1                IBUGA3,IERROR)
        ELSE
          CALL EXPSM2(TEMP1,TEMP2,TEMPS(2),TEMPS(3),NS1,IWRITE,TEMP3,
     1                IBUGA3,IERROR)
          DO1185I=1,NS1
            TEMP1(I)=TEMP3(I)
 1185     CONTINUE
        ENDIF
C
        IH='ALPH'
        IH2='A   '
        VALUE0=TEMPS(2)
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
        IH='EXPS'
        IH2='MSE '
        VALUE0=TEMPS(3)
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
C
      ELSEIF(ICASL7.EQ.'CUMP')THEN
        CALL CUMPRO(TEMP1,NS1,IWRITE,TEMP1,IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'CUMI')THEN
        CALL CUMINT(TEMP1,TEMP2,NS1,NUMVAR,IWRITE,TEMP1,IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'FLIP')THEN
        CALL REVERS(TEMP1,NS1,IWRITE,TEMP1,TEMP2,IBUGA3,IERROR)
      ELSEIF(ICASL7.EQ.'MTCH')THEN
        CALL MATCH(TEMP1,TEMP3,NS1,TEMP2,NS2,IWRITE,TEMP4,ICASMT,
     1             IBUGA3,ISUBRO,IERROR)
        NITEMX=NS2
        DO11373I=1,NITEMX
          TEMP1(I)=TEMP4(I)
11373   CONTINUE
      ELSEIF(ICASL7.EQ.'MTC2')THEN
        CALL MATCH2(TEMP1,NS1,TEMP2,NS2,TEMP3,IWRITE,
     1              ISUBRO,IBUGA3,IERROR)
        NITEMX=NS2
        DO11374I=1,NITEMX
          TEMP1(I)=TEMP3(I)
11374   CONTINUE
      ELSEIF(ICASL7.EQ.'REPL')THEN
C
C       FOR REPLACE COMMAND, NEED TO INSERT THE CURRENTLY DEFINED
C       VALUES FOR THE FIRST LEFT-HAND SIDE VARIABLE IN TEMP4.
C
        NS1SAV=NS1
        NS1=0
        DO11381I=1,NINEW
          IF(ISUB(I).EQ.0)GOTO11381
          IF(I.GT.NILEF1)GOTO11389
          IJ=MAXN*(ICOLL(1)-1)+I
          NS1=NS1+1
          IF(ICOLL(1).LE.MAXCOL)TEMP4(NS1)=V(IJ)
          IF(ICOLL(1).EQ.MAXCP1)TEMP4(NS1)=PRED(I)
          IF(ICOLL(1).EQ.MAXCP2)TEMP4(NS1)=RES(I)
          IF(ICOLL(1).EQ.MAXCP3)TEMP4(NS1)=YPLOT(I)
          IF(ICOLL(1).EQ.MAXCP4)TEMP4(NS1)=XPLOT(I)
          IF(ICOLL(1).EQ.MAXCP5)TEMP4(NS1)=X2PLOT(I)
          IF(ICOLL(1).EQ.MAXCP6)TEMP4(NS1)=TAGPLO(I)
11381   CONTINUE
11389   CONTINUE
        NS1=NS1SAV
        CALL REPLAC(TEMP1,TEMP3,NS1,TEMP2,NS2,IWRITE,TEMP4,ICASMT,
     1              ISUBRO,IBUGA3,IERROR)
        NITEMX=NS1
        DO11383I=1,NITEMX
          TEMP1(I)=TEMP4(I)
11383   CONTINUE
C
      ELSEIF(ICASL7.EQ.'CONV')THEN
        CALL CONVOL(TEMP1,NS1,TEMP2,NS2,NUMVAR,IWRITE,MAXN,
     1              TEMP91,NITEMX,IBUGA3,IERROR)
        DO11395I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11395   CONTINUE
      ELSEIF(ICASL7.EQ.'DECO')THEN
        CALL DECONV(TEMP1,NS1,TEMP2,NS2,NUMVAR,IWRITE,
     1              TEMP91,NITEMX,IBUGA3,IERROR)
        DO11405I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11405   CONTINUE
      ELSEIF(ICASL7.EQ.'SORC')THEN
        CALL SORTI(TEMP1,NS1,TEMP1,TEMP91)
        IF(ISORDI.EQ.'DESC')THEN
          DO31411I=1,NS1
            TEMP4(I)=TEMP1(I)
31411     CONTINUE
          DO31412I=1,NS1
            II=NS1-I+1
            TEMP1(I)=TEMP4(II)
31412     CONTINUE
        ENDIF
C
        IF(IBUGA3.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11411)(TEMP1(I),TEMP91(I),I=1,NS1)
11411     FORMAT(F10.5,2X,F10.5)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(NUMARG.LE.4)GOTO11418
          DO11412ILOCRI=5,NUMARG
            IH1=IHARG(ILOCRI)
            IH2=IHARG2(ILOCRI)
            IF(IH1.EQ.'SUBS'.AND.IH2.EQ.'ET  ')GOTO11418
            IF(IH1.EQ.'EXCE'.AND.IH2.EQ.'PT  ')GOTO11418
            IF(IH1.EQ.'FOR '.AND.IH2.EQ.'    ')GOTO11418
            IHWUSE='V'
            MESSAG='YES'
            CALL CHECKN(IH1,IH2,IHWUSE,
     1           IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1           ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
            IF(IERROR.EQ.'YES')GOTO19000
            ICOLRI=IVALUE(ILOC)
            NITEMP=IN(ILOC)
C
            CALL DPSUBS(NITEMP,ILOCS,NSTEMP,IBUGQ,IERROR)
C
            NR=0
            DO11413I=1,NITEMP
              IF(ISUB(I).EQ.0)GOTO11413
              NR=NR+1
              IJ=MAXN*(ICOLRI-1)+NR
              IF(ICOLRI.LE.MAXCOL)TEMP2(NR)=V(IJ)
              IF(ICOLRI.EQ.MAXCP1)TEMP2(NR)=PRED(I)
              IF(ICOLRI.EQ.MAXCP2)TEMP2(NR)=RES(I)
              IF(ICOLRI.EQ.MAXCP3)TEMP2(NR)=YPLOT(I)
              IF(ICOLRI.EQ.MAXCP4)TEMP2(NR)=XPLOT(I)
              IF(ICOLRI.EQ.MAXCP5)TEMP2(NR)=X2PLOT(I)
              IF(ICOLRI.EQ.MAXCP6)TEMP2(NR)=TAGPLO(I)
11413       CONTINUE
C
            DO11414I=1,NR
              J=INT(TEMP91(I)+0.5)
              TEMP3(I)=TEMP2(J)
11414       CONTINUE
            IF(ISORDI.EQ.'DESC')THEN
              DO11416I=1,NR
                TEMP4(I)=TEMP3(I)
11416         CONTINUE
              DO11419I=1,NR
                II=NR-I+1
                TEMP3(I)=TEMP4(II)
11419         CONTINUE
            ENDIF
C
            J=0
            DO11415I=1,NITEMP
              IF(ISUB(I).EQ.0)GOTO11415
              J=J+1
              IJ=MAXN*(ICOLRI-1)+I
              IF(ICOLRI.LE.MAXCOL)V(IJ)=TEMP3(J)
              IF(ICOLRI.EQ.MAXCP1)PRED(I)=TEMP3(J)
              IF(ICOLRI.EQ.MAXCP2)RES(I)=TEMP3(J)
              IF(ICOLRI.EQ.MAXCP3)YPLOT(I)=TEMP3(J)
              IF(ICOLRI.EQ.MAXCP4)XPLOT(I)=TEMP3(J)
              IF(ICOLRI.EQ.MAXCP5)X2PLOT(I)=TEMP3(J)
              IF(ICOLRI.EQ.MAXCP6)TAGPLO(I)=TEMP3(J)
11415       CONTINUE
11412     CONTINUE
11418   CONTINUE
C
CCCCC THE FOLLOWING STACK SECTION ADDED MAY 2003
CCCCC FEBRUARY 2005: ADD SUPPORT FOR REPLICATED STACK.  IN THIS
CCCCC                CASE, LAST VARIABLE IS A REPLICATION NUMBER
CCCCC                THAT WILL BE DUPLICATED FOR EACH GROUP.
C
      ELSEIF(ICASL7.EQ.'STAC' .OR. ICASL7.EQ.'RSTA')THEN
        IF(NUMARG.LE.4)GOTO91499
        IF(ICASL7.EQ.'RSTA' .AND. NUMARG.LE.6)GOTO91499
C
        ICNT=0
        IVARCN=0
        NLAST=NUMARG
        NSTRT=5
        IF(ICASL7.EQ.'RSTA')NSTRT=7
        IF(ICASL7.EQ.'RSTA')THEN
          NLAST=NUMARG-1
          DO91403II=NSTRT,NUMARG
            IH1=IHARG(II)
            IH2=IHARG2(II)
            IF(IH1.EQ.'SUBS'.AND.IH2.EQ.'ET  ')THEN
              NLAST=II-1
              GOTO91407
            ELSEIF(IH1.EQ.'EXCE'.AND.IH2.EQ.'PT  ')THEN
              NLAST=II-1
              GOTO91407
            ELSEIF(IH1.EQ.'FOR '.AND.IH2.EQ.'    ')THEN
              NLAST=II-1
              GOTO91407
            ENDIF
91403     CONTINUE
91407     CONTINUE
          NREPL=NLAST+1
        ENDIF
C
        DO91412ILOCRI=NSTRT,NLAST
C
          IF(ICASL7.EQ.'RSTA')THEN
            IHREPL=IHARG(NREPL)
            IHREP2=IHARG2(NREPL)
            IF(IHREPL.EQ.'SUBS'.AND.IHREP2.EQ.'ET  ')GOTO91499
            IF(IHREPL.EQ.'EXCE'.AND.IHREP2.EQ.'PT  ')GOTO91499
            IF(IHREPL.EQ.'FOR '.AND.IHREP2.EQ.'    ')GOTO91499
            IHWUSE='V'
            MESSAG='YES'
            CALL CHECKN(IHREPL,IHREP2,IHWUSE,
     1                  IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,
     1                  NUMNAM,MAXNAM,
     1                  ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
            IF(IERROR.EQ.'YES')GOTO19000
            ICOLRP=IVALUE(ILOC)
            NIREPL=IN(ILOC)
          ENDIF
C
          IHREPL=IHARG(ILOCRI)
          IHREP2=IHARG2(ILOCRI)
          IF(IHREPL.EQ.'SUBS'.AND.IHREP2.EQ.'ET  ')GOTO91499
          IF(IHREPL.EQ.'EXCE'.AND.IHREP2.EQ.'PT  ')GOTO91499
          IF(IHREPL.EQ.'FOR '.AND.IHREP2.EQ.'    ')GOTO91499
          IHWUSE='V'
          MESSAG='YES'
          CALL CHECKN(IHREPL,IHREP2,IHWUSE,
     1         IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1         ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
          IF(IERROR.EQ.'YES')GOTO19000
          ICOLRI=IVALUE(ILOC)
          NITEMP=IN(ILOC)
          IVARCN=IVARCN+1
C
          CALL DPSUBS(NITEMP,ILOCS,NSTEMP,IBUGQ,IERROR)
C
          NR=0
          DO91413I=1,NITEMP
            IF(ISUB(I).EQ.0)GOTO91413
            NR=NR+1
            IJ=MAXN*(ICOLRI-1)+NR
            IF(ICOLRI.LE.MAXCOL)ATEMP=V(IJ)
            IF(ICOLRI.EQ.MAXCP1)ATEMP=PRED(I)
            IF(ICOLRI.EQ.MAXCP2)ATEMP=RES(I)
            IF(ICOLRI.EQ.MAXCP3)ATEMP=YPLOT(I)
            IF(ICOLRI.EQ.MAXCP4)ATEMP=XPLOT(I)
            IF(ICOLRI.EQ.MAXCP5)ATEMP=X2PLOT(I)
            IF(ICOLRI.EQ.MAXCP6)ATEMP=TAGPLO(I)
C
            IF(ICASL7.EQ.'RSTA')THEN
              IJ=MAXN*(ICOLRP-1)+NR
              IF(ICOLRP.LE.MAXCOL)ATEMP2=V(IJ)
              IF(ICOLRP.EQ.MAXCP1)ATEMP2=PRED(I)
              IF(ICOLRP.EQ.MAXCP2)ATEMP2=RES(I)
              IF(ICOLRP.EQ.MAXCP3)ATEMP2=YPLOT(I)
              IF(ICOLRP.EQ.MAXCP4)ATEMP2=XPLOT(I)
              IF(ICOLRP.EQ.MAXCP5)ATEMP2=X2PLOT(I)
              IF(ICOLRP.EQ.MAXCP6)ATEMP2=TAGPLO(I)
            ENDIF
C
            ICNT=ICNT+1
            IF(ICNT.GT.MAXOBV)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,91417)
91417         FORMAT('****** WARNING FROM STACK COMMAND--')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,91419)
91419         FORMAT('       MAXIMUM NUMBER OF ROWS, ',I8,
     1               ' HAS BEEN EXCEEDED.')
              CALL DPWRST('XXX','BUG ')
              GOTO91418
            ENDIF
C
            TEMP1(ICNT)=ATEMP
            TEMP2(ICNT)=REAL(IVARCN)
            TEMP91(ICNT)=ATEMP2
91413     CONTINUE
C
          J=0
          DO91415I=1,NITEMP
            IF(ISUB(I).EQ.0)GOTO91415
            J=J+1
91415     CONTINUE
91412   CONTINUE
91418   CONTINUE
C
        NITEMX=ICNT
        IFOUND='YES'
        GOTO11900
C
91499   CONTINUE
        IERROR='YES'
        GOTO9000
C
C     FOR COMBINE COMMAND, ADD LIST OF VARIABLES/PARAMETERS TO
C     CREATE A SINGLE OUTPUT VECTOR.
C
      ELSEIF(ICASL7.EQ.'COMB')THEN
C
        ICNT=0
        IVARCN=0
        NLAST=NUMARG
        NSTRT=4
C
        DO91712ILOCRI=NSTRT,NLAST
C
          IHREPL=IHARG(ILOCRI)
          IHREP2=IHARG2(ILOCRI)
          ATEMPP=ARG(ILOCRI)
          IF(IHREPL.EQ.'SUBS'.AND.IHREP2.EQ.'ET  ')GOTO91799
          IF(IHREPL.EQ.'EXCE'.AND.IHREP2.EQ.'PT  ')GOTO91799
          IF(IHREPL.EQ.'FOR '.AND.IHREP2.EQ.'    ')GOTO91799
C
C         CHECK FOR MATRIX OR STRING (THESE NOT CURRENTLY
C         SUPPORTED FOR COMBINE COMMAND)
C
          IHWUSE='M'
          MESSAG='NO'
          CALL CHECKN(IHREPL,IHREP2,IHWUSE,
     1         IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1         ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
          IF(IERROR.EQ.'NO')THEN
            WRITE(ICOUT,91731)
91731       FORMAT('****** ERROR FROM COMBINE COMMAND--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,91733)IHREPL,IHREP2
91733       FORMAT('       MATRICES ARE NOT ALLOWED.  ',A4,A4,
     1             'IS A MATRIX.')
            CALL DPWRST('XXX','BUG ')
            IFOUND='YES'
            IERROR='YES'
            GOTO8000
          ENDIF
C
          IHWUSE='F'
          MESSAG='NO'
          CALL CHECKN(IHREPL,IHREP2,IHWUSE,
     1         IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1         ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
          IF(IERROR.EQ.'NO')THEN
            WRITE(ICOUT,91731)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,91735)IHREPL,IHREP2
91735       FORMAT('       FUNCTIONS (STRINGS) ARE NOT ALLOWED.  ',
     1             A4,A4,'IS A FUNCTION OR A STRING.')
            CALL DPWRST('XXX','BUG ')
            IFOUND='YES'
            IERROR='YES'
            GOTO8000
          ENDIF
C
C         CHECK FOR PARAMETER
C
          IHWUSE='P'
          MESSAG='NO'
          CALL CHECKN(IHREPL,IHREP2,IHWUSE,
     1         IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1         ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
          IF(IERROR.EQ.'NO')THEN
            ICNT=ICNT+1
            IF(ICNT.GT.MAXOBV)GOTO91716
            TEMP1(ICNT)=VALUE(ILOC)
            GOTO91712
          ENDIF
C
C         CHECK FOR VARIABLE - IF NOT PARAMETER, VARIABLE, MATRIX,
C                              OR STRING/FUNCTION, ASSUME ARGUMENT
C                              IS A NUMERIC VALUE.
C
          IHWUSE='V'
          MESSAG='NO'
          CALL CHECKN(IHREPL,IHREP2,IHWUSE,
     1         IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1         ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
          IF(IERROR.EQ.'YES')THEN
            ICNT=ICNT+1
            IF(ICNT.GT.MAXOBV)GOTO91716
            TEMP1(ICNT)=ATEMPP
            GOTO91712
          ENDIF
C
          ICOLRI=IVALUE(ILOC)
          NITEMP=IN(ILOC)
C
          CALL DPSUBS(NITEMP,ILOCS,NSTEMP,IBUGQ,IERROR)
C
          NR=0
          DO91713I=1,NITEMP
            IF(ISUB(I).EQ.0)GOTO91713
            NR=NR+1
            IJ=MAXN*(ICOLRI-1)+NR
            IF(ICOLRI.LE.MAXCOL)ATEMP=V(IJ)
            IF(ICOLRI.EQ.MAXCP1)ATEMP=PRED(I)
            IF(ICOLRI.EQ.MAXCP2)ATEMP=RES(I)
            IF(ICOLRI.EQ.MAXCP3)ATEMP=YPLOT(I)
            IF(ICOLRI.EQ.MAXCP4)ATEMP=XPLOT(I)
            IF(ICOLRI.EQ.MAXCP5)ATEMP=X2PLOT(I)
            IF(ICOLRI.EQ.MAXCP6)ATEMP=TAGPLO(I)
C
            ICNT=ICNT+1
            IF(ICNT.GT.MAXOBV)GOTO91716
C
            TEMP1(ICNT)=ATEMP
91713     CONTINUE
C
91712   CONTINUE
C
        NITEMX=ICNT
        IFOUND='YES'
        IERROR='NO'
        GOTO11900
C
91799   CONTINUE
        IERROR='YES'
        GOTO9000
C
91716   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,91717)
91717   FORMAT('****** WARNING FROM COMBINE COMMAND--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,91719)
91719   FORMAT('       MAXIMUM NUMBER OF ROWS, ',I8,
     1         ' HAS BEEN EXCEEDED.')
        CALL DPWRST('XXX','BUG ')
        NITEMX=ICNT
        IFOUND='YES'
        GOTO11900
C
      ELSEIF(ICASL7.EQ.'FREQ')THEN
        CALL FREQUE(TEMP1,NS1,TEMP2,NS2,NUMVAR,IWRITE,
     1              TEMP91,NITEMX,IBUGA3,IERROR)
        DO11425I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11425   CONTINUE
      ELSEIF(ICASL7.EQ.'JITT')THEN
        DELTA=TEMPS(2)
        CALL JITTER(TEMP1,NS1,DELTA,
     1              TEMP91,NITEMX,ISEED,IBUGA3,IERROR)
        DO11428I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11428   CONTINUE
      ELSEIF(ICASL7.EQ.'COPV')THEN
C
C       NOTE 7/16/2008:
C       FOR VARIABLE COPY, COPY OVER CONTENTS OF VARIABLE
C       ON RIGHT HAND SIDE.  THE SUBSET/EXCEPT/FOR WILL BE
C       HANDLED WHEN WE UPDATE THE LEFT HAND SIDE VARIABLE.
C       DO THIS SO THAT "ROW INDEX" MAINTAINED ON SUBSET
C       CLAUSES.
C
C       MARCH 2009: PUT IN A CHECK FOR AN EMPTY SUBSET.
C                   IN THIS CASE, WE WANT TO DO NOTHING.
C
        DO11426I=1,NINEW
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)TEMP1(I)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)TEMP1(I)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)TEMP1(I)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)TEMP1(I)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)TEMP1(I)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)TEMP1(I)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)TEMP1(I)=TAGPLO(I)
11426   CONTINUE
        NITEMX=NINEW
        NSX=0
        DO11427I=1,NITEMX
          IF(ISUB(I).EQ.1)NSX=NSX+1
11427   CONTINUE
        IF(NSX.EQ.0)THEN
          IFOUND='YES'
          IERROR='NO'
          GOTO19000
        END IF
      ELSEIF(ICASL7.EQ.'AGCO')THEN
C
C       AUGUST 2008: ALLOW P AND N TO BE EITHER VECTORS OR
C                    SCALARS.  NOTE THAT ALPHA WILL ALWAYS
C                    BE A SCALAR.
C
        ALPHAT=TEMPS(3)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA')THEN
          PTEMP=TEMPS(1)
          NTEMP=INT(TEMPS(2)+0.5)
          CALL DPAGCO(PTEMP,NTEMP,ALPHAT,IWRITE,
     1                ALOWLM,AUPPLM,IBUGA3,IERROR)
          SCAL91=ALOWLM
          ITYP91='SCAL'
          SCAL92=AUPPLM
          ITYP92='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI')THEN
          DO11431I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              PTEMP=TEMP1(I)
            ELSE
              PTEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              NTEMP=INT(TEMP2(I)+0.5)
            ELSE
              NTEMP=INT(TEMPS(2)+0.5)
            ENDIF
            CALL DPAGCO(PTEMP,NTEMP,ALPHAT,IWRITE,
     1                  ALOWLM,AUPPLM,IBUGA3,IERROR)
            TEMP1(I)=ALOWLM
            TEMP2(I)=AUPPLM
11431     CONTINUE
          ITYP91='VARI'
          ITYP92='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'EBLL')THEN
C
C       AUGUST 2008: ALLOW P AND N TO BE EITHER VECTORS OR
C                    SCALARS.  NOTE THAT ALPHA WILL ALWAYS
C                    BE A SCALAR.
C
        ALPHAT=TEMPS(3)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA')THEN
          PTEMP=TEMPS(1)
          NTEMP=INT(TEMPS(2)+0.5)
          CALL DPEBLL(PTEMP,NTEMP,ALPHAT,IWRITE,
     1                ALOWLM,'TWOS',IBUGA3,IERROR)
          SCAL91=ALOWLM
          ITYP91='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI')THEN
          DO11432I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              PTEMP=TEMP1(I)
            ELSE
              PTEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              NTEMP=INT(TEMP2(I)+0.5)
            ELSE
              NTEMP=INT(TEMPS(2)+0.5)
            ENDIF
            CALL DPEBLL(PTEMP,NTEMP,ALPHAT,IWRITE,
     1                  ALOWLM,'TWOS',IBUGA3,IERROR)
            TEMP1(I)=ALOWLM
11432     CONTINUE
          ITYP91='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'EBUL')THEN
C
C       AUGUST 2008: ALLOW P AND N TO BE EITHER VECTORS OR
C                    SCALARS.  NOTE THAT ALPHA WILL ALWAYS
C                    BE A SCALAR.
C
        ALPHAT=TEMPS(3)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA')THEN
          PTEMP=TEMPS(1)
          NTEMP=INT(TEMPS(2)+0.5)
          CALL DPEBUL(PTEMP,NTEMP,ALPHAT,IWRITE,
     1                AUPPLM,'TWOS',IBUGA3,IERROR)
          SCAL91=AUPPLM
          ITYP91='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI')THEN
          DO11433I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              PTEMP=TEMP1(I)
            ELSE
              PTEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              NTEMP=INT(TEMP2(I)+0.5)
            ELSE
              NTEMP=INT(TEMPS(2)+0.5)
            ENDIF
            CALL DPEBUL(PTEMP,NTEMP,ALPHAT,IWRITE,
     1                  AUPPLM,'TWOS',IBUGA3,IERROR)
            TEMP1(I)=AUPPLM
11433     CONTINUE
          ITYP91='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'EBCL')THEN
C
C       ALLOW P AND N TO BE EITHER VECTORS OR SCALARS.  NOTE THAT
C       ALPHA WILL ALWAYS BE A SCALAR.
C
        ALPHAT=TEMPS(3)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA')THEN
          PTEMP=TEMPS(1)
          NTEMP=INT(TEMPS(2)+0.5)
          CALL DPEBLL(PTEMP,NTEMP,P2,IWRITE,
     1                ALOWLM,'TWOS',IBUGA3,IERROR)
          CALL DPEBUL(PTEMP,NTEMP,P2,IWRITE,
     1                AUPPLM,'TWOS',IBUGA3,IERROR)
          SCAL91=ALOWLM
          ITYP91='SCAL'
          SCAL92=AUPPLM
          ITYP92='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI')THEN
          DO11443I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              PTEMP=TEMP1(I)
            ELSE
              PTEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              NTEMP=INT(TEMP2(I)+0.5)
            ELSE
              NTEMP=INT(TEMPS(2)+0.5)
            ENDIF
            CALL DPEBLL(PTEMP,NTEMP,ALPHAT,IWRITE,
     1                  ALOWLM,'TWOS',IBUGA3,IERROR)
            TEMP1(I)=ALOWLM
            CALL DPEBUL(PTEMP,NTEMP,ALPHAT,IWRITE,
     1                  AUPPLM,'TWOS',IBUGA3,IERROR)
            TEMP2(I)=AUPPLM
11443     CONTINUE
          ITYP91='VARI'
          ITYP92='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'DPCL')THEN
C
        ALPHAT=TEMPS(5)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA' .AND.
     1     ITYPA(3).EQ.'PARA' .AND. ITYPA(4).EQ.'PARA')THEN
          P1TEMP=TEMPS(1)
          N1TEMP=INT(TEMPS(2)+0.5)
          P2TEMP=TEMPS(3)
          N2TEMP=INT(TEMPS(4)+0.5)
          CALL DPDPCL(P1TEMP,N1TEMP,P2TEMP,N2TEMP,ALPHAT,IWRITE,
     1                PDIFF,ALOWLM,AUPPLM,IBUGA3,IERROR)
          SCAL91=PDIFF
          ITYP91='SCAL'
          SCAL92=ALOWLM
          ITYP92='SCAL'
          SCAL93=AUPPLM
          ITYP93='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI' .OR.
     1         ITYPA(3).EQ.'VARI' .OR. ITYPA(4).EQ.'VARI')THEN
          DO11436I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              P1TEMP=TEMP1(I)
            ELSE
              P1TEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              N1TEMP=INT(TEMP2(I)+0.5)
            ELSE
              N1TEMP=INT(TEMPS(2)+0.5)
            ENDIF
            IF(ITYPA(3).EQ.'VARI')THEN
              P2TEMP=TEMP3(I)
            ELSE
              P2TEMP=TEMPS(3)
            ENDIF
            IF(ITYPA(4).EQ.'VARI')THEN
              N2TEMP=INT(TEMP4(I)+0.5)
            ELSE
              N2TEMP=INT(TEMPS(4)+0.5)
            ENDIF
            CALL DPDPCL(P1TEMP,N1TEMP,P2TEMP,N2TEMP,ALPHAT,IWRITE,
     1                  PDIFF,ALOWLM,AUPPLM,IBUGA3,IERROR)
            TEMP1(I)=PDIFF
            TEMP2(I)=ALOWLM
            TEMP91(I)=AUPPLM
11436     CONTINUE
          ITYP91='VARI'
          ITYP92='VARI'
          ITYP93='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'DPTS' .OR. ICASL7.EQ.'DPLT' .OR.
     1       ICASL7.EQ.'DPUT')THEN
C
        IF(ICASL7.EQ.'DPTS')THEN
          ICASAN='BPTS'
        ELSEIF(ICASL7.EQ.'DPLT')THEN
          ICASAN='BPLT'
        ELSEIF(ICASL7.EQ.'DPUT')THEN
          ICASAN='BPUT'
        ENDIF
C
        ALPHAT=TEMPS(5)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA' .AND.
     1     ITYPA(3).EQ.'PARA' .AND. ITYPA(4).EQ.'PARA')THEN
          P1TEMP=TEMPS(1)
          N1TEMP=INT(TEMPS(2)+0.5)
          P2TEMP=TEMPS(3)
          N2TEMP=INT(TEMPS(4)+0.5)
          CALL DPBNPV(P1TEMP,N1TEMP,P2TEMP,N2TEMP,ALPHAT,ICASAN,IWRITE,
     1                PVAL,IBUGA3,IERROR)
          SCAL91=PVAL
          ITYP91='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI' .OR.
     1         ITYPA(3).EQ.'VARI' .OR. ITYPA(4).EQ.'VARI')THEN
          DO11437I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              P1TEMP=TEMP1(I)
            ELSE
              P1TEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              N1TEMP=INT(TEMP2(I)+0.5)
            ELSE
              N1TEMP=INT(TEMPS(2)+0.5)
            ENDIF
            IF(ITYPA(3).EQ.'VARI')THEN
              P2TEMP=TEMP3(I)
            ELSE
              P2TEMP=TEMPS(3)
            ENDIF
            IF(ITYPA(4).EQ.'VARI')THEN
              N2TEMP=INT(TEMP4(I)+0.5)
            ELSE
              N2TEMP=INT(TEMPS(4)+0.5)
            ENDIF
            CALL DPBNPV(P1TEMP,N1TEMP,P2TEMP,N2TEMP,ALPHAT,
     1                  ICASAN,IWRITE,
     1                  PVAL,IBUGA3,IERROR)
            TEMP1(I)=PVAL
11437     CONTINUE
          ITYP91='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'R1TS' .OR. ICASL7.EQ.'R1LT' .OR.
     1       ICASL7.EQ.'R1UT')THEN
C
        IF(ICASL7.EQ.'R1TS')THEN
          ICASAN='R1TS'
        ELSEIF(ICASL7.EQ.'R1LT')THEN
          ICASAN='R1LT'
        ELSEIF(ICASL7.EQ.'R1UT')THEN
          ICASAN='R1UT'
        ENDIF
C
        ALPHAT=TEMPS(7)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA' .AND.
     1     ITYPA(3).EQ.'PARA' .AND. ITYPA(4).EQ.'PARA'.AND.
     1     ITYPA(5).EQ.'PARA' .AND. ITYPA(6).EQ.'PARA')THEN
          P1TEMP=TEMPS(1)
          N1TEMP=INT(TEMPS(2)+0.5)
          P2TEMP=TEMPS(3)
          N2TEMP=INT(TEMPS(4)+0.5)
          P3TEMP=TEMPS(5)
          N3TEMP=INT(TEMPS(6)+0.5)
          CALL DPRUH1(P1TEMP,N1TEMP,P2TEMP,N2TEMP,P3TEMP,N3TEMP,
     1                ALPHAT,ICASAN,IWRITE,
     1                PVAL,ALOWLM,AUPPLM,IBUGA3,ISUBRO,IERROR)
          SCAL91=PVAL
          ITYP91='SCAL'
          SCAL92=ALOWLM
          ITYP92='SCAL'
          SCAL93=AUPPLM
          ITYP93='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI' .OR.
     1         ITYPA(3).EQ.'VARI' .OR. ITYPA(4).EQ.'VARI' .OR.
     1         ITYPA(5).EQ.'VARI' .OR. ITYPA(6).EQ.'VARI')THEN
          DO11441I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              P1TEMP=TEMP1(I)
            ELSE
              P1TEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              N1TEMP=INT(TEMP2(I)+0.5)
            ELSE
              N1TEMP=INT(TEMPS(2)+0.5)
            ENDIF
            IF(ITYPA(3).EQ.'VARI')THEN
              P2TEMP=TEMP3(I)
            ELSE
              P2TEMP=TEMPS(3)
            ENDIF
            IF(ITYPA(4).EQ.'VARI')THEN
              N2TEMP=INT(TEMP4(I)+0.5)
            ELSE
              N2TEMP=INT(TEMPS(4)+0.5)
            ENDIF
            IF(ITYPA(5).EQ.'VARI')THEN
              P3TEMP=TEMP5(I)
            ELSE
              P3TEMP=TEMPS(5)
            ENDIF
            IF(ITYPA(6).EQ.'VARI')THEN
              N3TEMP=INT(TEMP6(I)+0.5)
            ELSE
              N3TEMP=INT(TEMPS(6)+0.5)
            ENDIF
            CALL DPRUH1(P1TEMP,N1TEMP,P2TEMP,N2TEMP,P3TEMP,N3TEMP,
     1                  ALPHAT,ICASAN,IWRITE,
     1                  PVAL,ALOWLM,AUPPLM,IBUGA3,ISUBRO,IERROR)
            TEMP1(I)=PVAL
            TEMP2(I)=ALOWLM
            TEMP91(I)=AUPPLM
11441     CONTINUE
          ITYP91='VARI'
          ITYP92='VARI'
          ITYP93='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'R2TS' .OR. ICASL7.EQ.'R2LT' .OR.
     1       ICASL7.EQ.'R2UT')THEN
C
        IF(ICASL7.EQ.'R2TS')THEN
          ICASAN='R2TS'
        ELSEIF(ICASL7.EQ.'R2LT')THEN
          ICASAN='R2LT'
        ELSEIF(ICASL7.EQ.'R2UT')THEN
          ICASAN='R2UT'
        ENDIF
C
        ALPHAT=TEMPS(5)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA' .AND.
     1     ITYPA(3).EQ.'PARA' .AND. ITYPA(4).EQ.'PARA')THEN
          P1TEMP=TEMPS(1)
          N1TEMP=INT(TEMPS(2)+0.5)
          P2TEMP=TEMPS(3)
          N2TEMP=INT(TEMPS(4)+0.5)
          CALL DPRUH2(P1TEMP,N1TEMP,P2TEMP,N2TEMP,
     1                ALPHAT,ICASAN,IWRITE,
     1                PVAL,ALOWLM,AUPPLM,IBUGA3,IERROR)
          SCAL91=PVAL
          ITYP91='SCAL'
          SCAL92=ALOWLM
          ITYP92='SCAL'
          SCAL93=AUPPLM
          ITYP93='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI' .OR.
     1         ITYPA(3).EQ.'VARI' .OR. ITYPA(4).EQ.'VARI')THEN
          DO11446I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              P1TEMP=TEMP1(I)
            ELSE
              P1TEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              N1TEMP=INT(TEMP2(I)+0.5)
            ELSE
              N1TEMP=INT(TEMPS(2)+0.5)
            ENDIF
            IF(ITYPA(3).EQ.'VARI')THEN
              P2TEMP=TEMP3(I)
            ELSE
              P2TEMP=TEMPS(3)
            ENDIF
            IF(ITYPA(4).EQ.'VARI')THEN
              N2TEMP=INT(TEMP4(I)+0.5)
            ELSE
              N2TEMP=INT(TEMPS(4)+0.5)
            ENDIF
            CALL DPRUH2(P1TEMP,N1TEMP,P2TEMP,N2TEMP,
     1                  ALPHAT,ICASAN,IWRITE,
     1                  PVAL,ALOWLM,AUPPLM,IBUGA3,IERROR)
            TEMP1(I)=PVAL
            TEMP2(I)=ALOWLM
            TEMP91(I)=AUPPLM
11446     CONTINUE
          ITYP91='VARI'
          ITYP92='VARI'
          ITYP93='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'R3TS' .OR. ICASL7.EQ.'R3LT' .OR.
     1       ICASL7.EQ.'R3UT')THEN
C
        IF(ICASL7.EQ.'R3TS')THEN
          ICASAN='R3TS'
        ELSEIF(ICASL7.EQ.'R3LT')THEN
          ICASAN='R3LT'
        ELSEIF(ICASL7.EQ.'R3UT')THEN
          ICASAN='R3UT'
        ENDIF
C
        ALPHAT=TEMPS(9)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA' .AND.
     1     ITYPA(3).EQ.'PARA' .AND. ITYPA(4).EQ.'PARA'.AND.
     1     ITYPA(5).EQ.'PARA' .AND. ITYPA(6).EQ.'PARA' .AND.
     1     ITYPA(7).EQ.'PARA' .AND. ITYPA(8).EQ.'PARA')THEN
          P1TEMP=TEMPS(1)
          N1TEMP=INT(TEMPS(2)+0.5)
          P2TEMP=TEMPS(3)
          N2TEMP=INT(TEMPS(4)+0.5)
          P3TEMP=TEMPS(5)
          N3TEMP=INT(TEMPS(6)+0.5)
          P4TEMP=TEMPS(7)
          N4TEMP=INT(TEMPS(8)+0.5)
          CALL DPRUH3(P1TEMP,N1TEMP,P2TEMP,N2TEMP,P3TEMP,N3TEMP,
     1                P4TEMP,N4TEMP,
     1                ALPHAT,ICASAN,IWRITE,
     1                PVAL,ALOWLM,AUPPLM,IBUGA3,ISUBRO,IERROR)
          SCAL91=PVAL
          ITYP91='SCAL'
          SCAL92=ALOWLM
          ITYP92='SCAL'
          SCAL93=AUPPLM
          ITYP93='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI' .OR.
     1         ITYPA(3).EQ.'VARI' .OR. ITYPA(4).EQ.'VARI' .OR.
     1         ITYPA(5).EQ.'VARI' .OR. ITYPA(6).EQ.'VARI' .OR.
     1         ITYPA(7).EQ.'VARI' .OR. ITYPA(8).EQ.'VARI')THEN
          DO11641I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              P1TEMP=TEMP1(I)
            ELSE
              P1TEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              N1TEMP=INT(TEMP2(I)+0.5)
            ELSE
              N1TEMP=INT(TEMPS(2)+0.5)
            ENDIF
            IF(ITYPA(3).EQ.'VARI')THEN
              P2TEMP=TEMP3(I)
            ELSE
              P2TEMP=TEMPS(3)
            ENDIF
            IF(ITYPA(4).EQ.'VARI')THEN
              N2TEMP=INT(TEMP4(I)+0.5)
            ELSE
              N2TEMP=INT(TEMPS(4)+0.5)
            ENDIF
            IF(ITYPA(5).EQ.'VARI')THEN
              P3TEMP=TEMP5(I)
            ELSE
              P3TEMP=TEMPS(5)
            ENDIF
            IF(ITYPA(6).EQ.'VARI')THEN
              N3TEMP=INT(TEMP6(I)+0.5)
            ELSE
              N3TEMP=INT(TEMPS(6)+0.5)
            ENDIF
            IF(ITYPA(7).EQ.'VARI')THEN
              P4TEMP=TEMP7(I)
            ELSE
              P4TEMP=TEMPS(7)
            ENDIF
            IF(ITYPA(8).EQ.'VARI')THEN
              N4TEMP=INT(TEMP8(I)+0.5)
            ELSE
              N4TEMP=INT(TEMPS(8)+0.5)
            ENDIF
            CALL DPRUH3(P1TEMP,N1TEMP,P2TEMP,N2TEMP,P3TEMP,N3TEMP,
     1                  P4TEMP,N4TEMP,
     1                  ALPHAT,ICASAN,IWRITE,
     1                  PVAL,ALOWLM,AUPPLM,IBUGA3,ISUBRO,IERROR)
            TEMP1(I)=PVAL
            TEMP2(I)=ALOWLM
            TEMP91(I)=AUPPLM
11641     CONTINUE
          ITYP91='VARI'
          ITYP92='VARI'
          ITYP93='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'BPSE')THEN
C
        ICASAN='BPSE'
        ALPHAT=TEMPS(5)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA' .AND.
     1     ITYPA(3).EQ.'PARA' .AND. ITYPA(4).EQ.'PARA')THEN
          P1TEMP=TEMPS(1)
          N1TEMP=INT(TEMPS(2)+0.5)
          P2TEMP=TEMPS(3)
          N2TEMP=INT(TEMPS(4)+0.5)
          CALL DPBPSE(P1TEMP,N1TEMP,P2TEMP,N2TEMP,
     1                ALPHAT,ICASAN,IWRITE,
     1                STATVA,STATSE,ALOWLM,AUPPLM,IBUGA3,ISUBRO,IERROR)
          SCAL91=STATSE
          ITYP91='SCAL'
          SCAL92=ALOWLM
          ITYP92='SCAL'
          SCAL93=AUPPLM
          ITYP93='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI' .OR.
     1         ITYPA(3).EQ.'VARI' .OR. ITYPA(4).EQ.'VARI')THEN
          DO11651I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              P1TEMP=TEMP1(I)
            ELSE
              P1TEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              N1TEMP=INT(TEMP2(I)+0.5)
            ELSE
              N1TEMP=INT(TEMPS(2)+0.5)
            ENDIF
            IF(ITYPA(3).EQ.'VARI')THEN
              P2TEMP=TEMP3(I)
            ELSE
              P2TEMP=TEMPS(3)
            ENDIF
            IF(ITYPA(4).EQ.'VARI')THEN
              N2TEMP=INT(TEMP4(I)+0.5)
            ELSE
              N2TEMP=INT(TEMPS(4)+0.5)
            ENDIF
            CALL DPBPSE(P1TEMP,N1TEMP,P2TEMP,N2TEMP,
     1                  ALPHAT,ICASAN,IWRITE,
     1                  STATVA,STATSE,ALOWLM,AUPPLM,
     1                  IBUGA3,ISUBRO,IERROR)
            TEMP1(I)=STATSE
            TEMP2(I)=ALOWLM
            TEMP91(I)=AUPPLM
11651     CONTINUE
          ITYP91='VARI'
          ITYP92='VARI'
          ITYP93='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'BRAT')THEN
C
        ALPHAT=TEMPS(5)
C
        IF(ITYPA(1).EQ.'PARA' .AND. ITYPA(2).EQ.'PARA' .AND.
     1     ITYPA(3).EQ.'PARA' .AND. ITYPA(4).EQ.'PARA')THEN
          P1TEMP=TEMPS(1)
          N1TEMP=INT(TEMPS(2)+0.5)
          P2TEMP=TEMPS(3)
          N2TEMP=INT(TEMPS(4)+0.5)
          CALL DPBRAT(P1TEMP,N1TEMP,P2TEMP,N2TEMP,ALPHAT,IWRITE,
     1                ARATIO,ALOWLM,AUPPLM,IBUGA3,ISUBRO,IERROR)
          SCAL91=ARATIO
          ITYP91='SCAL'
          SCAL92=ALOWLM
          ITYP92='SCAL'
          SCAL93=AUPPLM
          ITYP93='SCAL'
        ELSEIF(ITYPA(1).EQ.'VARI' .OR. ITYPA(2).EQ.'VARI' .OR.
     1         ITYPA(3).EQ.'VARI' .OR. ITYPA(4).EQ.'VARI')THEN
          DO11456I=1,NINEW
            IF(ITYPA(1).EQ.'VARI')THEN
              P1TEMP=TEMP1(I)
            ELSE
              P1TEMP=TEMPS(1)
            ENDIF
            IF(ITYPA(2).EQ.'VARI')THEN
              N1TEMP=INT(TEMP2(I)+0.5)
            ELSE
              N1TEMP=INT(TEMPS(2)+0.5)
            ENDIF
            IF(ITYPA(3).EQ.'VARI')THEN
              P2TEMP=TEMP3(I)
            ELSE
              P2TEMP=TEMPS(3)
            ENDIF
            IF(ITYPA(4).EQ.'VARI')THEN
              N2TEMP=INT(TEMP4(I)+0.5)
            ELSE
              N2TEMP=INT(TEMPS(4)+0.5)
            ENDIF
            CALL DPBRAT(P1TEMP,N1TEMP,P2TEMP,N2TEMP,ALPHAT,IWRITE,
     1                  ARATIO,ALOWLM,AUPPLM,IBUGA3,ISUBRO,IERROR)
            TEMP1(I)=ARATIO
            TEMP2(I)=ALOWLM
            TEMP91(I)=AUPPLM
11456     CONTINUE
          ITYP91='VARI'
          ITYP92='VARI'
          ITYP93='VARI'
        ENDIF
      ELSEIF(ICASL7.EQ.'SRNP')THEN
C
        N1TEMP=INT(TEMPS(1)+0.5)
        N2TEMP=INT(TEMPS(2)+0.5)
        P3TEMP=TEMPS(3)
        N4TEMP=INT(TEMPS(4)+0.5)
        IDIST=1
        IF(ISRPDI.EQ.'OFF')IDIST=0
C
        CALL RANPE2(N1TEMP,N2TEMP,P3TEMP,N4TEMP,IDIST,MAXOBV,ISEED,
     1              TEMP1,TEMP2,TEMP3,NITEMX,
     1              ISUBRO,IBUGA3,IERROR)
        ITYP91='VARI'
        ITYP92='VARI'
      ELSEIF(ICASL7.EQ.'SUMD')THEN
CCCCC   JAN 1987--NOT DONE
CCCCC   CALL SUMD(TEMP1,NS1,TEMP2,NS2,NUMVAR,IWRITE,
CCCCC1            TEMP91,NITEMX,IBUGA3,IERROR)
CCCCC   DO11455I=1,NITEMX
CCCCC     TEMP1(I)=TEMP91(I)
CCCCC 11455   CONTINUE
      ELSEIF(ICASL7.EQ.'BFPD')THEN
        DO71401I=1,NS1
          DTEMP1(I)=DBLE(TEMP1(I))
71401   CONTINUE
        DO71403I=1,NS2
          DTEMP2(I)=DBLE(TEMP2(I))
          DTEMP2(NS2+I)=DBLE(TEMP3(I))
71403   CONTINUE
        CALL BFWPD2(DTEMP1,NS1,DTEMP2,DTEMP2(NS2+1),NS2,
     1              DBLE(TEMPS(4)),DBLE(TEMPS(5)),DBLE(TEMPS(6)),
     1              DTEMP3,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NITEMX=NS1
        DO71409I=1,NITEMX
          TEMP1(I)=REAL(DTEMP3(I))
71409   CONTINUE
      ELSEIF(ICASL7.EQ.'BFCD')THEN
        DO71411I=1,NS1
          DTEMP1(I)=DBLE(TEMP1(I))
71411   CONTINUE
        DO71413I=1,NS2
          DTEMP2(I)=DBLE(TEMP2(I))
          DTEMP2(NS2+I)=DBLE(TEMP3(I))
71413   CONTINUE
        CALL BFWCD2(DTEMP1,NS1,DTEMP2,DTEMP2(NS2+1),NS2,
     1              DBLE(TEMPS(4)),DBLE(TEMPS(5)),DBLE(TEMPS(6)),
     1              DTEMP3,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NITEMX=NS1
        DO71419I=1,NITEMX
          TEMP1(I)=REAL(DTEMP3(I))
71419   CONTINUE
      ELSEIF(ICASL7.EQ.'BFPP')THEN
        DO71421I=1,NS1
          DTEMP1(I)=DBLE(TEMP1(I))
71421   CONTINUE
        DO71423I=1,NS2
          DTEMP2(I)=DBLE(TEMP2(I))
          DTEMP2(NS2+I)=DBLE(TEMP3(I))
71423   CONTINUE
        CALL BFWPP2(DTEMP1,NS1,DTEMP2,DTEMP2(NS2+1),NS2,
     1              DBLE(TEMPS(4)),DBLE(TEMPS(5)),DBLE(TEMPS(6)),
     1              DTEMP3,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NITEMX=NS1
        DO71429I=1,NITEMX
          TEMP1(I)=REAL(DTEMP3(I))
71429   CONTINUE
      ELSEIF(ICASL7.EQ.'EEPD')THEN
        DO72401I=1,NS1
          DTEMP1(I)=DBLE(TEMP1(I))
72401   CONTINUE
        DO72403I=1,NS2
          DTEMP2(I)=DBLE(TEMP2(I))
          DTEMP2(NS2+I)=DBLE(TEMP3(I))
72403   CONTINUE
        IF(NUMVAR.EQ.8)THEN
          ALOC=TEMPS(8)
        ELSE
          ALOC=0.0
        ENDIF
        CALL EEWPD2(DTEMP1,NS1,DTEMP2,DTEMP2(NS2+1),NS2,
     1              DBLE(TEMPS(4)),DBLE(TEMPS(5)),DBLE(TEMPS(6)),
     1              DBLE(TEMPS(7)),DBLE(ALOC),
     1              DTEMP3,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NITEMX=NS1
        DO72409I=1,NITEMX
          TEMP1(I)=REAL(DTEMP3(I))
72409   CONTINUE
      ELSEIF(ICASL7.EQ.'EECD')THEN
        DO72411I=1,NS1
          DTEMP1(I)=DBLE(TEMP1(I))
72411   CONTINUE
        DO72413I=1,NS2
          DTEMP2(I)=DBLE(TEMP2(I))
          DTEMP2(NS2+I)=DBLE(TEMP3(I))
72413   CONTINUE
        IF(NUMVAR.EQ.8)THEN
          ALOC=TEMPS(8)
        ELSE
          ALOC=0.0
        ENDIF
        CALL EEWCD2(DTEMP1,NS1,DTEMP2,DTEMP2(NS2+1),NS2,
     1              DBLE(TEMPS(4)),DBLE(TEMPS(5)),DBLE(TEMPS(6)),
     1              DBLE(TEMPS(7)),DBLE(ALOC),
     1              DTEMP3,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NITEMX=NS1
        DO72419I=1,NITEMX
          TEMP1(I)=REAL(DTEMP3(I))
72419   CONTINUE
      ELSEIF(ICASL7.EQ.'EEPP')THEN
        DO72421I=1,NS1
          DTEMP1(I)=DBLE(TEMP1(I))
72421   CONTINUE
        DO72423I=1,NS2
          DTEMP2(I)=DBLE(TEMP2(I))
          DTEMP2(NS2+I)=DBLE(TEMP3(I))
72423   CONTINUE
        IF(NUMVAR.EQ.8)THEN
          ALOC=TEMPS(8)
        ELSE
          ALOC=0.0
        ENDIF
        CALL EEWPP2(DTEMP1,NS1,DTEMP2,DTEMP2(NS2+1),NS2,
     1              DBLE(TEMPS(4)),DBLE(TEMPS(5)),DBLE(TEMPS(6)),
     1              DBLE(TEMPS(7)),DBLE(ALOC),
     1              DTEMP3,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NITEMX=NS1
        DO72429I=1,NITEMX
          TEMP1(I)=REAL(DTEMP3(I))
72429   CONTINUE
      ELSEIF(ICASL7.EQ.'INTR')THEN
        NS3=0
        DO11461I=1,NIRIGH(3)
          NS3=NS3+1
          IJ=MAXN*(ICOLR(3)-1)+I
          IF(ICOLR(3).LE.MAXCOL)TEMP3(NS3)=V(IJ)
          IF(ICOLR(3).EQ.MAXCP1)TEMP3(NS3)=PRED(I)
          IF(ICOLR(3).EQ.MAXCP2)TEMP3(NS3)=RES(I)
          IF(ICOLR(3).EQ.MAXCP3)TEMP3(NS3)=YPLOT(I)
          IF(ICOLR(3).EQ.MAXCP4)TEMP3(NS3)=XPLOT(I)
          IF(ICOLR(3).EQ.MAXCP5)TEMP3(NS3)=X2PLOT(I)
          IF(ICOLR(3).EQ.MAXCP6)TEMP3(NS3)=TAGPLO(I)
11461   CONTINUE
        CALL INTERP(TEMP1,TEMP2,NS1,TEMP3,NS3,IWRITE,TEMP91,
     1              TEMP4,TEMP5,TEMP12,TEMP92,TEMP7,TEMP8,TEMP9,
     1              TEMP21,TEMP22,TEMP23,TEMP6,TEMP24,MAXNXT,
     1              IBUGA3,ISUBRO,IERROR)
        NITEMX=NS3
        DO11465I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11465   CONTINUE
      ELSEIF(ICASL7.EQ.'LINT')THEN
        NS3=0
        DO11561I=1,NIRIGH(3)
          NS3=NS3+1
          IJ=MAXN*(ICOLR(3)-1)+I
          IF(ICOLR(3).LE.MAXCOL)TEMP3(NS3)=V(IJ)
          IF(ICOLR(3).EQ.MAXCP1)TEMP3(NS3)=PRED(I)
          IF(ICOLR(3).EQ.MAXCP2)TEMP3(NS3)=RES(I)
          IF(ICOLR(3).EQ.MAXCP3)TEMP3(NS3)=YPLOT(I)
          IF(ICOLR(3).EQ.MAXCP4)TEMP3(NS3)=XPLOT(I)
          IF(ICOLR(3).EQ.MAXCP5)TEMP3(NS3)=X2PLOT(I)
          IF(ICOLR(3).EQ.MAXCP6)TEMP3(NS3)=TAGPLO(I)
11561   CONTINUE
        CALL LININT(TEMP1,TEMP2,NS1,TEMP3,NS3,IWRITE,TEMP91,
     1              TEMP21,TEMP22,TEMP23,
     1              IBUGA3,ISUBRO,IERROR)
        NITEMX=NS3
        DO11565I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11565   CONTINUE
      ELSEIF(ICASL7.EQ.'2DIN')THEN
        NS4=0
        DO11571I=1,NIRIGH(4)
          NS4=NS4+1
          IJ=MAXN*(ICOLR(4)-1)+I
          IF(ICOLR(4).LE.MAXCOL)TEMP4(NS4)=V(IJ)
          IF(ICOLR(4).EQ.MAXCP1)TEMP4(NS4)=PRED(I)
          IF(ICOLR(4).EQ.MAXCP2)TEMP4(NS4)=RES(I)
          IF(ICOLR(4).EQ.MAXCP3)TEMP4(NS4)=YPLOT(I)
          IF(ICOLR(4).EQ.MAXCP4)TEMP4(NS4)=XPLOT(I)
          IF(ICOLR(4).EQ.MAXCP5)TEMP4(NS4)=X2PLOT(I)
          IF(ICOLR(4).EQ.MAXCP6)TEMP4(NS4)=TAGPLO(I)
11571   CONTINUE
        NS5=0
        DO11572I=1,NIRIGH(5)
          NS5=NS5+1
          IJ=MAXN*(ICOLR(5)-1)+I
          IF(ICOLR(5).LE.MAXCOL)TEMP5(NS5)=V(IJ)
          IF(ICOLR(5).EQ.MAXCP1)TEMP5(NS5)=PRED(I)
          IF(ICOLR(5).EQ.MAXCP2)TEMP5(NS5)=RES(I)
          IF(ICOLR(5).EQ.MAXCP3)TEMP5(NS5)=YPLOT(I)
          IF(ICOLR(5).EQ.MAXCP4)TEMP5(NS5)=XPLOT(I)
          IF(ICOLR(5).EQ.MAXCP5)TEMP5(NS5)=X2PLOT(I)
          IF(ICOLR(5).EQ.MAXCP6)TEMP5(NS5)=TAGPLO(I)
11572   CONTINUE
        NS6=0
        CALL INT2D(TEMP1,TEMP2,TEMP3,NS1,TEMP4,NS4,TEMP5,NS5,IWRITE,
     1             TEMP91,NS6,
     1             TEMP12,TEMP12(MAXOBV+1),TEMP92,TEMPC1,
     1             TEMPC1(MAXOBV+1),TEMP7,TEMP8,TEMP9,TEMP21,
     1             TEMP22,ITEMP1,
     1             IBUGA3,ISUBRO,IERROR)
        NITEMX=NS6
        DO11575I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11575   CONTINUE
      ELSEIF(ICASL7.EQ.'BILI')THEN
        NS4=0
        DO11581I=1,NIRIGH(4)
          NS4=NS4+1
          IJ=MAXN*(ICOLR(4)-1)+I
          IF(ICOLR(4).LE.MAXCOL)TEMP4(NS4)=V(IJ)
          IF(ICOLR(4).EQ.MAXCP1)TEMP4(NS4)=PRED(I)
          IF(ICOLR(4).EQ.MAXCP2)TEMP4(NS4)=RES(I)
          IF(ICOLR(4).EQ.MAXCP3)TEMP4(NS4)=YPLOT(I)
          IF(ICOLR(4).EQ.MAXCP4)TEMP4(NS4)=XPLOT(I)
          IF(ICOLR(4).EQ.MAXCP5)TEMP4(NS4)=X2PLOT(I)
          IF(ICOLR(4).EQ.MAXCP6)TEMP4(NS4)=TAGPLO(I)
11581   CONTINUE
        NS5=0
        DO11582I=1,NIRIGH(5)
          NS5=NS5+1
          IJ=MAXN*(ICOLR(5)-1)+I
          IF(ICOLR(5).LE.MAXCOL)TEMP5(NS5)=V(IJ)
          IF(ICOLR(5).EQ.MAXCP1)TEMP5(NS5)=PRED(I)
          IF(ICOLR(5).EQ.MAXCP2)TEMP5(NS5)=RES(I)
          IF(ICOLR(5).EQ.MAXCP3)TEMP5(NS5)=YPLOT(I)
          IF(ICOLR(5).EQ.MAXCP4)TEMP5(NS5)=XPLOT(I)
          IF(ICOLR(5).EQ.MAXCP5)TEMP5(NS5)=X2PLOT(I)
          IF(ICOLR(5).EQ.MAXCP6)TEMP5(NS5)=TAGPLO(I)
11582   CONTINUE
        CALL BILINR(TEMP1,TEMP2,TEMP3,NS1,TEMP4,TEMP5,NS4,
     1              IWRITE,TEMP91,
     1              TEMP21,TEMP22,TEMP23,TEMP24,TEMP25,
     1              TEMP26,TEMP7,
     1              IBUGA3,ISUBRO,IERROR)
        NITEMX=NS4
        DO11585I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11585   CONTINUE
      ELSEIF(ICASL7.EQ.'BIVA')THEN
        NS4=0
        DO11591I=1,NIRIGH(4)
          NS4=NS4+1
          IJ=MAXN*(ICOLR(4)-1)+I
          IF(ICOLR(4).LE.MAXCOL)TEMP4(NS4)=V(IJ)
          IF(ICOLR(4).EQ.MAXCP1)TEMP4(NS4)=PRED(I)
          IF(ICOLR(4).EQ.MAXCP2)TEMP4(NS4)=RES(I)
          IF(ICOLR(4).EQ.MAXCP3)TEMP4(NS4)=YPLOT(I)
          IF(ICOLR(4).EQ.MAXCP4)TEMP4(NS4)=XPLOT(I)
          IF(ICOLR(4).EQ.MAXCP5)TEMP4(NS4)=X2PLOT(I)
          IF(ICOLR(4).EQ.MAXCP6)TEMP4(NS4)=TAGPLO(I)
11591   CONTINUE
        NS5=0
        DO11592I=1,NIRIGH(5)
          NS5=NS5+1
          IJ=MAXN*(ICOLR(5)-1)+I
          IF(ICOLR(5).LE.MAXCOL)TEMP5(NS5)=V(IJ)
          IF(ICOLR(5).EQ.MAXCP1)TEMP5(NS5)=PRED(I)
          IF(ICOLR(5).EQ.MAXCP2)TEMP5(NS5)=RES(I)
          IF(ICOLR(5).EQ.MAXCP3)TEMP5(NS5)=YPLOT(I)
          IF(ICOLR(5).EQ.MAXCP4)TEMP5(NS5)=XPLOT(I)
          IF(ICOLR(5).EQ.MAXCP5)TEMP5(NS5)=X2PLOT(I)
          IF(ICOLR(5).EQ.MAXCP6)TEMP5(NS5)=TAGPLO(I)
11592   CONTINUE
        ISPACE=5*MAXOBV
        CALL BIVAR(TEMP1,TEMP3,TEMP2,NS1,TEMP4,TEMP5,NS4,
     1             IWRITE,TEMP91,
     1             TEMP21,TEMP22,TEMP23,TEMP24,TEMP25,TEMP26,
     1             TEMP7,TEMP8,TEMP9,TEMP6,ISPACE,
     1             IBUGA3,ISUBRO,IERROR)
        NITEMX=NS4
        DO11595I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11595   CONTINUE
      ELSEIF(ICASL7.EQ.'HERI' .OR. ICASL7.EQ.'HERG' .OR.
     1       ICASL7.EQ.'HERD')THEN
        NS3=0
        IF(ICASL7.EQ.'HERI' .OR. ICASL7.EQ.'HERD')THEN
          DO11596I=1,NIRIGH(3)
            NS3=NS3+1
            IJ=MAXN*(ICOLR(3)-1)+I
            IF(ICOLR(3).LE.MAXCOL)TEMP3(NS3)=V(IJ)
            IF(ICOLR(3).EQ.MAXCP1)TEMP3(NS3)=PRED(I)
            IF(ICOLR(3).EQ.MAXCP2)TEMP3(NS3)=RES(I)
            IF(ICOLR(3).EQ.MAXCP3)TEMP3(NS3)=YPLOT(I)
            IF(ICOLR(3).EQ.MAXCP4)TEMP3(NS3)=XPLOT(I)
            IF(ICOLR(3).EQ.MAXCP5)TEMP3(NS3)=X2PLOT(I)
            IF(ICOLR(3).EQ.MAXCP6)TEMP3(NS3)=TAGPLO(I)
11596     CONTINUE
        ENDIF
C
        ISPLINE=.FALSE.
        CALL PCHEZ(NS1,TEMP2,TEMP1,TEMP4,ISPLINE,TEMP5,MAXOBV,IERR)
        IF(IERR.LT.0)GOTO9000
C
        IF(ICASL7.EQ.'HERI')THEN
          CALL PCHEV(NS1,TEMP2,TEMP1,TEMP4,NS3,TEMP3,TEMP91,TEMP6,IERR)
          IFOUND='YES'
          IF(IERR.LT.0)GOTO9000
C
          NITEMX=NS3
          DO11597I=1,NITEMX
            TEMP1(I)=TEMP91(I)
11597     CONTINUE
        ELSEIF(ICASL7.EQ.'HERD')THEN
          CALL PCHEV(NS1,TEMP2,TEMP1,TEMP4,NS3,TEMP3,TEMP91,TEMP6,IERR)
          IFOUND='YES'
          IF(IERR.LT.0)GOTO9000
C
          NITEMX=NS3
          DO11598I=1,NITEMX
            TEMP1(I)=TEMP6(I)
11598     CONTINUE
        ELSEIF(ICASL7.EQ.'HERG')THEN
          ALOW=TEMPS(3)
          AUPP=TEMPS(4)
          SCAL91=PCHQA(NS1,TEMP2,TEMP1,TEMP4,ALOW,AUPP,IERR)
          IFOUND='YES'
          IF(IERR.LT.0)GOTO9000
          ITYP91='SCAL'
        ENDIF
      ELSEIF(ICASL7.EQ.'GRPS')THEN
        NS3=0
        DO11601I=1,NIRIGH(3)
          NS3=NS3+1
          IJ=MAXN*(ICOLR(3)-1)+I
          IF(ICOLR(3).LE.MAXCOL)TEMP3(NS3)=V(IJ)
          IF(ICOLR(3).EQ.MAXCP1)TEMP3(NS3)=PRED(I)
          IF(ICOLR(3).EQ.MAXCP2)TEMP3(NS3)=RES(I)
          IF(ICOLR(3).EQ.MAXCP3)TEMP3(NS3)=YPLOT(I)
          IF(ICOLR(3).EQ.MAXCP4)TEMP3(NS3)=XPLOT(I)
          IF(ICOLR(3).EQ.MAXCP5)TEMP3(NS3)=X2PLOT(I)
          IF(ICOLR(3).EQ.MAXCP6)TEMP3(NS3)=TAGPLO(I)
11601   CONTINUE
        CALL GRPSHU(TEMP1,TEMP2,NS1,TEMP3,NS3,
     1              IWRITE,TEMP91,TEMP4,
     1              ITEMP1,TEMP5,TEMP6,
     1              IBUGA3,ISUBRO,IERROR)
        NITEMX=NS1
        DO11605I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11605   CONTINUE
      ELSEIF(ICASL7.EQ.'UNST')THEN
        IH=ILEFT(1)
        IH2=ILEF2(1)
        CALL DPUNST(TEMP1,TEMP2,NS1,IH,IH2,TEMP91,NITEMX,
     1              TEMP3,ITEMP1,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11477I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11477   CONTINUE
        NS1=NITEMX
        IF(NEWNAM(1).EQ.'YES')THEN
          ICOLL(1)=ICOLL(1)+NITEMX
          ILISL(1)=ILISL(1)+NITEMX
        ENDIF
      ELSEIF(ICASL7.EQ.'BIWE')THEN
        CALL BIWEIG(TEMP1,NS1,IWRITE,TEMP91,IBUGA3,IERROR)
        DO11475I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11475   CONTINUE
      ELSEIF(ICASL7.EQ.'TRIC')THEN
        CALL TRICUB(TEMP1,NS1,IWRITE,TEMP91,IBUGA3,IERROR)
        DO11485I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11485   CONTINUE
      ELSEIF(ICASL7.EQ.'KEEP' .OR. ICASL7.EQ.'OMIT')THEN
        IOP='KEEP'
        IF(ICASL7.EQ.'OMIT')IOP='OMIT'
        CALL DPKEEP(TEMP1,NS1,TEMP2,NS2,IOP,TEMP91,IBUGA3,ISUBRO,IERROR)
        DO11493I=1,NS1
          TEMP1(I)=TEMP91(I)
11493   CONTINUE
      ELSEIF(ICASL7.EQ.'COCD')THEN
        CALL COCODE(TEMP1,NS1,TEMP2,NS2,TEMP91,IBUGA3)
        DO11495I=1,NS1
          TEMP1(I)=TEMP91(I)
11495   CONTINUE
      ELSEIF(ICASL7.EQ.'EXPA')THEN
        IWRITE='OFF'
        CALL EXPAND(TEMP1,NS1,TEMP2,NS2,IWRITE,TEMP3,TEMP4,TEMP5,
     1              MAXOBV,ISUBRO,IBUGA3,IERROR)
        DO11503I=1,NS1
          TEMP1(I)=TEMP3(I)
11503   CONTINUE
      ELSEIF(ICASL7.EQ.'JSCO')THEN
        IWRITE='OFF'
        CALL JSCORE(TEMP1,TEMP2,NS1,IWRITE,TEMP3,TEMP5,TEMP4,NITEMX,
     1              IBUGA3,ISUBRO,IERROR)
        DO21503I=1,NITEMX
          TEMP1(I)=TEMP4(I)
21503   CONTINUE
        IUPFLG='FULL'
      ELSEIF(ICASL7.EQ.'JSCT')THEN
        IWRITE='OFF'
        CALL JSCTAB(TEMP1,TEMP2,TEMP3,NS1,IWRITE,
     1              TEMP4,TEMP5,TEMP6,
     1              TEMP7,TEMP8,TEMP91,NITEMX,
     1              IBUGA3,ISUBRO,IERROR)
        DO21513I=1,NITEMX
          TEMP1(I)=TEMP7(I)
          TEMP2(I)=TEMP8(I)
21513   CONTINUE
        IUPFLG='FULL'
      ELSEIF(ICASL7.EQ.'COCP')THEN
        CALL COCOPY(TEMP3,NS3,TEMP1,NS1,TEMP2,TEMP91,NITEMX,IBUGA3)
        DO11505I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11505   CONTINUE
      ELSEIF(ICASL7.EQ.'POPL')THEN
        CALL DPPOPL(TEMP1,TEMP2,NS1,
     1              TEMP3,TEMP4,TEMP5,TEMP92,NS3,
     1              TEMP91,
     1              ISUBRO,IBUGA3,IERROR)
        NITEMX=NS1
        DO11506I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11506   CONTINUE
      ELSEIF(ICASL7.EQ.'GATH')THEN
        IERROR='NO'
        DO11507I=1,NS2
          ITEMP1(I)=INT(TEMP2(I)+0.5)
11507   CONTINUE
        CALL GATHER(NS2,TEMP91,TEMP1,ITEMP1,MAXOBV,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        DO11508I=1,NS2
          TEMP1(I)=TEMP91(I)
11508   CONTINUE
        NS1=NS2
        NITEMX=NS1
      ELSEIF(ICASL7.EQ.'SCAT')THEN
        ISTRT=1
        IF(NS99.GE.1)ISTRT=NS99+1
        DO11496I=ISTRT,MAXOBV
          TEMP91(I)=CPUMIN
11496   CONTINUE
        DO11497I=1,NS2
          ITEMP1(I)=INT(TEMP2(I)+0.5)
11497   CONTINUE
        CALL SCATTR(NS2,TEMP91,ITEMP1,TEMP1,NOUT,MAXOBV,
     1                ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NS1=MAX(NS99,NOUT)
        DO11498I=1,NS1
          TEMP1(I)=TEMP91(I)
11498   CONTINUE
        NITEMX=NS1
      ELSEIF(ICASL7.EQ.'SHIF')THEN
        IERROR='NO'
        ATEMP=TEMPS(2)
        IF(ATEMP.GE.0.0)THEN
          NSHIFT=INT(TEMPS(2)+0.1)
        ELSE
          NSHIFT=INT(TEMPS(2)-0.1)
        ENDIF
        CALL SHIFTZ(TEMP1,NS1,NSHIFT,MAXOBV,TEMP91,NITEMX,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        DO11499I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11499   CONTINUE
      ELSEIF(ICASL7.EQ.'CSHI')THEN
        IERROR='NO'
        ATEMP=TEMPS(2)
        IF(ATEMP.GE.0.0)THEN
          NSHIFT=INT(TEMPS(2)+0.1)
        ELSE
          NSHIFT=INT(TEMPS(2)-0.1)
        ENDIF
        CALL SHIFTC(TEMP1,NS1,NSHIFT,MAXOBV,TEMP91,NITEMX,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        DO11501I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11501   CONTINUE
      ELSEIF(ICASL7.EQ.'VPER')THEN
        IERROR='NO'
        ATEMP=TEMPS(2)
        NPERC=INT(TEMPS(2)+0.1)
        IF(NPERC.LT.1)THEN
          IF(NS1.LE.100)THEN
            NPERC=10
          ELSEIF(NS1.LE.1000)THEN
            NPERC=100
          ELSE
            NPERC=1000
          ENDIF
        ELSEIF(NPERC.GT.MAXOBV)THEN
          NPERC=MAXOBV
        ENDIF
        CALL PERCE2(NPERC,TEMP1,NS1,IWRITE,TEMP2,MAXOBV,TEMP91,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        DO11502I=1,NPERC
          TEMP1(I)=TEMP91(I)
11502   CONTINUE
        NITEMX=NPERC
      ELSEIF(ICASL7.EQ.'LARG')THEN
        IERROR='NO'
        ATEMP=TEMPS(2)
        IF(ATEMP.GE.0.0)THEN
          NVAL=INT(TEMPS(2)+0.1)
        ELSE
          NVAL=INT(TEMPS(2)-0.1)
        ENDIF
        IF(NVAL.LT.1)NVAL=1
        IF(NVAL.GT.NS1)NVAL=NS1
        CALL DPLARG(TEMP1,NS1,NVAL,TEMP91,NITEMX,ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        DO21504I=1,NITEMX
          TEMP1(I)=TEMP91(I)
21504   CONTINUE
      ELSEIF(ICASL7.EQ.'SMAL')THEN
        IERROR='NO'
        ATEMP=TEMPS(2)
        IF(ATEMP.GE.0.0)THEN
          NVAL=INT(TEMPS(2)+0.1)
        ELSE
          NVAL=INT(TEMPS(2)-0.1)
        ENDIF
        IF(NVAL.LT.1)NVAL=1
        IF(NVAL.GT.NS1)NVAL=NS1
        CALL DPSMAL(TEMP1,NS1,NVAL,TEMP91,NITEMX,ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        DO21505I=1,NITEMX
          TEMP1(I)=TEMP91(I)
21505   CONTINUE
      ELSEIF(ICASL7.EQ.'TMIN' .OR. ICASL7.EQ.'TMAX')THEN
        IOP='MINI'
        IF(ICASL7.EQ.'TMAX')IOP='MAXI'
        CALL THRESH(TEMP1,TEMP2,NS1,NS2,IWRITE,TEMP91,TEMP92,NITEMX,
     1              IOP,MAXOBV,
     1              ISUBRO,IBUGA3,IERROR)
        DO11517I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11517   CONTINUE
        NS1=NITEMX
      ELSEIF(ICASL7.EQ.'CODH')THEN
        NUMINT=4
        CALL CODEH(TEMP1,NS1,NUMINT,IWRITE,TEMP2,TEMP5,MAXOBV,
     1             IBUGA3,IERROR)
        DO11645I=1,NS1
          TEMP1(I)=TEMP2(I)
11645   CONTINUE
      ELSEIF(ICASL7.EQ.'COD1'.OR.ICASL7.EQ.'COD2'.OR.
     1       ICASL7.EQ.'COD3'.OR.ICASL7.EQ.'COD4'.OR.
     1       ICASL7.EQ.'COD5'.OR.ICASL7.EQ.'COD6'.OR.
     1       ICASL7.EQ.'COD7'.OR.ICASL7.EQ.'COD8'.OR.
     1       ICASL7.EQ.'COD9'.OR.ICASL7.EQ.'CO10')THEN
        NUMINT=4
        IF(ICASL7.EQ.'COD1')NUMINT=1
        IF(ICASL7.EQ.'COD2')NUMINT=2
        IF(ICASL7.EQ.'COD3')NUMINT=3
        IF(ICASL7.EQ.'COD4')NUMINT=4
        IF(ICASL7.EQ.'COD5')NUMINT=5
        IF(ICASL7.EQ.'COD6')NUMINT=6
        IF(ICASL7.EQ.'COD7')NUMINT=7
        IF(ICASL7.EQ.'COD8')NUMINT=8
        IF(ICASL7.EQ.'COD9')NUMINT=9
        IF(ICASL7.EQ.'CO10')NUMINT=10
        CALL CODEN(TEMP1,NS1,NUMINT,IWRITE,TEMP2,TEMP5,MAXOBV,
     1             IBUGA3,IERROR)
        DO11655I=1,NS1
          TEMP1(I)=TEMP2(I)
11655   CONTINUE
      ELSEIF(ICASL7.EQ.'SINT')THEN
        CALL SINTRA(TEMP1,NS1,IWRITE,TEMP2,NITEMX,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11715I=1,NITEMX
          TEMP1(I)=TEMP2(I)
11715   CONTINUE
      ELSEIF(ICASL7.EQ.'COST')THEN
        CALL COSTRA(TEMP1,NS1,IWRITE,TEMP2,NITEMX,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11725I=1,NITEMX
          TEMP1(I)=TEMP2(I)
11725   CONTINUE
      ELSEIF(ICASL7.EQ.'FOUT'.OR.ICASL7.EQ.'FOU1'.OR.
     1       ICASL7.EQ.'IFOU'.OR.ICASL7.EQ.'IFO1')THEN
        IF(ICASL7.EQ.'FOU1'.OR.ICASL7.EQ.'IFO1')THEN
          DO11732I=1,NS1
            TEMP2(I)=0.0
11732     CONTINUE
        ENDIF
        ITCASE=ICASL7
        CALL FOUTRA(TEMP1,TEMP2,TEMPC1,TEMP6,
     1              NS1,ITCASE,IWRITE,TEMP12,IFTEXP,IFTORD,
     1              TEMP91,TEMP92,NITEMX,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11735I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11735   CONTINUE
      ELSEIF(ICASL7.EQ.'FFT'.OR.ICASL7.EQ.'FFT1'.OR.
     1       ICASL7.EQ.'IFFT'.OR.ICASL7.EQ.'IFF1')THEN
        IF(ICASL7.EQ.'FFT1'.OR.ICASL7.EQ.'IFF1')THEN
          DO11742I=1,NS1
            TEMP2(I)=0.0
11742     CONTINUE
        ENDIF
        NS1NEW=NS1
        ITCASE=ICASL7
        CALL FOUTRA(TEMP1,TEMP2,TEMPC1,TEMP6,
     1              NS1NEW,ITCASE,IWRITE,TEMP12,IFTEXP,IFTORD,
     1              TEMP91,TEMP92,NITEMX,IBUGA3,IERROR)
         IF(IERROR.EQ.'YES')GOTO19000
         DO11756I=1,NITEMX
           TEMP1(I)=TEMP91(I)
           TEMP2(I)=TEMP92(I)
11756   CONTINUE
      ELSEIF(ICASL7.EQ.'NKDM')THEN
        CALL DPMMPD(TEMP1,TEMP2,NS1,
     1              TEMP91,TEMP92,NITEMX,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11758I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11758   CONTINUE
      ELSEIF(ICASL7.EQ.'2DCH')THEN
        NS1NEW=NS1
        CALL DP2DCH(TEMP1,TEMP2,TEMP6,NS1,IWRITE,MAXOBV,
     1              TEMP91,TEMP92,NITEMX,
     1              ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,
     1              IBUGA3,IERROR)
         IF(IERROR.EQ.'YES')GOTO19000
         DO11766I=1,NITEMX
           TEMP1(I)=TEMP91(I)
           TEMP2(I)=TEMP92(I)
11766   CONTINUE
      ELSEIF(ICASL7.EQ.'TPOI')THEN
        TY=TEMPS(3)
        TX=TEMPS(4)
        SY=TEMPS(5)
        SX=TEMPS(6)
        THETA=TEMPS(7)
        CALL DPTRPO(TEMP2,TEMP1,NS1,
     1              TX,TY,SX,SY,THETA,
     1              TEMP91,TEMP92,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11767I=1,NS1
          TEMP1(I)=TEMP92(I)
          TEMP2(I)=TEMP91(I)
11767   CONTINUE
      ELSEIF(ICASL7.EQ.'EXTP')THEN
        CALL DPEXTP(TEMP1,TEMP2,NS1,
     1              TEMP91,TEMP92,NITEMX,
     1              ISUBRO,IBUGA3,IERROR)
         IF(IERROR.EQ.'YES')GOTO19000
         DO11763I=1,NITEMX
           TEMP1(I)=TEMP91(I)
           TEMP2(I)=TEMP92(I)
11763   CONTINUE
        NS1=NITEMX
      ELSEIF(ICASL7.EQ.'ENCB')THEN
CCCCC   CALL DPENCB(TEMP1,TEMP2,NS1,MAXOBV,
        CALL DPENC2(TEMP1,TEMP2,NS1,MAXOBV,
     1              TEMP3,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,
     1              TEMP91,TEMP92,NITEMX,AREA,
     1              ISUBRO,IBUGA3,IERROR)
         IF(IERROR.EQ.'YES')GOTO19000
         DO11764I=1,NITEMX
           TEMP1(I)=TEMP91(I)
           TEMP2(I)=TEMP92(I)
11764   CONTINUE
        NS1=NITEMX
      ELSEIF(ICASL7.EQ.'INTL')THEN
C
C       DETERMINE MINIMUM/MAXIMUM COLUMN LENGTH
C
        N1MIN=0
        DO79001II=1,8
          IF(ITYPA(1).EQ.'VARI')THEN
            N1TEMP=INT(TEMPS(II)+0.1)
            IF(N1MIN.EQ.0)THEN
              N1MIN=N1TEMP
            ELSE
              N1MIN=MIN(N1MIN,N1TEMP)
            ENDIF
          ENDIF
79001   CONTINUE
        IF(N1MIN.EQ.0)N1MIN=1
C
C       CREATE VARIABLES FOR INTLIN ROUTINE
C
        IF(ITYPA(1).EQ.'PARA')THEN
          DO79011II=1,N1MIN
            TEMP1(II)=TEMPS(1)
79011     CONTINUE
        ENDIF
        IF(ITYPA(2).EQ.'PARA')THEN
          DO79012II=1,N1MIN
            TEMP2(II)=TEMPS(2)
79012     CONTINUE
        ENDIF
        IF(ITYPA(3).EQ.'PARA')THEN
          DO79013II=1,N1MIN
            TEMP3(II)=TEMPS(3)
79013     CONTINUE
        ENDIF
        IF(ITYPA(4).EQ.'PARA')THEN
          DO79014II=1,N1MIN
            TEMP4(II)=TEMPS(4)
79014     CONTINUE
        ENDIF
        IF(ITYPA(5).EQ.'PARA')THEN
          DO79015II=1,N1MIN
            TEMP5(II)=TEMPS(5)
79015     CONTINUE
        ENDIF
        IF(ITYPA(6).EQ.'PARA')THEN
          DO79016II=1,N1MIN
            TEMP6(II)=TEMPS(6)
79016     CONTINUE
        ENDIF
        IF(ITYPA(7).EQ.'PARA')THEN
          DO79017II=1,N1MIN
            TEMP7(II)=TEMPS(7)
79017     CONTINUE
        ENDIF
        IF(ITYPA(8).EQ.'PARA')THEN
          DO79018II=1,N1MIN
            TEMP8(II)=TEMPS(8)
79018     CONTINUE
        ENDIF
C
        IERROR='NO'
        CALL INTLIN(TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,
     1              TEMP7,TEMP8,N1MIN,
     1              TEMP91,TEMP92,NITEMX,
     1              ISUBRO,IBUGA3,IERROR)
         IF(IERROR.EQ.'YES')GOTO19000
         DO79019I=1,NITEMX
           TEMP1(I)=TEMP91(I)
           TEMP2(I)=TEMP92(I)
79019   CONTINUE
        NS1=NITEMX
      ELSEIF(ICASL7.EQ.'PARL' .OR. ICASL7.EQ.'PERL')THEN
C
C       DETERMINE MINIMUM/MAXIMUM COLUMN LENGTH
C
        N1MIN=0
        DO79021II=1,6
          IF(ITYPA(1).EQ.'VARI')THEN
            N1TEMP=INT(TEMPS(II)+0.1)
            IF(N1MIN.EQ.0)THEN
              N1MIN=N1TEMP
            ELSE
              N1MIN=MIN(N1MIN,N1TEMP)
            ENDIF
          ENDIF
79021   CONTINUE
        IF(N1MIN.EQ.0)N1MIN=1
C
C       CREATE VARIABLES FOR PARALI, DPPLIN ROUTINES
C
        IF(ITYPA(1).EQ.'PARA')THEN
          DO79023II=1,N1MIN
            TEMP1(II)=TEMPS(1)
79023     CONTINUE
        ENDIF
        IF(ITYPA(2).EQ.'PARA')THEN
          DO79024II=1,N1MIN
            TEMP2(II)=TEMPS(2)
79024     CONTINUE
        ENDIF
        IF(ITYPA(3).EQ.'PARA')THEN
          DO79025II=1,N1MIN
            TEMP3(II)=TEMPS(3)
79025     CONTINUE
        ENDIF
        IF(ITYPA(4).EQ.'PARA')THEN
          DO79026II=1,N1MIN
            TEMP4(II)=TEMPS(4)
79026     CONTINUE
        ENDIF
        IF(ITYPA(5).EQ.'PARA')THEN
          DO79027II=1,N1MIN
            TEMP5(II)=TEMPS(5)
79027     CONTINUE
        ENDIF
        IF(ITYPA(6).EQ.'PARA')THEN
          DO79028II=1,N1MIN
            TEMP6(II)=TEMPS(6)
79028     CONTINUE
        ENDIF
C
        IERROR='NO'
        DO79029II=1,N1MIN
          X1TEMP=TEMP1(II)
          Y1TEMP=TEMP2(II)
          X2TEMP=TEMP3(II)
          Y2TEMP=TEMP4(II)
          X3TEMP=TEMP5(II)
          Y3TEMP=TEMP6(II)
          IF(ICASL7.EQ.'PARL')THEN
            CALL PARALI(X1TEMP,Y1TEMP,X2TEMP,Y2TEMP,X3TEMP,Y3TEMP,
     1                  X4TEMP,Y4TEMP,
     1                  ISUBRO,IBUGA3,IERROR)
          ELSEIF(ICASL7.EQ.'PERL')THEN
            CALL DPPLIN(X1TEMP,Y1TEMP,X2TEMP,Y2TEMP,X3TEMP,Y3TEMP,
     1                  X4TEMP,Y4TEMP,S1TEMP,S2TEMP,DISTT,
     1                  ISUBRO,IBUGA3)
          ENDIF
          TEMP91(II)=X4TEMP
          TEMP92(II)=Y4TEMP
79029   CONTINUE
C
        DO79030I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
79030   CONTINUE
        NS1=NITEMX
      ELSEIF(ICASL7.EQ.'EDGV')THEN
        CALL EDGVER(TEMP1,TEMP2,NS1,TEMP3,TEMP4,NS3,IWRITE,
     1              TEMP91,TEMP92,TEMP5,NITEMX,
     1              IBUGA3,IERROR)
         IF(IERROR.EQ.'YES')GOTO19000
         DO11768I=1,NITEMX
           TEMP1(I)=TEMP91(I)
           TEMP2(I)=TEMP92(I)
           TEMP91(I)=TEMP5(I)
11768   CONTINUE
      ELSEIF(ICASL7.EQ.'SPF1')THEN
        CALL SPANF1(TEMP1,TEMP2,NS1,TEMP3,TEMP4,NS3,IWRITE,
     1              TEMP91,TEMP92,TEMP5,NITEMX,
     1              ITEMP1,ITEMP3,ITEMP4,ITEMP5,
     1              IBUGA3,IERROR)
         IF(IERROR.EQ.'YES')GOTO19000
         DO11769I=1,NITEMX
           TEMP1(I)=TEMP91(I)
           TEMP2(I)=TEMP92(I)
           TEMP91(I)=TEMP5(I)
11769   CONTINUE
      ELSEIF(ICASL7.EQ.'SPF2')THEN
        NVERT=INT(TEMPS(3)+0.1)
        CALL SPANF2(TEMP1,TEMP2,NS1,NVERT,IWRITE,
     1              ITEMP1,ITEMP3,ITEMP4,IK,ITEMP5,
     1              IBUGA3,IERROR)
         IF(IERROR.EQ.'YES')GOTO19000
         NITEMX=NS1
         NS3=NVERT
         DO11770I=1,NS3
           TEMP91(I)=REAL(ITEMP3(I))
11770    CONTINUE
         NS4=IK
         DO11771I=1,NS4
           TEMP92(I)=INT(ITEMP4(I))
11771   CONTINUE
      ELSEIF(ICASL7.EQ.'NEXS')THEN
        ILAST=0
        NITEMX=INT(TEMPS(1)+0.01)
        IF(NITEMX.EQ.0)THEN
          NLAST=0
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11773)
11773     FORMAT('****** FROM NEXT SUBSET--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11775)
11775     FORMAT('       SUBSET SEQUENCE RESET.')
          CALL DPWRST('XXX','BUG ')
          GOTO11786
        ELSEIF(NITEMX.GT.MAXOBV)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11776)
11776     FORMAT('****** ERROR FROM NEXT SUBSET--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11778)MAXOBV
11778     FORMAT('       SUBSET SIZE EXCEEDS MAXIMUM ALLOWABLE ',
     1           '(',I10,')')
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          IH='LAST'
          IH2='SEQU'
          VALUE0=REAL(ILAST)
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
          GOTO19000
        ELSE
          IF(NITEMX.NE.NLAST)NLAST=0
          MTC=.TRUE.
          DO11781I=1,NITEMX
            ITEMP1(I)=INT(TEMP2(I)+0.01)
11781     CONTINUE
          CALL NEXSUB(NITEMX,ITEMP1,MTC,NCARD,JTEMP)
          DO11783I=1,NITEMX
            TEMP1(I)=REAL(ITEMP1(I))
11783     CONTINUE
          IF(.NOT.MTC)THEN
            ILAST=1
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,11773)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,11785)
11785       FORMAT('       THIS IS THE LAST SUBSET IN THE SEQUENCE.')
            CALL DPWRST('XXX','BUG ')
            NLAST=0
            ILAST=1
          ENDIF
        ENDIF
C
11786   CONTINUE
        IH='LAST'
        IH2='SEQU'
        VALUE0=REAL(ILAST)
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
        IFOUND='YES'
        IERROR='NO'
C
      ELSEIF(ICASL7.EQ.'NEXP')THEN
        ILAST=0
        NITEMX=INT(TEMPS(1)+0.01)
        IF(NITEMX.EQ.0)THEN
          NLAST=0
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11801)
11801     FORMAT('****** FROM NEXT PERMUATION--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11803)
11803     FORMAT('       SUBSET SEQUENCE RESET.')
          CALL DPWRST('XXX','BUG ')
          GOTO11816
        ELSEIF(NITEMX.GT.MAXOBV)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11806)
11806     FORMAT('****** ERROR FROM NEXT PERMUATION--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11808)MAXOBV
11808     FORMAT('       PERMUTATION SIZE EXCEEDS MAXIMUM ALLOWABLE ',
     1           '(',I10,')')
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          IH='LAST'
          IH2='SEQU'
          VALUE0=REAL(ILAST)
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
          GOTO19000
        ELSE
          IF(NITEMX.NE.NLAST)NLAST=0
          MTC=.TRUE.
          DO11811I=1,NITEMX
            ITEMP1(I)=INT(TEMP2(I)+0.01)
11811     CONTINUE
          CALL NEXPER(ITEMP1,NITEMX,MTC)
          NLAST=NITEMX
          DO11813I=1,NITEMX
            TEMP1(I)=REAL(ITEMP1(I))
11813     CONTINUE
          IF(.NOT.MTC)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,11806)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,11815)
11815       FORMAT('       THIS IS THE LAST PERMUATION IN THE ',
     1             'SEQUENCE.')
            CALL DPWRST('XXX','BUG ')
            NLAST=0
            ILAST=1
          ENDIF
        ENDIF
C
11816   CONTINUE
        IH='LAST'
        IH2='SEQU'
        VALUE0=REAL(ILAST)
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
        IFOUND='YES'
        IERROR='NO'
C
      ELSEIF(ICASL7.EQ.'KNSE')THEN
        ILAST=0
        KCURR=INT(TEMPS(1)+0.01)
        NCURR=INT(TEMPS(2)+0.01)
        NITEMX=KCURR
        IF(KCURR.EQ.0 .OR. NCURR.EQ.0)THEN
          NLAST=0
          KLAST=0
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11823)
11823     FORMAT('****** FROM NEXT K-SET OF N-SET--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11825)
11825     FORMAT('       K-SET OF N-SET SEQUENCE RESET.')
          CALL DPWRST('XXX','BUG ')
          GOTO11848
        ELSEIF(NCURR.LT.1 .OR. NCURR.GT.MAXOBV)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11823)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11826)MAXOBV
11826     FORMAT('       VALUE OF N EXCEEDS MAXIMUM ALLOWABLE ',
     1           '(',I10,')')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11827)
11827     FORMAT('       OR IS LESS THAN 1.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11828)NCURR
11828     FORMAT('       THE VALUE OF N IS ',I8)
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          IH='LAST'
          IH2='SEQU'
          VALUE0=REAL(ILAST)
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
          GOTO19000
        ELSEIF(KCURR.LT.1 .OR. KCURR.GT.NCURR)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11823)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11836)
11836     FORMAT('       VALUE OF K IS GREATER THAN THE VALUE ',
     1           ' OF N')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11837)
11837     FORMAT('       OR IS LESS THAN 1.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11838)KCURR
11838     FORMAT('       THE VALUE OF K IS ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11828)NCURR
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          IH='LAST'
          IH2='SEQU'
          VALUE0=REAL(ILAST)
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
          GOTO19000
        ELSE
          IF(KCURR.NE.KLAST .OR. NCURR.NE.NLAST)THEN
            CALL NEXKSB(NCURR,KCURR,ITEMP1,MTC)
            NITEMX=KCURR
            DO11840I=1,NITEMX
              TEMP1(I)=REAL(ITEMP1(I))
11840       CONTINUE
            NLAST=NCURR
            KLAST=KCURR
          ELSE
            MTC=.TRUE.
            DO11841I=1,KCURR
              ITEMP1(I)=INT(TEMP3(I)+0.01)
11841       CONTINUE
            CALL NEXKSB(NCURR,KCURR,ITEMP1,MTC)
            NITEMX=KCURR
            DO11843I=1,NITEMX
              TEMP1(I)=REAL(ITEMP1(I))
11843       CONTINUE
            IF(.NOT.MTC)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,11823)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,11845)
11845         FORMAT('       THIS IS THE LAST SUBSET IN THE SEQUENCE.')
              CALL DPWRST('XXX','BUG ')
              NLAST=0
              KLAST=0
              ILAST=1
            ENDIF
          ENDIF
        ENDIF
C
11848   CONTINUE
        IH='LAST'
        IH2='SEQU'
        VALUE0=REAL(ILAST)
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
        IFOUND='YES'
        IERROR='NO'
C
      ELSEIF(ICASL7.EQ.'NEXC')THEN
        ILAST=0
        KCURR=INT(TEMPS(1)+0.01)
        NCURR=INT(TEMPS(2)+0.01)
        NITEMX=KCURR
        IF(KCURR.EQ.0 .OR. NCURR.EQ.0)THEN
          NLAST=0
          KLAST=0
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31823)
31823     FORMAT('****** FROM NEXT COMPOSITION--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31825)
31825     FORMAT('       COMPOSITION SEQUENCE RESET.')
          CALL DPWRST('XXX','BUG ')
          GOTO31846
        ELSEIF(NCURR.LT.1 .OR. NCURR.GT.MAXOBV)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31823)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31826)MAXOBV
31826     FORMAT('       VALUE OF N EXCEEDS MAXIMUM ALLOWABLE ',
     1           '(',I10,')')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31827)
31827     FORMAT('       OR IS LESS THAN 1.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31828)NCURR
31828     FORMAT('       THE VALUE OF N IS ',I8)
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          IH='LAST'
          IH2='SEQU'
          VALUE0=REAL(ILAST)
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
          GOTO19000
        ELSEIF(KCURR.LT.1 .OR. KCURR.GT.NCURR)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31823)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31836)
31836     FORMAT('       VALUE OF K IS GREATER THAN THE VALUE ',
     1           ' OF N')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31837)
31837     FORMAT('       OR IS LESS THAN 1.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31838)KCURR
31838     FORMAT('       THE VALUE OF K IS ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31828)NCURR
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          IH='LAST'
          IH2='SEQU'
          VALUE0=REAL(ILAST)
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
          GOTO19000
        ELSE
          IF(KCURR.NE.KLAST .OR. NCURR.NE.NLAST)THEN
            MTC=.FALSE.
            CALL NEXCOM(NCURR,KCURR,ITEMP1,MTC)
            NITEMX=KCURR
            DO31840I=1,NITEMX
              TEMP1(I)=REAL(ITEMP1(I))
31840       CONTINUE
            NLAST=NCURR
            KLAST=KCURR
          ELSE
            MTC=.TRUE.
            DO31841I=1,KCURR
              ITEMP1(I)=INT(TEMP3(I)+0.01)
31841       CONTINUE
            CALL NEXCOM(NCURR,KCURR,ITEMP1,MTC)
            NITEMX=KCURR
            DO31843I=1,NITEMX
              TEMP1(I)=REAL(ITEMP1(I))
31843       CONTINUE
            NLAST=NCURR
            KLAST=KCURR
            IF(.NOT.MTC)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31823)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31845)
31845         FORMAT('       THIS IS THE LAST SUBSET IN THE SEQUENCE.')
              CALL DPWRST('XXX','BUG ')
              NLAST=0
              KLAST=0
              ILAST=1
            ENDIF
          ENDIF
        ENDIF
C
31846   CONTINUE
        IH='LAST'
        IH2='SEQU'
        VALUE0=REAL(ILAST)
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
        IFOUND='YES'
        IERROR='NO'
C
      ELSEIF(ICASL7.EQ.'NEPA')THEN
        ILAST=0
        NCURR=INT(TEMPS(1)+0.01)
        IF(NCURR.EQ.0)THEN
          NLAST=0
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31853)
31853     FORMAT('****** FROM NEXT PARTITION--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31855)
31855     FORMAT('       PARTITION SEQUENCE RESET.')
          CALL DPWRST('XXX','BUG ')
          GOTO31876
        ELSEIF(NCURR.LT.1 .OR. NCURR.GT.MAXOBV)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31853)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31856)MAXOBV
31856     FORMAT('       VALUE OF N EXCEEDS MAXIMUM ALLOWABLE ',
     1           '(',I10,')')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31857)
31857     FORMAT('       OR IS LESS THAN 1.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31858)NCURR
31858     FORMAT('       THE VALUE OF N IS ',I8)
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          IH='LAST'
          IH2='SEQU'
          VALUE0=REAL(ILAST)
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
          GOTO19000
        ELSE
          IF(NCURR.NE.NLAST)THEN
            MTC=.FALSE.
            CALL NEXPAR(NCURR,ITEMP1,ITEMP2,NITEMX,MTC)
            DO31870I=1,NITEMX
              TEMP1(I)=REAL(ITEMP1(I))
              TEMP2(I)=REAL(ITEMP2(I))
31870       CONTINUE
            NLAST=NCURR
          ELSE
            MTC=.TRUE.
            DO31871I=1,NS2
              ITEMP1(I)=INT(TEMP2(I)+0.01)
              ITEMP2(I)=INT(TEMP3(I)+0.01)
31871       CONTINUE
            NITEMX=NS2
            CALL NEXPAR(NCURR,ITEMP1,ITEMP2,NITEMX,MTC)
            DO31873I=1,NITEMX
              TEMP1(I)=REAL(ITEMP1(I))
              TEMP2(I)=REAL(ITEMP2(I))
31873       CONTINUE
            NLAST=NCURR
            IF(.NOT.MTC)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31853)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31875)
31875         FORMAT('       THIS IS THE LAST PARTITION IN THE ',
     1               'SEQUENCE.')
              CALL DPWRST('XXX','BUG ')
              NLAST=0
              ILAST=1
            ENDIF
          ENDIF
        ENDIF
C
31876   CONTINUE
        IH='LAST'
        IH2='SEQU'
        VALUE0=REAL(ILAST)
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
        IFOUND='YES'
        IERROR='NO'
C
      ELSEIF(ICASL7.EQ.'NEXE')THEN
        ILAST=0
        NCURR=INT(TEMPS(1)+0.01)
        IF(NCURR.EQ.0)THEN
          NLAST=0
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31883)
31883     FORMAT('****** FROM NEXT EQUIVALENCE RELATION--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31885)
31885     FORMAT('       EQUIVALENCE RELATION SEQUENCE RESET.')
          CALL DPWRST('XXX','BUG ')
          GOTO31896
        ELSEIF(NCURR.LT.1 .OR. NCURR.GT.MAXOBV)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31883)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31886)MAXOBV
31886     FORMAT('       VALUE OF N EXCEEDS MAXIMUM ALLOWABLE ',
     1           '(',I10,')')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31887)
31887     FORMAT('       OR IS LESS THAN 1.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31888)NCURR
31888     FORMAT('       THE VALUE OF N IS ',I8)
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          IH='LAST'
          IH2='SEQU'
          VALUE0=REAL(ILAST)
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
          GOTO19000
        ELSE
          IF(NCURR.NE.NLAST)THEN
            MTC=.FALSE.
            CALL NEXEQU(NCURR,NC,ITEMP2,ITEMP1,MTC)
            NITEMX=NCURR
            DO31890I=1,NITEMX
              TEMP1(I)=REAL(ITEMP1(I))
31890       CONTINUE
            DO31898I=1,NC
              TEMP2(I)=REAL(ITEMP2(I))
31898       CONTINUE
            NLAST=NCURR
          ELSE
            MTC=.TRUE.
            DO31891I=1,NS2
              ITEMP1(I)=INT(TEMP3(I)+0.01)
31891       CONTINUE
            DO31892I=1,NS3
              ITEMP2(I)=INT(TEMP2(I)+0.01)
31892       CONTINUE
            NITEMX=NS2
            CALL NEXEQU(NCURR,NC,ITEMP1,ITEMP2,MTC)
            NITEMX=NCURR
            DO31893I=1,NITEMX
              TEMP1(I)=REAL(ITEMP2(I))
31893       CONTINUE
            DO31894I=1,NC
              TEMP2(I)=REAL(ITEMP1(I))
31894       CONTINUE
            NLAST=NCURR
            IF(.NOT.MTC)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31883)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31895)
31895         FORMAT('       THIS IS THE LAST EQUIVALENCE RELATION ',
     1               'IN THE SEQUENCE.')
              CALL DPWRST('XXX','BUG ')
              NLAST=0
              ILAST=1
            ENDIF
          ENDIF
        ENDIF
C
31896   CONTINUE
        IH='LAST'
        IH2='SEQU'
        VALUE0=REAL(ILAST)
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
        IFOUND='YES'
        IERROR='NO'
C
      ELSEIF(ICASL7.EQ.'NEYT')THEN
        ILAST=0
        NCURR=INT(TEMPS(1)+0.01)
        NS2=NIRIGH(2)
        NS3=NIRIGH(3)
        IF(NCURR.EQ.0)THEN
          NLAST=0
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31903)
31903     FORMAT('****** FROM NEXT YOUNG TABLEAUX--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31905)
31905     FORMAT('       YOUNG TABLEAUX SEQUENCE RESET.')
          CALL DPWRST('XXX','BUG ')
          GOTO31929
        ELSEIF(NCURR.LT.1 .OR. NCURR.GT.MAXOBV)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31903)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31906)MAXOBV
31906     FORMAT('       VALUE OF N EXCEEDS MAXIMUM ALLOWABLE ',
     1           '(',I10,')')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31907)
31907     FORMAT('       OR IS LESS THAN 1.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31908)NCURR
31908     FORMAT('       THE VALUE OF N IS ',I8)
          CALL DPWRST('XXX','BUG ')
          IFOUND='YES'
          IERROR='YES'
          IH='LAST'
          IH2='SEQU'
          VALUE0=REAL(ILAST)
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
          GOTO19000
        ELSE
          IF(NCURR.NE.NLAST)THEN
            MTC=.FALSE.
            ISUM1=0
            DO31910I=1,NS2
              ITEMP1(I)=INT(TEMP2(I)+0.01)
              ISUM1=ISUM1+ITEMP1(I)
31910       CONTINUE
            IF(ISUM1.NE.NCURR)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31903)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31926)
31926         FORMAT('       THE SUM OF THE LAMBDA VECTOR DOES NOT ',
     1               'NOT EQUAL N.')
              CALL DPWRST('XXX','BUG ')
              IFOUND='YES'
              IERROR='YES'
              IH='LAST'
              IH2='SEQU'
              VALUE0=REAL(ILAST)
              CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
              GOTO19000
            ENDIF
            IF(NS2.LT.NCURR)THEN
              DO31911I=NS1+1,NCURR
                ITEMP1(I)=0
31911         CONTINUE
            ENDIF
            DO31912I=1,NCURR
              ITEMP2(I)=0
31912       CONTINUE
            CALL NEXYTB(NCURR,ITEMP1,ITEMP2,MTC)
            NITEMX=NCURR
            DO31913I=1,NITEMX
              TEMP1(I)=REAL(ITEMP2(I))
31913       CONTINUE
            NLAST=NCURR
          ELSE
            MTC=.TRUE.
            DO31915I=1,NS2
              ITEMP1(I)=INT(TEMP2(I)+0.01)
31915       CONTINUE
            DO31916I=1,NS3
              ITEMP2(I)=INT(TEMP3(I)+0.01)
31916       CONTINUE
            NITEMX=NS2
            CALL NEXYTB(NCURR,ITEMP1,ITEMP2,MTC)
            NITEMX=NCURR
            DO31918I=1,NITEMX
              TEMP1(I)=REAL(ITEMP2(I))
31918       CONTINUE
            NLAST=NCURR
            IF(.NOT.MTC)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31903)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31921)
31921         FORMAT('       THIS IS THE LAST YOUNG TABLEAUX ',
     1               'IN THE SEQUENCE.')
              CALL DPWRST('XXX','BUG ')
              NLAST=0
              ILAST=1
            ENDIF
          ENDIF
        ENDIF
C
31929   CONTINUE
        IH='LAST'
        IH2='SEQU'
        VALUE0=REAL(ILAST)
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGA3,IERROR)
        IFOUND='YES'
        IERROR='NO'
C
      ELSEIF(ICASL7.EQ.'CYTB')THEN
        NS1=NIRIGH(1)
        DO31931I=1,NS1
          ITEMP1(I)=INT(TEMP1(I)+0.01)
31931   CONTINUE
C
        CALL CONYTB(ITEMP1,ITEMP2,ITEMP3,NS1,
     1              TEMP2,TEMP3,
     1              IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')THEN
          IFOUND='YES'
          GOTO9000
        ENDIF
C
        NITEMX=NS1
        DO31933I=1,NITEMX
          TEMP1(I)=REAL(ITEMP2(I))
          TEMP2(I)=REAL(ITEMP3(I))
31933   CONTINUE
C
      ELSEIF(ICASL7.EQ.'YTHL')THEN
        NS1=NIRIGH(1)
        DO31941I=1,NS1
          ITEMP1(I)=INT(TEMP1(I)+0.01)
          ITEMP2(I)=INT(TEMP2(I)+0.01)
31941   CONTINUE
C
        CALL YTBHOO(ITEMP1,ITEMP2,ITEMP3,NS1,
     1              ITEMP4,ITEMP5,
     1              IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')THEN
          IFOUND='YES'
          GOTO9000
        ENDIF
C
        NITEMX=NS1
        DO31943I=1,NITEMX
          TEMP1(I)=REAL(ITEMP4(I))
31943   CONTINUE
C
      ELSEIF(ICASL7.EQ.'BINN'.OR.ICASL7.EQ.'BINR')THEN
        IRELAT='OFF'
        IF(ICASL7.EQ.'BINR')IRELAT='ON'
        CLWID=CLWIDT(1)
        XSTART=CLLIMI(1)
        XSTOP=CLLIMI(2)
        CALL DPBIN(TEMP1,NS1,IRELAT,CLWID,XSTART,XSTOP,IRHSTG,
     1             TEMP2,MAXOBV,IHSTCW,IHSTOU,
     1             TEMP91,TEMP92,NITEMX,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11791I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11791   CONTINUE
      ELSEIF(ICASL7.EQ.'CBIN'.OR.ICASL7.EQ.'CBIR')THEN
        IRELAT='OFF'
        IF(ICASL7.EQ.'CBIR')IRELAT='ON'
        CLWID=CLWIDT(1)
        XSTART=CLLIMI(1)
        XSTOP=CLLIMI(2)
        CALL DPBINC(TEMP1,NS1,IRELAT,CLWID,XSTART,XSTOP,IRHSTG,
     1              TEMP2,MAXOBV,IHSTCW,IHSTOU,
     1              TEMP91,TEMP92,NITEMX,TEMP3,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11792I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11792   CONTINUE
        DO11793I=1,NS1
          TEMP91(I)=TEMP3(I)
11793   CONTINUE
      ELSEIF(ICASL7.EQ.'BINP'.OR.ICASL7.EQ.'BIRP')THEN
        IRELAT='OFF'
        IF(ICASL7.EQ.'BIRP')IRELAT='ON'
        CLWID=CLWIDT(1)
        XSTART=CLLIMI(1)
        XSTOP=CLLIMI(2)
        CALL DPBINP(TEMP1,NS1,IRELAT,CLWID,XSTART,XSTOP,IRHSTG,
     1             TEMP2,TEMP3,TEMP4,TEMP5,MAXOBV,IHSTCW,
     1             TEMP91,TEMP92,NITEMX,IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11794I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11794   CONTINUE
      ELSEIF(ICASL7.EQ.'ASHR'.OR.ICASL7.EQ.'ASHC')THEN
        IRELAT='ON'
        IF(ICASL7.EQ.'ASHC')IRELAT='OFF'
        CLWID=CLWIDT(1)
        XSTART=CLLIMI(1)
        XSTOP=CLLIMI(2)
C
        IHP='M   '
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          M=8
        ELSE
          M=INT(VALUE(ILOCP)+0.5)
          IF(M.LE.0)M=1
          IF(M.GT.64)M=64
        ENDIF
C
        CALL DPBINA(TEMP1,NS1,CLWID,XSTART,XSTOP,M,
     1              TEMP1,MAXOBV,
     1              IRELAT,IASHWT,IHSTCW,
     1              TEMP91,TEMP92,NITEMX,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11796I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11796   CONTINUE
      ELSEIF(ICASL7.EQ.'PEAK'.OR.ICASL7.EQ.'PEAR')THEN
        CALL DPPEAK(TEMP1,TEMP2,NS1,
     1             TEMP3,TEMP4,TEMP5,NITEMX,IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        IF(ICASL7.EQ.'PEAK')THEN
          DO11798I=1,NITEMX
            TEMP1(I)=TEMP3(I)
            TEMP2(I)=TEMP4(I)
11798     CONTINUE
        ELSE
          DO11799I=1,NITEMX
            TEMP1(I)=TEMP5(I)
11799     CONTINUE
        ENDIF
      ELSEIF(ICASL7.EQ.'EQUF')THEN
        CALL EMPQUA(TEMP1,NS1,IWRITE,TEMP91,TEMP92,NITEMX,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11701I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11701   CONTINUE
      ELSEIF(ICASL7.EQ.'IQUF' .OR. ICASL7.EQ.'TIQF')THEN
        CALL EMPTIQ(TEMP1,NS1,IWRITE,TEMP91,TEMP92,TEMP3,TEMP4,NITEMX,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11703I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          IF(ICASL7.EQ.'TIQF')TEMP1(I)=TEMP92(I)
          TEMP2(I)=TEMP3(I)
11703   CONTINUE
      ELSEIF(ICASL7.EQ.'LAPT')THEN
CCCCC   ITCASE='LT'
CCCCC   CALL LAPTRA(TEMP1,NS1,ITCASE,IWRITE,TEMP2,NITEMX,
CCCCC1              IBUGA3,IERROR)
CCCCC   IF(IERROR.EQ.'YES')GOTO19000
CCCCC   DO11815I=1,NITEMX
CCCCC     TEMP1(I)=TEMP2(I)
C11815   CONTINUE
      ELSEIF(ICASL7.EQ.'ILAT')THEN
CCCCC   ITCASE='ILT'
CCCCC   CALL LAPTRA(TEMP1,NS1,ITCASE,IWRITE,TEMP2,NITEMX,
CCCCC               IBUGA3,IERROR)
CCCCC   IF(IERROR.EQ.'YES')GOTO19000
CCCCC   DO11825I=1,NITEMX
CCCCC     TEMP1(I)=TEMP2(I)
C11825  CONTINUE
      ELSEIF(ICASL7.EQ.'VSCO')THEN
        CALL VSCORE(TEMP1,NS1,IWRITE,TEMP3,TEMP4,MAXOBV,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11713I=1,NS1
          TEMP1(I)=TEMP3(I)
11713   CONTINUE
      ELSEIF(ICASL7.EQ.'SSCO')THEN
        CALL SSCORE(TEMP1,NS1,IWRITE,TEMP3,IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11714I=1,NS1
          TEMP1(I)=TEMP3(I)
11714   CONTINUE
      ELSEIF(ICASL7.EQ.'ASCO')THEN
        CALL ASCORE(TEMP1,NS1,IWRITE,TEMP3,TEMP4,MAXOBV,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11716I=1,NS1
          TEMP1(I)=TEMP3(I)
11716   CONTINUE
      ELSEIF(ICASL7.EQ.'MSCO')THEN
        CALL MSCORE(TEMP1,NS1,IWRITE,TEMP3,TEMP4,MAXOBV,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11717I=1,NS1
          TEMP1(I)=TEMP3(I)
11717   CONTINUE
      ELSEIF(ICASL7.EQ.'DSCO')THEN
        CALL DSCORE(TEMP1,NS1,IWRITE,TEMP3,TEMP4,MAXOBV,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11718I=1,NS1
          TEMP1(I)=TEMP3(I)
11718   CONTINUE
      ELSEIF(ICASL7.EQ.'KSCO')THEN
        CALL KSCORE(TEMP1,NS1,IWRITE,TEMP3,TEMP4,MAXOBV,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11719I=1,NS1
          TEMP1(I)=TEMP3(I)
11719   CONTINUE
      ELSEIF(ICASL7.EQ.'CSCO')THEN
        CALL CSCORE(TEMP1,TEMP2,NS1,IWRITE,TEMP3,TEMP4,TEMP5,TEMP6,
     1              MAXOBV,IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11720I=1,NS1
          TEMP1(I)=TEMP3(I)
11720   CONTINUE
      ELSEIF(ICASL7.EQ.'PSCO')THEN
        CALL PSCORE(TEMP1,NS1,TEMP2,NS2,IWRITE,TEMP3,TEMP4,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11721I=1,NS1
          TEMP1(I)=TEMP3(I)
          TEMP2(I)=TEMP4(I)
11721   CONTINUE
      ELSEIF(ICASL7.EQ.'COAD'.OR.ICASL7.EQ.'COSU'.OR.
     1       ICASL7.EQ.'COMU'.OR.ICASL7.EQ.'CODI'.OR.
     1       ICASL7.EQ.'COEX'.OR.ICASL7.EQ.'COSR'.OR.
     1       ICASL7.EQ.'CORO'.OR.ICASL7.EQ.'COR1'.OR.
     1       ICASL7.EQ.'COCO')THEN
        IF(ICASL7.EQ.'COR1')THEN
          DO11832I=1,NS1
            TEMP2(I)=0.0
11832     CONTINUE
        ENDIF
        IACASE=ICASL7
        CALL COMARI(TEMP1,TEMP2,TEMP3,TEMP4,NS1,IACASE,IWRITE,
     1              TEMP91,TEMP92,NITEMX,SCAL91,ITYP91,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        IF(ITYP91.EQ.'SCAL')GOTO11839
        DO11835I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11835   CONTINUE
        NITEMX=NINEW
        IF(ICASL7.EQ.'CORO')NITEMX=NITEMX-1
        IF(ICASL7.EQ.'COR1')NITEMX=NITEMX-1
11839   CONTINUE
      ELSEIF(ICASL7.EQ.'POAD'.OR.ICASL7.EQ.'POSU'.OR.
     1       ICASL7.EQ.'POMU'.OR.ICASL7.EQ.'PODI'.OR.
     1       ICASL7.EQ.'POSQ'.OR.ICASL7.EQ.'POSR'.OR.
     1       ICASL7.EQ.'POGC'.OR.ICASL7.EQ.'POLC'.OR.
     1       ICASL7.EQ.'POEV')THEN
        IACASE=ICASL7
        CALL POLARI(TEMP1,TEMP2,TEMP2,TEMP2,NS1,NS2,IACASE,IWRITE,
     1              TEMP91,TEMP92,NITEMX,NITE2X,SCAL91,ITYP91,
     1              DTEMP1,DTEMP2,DTEMP3,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        IF(ITYP91.EQ.'SCAL')GOTO11849
        DO11844I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11844   CONTINUE
        IF(ICASL7.EQ.'PODI')THEN
          DO11846I=1,NITE2X
            TEMP2(I)=TEMP92(I)
11846     CONTINUE
        ENDIF
11849   CONTINUE
      ELSEIF(ICASL7.EQ.'VEAD'.OR.ICASL7.EQ.'VESU'.OR.
     1       ICASL7.EQ.'VEDP'.OR.ICASL7.EQ.'VECP'.OR.
     1       ICASL7.EQ.'VELE'.OR.ICASL7.EQ.'VEDI'.OR.
     1       ICASL7.EQ.'VEAN')THEN
        IACASE=ICASL7
        CALL VECARI(TEMP1,TEMP2,NS1,IACASE,IWRITE,
     1              TEMP91,NITEMX,SCAL91,ITYP91,IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        IF(ITYP91.EQ.'SCAL')GOTO11859
        DO11855I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11855   CONTINUE
11859   CONTINUE
      ELSEIF(ICASL7.EQ.'SEUN'.OR.ICASL7.EQ.'SEIN'.OR.
     1       ICASL7.EQ.'SECO'.OR.ICASL7.EQ.'SECA'.OR.
     1       ICASL7.EQ.'SECP'.OR.ICASL7.EQ.'SEEL')THEN
        IACASE=ICASL7
        CALL SETARI(TEMP1,TEMP2,NS1,NS2,IACASE,IWRITE,
     1              TEMP91,TEMP92,NITEMX,SCAL91,ITYP91,
     1              TEMP21,TEMP22,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        IF(ITYP91.EQ.'SCAL')GOTO11869
        DO11865I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11865   CONTINUE
11869   CONTINUE
      ELSEIF(ICASL7.EQ.'LOAN'.OR.ICASL7.EQ.'LOOR'.OR.
     1       ICASL7.EQ.'LONA'.OR.ICASL7.EQ.'LONO'.OR.
     1       ICASL7.EQ.'LOIM'.OR.ICASL7.EQ.'LOEQ'.OR.
     1       ICASL7.EQ.'LONT'.OR.ICASL7.EQ.'LOXO')THEN
        IACASE=ICASL7
        CALL LOGARI(TEMP1,TEMP2,NS1,IACASE,IWRITE,
     1              TEMP91,NITEMX,SCAL91,ITYP91,IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        IF(ITYP91.EQ.'SCAL')GOTO11879
        DO11875I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11875   CONTINUE
11879   CONTINUE
      ELSEIF(ICASL7.EQ.'FRAC')THEN
        IPROD=4*NS1
        IF(IPROD.GT.MAXOBV)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11511)
11511     FORMAT('***** ERROR 11511 IN DPMATC--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11512)
11512     FORMAT('      THE NEW FRACTAL VARIABLES WOULD BE ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11513)
11513     FORMAT('      TOO LONG (THAT IS, WOULD EXCEED ',I8,')')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        CALL FRACTA(TEMP1,TEMP2,NS1,IWRITE,
     1              TEMP91,TEMP92,NITEMX,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO11519I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
11519   CONTINUE
      ELSEIF(ICASL7.EQ.'BOOT')THEN
        CALL BOOTSS(TEMP1,TEMP2,NS1,IWRITE,
     1              TEMP91,NITEMX,
     1              TEMP21,TEMP22,
     1              IBUGA3,ISUBRO,IERROR)
        DO11525I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11525   CONTINUE
      ELSEIF(ICASL7.EQ.'SUBS')THEN
        CALL SUBSAM(TEMP1,TEMP2,NS1,NS2,IWRITE,
     1              TEMP91,NITEMX,IBUGA3,ISUBRO,IERROR)
        DO11535I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11535   CONTINUE
      ELSEIF(ICASL7.EQ.'NNE1' .OR. ICASL7.EQ.'NNE2' .OR.
     1       ICASL7.EQ.'NNE3' .OR. ICASL7.EQ.'NNE4')THEN
        CALL NEARNE(TEMP1,TEMP2,NS1,TEMP91,TEMP92,
     1              IBUGA3,ISUBRO,IERROR)
        NITEMX=NS1
        IF(ICASL7.EQ.'NNE1' .OR. ICASL7.EQ.'NNE4')THEN
          DO11541I=1,NITEMX
            TEMP1(I)=TEMP91(I)
11541     CONTINUE
        ELSEIF(ICASL7.EQ.'NNE2')THEN
          DO11543I=1,NITEMX
            TEMP1(I)=TEMP92(I)
11543     CONTINUE
        ELSEIF(ICASL7.EQ.'NNE3')THEN
          DO11544I=1,NITEMX
            TEMP1(I)=TEMP91(I)
            TEMP2(I)=TEMP92(I)
11544     CONTINUE
        ENDIF
      ELSEIF(ICASL7.EQ.'FNNE' .OR. ICASL7.EQ.'ANNE')THEN
        ICASET=1
        IF(ICASL7.EQ.'ANNE')ICASET=2
        CALL NEARN2(TEMP1,TEMP2,NS1,TEMP3,TEMP4,NS3,ICASET,MAXOBV,
     1              TEMP24,TEMP5,TEMP7,TEMP8,TEMP25,
     1              TEMP91,TEMP92,TEMP21,TEMP22,TEMP23,NITEMX,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        IF(ICASL7.EQ.'FNNE')THEN
          DO11644I=1,NITEMX
            TEMP1(I)=TEMP91(I)
            TEMP2(I)=TEMP92(I)
            TEMP91(I)=TEMP21(I)
11644     CONTINUE
        ELSEIF(ICASL7.EQ.'ANNE')THEN
          DO11646I=1,NITEMX
            TEMP1(I)=TEMP91(I)
            TEMP2(I)=TEMP92(I)
            TEMP91(I)=TEMP21(I)
            TEMP92(I)=TEMP22(I)
            TEMP5(I)=TEMP23(I)
11646     CONTINUE
          NS4=NITEMX
          NS5=NITEMX
        ENDIF
      ELSEIF(ICASL7.EQ.'GEMU')THEN
        IACASE=ICASL7
CCCCC   CALL GENARI(TEMP1,TEMP2,TEMP3,TEMP4,NS1,NS3,ICASE,MAXOBV,
CCCCC1              TEMP91,TEMP92,NITEMX,NITE2X,SCAL91,ITYP91,
CCCCC1              IBUGA3,ISUBRO,IERROR)
        CALL GENARI(TEMP1,TEMP2,TEMP2,TEMP2,NS1,NS2,ICASE,IWRITE,
     1              TEMP91,TEMP92,NITEMX,NITE2X,SCAL91,ITYP91,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        IF(ITYP91.EQ.'SCAL')GOTO11899
        DO11895I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11895   CONTINUE
11899   CONTINUE
      GOTO11900
C
      ELSEIF(ICASL7.EQ.'JAIN')THEN
        CALL JACKIN(TEMPS(1),TEMPS(2),IWRITE,
     1              TEMP91,NITEMX,IBUGA3,ISUBRO,IERROR)
        DO11545I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11545   CONTINUE
      ELSEIF(ICASL7.EQ.'FRAW')THEN
        CALL DPRAW(TEMP1,TEMP2,NS1,IWRITE,MAXOBV,TEMP3,NITEMX,
     1             IBUGA3,IERROR)
        IF(IERROR.EQ.'NO')THEN
          DO11555I=1,NITEMX
            TEMP1(I)=TEMP3(I)
11555     CONTINUE
        ENDIF
      ELSEIF(ICASL7.EQ.'CUSA' .OR. ICASL7.EQ.'CU1A')THEN
        ICASE='TWOS'
        IF(ICASL7.EQ.'CU1A')ICASE='ONES'
        CALL CUSARL(TEMP1,NS1,IWRITE,TEMP2,ICASE,IBUGA3,IERROR)
        DO21019I=1,NS1
          TEMP1(I)=TEMP2(I)
21019   CONTINUE
      ELSEIF(ICASL7.EQ.'SRTB')THEN
        CALL SRTMEA(TEMP1,TEMP2,NS1,ICASS7,ISTARA,
     1              MAXOBV,
     1              TEMP12,TEMP4,TEMP5,TEMP6,TEMP92,
     1              TEMP27,TEMP28,
     1              TEMP6(2*MAXOBV+1),TEMP6(3*MAXOBV+1),
     1              TEMP91,TEMP3,NUMSE1,
     1              ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1              DTEMP1,DTEMP2,DTEMP3,
     1              ISUBRO,IBUGA3,IERROR)
        DO21031I=1,NS1
          TEMP1(I)=TEMP91(I)
21031   CONTINUE
        DO21033I=1,NUMSE1
          TEMP2(I)=TEMP3(I)
21033   CONTINUE
      ELSEIF(ICASL7.EQ.'MNRK'.OR.ICASL7.EQ.'MDRK')THEN
        CALL GRPRNK(TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,TEMP8,
     1              NS1,NUMVAR,MAXOBV,ICASE,
     1              TEMP21,TEMP22,TEMP23,TEMP24,
     1              TEMP25,TEMP26,TEMP12,TEMPC1,
     1              ITEMP1,
     1              TEMP92,TEMP9,TEMP6(MAXOBV+1),TEMP6(2*MAXOBV+1),
     1              TEMP91,NITEMX,
     1              ISUBRO,IBUGA3,IERROR)
        NS1=NITEMX
        DO21034II=1,NITEMX
          TEMP1(II)=TEMP91(II)
21034   CONTINUE
      ELSEIF(ICASL7.EQ.'STAN'.OR.ICASL7.EQ.'ZSCO'.OR.
     1       ICASL7.EQ.'USCO'.OR.ICASL7.EQ.'LSTA'.OR.
     1       ICASL7.EQ.'LSST'.OR.ICASL7.EQ.'CRTA'.OR.
     1       ICASL7.EQ.'CTCU'.OR.
     1       ICASL7(1:2).EQ.'CT')THEN
C
        IF(ICASL7.EQ.'CTCU')THEN
          ICASE='CTCU'
          ICASE2=ICASL7
        ELSE
          ICASE='STAN'
          ICASE2='    '
          IF(ICASL7.EQ.'LSTA')ICASE='LOCA'
          IF(ICASL7.EQ.'LSST')ICASE='SCAL'
          IF(ICASL7.EQ.'ZSCO')ICASE='ZSCO'
          IF(ICASL7.EQ.'USCO')ICASE='USCO'
          IF(ICASL7(1:2).EQ.'CT')THEN
            ICASE='CRTA'
            ICASE2=ICASL7
          ENDIF
        ENDIF
C
        IF(ISTANR.LE.0 .OR. ICASS7(1:3).EQ.'GRO' .OR.
     1     ICASS7.EQ.'NUMB')THEN
          IF(ICASS7(1:3).EQ.'GRO')ISTANR=0
          IF(ICASS7.EQ.'NUMB')ISTANR=0
          CALL GRPSTA(TEMP1,TEMP1,TEMP1,
     1                TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,NS1,
     1                ISTANR,NUMVAR,
     1                ICASE,ICASE2,ICASS7,ISTARA,MAXOBV,
     1                TEMP21,TEMP22,TEMP23,TEMP24,
     1                TEMP6(MAXOBV+1),TEMP6(MAXOBV+2),
     1                TEMP26,TEMP12,TEMP12(MAXOBV+1),
     1                TEMPC1,TEMP25,TEMP8,TEMP27,TEMP28,
     1                TEMP91,
     1                ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                DTEMP1,DTEMP2,DTEMP3,
     1                ISUBRO,IBUGA3,IERROR)
        ELSEIF(ISTANR.LE.1)THEN
          CALL GRPSTA(TEMP1,TEMP1,TEMP1,
     1                TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,NS1,
     1                ISTANR,NUMVAR,
     1                ICASE,ICASE2,ICASS7,ISTARA,MAXOBV,
     1                TEMP21,TEMP22,TEMP23,TEMP24,
     1                TEMP6(MAXOBV+1),TEMP6(MAXOBV+2),
     1                TEMP26,TEMP12,TEMP12(MAXOBV+1),
     1                TEMPC1,TEMP25,TEMP8,TEMP27,TEMP28,
     1                TEMP91,
     1                ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                DTEMP1,DTEMP2,DTEMP3,
     1                ISUBRO,IBUGA3,IERROR)
        ELSEIF(ISTANR.LE.2)THEN
          CALL GRPSTA(TEMP1,TEMP2,TEMP2,
     1                TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,TEMP8,NS1,
     1                ISTANR,NUMVAR,
     1                ICASE,ICASE2,ICASS7,ISTARA,MAXOBV,
     1                TEMP21,TEMP22,TEMP23,TEMP24,
     1                TEMP6(MAXOBV+1),TEMP6(MAXOBV+2),
     1                TEMP26,TEMP12,TEMP12(MAXOBV+1),
     1                TEMPC1,TEMP25,TEMP6(MAXOBV+3),
     1                TEMP27,TEMP28,
     1                TEMP91,
     1                ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                DTEMP1,DTEMP2,DTEMP3,
     1                ISUBRO,IBUGA3,IERROR)
        ELSEIF(ISTANR.LE.3)THEN
          CALL GRPSTA(TEMP1,TEMP2,TEMP3,
     1                TEMP4,TEMP5,TEMP6,TEMP7,TEMP8,TEMP9,NS1,
     1                ISTANR,NUMVAR,
     1                ICASE,ICASE2,ICASS7,ISTARA,MAXOBV,
     1                TEMP21,TEMP22,TEMP23,TEMP24,
     1                TEMP6(MAXOBV+1),TEMP6(MAXOBV+2),
     1                TEMP26,TEMP12,TEMP12(MAXOBV+1),
     1                TEMPC1,TEMP25,TEMP6(MAXOBV+3),
     1                TEMP27,TEMP28,
     1                TEMP91,
     1                ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                DTEMP1,DTEMP2,DTEMP3,
     1                ISUBRO,IBUGA3,IERROR)
        ENDIF
        DO21029I=1,NS1
          TEMP1(I)=TEMP91(I)
21029   CONTINUE
C
C       2018/07: IF SUBSET CLAUSE WAS USED, WANT NITEMX TO BE SIZE OF
C                ORIGINAL VARIABLE.  BUT USE "SET LET CROSS TABULATE
C                <EXPAND/COLLAPSE>" CONTROL THIS.
C
        NITEMX=NS1
        IF(ICTALT.EQ.'EXPA')THEN
          NITEMX=NIRIGH(1)
        ELSEIF(ICASL7.EQ.'ZSCO' .OR. ICASL7.EQ.'USCO' .OR.
     1         ICASL7.EQ.'STAN' .OR. ICASL7.EQ.'LSTA' .OR.
     1         ICASL7.EQ.'LSST' .OR. ICASL7.EQ.'LOCA' .OR.
     1         ICASL7.EQ.'SCAL')THEN
          NITEMX=NIRIGH(1)
        ENDIF
C
      ELSEIF(ICASL7.EQ.'MOVI')THEN
        IF(FILWID.EQ.CPUMIN)IFILWI=3
        IF(FILWID.NE.CPUMIN)IFILWI=INT(FILWID+0.5)
C
        CALL MOVSTA(TEMP1,TEMP2,TEMP3,NS1,NUMVAR,ICASS7,ISTARA,MAXOBV,
     1              ISEED,IQUAME,IQUASE,PSTAMV,
     1              IMOVEP,IMOVDI,IFILWI,
     1              TEMP21,TEMP22,TEMP23,TEMP27,TEMP28,
     1              ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1              DTEMP1,DTEMP2,DTEMP3,
     1              TEMP91,NOUT,
     1              ISUBRO,IBUGA3,IERROR)
        NS1=NOUT
        NITEMX=NOUT
        DO21039I=1,NS1
          TEMP1(I)=TEMP91(I)
21039   CONTINUE
      ELSEIF(ICASL7.EQ.'WIND')THEN
C
C       EXTRACT THE SIZE OF THE INTERVAL
C
        IHREPL='NSIZ'
        IHREP2='E   '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHREPL,IHREP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,
     1              NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
        IF(IERROR.EQ.'YES')THEN
          IF(NS1.LE.1000)THEN
          ELSE
            NSIZE=NS1/100
          ENDIF
        ELSE
          NSIZE=INT(VALUE(ILOC)+0.5)
        ENDIF
C
        CALL WINSTA(TEMP1,TEMP2,TEMP3,NS1,NUMVAR,ICASS7,ISTARA,MAXOBV,
     1              ISEED,NSIZE,
     1              TEMP21,TEMP22,TEMP23,TEMP27,TEMP28,
     1              ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1              DTEMP1,DTEMP2,DTEMP3,
     1              TEMP91,NOUT,
     1              ISUBRO,IBUGA3,IERROR)
        NS1=NOUT
        NITEMX=NOUT
        DO21037I=1,NS1
          TEMP1(I)=TEMP91(I)
21037   CONTINUE
      ELSEIF(ICASL7.EQ.'CUMU')THEN
C
        CALL CUMSTA(TEMP1,TEMP2,TEMP3,NS1,NUMVAR,ICASS7,ISTARA,MAXOBV,
     1              ISEED,ICSTSV,
     1              TEMP21,TEMP22,TEMP23,TEMP27,TEMP28,
     1              ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1              DTEMP1,DTEMP2,DTEMP3,
     1              TEMP91,NOUT,
     1              ISUBRO,IBUGA3,IERROR)
        NS1=NOUT
        NITEMX=NOUT
        DO21038I=1,NS1
          TEMP1(I)=TEMP91(I)
21038   CONTINUE
      ELSEIF(ICASL7.EQ.'EN')THEN
        IWRITE='OFF'
        CALL EN(TEMP1,TEMP2,TEMPS(3),TEMPS(4),NS1,IWRITE,TEMP91,
     1          IBUGA3,ISUBRO,IERROR)
C
        DO21041I=1,NS1
          TEMP1(I)=TEMP91(I)
21041   CONTINUE
      ELSEIF(ICASL7.EQ.'PA')THEN
        IWRITE='OFF'
        CALL PA(TEMP1,NS1,TEMPS(2),TEMPS(3),IWRITE,TEMP91,
     1          IBUGA3,ISUBRO,IERROR)
C
        DO21042I=1,NS1
          TEMP1(I)=TEMP91(I)
21042   CONTINUE
      ELSEIF(ICASL7.EQ.'DIPE')THEN
        IWRITE='OFF'
        CALL DIPERC(TEMP1,NS1,TEMPS(2),IWRITE,TEMP91,
     1              IBUGA3,ISUBRO,IERROR)
C
        DO21044I=1,NS1
          TEMP1(I)=TEMP91(I)
21044   CONTINUE
      ELSEIF(ICASL7.EQ.'IZSC' .OR. ICASL7.EQ.'ZPRI' .OR.
     1       ICASL7.EQ.'IZET' .OR. ICASL7.EQ.'EZPL' .OR.
     1       ICASL7.EQ.'EZMI')THEN
        XREF=CPUMIN
        UREF=CPUMIN
        SIGMA=CPUMIN
        IF(ICASL7.EQ.'IZSC')THEN
          ICASET=1
          XREF=TEMPS(2)
          SIGMA=TEMPS(3)
        ELSEIF(ICASL7.EQ.'ZPRI')THEN
          ICASET=2
          XREF=TEMPS(2)
          SIGMA=TEMPS(3)
          UREF=TEMPS(4)
        ELSEIF(ICASL7.EQ.'IZET')THEN
          ICASET=3
          XREF=TEMPS(3)
          UREF=TEMPS(4)
        ELSEIF(ICASL7.EQ.'EZMI')THEN
          ICASET=4
          XREF=TEMPS(3)
          UREF=TEMPS(4)
        ELSEIF(ICASL7.EQ.'EZPL')THEN
          ICASET=5
          XREF=TEMPS(3)
          UREF=TEMPS(4)
        ENDIF
        IWRITE='OFF'
        CALL ZSCORE(TEMP1,TEMP2,XREF,UREF,SIGMA,NS1,ICASET,IWRITE,
     1              TEMP91,
     1              IBUGA3,ISUBRO,IERROR)
C
        DO21043I=1,NS1
          TEMP1(I)=TEMP91(I)
21043   CONTINUE
      ELSEIF(ICASL7.EQ.'INSE')THEN
        AVAL=TEMPS(3)
        NLOC=INT(AVAL+0.1)
        CALL INSERT(TEMP1,NS1,TEMP2,NS2,NLOC,IWRITE,TEMP9,NOUT,MAXOBV,
     1              IINSOW,IBUGA3,ISUBRO,IERROR)
        DO21047I=1,NOUT
          TEMP1(I)=TEMP9(I)
21047   CONTINUE
        NITEMX=NOUT
      ELSEIF(ICASL7.EQ.'WINS')THEN
C
C        2012/10: FOR WINSORIZING, CAN SPECIFY EITHER A SPECIFIC NUMBER
C                 TO WINSORIZE OR A PERCENTAGE TO WINSORIZE.  CHECK FOR
C                 SPECIFIC NUMBER FIRST AND IF NOT SPECIFIED, CHECK FOR A
C                 PERCENTAGE.
C
        NTRIM1=-1
        NTRIM2=-1
        P1=-99.0
        P2=-99.0
C
        IHP='NTRI'
        IHP2='M1  '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'NO')THEN
          NTRIM1=INT(VALUE(ILOCP)+0.1)
          IF(NTRIM1.LT.0)NTRIM1=0
        ENDIF
C
        IHP='NTRI'
        IHP2='M2  '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'NO')THEN
          NTRIM2=INT(VALUE(ILOCP)+0.1)
          IF(NTRIM2.LT.0)NTRIM2=0
        ENDIF
C
        IF(NTRIM1.LE.0)THEN
          IHP='P1  '
          IHP2='    '
          IHWUSE='P'
          MESSAG='YES'
          CALL CHECKN(IHP,IHP2,IHWUSE,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1                ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
          IF(PROP1.LT.0.0 .OR. PROP1.GT.100.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21061)
21061       FORMAT('***** ERROR IN DPMATC--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21062)
21062       FORMAT('      THE PROPORTION FOR WINSORIZING BELOW MUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21063)
21063       FORMAT('      BE BETWEEN 0 AND 100, BUT WAS NOT.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21064)PROP1
21064       FORMAT('      PARAMETER P1 = LOWER PROPORTION = ',G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21065)
21065       FORMAT('      USE THE LET COMMAND TO PRE-DEFINE P1 AS IN')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21066)
21066       FORMAT('      LET P1 = 25')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            PROP1=VALUE(ILOCP)
          ENDIF
        ENDIF
C
        IF(NTRIM2.LE.0)THEN
          IHP='P2  '
          IHP2='    '
          IHWUSE='P'
          MESSAG='YES'
          CALL CHECKN(IHP,IHP2,IHWUSE,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1                ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
          IF(PROP2.LT.0.0 .OR. PROP2.GT.100.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21061)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21072)
21072       FORMAT('      THE PROPORTION FOR WINSORIZING ABOVE MUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21063)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21074)PROP2
21074       FORMAT('      PARAMETER P2 = LOWER PROPORTION = ',G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21075)
21075       FORMAT('      USE THE LET COMMAND TO PRE-DEFINE P2 AS IN')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,21076)
21076       FORMAT('      LET P2 = 25')
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ELSE
            PROP2=VALUE(ILOCP)
          ENDIF
        ENDIF
C
        CALL WINSOR(TEMP1,NS1,PROP1,PROP2,NTRIM1,NTRIM2,IWRITE,
     1              TEMP2,MAXOBV,TEMP3,
     1              IBUGA3,ISUBRO,IERROR)
C
        DO21059I=1,NS1
          TEMP1(I)=TEMP3(I)
21059   CONTINUE
      ELSEIF(ICASL7.EQ.'CFRT')THEN
        IHP='MINS'
        IHP2='IZE '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          MINSIZ=5
        ELSE
          MINSIZ=INT(VALUE(ILOCP)+0.5)
          IF(MINSIZ.LE.0)MINSIZ=5
        ENDIF
C
        CALL DPCOMB(TEMP1,TEMP2,NS1,MINSIZ,
     1              TEMP91,TEMP92,TEMP5,NITEMX,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO22016I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
          TEMP91(I)=TEMP5(I)
22016   CONTINUE
      ELSEIF(ICASL7.EQ.'JOIN')THEN
        CALL JOIN(TEMP1,TEMP2,TEMP3,NS1,TEMP91,TEMP92,TEMP5,N3,MAXOBV,
     1            IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        NITEMX=N3
        DO22116I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
          TEMP91(I)=TEMP5(I)
22116   CONTINUE
      ELSEIF(ICASL7.EQ.'MWUF')THEN
        NS1=INT(TEMPS(1)+0.5)
        NS2=INT(TEMPS(2)+0.5)
        CALL UDIST(NS1,NS2,TEMP2,TEMP91,MAXOBV,TEMP5,MAXOBV,IFAULT)
        IF(IFAULT.GT.0)GOTO19000
        NITEMX=NS1*NS2+1
        DO22017I=1,NITEMX
          TEMP1(I)=REAL(I-1)
22017   CONTINUE
      ELSEIF(ICASL7.EQ.'IFRT')THEN
        IHP='MINS'
        IHP2='IZE '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          MINSIZ=5
        ELSE
          MINSIZ=INT(VALUE(ILOCP)+0.5)
          IF(MINSIZ.LE.0)MINSIZ=5
        ENDIF
C
        CALL DPICOM(TEMP1,TEMP2,NS1,MINSIZ,
     1              TEMP91,TEMP92,TEMP5,NITEMX,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        DO22216I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP92(I)
          TEMP91(I)=TEMP5(I)
22216   CONTINUE
      ELSEIF(ICASL7.EQ.'HCON')THEN
        CALL HCONS(TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,NS1,IWRITE,
     1             TEMP91,NITEMX,ISUBRO,IBUGA3,IERROR)
        DO22029I=1,NITEMX
          TEMP1(I)=TEMP91(I)
22029   CONTINUE
      ELSEIF(ICASL7.EQ.'KCON')THEN
        CALL KCONS(TEMP1,TEMP2,TEMP3,TEMP4,NS1,IWRITE,
     1             TEMP91,NITEMX,ISUBRO,IBUGA3,IERROR)
        DO22039I=1,NITEMX
          TEMP1(I)=TEMP91(I)
22039   CONTINUE
      ELSEIF(ICASL7.EQ.'HCO2')THEN
        CALL HCONS2(TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,TEMP12,
     1              NS1,IWRITE,
     1              TEMP91,TEMP92,TEMP9,NITEMX,ISUBRO,IBUGA3,IERROR)
        DO22049I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP9(I)
          TEMP91(I)=TEMP92(I)
22049   CONTINUE
      ELSEIF(ICASL7.EQ.'KCO2')THEN
        CALL KCONS2(TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,TEMP6,
     1              NS1,IWRITE,
     1              TEMP91,TEMP92,TEMP9,NITEMX,ISUBRO,IBUGA3,IERROR)
        DO22059I=1,NITEMX
          TEMP1(I)=TEMP91(I)
          TEMP2(I)=TEMP9(I)
          TEMP91(I)=TEMP92(I)
22059   CONTINUE
      ELSEIF(ICASL7.EQ.'LMOM')THEN
        NMOM=INT(TEMPS(2)+0.5)
        IF(NMOM.LE.0)NMOM=4
        IF(NMOM.GT.100)NMOM=100
        IF(NMOM.GE.NS1)NMOM=NS1
        DO22061I=1,NS1
          DTEMP1(I)=DBLE(TEMP1(I))
22061   CONTINUE
        CALL SAMLMU(DTEMP1,NS1,DTEMP2,NMOM)
        DO22063I=1,NMOM
          TEMP1(I)=REAL(DTEMP2(I))
22063   CONTINUE
        NITEMX=NMOM
      ELSEIF(ICASL7.EQ.'PWMO')THEN
        NMOM=INT(TEMPS(2)+0.5)
        IF(NMOM.LE.0)NMOM=4
        IF(NMOM.GT.20)NMOM=20
        IF(NMOM.GE.NS1)NMOM=NS1
        ATEMP=0.0D0
        BTEMP=0.0D0
        IKIND=1
        DO22071I=1,NS1
          DTEMP1(I)=DBLE(TEMP1(I))
22071   CONTINUE
        CALL SAMPWM(DTEMP1,NS1,DTEMP2,NMOM,ATEMP,BTEMP,IKIND)
        DO22073I=1,NMOM
          TEMP1(I)=REAL(DTEMP2(I))
22073   CONTINUE
        NITEMX=NMOM
      ELSEIF(ICASL7.EQ.'BPWM')THEN
        NMOM=INT(TEMPS(2)+0.5)
        IF(NMOM.LE.0)NMOM=4
        IF(NMOM.GT.20)NMOM=20
        IF(NMOM.GE.NS1)NMOM=NS1
        ATEMP=0.0D0
        BTEMP=0.0D0
        IKIND=2
        DO22081I=1,NS1
          DTEMP1(I)=DBLE(TEMP1(I))
22081   CONTINUE
        CALL SAMPWM(DTEMP1,NS1,DTEMP2,NMOM,ATEMP,BTEMP,IKIND)
        DO22083I=1,NMOM
          TEMP1(I)=REAL(DTEMP2(I))
22083   CONTINUE
        NITEMX=NMOM
      ELSEIF(ICASL7.EQ.'WMOM')THEN
        XMEAN=TEMP1(1)
        XSD=TEMP1(2)
        XSKEW=TEMP1(3)
        XMIN=TEMP1(4)
        NTEMP=INT(TEMP1(5)+0.1)
        CALL WEIMO1(XMEAN,XSD,XMIN,XSKEW,NTEMP,PSTAMV,
     1              ALOCMO,SCALMO,SHAPMO,
     1              ALOCMM,SCALMM,SHAPMM,
     1              SCALM2,SHAPM2,
     1              ISUBRO,IBUGA3,IERROR)
C
        TEMP1(1)=ALOCMO
        TEMP1(2)=SCALMO
        TEMP1(3)=SHAPMO
        TEMP1(4)=ALOCMM
        TEMP1(5)=SCALMM
        TEMP1(6)=SHAPMM
        TEMP1(7)=SCALM2
        TEMP1(8)=SHAPM2
        NS1=8
        NITEMX=NS1
      ELSEIF(ICASL7.EQ.'LNMO')THEN
        XMEAN=TEMP1(1)
        XSD=TEMP1(2)
        XSKEW=TEMP1(3)
        XMIN=TEMP1(4)
        NTEMP=INT(TEMP1(5)+0.1)
        CALL LGNMO1(XMEAN,XSD,XMIN,XSKEW,NTEMP,PSTAMV,
     1              ALOCMO,SCALMO,SHAPMO,UHATMO,
     1              ALOCMM,SCALMM,SHAPMM,UHATMM,
     1              ISUBRO,IBUGA3,IERROR)
C
        TEMP1(1)=ALOCMO
        TEMP1(2)=SCALMO
        TEMP1(3)=SHAPMO
        TEMP1(4)=UHATMO
        TEMP1(5)=ALOCMM
        TEMP1(6)=SCALMM
        TEMP1(7)=SHAPMM
        TEMP1(8)=UHATMM
        NS1=8
        NITEMX=NS1
      ELSEIF(ICASL7.EQ.'GAMO')THEN
        XMEAN=TEMP1(1)
        XSD=TEMP1(2)
        XSKEW=TEMP1(3)
        XMIN=TEMP1(4)
        NTEMP=INT(TEMP1(5)+0.1)
        CALL GAMMO1(XMEAN,XSD,XMIN,XSKEW,NTEMP,PSTAMV,
     1              ALOCMO,SCALMO,SHAPMO,
     1              ALOCMM,SCALMM,SHAPMM,
     1              ISUBRO,IBUGA3,IERROR)
C
        TEMP1(1)=ALOCMO
        TEMP1(2)=SCALMO
        TEMP1(3)=SHAPMO
        TEMP1(4)=ALOCMM
        TEMP1(5)=SCALMM
        TEMP1(6)=SHAPMM
        NS1=6
        NITEMX=NS1
      ELSEIF(ICASL7.EQ.'IGMO')THEN
        XMEAN=TEMP1(1)
        XSD=TEMP1(2)
        XSKEW=TEMP1(3)
        XMIN=TEMP1(4)
        NTEMP=INT(TEMP1(5)+0.1)
        CALL IGMO1(XMEAN,XSD,XMIN,XSKEW,NTEMP,PSTAMV,
     1             ALOCMO,AMUMO,SIGMMO,GAMMMO,
     1             ALOCMM,AMUMM,SIGMMM,GAMMMM,
     1             ISUBRO,IBUGA3,IERROR)
C
        TEMP1(1)=ALOCMO
        TEMP1(2)=AMUMO
        TEMP1(3)=SIGMMO
        TEMP1(4)=GAMMMO
        TEMP1(5)=ALOCMM
        TEMP1(6)=AMUMM
        TEMP1(7)=SIGMMM
        TEMP1(8)=GAMMMM
        NS1=8
        NITEMX=NS1
      ELSEIF(ICASL7.EQ.'LPFI' .OR. ICASL7.EQ.'HPFI')THEN
C
        IHP='FC  '
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          FC=0.05D0
        ELSE
          FC=DBLE(VALUE(ILOCP))
          IF(FC.LE.0.0D0 .OR. FC.GE.0.5D0)FC=0.05D0
        ENDIF
C
        IHP='KTER'
        IHP2='M   '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          KTERM=15
        ELSE
          KTERM=INT(VALUE(ILOCP)+0.5)
          IF(MOD(KTERM,2).EQ.0)KTERM=KTERM+1
          IF(KTERM.LT.3)KTERM=3
          IF(KTERM.GT.NS1)KTERM=NS1
        ENDIF
C
        DO22091I=1,NS1
          DTEMP1(I)=DBLE(TEMP1(I))
22091   CONTINUE
C
        IF(ICASL7.EQ.'LPFI')THEN
          CALL LOPASS(DTEMP1,NS1,FC,KTERM,DTEMP2,DTEMP3,NOUT,IERR2)
        ELSEIF(ICASL7.EQ.'LPFI')THEN
          CALL HIPASS(DTEMP1,NS1,FC,KTERM,DTEMP2,DTEMP3,NOUT,IERR2)
        ENDIF
C
        DO22093I=1,NOUT
          TEMP1(I)=REAL(DTEMP3(I))
22093   CONTINUE
        NS1=NOUT
        NITEMX=NS1
      ELSE
        WRITE(ICOUT,11301)
11301   FORMAT('***** INTERNAL ERROR 11301 IN DPMATC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11302)
11302   FORMAT('      NAME OF DESIRED DATA MANIPULATION OPERATION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11303)
11303   FORMAT('      WAS FOUND IN INTERNAL LIST IN CKMATH, BUT JUMP')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11305)
11305   FORMAT('      TO APPROPRIATE SUBROUTINE DID NOT TAKE PLACE ',
     1         'IN DPMATC.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11306)ICASL7
11306   FORMAT('ICASL7 = ',A4)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
      ENDIF
      GOTO11900
C
C     -----BEGINNING OF MATH CALCULATIONS-----
C
11900 CONTINUE
      IFOUND='YES'
      IF(IERROR.EQ.'YES')GOTO19000
C
C
C               *****************************************************
C               **  STEP XX--                                      **
C               **  BRANCH TO THE PROPER CASE
C               **  DEPENDING ON THE TYPE OF OUTPUT--
C               **     1) SCALAR (= PARAMETER)
C               **     2) VECTOR (= VARIABLE) (THE USUAL)
C               **     3) MATRIX
C               **  UPDATE DATAPLOT'S INTERNAL WORKSPACE
C               **  AND HOUSEKEEPING TABLES
C               *****************************************************
C
C
C               *****************************************************
C               **  STEP 14--                                      **
C               **  TREAT THE PARAMETER (SCALAR) CASE.             **
C               **  EXAMPLE--LET D = DETERMINANT A                 **
C               **           WHERE A WAS PREVIOUSLY UNDEFINED      **
C               **           OR WHERE A WAS PREVIOUSLY A PARAMETER.**
C               **  CARRY OUT THE LIST UPDATING  AND               **
C               **  GENERATE THE INFORMATIVE PRINTING.             **
C               **  THEN EXIT.                                     **
C               *****************************************************
C
C     FEBRUARY 2007: AGRESTI-COULL LIMITS RETURNS TWO SCALAR
C                    VALUES.  CURRENTLY, LOGIC ONLY SUPPORTS
C                    ONE SCALAR OR TWO SCALAR OUTPUTS (I.E.,
C                    NO VECTOR-SCALAR).
      IF(ITYP91.EQ.'SCAL')THEN
        ISTEPN='14'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MATC')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IHNAME(ILISL(1))=ILEFT(1)
        IHNAM2(ILISL(1))=ILEF2(1)
        IUSE(ILISL(1))='P'
        VALUE(ILISL(1))=SCAL91
C
C       2014/04: NEED TO ROUND DIFFERENTLY FOR NEGATIVE NUMBERS
C
        IF(VALUE(ILISL(1)).GE.0.0)THEN
          IVALUE(ILISL(1))=INT(VALUE(ILISL(1))+0.5)
        ELSE
          IVALUE(ILISL(1))=INT(VALUE(ILISL(1))-0.5)
        ENDIF
        IN(ILISL(1))=1
        IF(NEWNAM(1).EQ.'YES')NUMNAM=NUMNAM+1
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,14011)ILEFT(1),ILEF2(1),SCAL91
14011     FORMAT('THE COMPUTED VALUE OF THE CONSTANT ',
     1           A4,A4,'      = ',G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(ITYP92.EQ.'SCAL')THEN
          ISTEPN='14.B'
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MATC')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IHNAME(ILISL(2))=ILEFT(2)
          IHNAM2(ILISL(2))=ILEF2(2)
          IUSE(ILISL(2))='P'
          VALUE(ILISL(2))=SCAL92
CCCCC     IVALUE(ILISL(2))=VALUE(ILISL(2))+0.5
C
C       2014/04: NEED TO ROUND DIFFERENTLY FOR NEGATIVE NUMBERS
C
          IF(VALUE(ILISL(2)).GE.0.0)THEN
            IVALUE(ILISL(2))=INT(VALUE(ILISL(2))+0.5)
          ELSE
            IVALUE(ILISL(2))=INT(VALUE(ILISL(2))-0.5)
          ENDIF
          IN(ILISL(2))=1
          IF(NEWNAM(2).EQ.'YES')NUMNAM=NUMNAM+1
C
          IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,14011)ILEFT(2),ILEF2(2),SCAL92
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
C
        IF(ITYP93.EQ.'SCAL')THEN
          ISTEPN='14.C'
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MATC')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IHNAME(ILISL(3))=ILEFT(3)
          IHNAM2(ILISL(3))=ILEF2(3)
          IUSE(ILISL(3))='P'
          VALUE(ILISL(3))=SCAL93
CCCCC     IVALUE(ILISL(3))=VALUE(ILISL(3))+0.5
C
C       2014/04: NEED TO ROUND DIFFERENTLY FOR NEGATIVE NUMBERS
C
          IF(VALUE(ILISL(3)).GE.0.0)THEN
            IVALUE(ILISL(3))=INT(VALUE(ILISL(3))+0.5)
          ELSE
            IVALUE(ILISL(3))=INT(VALUE(ILISL(3))-0.5)
          ENDIF
          IN(ILISL(3))=1
          IF(NEWNAM(3).EQ.'YES')NUMNAM=NUMNAM+1
C
          IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,14011)ILEFT(3),ILEF2(3),SCAL93
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
C
        GOTO19000
      ENDIF
C
C     -----TREAT THE VECTOR AND MATRIX CASE-----
C
      ISTEPN='11.1'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     STORE FIRST VARIABLE ON THE LEFT
C
      NSX=0
      IF(NITEMX.LE.0)IROW1=0
      IF(NITEMX.LE.0)IROWN=0
      IF(NITEMX.LE.0)THEN
        IN(ILISL(1))=0
        GOTO12119
      ENDIF
C
      IF(IUPFLG.EQ.'FULL' .OR. ICASEQ.EQ.'FULL')THEN
        DO12105I=1,NITEMX
          ISUB(I)=1
12105   CONTINUE
        NIFOR=NITEMX
      ENDIF
C
CCCCC 5/2010: BUG IN "COPY" CASE.  FOR SYNTAX
CCCCC             LET Y = X  SUBSET TAG = 1
CCCCC         WE WANT TO MAINTAIN ORIGINAL ROWS OF Y THAT
CCCCC         ARE NOT AFFECTED BY THE SUBSET.
CCCCC
      IF(ICASL7.EQ.'COPV')THEN
        DO12115I=1,NITEMX
C
          IF(I.GT.NIFOR)GOTO12115
          IF(ISUB(I).EQ.0)GOTO12115
          NSX=NSX+1
C
          IJ=MAXN*(ICOLL(1)-1)+I
          IF(ICOLL(1).LE.MAXCOL)V(IJ)=TEMP1(I)
          IF(ICOLL(1).EQ.MAXCP1)PRED(I)=TEMP1(I)
          IF(ICOLL(1).EQ.MAXCP2)RES(I)=TEMP1(I)
          IF(ICOLL(1).EQ.MAXCP3)YPLOT(I)=TEMP1(I)
          IF(ICOLL(1).EQ.MAXCP4)XPLOT(I)=TEMP1(I)
          IF(ICOLL(1).EQ.MAXCP5)X2PLOT(I)=TEMP1(I)
          IF(ICOLL(1).EQ.MAXCP6)TAGPLO(I)=TEMP1(I)
C
12115   CONTINUE
        IROW1=1
        IROWN=NITEMX
      ELSE
        DO12110I=1,NITEMX
C
C         FOR SOME COMMANDS, MAY NEED TO SKIP SUBSET
C
          IF(ICASL7.EQ.'DIGI')GOTO12111
          IF(ICASL7.EQ.'DIST')GOTO12111
          IF(ICASL7.EQ.'BLOC')GOTO12111
          IF(ICASL7.EQ.'FLOC')GOTO12111
          IF(ICASL7.EQ.'FLEN')GOTO12111
          IF(ICASL7.EQ.'2DGR')GOTO12111
          IF(ICASL7.EQ.'3DGR')GOTO12111
          IF(ICASL7.EQ.'4DGR')GOTO12111
          IF(ICASL7.EQ.'CRTA' .AND. ICTALT.EQ.'COLL')GOTO12111
          IF(ICASL7.EQ.'CTAB' .AND. ICTALT.EQ.'COLL')GOTO12111
          IF(ICASL7.EQ.'MNRK' .AND. ICTALT.EQ.'COLL')GOTO12111
C
          IF(I.GT.NIFOR)GOTO12110
          IF(ISUB(I).EQ.0)GOTO12110
12111     CONTINUE
          NSX=NSX+1
C
          IJ=MAXN*(ICOLL(1)-1)+I
          IF(ICOLL(1).LE.MAXCOL)V(IJ)=TEMP1(NSX)
          IF(ICOLL(1).EQ.MAXCP1)PRED(I)=TEMP1(NSX)
          IF(ICOLL(1).EQ.MAXCP2)RES(I)=TEMP1(NSX)
          IF(ICOLL(1).EQ.MAXCP3)YPLOT(I)=TEMP1(NSX)
          IF(ICOLL(1).EQ.MAXCP4)XPLOT(I)=TEMP1(NSX)
          IF(ICOLL(1).EQ.MAXCP5)X2PLOT(I)=TEMP1(NSX)
          IF(ICOLL(1).EQ.MAXCP6)TAGPLO(I)=TEMP1(NSX)
C
          IF(NSX.EQ.1)IROW1=I
          IROWN=I
C
12110   CONTINUE
      ENDIF
C
      IN(ILISL(1))=NITEMX
C
12119 CONTINUE
C
C     STORE SECOND VARIABLE ON THE LEFT
C
      IF(ICASL7.EQ.'FOUT'.OR.ICASL7.EQ.'FOU1'.OR.
     1   ICASL7.EQ.'IFOU'.OR.ICASL7.EQ.'IFO1'.OR.
     1   ICASL7.EQ.'FFT' .OR.ICASL7.EQ.'FFT1'.OR.
     1   ICASL7.EQ.'IFFT'.OR.ICASL7.EQ.'IFF1'.OR.
     1   ICASL7.EQ.'COAD'.OR.ICASL7.EQ.'COSU'.OR.
     1   ICASL7.EQ.'COMU'.OR.ICASL7.EQ.'CODI'.OR.
     1   ICASL7.EQ.'COEX'.OR.ICASL7.EQ.'COSR'.OR.
     1   ICASL7.EQ.'CORO'.OR.ICASL7.EQ.'COR1'.OR.
     1   ICASL7.EQ.'COCO'.OR.ICASL7.EQ.'PODI'.OR.
     1   ICASL7.EQ.'SECP'.OR.ICASL7.EQ.'FRAC'.OR.
     1   ICASL7.EQ.'BINN'.OR.ICASL7.EQ.'BINR'.OR.
     1   ICASL7.EQ.'CBIN'.OR.ICASL7.EQ.'CBIR'.OR.
     1   ICASL7.EQ.'BINP'.OR.ICASL7.EQ.'BIRP'.OR.
     1   ICASL7.EQ.'ASHC'.OR.ICASL7.EQ.'ASHR'.OR.
     1   ICASL7.EQ.'STAC'.OR.ICASL7.EQ.'RSTA'.OR.
     1   ICASL7.EQ.'CFRT'.OR.ICASL7.EQ.'HCO2'.OR.
     1   ICASL7.EQ.'IFRT'.OR.ICASL7.EQ.'2DCH'.OR.
     1   ICASL7.EQ.'EDGV'.OR.ICASL7.EQ.'NEPA'.OR.
     1   ICASL7.EQ.'NEXE'.OR.ICASL7.EQ.'CYTB'.OR.
     1   ICASL7.EQ.'SPF1'.OR.ICASL7.EQ.'SPF2'.OR.
     1   ICASL7.EQ.'AGCO'.OR.ICASL7.EQ.'DPCL'.OR.
     1   ICASL7.EQ.'R1TS'.OR.ICASL7.EQ.'R1LT'.OR.
     1   ICASL7.EQ.'R1UT'.OR.ICASL7.EQ.'EBCL'.OR.
     1   ICASL7.EQ.'R2TS'.OR.ICASL7.EQ.'R2LT'.OR.
     1   ICASL7.EQ.'R2UT'.OR.ICASL7.EQ.'BRAT'.OR.
     1   ICASL7.EQ.'R3TS'.OR.ICASL7.EQ.'R3LT'.OR.
     1   ICASL7.EQ.'R3UT'.OR.ICASL7.EQ.'BPSE'.OR.
     1   ICASL7.EQ.'SOR2'.OR.ICASL7.EQ.'SOR3'.OR.
     1   ICASL7.EQ.'SOR4'.OR.ICASL7.EQ.'MWUF'.OR.
     1   ICASL7.EQ.'TMIN'.OR.ICASL7.EQ.'TMAX'.OR.
     1   ICASL7.EQ.'TPOI'.OR.ICASL7.EQ.'EXTP'.OR.
     1   ICASL7.EQ.'ENCB'.OR.ICASL7.EQ.'INTL'.OR.
     1   ICASL7.EQ.'PARL'.OR.ICASL7.EQ.'PERL'.OR.
     1   ICASL7.EQ.'JOIN'.OR.ICASL7.EQ.'NNE3'.OR.
     1   ICASL7.EQ.'FNNE'.OR.ICASL7.EQ.'ANNE'.OR.
     1   ICASL7.EQ.'PEAK'.OR.ICASL7.EQ.'JSCT'.OR.
     1   ICASL7.EQ.'GSQD'.OR.ICASL7.EQ.'GSQS'.OR.
     1   ICASL7.EQ.'GSQP'.OR.ICASL7.EQ.'GSQM'.OR.
     1   ICASL7.EQ.'GQMN'.OR.ICASL7.EQ.'GQMX'.OR.
     1   ICASL7.EQ.'GSQL'.OR.ICASL7.EQ.'GSQU'.OR.
     1   ICASL7.EQ.'NKDM'.OR.ICASL7.EQ.'EQUF'.OR.
     1   ICASL7.EQ.'IQUF'.OR.ICASL7.EQ.'TIQF'.OR.
     1   ICASL7.EQ.'SRNP'.OR.ICASL7.EQ.'2DGR'.OR.
     1   ICASL7.EQ.'3DGR'.OR.ICASL7.EQ.'4DGR'.OR.
     1   ICASL7.EQ.'PSCO'.OR.
     1   ICASL7.EQ.'KCO2'.OR.ICASL7.EQ.'SRTB')THEN
C
        NSX=0
        NITEM2=NITEMX
        IF(ICASL7.EQ.'SRTB')NITEM2=NUMSE1
        IF(ICASL7.EQ.'PODI')NITEM2=NITE2X
        IF(ICASL7.EQ.'NEXE')NITEM2=NC
        IF(NITEM2.LE.0)IROW12=0
        IF(NITEM2.LE.0)IROWN2=0
        IF(NITEM2.LE.0)THEN
          IN(ILISL(2))=0
          GOTO12129
        ENDIF
C
        DO12120I=1,NITEM2
C
          IF(NITEM2.EQ.NITEMX)THEN
            IF(I.GT.NIFOR)GOTO12120
            IF(ISUB(I).EQ.0)GOTO12120
          ENDIF
          NSX=NSX+1
C
          IJ=MAXN*(ICOLL(2)-1)+I
          IF(ICOLL(2).LE.MAXCOL)V(IJ)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP1)PRED(I)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP2)RES(I)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP3)YPLOT(I)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP4)XPLOT(I)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP5)X2PLOT(I)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP6)TAGPLO(I)=TEMP2(NSX)
C
          IF(NSX.EQ.1)IROW12=I
          IROWN2=I
C
12120   CONTINUE
C
        IN(ILISL(2))=NITEM2
C
12129   CONTINUE
      ENDIF
C
      IF(ICASL7.EQ.'CFRT'.OR.ICASL7.EQ.'RSTA'.OR.
     1   ICASL7.EQ.'IFRT'.OR.ICASL7.EQ.'EDGV'.OR.
     1   ICASL7.EQ.'R1TS'.OR.ICASL7.EQ.'R1LT'.OR.
     1   ICASL7.EQ.'R1UT'.OR.ICASL7.EQ.'DPCL'.OR.
     1   ICASL7.EQ.'R2TS'.OR.ICASL7.EQ.'R2LT'.OR.
     1   ICASL7.EQ.'R2UT'.OR.ICASL7.EQ.'BRAT'.OR.
     1   ICASL7.EQ.'R3TS'.OR.ICASL7.EQ.'R3LT'.OR.
     1   ICASL7.EQ.'R3UT'.OR.ICASL7.EQ.'BPSE'.OR.
     1   ICASL7.EQ.'SOR3'.OR.ICASL7.EQ.'SOR4'.OR.
     1   ICASL7.EQ.'HCO2'.OR.ICASL7.EQ.'KCO2'.OR.
     1   ICASL7.EQ.'CBIN'.OR.ICASL7.EQ.'CBIR'.OR.
     1   ICASL7.EQ.'MWUF'.OR.ICASL7.EQ.'JOIN'.OR.
     1   ICASL7.EQ.'FNNE'.OR.ICASL7.EQ.'ANNE'.OR.
     1   ICASL7.EQ.'3DGR'.OR.ICASL7.EQ.'4DGR'.OR.
     1   ICASL7.EQ.'JSCT'.OR.
     1   ICASL7.EQ.'SPF1'.OR.ICASL7.EQ.'SPF2')THEN
C
        NSX=0
        NITEM3=NITEMX
        IF(ICASL7.EQ.'SPF2')NITEM3=NS3
        IF(ICASL7.EQ.'CBIN' .OR. ICASL7.EQ.'CBIR')NITEM3=NS1
        IF(NITEM3.LE.0)IROW13=0
        IF(NITEM3.LE.0)IROWN3=0
        IF(NITEM3.LE.0)THEN
          IN(ILISL(3))=0
          GOTO12139
        ENDIF
C
        DO12130I=1,NITEM3
C
          IF(NITEM3.EQ.NITEMX)THEN
            IF(I.GT.NIFOR)GOTO12130
            IF(ISUB(I).EQ.0)GOTO12130
          ENDIF
          NSX=NSX+1
C
          IJ=MAXN*(ICOLL(3)-1)+I
          IF(ICOLL(3).LE.MAXCOL)V(IJ)=TEMP91(NSX)
          IF(ICOLL(3).EQ.MAXCP1)PRED(I)=TEMP91(NSX)
          IF(ICOLL(3).EQ.MAXCP2)RES(I)=TEMP91(NSX)
          IF(ICOLL(3).EQ.MAXCP3)YPLOT(I)=TEMP91(NSX)
          IF(ICOLL(3).EQ.MAXCP4)XPLOT(I)=TEMP91(NSX)
          IF(ICOLL(3).EQ.MAXCP5)X2PLOT(I)=TEMP91(NSX)
          IF(ICOLL(3).EQ.MAXCP6)TAGPLO(I)=TEMP91(NSX)
C
          IF(NSX.EQ.1)IROW13=I
          IROWN3=I
C
12130   CONTINUE
C
        IN(ILISL(3))=NITEM3
C
12139   CONTINUE
      ENDIF
C
      IF(ICASL7.EQ.'SPF2'.OR.ICASL7.EQ.'SOR4'.OR.
     1   ICASL7.EQ.'4DGR'.OR.ICASL7.EQ.'ANNE')THEN
C
        NSX=0
        NITEM4=NS4
        IF(ICASL7.EQ.'4DGR')NITEM4=NITEMX
        IF(NITEM4.LE.0)THEN
          IROW14=0
          IROWN4=0
          IN(ILISL(4))=0
          GOTO12149
        ENDIF
C
        DO12140I=1,NITEM4
C
          IF(NITEM4.EQ.NITEMX)THEN
            IF(I.GT.NIFOR)GOTO12140
            IF(ISUB(I).EQ.0)GOTO12140
          ENDIF
          NSX=NSX+1
C
          IJ=MAXN*(ICOLL(4)-1)+I
          IF(ICOLL(4).LE.MAXCOL)V(IJ)=TEMP92(NSX)
          IF(ICOLL(4).EQ.MAXCP1)PRED(I)=TEMP92(NSX)
          IF(ICOLL(4).EQ.MAXCP2)RES(I)=TEMP92(NSX)
          IF(ICOLL(4).EQ.MAXCP3)YPLOT(I)=TEMP92(NSX)
          IF(ICOLL(4).EQ.MAXCP4)XPLOT(I)=TEMP92(NSX)
          IF(ICOLL(4).EQ.MAXCP5)X2PLOT(I)=TEMP92(NSX)
          IF(ICOLL(4).EQ.MAXCP6)TAGPLO(I)=TEMP92(NSX)
C
          IF(NSX.EQ.1)IROW14=I
          IROWN4=I
C
12140   CONTINUE
C
        IN(ILISL(4))=NITEM4
C
12149   CONTINUE
      ENDIF
C
      IF(ICASL7.EQ.'ANNE')THEN
C
        NSX=0
        NITEM5=NS5
        IF(NITEM5.LE.0)THEN
          IROW15=0
          IROWN5=0
          IN(ILISL(5))=0
          GOTO12159
        ENDIF
C
        DO12150I=1,NITEM5
C
          IF(NITEM5.EQ.NITEMX)THEN
            IF(I.GT.NIFOR)GOTO12150
            IF(ISUB(I).EQ.0)GOTO12150
          ENDIF
          NSX=NSX+1
C
          IJ=MAXN*(ICOLL(5)-1)+I
          IF(ICOLL(5).LE.MAXCOL)V(IJ)=TEMP5(NSX)
          IF(ICOLL(5).EQ.MAXCP1)PRED(I)=TEMP5(NSX)
          IF(ICOLL(5).EQ.MAXCP2)RES(I)=TEMP5(NSX)
          IF(ICOLL(5).EQ.MAXCP3)YPLOT(I)=TEMP5(NSX)
          IF(ICOLL(5).EQ.MAXCP4)XPLOT(I)=TEMP5(NSX)
          IF(ICOLL(5).EQ.MAXCP5)X2PLOT(I)=TEMP5(NSX)
          IF(ICOLL(5).EQ.MAXCP6)TAGPLO(I)=TEMP5(NSX)
C
          IF(NSX.EQ.1)IROW15=I
          IROWN5=I
C
12150   CONTINUE
C
        IN(ILISL(5))=NITEM5
C
12159   CONTINUE
      ENDIF
C
      DO12210J4=1,NUMNAM
        IF((IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(1)).OR.
     1     (IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(1)))THEN
          IUSE(J4)='V'
          IVALUE(J4)=ICOLL(1)
          VALUE(J4)=ICOLL(1)
          IN(J4)=NITEMX
          IF(IMATSW.EQ.'YES'.AND.ITYP91.EQ.'MATR')THEN
            IVALUE(J4)=ICOLL(1)
CCCCC       IVALU2(J4)=ICOLL(1)+NC91-1
            IVALU2(J4)=ICOLL(1)
          ENDIF
        ENDIF
12210 CONTINUE
C
      IF(NUMVAL.GE.2)THEN
        DO12220J4=1,NUMNAM
          IF((IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(2)).OR.
     1       (IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(2)))THEN
            IUSE(J4)='V'
            IVALUE(J4)=ICOLL(2)
            VALUE(J4)=INT(ICOLL(2))
            IN(J4)=NITEM2
          ENDIF
12220   CONTINUE
      ENDIF
C
      IF(NUMVAL.GE.3)THEN
        DO12230J4=1,NUMNAM
          IF((IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(3)).OR.
     1       (IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(3)))THEN
            IUSE(J4)='V'
            IVALUE(J4)=ICOLL(3)
            VALUE(J4)=ICOLL(3)
            IN(J4)=NITEM3
          ENDIF
12230   CONTINUE
      ENDIF
C
      IF(NUMVAL.GE.4)THEN
        DO12240J4=1,NUMNAM
          IF((IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(4)).OR.
     1       (IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(4)))THEN
            IUSE(J4)='V'
            IVALUE(J4)=ICOLL(4)
            VALUE(J4)=ICOLL(4)
            IN(J4)=NITEM4
          ENDIF
12240   CONTINUE
      ENDIF
C
      IF(NUMVAL.GE.5)THEN
        DO12250J5=1,NUMNAM
          IF((IUSE(J5).EQ.'V'.AND.IVALUE(J5).EQ.ICOLL(5)).OR.
     1       (IUSE(J5).EQ.'M'.AND.IVALUE(J5).EQ.ICOLL(5)))THEN
            IUSE(J5)='V'
            IVALUE(J5)=ICOLL(5)
            VALUE(J5)=ICOLL(5)
            IN(J5)=NITEM5
          ENDIF
12250   CONTINUE
      ENDIF
C
C               *******************************************
C               **  STEP 16--                            **
C               **  TREAT THE VARIABLE (VECTOR) CASE--   **
C               **  CARRY OUT THE LIST UPDATING AND      **
C               **  GENERATE THE INFORMATIVE PRINTING    **
C               **  FOR STEP NUMBERS 7, 8, AND 9 ABOVE.  **
C               *******************************************
C
      ISTEPN='16'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHNAME(ILISL(1))=ILEFT(1)
      IHNAM2(ILISL(1))=ILEF2(1)
      IUSE(ILISL(1))='V'
      IVALUE(ILISL(1))=ICOLL(1)
      VALUE(ILISL(1))=ICOLL(1)
      IF(NEWNAM(1).EQ.'YES')THEN
        NUMNAM=NUMNAM+1
        NUMCOL=NUMCOL+1
      ENDIF
C
      IF(NUMVAL.GE.2)THEN
        IHNAME(ILISL(2))=ILEFT(2)
        IHNAM2(ILISL(2))=ILEF2(2)
        IUSE(ILISL(2))='V'
        IVALUE(ILISL(2))=ICOLL(2)
        VALUE(ILISL(2))=ICOLL(2)
        IF(NEWNAM(2).EQ.'YES')THEN
          NUMNAM=NUMNAM+1
          NUMCOL=NUMCOL+1
        ENDIF
      ENDIF
C
      IF(NUMVAL.GE.3)THEN
        IHNAME(ILISL(3))=ILEFT(3)
        IHNAM2(ILISL(3))=ILEF2(3)
        IUSE(ILISL(3))='V'
        IVALUE(ILISL(3))=ICOLL(3)
        VALUE(ILISL(3))=ICOLL(3)
        IF(NEWNAM(3).EQ.'YES')THEN
          NUMNAM=NUMNAM+1
          NUMCOL=NUMCOL+1
        ENDIF
      ENDIF
C
      IF(NUMVAL.GE.4)THEN
        IHNAME(ILISL(4))=ILEFT(4)
        IHNAM2(ILISL(4))=ILEF2(4)
        IUSE(ILISL(4))='V'
        IVALUE(ILISL(4))=ICOLL(4)
        VALUE(ILISL(4))=ICOLL(4)
        IF(NEWNAM(4).EQ.'YES')THEN
          NUMNAM=NUMNAM+1
          NUMCOL=NUMCOL+1
        ENDIF
      ENDIF
C
      IF(NUMVAL.GE.5)THEN
        IHNAME(ILISL(5))=ILEFT(5)
        IHNAM2(ILISL(5))=ILEF2(5)
        IUSE(ILISL(5))='V'
        IVALUE(ILISL(5))=ICOLL(5)
        VALUE(ILISL(5))=ICOLL(5)
        IF(NEWNAM(5).EQ.'YES')THEN
          NUMNAM=NUMNAM+1
          NUMCOL=NUMCOL+1
        ENDIF
      ENDIF
C
      IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
C
        WRITE(ICOUT,16011)ILEFT(1),ILEF2(1),NSX
16011   FORMAT('THE NUMBER OF VALUES GENERATED FOR ',
     1         'THE VARIABLE ',A4,A4,' = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IJ=MAXN*(ICOLL(1)-1)+IROW1
        IF(ICOLL(1).LE.MAXCOL)THEN
          WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),V(IJ),IROW1
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP1)THEN
          WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),PRED(IROW1),IROW1
16021     FORMAT('THE FIRST           COMPUTED VALUE OF ',A4,A4,
     1           ' = ',E16.7,'   (ROW ',I6,')')
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP2)THEN
          WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),RES(IROW1),IROW1
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP3)THEN
          WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),YPLOT(IROW1),IROW1
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP4)THEN
          WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),XPLOT(IROW1),IROW1
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP5)THEN
          WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),X2PLOT(IROW1),IROW1
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP6)THEN
          WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),TAGPLO(IROW1),IROW1
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IJ=MAXN*(ICOLL(1)-1)+IROWN
        IF(ICOLL(1).LE.MAXCOL.AND.NSX.NE.1)THEN
          WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),V(IJ),IROWN
16031     FORMAT('THE LAST (',I5,'-TH) COMPUTED VALUE OF ',A4,A4,
     1           ' = ',E16.7,'   (ROW ',I6,')')
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP1.AND.NSX.NE.1)THEN
          WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),PRED(IROWN),IROWN
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP2.AND.NSX.NE.1)THEN
          WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),RES(IROWN),IROWN
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP3.AND.NSX.NE.1)THEN
          WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),YPLOT(IROWN),IROWN
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP4.AND.NSX.NE.1)THEN
          WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),XPLOT(IROWN),IROWN
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP5.AND.NSX.NE.1)THEN
          WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),X2PLOT(IROWN),IROWN
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICOLL(1).EQ.MAXCP6.AND.NSX.NE.1)THEN
          WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),TAGPLO(IROWN),IROWN
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IF(NSX.EQ.1)THEN
          WRITE(ICOUT,16032)
16032     FORMAT('SINCE THE GENERATED SAMPLE SIZE WAS ONLY 1,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,16033)
16033     FORMAT('THE ABOVE VALUE WAS THE SOLE VALUE COMPUTED.')
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(NUMVAL.GE.2)THEN
          WRITE(ICOUT,16011)ILEFT(2),ILEF2(2),NSX
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IJ=MAXN*(ICOLL(2)-1)+IROW1
          IF(ICOLL(2).LE.MAXCOL)THEN
            WRITE(ICOUT,16021)ILEFT(2),ILEF2(2),V(IJ),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP1)THEN
            WRITE(ICOUT,16021)ILEFT(2),ILEF2(2),PRED(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP2)THEN
            WRITE(ICOUT,16021)ILEFT(2),ILEF2(2),RES(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP3)THEN
            WRITE(ICOUT,16021)ILEFT(2),ILEF2(2),YPLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP4)THEN
            WRITE(ICOUT,16021)ILEFT(2),ILEF2(2),XPLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP5)THEN
            WRITE(ICOUT,16021)ILEFT(2),ILEF2(2),X2PLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP6)THEN
            WRITE(ICOUT,16021)ILEFT(2),ILEF2(2),TAGPLO(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IJ=MAXN*(ICOLL(2)-1)+IROWN
          IF(ICOLL(2).LE.MAXCOL.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(2),ILEF2(2),V(IJ),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP1.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(2),ILEF2(2),PRED(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP2.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(2),ILEF2(2),RES(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP3.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(2),ILEF2(2),YPLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP4.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(2),ILEF2(2),XPLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP5.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(2),ILEF2(2),X2PLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(2).EQ.MAXCP6.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(2),ILEF2(2),TAGPLO(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IF(NSX.EQ.1)THEN
            WRITE(ICOUT,16032)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,16033)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
        ENDIF
C
        IF(NUMVAL.GE.3)THEN
          WRITE(ICOUT,16011)ILEFT(3),ILEF2(3),NSX
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IJ=MAXN*(ICOLL(3)-1)+IROW1
          IF(ICOLL(3).LE.MAXCOL)THEN
            WRITE(ICOUT,16021)ILEFT(3),ILEF2(3),V(IJ),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP1)THEN
            WRITE(ICOUT,16021)ILEFT(3),ILEF2(3),PRED(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP2)THEN
            WRITE(ICOUT,16021)ILEFT(3),ILEF2(3),RES(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP3)THEN
            WRITE(ICOUT,16021)ILEFT(3),ILEF2(3),YPLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP4)THEN
            WRITE(ICOUT,16021)ILEFT(3),ILEF2(3),XPLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP5)THEN
            WRITE(ICOUT,16021)ILEFT(3),ILEF2(3),X2PLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP6)THEN
            WRITE(ICOUT,16021)ILEFT(3),ILEF2(3),TAGPLO(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IJ=MAXN*(ICOLL(3)-1)+IROWN
          IF(ICOLL(3).LE.MAXCOL.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(3),ILEF2(3),V(IJ),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP1.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(3),ILEF2(3),PRED(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP2.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(3),ILEF2(3),RES(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP3.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(3),ILEF2(3),YPLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP4.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(3),ILEF2(3),XPLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP5.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(3),ILEF2(3),X2PLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(3).EQ.MAXCP6.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NSX,ILEFT(3),ILEF2(3),TAGPLO(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IF(NSX.EQ.1)THEN
            WRITE(ICOUT,16032)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,16033)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
        ENDIF
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
C
        IF(NUMVAL.GE.4)THEN
          WRITE(ICOUT,16011)ILEFT(4),ILEF2(4),NS4
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IJ=MAXN*(ICOLL(4)-1)+IROW1
          IF(ICOLL(4).LE.MAXCOL)THEN
            WRITE(ICOUT,16021)ILEFT(4),ILEF2(4),V(IJ),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP1)THEN
            WRITE(ICOUT,16021)ILEFT(4),ILEF2(4),PRED(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP2)THEN
            WRITE(ICOUT,16021)ILEFT(4),ILEF2(4),RES(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP3)THEN
            WRITE(ICOUT,16021)ILEFT(4),ILEF2(4),YPLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP4)THEN
            WRITE(ICOUT,16021)ILEFT(4),ILEF2(4),XPLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP5)THEN
            WRITE(ICOUT,16021)ILEFT(4),ILEF2(4),X2PLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP6)THEN
            WRITE(ICOUT,16021)ILEFT(4),ILEF2(4),TAGPLO(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IJ=MAXN*(ICOLL(4)-1)+IROWN
          IF(ICOLL(4).LE.MAXCOL.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NS4,ILEFT(4),ILEF2(4),V(IJ),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP1.AND.NS4.NE.1)THEN
            WRITE(ICOUT,16031)NS4,ILEFT(4),ILEF2(4),PRED(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP2.AND.NS4.NE.1)THEN
            WRITE(ICOUT,16031)NS4,ILEFT(4),ILEF2(4),RES(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP3.AND.NS4.NE.1)THEN
            WRITE(ICOUT,16031)NS4,ILEFT(4),ILEF2(4),YPLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP4.AND.NS4.NE.1)THEN
            WRITE(ICOUT,16031)NS4,ILEFT(4),ILEF2(4),XPLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP5.AND.NS4.NE.1)THEN
            WRITE(ICOUT,16031)NS4,ILEFT(4),ILEF2(4),X2PLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(4).EQ.MAXCP6.AND.NS4.NE.1)THEN
            WRITE(ICOUT,16031)NS4,ILEFT(4),ILEF2(4),TAGPLO(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IF(NS4.EQ.1)THEN
            WRITE(ICOUT,16032)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,16033)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
        ENDIF
C
        IF(NUMVAL.GE.5)THEN
          WRITE(ICOUT,16011)ILEFT(5),ILEF2(5),NS5
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IJ=MAXN*(ICOLL(5)-1)+IROW1
          IF(ICOLL(5).LE.MAXCOL)THEN
            WRITE(ICOUT,16021)ILEFT(5),ILEF2(5),V(IJ),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP1)THEN
            WRITE(ICOUT,16021)ILEFT(5),ILEF2(5),PRED(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP2)THEN
            WRITE(ICOUT,16021)ILEFT(5),ILEF2(5),RES(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP3)THEN
            WRITE(ICOUT,16021)ILEFT(5),ILEF2(5),YPLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP4)THEN
            WRITE(ICOUT,16021)ILEFT(5),ILEF2(5),XPLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP5)THEN
            WRITE(ICOUT,16021)ILEFT(5),ILEF2(5),X2PLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP6)THEN
            WRITE(ICOUT,16021)ILEFT(5),ILEF2(5),TAGPLO(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IJ=MAXN*(ICOLL(5)-1)+IROWN
          IF(ICOLL(5).LE.MAXCOL.AND.NSX.NE.1)THEN
            WRITE(ICOUT,16031)NS5,ILEFT(5),ILEF2(5),V(IJ),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP1.AND.NS4.NE.1)THEN
            WRITE(ICOUT,16031)NS5,ILEFT(5),ILEF2(5),PRED(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP2.AND.NS5.NE.1)THEN
            WRITE(ICOUT,16031)NS5,ILEFT(5),ILEF2(5),RES(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP3.AND.NS5.NE.1)THEN
            WRITE(ICOUT,16031)NS5,ILEFT(5),ILEF2(5),YPLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP4.AND.NS5.NE.1)THEN
            WRITE(ICOUT,16031)NS5,ILEFT(5),ILEF2(5),XPLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP5.AND.NS5.NE.1)THEN
            WRITE(ICOUT,16031)NS5,ILEFT(5),ILEF2(5),X2PLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(5).EQ.MAXCP6.AND.NS5.NE.1)THEN
            WRITE(ICOUT,16031)NS5,ILEFT(5),ILEF2(5),TAGPLO(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IF(NS5.EQ.1)THEN
            WRITE(ICOUT,16032)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,16033)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
        ENDIF
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      GOTO19000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
19000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MATC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19011)
19011   FORMAT('***** AT THE END       OF DPMATC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19012)IFOUND,IERROR
19012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19014)ICASL7,ILOCV,ITCASE,IWRITE
19014   FORMAT('ICASL7,ILOCV,ITCASE,IWRITE = ',A4,2X,I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19016)NSX,NITEMX,NS1,NS2
19016   FORMAT('NSX,NITEMX,NS1,NS2 = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19021)ILEFT(1),ILEF2(1),ILISL(1),ICOLL(1)
19021   FORMAT('ILEFT(1),ILEF2(1),ILISL(1),ICOLL(1) = ',A4,2X,A4,2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19022)ILEFT(2),ILEF2(2),ILISL(2),ICOLL(2)
19022   FORMAT('ILEFT(2),ILEF2(2),ILISL(2),ICOLL(2) = ',A4,2X,A4,2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19023)NUMVAL,NEWNAM(1),NEWNAM(2),NUMVAR
19023   FORMAT('NUMVAL,NEWNAM(1),NEWNAM(2),NUMVAR = ',
     1         I8,2X,A4,2X,A4,I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19024)ILISR(1),ILISR(2),ILISR(3),ILISR(4)
19024   FORMAT('ILISR(1),ILISR(2),ILISR(3),ILISR(4) = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19025)ICOLR(1),ICOLR(2),ICOLR(3),ICOLR(4)
19025   FORMAT('ICOLR(1),ICOLR(2),ICOLR(3),ICOLR(4) = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19026)TEMPS(1),TEMPS(2),TEMPS(3),TEMPS(4)
19026   FORMAT('TEMPS(1),TEMPS(2),TEMPS(3),TEMPS(4) = ',4E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19027)ITYPA(1),ITYPA(2),ITYPA(3),ITYPA(4)
19027   FORMAT('ITYPA(1),ITYPA(2),ITYPA(3),ITYPA(4) = ',
     1         A4,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19031)IMATSW,NUMVAR
19031   FORMAT('IMATSW,NUMVAR = ',A4,I8)
        CALL DPWRST('XXX','BUG ')
        IF(ITYPA(1).EQ.'VARI')THEN
          WRITE(ICOUT,19033)ILISR(1),IN(ILISR(1)),IVALUE(ILISR(1)),
     1                      IVALU2(ILISR(1))
19033     FORMAT('ILISR(1),IN(ILISR(1)),IVALUE(ILISR(1)),',
     1           'IVALU2(ILISR(1)) = ',
     1           4I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,19034)ILOCR(3),ILOCR(4),ILOCR(5),ILOCR(6),
     1                    ILOCR(7)
19034   FORMAT('ILOCR3,...,ILOCR7 = ',5I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
19090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPMAT2(ICASL7,ICASS7,ISTARA,ILOCV,ISEED,IMSUBC,
     1                  IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
CCCCC OCTOBER 1998.  SPLIT INTO 2 FILES (LAHEY COMPILER
CCCCC SEEMS TO HAVE MEMORY TROUBLES WITH THE FULL ROUTINE).
CCCCC ESSENTIALLY, SPLIT OUT THE MATRIX AND NON-MATRIX COMMANDS.
CCCCC THIS ROUTINE, DPMAT2, IS THE MATRIX COMMANDS.
C
C     PURPOSE--TREAT THE TYPE 7 LET CASE--
C                      (FOR A FULL OR PARTIAL DATA SET)
C                 LET M3 = MATRIX ADDITION M1 M2
C                 LET M3 = MATRIX ADDITION M1 P1
C                 LET M3 = MATRIX SUBTRACTION M1 M2
C                 LET M3 = MATRIX SUBTRACTION M1 P1
C                 LET M3 = MATRIX MULTIPLICATION M1 M2
C                 LET M3 = MATRIX MULTIPLICATION M1 V1
C                 LET M3 = MATRIX MULTIPLICATION M1 P1
C                 LET M3 = MATRIX TRUNCATION M1 P1
C                 LET V3 = MATRIX SOLUTION M1 V2
C                 LET V3 = MATRIX ITERATIVE SOLUTION M1 V2
C                 LET M3 = MATRIX INVERSE M1
C                 LET P3 = MATRIX CONDITION NUMBER M1
C                 LET P3 = MATRIX RECIPROCAL CONDITION NUMBER M1
C                 LET M3 = MATRIX TRANSPOSE M1
C                 LET M3 = MATRIX ADJOINT M1
C                 LET V3 = MATRIX CHAR EQUATION M1   (NOT YET IMP)
C                 LET V3 = MATRIX EIGENVALUES M1
C                 LET M3 = MATRIX EIGENVECTORS M1
C                 LET M3 = MATRIX RANK M1
C                 LET P3 = MATRIX DETERMINANT M1
C                 LET P3 = MATRIX PERMANENT M1
C                 LET P3 = MATRIX SPECTRAL NORM M1 
C                 LET P3 = MATRIX SPECTRAL RADIUS M1
C                 LET P3 = MATRIX NUMBER OF ROWS M1 
C                 LET P3 = MATRIX NUMBER OF COLUMNS M1 
C                 LET V4 = MATRIX SIMPLEX SOLUTION V1 M1 
C                 LET P3 = MATRIX TRACE M1
C                 LET M3 = MATRIX SUBMATRIX M1 P1 P2
C                 LET P3 = MATRIX MINOR M1 P1 P2
C                 LET P3 = MATRIX COFACTOR M1 P1 P2
C                 LET M3 = MATRIX DEFINITION M1 P1 P2 
C                 LET P3 = MATRIX EUCLIDEAN NORM M1
C                 LET P3 = MATRIX ROW M1 P1
C                 LET P3 = MATRIX ELEMENT M1 P2
C                 LET M3 = MATRIX REPACE ROW M1 V2 P3
C                 LET M3 = MATRIX ADD ROW M1 V1
C                 LET M3 = MATRIX DELETE ROW M1 S1
C                 LET M3 = MATRIX REPACE ELEMENT M1 V2 P3 P4
C                 LET M3 = MATRIX CHOLESKY DECOMPOSITION  M1 
C                 LET M3 = MATRIX AUGMENT  M1 M2
C                 LET V3 = MATRIX DIAGONAL  M1
C                 LET M3 = DIAGONAL MATRIX V1
C                 LET V3 = TRIDIAGONAL SOLUTION M1 V2
C                 LET V3 = TRIANGULAR SOLUTION M1 V2
C                 LET M3 = TRIANGULAR INVERSE M1
C
C                 LET A1 = MATRIX MEAN M1
C                 LET A1 = MATRIX SUM  M1
C                 LET M2 = MATRIX GROUP MEANS M1 TAG
C                 LET M2 = MATRIX GROUP STANDARD DEVIATIONS M1 TAG
C                 LET A1 = MATRIX ROW <STAT> M1
C                 LET A1 = MATRIX COLUMN <STAT> M1
C                 LET A1 = MATRIX PARTITION <STAT> M1 NROW NCOL
C                 LET A1 = MATRIX GRAND <STAT> M1
C                 LET V1 V2 = MATRIX BIN  M1
C                 LET M2 = MATRIX ROW SCALE M1
C                 LET M2 = MATRIX COLUMN SCALE M1
C                 LET A1 = QUADRATIC FORM M1 Y1
C                 LET A1 = HOTELLING 1-SAMPLE T-SQUARE M1 U1
C                 LET A1 = HOTELLING 2-SAMPLE T-SQUARE M1 M2
C                 LET M3 = POOLED VARIANCE-COVARIANCE MATRIX M1 M2
C                 LET M2 = PSUEDO INVERSE M1
C                 LET M2 M3 = QR DECOMPOSITION M1 (NOT WORKING)
C                 LET M2 = EUCLIDEAN ROW DISTANCE M1
C                 LET M2 = EUCLIDEAN COLUMN DISTANCE M1
C                 LET M2 = BLOCK ROW DISTANCE M1
C                 LET M2 = BLOCK COLUMN DISTANCE M1
C                 LET M2 = MINKOWSKY ROW DISTANCE M1
C                 LET M2 = MINKOWSKY COLUMN DISTANCE M1
C                 LET M2 = CHEBYCHEV ROW DISTANCE M1
C                 LET M2 = CHEBYCHEV COLUMN DISTANCE M1
C                 LET M2 = COSINE ROW DISTANCE M1
C                 LET M2 = COSINE COLUMN DISTANCE M1
C                 LET M2 = COSINE ROW SIMILARITY M1
C                 LET M2 = COSINE COLUMN SIMILARITY M1
C                 LET M2 = ANGULAR COSINE ROW DISTANCE M1
C                 LET M2 = ANGULAR COSINE COLUMN DISTANCE M1
C                 LET M2 = ANGULAR COSINE ROW SIMILARITY M1
C                 LET M2 = ANGULAR COSINE COLUMN SIMILARITY M1
C                 LET M2 = JACCARD ROW DISTANCE M1
C                 LET M2 = JACCARD COLUMN DISTANCE M1
C                 LET M2 = JACCARD ROW SIMILARITY M1
C                 LET M2 = JACCARD COLUMN SIMILARITY M1
C                 LET M2 = PEARSON ROW DISTANCE M1
C                 LET M2 = PEARSON COLUMN DISTANCE M1
C                 LET M2 = PEARSON ROW SIMILARITY M1
C                 LET M2 = PEARSON COLUMN SIMILARITY M1
C                 LET M2 = HAMMING ROW DISTANCE M1
C                 LET M2 = HAMMING COLUMN DISTANCE M1
C                 LET M2 = JACCARD COLUMN DISTANCE M1
C                 LET M2 = MATRIX MAHALONOBIS ROW DISTANCE M1
C                 LET M2 = MATRIX MAHALONOBIS COLUMN DISTANCE M1
C                 LET Y1 = DISTANCE FROM MEAN M1
C                 LET Y2 = LINEAR COMBINATION M Y1
C                 LET M1 = VECTOR TIMES TRANSPOSE Y1
C                 LET M3 = VARIANCE-COVARIANCE MATRIX M1
C                 LET M3 = CORRELATION MATRIX M1
C                 LET M3 = CORRELATION CDF MATRIX M1
C                 LET M3 = CORRELATION PVALUE MATRIX M1
C                 LET M3 = PARTIAL CORRELATION MATRIX M1
C                 LET M3 = PARTIAL CORRELATION CDF MATRIX M1
C                 LET M3 = PARTIAL CORRELATION PVALUE MATRIX M1
C                 LET M3 = COMOVEMENT MATRIX M1
C                 LET M3 = PRINCIPLE COMPONENTS M1
C                 LET V3 = ... PRINCIPLE COMPONENT M1
C                 LET M4 V3 M3 = SINGULAR VALUE M1
C                 LET M4 V3 M3 = SINGULAR VALUE DECOMPOSITION M1
C                 LET M4 V3 M3 = SINGULAR VALUE FACTORIZATION M1
C                 LET M2 = CATCHER MATRIX M1
C                 LET M2 = INDEPENDENT UNIFORM RAND NUMB LOWL UPPL P
C                 LET M2 = CORRELATED UNIFORM RAND NUMB SIGMA N
C                 LET M2 = MULTIVARIATE NORM RAND NUMB V1 M1 N
C                 LET M2 = MULTIVARIATE T RAND NUMB V1 M1 NU N
C                 LET M2 = MULTINOMIAL RAND NUMB V1 M1 N
C                 LET M2 = WISHART RAND NUMB V1 M1 N
C                 LET M2 = DIRICHLET RAND NUMB ALPHA N
C                 LET A2 = DIRICHLET PDF X ALPHA
C                 LET A2 = DIRICHLET LOG PDF X ALPHA
C                 LET M2 = MULTIVARIATE NORM CDF V1 M1 N
C                 LET M2 = MULTIVARIATE T CDF V1 M1 N
C                 LET A2 = MULTINOMIAL PDF X P
C                 LET M2 = XTXINV MATRIX M1
C                 LET Y1 = VARIANCE INFLATION FACTOR M1
C                 LET Y1 = CONDITION INDICES M1
C                 LET M1 = CREATE MATRIX V1 V2 ....VK
C                 LET Y2 X2 TAG = MINIMUM SPANNING TREE Y1 X1
C                 LET EDGE1 EDGE2 = MINIMUM SPANNING TREE DIST
C                 LET M2 = MATRIX RENUMBER M1 V1 V2
C                 LET M2 = ADJACENCY MATRIX EDGE1 EDGE2 NVERT
C                 LET M2 = DIRECTED ADJACENCY MATRIX EDGE1 EDGE2 NVERT
C                 LET Y X TAG = BIPLOT X
C                 LET A0 A0SD A1 A1SD = MATRIX <ROW/COLUMN> FIT M X
C                 LET M1 = VARIABLE TO MATRIX V1 NROWS
C                 LET V1 = MATRIX TO VARIABLE M1
C                 LET M3 = MATRIX COMBINE ROWS    M1 M2
C                 LET M3 = MATRIX COMBINE COLUMNS M1 M2
C                 LET M1 = GENERATE MATRIX <STAT> V1 V2 ... VK
C
C                 LET M1 = DEX CORE X1 X2 ... XK
C                 LET CONFTAG1 CONFTAG2 = DEX CONFOUND X1 X2 ... XK
C                 LET IFLAG = DEX CHECK CLASSIC X1 X2 ... XK
C                 LET ITAG = DEX CHECK CENTER POINTS X1 X2 ... XK
C
C     NOTE--FOR THIS SUBROUTINE, EITHER THE VARIABLES ON THE LEFT
C           OF THE "=" OR ON THE RIGHT OF THE "=" (OR BOTH) INVOLVE
C           A MATRIX RATHER THAN A VARIABLE.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--87/10
C     ORIGINAL VERSION--MARCH 1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --FEBRUARY  1979.
C     UPDATED         --MARCH     1979.
C     UPDATED         --APRIL     1979.
C     UPDATED         --JULY      1979.
C     UPDATED         --JUNE      1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --SEPTEMBER 1981.
C     UPDATED         --OCTOBER   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --JANUARY   1987.
C     UPDATED         --APRIL     1987.
C     UPDATED         --AUGUST    1987.       COMPLEX SQUARE ROOT
C     UPDATED         --AUGUST    1987.       COMPLEX ROOTS (POLYNOMIAL)
C     UPDATED         --AUGUST    1987.       POLYNOMIAL ARITHMETIC
C     UPDATED         --AUGUST    1987.       VECTOR ARITHMETIC
C     UPDATED         --AUGUST    1987.       SET ARITHMETIC
C     UPDATED         --AUGUST    1987.       LOGICAL ARITHMETIC
C     UPDATED         --SEPTEMBER 1987.       FFT AND INVERSE FFT
C     UPDATED         --SEPTEMBER 1987.       MATRIX OPERATIONS
C     UPDATED         --SEPTEMBER 1987.       COMPLEX CONJUGATE
C     UPDATED         --NOVEMBER  1987.  (EXIT OUT IF ERROR)
C     UPDATED         --FEBRUARY  1988.  (BIWEIGHT AND TRICUBE)
C     UPDATED         --JULY      1988.  FRACTAL
C     UPDATED         --AUGUST    1988.  LENGTH TRAP FOR FRACTAL
C     UPDATED         --JANAURY   1988.  BOOTSTRAP SAMPLE
C     UPDATED         --AUGUST    1988.  (VARIANCE-COVARIANCE MATRIX)
C     UPDATED         --AUGUST    1988.  (CORRELATION MATRIX)
C     UPDATED         --AUGUST    1988.  (PRINCIPLE COMPONENTS)
C     UPDATED         --AUGUST    1988.  (... PRINCIPLE COMPONENTS)
C     UPDATED         --JANUARY   1989.  FIX A FORMAT STATEMENT (ALAN)
C     UPDATED         --NOVEMBER  1989.  FIX INTERPOLATION
C     UPDATED         --DECEMBER  1989.  (DEX) GENERATOR MULTIPLICATION
C     UPDATED         --JANUARY   1990.  SUBSAMPLE
C     UPDATED         --JULY      1991.  COCODE ('COCD')
C     UPDATED         --JULY      1991.  COCOPY ('COCP')
C     UPDATED         --FEBRUARY  1992.  FIX COCOPY ('COCP')
C     UPDATED         --MARCH     1992. EXT. SORT&CARRY TO MULTI ARGS
C     UPDATED         --MARCH     1992. ID IN ALL ERROR STATEMENTS
C     UPDATED         --APRIL     1992. SPLIT LONG FORMAT STATEMENTS
C     UPDATED         --MAY       1992. FIX IF .AND. IF
C     UPDATED         --MAY       1992. FIX COMPLEX ARITH./SUBSET BUG
C     UPDATED         --MAY       1992. FIX COMPLEX ARITH./SUBSET BUG
C                     --MAY       1992.(SHOULD FOR POLARI,LOGARI,..?)
C     UPDATED         --JULY      1993. UPDATES FOR MATRIX CODE
C     UPDATED         --AUGUST    1993. UPDATES FOR MATRIX CODE
C     UPDATED         --SEPTEMBER 1993. UPDATES FOR MATRIX CODE
C     UPDATED         --SEPTEMBER 1993. FIX BUG FOR COMPLEX ROOTS
C     UPDATED         --OCTOBER   1993. JACNIFE INDEX
C     UPDATED         --OCTOBER   1993. ADDITIONAL MATRIX COMMANDS
C     UPDATED         --MAY       1994. LINEAR INTERPOLATE, 2D INTERPOL
C                                       BILINEAR INTERPOLATE, BIVARIATE
C                                       INTERPOLATE
C     UPDATED         --JUNE      1995. BUG IN MATRIX REPLACE ELEMENT
C     UPDATED         --AUGUST    1995. ZERO PADDING NO LONGER REQUIRED
C                                       FOR FFT.
C     UPDATED         --JANUARY   1998. RECODE MATRIX CODE TO USE FEWER
C                                       MATRICES (AND THUS CAN HANDLE
C                                       LARGER MATRICES).
C     UPDATED         --JANUARY   1998. RECODE MATRIX CODE TO USE
C                                       1-DIMENSIONAL SCRATCH ARRAYS
C                                       (WILL BE 2-D IN MATARI, MATAR2)
C     UPDATED         --MAY       1998. INTERARRIVAL TIMES CASE
C     UPDATED         --MAY       1998. CUMULATIVE AVERAGE CASE
C     UPDATED         --MAY       1998. REVERSE CASE
C     UPDATED         --MAY       1998. CUMULATIVE HAZARD CASE
C     UPDATED         --MAY       1998. HAZARD CASE
C     UPDATED         --SEPTEMBER 1998. EXPONENTIAL SMOOTHING
C     UPDATED         --JUNE      1998. SOME NEW MATRIX COMMANDS
C     UPDATED         --AUGUST    1998. MATRIX MEAN
C     UPDATED         --AUGUST    1998. MATRIX ADD ROW, MATRIX DELE ROW
C     UPDATED         --AUGUST    1998. DISTANCE FROM MEAN
C     UPDATED         --AUGUST    1998. FOR MATRIX COMMANDS, FIX HOW
C                                       SUBSETTING HANDLED WHEN OUTPUT
C                                       IS SAVED.  THE IUPFLG USED TO
C                                       CONTROL WHETHER OUTPUT IS SAVED
C                                       WITH SUBSETTING OR IS SAVED
C                                       AS A "FULL" MATRIX.  E.G.,
C                                       MATRIX ADDITION MAINTAINS THE
C                                       SUBSET WHEN SAVING THE OUTPUT,
C                                       WHILE CORRELATION MATRIX IS
C                                       SAVED AS A "FULL" MATRIX.
C     UPDATED         --SEPTEMBER 1998. MATRIX GROUP MEANS
C     UPDATED         --SEPTEMBER 1998. MATRIX GROUP SD
C     UPDATED         --SEPTEMBER 1998. POOLED VARIANCE-COVARIANCE
C                                       MATRIX (MORE THAN 2 GROUPS)
C     UPDATED         --OCTOBER   1998. SPLIT INTO 2 ROUTINES
C     UPDATED         --MAY       2002. MULTIVARIATE NORM RAND NUMB
C     UPDATED         --MAY       2002. MULTINOMIAL RAND NUMB
C     UPDATED         --MAY       2002. WISHART RAND NUMB
C     UPDATED         --JUNE      2002. CATCHER MATRIX
C     UPDATED         --JULY      2002. ESSENTIALLY REWRITE FOR
C                                       BETTER CLARITY (MAKE USE
C                                       OF SEVERAL SUBROUTINES)
C     UPDATED         --JULY      2002. CREATE MATRIX
C     UPDATED         --MAY       2003. MULTIVARIATE T RAND NUMB
C     UPDATED         --MAY       2003. INDEPENDENT UNIFORM RAND NUMB
C     UPDATED         --MAY       2003. DIRIHLET RAND NUMB
C     UPDATED         --MAY       2003. MULTIVARIATE NORM CDF
C     UPDATED         --MAY       2003. MULTIVARIATE T CDF
C     UPDATED         --MAY       2003. ARGUMENT LIST TO MATAR3
C     UPDATED         --MAY       2003. FIX MULTINOMIAL RANDOM NUMBERS
C     UPDATED         --SEPTEMBER 2003. CORRELATED MULTIVARIATE
C                                       UNIFORM RANDOM NUMBERS
C     UPDATED         --JUNE      2005. MATRIX SUM
C     UPDATED         --JUNE      2005. MATRIX PARTITION <STAT>
C     UPDATED         --MARCH     2006. MATRIX BIN (NEED TO MODIFY
C                                       CALL LIST TO MATAR3)
C     UPDATED         --MARCH     2006. MATRIX LOWER TRUNCATE
C     UPDATED         --MARCH     2006. MATRIX UPPER TRUNCATE
C     UPDATED         --OCTOBER   2007. COMOVEMENT MATRIX
C     UPDATED         --APRIL     2008. MINIMAL SPANNING TREE
C     UPDATED         --JUNE      2008. MATRIX RENUMBER
C     UPDATED         --JULY      2008. ADJACENCY MATRIX
C     UPDATED         --JANUARY   2009. DISTINCTION BETWEEN "DIRECTED"
C                                       AND "UNDIRECTED" ADJACENCY
C                                       MATRIX
C     UPDATED         --APRIL     2009. BIPLOT
C     UPDATED         --FEBRUARY  2010. MATRIX <ROW/COLUMN> FIT
C     UPDATED         --NOVEMBER  2010. VARIABLE TO MATRIX
C     UPDATED         --NOVEMBER  2010. MATRIX TO VARIABLE
C     UPDATED         --JANUARY   2011. MATRIX COMBINE ROWS
C     UPDATED         --JANUARY   2011. MATRIX COMBINE COLUMNS
C     UPDATED         --SEPTEMBER 2011. MATRIX CONDITION NUMBER
C     UPDATED         --SEPTEMBER 2011. MATRIX RECIPROCAL CONDITION
C                                       NUMBER
C     UPDATED         --JUNE      2012. PARTIAL CORRELATION MATRIX
C     UPDATED         --JUNE      2012. PARTIAL CORRELATION CDF MATRIX
C     UPDATED         --JUNE      2012. PARTIAL CORRELATION PVALUE MATRIX
C     UPDATED         --JUNE      2012. CORRELATION CDF MATRIX
C     UPDATED         --JUNE      2012. CORRELATION PVALUE MATRIX
C     UPDATED         --AUGUST    2017. GENERATE MATRIX <STAT>
C     UPDATED         --JANUARY   2018. DEX CORE
C     UPDATED         --JANUARY   2018. DEX CONFOUND
C     UPDATED         --FEBRUARY  2018. DEX CHECK CLASSIC
C     UPDATED         --AUGUST    2018. COSINE <COLUMN/ROW> DISTANCE
C     UPDATED         --AUGUST    2018. COSINE <COLUMN/ROW> SIMILARITY
C     UPDATED         --AUGUST    2018. ANGULAR COSINE <COLUMN/ROW> DISTANCE
C     UPDATED         --AUGUST    2018. ANGULAR COSINE <COLUMN/ROW> SIMILARITY
C     UPDATED         --AUGUST    2018. JACCARD <COLUMN/ROW> DISTANCE
C     UPDATED         --AUGUST    2018. JACCARD <COLUMN/ROW> SIMILARITY
C     UPDATED         --AUGUST    2018. PEARSON <COLUMN/ROW> DISTANCE
C     UPDATED         --AUGUST    2018. PEARSON <COLUMN/ROW> SIMILARITY
C     UPDATED         --AUGUST    2018. HAMMING <COLUMN/ROW> DISTANCE
C     UPDATED         --AUGUST    2018. CANBERRA <COLUMN/ROW> SIMILARITY
C     UPDATED         --SEPTEMBER 2018. DEX CHECK CENTER POINTS
C     UPDATED         --JULY      2019. TWEAK SCRATCH STORAGE
C     UPDATED         --SEPTEMBER 2022. INCREASE MAXIMUM NUMBER OF
C                                       VARIABLES
C     UPDATED         --JANUARY   2024. TWEAK EQUIVALENCE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASL7
      CHARACTER*4 ICASS7
      CHARACTER*4 IMSUBC
      CHARACTER*4 ISTARA
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
CCCCC PARAMETER(MAXCAS=30)
CCCCC PARAMETER(MAXCAS=999)
      PARAMETER(MAXCAS=2000)
      PARAMETER(MAXCA2=4)
C
      CHARACTER*4 NEWNAM(MAXCA2)
      CHARACTER*4 ICASEQ
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IWRITE
      CHARACTER*4 ITCASE
      CHARACTER*4 IMCASE
C
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IVARN1(MAXCAS)
      CHARACTER*4 IVARN2(MAXCAS)
C
      CHARACTER*4 ILEFT(MAXCA2)
      CHARACTER*4 ILEF2(MAXCA2)
      CHARACTER*4 IHSET
      CHARACTER*4 IHSET2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 IMATSW
      CHARACTER*4 ITYP91
C
      CHARACTER*4 IH1
      CHARACTER*4 IH2
      CHARACTER*4 IHMAT1
      CHARACTER*4 IHMAT2
C
      CHARACTER*4 ITYPA(MAXCAS)
C
      CHARACTER*4 IHCV11
      CHARACTER*4 IHCV12
      CHARACTER*4 IHCV21
      CHARACTER*4 IHCV22
      CHARACTER*4 IHCV31
      CHARACTER*4 IHCV32
C
      CHARACTER*4 IUPFLG
      CHARACTER*4 IFLGLL
C
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 ISUBN0
C
      CHARACTER*4 IRELAT
C
      INTEGER ILISL(MAXCA2)
      INTEGER ICOLL(MAXCA2)
      INTEGER ILOCR(MAXCAS)
      INTEGER ILISR(MAXCAS)
      INTEGER ICOLR(MAXCAS)
      INTEGER NIRIGH(MAXCAS)
      INTEGER NS(MAXCAS)
      REAL TEMPS(MAXCAS)
C
C---------------------------------------------------------------------
C
C     TOTAL FOR THE COMMON FILES IS 20+200+200=420 (SEPT 1987)
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCOZD.INC'
      INCLUDE 'DPCODA.INC'
C
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
      DIMENSION TEMP91(MAXOBV)
      DIMENSION TEMP92(MAXOBV)
      DIMENSION TEMP12(2*MAXOBV)
C
      DIMENSION INDEX(MAXOBV)
      DIMENSION ITEMP1(MAXOBV)
      DIMENSION ITEMP2(MAXOBV)
      DIMENSION ITEMP3(MAXOBV)
      DIMENSION ITEMP4(MAXOBV)
      DIMENSION ITEMP5(MAXOBV)
      DIMENSION ITEMP6(MAXOBV)
      DIMENSION ITEMP7(MAXOBV)
C
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
      DOUBLE PRECISION DTEMP3(MAXOBV)
C
      EQUIVALENCE (DSIZE(1),TEMP1)
      EQUIVALENCE (DSYMB(1),TEMP3)
      EQUIVALENCE (DCOLOR(1),TEMP91)
      EQUIVALENCE (DFILL(1),TEMP92)
      EQUIVALENCE (X3D(1),TEMP12)
C
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1)
      EQUIVALENCE (IGARBG(IIGAR2),ITEMP2)
      EQUIVALENCE (IGARBG(IIGAR3),ITEMP3)
      EQUIVALENCE (IGARBG(IIGAR4),ITEMP4)
      EQUIVALENCE (IGARBG(IIGAR5),ITEMP5)
      EQUIVALENCE (IGARBG(IIGAR6),ITEMP6)
      EQUIVALENCE (IGARBG(IIGAR7),ITEMP7)
      EQUIVALENCE (IGARBG(IIGAR8),INDEX)
C
      EQUIVALENCE (DGARBG(IDGAR1),DTEMP1)
      EQUIVALENCE (DGARBG(IDGAR2),DTEMP2)
      EQUIVALENCE (DGARBG(IDGAR3),DTEMP3)
      EQUIVALENCE (DGARBG(IDGAR4),TEMP2)
      EQUIVALENCE (DGARBG(IDGAR5),TEMP4)
C
      DIMENSION TEMPM1(MAXTOM)
      DIMENSION TEMPM2(MAXTOM)
      DIMENSION TEMM91(MAXTOM)
      EQUIVALENCE (GARBAG(1),TEMPM1)
      EQUIVALENCE (GARBAG(MAXTOM+1),TEMPM2)
      EQUIVALENCE (GARBAG(2*MAXTOM+1),TEMM91)
C
      DIMENSION TEMPV(20)
C
C     2021/01: UP FROM MAX OF 40 CHARACTERS TO MAX OF 80 CHARACTERS
C
      CHARACTER*80 STME(500)
      CHARACTER*80 STMEC(500)
      CHARACTER*80 ST2T(500)
      CHARACTER*80 ST2TC(500)
      CHARACTER*80 STC(500)
      CHARACTER*80 STT(500)
      INCLUDE 'DPCOZC.INC'
      EQUIVALENCE (CGARBG(1),STC(1))
      EQUIVALENCE (CGARBG(100001),STME(1))
      EQUIVALENCE (CGARBG(200001),STMEC(1))
      EQUIVALENCE (CGARBG(300001),ST2T(1))
      EQUIVALENCE (CGARBG(400001),ST2TC(1))
      EQUIVALENCE (CGARBG(500001),STT(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IUPFLG='SUBS'
      ISUBN1='DPMA'
      ISUBN2='T2  '
      IFOUND='NO'
      IERROR='NO'
      IMATSW='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      NUMVAR=0
      NJ=-99
      NIFOR=0
      ILOCR(1)=ILOCV
      DO10I=2,MAXCAS
        ILOCR(I)=ILOCR(I-1)+1
   10 CONTINUE
C
      DO12I=1,MAXCA2
        NEWNAM(I)='NO'
   12 CONTINUE
      NUMVAL=1
C
      ITYP91='VECT'
      SCAL91=(-999.0)
C
      DO14I=1,MAXCAS
        ITYPA(I)='VARI'
        TEMPS(I)=(-999.0)
        ILISR(I)=(-999)
   14 CONTINUE
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAT2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,IBUGQ,ISUBRO,IMSUBC,ICASL7,ILOCV
   52   FORMAT('IBUGA3,IBUGQ,ISUBRO,IMSUBC,ICASL7,ILOCV = ',5(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM(1)='NO'
C
C     ***************************************************************
C     **  STEP 2A--                                                 *
C     **  EXAMINE THE LEFT-HAND SIDE--                              *
C     **  IS THE VARIABLE NAME TO LEFT OF = SIGN                    *
C     **  ALREADY IN THE NAME LIST?    AS A VARIABLE?               *
C     **  NOTE THAT     ILEFT(I)   IS THE NAME OF THE VARIABLE      *
C     **  ON THE LEFT.                                              *
C     **  NOTE THAT     ILISL(I)  IS THE LINE IN THE TABLE          *
C     **  OF THE NAME ON THE LEFT.                                  *
C     **  NOTE THAT     ICOLL(I)  IS THE DATA COLUMN (1 TO 12)      *
C     **  FOR THE NAME OF THE LEFT.                                 *
C     ***************************************************************
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASE=1
      CALL DPMAT6(ICASL7,ICASE,MAXCA2,
     1            ILEFT,ILEF2,NEWNAM,ILISL,ICOLL,
     1            NUMVAL,NIOLD,
     1            IBUGA3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO19000
C
      IF(ICASL7.EQ.'MASD' .OR. ICASL7.EQ.'MASF' .OR.
     1   ICASL7.EQ.'MQRD' .OR. ICASL7.EQ.'MATB' .OR.
     1   ICASL7.EQ.'MARB' .OR. ICASL7.EQ.'MSPT' .OR.
     1   ICASL7.EQ.'BIPL' .OR. ICASL7.EQ.'CONF' .OR.
     1   ICASL7.EQ.'MFTR' .OR. ICASL7.EQ.'MFTC' .OR.
     1   ICASL7.EQ.'MSP2' .OR. ICASL7.EQ.'JOIN')THEN
        ICASE=2
        CALL DPMAT6(ICASL7,ICASE,MAXCA2,
     1              ILEFT,ILEF2,NEWNAM,ILISL,ICOLL,
     1              NUMVAL,NIOLD,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
      ENDIF
C
      IF(ICASL7.EQ.'MASD' .OR. ICASL7.EQ.'MASF' .OR.
     1   ICASL7.EQ.'MFTR' .OR. ICASL7.EQ.'MFTC' .OR.
     1   ICASL7.EQ.'MSPT' .OR. ICASL7.EQ.'BIPL')THEN
        ICASE=3
        CALL DPMAT6(ICASL7,ICASE,MAXCA2,
     1              ILEFT,ILEF2,NEWNAM,ILISL,ICOLL,
     1              NUMVAL,NIOLD,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
      ENDIF
C
      IF(ICASL7.EQ.'MFTR' .OR. ICASL7.EQ.'MFTC')THEN
        ICASE=4
        CALL DPMAT6(ICASL7,ICASE,MAXCA2,
     1              ILEFT,ILEF2,NEWNAM,ILISL,ICOLL,
     1              NUMVAL,NIOLD,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MAT2')THEN
        WRITE(ICOUT,491)
  491   FORMAT('AT THE END OF STEP 2--')
        CALL DPWRST('XXX','BUG ')
        DO494I=1,MAXCA2
        WRITE(ICOUT,492)ILEFT(I),ILEF2(I),NEWNAM(I),NUMNAM,
     1                  ILISL(I),NUMCOL,ICOLL(I),NIOLD
        CALL DPWRST('XXX','BUG ')
  492   FORMAT('ILEFT(I),ILEFT(I),NEWNAM(I),NUMNAM,ILISL(I),',
     1         'NUMCOL,ICOLL(I),NIOLD = ',A4,A4,2X,A4,2X,5I8)
  494   CONTINUE
      ENDIF
C
C     ****************************************************************
C     **  STEP 4--                                                   *
C     **  EXAMINE THE RIGHT-HAND SIDE--                              *
C     **  HAS EACH VARIABLE ON THE RIGHT ALREADY BEEN DEFINED?       *
C     **  NOTE THAT     ILISR(1), ILISR(2), ILISR(3), ILISR(4)       *
C     **  IS THE LINE IN THE TABLE OF THE FIRST, SECOND, THIRD,      *
C     **  FOURTH VARIABLE ON THE RIGHT, RESPECTIVELY.                *
C     **  NOTE THAT     ICOLR(1), ICOLR(2), ICOLR3, ICOLR4           *
C     **  IS THE DATA COLUMN (1 TO 10+6) OF THE FIRST SECOND,        *
C     **  THIRD, FOURTH VARIABLE ON THE RIGHT, RESPECTIVELY.         *
C     ****************************************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ********************************************
C               **  STEP 4.1--                            **
C               **  DETERMINE THE NUMBER OF VARIABLES     **
C               **  ON THE RIGHT--1, 2, 3, OR 4           **
C               ********************************************
C
      ISTEPN='4.1'
      IF(IBUGA3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        WRITE(ICOUT,1021)ICASL7,NUMARG
 1021   FORMAT('ICASL7,NUMARG = ',A4,2X,I2)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IMATSW='YES'
      NUMVAR=1
C
      IF(ICASL7.EQ.'MAIN'.OR.ICASL7.EQ.'MATR'.OR.ICASL7.EQ.'MAEN'.OR.
     1   ICASL7.EQ.'MAAJ'.OR.ICASL7.EQ.'MACE'.OR.ICASL7.EQ.'MAVC'.OR.
     1   ICASL7.EQ.'MAEA'.OR.ICASL7.EQ.'VINF'.OR.ICASL7.EQ.'MACO'.OR.
     1   ICASL7.EQ.'MACC'.OR.ICASL7.EQ.'VINF'.OR.ICASL7.EQ.'MACP'.OR.
     1   ICASL7.EQ.'MACM'.OR.ICASL7.EQ.'BIPL'.OR.ICASL7.EQ.'MPCO'.OR.
     1   ICASL7.EQ.'MPCC'.OR.ICASL7.EQ.'MPCP'.OR.
     1   ICASL7.EQ.'CIND'.OR.ICASL7.EQ.'MAEE'.OR.ICASL7.EQ.'MAPC'.OR.
     1   ICASL7.EQ.'MAP1'.OR.ICASL7.EQ.'MAP2'.OR.ICASL7.EQ.'MAP3'.OR.
     1   ICASL7.EQ.'MAP4'.OR.ICASL7.EQ.'MAP5'.OR.ICASL7.EQ.'MAP6'.OR.
     1   ICASL7.EQ.'MAP7'.OR.ICASL7.EQ.'MAP8'.OR.ICASL7.EQ.'MAP9'.OR.
     1   ICASL7.EQ.'MA10'.OR.(ICASL7.EQ.'MARA'.AND.NUMARG.EQ.5))THEN
        NUMVAR=1
      ELSEIF(
     1   ICASL7.EQ.'MADE'.OR.ICASL7.EQ.'MAPE'.OR.ICASL7.EQ.'MASV'.OR.
     1   ICASL7.EQ.'MASN'.OR.ICASL7.EQ.'MASR'.OR.ICASL7.EQ.'MASD'.OR.
     1   ICASL7.EQ.'MANR'.OR.ICASL7.EQ.'MANC'.OR.ICASL7.EQ.'MATC'.OR.
     1   ICASL7.EQ.'MASF'.OR.ICASL7.EQ.'MACH'.OR.ICASL7.EQ.'MADI'.OR.
     1   ICASL7.EQ.'MAMM'.OR.ICASL7.EQ.'MADM'.OR.ICASL7.EQ.'DIMA'.OR.
     1   ICASL7.EQ.'MAVT'.OR.ICASL7.EQ.'MATI'.OR.ICASL7.EQ.'MPIN'.OR.
     1   ICASL7.EQ.'MDER'.OR.ICASL7.EQ.'MDEC'.OR.ICASL7.EQ.'MDMR'.OR.
     1   ICASL7.EQ.'MDMC'.OR.ICASL7.EQ.'MDBR'.OR.ICASL7.EQ.'MDBC'.OR.
     1   ICASL7.EQ.'MDKR'.OR.ICASL7.EQ.'MDKC'.OR.ICASL7.EQ.'MDCR'.OR.
     1   ICASL7.EQ.'MDCC'.OR.ICASL7.EQ.'MRSC'.OR.ICASL7.EQ.'MCSC'.OR.
     1   ICASL7.EQ.'MCSR'.OR.ICASL7.EQ.'MCSC'.OR.
     1   ICASL7.EQ.'MCDR'.OR.ICASL7.EQ.'MCDC'.OR.
     1   ICASL7.EQ.'MJSR'.OR.ICASL7.EQ.'MJSC'.OR.
     1   ICASL7.EQ.'MJDR'.OR.ICASL7.EQ.'MJDC'.OR.
     1   ICASL7.EQ.'MPDR'.OR.ICASL7.EQ.'MPDC'.OR.
     1   ICASL7.EQ.'MPSR'.OR.ICASL7.EQ.'MPSC'.OR.
     1   ICASL7.EQ.'MHDR'.OR.ICASL7.EQ.'MHDC'.OR.
     1   ICASL7.EQ.'MXDR'.OR.ICASL7.EQ.'MXDC'.OR.
     1   ICASL7.EQ.'MZSR'.OR.ICASL7.EQ.'MASC'.OR.
     1   ICASL7.EQ.'MZDR'.OR.ICASL7.EQ.'MADC'.OR.
     1   ICASL7.EQ.'MROW'.OR.ICASL7.EQ.'MCOL'.OR.ICASL7.EQ.'MGRA'.OR.
     1   ICASL7.EQ.'MATB'.OR.ICASL7.EQ.'MARB'.OR.ICASL7.EQ.'MSP2'.OR.
     1   ICASL7.EQ.'MACN'.OR.ICASL7.EQ.'MARC'.OR.
     1   ICASL7.EQ.'MDIP'.OR.ICASL7.EQ.'MQRD'.OR.ICASL7.EQ.'MSUM')THEN
        NUMVAR=1
      ELSEIF(ICASL7.EQ.'MAAD'.OR.ICASL7.EQ.'MASU'.OR.
     1       ICASL7.EQ.'MAMU'.OR.ICASL7.EQ.'MASO'.OR.
     1       (ICASL7.EQ.'MARA'.AND.NUMARG.EQ.6).OR.
     1       ICASL7.EQ.'MASS'.OR.ICASL7.EQ.'MARW'.OR.
     1       ICASL7.EQ.'MAAU'.OR.ICASL7.EQ.'VMAT'.OR.
     1       ICASL7.EQ.'MATZ'.OR.ICASL7.EQ.'MAUZ'.OR.
     1       ICASL7.EQ.'MAAR'.OR.ICASL7.EQ.'MADR'.OR.
     1       ICASL7.EQ.'MATS'.OR.ICASL7.EQ.'MAIS'.OR.
     1       ICASL7.EQ.'MQFO'.OR.ICASL7.EQ.'MALC'.OR.
     1       ICASL7.EQ.'MAGM'.OR.ICASL7.EQ.'MAGS'.OR.
     1       ICASL7.EQ.'MHT1'.OR.ICASL7.EQ.'MHT2'.OR.
     1       ICASL7.EQ.'MPDF'.OR.ICASL7.EQ.'DPDF'.OR.
     1       ICASL7.EQ.'INRN'.OR.ICASL7.EQ.'DLPD'.OR.
     1       ICASL7.EQ.'MPVC'.OR.ICASL7.EQ.'DIRN'.OR.
     1       ICASL7.EQ.'MFTR'.OR.ICASL7.EQ.'MFTC'.OR.
     1       ICASL7.EQ.'MCRO'.OR.ICASL7.EQ.'MCCO'.OR.
     1       ICASL7.EQ.'MSPT')THEN
        NUMVAR=2
      ELSEIF(ICASL7.EQ.'MASM'.OR.ICASL7.EQ.'MAMI'.OR.
     1       ICASL7.EQ.'MACF'.OR.ICASL7.EQ.'MAEL'.OR.
     1       (ICASL7.EQ.'MADF'.AND.NUMARG.EQ.7).OR.
     1       ICASL7.EQ.'MARR'.OR.ICASL7.EQ.'MVRN'.OR.
     1       ICASL7.EQ.'MURN'.OR.
     1       ICASL7.EQ.'ADMA'.OR.ICASL7.EQ.'ADMD'.OR.
     1       ICASL7.EQ.'WIRN'.OR.ICASL7.EQ.'IURN'.OR.
     1       ICASL7.EQ.'MPAR'.OR.ICASL7.EQ.'MARN')THEN
        NUMVAR=3
      ELSEIF((ICASL7.EQ.'MADF'.AND.NUMARG.EQ.8).OR.
     1       ICASL7.EQ.'MARE'.OR.ICASL7.EQ.'MATD'.OR.
     1       ICASL7.EQ.'MTRN')THEN
        NUMVAR=4
C
C     2023/05: TREAT CREATE MATRIX SEPARATELY
C
      ELSEIF(ICASL7.EQ.'CRMA')THEN
        ISTRT=5
        ILAST=NUMARG
C
C       CHECK FOR LOCATION OF FIRST (IF ANY) SUBSET, EXCEPT OR
C       FOR CLAUSE
C
        DO91051I=ISTRT,NUMARG
          IHRIGH=IHARG(I)
          IHRIG2=IHARG2(I)
          IF(IHRIGH.EQ.'SUBS'.AND.IHRIG2.EQ.'ET  ')THEN
            ILAST=I-1
            GOTO91052
          ELSEIF(IHRIGH.EQ.'EXCE'.AND.IHRIG2.EQ.'PT  ')THEN
            ILAST=I-1
            GOTO91052
          ELSEIF(IHRIGH.EQ.'FOR '.AND.IHRIG2.EQ.'    ')THEN
            ILAST=I-1
            GOTO91052
          ENDIF
91051   CONTINUE
91052   CONTINUE
C
C       CALL EXTVAR SO THAT " TO " SYNTAX CAN BE USED
C
CCCCC   NUMVAR=ILAST-ISTRT+1
        CALL EXTVAR(IHARG,IHARG2,NUMARG,ISTRT,ILAST,MAXCAS,
     1              IHNAME,IHNAM2,IUSE,NUMNAM,
     1              IVARN1,IVARN2,NUMVAR,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
C
        CALL DPMAT8(IVARN1,IVARN2,NUMVAR,
     1              ICOLR,ILISR,NIRIGH,ITYPA,
     1              IBUGA3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
        GOTO7000
C
      ELSEIF(ICASL7.EQ.'CORE' .OR. ICASL7.EQ.'CONF' .OR.
     1       ICASL7.EQ.'CKCL' .OR. ICASL7.EQ.'CKCP')THEN
        ISTRT=5
        IF(ICASL7.EQ.'CONF' .OR. ICASL7.EQ.'CKCL')ISTRT=6
        IF(ICASL7.EQ.'CKCP')ISTRT=7
        ILAST=NUMARG
        DO1051I=ISTRT,NUMARG
          IHRIGH=IHARG(I)
          IHRIG2=IHARG2(I)
          IF(IHRIGH.EQ.'SUBS'.AND.IHRIG2.EQ.'ET  ')THEN
            ILAST=I-1
            GOTO1054
          ELSEIF(IHRIGH.EQ.'EXCE'.AND.IHRIG2.EQ.'PT  ')THEN
            ILAST=I-1
            GOTO1054
          ELSEIF(IHRIGH.EQ.'FOR '.AND.IHRIG2.EQ.'    ')THEN
            ILAST=I-1
            GOTO1054
          ENDIF
 1051   CONTINUE
 1054   CONTINUE
        NUMVAR=ILAST-ISTRT+1
      ELSEIF(ICASL7.EQ.'GMST')THEN
        ISTRT=ILOCV
        ILAST=NUMARG
        DO1056I=ISTRT,ILAST
          IHRIGH=IHARG(I)
          IHRIG2=IHARG2(I)
          IF(IHRIGH.EQ.'SUBS'.AND.IHRIG2.EQ.'ET  ')THEN
            ILAST=I-1
            GOTO1059
          ELSEIF(IHRIGH.EQ.'EXCE'.AND.IHRIG2.EQ.'PT  ')THEN
            ILAST=I-1
            GOTO1059
          ELSEIF(IHRIGH.EQ.'FOR '.AND.IHRIG2.EQ.'    ')THEN
            ILAST=I-1
            GOTO1059
          ENDIF
 1056   CONTINUE
 1059   CONTINUE
        NUMVAR=ILAST-ISTRT+1
      ELSEIF(ICASL7.EQ.'NCDF'.OR.ICASL7.EQ.'TCDF')THEN
        ISTRT=6
        ILAST=NUMARG
        DO1061I=ISTRT,NUMARG
          IHRIGH=IHARG(I)
          IHRIG2=IHARG2(I)
          IF(IHRIGH.EQ.'SUBS'.AND.IHRIG2.EQ.'ET  ')THEN
            ILAST=I-1
            GOTO1064
          ELSEIF(IHRIGH.EQ.'EXCE'.AND.IHRIG2.EQ.'PT  ')THEN
            ILAST=I-1
            GOTO1064
          ELSEIF(IHRIGH.EQ.'FOR '.AND.IHRIG2.EQ.'    ')THEN
            ILAST=I-1
            GOTO1064
          ENDIF
 1061   CONTINUE
 1064   CONTINUE
        NUMVAR=ILAST-ISTRT+1
        IF(ICASL7.EQ.'NCDF')THEN
          IF(NUMVAR.EQ.3)THEN
            IFLGLL='ON'
          ELSEIF(NUMVAR.EQ.2)THEN
            IFLGLL='OFF'
          ELSE
            WRITE(ICOUT,1066)
 1066       FORMAT('***** ERROR FOR MULTIVARIATE NORMAL CDF--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1068)NUMVAR
 1068       FORMAT('      EITHER 2 OR 3 ARGUMENTS EXPECTED, ',I8,
     1             'FOUND.')
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSEIF(ICASL7.EQ.'TCDF')THEN
          IF(NUMVAR.EQ.4)THEN
            IFLGLL='ON'
          ELSEIF(NUMVAR.EQ.3)THEN
            IFLGLL='OFF'
          ELSE
            WRITE(ICOUT,1076)
 1076       FORMAT('***** ERROR FOR MULTIVARIATE T CDF--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1078)NUMVAR
 1078       FORMAT('      EITHER 3 OR 4 ARGUMENTS EXPECTED, ',I8,
     1             'FOUND.')
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ENDIF
C
      IMATSW='NO'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        WRITE(ICOUT,1091)ICASL7,NUMVAR
 1091   FORMAT('ICASL7,NUMVAR = ',A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************************
C               **  STEP 5.1--                       **
C               **  EXAMINE THE VARIABLES            **
C               **  ON THE RIGHT.                    **
C               ***************************************
C
C
      ISTEPN='5.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     2023/05:  FOR CASES THAT CAN HAVE 5 OR MORE VARIABLES,
C               TREAT SPECIAL.  SPECIFICALLY SUPPORT "TO" SYNTAX.
C               ALSO THESE CASES ONLY WANT VARIABLES.
C
C               5 VARIABLES OR MORE CURRENTLY ONLY RELEVANT FOR THE
C               "CREATE MATRIX", "DEX CORE", AND "DEX CONFOUND" COMMANDS.
C
      IF(NUMVAR.GE.5)THEN
        DO1110ICASE=5,NUMVAR
          IFLAG1=0
          CALL DPMAT7(ICASL7,ICASE,MAXCAS,ILOCR,
     1                IHRIGH,IHRIG2,ICOLR,ILISR,NIRIGH,ITYPA,TEMPS,
     1                IFLAG1,ATEMP,ITEMP,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
 1110   CONTINUE
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
      IFLAG1=0
      IF(ICASL7.EQ.'MAAD'.OR.ICASL7.EQ.'MASU'.OR.ICASL7.EQ.'MAMU'.OR.
     1   ICASL7.EQ.'JAIN'.OR.ICASL7.EQ.'MATZ'.OR.ICASL7.EQ.'MAUZ')THEN
         IFLAG1=1
      ENDIF
      ICASE=1
      CALL DPMAT7(ICASL7,ICASE,MAXCAS,ILOCR,
     1IHRIGH,IHRIG2,ICOLR,ILISR,NIRIGH,ITYPA,TEMPS,
     1IFLAG1,ATEMP,ITEMP,
     1IBUGA3,ISUBRO,IFOUND,IERROR)
      IF(ITYPA(ICASE).EQ.'MATR')IMATSW='YES'
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(NUMVAR.GE.2)THEN
        IFLAG1=0
        IF(ICASL7.EQ.'MAAD'.OR.ICASL7.EQ.'MASU'.OR.ICASL7.EQ.'MAMU'.OR.
     1     ICASL7.EQ.'MASM'.OR.ICASL7.EQ.'MAMI'.OR.ICASL7.EQ.'MACF'.OR.
     1     ICASL7.EQ.'MADF'.OR.ICASL7.EQ.'MARA'.OR.ICASL7.EQ.'MARW'.OR.
     1     ICASL7.EQ.'MAEL'.OR.ICASL7.EQ.'MARE'.OR.ICASL7.EQ.'JAIN'.OR.
     1     ICASL7.EQ.'DIRN'.OR.ICASL7.EQ.'TCDF'.OR.ICASL7.EQ.'INRN'.OR.
     1     ICASL7.EQ.'MPAR'.OR.ICASL7.EQ.'MATZ'.OR.ICASL7.EQ.'MAUZ'.OR.
     1     ICASL7.EQ.'MFTR'.OR.ICASL7.EQ.'MFTC'.OR.ICASL7.EQ.'MAUZ'.OR.
     1     ICASL7.EQ.'MFTR'.OR.ICASL7.EQ.'MFTC'.OR.ICASL7.EQ.'MAUZ'.OR.
     1     ICASL7.EQ.'VMAT'.OR.
     1     ICASL7.EQ.'EXPS'.OR.ICASL7.EQ.'MADR'.OR.ICASL7.EQ.'MURN')
     1  THEN
          IFLAG1=1
        ENDIF
          ICASE=2
          CALL DPMAT7(ICASL7,ICASE,MAXCAS,ILOCR,
     1                IHRIGH,IHRIG2,ICOLR,ILISR,NIRIGH,ITYPA,TEMPS,
     1                IFLAG1,ATEMP,ITEMP,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
          IF(ITYPA(ICASE).EQ.'MATR')IMATSW='YES'
          IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
      IF(NUMVAR.GE.3)THEN
        IFLAG1=0
        IF(ICASL7.EQ.'MAAD'.OR.ICASL7.EQ.'MASU'.OR.ICASL7.EQ.'MAMU'.OR.
     1     ICASL7.EQ.'MASM'.OR.ICASL7.EQ.'MAMI'.OR.ICASL7.EQ.'MACF'.OR.
     1     ICASL7.EQ.'MADF'.OR.ICASL7.EQ.'MAEL'.OR.ICASL7.EQ.'MARE'.OR.
     1     ICASL7.EQ.'MARR'.OR.ICASL7.EQ.'MVRN'.OR.ICASL7.EQ.'MURN'.OR.
     1     ICASL7.EQ.'WIRN'.OR.ICASL7.EQ.'MADR'.OR.ICASL7.EQ.'MURN'.OR.
     1     ICASL7.EQ.'MPAR'.OR.ICASL7.EQ.'ADMA'.OR.ICASL7.EQ.'ADMD'.OR.
     1     ICASL7.EQ.'IURN'.OR.ICASL7.EQ.'MTRN')
     1  THEN
           IFLAG1=1
        ENDIF
        ICASE=3
        CALL DPMAT7(ICASL7,ICASE,MAXCAS,ILOCR,
     1              IHRIGH,IHRIG2,ICOLR,ILISR,NIRIGH,ITYPA,TEMPS,
     1              IFLAG1,ATEMP,ITEMP,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(ITYPA(ICASE).EQ.'MATR')IMATSW='YES'
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
      IF(NUMVAR.GE.4)THEN
        IFLAG1=0
        IF(ICASL7.EQ.'MAAD'.OR.ICASL7.EQ.'MASU'.OR.ICASL7.EQ.'MARA'.OR.
     1     ICASL7.EQ.'MAMU'.OR.ICASL7.EQ.'MADF'.OR.ICASL7.EQ.'MARE'.OR.
     1     ICASL7.EQ.'MURN'.OR.ICASL7.EQ.'MTRN')THEN
           IFLAG1=1
        ENDIF
        ICASE=4
        CALL DPMAT7(ICASL7,ICASE,MAXCAS,ILOCR,
     1              IHRIGH,IHRIG2,ICOLR,ILISR,NIRIGH,ITYPA,TEMPS,
     1              IFLAG1,ATEMP,ITEMP,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(ITYPA(ICASE).EQ.'MATR')IMATSW='YES'
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
C     *******************************
C     **  STEP 7--                 **
C     **  DETERMINE THE SUBCASE    **
C     **  AND BRANCH ACCORDINGLY.  **
C     *******************************
C
 7000 CONTINUE
C
      ISTEPN='7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,7003)NUMVAR,NUMARG
 7003   FORMAT('7008--NUMVAR,NUMARG = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO7005I=1,NUMVAR
          WRITE(ICOUT,7008)I,ITYPA(I),ILOCR(I)
 7008     FORMAT('7008-I,ITYPA(I),ILOCR(I) = ',I4,2X,A4,2X,I8)
          CALL DPWRST('XXX','BUG ')
 7005   CONTINUE
        WRITE(ICOUT,7006)IHARG(ILOCR(NUMVAR)),IHARG2(ILOCR(NUMVAR))
 7006   FORMAT('IHARG(ILOCR(NUMVAR)),IHARG2(ILOCR(NUMVAR)) = ',2A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7007)IHARG(ILOCR(NUMVAR)+1),
     1                   IHARG2(ILOCR(NUMVAR)+1)
 7007   FORMAT('IHARG(ILOCR(NUMVAR)+1),IHARG2(ILOCR(NUMVAR)+1) = ',
     1         2A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASL7.NE.'CRMA'.AND.ICASL7.NE.'GMST'.AND.ICASL7.NE.'CORE'.AND.
     1   ICASL7.NE.'CONF'.AND.ICASL7.NE.'CKCL'.AND.ICASL7.NE.'CKCP'.AND.
     1   NUMVAR.GE.5)THEN
        WRITE(ICOUT,7011)
 7011   FORMAT('***** ERROR IN DPMAT2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7012)
 7012   FORMAT('      ILLEGAL SYNTAX FOR LET COMMAND AT 7000--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7013)
 7013   FORMAT('      THERE WERE 5 OR MORE VARIABLES ON THE RIGHT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7014)
 7014   FORMAT('      HAND SIDE OF THE EQUAL SIGN.  THERE ARE NO')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7015)
 7015   FORMAT('      MATRIX  LET  SYNTAXES (EXCEPT CREATE MATRIX)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7016)
 7016   FORMAT('      WITH THAT MANY VARIABLES ON THE RIGHT.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7017)
 7017   FORMAT('      THE COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7019)(IANS(I),I=1,MAX(100,IWIDTH))
 7019   FORMAT(100A1)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO19000
      ENDIF
C
      IF(ILOCR(NUMVAR).EQ.NUMARG)GOTO8000
C
C     2023/05: CREATE MATRIX NOW SUPPORT " TO " SYNATX, SO
C              HANDLE SEPARETLY FOR SUBSET/EXCEPT/FOR CLAUSES
C
      IF(ICASL7.EQ.'CRMA')THEN
        DO77001II=5,NUMARG
          IF(IHARG(II).EQ.'SUBS'.AND.IHARG2(II).EQ.'ET  ')THEN
            IT1=ILOCR(II)
            GOTO9000
          ELSEIF(IHARG(II).EQ.'EXCE'.AND.IHARG2(II).EQ.'PT  ')THEN
            IT1=ILOCR(II)
            GOTO9000
          ELSEIF(IHARG(II).EQ.'FOR '.AND.IHARG2(II).EQ.'    ')THEN
            IT1=ILOCR(II)
            GOTO10000
           ENDIF
77001   CONTINUE
        GOTO8000
      ENDIF
C
      IF(ILOCR(NUMVAR).LT.NUMARG)THEN
        IT1=ILOCR(NUMVAR+1)
        IF(IHARG(IT1).EQ.'SUBS'.AND.IHARG2(IT1).EQ.'ET  ')GOTO9000
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
          WRITE(ICOUT,7009)
 7009     FORMAT('AFTER TEST FOR SUBSET')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7006)IHARG(ILOCR(NUMVAR)),
     1                     IHARG2(ILOCR(NUMVAR))
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7007)IHARG(ILOCR(NUMVAR)+1),
     1                     IHARG2(ILOCR(NUMVAR)+1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(IHARG(IT1).EQ.'EXCE'.AND.IHARG2(IT1).EQ.'PT  ')GOTO9000
        IF(IHARG(IT1).EQ.'FOR '.AND.IHARG2(IT1).EQ.'    ')GOTO10000
      ENDIF
C
      WRITE(ICOUT,7081)
 7081 FORMAT('***** ERROR 7081 IN DPMAT2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,7082)
 7082 FORMAT('      ILLEGAL SYNTAX FOR LET COMMAND AT 7082--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,7017)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,7019)(IANS(I),I=1,MIN(100,IWIDTH))
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,7088)ILOCV,NUMARG,NUMVAR
 7088 FORMAT('ILOCV,NUMARG,NUMVAR = ',3I8)
      CALL DPWRST('XXX','BUG ')
      DO7089I=1,NUMVAR
        WRITE(ICOUT,7086)I,ILOCR(I)
 7086   FORMAT('I,ILOCR(I) = ',I4,2X,I8)
        CALL DPWRST('XXX','BUG ')
 7089 CONTINUE
      IERROR='YES'
      GOTO19000
C
C     ************************************************
C     **  STEP 8--                                  **
C     **  TREAT THE FULL VARIABLE CASE.             **
C     **  EXAMPLE--LET Y = COVARIANCE MATRIX X      **
C     **  THEN JUMP TO STEP NUMBER 10 BELOW         **
C     **  FOR THE LIST UPDATING AND                 **
C     **  FOR SOME INFORMATIVE PRINTING.            **
C     ************************************************
C
C
 8000 CONTINUE
      ISTEPN='8'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,8011)NINEW,NIRIGH(1)
 8011   FORMAT('NINEW,NIRIGH(1) = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ICASEQ='FULL'
      NIOLD=NIRIGH(1)
      IF(NUMVAR.GE.2)THEN
        DO8020I=2,NUMVAR
          IF(NIRIGH(I).GT.NIOLD)NIOLD=NIRIGH(I)
 8020   CONTINUE
      ENDIF
      NINEW=NIOLD
      DO8100I=1,NINEW
      ISUB(I)=1
 8100 CONTINUE
      GOTO11000
C
C     ****************************************************************
C     **  STEP 9--                                                   *
C     **  TREAT THE PARTIAL VARIABLE SUBSET CASE.                    *
C     **  EXAMPLE--LET Y = SORT X     SUBSET 2 3 5                   *
C     **         --LET Y(I) = SORT X  SUBSET 2 3 5                   *
C     **  JUMP TO STEP NUMBER 11 BELOW                               *
C     **  FOR THE ACTUAL MATHEMATICAL OPERATION,                     *
C     **  FOR THE LIST UPDATING, AND                                 *
C     **  FOR SOME INFORMATIVE PRINTING.                             *
C     ****************************************************************
C
 9000 CONTINUE
      ISTEPN='9'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='SUBS'
      ILOCSV=ILOCR(NUMVAR)+2
      IHSET=IHARG(ILOCSV)
      IHSET2=IHARG2(ILOCSV)
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        WRITE(ICOUT,9002)ILOCSV,IHSET,IHSET2
 9002   FORMAT('ILOCSV,IHSET,IHSET2 = ',I8,2X,A4,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHSET,IHSET2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
      IF(IERROR.EQ.'YES')GOTO19000
      NIOLD=IN(ILOC)
      CALL DPSUBS(NIOLD,ILOCS,NSTEMP,IBUGQ,IERROR)
      NINEW=NIOLD
      GOTO11000
C
C     ****************************************************************
C     **  STEP 10--                                                  *
C     **  TREAT THE PARTIAL VARIABLE FOR CASE.                       *
C     **  EXAMPLE--LET Y = SORT X     FOR I = 1 2 10                 *
C     **         --LET Y(I) = SORT X  FOR I = 1 2 10                 *
C     **  JUMP TO STEP NUMBER 11 BELOW                               *
C     **  FOR THE ACTUAL MATHEMATICAL OPERATION,                     *
C     **  FOR THE LIST UPDATING, AND                                 *
C     **  FOR SOME INFORMATIVE PRINTING.                             *
C     ****************************************************************
C
10000 CONTINUE
      ISTEPN='10'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FOR'
      CALL DPFOR(NIOLD,NINEW,IROW1,IROWN,
     1NLOCAL,ILOCS,NSTEMP,IBUGQ,IERROR)
      NIFOR=NINEW
      GOTO11000
C
C               *******************************************
C               **  STEP 11--                            **
C               **  CARRY OUT THE                        **
C               **  MATHEMATICAL OPERATION.              **
C               *******************************************
C
11000 CONTINUE
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        DO11109I=1,NUMVAR
        WRITE(ICOUT,11101)I,ITYPA(I)
11101   FORMAT('11101--I,ITYPA(I) = ',I4,2X,A4)
        CALL DPWRST('XXX','BUG ')
11109   CONTINUE
      ENDIF
C
      NITEMX=NINEW
      DO11113I=1,MAXCAS
        NS(I)=0
11113 CONTINUE
C
CCCCC CREATE MATRIX, DEX CORE, DEX CONFOUND, AND DEX CHECK CLASSIC
CCCCC HANDLED SEPARATELY, VARIABLES ARE COPIED INTO A MATRIX.
C
      IF(ICASL7.EQ.'CRMA' .OR. ICASL7.EQ.'CORE' .OR.
     1   ICASL7.EQ.'CONF' .OR. ICASL7.EQ.'CKCL' .OR.
     1   ICASL7.EQ.'CKCP')THEN
        IMCASE=ICASL7
        IMATSW='YES'
        DO11010K=1,NUMVAR
          IF(ITYPA(K).EQ.'VARI')THEN
            NJ=0
            DO11011I=1,NINEW
              IJ=MAXN*(ICOLR(K)-1)+I
              IF(ISUB(I).EQ.0)GOTO11011
              IF(I.GT.NIRIGH(K))GOTO11019
              NJ=NJ+1
              IF(NJ.GT.MAXROM)GOTO11019
              IJ=MAXN*(ICOLR(K)-1)+I
              IJ2=(K-1)*MAXROM+NJ
C
              IF(IJ2.GT.MAXTOM)THEN
                WRITE(ICOUT,999)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,7011)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,62132)
62132           FORMAT('      IN CREATING A MATRIX, THE NUMBER OF ',
     1                 'VALUES')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,62133)
62133           FORMAT('      (NUMBER OF ROWS TIMES NUMBER OF COLUMNS)')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,62134)MAXTOMM
62134           FORMAT('      EXCEEDED THE CURRENT MAXIMUM (',I10,').')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,62135)
62135           FORMAT('      THE MATRIX WAS NOT CREATED.')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO19000
              ENDIF
C
              IF(ICOLR(K).LE.MAXCOL)TEMPM1((K-1)*MAXROM+NJ)=V(IJ)
              IF(ICOLR(K).EQ.MAXCP1)TEMPM1((K-1)*MAXROM+NJ)=PRED(I)
              IF(ICOLR(K).EQ.MAXCP2)TEMPM1((K-1)*MAXROM+NJ)=RES(I)
              IF(ICOLR(K).EQ.MAXCP3)TEMPM1((K-1)*MAXROM+NJ)=YPLOT(I)
              IF(ICOLR(K).EQ.MAXCP4)TEMPM1((K-1)*MAXROM+NJ)=XPLOT(I)
              IF(ICOLR(K).EQ.MAXCP5)TEMPM1((K-1)*MAXROM+NJ)=X2PLOT(I)
              IF(ICOLR(K).EQ.MAXCP6)TEMPM1((K-1)*MAXROM+NJ)=TAGPLO(I)
11011       CONTINUE
11019       CONTINUE
          ENDIF
11010   CONTINUE
        NR1=NJ
        IF(NR1.GT.MAXROM)NR1=MAXROM
        NR2=0
        NR3=0
        NC1=NUMVAR
        NC2=0
        NC3=0
        GOTO11189
C
CCCCC GENERATE MATRIX <STAT> HANDLED SEPARATELY.  COMPUTE STATISTIC
CCCCC FOR EACH PAIRWISE SET OF VARIABLES AND STORE THE RESULT IN A
CCCCC SQUARE MATRIX.  NOTE THAT NOT ALL STATISTICS ARE NECCESSARILY
CCCCC SYMMETRIC (E.G., SOME OF THE MATCHING STATISTICS), SO COMPUTE
CCCCC (I,J) AND (J,I) CASES SEPARATELY EVEN THOUGH THAT MAY BE
CCCCC REDUNDANT IN MOST CASES.
C
      ELSEIF(ICASL7.EQ.'GMST')THEN
        IMCASE=ICASL7
        IMATSW='YES'
C
        DO21030II=1,NUMVAR*NUMVAR
          TEMPM1(II)=CPUMIN
21030   CONTINUE
C
        DO21010KROW=1,NUMVAR
C
C         EXTRACT FIRST RESPONSE VARIABLE
C
          IF(ITYPA(KROW).EQ.'VARI')THEN
            NJ=0
            DO21011I=1,NINEW
              IJ=MAXN*(ICOLR(KROW)-1)+I
              IF(ISUB(I).EQ.0)GOTO21011
              IF(I.GT.NIRIGH(KROW))GOTO21019
              NJ=NJ+1
              IJ=MAXN*(ICOLR(KROW)-1)+I
              IF(ICOLR(KROW).LE.MAXCOL)TEMP1(NJ)=V(IJ)
              IF(ICOLR(KROW).EQ.MAXCP1)TEMP1(NJ)=PRED(I)
              IF(ICOLR(KROW).EQ.MAXCP2)TEMP1(NJ)=RES(I)
              IF(ICOLR(KROW).EQ.MAXCP3)TEMP1(NJ)=YPLOT(I)
              IF(ICOLR(KROW).EQ.MAXCP4)TEMP1(NJ)=XPLOT(I)
              IF(ICOLR(KROW).EQ.MAXCP5)TEMP1(NJ)=X2PLOT(I)
              IF(ICOLR(KROW).EQ.MAXCP6)TEMP1(NJ)=TAGPLO(I)
21011       CONTINUE
21019       CONTINUE
            NS1=NJ
          ENDIF
C
          DO21020KCOL=1,NUMVAR
C
C           EXTRACT SECOND RESPONSE VARIABLE
C
            IF(ITYPA(KCOL).EQ.'VARI')THEN
              NJ=0
              DO21021I=1,NINEW
                IJ=MAXN*(ICOLR(KCOL)-1)+I
                IF(ISUB(I).EQ.0)GOTO21021
                IF(I.GT.NIRIGH(KCOL))GOTO21029
                NJ=NJ+1
                IJ=MAXN*(ICOLR(KCOL)-1)+I
                IF(ICOLR(KCOL).LE.MAXCOL)TEMP2(NJ)=V(IJ)
                IF(ICOLR(KCOL).EQ.MAXCP1)TEMP2(NJ)=PRED(I)
                IF(ICOLR(KCOL).EQ.MAXCP2)TEMP2(NJ)=RES(I)
                IF(ICOLR(KCOL).EQ.MAXCP3)TEMP2(NJ)=YPLOT(I)
                IF(ICOLR(KCOL).EQ.MAXCP4)TEMP2(NJ)=XPLOT(I)
                IF(ICOLR(KCOL).EQ.MAXCP5)TEMP2(NJ)=X2PLOT(I)
                IF(ICOLR(KCOL).EQ.MAXCP6)TEMP2(NJ)=TAGPLO(I)
21021         CONTINUE
21029         CONTINUE
              NS2=NJ
            ENDIF
C
C           NOW COMPUTE THE STATISTIC
C
            NUMV2=2
            CALL CMPSTA(TEMP1,TEMP2,TEMP3,TEMP4,TEMP91,TEMP92,
     1                  TEMP12(1),TEMP12(MAXOBV+1),
     1                  MAXOBV,NS1,NS2,NS1,NUMV2,ICASS7,ISTARA,
     1                  ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                  DTEMP1,DTEMP2,DTEMP3,
     1                  RIGHT,
     1                  ISUBRO,IBUGA3,IERROR)
             IF(IERROR.EQ.'YES')GOTO9000
             INDX=(KCOL-1)*MAXROM + KROW
             TEMPM1(INDX)=RIGHT
C
21020     CONTINUE
C
21010   CONTINUE
        NR1=NUMVAR
        IF(NR1.GT.MAXROM)NR1=MAXROM
        NR2=0
        NR3=0
        NC1=NUMVAR
        NC2=0
        NC3=0
        GOTO11189
      ENDIF
C
      DO11110K=1,MIN(NUMVAR,4)
        IF(ITYPA(K).EQ.'VARI')THEN
          DO11111I=1,NINEW
            IJ=MAXN*(ICOLR(K)-1)+I
CCCCC       IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
CCCCC         WRITE(ICOUT,11112)I,NS(K),NINEW,ISUB(I),IJ,V(IJ)
C11112        FORMAT('I,NS(K),NINEW,ISUB(I),IJ,V(IJ) = ',5I8,F12.5)
CCCCC         CALL DPWRST('XXX','BUG ')
CCCCC       ENDIF
            IF(ISUB(I).EQ.0)GOTO11111
            IF(I.GT.NIRIGH(K))GOTO11119
            NS(K)=NS(K)+1
            IJ=MAXN*(ICOLR(K)-1)+I
            IF(ICOLR(K).LE.MAXCOL)TEMP4(NS(K))=V(IJ)
            IF(ICOLR(K).EQ.MAXCP1)TEMP4(NS(K))=PRED(I)
            IF(ICOLR(K).EQ.MAXCP2)TEMP4(NS(K))=RES(I)
            IF(ICOLR(K).EQ.MAXCP3)TEMP4(NS(K))=YPLOT(I)
            IF(ICOLR(K).EQ.MAXCP4)TEMP4(NS(K))=XPLOT(I)
            IF(ICOLR(K).EQ.MAXCP5)TEMP4(NS(K))=X2PLOT(I)
            IF(ICOLR(K).EQ.MAXCP6)TEMP4(NS(K))=TAGPLO(I)
11111     CONTINUE
11119     CONTINUE
          IF(K.EQ.1)THEN
            DO11126J=1,NS(K)
              TEMP1(J)=TEMP4(J)
CCCCC         IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
CCCCC           WRITE(ICOUT,11137)K,J,TEMP1(J)
C11137           FORMAT('K,J,TEMP1(J) = ',2I8,E15.7)
CCCCC           CALL DPWRST('XXX','BUG ')
CCCCC         ENDIF
11126       CONTINUE
          ELSEIF(K.EQ.2)THEN
            DO11127J=1,NS(K)
              TEMP2(J)=TEMP4(J)
CCCCC         IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
CCCCC           WRITE(ICOUT,11138)K,J,TEMP1(J)
C11138           FORMAT('K,J,TEMP1(J) = ',2I8,E15.7)
CCCCC           CALL DPWRST('XXX','BUG ')
CCCCC         ENDIF
11127       CONTINUE
          ELSEIF(K.EQ.3)THEN
            DO11128J=1,NS(K)
              TEMP3(J)=TEMP4(J)
CCCCC         IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
CCCCC           WRITE(ICOUT,11139)K,J,TEMP1(J)
C11139           FORMAT('K,J,TEMP1(J) = ',2I8,E15.7)
CCCCC           CALL DPWRST('XXX','BUG ')
CCCCC         ENDIF
11128       CONTINUE
          ENDIF
        ENDIF
11110 CONTINUE
C
C     -----BEGIN MATRIX COPY-----
C
      IF(ICASL7.EQ.'MADF')IMATSW='YES'
      IF(ICASL7.EQ.'DIMA')IMATSW='YES'
      IF(ICASL7.EQ.'MAVT')IMATSW='YES'
      IF(IMATSW.EQ.'NO')GOTO11290
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        IF(ITYPA(1).EQ.'MATR')THEN
          WRITE(ICOUT,11201)ILISR(1),ICOLR(1),IVALUE(ILISR(1)),
     1                      IVALU2(ILISR(1))
11201     FORMAT('11201--ILISR(1),ICOLR(1),IVALUE(ILISR(1)),',
     1           'IVALU2(ILISR(1))=',14I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        DO11208I=1,MIN(4,NUMVAR)
          WRITE(ICOUT,11202)I,ITYPA(I)
11202     FORMAT('11202--I,ITYPA(I) = ',I4,2X,A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11204)I,ILISR(I),IVALU2(ILISR(I))
11204     FORMAT('11204--I,ILISR(I),IVALU2(I) = ',3I8)
          CALL DPWRST('XXX','BUG ')
11208   CONTINUE
      ENDIF
C
      NC1=1
      NC2=1
      NC3=1
      IF(ITYPA(1).EQ.'MATR'.AND.NUMVAR.GE.1)
     1NC1=IVALU2(ILISR(1))-IVALUE(ILISR(1))+1
      IF(ITYPA(2).EQ.'MATR'.AND.NUMVAR.GE.2)
     1NC2=IVALU2(ILISR(2))-IVALUE(ILISR(2))+1
      IF(ITYPA(3).EQ.'MATR'.AND.NUMVAR.GE.3)
     1NC3=IVALU2(ILISR(3))-IVALUE(ILISR(3))+1
      IF(ICASL7.EQ.'MADF')NC1=INT(TEMPS(3)+0.1)
C
      IF(NUMVAR.LE.0)GOTO11219
      IF(ITYPA(1).EQ.'MATR'.OR.ICASL7.EQ.'MADF')THEN
        NLOOP=NC1
        IF(NLOOP.LT.1)NLOOP=1
        DO11211JLOOP=1,NLOOP
          NS(1)=0
          DO11212I=1,NINEW
          IJ=MAXN*(ICOLR(1)-1+JLOOP-1)+I
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
            WRITE(ICOUT,11213)I,JLOOP,NS(1),NINEW,ISUB(I),IJ,V(IJ)
11213       FORMAT('I,JLOOP,NS(1),NINEW,ISUB(I),IJ,V(IJ) = ',6I8,F12.5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(ISUB(I).EQ.0)GOTO11212
          IF(I.GT.NIRIGH(1))GOTO11214
          NS(1)=NS(1)+1
          IJ=MAXN*(ICOLR(1)-1+JLOOP-1)+I
          IF(ICOLR(1).LE.MAXCOL)TEMPM1((JLOOP-1)*MAXROM+NS(1))=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)TEMPM1((JLOOP-1)*MAXROM+NS(1))=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)TEMPM1((JLOOP-1)*MAXROM+NS(1))=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)TEMPM1((JLOOP-1)*MAXROM+NS(1))=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)TEMPM1((JLOOP-1)*MAXROM+NS(1))=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)TEMPM1((JLOOP-1)*MAXROM+NS(1))=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)TEMPM1((JLOOP-1)*MAXROM+NS(1))=TAGPLO(I)
11212     CONTINUE
11214     CONTINUE
11211   CONTINUE
      ENDIF
11219 CONTINUE
C
      IF(NUMVAR.LE.1)GOTO11229
      IF(ITYPA(2).EQ.'MATR')THEN
        NLOOP=NC2
        IF(NLOOP.LT.1)NLOOP=1
        DO11221JLOOP=1,NLOOP
          NS(2)=0
          DO11222I=1,NINEW
          IJ=MAXN*(ICOLR(2)-1+JLOOP-1)+I
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
            WRITE(ICOUT,11223)I,JLOOP,NS(2),NINEW,ISUB(I),IJ,V(IJ)
11223       FORMAT('I,JLOOP,NS(2),NINEW,ISUB(I),IJ,V(IJ) = ',6I8,F12.5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IF(ISUB(I).EQ.0)GOTO11222
          IF(I.GT.NIRIGH(2))GOTO11224
          NS(2)=NS(2)+1
          IJ=MAXN*(ICOLR(2)-1+JLOOP-1)+I
          IF(ICOLR(2).LE.MAXCOL)TEMPM2((JLOOP-1)*MAXROM+NS(2))=V(IJ)
          IF(ICOLR(2).EQ.MAXCP1)TEMPM2((JLOOP-1)*MAXROM+NS(2))=PRED(I)
          IF(ICOLR(2).EQ.MAXCP2)TEMPM2((JLOOP-1)*MAXROM+NS(2))=RES(I)
          IF(ICOLR(2).EQ.MAXCP3)TEMPM2((JLOOP-1)*MAXROM+NS(2))=YPLOT(I)
          IF(ICOLR(2).EQ.MAXCP4)TEMPM2((JLOOP-1)*MAXROM+NS(2))=XPLOT(I)
          IF(ICOLR(2).EQ.MAXCP5)TEMPM2((JLOOP-1)*MAXROM+NS(2))=X2PLOT(I)
          IF(ICOLR(2).EQ.MAXCP6)TEMPM2((JLOOP-1)*MAXROM+NS(2))=TAGPLO(I)
11222     CONTINUE
11224     CONTINUE
11221   CONTINUE
      ENDIF
11229 CONTINUE
C
      IF(NUMVAR.LE.2)GOTO11239
        IF(ITYPA(3).EQ.'MATR')THEN
        NLOOP=NC3
        IF(NLOOP.LT.1)NLOOP=1
        DO11231JLOOP=1,NLOOP
          NS(3)=0
          DO11232I=1,NINEW
          IJ=MAXN*(ICOLR(3)-1+JLOOP-1)+I
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
            WRITE(ICOUT,11233)I,JLOOP,NS(3),NINEW,ISUB(I),IJ,V(IJ)
11233       FORMAT('I,JLOOP,NS(3),NINEW,ISUB(I),IJ,V(IJ) = ',6I8,F12.5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IF(ISUB(I).EQ.0)GOTO11232
          IF(I.GT.NIRIGH(3))GOTO11234
          NS(3)=NS(3)+1
          IJ=MAXN*(ICOLR(3)-1+JLOOP-1)+I
          IF(ICOLR(3).LE.MAXCOL)TEMM91((JLOOP-1)*MAXROM+NS(3))=V(IJ)
          IF(ICOLR(2).EQ.MAXCP1)TEMM91((JLOOP-1)*MAXROM+NS(3))=PRED(I)
          IF(ICOLR(2).EQ.MAXCP2)TEMM91((JLOOP-1)*MAXROM+NS(3))=RES(I)
          IF(ICOLR(2).EQ.MAXCP3)TEMM91((JLOOP-1)*MAXROM+NS(3))=YPLOT(I)
          IF(ICOLR(2).EQ.MAXCP4)TEMM91((JLOOP-1)*MAXROM+NS(3))=XPLOT(I)
          IF(ICOLR(2).EQ.MAXCP5)TEMM91((JLOOP-1)*MAXROM+NS(3))=X2PLOT(I)
          IF(ICOLR(2).EQ.MAXCP6)TEMM91((JLOOP-1)*MAXROM+NS(3))=TAGPLO(I)
11232     CONTINUE
11234     CONTINUE
11231   CONTINUE
      ENDIF
11239 CONTINUE
C
11290 CONTINUE
C
C     -----END MATRIX COPY-----
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        WRITE(ICOUT,11291)ICOLL(1),ICOLR(1),ICOLR(2),ICOLR(3),
     1                    NS(1),NS(2),NS(3)
11291   FORMAT('11291--ICOLL(1),ICOLR(1),ICOLR(2),ICOLR(3),',
     1         'NS(1),NS(2),NS(3) = ',7I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11292)NINEW,ICASL7,ICASEQ
11292   FORMAT('11292--NINEW,ICASL7,ICASEQ = ',I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO11294I=1,NUMVAR
        WRITE(ICOUT,11293)I,ITYPA(I)
11293   FORMAT('11293--I,ITYPA(I) =',I4,2X,A4)
        CALL DPWRST('XXX','BUG ')
11294   CONTINUE
        WRITE(ICOUT,11295)NS(1),NS(2),NS(3),NS(4)
11295   FORMAT('11295--NS(1),NS(2),NS(3),NS(4) = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11296)IMATSW,ICASL7
11296   FORMAT('11296--IMATSW,ICASL7 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IWRITE='ON'
      IF(IPRINT.EQ.'OFF')IWRITE='OFF'
      IF(IFEEDB.EQ.'OFF')IWRITE='OFF'
C
C     -----MATRIX SECTION-----
C
      IMCASE=ICASL7
      IUPFLG='FULL'
      NR1=1
      NR2=1
      NR3=1
      IF(ITYPA(1).EQ.'MATR'.AND.NUMVAR.GE.1)NR1=NS(1)
      IF(ITYPA(2).EQ.'MATR'.AND.NUMVAR.GE.2)NR2=NS(2)
      IF(ITYPA(3).EQ.'MATR'.AND.NUMVAR.GE.3)NR3=NS(3)
      IF(ICASL7.EQ.'MADF')NR1=INT(TEMPS(2)+0.1)
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
        WRITE(ICOUT,11881)NS(1),NS(2),NS(3),NR1,NC1,NR2,NC2,NR3,NC3
11881   FORMAT('NS(1),NS(2),NS(3),NR1,NC1,NR2,NC2,NR3,NC3 = ',9I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
11189 CONTINUE
      IF(ICASL7.EQ.'MASV'.OR.ICASL7.EQ.'MASD'.OR.ICASL7.EQ.'MASF'.OR.
     1   ICASL7.EQ.'MARW'.OR.ICASL7.EQ.'MAEL'.OR.ICASL7.EQ.'MACH'.OR.
     1   ICASL7.EQ.'MAAU'.OR.ICASL7.EQ.'MADI'.OR.ICASL7.EQ.'DIMA'.OR.
     1   ICASL7.EQ.'MARR'.OR.ICASL7.EQ.'MARE'.OR.ICASL7.EQ.'MATD'.OR.
     1   ICASL7.EQ.'BIPL'.OR.
     1   ICASL7.EQ.'MATS'.OR.ICASL7.EQ.'MATI'.OR.ICASL7.EQ.'MAIS')THEN
        CALL MATAR2(TEMPM1,NR1,NC1,TEMPM2,NR2,NC2,NR3,NC3,
     1  MAXROM,MAXCOM,
     1  TEMP1,NS(1),TEMP2,NS(2),TEMP3,NS(3),TEMP4,NS(4),
     1  ITEMP1,
     1  TEMPS(1),TEMPS(2),TEMPS(3),TEMPS(4),
     1  IMCASE,IUPFLG,IMSUBC,
     1  ITYPA(1),ITYPA(2),ITYPA(3),ITYPA(4),NUMVAR,IWRITE,
     1  IBPLSC,PBPLCO,
     1  TEMM91,NR91,NC91,TEMP91,NVECT9,SCAL91,ITYP91,
     1  IBUGA3,ISUBRO,IERROR)
      ELSEIF(ICASL7.EQ.'MPIN'.OR.ICASL7.EQ.'MQFO'.OR.
     1   ICASL7.EQ.'MALC'.OR.ICASL7.EQ.'MAVT'.OR.ICASL7.EQ.'MAGM'.OR.
     1   ICASL7.EQ.'MAGS'.OR.ICASL7.EQ.'MHT1'.OR.ICASL7.EQ.'MHT2'.OR.
     1   ICASL7.EQ.'MPVC'.OR.ICASL7.EQ.'MAMM'.OR.ICASL7.EQ.'MAAR'.OR.
     1   ICASL7.EQ.'MADR'.OR.ICASL7.EQ.'MDER'.OR.ICASL7.EQ.'MDEC'.OR.
     1   ICASL7.EQ.'MDMR'.OR.ICASL7.EQ.'MDMC'.OR.ICASL7.EQ.'MDBR'.OR.
     1   ICASL7.EQ.'MDBC'.OR.ICASL7.EQ.'MDKR'.OR.ICASL7.EQ.'MDKC'.OR.
     1   ICASL7.EQ.'MDCR'.OR.ICASL7.EQ.'MDCC'.OR.ICASL7.EQ.'MRSC'.OR.
     1   ICASL7.EQ.'MCSC'.OR.ICASL7.EQ.'MDIP'.OR.ICASL7.EQ.'MADM'.OR.
     1   ICASL7.EQ.'MVRN'.OR.ICASL7.EQ.'MACA'.OR.ICASL7.EQ.'XTXI'.OR.
     1   ICASL7.EQ.'VINF'.OR.ICASL7.EQ.'CIND'.OR.ICASL7.EQ.'MARN'.OR.
     1   ICASL7.EQ.'MURN'.OR.ICASL7.EQ.'WIRN'.OR.ICASL7.EQ.'MPDF'.OR.
     1   ICASL7.EQ.'MROW'.OR.ICASL7.EQ.'MCOL'.OR.ICASL7.EQ.'DPDF'.OR.
     1   ICASL7.EQ.'NCDF'.OR.ICASL7.EQ.'TCDF'.OR.ICASL7.EQ.'DLPD'.OR.
     1   ICASL7.EQ.'MTRN'.OR.ICASL7.EQ.'DIRN'.OR.ICASL7.EQ.'INRN'.OR.
     1   ICASL7.EQ.'MPAR'.OR.ICASL7.EQ.'MGRA'.OR.ICASL7.EQ.'MSP2'.OR.
     1   ICASL7.EQ.'MATB'.OR.ICASL7.EQ.'MARB'.OR.ICASL7.EQ.'MSPT'.OR.
     1   ICASL7.EQ.'ADMA'.OR.ICASL7.EQ.'ADMD'.OR.ICASL7.EQ.'CONF'.OR.
     1   ICASL7.EQ.'MFTR'.OR.ICASL7.EQ.'MFTC'.OR.ICASL7.EQ.'CKCL'.OR.
     1   ICASL7.EQ.'CKCP'.OR.
     1   ICASL7.EQ.'VMAT'.OR.ICASL7.EQ.'MVAR'.OR.ICASL7.EQ.'CORE'.OR.
     1   ICASL7.EQ.'MCRO'.OR.ICASL7.EQ.'MCCO'.OR.ICASL7.EQ.'GMST'.OR.
     1   ICASL7.EQ.'MCSR'.OR.ICASL7.EQ.'MCSC'.OR.
     1   ICASL7.EQ.'MCDR'.OR.ICASL7.EQ.'MCDC'.OR.
     1   ICASL7.EQ.'MZSR'.OR.ICASL7.EQ.'MASC'.OR.
     1   ICASL7.EQ.'MZDR'.OR.ICASL7.EQ.'MADC'.OR.
     1   ICASL7.EQ.'MJSR'.OR.ICASL7.EQ.'MJSC'.OR.
     1   ICASL7.EQ.'MJDR'.OR.ICASL7.EQ.'MJDC'.OR.
     1   ICASL7.EQ.'MPDR'.OR.ICASL7.EQ.'MPDC'.OR.
     1   ICASL7.EQ.'MPSR'.OR.ICASL7.EQ.'MPSC'.OR.
     1   ICASL7.EQ.'MHDR'.OR.ICASL7.EQ.'MHDC'.OR.
     1   ICASL7.EQ.'MXDR'.OR.ICASL7.EQ.'MXDC'.OR.
     1   ICASL7.EQ.'CRMA'.OR.ICASL7.EQ.'IURN'.OR.ICASL7.EQ.'MSUM')THEN
C
        IHP='P   '
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1       IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1       ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          P=2.0
        ELSE
          P=VALUE(ILOCP)
        ENDIF
C
        IHP='ABSE'
        IHP2='PS  '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1       IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1       ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          ABSEPS=0.00005
          IF(ICASL7.EQ.'TCDF')ABSEPS=0.0
        ELSE
          ABSEPS=VALUE(ILOCP)
        ENDIF
C
        IHP='RELE'
        IHP2='PS  '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1       IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1       ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          RELEPS=0.0
          IF(ICASL7.EQ.'TCDF')RELEPS=0.005
        ELSE
          RELEPS=VALUE(ILOCP)
        ENDIF
C
        IRELAT='OFF'
        IF(ICASL7.EQ.'MARB')IRELAT='ON'
        CLWID=CLWIDT(1)
        XSTART=CLLIMI(1)
        XSTOP=CLLIMI(2)
C
        CALL MATAR3(TEMPM1,NR1,NC1,TEMPM2,NR2,NC2,NR3,NC3,
     1              MAXROM,MAXCOM,MAXOBV,
     1              TEMP1,NS(1),TEMP2,NS(2),TEMP3,NS(3),
     1              TEMP4,NS(4),TEMP12,TEMP92,
     1              INDEX,
     1              DTEMP1,DTEMP2,DTEMP3,
     1              P,ABSEPS,RELEPS,ERRS,
     1              TEMPS(1),TEMPS(2),TEMPS(3),TEMPS(4),
     1              ASIG90,ASIG95,ASIG99,ASG995,
     1              IMCASE,IUPFLG,IMSUBC,
     1              ITYPA(1),ITYPA(2),ITYPA(3),ITYPA(4),NUMVAR,IWRITE,
     1              ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,
     1              ITEMP5,ITEMP6,ITEMP7,
     1              TEMM91,NR91,NC91,TEMP91,NVECT9,SCAL91,ITYP91,
     1              ICASS7,ISTARA,
     1              IRELAT,CLWID,XSTART,XSTOP,
     1              STME,STMEC,ST2T,ST2TC,STC,STT,
     1              IBUGA3,ISUBRO,IERROR)
C
        IF(ICASL7.EQ.'CONF')THEN
          IHP='FLAG'
          IHP2='DCON'
          VALUE0=1.0
          IF(IERROR.EQ.'YES')THEN
            VALUE0=0.0
            CALL DPADDP(IHP,IHP2,VALUE0,IHOST1,ISUBN0,
     1      IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1      IANS,IWIDTH,IBUGA3,IERROR)
            GOTO19000
          ENDIF
          CALL DPADDP(IHP,IHP2,VALUE0,IHOST1,ISUBN0,
     1    IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1    IANS,IWIDTH,IBUGA3,IERROR)
        ELSEIF(ICASL7.EQ.'MHT1'.OR.ICASL7.EQ.'MHT2')THEN
          IHP='B90 '
          IHP2='    '
          VALUE0=ASIG90
          CALL DPADDP(IHP,IHP2,VALUE0,IHOST1,ISUBN0,
     1    IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1    IANS,IWIDTH,IBUGA3,IERROR)
C
          IHP='B95 '
          IHP2='    '
          VALUE0=ASIG95
          CALL DPADDP(IHP,IHP2,VALUE0,IHOST1,ISUBN0,
     1    IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1    IANS,IWIDTH,IBUGA3,IERROR)
C
          IHP='B99 '
          IHP2='    '
          VALUE0=ASIG99
          CALL DPADDP(IHP,IHP2,VALUE0,IHOST1,ISUBN0,
     1    IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1    IANS,IWIDTH,IBUGA3,IERROR)
C
          IHP='B995'
          IHP2='    '
          VALUE0=ASG995
          CALL DPADDP(IHP,IHP2,VALUE0,IHOST1,ISUBN0,
     1    IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1    IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
      ELSE
        IHP='P1  '
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1       IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1       ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          P1=10.0
        ELSE
          P1=VALUE(ILOCP)
          IF(P1.LT.0.0)P1=10.0
          IF(P1.GT.50.0)P1=50.0
        ENDIF
C
        IHP='P2  '
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1       IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1       ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          P2=10.0
        ELSE
          P2=VALUE(ILOCP)
          IF(P2.LT.0.0)P2=10.0
          IF(P2.GT.50.0)P2=50.0
        ENDIF
C
        IHP='BETA'
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1       IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1       ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          BETA=0.1
        ELSE
          BETA=VALUE(ILOCP)
          IF(BETA.LE.0.0)BETA=0.01
          IF(P2.GT.0.5)BETA=0.5
        ENDIF
C
        CALL MATARI(TEMPM1,NR1,NC1,TEMPM2,NR2,NC2,NR3,NC3,
     1  MAXROM,MAXCOM,
     1  TEMP1,NS(1),TEMP2,NS(2),TEMP3,NS(3),TEMP4,NS(4),
     1  ITEMP1,ITEMP2,ITEMP3,
     1  DTEMP1,DTEMP2,P1,P2,BETA,
     1  TEMPS(1),TEMPS(2),TEMPS(3),TEMPS(4),
     1  IMCASE,IUPFLG,IMSUBC,
     1  ITYPA(1),ITYPA(2),ITYPA(3),ITYPA(4),NUMVAR,IWRITE,
     1  TEMM91,NR91,NC91,TEMP91,NVECT9,SCAL91,ITYP91,
     1  IBUGA3,ISUBRO,IERROR)
C
      ENDIF
C
      NITEMX=NVECT9
      IF(IERROR.EQ.'YES')GOTO19000
      IF(ITYP91.EQ.'VECT')THEN
        DO11887I=1,NITEMX
          TEMP1(I)=TEMP91(I)
11887   CONTINUE
      ELSEIF(ITYP91.EQ.'MATR')THEN
        NITEMX=NR91
        DO11882J=1,NC91
        DO11883I=1,NITEMX
          TEMPM1((J-1)*MAXROM+I)=TEMM91((J-1)*MAXROM+I)
C
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')THEN
            WRITE(ICOUT,11885)I,J,TEMM91((J-1)*MAXROM+I)
11885       FORMAT('I,J,TEMPM1((J-1)*MAXROM+I) = ',2I8,E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
11883   CONTINUE
11882   CONTINUE
        IF(ICASL7.EQ.'MASD' .OR. ICASL7.EQ.'MASF')THEN
          DO11886I=1,NVECT9
            TEMP1(I)=TEMP91(I)
11886     CONTINUE
        ENDIF
      ENDIF
      IFOUND='YES'
      IF(IERROR.EQ.'YES')GOTO19000
C
C
C               ************************************************
C               **  STEP XX--                                 **
C               **  BRANCH TO THE PROPER CASE                 **
C               **  DEPENDING ON THE TYPE OF OUTPUT--         **
C               **     1) SCALAR (= PARAMETER)                **
C               **     2) VECTOR (= VARIABLE) (THE USUAL)     **
C               **     3) MATRIX                              **
C               **  UPDATE DATAPLOT'S INTERNAL WORKSPACE      **
C               **  AND HOUSEKEEPING TABLES                   **
C               ************************************************
C
      IF(ITYP91.EQ.'SCAL')GOTO14000
C
C     -----TREAT THE VECTOR AND MATRIX CASE-----
C
CCCCC NOTE: FOR "MATRIX COLUMN <STAT>"
CCCCC CASE, TREAT AS FULL EVEN IF A SUBSET CLAUSE WAS ENTERED
CCCCC (NUMBER OF ROWS IN THE RETURNED VECTOR IS KEYED TO THE
CCCCC COLUMNS IN THE MATRIX, NOT THE ROWS IN THE MATRIX).
CCCCC NOTE: FURTHER CONSIDERATION SHOWED THAT WHETHER UPDATING
CCCCC SHOULD BE DONE AS "FULL" OR AS SUBSET CASE DEPENDDS ON THE
CCCCC SPECIFIC MATRIX COMMAND (E.G., MATRIX ADDITION SHOULD MAINTAIN
CCCCC THE SUBSET WHEN SAVING THE RESULT, WHILE A CORRELATION
CCCCC MATRIX SHOULD ALWAYS BE UPDATED AS A FULL MATRIX).
C
      IF(IUPFLG.EQ.'FULL' .OR. ICASEQ.EQ.'FULL')GOTO12100
      IF(ICASEQ.EQ.'SUBS')GOTO12300
      IF(ICASEQ.EQ.'FOR')GOTO12500
C
C               *******************************************
C               **  STEP 11.1--                          **
C               **  TREAT THE FULL CASE.                 **
C               *******************************************
C
12100 CONTINUE
      ISTEPN='11.1'
      IF(IBUGA3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
      NSX=0
      IF(NITEMX.LE.0)THEN
        IROW1=0
        IROWN=0
        GOTO12190
      ENDIF
C
      IF(IMATSW.EQ.'YES'.AND.ITYP91.EQ.'MATR')GOTO12130
      IF(ICASL7.EQ.'IURN'.AND.ITYP91.EQ.'MATR')GOTO12130
      IF(ICASL7.EQ.'DIRN'.AND.ITYP91.EQ.'MATR')GOTO12130
      IF(ICASL7.EQ.'MURN'.AND.ITYP91.EQ.'MATR')GOTO12130
      IF(ICASL7.EQ.'WIRN'.AND.ITYP91.EQ.'MATR')GOTO12130
      IF(ICASL7.EQ.'ADMA'.AND.ITYP91.EQ.'MATR')GOTO12130
      IF(ICASL7.EQ.'VMAT'.AND.ITYP91.EQ.'MATR')GOTO12130
C
      DO12110I=1,NITEMX
        NSX=I
C
        IJ=MAXN*(ICOLL(1)-1)+I
        IF(ICOLL(1).LE.MAXCOL)V(IJ)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP1)PRED(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP2)RES(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP3)YPLOT(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP4)XPLOT(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP5)X2PLOT(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP6)TAGPLO(I)=TEMP1(NSX)
12110 CONTINUE
C
      IF(ICASL7.EQ.'MATB' .OR. ICASL7.EQ.'MARB' .OR.
     1   ICASL7.EQ.'MSPT' .OR. ICASL7.EQ.'MSP2' .OR.
     1   ICASL7.EQ.'MFTR' .OR. ICASL7.EQ.'MFTC' .OR.
     1   ICASL7.EQ.'BIPL' .OR. ICASL7.EQ.'CONF')THEN
        DO12120I=1,NITEMX
          NSX=I
          IJ=MAXN*(ICOLL(2)-1)+I
          IF(ICOLL(2).LE.MAXCOL)V(IJ)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP1)PRED(I)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP2)RES(I)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP3)YPLOT(I)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP4)XPLOT(I)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP5)X2PLOT(I)=TEMP2(NSX)
          IF(ICOLL(2).EQ.MAXCP6)TAGPLO(I)=TEMP2(NSX)
12120   CONTINUE
      ENDIF
C
      IF(ICASL7.EQ.'MSPT' .OR. ICASL7.EQ.'BIPL' .OR.
     1   ICASL7.EQ.'MFTR' .OR. ICASL7.EQ.'MFTC')THEN
        DO12122I=1,NITEMX
          NSX=I
          IJ=MAXN*(ICOLL(3)-1)+I
          IF(ICOLL(3).LE.MAXCOL)V(IJ)=TEMP3(NSX)
          IF(ICOLL(3).EQ.MAXCP1)PRED(I)=TEMP3(NSX)
          IF(ICOLL(3).EQ.MAXCP2)RES(I)=TEMP3(NSX)
          IF(ICOLL(3).EQ.MAXCP3)YPLOT(I)=TEMP3(NSX)
          IF(ICOLL(3).EQ.MAXCP4)XPLOT(I)=TEMP3(NSX)
          IF(ICOLL(3).EQ.MAXCP5)X2PLOT(I)=TEMP3(NSX)
          IF(ICOLL(3).EQ.MAXCP6)TAGPLO(I)=TEMP3(NSX)
12122   CONTINUE
      ENDIF
C
      IF(ICASL7.EQ.'MFTR' .OR. ICASL7.EQ.'MFTC')THEN
        DO12123I=1,NITEMX
          NSX=I
          IJ=MAXN*(ICOLL(4)-1)+I
          IF(ICOLL(4).LE.MAXCOL)V(IJ)=TEMP4(NSX)
          IF(ICOLL(4).EQ.MAXCP1)PRED(I)=TEMP4(NSX)
          IF(ICOLL(4).EQ.MAXCP2)RES(I)=TEMP4(NSX)
          IF(ICOLL(4).EQ.MAXCP3)YPLOT(I)=TEMP4(NSX)
          IF(ICOLL(4).EQ.MAXCP4)XPLOT(I)=TEMP4(NSX)
          IF(ICOLL(4).EQ.MAXCP5)X2PLOT(I)=TEMP4(NSX)
          IF(ICOLL(4).EQ.MAXCP6)TAGPLO(I)=TEMP4(NSX)
12123   CONTINUE
      ENDIF
C
      GOTO12190
C
C     -----BEGIN MATRIX COPY FOR FULL CASE-----
C
12130 CONTINUE
      ISTEPN='FULL'
      ISTEPN='11.3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
      NLOOP=NC91
C
      ICOL=ICOLL(1)-1+NLOOP
      IF(ICOL.LE.MAXCOL)GOTO12139
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12131)
12131 FORMAT('***** ERROR 12131 IN DPMAT2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12132)
12132 FORMAT('      AN ATTEMPT WAS MADE TO CREATE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12133)
12133 FORMAT('      A MATRIX WHOSE COLUMNS EXTEND')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12134)MAXCOL
12134 FORMAT('      BEYOND THE ALLOWABLE ',I8,' COLUMNS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12135)
12135 FORMAT('      OF THE INTERNAL INTERNAL WORKSHEET.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
12139 CONTINUE
C
CCCCC OCTOBER 1993.  FOR MATRIX AUGMENT, NEED TO ADD NC2 BLANK 
CCCCC COLUMNS IF LEFT HAND MATRIX IS OLD.
      IF(NEWNAM(1).NE.'YES'.AND.ICASL7.EQ.'MAAU')THEN
        NFIRST=IVALU2(ILISL(1))+1
        NUMADD=NC2
        IERROR='NO'
        CALL DPUPD2(NUMADD,NFIRST,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO19000
      ENDIF
C
      ISTEPN='11.4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT2')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
      DO12140JLOOP=1,NLOOP
      NSX=0
      DO12150I=1,NITEMX
      NSX=I
      IJ=MAXN*(ICOLL(1)-1+JLOOP-1)+I
      IF(ICOLL(1).LE.MAXCOL)V(IJ)=TEMPM1((JLOOP-1)*MAXROM+NSX)
12150 CONTINUE
12140 CONTINUE
C
CCCCC JULY 1993.  IF FIRST MATRIX IS NEW, NEED TO ADJUST COLUMN 
CCCCC             NUMBERS FOR SECOND (AND POSSIBLY THIRD) NEW VARIABLES
CCCCC             OR MATRICES ON LEFT.
      IF(NEWNAM(1).EQ.'YES')THEN
        IF(NEWNAM(2).EQ.'YES')THEN
          NADD=NLOOP-1
          ICOLL(2)=ICOLL(2)+NADD
          ILISL(2)=ILISL(2)+NADD+1
        ENDIF
        IF(NEWNAM(3).EQ.'YES')THEN
          NADD=NLOOP-1
          ICOLL(3)=ICOLL(3)+NADD
          ILISL(3)=ILISL(3)+NADD+1
        ENDIF
      ENDIF
      IF(ICASL7.EQ.'MASD')GOTO22130
      IF(ICASL7.EQ.'MASF')GOTO22130
      GOTO12190
C
CCCCC NOTE: FOR SVD, SVF, HAVE LET U S V = MATRIX SING VALUE FACT M
CCCCC       I.E., THE SECOND MATRIX IS IN THE THIRD ARGUMENT.
22130 CONTINUE
      NLOOP=NC2
C
      ICOL=ICOLL(3)-1+NLOOP
      IF(ICOL.LE.MAXCOL)GOTO22139
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,22131)
22131 FORMAT('***** ERROR 22131 IN DPMAT2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,22132)
22132 FORMAT('      AN ATTEMPT WAS MADE TO CREATE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,22133)
22133 FORMAT('      A MATRIX WHOSE COLUMNS EXTEND')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,22134)MAXCOL
22134 FORMAT('      BEYOND THE ALLOWABLE ',I8,' COLUMNS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,22135)
22135 FORMAT('      OF THE INTERNAL INTERNAL WORKSHEET.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
22139 CONTINUE
C
      DO22140JLOOP=1,NLOOP
      NSX=0
      DO22150I=1,NR2
      NSX=I
      IJ=MAXN*(ICOLL(3)-1+JLOOP-1)+I
      IF(ICOLL(3).LE.MAXCOL)V(IJ)=TEMPM2((JLOOP-1)*MAXROM+NSX)
22150 CONTINUE
22140 CONTINUE
      GOTO12190
C
C     -----END MATRIX COPY FOR FULL CASE-----
C
12190 CONTINUE
C
      IF(ICASL7.NE.'MASD'.AND.ICASL7.NE.'MASF')THEN
        IF(NITEMX.GE.1)IROW1=1
        IF(NITEMX.GE.1)IROWN=NITEMX
        IN(ILISL(1))=NITEMX
        IF(NUMVAL.GE.2)IN(ILISL(2))=NITEMX
        IF(NUMVAL.GE.3)IN(ILISL(3))=NITEMX
        IF(NUMVAL.GE.4)IN(ILISL(4))=NITEMX
      ELSE
        IF(NITEMX.GE.1)IROW1=1
        IF(NITEMX.GE.1)IROWN=NITEMX
        IN(ILISL(1))=NITEMX
        IF(NUMVAL.EQ.2)IN(ILISL(2))=NVECT9
        IF(NUMVAL.EQ.3)IN(ILISL(3))=NR2
      ENDIF
C
      DO12210J4=1,NUMNAM
      IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(1))GOTO12215
      IF(IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(1))GOTO12215
      GOTO12210
12215 CONTINUE
      IUSE(J4)='V'
      IVALUE(J4)=ICOLL(1)
      VALUE(J4)=ICOLL(1)
      IN(J4)=NITEMX
      IF(IMATSW.EQ.'YES'.AND.ITYP91.EQ.'MATR')THEN
        IVALUE(J4)=ICOLL(1)
        IVALU2(J4)=ICOLL(1)+NC91-1
      ENDIF
12210 CONTINUE
C
      IF(NUMVAL.LE.1)GOTO12229
      DO12220J4=1,NUMNAM
      IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(2))GOTO12225
      IF(IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(2))GOTO12225
      GOTO12220
12225 CONTINUE
      IUSE(J4)='V'
      IVALUE(J4)=ICOLL(2)
      VALUE(J4)=ICOLL(2)
      IF(ICASL7.NE.'MASD'.AND.ICASL7.NE.'MASF')THEN
        IN(J4)=NITEMX
      ELSE
        IN(J4)=NVECT9
      ENDIF
12220 CONTINUE
12229 CONTINUE
C
      IF(NUMVAL.LE.2)GOTO12239
      DO12230J4=1,NUMNAM
      IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(3))GOTO12235
      IF(IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(3))GOTO12235
      GOTO12230
12235 CONTINUE
      IUSE(J4)='V'
      IVALUE(J4)=ICOLL(3)
      VALUE(J4)=ICOLL(3)
      IF(ICASL7.NE.'MASD'.AND.ICASL7.NE.'MASF')THEN
        IN(J4)=NITEMX
      ELSE
        IN(J4)=NR2
        IVALUE(J4)=ICOLL(3)
        IVALU2(J4)=ICOLL(3)+NC2-1
      ENDIF
12230 CONTINUE
12239 CONTINUE
C
      IF(NUMVAL.LE.3)GOTO12249
      DO12240J4=1,NUMNAM
      IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(4))GOTO12245
      IF(IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(4))GOTO12245
      GOTO12240
12245 CONTINUE
      IUSE(J4)='V'
      IVALUE(J4)=ICOLL(4)
      VALUE(J4)=ICOLL(4)
      IN(J4)=NITEMX
12240 CONTINUE
12249 CONTINUE
C
      GOTO13000
C
C               *******************************************
C               **  STEP 11.2--                          **
C               **  TREAT THE SUBSET CASE.               **
C               *******************************************
C
12300 CONTINUE
      ISTEPN='11.2'
      IF(IBUGA3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
      NSX=0
      IF(NITEMX.LE.0)IROW1=0
      IF(NITEMX.LE.0)IROWN=0
      IF(NITEMX.LE.0)GOTO12390
C
      IF(IMATSW.EQ.'YES'.AND.ITYP91.EQ.'MATR')GOTO12330
C
      DO12310I=1,NITEMX
        IF(ISUB(I).EQ.0)GOTO12310
        NSX=NSX+1
C
        IJ=MAXN*(ICOLL(1)-1)+I
        IF(ICOLL(1).LE.MAXCOL)V(IJ)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP1)PRED(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP2)RES(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP3)YPLOT(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP4)XPLOT(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP5)X2PLOT(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP6)TAGPLO(I)=TEMP1(NSX)
        IF(NSX.EQ.1)IROW1=I
        IROWN=I
C
12310 CONTINUE
      GOTO12390
C
C     -----BEGIN MATRIX COPY FOR SUBSET CASE-----
C
12330 CONTINUE
      NLOOP=NC91
C
      ICOL=ICOLL(1)-1+NLOOP
      IF(ICOL.LE.MAXCOL)GOTO12339
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12331)
12331 FORMAT('***** ERROR 12331 IN DPMAT2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12332)
12332 FORMAT('      AN ATTEMPT WAS MADE TO CREATE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12333)
12333 FORMAT('      A MATRIX WHOSE COLUMNS EXTEND')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12334)MAXCOL
12334 FORMAT('      BEYOND THE ALLOWABLE ',I8,' COLUMNS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12335)
12335 FORMAT('      OF THE INTERNAL INTERNAL WORKSHEET.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
12339 CONTINUE
C
      DO12340JLOOP=1,NLOOP
      NSX=0
      DO12350I=1,NITEMX
      IF(ISUB(I).EQ.0)GOTO12350
      NSX=NSX+1
      IJ=MAXN*(ICOLL(1)-1+JLOOP-1)+I
      IF(ICOLL(1).LE.MAXCOL)V(IJ)=TEMPM1((JLOOP-1)*MAXROM+NSX)
      IF(NSX.EQ.1)IROW1=I
      IROWN=I
12350 CONTINUE
12340 CONTINUE
      GOTO12390
C
C     -----END MATRIX COPY FOR SUBSET CASE-----
C
12390 CONTINUE
C
      IN(ILISL(1))=NITEMX
      IF(NUMVAL.EQ.2)IN(ILISL(2))=NITEMX
C
      DO12410J4=1,NUMNAM
      IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(1))GOTO12415
      IF(IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(1))GOTO12415
      GOTO12410
12415 CONTINUE
      IUSE(J4)='V'
      IVALUE(J4)=ICOLL(1)
      VALUE(J4)=ICOLL(1)
      IN(J4)=NITEMX
      IF(IMATSW.EQ.'YES'.AND.ITYP91.EQ.'MATR')IVALUE(J4)=ICOLL(1)
      IF(IMATSW.EQ.'YES'.AND.ITYP91.EQ.'MATR')IVALU2(J4)=ICOLL(1)+NC91-1
12410 CONTINUE
C
      IF(NUMVAL.LE.1)GOTO12429
      DO12420J4=1,NUMNAM
      IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(2))GOTO12425
      IF(IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(2))GOTO12425
      GOTO12420
12425 CONTINUE
      IUSE(J4)='V'
      IVALUE(J4)=ICOLL(2)
      VALUE(J4)=ICOLL(2)
      IN(J4)=NITEMX
12420 CONTINUE
12429 CONTINUE
C
      GOTO13000
C
C               *******************************************
C               **  STEP 11.3--                          **
C               **  TREAT THE FOR CASE.                  **
C               *******************************************
C
12500 CONTINUE
      ISTEPN='11.3'
      IF(IBUGA3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
      NSX=0
      IF(NITEMX.LE.0)IROW1=0
      IF(NITEMX.LE.0)IROWN=0
      IF(NITEMX.LE.0)GOTO12590
C
      IF(IMATSW.EQ.'YES'.AND.ITYP91.EQ.'MATR')GOTO12530
C
      DO12510I=1,NITEMX
        IF(I.GT.NIFOR)GOTO12590
        IF(ISUB(I).EQ.0)GOTO12510
        NSX=NSX+1
        IJ=MAXN*(ICOLL(1)-1)+I
        IF(ICOLL(1).LE.MAXCOL)V(IJ)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP1)PRED(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP2)RES(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP3)YPLOT(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP4)XPLOT(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP5)X2PLOT(I)=TEMP1(NSX)
        IF(ICOLL(1).EQ.MAXCP6)TAGPLO(I)=TEMP1(NSX)
        IF(NSX.EQ.1)IROW1=I
        IROWN=I
C
12510 CONTINUE
      GOTO12590
C
C     -----BEGIN MATRIX COPY FOR   FOR    CASE-----
C
12530 CONTINUE
      NLOOP=NC91
C
      ICOL=ICOLL(1)-1+NLOOP
      IF(ICOL.LE.MAXCOL)GOTO12539
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12531)
12531 FORMAT('***** ERROR 12531 IN DPMAT2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12532)
12532 FORMAT('      AN ATTEMPT WAS MADE TO CREATE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12533)
12533 FORMAT('      A MATRIX WHOSE COLUMNS EXTEND')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12534)MAXCOL
12534 FORMAT('      BEYOND THE ALLOWABLE ',I8,' COLUMNS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,12535)
12535 FORMAT('      OF THE INTERNAL INTERNAL WORKSHEET.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
12539 CONTINUE
C
      DO12540JLOOP=1,NLOOP
      NSX=0
      DO12550I=1,NITEMX
      IF(I.GT.NIFOR)GOTO12550
      IF(ISUB(I).EQ.0)GOTO12550
      NSX=NSX+1
      IJ=MAXN*(ICOLL(1)-1+JLOOP-1)+I
      IF(ICOLL(1).LE.MAXCOL)V(IJ)=TEMPM1((JLOOP-1)*MAXROM+NSX)
      IF(NSX.EQ.1)IROW1=I
      IROWN=I
12550 CONTINUE
12540 CONTINUE
      GOTO12590
C
C     -----END MATRIX COPY FOR   FOR    CASE-----
C
12590 CONTINUE
C
      IN(ILISL(1))=NITEMX
      IF(NUMVAL.EQ.2)IN(ILISL(2))=NITEMX
C
      DO12610J4=1,NUMNAM
      IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(1))GOTO12615
      IF(IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(1))GOTO12615
      GOTO12610
12615 CONTINUE
      IUSE(J4)='V'
      IVALUE(J4)=ICOLL(1)
      VALUE(J4)=ICOLL(1)
      IN(J4)=NITEMX
      IF(IMATSW.EQ.'YES'.AND.ITYP91.EQ.'MATR')IVALUE(J4)=ICOLL(1)
      IF(IMATSW.EQ.'YES'.AND.ITYP91.EQ.'MATR')IVALU2(J4)=ICOLL(1)+NC91-1
12610 CONTINUE
C
      IF(NUMVAL.LE.1)GOTO12629
      DO12620J4=1,NUMNAM
      IF(IUSE(J4).EQ.'V'.AND.IVALUE(J4).EQ.ICOLL(2))GOTO12625
      IF(IUSE(J4).EQ.'M'.AND.IVALUE(J4).EQ.ICOLL(2))GOTO12625
      GOTO12620
12625 CONTINUE
      IUSE(J4)='V'
      IVALUE(J4)=ICOLL(2)
      VALUE(J4)=ICOLL(2)
      IN(J4)=NITEMX
12620 CONTINUE
12629 CONTINUE
C
      GOTO13000
C
C               *****************************************************
C               **  STEP 13--                                      **
C               **  BRANCH TO THE PROPER CASE
C               **  DEPENDING ON THE TYPE OF OUTPUT--
C               **     1) SCALAR (= PARAMETER)
C               **     2) VECTOR (= VARIABLE) (THE USUAL)
C               **     3) MATRIX
C               **  UPDATE DATAPLOT'S INTERNAL WORKSPACE
C               **  AND HOUSEKEEPING TABLES
C               *****************************************************
C
13000 CONTINUE
      IF(ITYP91.EQ.'SCAL')GOTO14000
      IF(ITYP91.EQ.'MATR')GOTO15000
      GOTO16000
C
C               *****************************************************
C               **  STEP 14--                                      **
C               **  TREAT THE PARAMETER (SCALAR) CASE.             **
C               **  EXAMPLE--LET D = DETERMINANT A                 **
C               **           WHERE A WAS PREVIOUSLY UNDEFINED      **
C               **           OR WHERE A WAS PREVIOUSLY A PARAMETER.**
C               **  CARRY OUT THE LIST UPDATING  AND               **
C               **  GENERATE THE INFORMATIVE PRINTING.             **
C               **  THEN EXIT.                                     **
C               *****************************************************
C
14000 CONTINUE
      ISTEPN='14'
      IF(IBUGA3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHNAME(ILISL(1))=ILEFT(1)
      IHNAM2(ILISL(1))=ILEF2(1)
      IUSE(ILISL(1))='P'
      VALUE(ILISL(1))=SCAL91
      IVALUE(ILISL(1))=INT(VALUE(ILISL(1))+0.5)
      IN(ILISL(1))=1
      IF(NEWNAM(1).EQ.'YES')NUMNAM=NUMNAM+1
C
      IF(IPRINT.EQ.'OFF')GOTO14019
      IF(IFEEDB.EQ.'OFF')GOTO14019
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,14011)ILEFT(1),ILEF2(1),SCAL91
14011 FORMAT('THE COMPUTED VALUE OF THE CONSTANT ',
     1A4,A4,'      = ',E15.8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
14019 CONTINUE
C
C  FOR MULTIVARIATE NORMAL CDF OR MULTIVARIATE T CDF, UPDATE
C  AN ADDITIONAL PARAMETER.  SET IT AFTER OTHER SCALAR UPDATE
C  TO AVOID OVERWRITE.
C
      IF(ICASL7.EQ.'NCDF'.OR.ICASL7.EQ.'TCDF')THEN
        IHP='NCDF'
        IHP2='ERRS'
        VALUE0=ERRS
        CALL DPADDP(IHP,IHP2,VALUE0,IHOST1,ISUBN0,
     1  IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1  IANS,IWIDTH,IBUGA3,IERROR)
      ENDIF
      GOTO19000
C
C               *******************************************
C               **  STEP 15--                            **
C               **  TREAT THE MATRIX CASE--              **
C               **  CARRY OUT THE LIST UPDATING AND      **
C               **  GENERATE THE INFORMATIVE PRINTING    **
C               **  FOR STEP NUMBERS 7, 8, AND 9 ABOVE.  **
C               *******************************************
C
15000 CONTINUE
      ISTEPN='15'
      IF(IBUGA3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHMAT1=ILEFT(1)
      IHMAT2=ILEF2(1)
      IMATNR=NR91
      IMATNC=NC91
      IMATCO=ICOLL(1)
C
      IHNAME(ILISL(1))=IHMAT1
      IHNAM2(ILISL(1))=IHMAT2
      IUSE(ILISL(1))='M'
      IVALUE(ILISL(1))=IMATCO
      IN(ILISL(1))=IMATNR
      IVALU2(ILISL(1))=IMATCO+IMATNC-1
      IF(NEWNAM(1).EQ.'YES')NUMNAM=NUMNAM+1
CCCCC AUGUST 1993.  NUMBER OF COLUMNS UPDATED IN SUBSEQUENT LOOP
CCCCC IF(NEWNAM(1).EQ.'YES')NUMCOL=NUMCOL+1
C
      IF(IMATNC.LE.0)GOTO15039
      INAM=NUMNAM
      DO15010J=1,IMATNC
C
      INAM=INAM+1
      IF(INAM.LE.MAXNAM)GOTO15019
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,15011)
15011 FORMAT('***** ERROR 15011 IN DPMAT2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,15012)
15012 FORMAT('      THE NUMBER OF VARIABLE AND/OR PARAMETER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,15013)MAXNAM
15013 FORMAT('      NAMES HAS JUST EXCEEDED THE MAX ALLOWABLE ',
     1I8,'  .')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
15019 CONTINUE
C
      ICOL=IMATCO+J-1
      IF(ICOL.LE.MAXCOL)GOTO15029
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,15021)
15021 FORMAT('***** ERROR 15021 IN DPMAT2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,15022)
15022 FORMAT('      THE NUMBER OF WORKSHEET VARIABLES (COLUMNS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,15023)MAXCOL
15023 FORMAT('      HAS JUST EXCEEDED THE MAX ALLOWABLE ',
     1I8,'  .')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
15029 CONTINUE
C
      CALL DPAPN2(IHMAT1,IHMAT2,J,MAXCAS,
     1            IH1,IH2,IBUGA3,ISUBRO,IERROR)
      IHNAME(INAM)=IH1
      IHNAM2(INAM)=IH2
      IUSE(INAM)='V'
      IVALUE(INAM)=ICOL
      IN(INAM)=IMATNR
      IF(NEWNAM(1).EQ.'YES')NUMNAM=NUMNAM+1
      IF(NEWNAM(1).EQ.'YES')NUMCOL=NUMCOL+1
C
15010 CONTINUE
15039 CONTINUE
C
      IF(IPRINT.EQ.'OFF')GOTO15090
      IF(IFEEDB.EQ.'OFF')GOTO15090
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,15041)IHMAT1,IHMAT2,IMATNR
15041 FORMAT('THE NUMBER OF ROWS    GENERATED FOR ',
     1'THE MATRIX   ',A4,A4,' = ',I8)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,15042)IHMAT1,IHMAT2,IMATNC
15042 FORMAT('THE NUMBER OF COLUMNS GENERATED FOR ',
     1'THE MATRIX   ',A4,A4,' = ',I8)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,15051)IHMAT1,IHMAT2
15051 FORMAT('THE FIRST           COMPUTED ROW   OF ',A4,A4,' =')
      CALL DPWRST('XXX','BUG ')
      JMAX=IMATNC
      IF(JMAX.GT.10)JMAX=10
      DO15055J=1,JMAX
      IJ=MAXN*(IMATCO-1+J-1)+1
      TEMPV(J)=V(IJ)
15055 CONTINUE
      IF(JMAX.LE.10)WRITE(ICOUT,15056)(TEMPV(J),J=1,JMAX)
15056 FORMAT(10E10.3)
      IF(JMAX.LE.10)CALL DPWRST('XXX','BUG ')
      IF(JMAX.GT.10)WRITE(ICOUT,15057)(TEMPV(J),J=1,JMAX)
15057 FORMAT(10E10.3,' ...')
      IF(JMAX.GT.10)CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,15061)IMATNR,IHMAT1,IHMAT2
15061 FORMAT('THE LAST (',I5,'-TH) COMPUTED ROW   OF ',A4,A4,' =')
      CALL DPWRST('XXX','BUG ')
      JMAX=IMATNC
      IF(JMAX.GT.10)JMAX=10
      DO15065J=1,JMAX
      IJ=MAXN*(IMATCO-1+J-1)+IMATNR
      TEMPV(J)=V(IJ)
15065 CONTINUE
      IF(JMAX.LE.10)WRITE(ICOUT,15066)(TEMPV(J),J=1,JMAX)
15066 FORMAT(10E10.3)
      IF(JMAX.LE.10)CALL DPWRST('XXX','BUG ')
      IF(JMAX.GT.10)WRITE(ICOUT,15067)(TEMPV(J),J=1,JMAX)
15067 FORMAT(10E10.3,' ...')
      IF(JMAX.GT.10)CALL DPWRST('XXX','BUG ')
C
      IF(IMATNR.NE.1.AND.IMATNC.NE.1)GOTO15079
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,15072)
15072 FORMAT('CAUTION--THIS MATRIX HAS ONLY 1 ROW AND 1 COLUMN')
      CALL DPWRST('XXX','BUG ')
15079 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      IHCV11='    '
      IHCV12='    '
      IHCV21='    '
      IHCV22='    '
      IHCV31='    '
      IHCV32='    '
      IF(IMATNC.GE.1)THEN
        J=1
        CALL DPAPN2(IHMAT1,IHMAT2,J,MAXCAS,
     1              IHCV11,IHCV12,IBUGA3,ISUBRO,IERROR)
      ENDIF
      IF(IMATNC.GE.2)THEN
        J=2
        CALL DPAPN2(IHMAT1,IHMAT2,J,MAXCAS,
     1              IHCV21,IHCV22,IBUGA3,ISUBRO,IERROR)
      ENDIF
      IF(IMATNC.GE.3)THEN
        J=3
        CALL DPAPN2(IHMAT1,IHMAT2,J,MAXCAS,
     1              IHCV31,IHCV32,IBUGA3,ISUBRO,IERROR)
      ENDIF
      IF(IMATNC.LE.3)THEN
        WRITE(ICOUT,15081)IHMAT1,IHMAT2,IHCV11,IHCV12,IHCV21,IHCV22,
     1                    IHCV31,IHCV32
15081   FORMAT('THE COLUMN VECTOR NAMES ASSIGNED TO MATRIX ',2A4,
     1         'ARE ',2(2A4,2X),2A4)
        CALL DPWRST('XXX','BUG ')
      ELSEIF(IMATNC.GT.3)THEN
         WRITE(ICOUT,15082)IHMAT1,IHMAT2,IHCV11,IHCV12,IHCV21,IHCV22,
     1                     IHCV31,IHCV32
15082   FORMAT('THE COLUMN VECTOR NAMES ASSIGNED TO MATRIX ',2A4,
     1         'ARE ',3(2A4,2X),'...')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ICV1=IMATCO
      ICV2=IMATCO+IMATNC-1
      WRITE(ICOUT,15083)IHMAT1,IHMAT2,ICV1,ICV2
15083 FORMAT('THE WORKSHEET COLUMNS   ASSIGNED TO MATRIX ',2A4,
     1       'ARE ',I8,' TO',I8)
      CALL DPWRST('XXX','BUG ')
C
15090 CONTINUE
      IF(ICASL7.EQ.'MASD' .OR. ICASL7.EQ.'MASF')GOTO25000
C
      GOTO19000
C
C               *******************************************
C               **  STEP 25--                            **
C               **  TREAT THE MATRIX CASE--              **
C               **  UPDATE MATRIX 2                      **
C               **  CARRY OUT THE LIST UPDATING AND      **
C               **  GENERATE THE INFORMATIVE PRINTING    **
C               **  FOR STEP NUMBERS 7, 8, AND 9 ABOVE.  **
C               *******************************************
C
25000 CONTINUE
      ISTEPN='25'
CCCCC JULY 1993.  SINGULAR VALUE DECOMPOSTION USES VECTOR AS SECOND
CCCCC ARGUMENT ON LEFT.
      IHNAME(ILISL(2))=ILEFT(2)
      IHNAM2(ILISL(2))=ILEF2(2)
      IUSE(ILISL(2))='V'
      IVALUE(ILISL(2))=ICOLL(2)
      VALUE(ILISL(2))=ICOLL(2)
      IN(ILISL(2))=NVECT9
      IF(NEWNAM(2).EQ.'YES')NUMNAM=NUMNAM+1
CCCCC AUGUST 1993.  NUMBER OF COLUMNS UPDATED IN SUBSEQUENT LOOP
CCCCC IF(NEWNAM(2).EQ.'YES')NUMCOL=NUMCOL+1
      IF(NEWNAM(2).EQ.'YES')NUMCOL=NUMCOL+1
C
      DO25002I=1,NVECT9
      IJ=MAXN*(ICOLL(2)-1)+I
      IF(ICOLL(2).LE.MAXCOL)V(IJ)=TEMP1(I)
      IF(ICOLL(2).EQ.MAXCP1)PRED(I)=TEMP1(I)
      IF(ICOLL(2).EQ.MAXCP2)RES(I)=TEMP1(I)
      IF(ICOLL(2).EQ.MAXCP3)YPLOT(I)=TEMP1(I)
      IF(ICOLL(2).EQ.MAXCP4)XPLOT(I)=TEMP1(I)
      IF(ICOLL(2).EQ.MAXCP5)X2PLOT(I)=TEMP1(I)
      IF(ICOLL(2).EQ.MAXCP6)TAGPLO(I)=TEMP1(I)
25002 CONTINUE
C
      ISTEPN='25A'
      IF(IBUGA3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHMAT1=ILEFT(3)
      IHMAT2=ILEF2(3)
      IMATNR=NR2
      IMATNC=NC2
      IMATCO=ICOLL(3)
C
      IHNAME(ILISL(3))=IHMAT1
      IHNAM2(ILISL(3))=IHMAT2
      IUSE(ILISL(3))='M'
      IVALUE(ILISL(3))=IMATCO
      IN(ILISL(3))=IMATNR
      IVALU2(ILISL(3))=IMATCO+IMATNC-1
      IF(NEWNAM(3).EQ.'YES')NUMNAM=NUMNAM+1
      IF(NEWNAM(3).EQ.'YES')NUMCOL=NUMCOL+1
C
      IF(IMATNC.LE.0)GOTO25039
      INAM=NUMNAM
      DO25010J=1,IMATNC
C
      INAM=INAM+1
      IF(INAM.LE.MAXNAM)GOTO25019
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,25011)
25011 FORMAT('***** ERROR 15011 IN DPMAT2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,25012)
25012 FORMAT('      THE NUMBER OF VARIABLE AND/OR PARAMETER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,25013)MAXNAM
25013 FORMAT('      NAMES HAS JUST EXCEEDED THE MAX ALLOWABLE ',
     1I8,'  .')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
25019 CONTINUE
C
      ICOL=IMATCO+J-1
      IF(INAM.LE.MAXNAM)GOTO25029
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,25021)
25021 FORMAT('***** ERROR 25021 IN DPMAT2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,25022)
25022 FORMAT('      THE NUMBER OF WORKSHEET VARIABLES (COLUMNS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,25023)MAXCOL
25023 FORMAT('      HAS JUST EXCEEDED THE MAX ALLOWABLE ',
     1I8,'  .')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
25029 CONTINUE
C
      CALL DPAPN2(IHMAT1,IHMAT2,J,MAXCAS,
     1            IH1,IH2,IBUGA3,ISUBRO,IERROR)
      IHNAME(INAM)=IH1
      IHNAM2(INAM)=IH2
      IUSE(INAM)='V'
      IVALUE(INAM)=ICOL
      IN(INAM)=IMATNR
      IF(NEWNAM(3).EQ.'YES')NUMNAM=NUMNAM+1
      IF(NEWNAM(3).EQ.'YES')NUMCOL=NUMCOL+1
C
25010 CONTINUE
25039 CONTINUE
C
      IF(IPRINT.EQ.'OFF')GOTO25090
      IF(IFEEDB.EQ.'OFF')GOTO25090
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,25041)IHMAT1,IHMAT2,IMATNR
25041 FORMAT('THE NUMBER OF ROWS    GENERATED FOR ',
     1'THE MATRIX   ',A4,A4,' = ',I8)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,25042)IHMAT1,IHMAT2,IMATNC
25042 FORMAT('THE NUMBER OF COLUMNS GENERATED FOR ',
     1'THE MATRIX   ',A4,A4,' = ',I8)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,25051)IHMAT1,IHMAT2
25051 FORMAT('THE FIRST           COMPUTED ROW   OF ',A4,A4,' =')
      CALL DPWRST('XXX','BUG ')
      JMAX=IMATNC
      IF(JMAX.GT.10)JMAX=10
      DO25055J=1,JMAX
      IJ=MAXN*(IMATCO-1+J-1)+1
      TEMPV(J)=V(IJ)
25055 CONTINUE
      IF(JMAX.LE.10)WRITE(ICOUT,25056)(TEMPV(J),J=1,JMAX)
25056 FORMAT(10E10.3)
      IF(JMAX.LE.10)CALL DPWRST('XXX','BUG ')
      IF(JMAX.GT.10)WRITE(ICOUT,25057)(TEMPV(J),J=1,JMAX)
25057 FORMAT(10E10.3,' ...')
      IF(JMAX.GT.10)CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,25061)IMATNR,IHMAT1,IHMAT2
25061 FORMAT('THE LAST (',I5,'-TH) COMPUTED ROW   OF ',A4,A4,' =')
      CALL DPWRST('XXX','BUG ')
      JMAX=IMATNC
      IF(JMAX.GT.10)JMAX=10
      DO25065J=1,JMAX
      IJ=MAXN*(IMATCO-1+J-1)+IMATNR
      TEMPV(J)=V(IJ)
25065 CONTINUE
      IF(JMAX.LE.10)WRITE(ICOUT,25066)(TEMPV(J),J=1,JMAX)
25066 FORMAT(10E10.3)
      IF(JMAX.LE.10)CALL DPWRST('XXX','BUG ')
      IF(JMAX.GT.10)WRITE(ICOUT,25067)(TEMPV(J),J=1,JMAX)
25067 FORMAT(10E10.3,' ...')
      IF(JMAX.GT.10)CALL DPWRST('XXX','BUG ')
C
      IF(IMATNR.NE.1.AND.IMATNC.NE.1)GOTO25079
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,25072)
25072 FORMAT('CAUTION--THIS MATRIX HAS ONLY 1 ROW AND 1 COLUMN')
      CALL DPWRST('XXX','BUG ')
25079 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      IHCV11='    '
      IHCV12='    '
      IHCV21='    '
      IHCV22='    '
      IHCV31='    '
      IHCV32='    '
      IF(IMATNC.GE.1)THEN
        J=1
        CALL DPAPN2(IHMAT1,IHMAT2,J,MAXCAS,
     1              IHCV11,IHCV12,IBUGA3,ISUBRO,IERROR)
      ENDIF
      IF(IMATNC.GE.2)THEN
        J=2
        CALL DPAPN2(IHMAT1,IHMAT2,J,MAXCAS,
     1              IHCV21,IHCV22,IBUGA3,ISUBRO,IERROR)
      ENDIF
      IF(IMATNC.GE.3)THEN
        J=3
        CALL DPAPN2(IHMAT1,IHMAT2,J,MAXCAS,
     1              IHCV31,IHCV32,IBUGA3,ISUBRO,IERROR)
      ENDIF
C
      IF(IMATNC.LE.3)THEN
        WRITE(ICOUT,25081)IHMAT1,IHMAT2,IHCV11,IHCV12,IHCV21,IHCV22,
     1                    IHCV31,IHCV32
25081   FORMAT('THE COLUMN VECTOR NAMES ASSIGNED TO MATRIX ',2A4,
     1         'ARE ',2(A4,2X),2A4)
        CALL DPWRST('XXX','BUG ')
      ELSEIF(IMATNC.GT.3)THEN
        WRITE(ICOUT,25082)IHMAT1,IHMAT2,IHCV11,IHCV12,IHCV21,IHCV22,
     1                    IHCV31,IHCV32
25082   FORMAT('THE COLUMN VECTOR NAMES ASSIGNED TO MATRIX ',2A4,
     1         'ARE ',3(2A4,2X),'...')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ICV1=IMATCO
      ICV2=IMATCO+IMATNC-1
      WRITE(ICOUT,25083)IHMAT1,IHMAT2,ICV1,ICV2
25083 FORMAT('THE WORKSHEET COLUMNS   ASSIGNED TO MATRIX ',2A4,
     1'ARE ',I8,' TO',I8)
      CALL DPWRST('XXX','BUG ')
C
25090 CONTINUE
C
      GOTO19000
C
C
C               *******************************************
C               **  STEP 16--                            **
C               **  TREAT THE VARIABLE (VECTOR) CASE--   **
C               **  CARRY OUT THE LIST UPDATING AND      **
C               **  GENERATE THE INFORMATIVE PRINTING    **
C               **  FOR STEP NUMBERS 7, 8, AND 9 ABOVE.  **
C               *******************************************
C
16000 CONTINUE
      ISTEPN='16'
      IF(IBUGA3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHNAME(ILISL(1))=ILEFT(1)
      IHNAM2(ILISL(1))=ILEF2(1)
      IUSE(ILISL(1))='V'
      IVALUE(ILISL(1))=ICOLL(1)
      VALUE(ILISL(1))=ICOLL(1)
      IF(NEWNAM(1).EQ.'YES')NUMNAM=NUMNAM+1
      IF(NEWNAM(1).EQ.'YES')NUMCOL=NUMCOL+1
C
      IF(NUMVAL.GE.2)THEN
        IHNAME(ILISL(2))=ILEFT(2)
        IHNAM2(ILISL(2))=ILEF2(2)
        IUSE(ILISL(2))='V'
        IVALUE(ILISL(2))=ICOLL(2)
        VALUE(ILISL(2))=ICOLL(2)
        IF(NEWNAM(2).EQ.'YES')NUMNAM=NUMNAM+1
        IF(NEWNAM(2).EQ.'YES')NUMCOL=NUMCOL+1
      ENDIF
C
      IF(NUMVAL.GE.3)THEN
        IHNAME(ILISL(3))=ILEFT(3)
        IHNAM2(ILISL(3))=ILEF2(3)
        IUSE(ILISL(3))='V'
        IVALUE(ILISL(3))=ICOLL(3)
        VALUE(ILISL(3))=ICOLL(3)
        IF(NEWNAM(3).EQ.'YES')NUMNAM=NUMNAM+1
        IF(NEWNAM(3).EQ.'YES')NUMCOL=NUMCOL+1
      ENDIF
C
      IF(NUMVAL.GE.4)THEN
        IHNAME(ILISL(4))=ILEFT(4)
        IHNAM2(ILISL(4))=ILEF2(4)
        IUSE(ILISL(4))='V'
        IVALUE(ILISL(4))=ICOLL(4)
        VALUE(ILISL(4))=ICOLL(4)
        IF(NEWNAM(4).EQ.'YES')NUMNAM=NUMNAM+1
        IF(NEWNAM(4).EQ.'YES')NUMCOL=NUMCOL+1
      ENDIF
C
      IF(IPRINT.EQ.'OFF')GOTO16090
      IF(IFEEDB.EQ.'OFF')GOTO16090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
C
      WRITE(ICOUT,16011)ILEFT(1),ILEF2(1),NSX
16011 FORMAT('THE NUMBER OF VALUES GENERATED FOR ',
     1'THE VARIABLE ',A4,A4,' = ',I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IJ=MAXN*(ICOLL(1)-1)+IROW1
      IF(ICOLL(1).LE.MAXCOL)THEN
         WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),V(IJ),IROW1
         CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP1)THEN
         WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),PRED(IROW1),IROW1
16021    FORMAT('THE FIRST           COMPUTED VALUE OF ',A4,A4,
     1          ' = ',E16.7,'   (ROW ',I6,')')
         CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP2)THEN
        WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),RES(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP3)THEN
        WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),YPLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP4)THEN
        WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),XPLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP5)THEN
        WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),X2PLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP6)THEN
        WRITE(ICOUT,16021)ILEFT(1),ILEF2(1),TAGPLO(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IJ=MAXN*(ICOLL(1)-1)+IROWN
16031 FORMAT('THE LAST (',I5,'-TH) COMPUTED VALUE OF ',A4,A4,
     1' = ',E16.7,'   (ROW ',I6,')')
      IF(ICOLL(1).LE.MAXCOL.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),V(IJ),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP1.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),PRED(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP2.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),RES(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP3.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),YPLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP4.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),XPLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP5.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),X2PLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(1).EQ.MAXCP6.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16031)NSX,ILEFT(1),ILEF2(1),TAGPLO(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IF(NSX.NE.1)GOTO16039
      WRITE(ICOUT,16032)
16032 FORMAT('SINCE THE GENERATED SAMPLE SIZE WAS ONLY 1,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16033)
16033 FORMAT('THE ABOVE VALUE WAS THE SOLE VALUE COMPUTED.')
      CALL DPWRST('XXX','BUG ')
16039 CONTINUE
C
      IF(NUMVAL.LE.1)GOTO16079
      WRITE(ICOUT,16051)ILEFT(2),ILEF2(2),NSX
16051 FORMAT('THE NUMBER OF VALUES GENERATED FOR ',
     1'THE VARIABLE ',A4,A4,' = ',I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IJ=MAXN*(ICOLL(2)-1)+IROW1
16061 FORMAT('THE FIRST           COMPUTED VALUE OF ',A4,A4,
     1' = ',E16.7,'   (ROW ',I6,')')
      IF(ICOLL(2).LE.MAXCOL)THEN
        WRITE(ICOUT,16061)ILEFT(2),ILEF2(2),V(IJ),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP1)THEN
        WRITE(ICOUT,16061)ILEFT(2),ILEF2(2),PRED(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP2)THEN
        WRITE(ICOUT,16061)ILEFT(2),ILEF2(2),RES(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP3)THEN
        WRITE(ICOUT,16061)ILEFT(2),ILEF2(2),YPLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP4)THEN
        WRITE(ICOUT,16061)ILEFT(2),ILEF2(2),XPLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP5)THEN
        WRITE(ICOUT,16061)ILEFT(2),ILEF2(2),X2PLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP6)THEN
        WRITE(ICOUT,16061)ILEFT(2),ILEF2(2),TAGPLO(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IJ=MAXN*(ICOLL(2)-1)+IROWN
16071 FORMAT('THE LAST (',I5,'-TH) COMPUTED VALUE OF ',A4,A4,
     1' = ',E16.7,'   (ROW ',I6,')')
      IF(ICOLL(2).LE.MAXCOL.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16071)NSX,ILEFT(2),ILEF2(2),V(IJ),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP1.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16071)NSX,ILEFT(2),ILEF2(2),PRED(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP2.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16071)NSX,ILEFT(2),ILEF2(2),RES(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP3.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16071)NSX,ILEFT(2),ILEF2(2),YPLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP4.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16071)NSX,ILEFT(2),ILEF2(2),XPLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP5.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16071)NSX,ILEFT(2),ILEF2(2),X2PLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(2).EQ.MAXCP6.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16071)NSX,ILEFT(2),ILEF2(2),TAGPLO(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IF(NSX.NE.1)GOTO16079
      WRITE(ICOUT,16072)
16072 FORMAT('SINCE THE GENERATED SAMPLE SIZE WAS ONLY 1,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16073)
16073 FORMAT('THE ABOVE VALUE WAS THE SOLE VALUE COMPUTED.')
      CALL DPWRST('XXX','BUG ')
16079 CONTINUE
C
      IF(NUMVAL.LE.2)GOTO16179
      WRITE(ICOUT,16151)ILEFT(3),ILEF2(3),NSX
16151 FORMAT('THE NUMBER OF VALUES GENERATED FOR ',
     1'THE VARIABLE ',A4,A4,' = ',I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IJ=MAXN*(ICOLL(3)-1)+IROW1
16161 FORMAT('THE FIRST           COMPUTED VALUE OF ',A4,A4,
     1' = ',E16.7,'   (ROW ',I6,')')
      IF(ICOLL(3).LE.MAXCOL)THEN
        WRITE(ICOUT,16161)ILEFT(3),ILEF2(3),V(IJ),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP1)THEN
        WRITE(ICOUT,16161)ILEFT(3),ILEF2(3),PRED(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP2)THEN
        WRITE(ICOUT,16161)ILEFT(3),ILEF2(3),RES(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP3)THEN
        WRITE(ICOUT,16161)ILEFT(3),ILEF2(3),YPLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP4)THEN
        WRITE(ICOUT,16161)ILEFT(3),ILEF2(3),XPLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP5)THEN
        WRITE(ICOUT,16161)ILEFT(3),ILEF2(3),X2PLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP6)THEN
        WRITE(ICOUT,16161)ILEFT(3),ILEF2(3),TAGPLO(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IJ=MAXN*(ICOLL(3)-1)+IROWN
16171 FORMAT('THE LAST (',I5,'-TH) COMPUTED VALUE OF ',A4,A4,
     1' = ',E16.7,'   (ROW ',I6,')')
      IF(ICOLL(3).LE.MAXCOL.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16171)NSX,ILEFT(3),ILEF2(3),V(IJ),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP1.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16171)NSX,ILEFT(3),ILEF2(3),PRED(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP2.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16171)NSX,ILEFT(3),ILEF2(3),RES(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP3.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16171)NSX,ILEFT(3),ILEF2(3),YPLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP4.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16171)NSX,ILEFT(3),ILEF2(3),XPLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP5.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16171)NSX,ILEFT(3),ILEF2(3),X2PLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(3).EQ.MAXCP6.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16171)NSX,ILEFT(3),ILEF2(3),TAGPLO(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IF(NSX.NE.1)GOTO16179
      WRITE(ICOUT,16172)
16172 FORMAT('SINCE THE GENERATED SAMPLE SIZE WAS ONLY 1,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16173)
16173 FORMAT('THE ABOVE VALUE WAS THE SOLE VALUE COMPUTED.')
      CALL DPWRST('XXX','BUG ')
16179 CONTINUE
C
      IF(NUMVAL.LE.3)GOTO16279
      WRITE(ICOUT,16251)ILEFT(4),ILEF2(4),NSX
16251 FORMAT('THE NUMBER OF VALUES GENERATED FOR ',
     1'THE VARIABLE ',A4,A4,' = ',I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IJ=MAXN*(ICOLL(4)-1)+IROW1
16261 FORMAT('THE FIRST           COMPUTED VALUE OF ',A4,A4,
     1' = ',E16.7,'   (ROW ',I6,')')
      IF(ICOLL(4).LE.MAXCOL)THEN
        WRITE(ICOUT,16261)ILEFT(4),ILEF2(4),V(IJ),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP1)THEN
        WRITE(ICOUT,16261)ILEFT(4),ILEF2(4),PRED(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP2)THEN
        WRITE(ICOUT,16261)ILEFT(4),ILEF2(4),RES(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP3)THEN
        WRITE(ICOUT,16261)ILEFT(4),ILEF2(4),YPLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP4)THEN
        WRITE(ICOUT,16261)ILEFT(4),ILEF2(4),XPLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP5)THEN
        WRITE(ICOUT,16261)ILEFT(4),ILEF2(4),X2PLOT(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP6)THEN
        WRITE(ICOUT,16261)ILEFT(4),ILEF2(4),TAGPLO(IROW1),IROW1
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IJ=MAXN*(ICOLL(4)-1)+IROWN
16271 FORMAT('THE LAST (',I5,'-TH) COMPUTED VALUE OF ',A4,A4,
     1' = ',E16.7,'   (ROW ',I6,')')
      IF(ICOLL(4).LE.MAXCOL.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16271)NSX,ILEFT(4),ILEF2(4),V(IJ),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP1.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16271)NSX,ILEFT(4),ILEF2(4),PRED(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP2.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16271)NSX,ILEFT(4),ILEF2(4),RES(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP3.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16271)NSX,ILEFT(4),ILEF2(4),YPLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP4.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16271)NSX,ILEFT(4),ILEF2(4),XPLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP5.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16271)NSX,ILEFT(4),ILEF2(4),X2PLOT(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ELSEIF(ICOLL(4).EQ.MAXCP6.AND.NSX.NE.1)THEN
        WRITE(ICOUT,16271)NSX,ILEFT(4),ILEF2(4),TAGPLO(IROWN),IROWN
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IF(NSX.NE.1)GOTO16279
      WRITE(ICOUT,16272)
16272 FORMAT('SINCE THE GENERATED SAMPLE SIZE WAS ONLY 1,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,16273)
16273 FORMAT('THE ABOVE VALUE WAS THE SOLE VALUE COMPUTED.')
      CALL DPWRST('XXX','BUG ')
16279 CONTINUE
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
16090 CONTINUE
C
        IF(ICASL7.EQ.'BIPL')THEN
          IHP='BIPL'
          IHP2='OTGF'
          VALUE0=SCAL91
          CALL DPADDP(IHP,IHP2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
      GOTO19000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
19000 CONTINUE
      IF(IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19011)
19011   FORMAT('***** AT THE END       OF DPMAT2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19012)IFOUND,IERROR,IMATSW,NUMVAR
19012   FORMAT('IFOUND,IERROR,IMATSW,NUMVAR = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19014)IILOCV,ICASL7,ITCASE,IWRITE
19014   FORMAT('ILOCV,ICASL7,ITCASE,IWRITE = ',I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19016)NSX,NITEMX,NS(1),NS(2)
19016   FORMAT('NSX,NITEMX,NS(1),NS(2) = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19021)ILEFT(1),ILEF2(1),ILISL(1),ICOLL(1)
19021   FORMAT('ILEFT(1),ILEF2(1),ILISL(1),ICOLL(1) = ',A4,2X,A4,2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19022)ILEFT(2),ILEF2(2),ILISL(2),ICOLL(2)
19022   FORMAT('ILEFT(2),ILEF2(2),ILISL(2),ICOLL(2) = ',A4,2X,A4,2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19023)NUMVAL,NEWNAM(1),NEWNAM(2),NUMVAR
19023   FORMAT('NUMVAL,NEWNAM(1),NEWNAM(2),NUMVAR = ',I8,2X,A4,2X,A4,I8)
        CALL DPWRST('XXX','BUG ')
        DO19025I=1,4
          WRITE(ICOUT,19024)I,ILISR(I),ICOLR(I),ITYPA(I)
19024     FORMAT('I,ILISR(I),ICOLR(I),ITYPA(I) = ',I2,I8,I8,1X,A4)
          CALL DPWRST('XXX','BUG ')
19025   CONTINUE
        WRITE(ICOUT,19026)TEMPS(1),TEMPS(2),TEMPS(3),TEMPS(4)
19026   FORMAT('TEMPS(1),TEMPS(2),TEMPS(3),TEMPS(4) = ',4E15.7)
        CALL DPWRST('XXX','BUG ')
        IF(IMATSW.EQ.'NO')THEN
          WRITE(ICOUT,19032)NR1,NC1,NR2,NC2,NR91,NC91
19032     FORMAT('NR1,NC1,NR2,NC2,NR91,NC91 = ',6I8)
          CALL DPWRST('XXX','BUG ')
          IF(ITYPA(1).EQ.'MATR'.OR.ITYPA(1).EQ.'VARI')THEN
            WRITE(ICOUT,19033)ILISR(1),IN(ILISR(1)),IVALUE(ILISR(1)),
     1                        IVALU2(ILISR(1))
19033       FORMAT('ILISR(1),IN(ILISR(1)),IVALUE(ILISR(1)),',
     1             'IVALU2(ILISR(1)) = ',4I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          WRITE(ICOUT,19034)(ILOCR(J),J=3,7)
19034     FORMAT('ILOCR(3),...,ILOCR(7) = ',5I8)
          CALL DPWRST('XXX','BUG ')
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(NR1.GT.0 .AND. NC1.GT.0)THEN
            JMAX=NC1
            IF(JMAX.GT.10)JMAX=10
            DO19045I=1,NR1
              WRITE(ICOUT,19046)I,(TEMPM1((J-1)*MAXROM+I),J=1,JMAX)
19046         FORMAT('I,TEMPM1(I,.) = ',I8,10E10.3)
              CALL DPWRST('XXX','BUG ')
19045       CONTINUE
          ENDIF
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(NR2.GT.0 .AND. NC2.GT.0)THEN
            JMAX=NC2
            IF(JMAX.GT.10)JMAX=10
            DO19055I=1,NR2
              WRITE(ICOUT,19056)I,(TEMPM2((J-1)*MAXROM+I),J=1,JMAX)
19056         FORMAT('I,TEMPM2(I,.) = ',I8,10E10.3)
              CALL DPWRST('XXX','BUG ')
19055       CONTINUE
          ENDIF
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(NR91.GT.0 .AND. NC91.GT.0)THEN
            JMAX=NC91
            IF(JMAX.GT.10)JMAX=10
            DO19065I=1,NR91
              WRITE(ICOUT,19066)I,(TEMM91((J-1)*MAXROM+I),J=1,JMAX)
19066         FORMAT('I,TEMM91(I,.) = ',I8,10E10.3)
              CALL DPWRST('XXX','BUG ')
19065       CONTINUE
          ENDIF
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAT6(ICASL7,ICASE,MAXCAS,
     1                  ILEFT,ILEFT2,NEWNAM,ILISL,ICOLL,
     1                  NUMVAL,NIOLD,
     1                  IBUGA3,ISUBRO,IFOUND,IERROR)
C
C     NOTE--THIS SUBROUTINE IS A UTILITY ROUTINE FOR DPMATC AND
C           DPMAT2.  IT CHECKS A VARIABLE ON THE LEFT HAND SIDE
C           OF THE EQUAL SIGN.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2002/6
C     ORIGINAL VERSION--JUNE      2002.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASL7
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 NEWNAM(MAXCAS)
      CHARACTER*4 ILEFT(MAXCAS)
      CHARACTER*4 ILEFT2(MAXCAS)
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      INTEGER ILISL(MAXCAS)
      INTEGER ICOLL(MAXCAS)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMA'
      ISUBN2='T6  '
      IFOUND='NO'
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT6')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAT6--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASL7,IBUGA3,ISUBRO
   52   FORMAT('ICASL7,IBUGA3,ISUBRO = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **********************************
C               **  STEP 1--                    **
C               **  INITIALIZE SOME VARIABLES.  **
C               **********************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT6')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NEWNAM(ICASE)='NO'
C
C               ******************************************************
C               **  STEP 2A--                                        *
C               **  EXAMINE THE LEFT-HAND SIDE--                     *
C               **  IS THE VARIABLE NAME TO LEFT OF = SIGN           *
C               **  ALREADY IN THE NAME LIST?    AS A VARIABLE?      *
C               **  NOTE THAT  ILEFT   IS THE NAME OF THE VARIABLE   *
C               **  ON THE LEFT.                                     *
C               **  NOTE THAT     ILISL     IS THE LINE IN THE TABLE *
C               **  OF THE NAME ON THE LEFT.                         *
C               **  NOTE THAT  ICOLL(ICASE)  IS THE DATA COLUMN      *
C               **  (1 TO 12)                                        *
C               **  FOR THE NAME OF THE LEFT.                        *
C               ******************************************************
C
      ISTEPN='2A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT6')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILEFT(ICASE)=IHARG(ICASE)
      ILEFT2(ICASE)=IHARG2(ICASE)
      DO210I=1,NUMNAM
        I2=I
        IF(ILEFT(ICASE).EQ.IHNAME(I).AND.ILEFT2(ICASE).EQ.IHNAM2(I))THEN
          IF(IUSE(I).EQ.'P')THEN
            GOTO230
          ELSEIF(IUSE(I).EQ.'V' .OR. IUSE(I).EQ.'M')THEN
            GOTO280
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,221)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,110)ILEFT(ICASE),ILEFT2(ICASE)
  110       FORMAT('      AN ATTEMPT WAS MADE TO USE ',2A4,' AS A ',
     1             'VARIABLE')
            CALL DPWRST('XXX','BUG ')
            IF(IUSE(I).EQ.'F')THEN
              WRITE(ICOUT,111)
  111         FORMAT('      EVEN THOUGH IT ALREADY EXISTS AS A STRING.')
              CALL DPWRST('XXX','BUG ')
            ELSE
              WRITE(ICOUT,113)IUSE(I)
  113         FORMAT('      EVEN THOUGH IT ALREADY EXISTS AS A ',A4,'.')
              CALL DPWRST('XXX','BUG ')
            ENDIF
            IERROR='YES'
            GOTO19000
          ENDIF
        ENDIF
  210 CONTINUE
C
C  CASE WHERE NAME NOT FOUND IN CURRENT NAME LIST
C
      NEWNAM(ICASE)='YES'
      IF(ICASE.GT.1)NUMVAL=ICASE
C
      IJUNK=0
      DO211I=1,ICASE
        IF(NEWNAM(I).EQ.'YES')IJUNK=IJUNK+1
  211 CONTINUE
      ILISL(ICASE)=NUMNAM+IJUNK
C
      IF(ILISL(ICASE).GT.MAXNAM)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,221)
  221   FORMAT('***** ERROR 221 IN DPMAT6--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,222)
  222   FORMAT('      THE NUMBER OF VARIABLE AND/OR PARAMETER')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,223)MAXNAM
  223   FORMAT('      NAMES HAS JUST EXCEEDED THE MAX ALLOWABLE ',
     1         I8,'  .')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,224)
  224   FORMAT('      SUGGESTED ACTION--ENTER    STATUS VARIABLES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,226)
  226   FORMAT('      TO FIND OUT THE FULL LIST OF USED NAMES,')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,227)
  227   FORMAT('      AND THEN REDEFINE (REUSE) SOME OF THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,228)
  228   FORMAT('      ALREADY-USED NAMES.  ALTERNATIVELY, USE THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,229)
  229   FORMAT('      DELETE COMMAND TO FREE NO LONGER NEED NAMES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO19000
      ELSE
        GOTO235
      ENDIF
C
C  CASE WHERE NAME FOUND AS A PARAMETER
C
  230 CONTINUE
      IF(ICASE.GT.1)NUMVAL=ICASE
      ILISL(ICASE)=I2
      GOTO235
C
  235 CONTINUE
      NIOLD=0
      IF(ICASE.GT.1)NUMVAL=ICASE
      IF(ICASE.EQ.1)THEN
        ICOLL(ICASE)=NUMCOL+1
      ELSEIF(ICASE.GT.1)THEN
        ICOLL(ICASE)=NUMCOL
        DO237I=1,ICASE
          IF(NEWNAM(I).EQ.'YES')ICOLL(ICASE)=ICOLL(ICASE)+1
  237   CONTINUE
      ENDIF
      IF(ICOLL(ICASE).LE.MAXCOL)GOTO290
C
      WRITE(ICOUT,241)
  241 FORMAT('***** ERROR 241 IN DPMAT6--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,242)
  242 FORMAT('      THE NUMBER OF DATA COLUMNS HAS JUST EXCEEDED')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,243)MAXCOL
  243 FORMAT('      THE MAX ALLOWABLE ',I8,'  .  SUGGESTED ACTION--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,245)
  245 FORMAT('      ENTER      STATUS VARIABLES')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,246)
  246 FORMAT('      TO FIND OUT THE FULL LIST OF USED COLUMNS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,247)
  247 FORMAT('      AND THEN OVERWRITE SOME COLUMNS.   EXAMPLE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,248)
  248 FORMAT('      IF       LET X(I) = 3.14         FAILED')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,249)
  249 FORMAT('      THEN ONE MIGHT ENTER     LET X = COLUMN 7')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,250)
  250 FORMAT('      (THEREBY EQUATING THE NAME X WITH COLUMN 7')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,251)
  251 FORMAT('      FOLLOWED BY              LET X(I) = 3.14')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,252)
  252 FORMAT('      (WHICH WILL ACTUALLY OVERWRITE COLUMN 7')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,253)
  253 FORMAT('      WITH THE NUMERIC CONSTANTS 3.14).')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,255)
  255 FORMAT('      ALTERNATIVELY, USE THE DIMENSION COMMAND TO ',
     1       'CREATE MORE COLUMNS.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
C
C  CASE WHERE NAME FOUND AS A VARIABLE
C
  280 CONTINUE
      IF(ICASE.GT.1)NUMVAL=ICASE
      ILISL(ICASE)=I2
      ICOLL(ICASE)=IVALUE(ILISL(ICASE))
      NIOLD=IN(ILISL(ICASE))
C
  290 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT6')THEN
        WRITE(ICOUT,291)
  291   FORMAT('AT THE END OF STEP 2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,292)ILEFT(ICASE),ILEFT2(ICASE),NEWNAM(ICASE),
     1                  NUMNAM,ILISL(ICASE),
     1                  ICOLL(ICASE),NIOLD
        CALL DPWRST('XXX','BUG ')
  292   FORMAT('ILEFT,ILEFT2,NEWNAM,NUMNAM,ILISL(ICASE),',
     1         'ICOLL(ICASE),NIOLD = ',A4,A4,2X,A4,2X,4I8)
      ENDIF

C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
19000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT6')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19011)
19011   FORMAT('***** AT THE END       OF DPMAT6--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19012)IFOUND,IERROR
19012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19021)ILEFT(ICASE),ILEFT2(ICASE),ILISL(ICASE),
     1                    ICOLL(ICASE)
19021   FORMAT('ILEFT,ILEFT2,ILISL(ICASE),ICOLL(ICASE) = ',
     1         A4,2X,A4,2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19023)NEWNAM(ICASE)
19023   FORMAT('NEWNAM = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAT7(ICASL7,ICASE,MAXCAS,ILOCR,
     1                  IHRIGH,IHRIG2,ICOLR,ILISR,NIRIGH,ITYPA,TEMPS,
     1                  IFLAG1,ATEMP,ITEMP,
     1                  IBUGA3,ISUBRO,IFOUND,IERROR)
C
C     NOTE--THIS SUBROUTINE IS A UTILITY ROUTINE FOR DPMATC AND
C           DPMAT2.  IT CHECKS A VARIABLE ON THE RIGHT HAND SIDE
C           OF THE EQUAL SIGN.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2002/6
C     ORIGINAL VERSION--JUNE      2002.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASL7
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 ITYPA(MAXCAS)
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      REAL TEMPS(MAXCAS)
C
      INTEGER ICOLR(MAXCAS)
      INTEGER ILISR(MAXCAS)
      INTEGER NIRIGH(MAXCAS)
      INTEGER ILOCR(MAXCAS)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMA'
      ISUBN2='T7  '
      IFOUND='NO'
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT7')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAT7--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASL7,IBUGA3,ISUBRO
   52   FORMAT('ICASL7,IBUGA3,ISUBRO = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASE
   53   FORMAT('ICASE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)ILOCR(ICASE)
   54   FORMAT('ILOCR(ICASE) = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)ICOLR(ICASE)
   55   FORMAT('ICOLR(ICASE) = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,56)ILISR(ICASE)
   56   FORMAT('ILISR(ICASE) = ',I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************************
C               **  STEP 1--                         **
C               **  EXAMINE THE VARIABLE             **
C               **  ON THE RIGHT.                    **
C               ***************************************
C
      ISTEPN='1.0'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT7')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHRIGH=IHARG(ILOCR(ICASE))
      IHRIG2=IHARG2(ILOCR(ICASE))
      ATEMP=ARG(ILOCR(ICASE))
      ITEMP=IARG(ILOCR(ICASE))
      DO1220I=1,NUMNAM
        I2=I
        IF(IHRIGH.EQ.IHNAME(I).AND.
     1     IHRIG2.EQ.IHNAM2(I).AND.
     1     IUSE(I).EQ.'V')GOTO1270
        IF(IHRIGH.EQ.IHNAME(I).AND.
     1     IHRIG2.EQ.IHNAM2(I).AND.
     1     IUSE(I).EQ.'M')GOTO1280
        IF(IHRIGH.EQ.IHNAME(I).AND.
     1     IHRIG2.EQ.IHNAM2(I).AND.
     1     IUSE(I).EQ.'P')GOTO1240
 1220 CONTINUE
C
      IF(IFLAG1.EQ.1)GOTO1250
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1221)
 1221 FORMAT('***** ERROR 1221 IN DPMAT7--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1222)ICASE
 1222 FORMAT('      THE SPECIFIED ARGUMENT ',I3)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1223)
 1223 FORMAT('      (VARIABLE NAME OR COLUMN NUMBER)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1224)
 1224 FORMAT('      ON THE RIGHT OF THE = SIGN')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1225)
 1225 FORMAT('      WAS NOT FOUND IN THE INTERNAL NAME LIST')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1226)
 1226 FORMAT('      OF AVAILABLE VARIABLE NAMES.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1227)IHRIGH,IHRIG2
 1227 FORMAT('      THE VARIABLE IN QUESTION WAS ',A4,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1228)
 1228 FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,1229)(IANS(I),I=1,MIN(100,IWIDTH))
 1229   FORMAT(100A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO19000
C
 1240 CONTINUE
      IF(IFLAG1.EQ.1)GOTO1260
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1241)
 1241 FORMAT('***** ERROR 1241 IN DPMAT7--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1242)ICASE
 1242 FORMAT('      THE SPECIFIED ARGUMENT ',I4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1243)
 1243 FORMAT('      (VARIABLE NAME OR COLUMN NUMBER)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1244)
 1244 FORMAT('      ON THE RIGHT OF THE = SIGN')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1245)
 1245 FORMAT('      WAS FOUND IN THE INTERNAL NAME LIST,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1246)
 1246 FORMAT('      BUT AS A PARAMETER,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1247)
 1247 FORMAT('      AND NOT AS A VARIABLE AS IT SHOULD BE HERE.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1248)
 1248 FORMAT('      THE COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1249)(IANS(I),I=1,MIN(100,IWIDTH))
 1249 FORMAT(100A1)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO19000
C
 1250 CONTINUE
      ITYPA(ICASE)='PARA'
      TEMPS(ICASE)=ARG(ILOCR(ICASE))
      NIRIGH(ICASE)=1
      GOTO1290
C
 1260 CONTINUE
      ITYPA(ICASE)='PARA'
      ILISR(ICASE)=I2
      TEMPS(ICASE)=VALUE(ILISR(ICASE))
      NIRIGH(ICASE)=1
      GOTO1290
C
 1270 CONTINUE
      ITYPA(ICASE)='VARI'
      ILISR(ICASE)=I2
      ICOLR(ICASE)=IVALUE(ILISR(ICASE))
      NIRIGH(ICASE)=IN(ILISR(ICASE))
      GOTO1290
C
 1280 CONTINUE
      ITYPA(ICASE)='MATR'
      ILISR(ICASE)=I2
      ICOLR(ICASE)=IVALUE(ILISR(ICASE))
      NIRIGH(ICASE)=IN(ILISR(ICASE))
      GOTO1290
C
 1290 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
19000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT7')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19011)
19011   FORMAT('***** AT THE END       OF DPMAT7--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19012)IFOUND,IERROR
19012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19013)IBUGA3,ISUBRO
19013   FORMAT('IBUGA3,ISUBRO = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19021)IHRIGH,IHRIG2,
     1                    ILISR(ICASE),NIRIGH(ICASE)
19021   FORMAT('IHRIGH,IHRIG2,ILISR(ICASE),',
     1         'NIRIGH(ICASE) = ',A4,2X,A4,2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19023)ITYPA(ICASE),ICOLR(ICASE)
19023   FORMAT('ITYPA(ICASE),ICOLR(ICASE) = ',A4,I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19025)TEMPS(ICASE),NIRIGH(ICASE)
19025   FORMAT('TEMPS(ICASE),NIRIGH(ICASE) = ',E15.7,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMAT8(IVARN1,IVARN2,NUMVAR,
     1                  ICOLR,ILISR,NIRIGH,ITYPA,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     NOTE--EXTRACT INFO FROM LIST OF VARIABLES
C     NOTE--THIS SUBROUTINE IS A UTILITY ROUTINE FOR DPMAT2 AND
C           SPECIFICALLY FOR THE CREATE MATRIX COMMAND.  THIS COMMAND
C           CAN HANDLE A POTENTIALLY LARGE NUMBER OF VARIABLES.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2023/05
C     ORIGINAL VERSION--MAY       2023
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IVARN1(*)
      CHARACTER*4 IVARN2(*)
      CHARACTER*4 ITYPA(*)
C
      INTEGER ICOLR(*)
      INTEGER ILISR(*)
      INTEGER NIRIGH(*)
C
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMA'
      ISUBN2='T8  '
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT8')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMAT8--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NUMVAR
   52   FORMAT('IBUGA3,ISUBRO,NUMVAR = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO60I=1,NUMVAR
          WRITE(ICOUT,62)I,IVARN1(I),IVARN2(I)
   62     FORMAT('I,IVARN1(I),IVARN2(I) = ',I8,2(2X,A4))
          CALL DPWRST('XXX','BUG ')
   60   CONTINUE
      ENDIF
C
C               ***************************************
C               **  STEP 1--                         **
C               **  EXTRACT INFO FOR THE VARIABLES   **
C               **  IN THE LIST.                     **
C               ***************************************
C
      ISTEPN='1.0'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT8')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1053JJ=1,NUMVAR
        write(18,*)'jj,ivarn1(jj),ivarn2(jj) = ',
     1              jj,ivarn1(jj),ivarn2(jj)
        DO1054KK=1,NUMNAM
          IF(IVARN1(JJ).EQ.IHNAME(KK) .AND.
     1       IVARN2(JJ).EQ.IHNAM2(KK))THEN
             ILISR(JJ)=KK
             ICOLR(JJ)=IVALUE(ILISR(JJ))
             NIRIGH(JJ)=IN(ILISR(JJ))
             ITYPA(JJ)='VARI'
             write(18,*)'ilisr(jj),icolr(jj),nirigh(jj),itypa(jj)=',
     1                   ilisr(jj),icolr(jj),nirigh(jj),itypa(jj)
             GOTO1053
          ENDIF
 1054   CONTINUE
C
        WRITE(ICOUT,1070)
 1070   FORMAT('****** ERROR IN CREATE MATRIX (DPMAT8)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1071)IVARN1(JJ),IVARN2(JJ)
 1071   FORMAT('      VARIABLE ',2A4,' NOT FOUND IN INTERNAL '
     1         'NAME TABLE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
C
 1053 CONTINUE
C
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MAT8')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,19011)
19011   FORMAT('***** AT THE END       OF DPMAT8--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,NUMVAR
          WRITE(ICOUT,9021)I,ILISR(I),ICOLR(I),NIRIGH(I),ITYPA(I)
 9021     FORMAT('I,ILISR(I),ICOLR(I),NIRIGH(I),ITYPA(I) = ',
     1           4I8,2X,A4)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMATH(ICHARC,IOP,X,Y,NUMCO,IXMINS,IXMAXS,IXDELS,
     1                  IBUGD2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE AND SET THE HERSHEY CHARACTER SET COORDINATES
C              FOR MATH SYMBOLS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--87/4
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--MARCH     1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     1987.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICHARC
      CHARACTER*4 IOP
      CHARACTER*4 IBUGD2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IOP(*)
      DIMENSION X(*)
      DIMENSION Y(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      NUMCO=1
      ISTART=1
      ISTOP=1
      NC=1
C
C               ******************************************
C               **  TREAT THE ROMAN SIMPLEX UPPER CASE  **
C               **  HERSHEY CHARACTER SET CASE          **
C               ******************************************
C
C
      IF(IBUGG4.EQ.'OFF'.AND.ISUBG4.NE.'MATH')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPMATH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)ICHARC
   52 FORMAT('ICHARC = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,59)IBUGG4,ISUBG4,IFOUND,IERROR
   59 FORMAT('IBUGG4,ISUBG4,IFOUND,IERROR = ',A4,2X,A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
   90 CONTINUE
C
C               **************************************************
C               **  STEP 1--                                    **
C               **  SEARCH FOR THE INPUT CHARACTER(S).          **
C               **  MAP THE CHARACTER(S) INTO A NUMERIC VALUE.  **
C               **************************************************
C
      CALL DPCHMA(ICHARC,ICHARN,IBUGD2,IFOUND)
      IF(IFOUND.EQ.'NO')GOTO9000
C
      IF(ICHARN.LE.32)GOTO1010
      GOTO1019
 1010 CONTINUE
      CALL DMATH1(ICHARN,IOP,X,Y,NUMCO,IXMINS,IXMAXS,IXDELS,
     1IBUGD2,IFOUND,IERROR)
      GOTO9000
 1019 CONTINUE
C
      IF(33.LE.ICHARN.AND.ICHARN.LE.51)GOTO1020
      GOTO1029
 1020 CONTINUE
      CALL DMATH2(ICHARN,IOP,X,Y,NUMCO,IXMINS,IXMAXS,IXDELS,
     1IBUGD2,IFOUND,IERROR)
      GOTO9000
 1029 CONTINUE
C
      IF(52.LE.ICHARN.AND.ICHARN.LE.60)GOTO1030
      GOTO1039
 1030 CONTINUE
      CALL DMATH3(ICHARN,IOP,X,Y,NUMCO,IXMINS,IXMAXS,IXDELS,
     1IBUGD2,IFOUND,IERROR)
      GOTO9000
 1039 CONTINUE
C
      IF(ICHARN.GE.61)GOTO1040
      GOTO1049
 1040 CONTINUE
      CALL DMATH4(ICHARN,IOP,X,Y,NUMCO,IXMINS,IXMAXS,IXDELS,
     1IBUGD2,IFOUND,IERROR)
      GOTO9000
 1049 CONTINUE
C
      IFOUND='NO'
      GOTO9000
C
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG4.EQ.'OFF'.AND.ISUBG4.NE.'MATH')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPMATH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGG4,ISUBG4,IFOUND,IERROR
 9012 FORMAT('IBUGG4,ISUBG4,IFOUND,IERROR = ',A4,2X,A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)ICHARC,ICHARN
 9013 FORMAT('ICHARC,ICHARN = ',A4,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)ISTART,ISTOP,NC,NUMCO
 9014 FORMAT('ISTART,ISTOP,NC,NUMCO = ',4I8)
      CALL DPWRST('XXX','BUG ')
      IF(NUMCO.GE.1.AND.NUMCO.LE.1000)GOTO9019
      DO9015I=1,NUMCO
      WRITE(ICOUT,9016)I,IOP(I),X(I),Y(I)
 9016 FORMAT('I,IOP(I),X(I),Y(I) = ',I8,2X,A4,2F10.2)
      CALL DPWRST('XXX','BUG ')
 9015 CONTINUE
 9019 CONTINUE
      WRITE(ICOUT,9021)IXMINS,IXMAXS,IXDELS
 9021 FORMAT('IXMINS,IXMAXS,IXDELS = ',3I8)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPMATN(ICOM,IHARG,IARGT,IARG,NUMARG,
     1                  IX1JSW,IX2JSW,IY1JSW,IY2JSW,
     1                  NMJX1T,NMJX2T,NMJY1T,NMJY2T,
     1                  IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE NUMBER OF MAJOR TIC MARKS
C              FOR HORIZONTAL FRAME LINES OR VERTICAL FRAME LINES OR BOTH.
C     INPUT  ARGUMENTS--ICOM  (A  CHARACTER VECTOR)
C                     --IHARG  (A  CHARACTER VECTOR)
C                     --IARG   (AN INTEGER VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--
C                     --IX1JSW (A CHARACTER VARIABLE)
C                     --IX2JSW (A CHARACTER VARIABLE)
C                     --IY1JSW (A CHARACTER VARIABLE)
C                     --IY2JSW (A CHARACTER VARIABLE)
C                     --NMJX1T (AN INTEGER VARIABLE)
C                     --NMJX2T (AN INTEGER VARIABLE)
C                     --NMJY1T (AN INTEGER VARIABLE)
C                     --NMJY2T (AN INTEGER VARIABLE)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1982.
C     UPDATED--JANUARY  1988. (OPTIONAL OMISSION OF THE WORD   MAJOR)
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IX1JSW
      CHARACTER*4 IX2JSW
      CHARACTER*4 IY1JSW
      CHARACTER*4 IY2JSW
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(ICOM.NE.'MAJO')GOTO1010
      GOTO1019
 1010 CONTINUE
      IF(ICOM.EQ.'XTIC')GOTO1100
      IF(ICOM.EQ.'X1TI')GOTO1200
      IF(ICOM.EQ.'X2TI')GOTO1300
      IF(ICOM.EQ.'YTIC')GOTO1400
      IF(ICOM.EQ.'Y1TI')GOTO1500
      IF(ICOM.EQ.'Y2TI')GOTO1600
      IF(ICOM.EQ.'TIC')GOTO1700
      IF(ICOM.EQ.'TICS')GOTO1700
      GOTO9000
 1019 CONTINUE
C
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.1)GOTO1020
      GOTO1029
 1020 CONTINUE
      IF(IHARG(1).EQ.'XTIC')GOTO1100
      IF(IHARG(1).EQ.'X1TI')GOTO1200
      IF(IHARG(1).EQ.'X2TI')GOTO1300
      IF(IHARG(1).EQ.'YTIC')GOTO1400
      IF(IHARG(1).EQ.'Y1TI')GOTO1500
      IF(IHARG(1).EQ.'Y2TI')GOTO1600
      IF(IHARG(1).EQ.'TIC')GOTO1700
      IF(IHARG(1).EQ.'TICS')GOTO1700
      GOTO9000
 1029 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 1--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE HORIZONTAL MAJOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1100 CONTINUE
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'NUMB')GOTO1110
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1110
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1110
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1110
C
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1101)
 1101 FORMAT('***** ERROR IN DPMATN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1102)
 1102 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1103)
 1103 FORMAT('      NUMBER OF MAJOR (HORIZONTAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1104)
 1104 FORMAT('      EXAMPLE TO SPECIFY 3 MAJOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1105)
 1105 FORMAT('      (ON THE HORIZONTAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1106)
 1106 FORMAT('      MAJOR XTIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1107)
 1107 FORMAT('      MAJOR XTICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1110 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1150
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1160
      IERROR='YES'
      GOTO9000
C
 1150 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1180
C
 1160 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      IX1JSW=IHHOLD
      IX2JSW=IHHOLD
      NMJX1T=IHOLD
      NMJX2T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE NUMBER OF MAJOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)
 1182 FORMAT('(FOR BOTH HORIZONTAL FRAME LINES')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1183)IHOLD
 1183 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1184)
 1184 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 2--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE BOTTOM HORIZONTAL MAJOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1200 CONTINUE
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'NUMB')GOTO1210
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1210
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1210
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1210
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1201)
 1201 FORMAT('***** ERROR IN DPMATN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1202)
 1202 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1203)
 1203 FORMAT('      NUMBER OF MAJOR (HORIZONTAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1204)
 1204 FORMAT('      EXAMPLE TO SPECIFY 3 MAJOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1205)
 1205 FORMAT('      (ON THE BOTTOM HORIZONTAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1206)
 1206 FORMAT('      MAJOR X1TIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1207)
 1207 FORMAT('      MAJOR X1TICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1210 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1250
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1250
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1250
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1250
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1260
      IERROR='YES'
      GOTO9000
C
 1250 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1280
C
 1260 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1280
C
 1280 CONTINUE
      IFOUND='YES'
      IX1JSW=IHHOLD
      NMJX1T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)
 1281 FORMAT('THE NUMBER OF MAJOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1282)
 1282 FORMAT('(FOR THE BOTTOM HORIZONTAL FRAME LINE')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1283)IHOLD
 1283 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1284)
 1284 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 3--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE TOP    HORIZONTAL MAJOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1300 CONTINUE
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'NUMB')GOTO1310
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1310
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1310
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1310
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1301)
 1301 FORMAT('***** ERROR IN DPMATN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1302)
 1302 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1303)
 1303 FORMAT('      NUMBER OF MAJOR (HORIZONTAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1304)
 1304 FORMAT('      EXAMPLE TO SPECIFY 3 MAJOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1305)
 1305 FORMAT('      (ON THE TOP HORIZONTAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1306)
 1306 FORMAT('      MAJOR X2TIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1307)
 1307 FORMAT('      MAJOR X2TICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1310 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1350
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1350
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1350
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1350
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1360
      IERROR='YES'
      GOTO9000
C
 1350 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1380
C
 1360 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1380
C
 1380 CONTINUE
      IFOUND='YES'
      IX2JSW=IHHOLD
      NMJX2T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1389
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1381)
 1381 FORMAT('THE NUMBER OF MAJOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1382)
 1382 FORMAT('(FOR THE TOP HORIZONTAL FRAME LINE')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1383)IHOLD
 1383 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1384)
 1384 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1389 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 4--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE VERTICAL    MAJOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1400 CONTINUE
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'NUMB')GOTO1410
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1410
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1410
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1410
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1401)
 1401 FORMAT('***** ERROR IN DPMATN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1402)
 1402 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1403)
 1403 FORMAT('      NUMBER OF MAJOR (VERTICAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1404)
 1404 FORMAT('      EXAMPLE TO SPECIFY 3 MAJOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1405)
 1405 FORMAT('      (ON THE VERTICAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1406)
 1406 FORMAT('      MAJOR YTIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1407)
 1407 FORMAT('      MAJOR YTICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1410 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1450
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1450
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1450
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1450
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1460
      IERROR='YES'
      GOTO9000
C
 1450 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1480
C
 1460 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1480
C
 1480 CONTINUE
      IFOUND='YES'
      IY1JSW=IHHOLD
      IY2JSW=IHHOLD
      NMJY1T=IHOLD
      NMJY2T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1489
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1481)
 1481 FORMAT('THE NUMBER OF MAJOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1482)
 1482 FORMAT('(FOR BOTH VERTICAL FRAME LINES')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1483)IHOLD
 1483 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1484)
 1484 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1489 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 5--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE LEFT VERTICAL MAJOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1500 CONTINUE
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'NUMB')GOTO1510
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1510
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1510
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1510
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1501)
 1501 FORMAT('***** ERROR IN DPMATN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1502)
 1502 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1503)
 1503 FORMAT('      NUMBER OF MAJOR (VERTICAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1504)
 1504 FORMAT('      EXAMPLE TO SPECIFY 3 MAJOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1505)
 1505 FORMAT('      (ON THE LEFT VERTICAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1506)
 1506 FORMAT('      MAJOR Y1TIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1507)
 1507 FORMAT('      MAJOR Y1TICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1510 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1550
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1550
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1550
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1550
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1560
      IERROR='YES'
      GOTO9000
C
 1550 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1580
C
 1560 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1580
C
 1580 CONTINUE
      IFOUND='YES'
      IY1JSW=IHHOLD
      NMJY1T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1589
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1581)
 1581 FORMAT('THE NUMBER OF MAJOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1582)
 1582 FORMAT('(FOR THE LEFT VERTICAL FRAME LINE')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1583)IHOLD
 1583 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1584)
 1584 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1589 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 6--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE RIGHT VERTICAL MAJOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1600 CONTINUE
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'NUMB')GOTO1610
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1610
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1610
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1610
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1601)
 1601 FORMAT('***** ERROR IN DPMATN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1602)
 1602 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1603)
 1603 FORMAT('      NUMBER OF MAJOR (VERTICAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1604)
 1604 FORMAT('      EXAMPLE TO SPECIFY 3 MAJOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1605)
 1605 FORMAT('      (ON THE RIGHT VERTICAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1606)
 1606 FORMAT('      MAJOR Y2TIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1607)
 1607 FORMAT('      MAJOR Y2TICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1610 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1650
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1650
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1660
      IERROR='YES'
      GOTO9000
C
 1650 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1680
C
 1660 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1680
C
 1680 CONTINUE
      IFOUND='YES'
      IY2JSW=IHHOLD
      NMJY2T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1681)
 1681 FORMAT('THE NUMBER OF MAJOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1682)
 1682 FORMAT('(FOR THE RIGHT VERTICAL FRAME LINE')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1683)IHOLD
 1683 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1684)
 1684 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1689 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 7--
C               **  TREAT THE CASE WHEN
C               **  BOTH HORIZONTAL AND VERTICAL    MAJOR TICS ARE TO BE
C               ********************************************************
C
 1700 CONTINUE
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'NUMB')GOTO1710
      IF(ICOM.NE.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1710
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1710
      IF(ICOM.EQ.'MAJO'.AND.NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1710
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1701)
 1701 FORMAT('***** ERROR IN DPMATN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1702)
 1702 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1703)
 1703 FORMAT('      NUMBER OF MAJOR TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1704)
 1704 FORMAT('      EXAMPLE TO SPECIFY 3 MAJOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1705)
 1705 FORMAT('      (ON ALL 4 FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1706)
 1706 FORMAT('      MAJOR TIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1707)
 1707 FORMAT('      MAJOR TICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1710 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1750
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1750
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1750
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1750
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1760
      IERROR='YES'
      GOTO9000
C
 1750 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1780
C
 1760 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1780
C
 1780 CONTINUE
      IFOUND='YES'
      IX1JSW=IHHOLD
      IX2JSW=IHHOLD
      IY1JSW=IHHOLD
      IY2JSW=IHHOLD
      NMJX1T=IHOLD
      NMJX2T=IHOLD
      NMJY1T=IHOLD
      NMJY2T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1789
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1781)
 1781 FORMAT('THE NUMBER OF MAJOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1782)
 1782 FORMAT('(FOR EACH FRAME LINES')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1783)IHOLD
 1783 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1784)
 1784 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1789 CONTINUE
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPMAX(ICOM,IHARG,IARGT,ARG,NUMARG,
     1                 GX1MAX,GY1MAX,GX2MAX,GY2MAX,
     1                 IX1MAX,IY1MAX,IX2MAX,IY2MAX,
     1                 IFOUND,IERROR)
C
C     PURPOSE--DEFINE AXIS MAXIMA
C              (HORIZONTAL AXIS OR VERTICAL AXIS OR BOTH)
C              WHICH IN TURN WILL DEFINE THE UPPER EXTREME
C              WHICH WILL APPEAR ON THE PLOT.
C              THE MAXIMA WILL BE PLACED IN THE 4 VARIABLES
C              GX1MAX,GY1MAX,
C              GX2MAX,GY2MAX,
C              THE STATUS (FIXED OR FLOAT) WILL BE PLACED
C              IN THE 4 VARIABLES
C              IX1MAX,IY1MAX,
C              IX2MAX,IY2MAX,
C     INPUT  ARGUMENTS--ICOM  (A  HOLLERITH VARIABLE)
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --ARG    (A  FLOATING POINT VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--
C                     --GX1MAX = MAXIMUM FOR BOTTOM HORIZONTAL AXIS
C                     --GY1MAX = MAXIMUM FOR LEFT   VERTICAL   AXIS
C                     --GX2MAX = MAXIMUM FOR TOP    HORIZONTAL AXIS
C                     --GX2MAX = MAXIMUM FOR RIGHT  VERTICAL   AXIS
C                     --IX1MAX = STATUS FOR MAXIMUM FOR BOTTOM HORIZONTAL AXIS
C                     --IY1MAX = STATUS FOR MAXIMUM FOR LEFT   VERTICAL   AXIS
C                     --IX2MAX = STATUS FOR MAXIMUM FOR TOP    HORIZONTAL AXIS
C                     --IX2MAX = STATUS FOR MAXIMUM FOR RIGHT  VERTICAL   AXIS
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1978.
C     UPDATED         --SEPTEMBER 1980.
C     UPDATED         --OCTOBER   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --FEBRUARY 1992.  FIX YMAX WITH NO ARG BOMB
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IX1MAX
      CHARACTER*4 IY1MAX
      CHARACTER*4 IX2MAX
      CHARACTER*4 IY2MAX
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
CCCCC THE FOLLOWING LINE WAS FIXED FEBRUARY 1992
CCCCC IF(IHARG(NUMARG).EQ.'?')GOTO8100
      IF(NUMARG.LE.0)GOTO1090
      IF(IHARG(NUMARG).EQ.'?')GOTO8100
 1090 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN                           **
C               **  BOTH HORIZONTAL AXIS MAXIMA ARE TO BE FIXED    **
C               *****************************************************
C
      IF(ICOM.EQ.'XMAX')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(NUMARG.LE.0)GOTO1110
      IF(IARGT(1).EQ.'NUMB')GOTO1120
      GOTO1110
C
 1110 CONTINUE
      IFOUND='YES'
      GX1MAX=CPUMAX
      GX2MAX=CPUMAX
      IX1MAX='FLOA'
      IX2MAX='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1119
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1115)
 1115 FORMAT('THE X AXIS MAXIMUM (FOR BOTH HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1116)
 1116 FORMAT('FRAME LINES) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1117)
 1117 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1119 CONTINUE
      GOTO9000
C
 1120 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GX1MAX=A1
      GX2MAX=A1
      IX1MAX='FIXE'
      IX2MAX='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1129
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1125)
 1125 FORMAT('THE X AXIS MAXIMUM (FOR BOTH HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1126)GX1MAX
 1126 FORMAT('FRAME LINES) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1129 CONTINUE
      GOTO9000
C
 1199 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  BOTTOM HORIZONTAL AXIS MAXIMUM ARE TO BE FIXED  **
C               *****************************************************
C
      IF(ICOM.EQ.'X1MA')GOTO1200
      GOTO1299
C
 1200 CONTINUE
      IF(NUMARG.LE.0)GOTO1210
      IF(IARGT(1).EQ.'NUMB')GOTO1220
      GOTO1210
C
 1210 CONTINUE
      IFOUND='YES'
      GX1MAX=CPUMAX
      IX1MAX='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1219
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1215)
 1215 FORMAT('THE X AXIS MAXIMUM (FOR THE BOTTOM HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1216)
 1216 FORMAT('FRAME LINE) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1217)
 1217 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1219 CONTINUE
      GOTO9000
C
 1220 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GX1MAX=A1
      IX1MAX='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1229
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1225)
 1225 FORMAT('THE X AXIS MAXIMUM (FOR THE BOTTOM HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1226)GX1MAX
 1226 FORMAT('FRAME LINE) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1229 CONTINUE
      GOTO9000
C
 1299 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  TOP    HORIZONTAL AXIS MAXIMUM ARE TO BE FIXED  **
C               *****************************************************
C
      IF(ICOM.EQ.'X2MA')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(NUMARG.LE.0)GOTO1310
      IF(IARGT(1).EQ.'NUMB')GOTO1320
      GOTO1310
C
 1310 CONTINUE
      IFOUND='YES'
      GX2MAX=CPUMAX
      IX2MAX='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1315)
 1315 FORMAT('THE X AXIS MAXIMUM (FOR THE TOP    HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1316)
 1316 FORMAT('FRAME LINE) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1317)
 1317 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      GOTO9000
C
 1320 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GX2MAX=A1
      IX2MAX='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1329
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1325)
 1325 FORMAT('THE X AXIS MAXIMUM (FOR THE TOP    HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1326)GX2MAX
 1326 FORMAT('FRAME LINE) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1329 CONTINUE
      GOTO9000
C
 1399 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN                           **
C               **  BOTH VERTICAL   AXIS MAXIMUM ARE TO BE FIXED    **
C               *****************************************************
C
      IF(ICOM.EQ.'YMAX')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(NUMARG.LE.0)GOTO1410
      IF(IARGT(1).EQ.'NUMB')GOTO1420
      GOTO1410
C
 1410 CONTINUE
      IFOUND='YES'
      GY1MAX=CPUMAX
      GY2MAX=CPUMAX
      IY1MAX='FLOA'
      IY2MAX='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1419
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1415)
 1415 FORMAT('THE Y AXIS MAXIMUM (FOR BOTH VERTICAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1416)
 1416 FORMAT('FRAME LINES) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1417)
 1417 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1419 CONTINUE
      GOTO9000
C
 1420 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GY1MAX=A1
      GY2MAX=A1
      IY1MAX='FIXE'
      IY2MAX='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1429
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1425)
 1425 FORMAT('THE Y AXIS MAXIMUM (FOR BOTH VERTICAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1426)GY1MAX
 1426 FORMAT('FRAME LINES) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1429 CONTINUE
      GOTO9000
C
 1499 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  LEFT   VERTICAL   AXIS MAXIMUM ARE TO BE FIXED  **
C               *****************************************************
C
      IF(ICOM.EQ.'Y1MA')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(NUMARG.LE.0)GOTO1510
      IF(IARGT(1).EQ.'NUMB')GOTO1520
      GOTO1510
C
 1510 CONTINUE
      IFOUND='YES'
      GY1MAX=CPUMAX
      IY1MAX='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1519
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1515)
 1515 FORMAT('THE Y AXIS MAXIMUM (FOR THE LEFT   VERTICAL  ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1516)
 1516 FORMAT('FRAME LINE) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1517)
 1517 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1519 CONTINUE
      GOTO9000
C
 1520 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GY1MAX=A1
      IY1MAX='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1529
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1525)
 1525 FORMAT('THE Y AXIS MAXIMUM (FOR THE LEFT   VERTICAL  ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1526)GY1MAX
 1526 FORMAT('FRAME LINE) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1529 CONTINUE
      GOTO9000
C
 1599 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  RIGHT  VERTICAL   AXIS MAXIMUM ARE TO BE FIXED  **
C               *****************************************************
C
      IF(ICOM.EQ.'Y2MA')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(NUMARG.LE.0)GOTO1610
      IF(IARGT(1).EQ.'NUMB')GOTO1620
      GOTO1610
C
 1610 CONTINUE
      IFOUND='YES'
      GY2MAX=CPUMAX
      IY2MAX='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1619
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1615)
 1615 FORMAT('THE Y AXIS MAXIMUM (FOR THE RIGHT  VERTICAL  ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1616)
 1616 FORMAT('FRAME LINE) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1617)
 1617 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1619 CONTINUE
      GOTO9000
C
 1620 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GY2MAX=A1
      IY2MAX='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1629
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1625)
 1625 FORMAT('THE Y AXIS MAXIMUM (FOR THE RIGHT  VERTICAL  ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1626)GY2MAX
 1626 FORMAT('FRAME LINE) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1629 CONTINUE
      GOTO9000
C
 1699 CONTINUE
C
C               ******************************************
C               **  TREAT THE CASE WHEN                 **
C               **  BOTH AXIS MAXIMUM ARE TO BE FIXED    **
C               ******************************************
C
C
      IF(ICOM.EQ.'XYMA')GOTO1700
      IF(ICOM.EQ.'YXMA')GOTO1700
      IF(ICOM.EQ.'MAXI')GOTO1700
      IF(ICOM.EQ.'MAX ')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(NUMARG.LE.0)GOTO1710
      IF(IARGT(1).EQ.'NUMB')GOTO1720
      GOTO1710
C
 1710 CONTINUE
      IFOUND='YES'
      GX1MAX=CPUMAX
      GY1MAX=CPUMAX
      GX2MAX=CPUMAX
      GY2MAX=CPUMAX
      IX1MAX='FLOA'
      IY1MAX='FLOA'
      IX2MAX='FLOA'
      IY2MAX='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1719
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1715)
 1715 FORMAT('THE X AXIS MAXIMUM (FOR ALL 4')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1716)
 1716 FORMAT('FRAME LINES) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1717)
 1717 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1719 CONTINUE
      GOTO9000
C
 1720 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GX1MAX=A1
      GY1MAX=A1
      GX2MAX=A1
      GY2MAX=A1
      IX1MAX='FIXE'
      IY1MAX='FIXE'
      IX2MAX='FIXE'
      IY2MAX='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1729
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1725)
 1725 FORMAT('THE AXIS MAXIMUM (FOR ALL 4')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1726)GX1MAX
 1726 FORMAT('FRAME LINES) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1729 CONTINUE
      GOTO9000
C
 1799 CONTINUE
      GOTO9000
C
C               ********************************************
C               **  STEP 81--                             **
C               **  TREAT THE    ?    CASE--              **
C               **  DUMP OUT CURRENT AND DEFAULT VALUES.  **
C               ********************************************
C
 8100 CONTINUE
      IFOUND='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8111)
 8111 FORMAT('THE CURRENT AXIS MAXIMA ARE ')
      CALL DPWRST('XXX','BUG ')
      IF(IX1MAX.NE.'FLOA')WRITE(ICOUT,8112)GX1MAX
 8112 FORMAT('            --X1 (BOTTOM HORIZONTAL) = ',E15.7)
      IF(IX1MAX.NE.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IX1MAX.EQ.'FLOA')WRITE(ICOUT,8113)
 8113 FORMAT('            --X1 (BOTTOM HORIZONTAL) = FLOAT & NEAT')
      IF(IX1MAX.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IX2MAX.NE.'FLOA')WRITE(ICOUT,8114)GX2MAX
 8114 FORMAT('            --X2 (TOP    HORIZONTAL) = ',E15.7)
      IF(IX2MAX.NE.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IX2MAX.EQ.'FLOA')WRITE(ICOUT,8115)
 8115 FORMAT('            --X2 (TOP    HORIZONTAL) = FLOAT & NEAT')
      IF(IX2MAX.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IY1MAX.NE.'FLOA')WRITE(ICOUT,8116)GY1MAX
 8116 FORMAT('            --Y1 (LEFT   VERTICAL  ) = ',E15.7)
      IF(IY1MAX.NE.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IY1MAX.EQ.'FLOA')WRITE(ICOUT,8117)
 8117 FORMAT('            --Y1 (LEFT   VERTICAL  ) = FLOAT & NEAT')
      IF(IY1MAX.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IY2MAX.NE.'FLOA')WRITE(ICOUT,8118)GY2MAX
 8118 FORMAT('            --Y2 (RIGHT  VERTICAL  ) = ',E15.7)
      IF(IY2MAX.NE.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IY2MAX.EQ.'FLOA')WRITE(ICOUT,8119)
 8119 FORMAT('            --Y2 (RIGHT  VERTICAL  ) = FLOAT & NEAT')
      IF(IY2MAX.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8121)
 8121 FORMAT('THE DEFAULT AXIS MAXIMA ARE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8122)
 8122 FORMAT('            --X1 (BOTTOM HORIZONTAL) = FLOAT & NEAT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8123)
 8123 FORMAT('            --X2 (TOP    HORIZONTAL) = FLOAT & NEAT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8124)
 8124 FORMAT('            --Y1 (LEFT   VERTICAL  ) = FLOAT & NEAT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8125)
 8125 FORMAT('            --Y2 (BOTTOM VERTICAL  ) = FLOAT & NEAT')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPMB10(Y,N,
     1                  XTEMP,XTEMP2,XTEMP3,DTEMP1,MAXNXT,
     1                  SHAPSV,SCALSV,
     1                  SHAPML,SCALML,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE COMPUTES THE MAXIMUM LIKELIHOOD ESTIMATES
C              FOR THE BURR TYPE 10 DISTRIBUTION.
C              THE MAXIMUM LIKELIHOOD ESTIMATES ARE THE SOLUTION TO
C              THE FOLLOWING SIMULTANEOUS NONLINEAR EQUATIONS:
C              EQUATIONS.
C
C              (N/R) + SUM[i=1 to N][LN(1 - EXP(-(S*X(i))**2) = 0
C
C              C(2*N/S) - 2*S*SUM[i=1 to n][X(i)**2 +
C              2*S*(R-1)*SUM[i=1 tp n][X(i)^2*EXP(-(S*X(i))**2)/
C              1 - EXP(-(S*X(i))**2)) = 0
C
C              WITH R AND S DENOTING THE SHAPE PARAMETER R AND
C              SCALE PARAMETER S RESPECTIVELY.
C
C     EXAMPLE--BURR TYPE 10 MAXIMUM LIKELIHOOD Y
C     REFERENCES--JOHNSON, KOTZ, AND BALAKRISHNAN, "CONTINUOUS
C                 UNIVARIATE DISTRIBUTIONS--VOLUME I", SECOND EDITION,
C                 JOHN WILEY, 1994, PP. 53-54.
C               --LUC DEVROYE, "NON-UNIFORM RANDOM VARIATE
C                 GENERATION", 1986, SPRINGER-VERLANG, PP. 476-477.
C                 (NOTE: THERE IS A TYPO IN THE DEVROYE CDF EQUATION,
C                 CORRECT FORM TAKEN FROM JOHNSON AND KOTZ).
C               --KUNDU AND RAQAB, "GENERALIZED RAYLEIGH DISTRIBUTION:
C                 METHODS OF ESTIMATION", COMPUTATIONAL STATISTICS
C                 AND DATA ANALYSIS, 49, PP. 187-200.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBUG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/10
C     ORIGINAL VERSION--OCTOBER   2007.
C     UPDATED         --FEBRUARY  2010. EXTRACT POINT ESTIMATES TO
C                                       B10ML1 TO MAKE IT CALLABLE
C                                       FROM MULTIPLE ROUTINES
C     UPDATED         --FEBRUARY  2010. PRINT TABLES WITH DPDTA1
C     UPDATED         --APRIL     2011. ADD STANDARD ERRORS,
C                                       CONFIDENCE LIMITS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 ILIKFL
      CHARACTER*4 ICASPL
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION XTEMP(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION QP(1)
      DOUBLE PRECISION DTEMP1(*)
C
      DOUBLE PRECISION DALPH
      DOUBLE PRECISION DLAMB
      DOUBLE PRECISION DI11
      DOUBLE PRECISION DI12
      DOUBLE PRECISION DI22
      DOUBLE PRECISION DTERM1
      DOUBLE PRECISION DTERM2
      DOUBLE PRECISION DTERM3
      DOUBLE PRECISION DTERM4
      DOUBLE PRECISION DTERM5
      DOUBLE PRECISION DALPSE
      DOUBLE PRECISION DLAMSE
      DOUBLE PRECISION DPSI
      DOUBLE PRECISION DPSIAL
      DOUBLE PRECISION DPSIA2
      DOUBLE PRECISION DPSI1
      DOUBLE PRECISION DPSI2
      DOUBLE PRECISION DTRIAL
      DOUBLE PRECISION DTRI2
      DOUBLE PRECISION DANS(10)
C
      EXTERNAL DPSI
      EXTERNAL TRIGAM
C
      PARAMETER (NUMALP=6)
      DIMENSION ALPHA(NUMALP)
      DIMENSION ALOWSC(NUMALP)
      DIMENSION AUPPSC(NUMALP)
      DIMENSION ALOWGA(NUMALP)
      DIMENSION AUPPGA(NUMALP)
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=30)
      PARAMETER(NUMCLI=3)
      PARAMETER(MAXLIN=2)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*40 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      DATA ALPHA /0.50, 0.25, 0.10, 0.05, 0.01, 0.001/
C
      ISUBN1='DPMB'
      ISUBN2='10  '
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MB10')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMB10--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,N
   52   FORMAT('IBUGA3,ISUBRO,N = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,MIN(N,100)
          WRITE(ICOUT,57)I,Y(I)
   57     FORMAT('I,Y(I) = ',I8,G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 21--                             **
C               **  CARRY OUT CALCULATIONS                **
C               **  FOR BURR TYPE 10 MLE ESTIMATION       **
C               ********************************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MB10')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NMIN=3
      NPERC=0
      CALL CKDIST(Y,N,NMIN,QP,NPERC,ISUBRO,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      CALL B10ML1(Y,N,MAXNXT,
     1            XTEMP,XTEMP2,XTEMP3,DTEMP1,
     1            XMEAN,XSD,XVAR,XMIN,XMAX,
     1            SCALSV,SHAPSV,SCALML,SHAPML,
     1            ISUBRO,IBUGA3,IERROR)
C
      ICASPL='BU10'
      ALOC=0.0
      CALL B10LI1(Y,N,ICASPL,ALOC,SCALML,SHAPML,
     1            ALIK,AIC,AICC,BIC,
     1            ISUBRO,IBUGA3,IERROR)
C
C     APRIL 2011: COMPUTE STANDARD ERRORS BASED ON FORMULAS IN
C                 KUNDU AND RAQAB ARTICLE.
C
C                 IN SOME CASES, I AM GETTING NEGATIVE VALUES FOR
C                 THE STANDARD ERRORS.  SO ONLY PRINT STANDARD
C                 ERRORS AND CONFIDENCE INTERVALS IF OBTAIN
C                 POSITIVE VALUES FOR BOTH.  EVEN WHEN BOTH
C                 ARE POSITIVE, THE STANDARD ERRORS DO NOT SEEM
C                 CREDIBLE.  SO FOR NOW, BYPASS THIS CODE.  LEAVE
C                 IN SO WE CAN RE-ACTIVATE IF WE FIND A CORRECTION
C                 FOR THE FORMULAS.
C
      IFLGSE=0
      GOTO199
C
      DALPH=DBLE(SHAPML)
      DLAMB=DBLE(1.0/SCALML)
      DPSIAL=DPSI(DALPH)
      DPSIA2=DPSI(DALPH+1.0D0)
      DPSI1=DPSI(1.0D0)
      DPSI2=DPSI(2.0D0)
C
      KODE=1
      NTEMP=1
      M=1
      NZ=0
      CALL DPSIFN(DALPH,NTEMP,KODE,M,DANS,NZ,IERR)
      DTRIAL=DANS(1)
      DTERM1=2.0D0
      CALL DPSIFN(DTERM1,NTEMP,KODE,M,DANS,NZ,IERR)
      DTRI2=DANS(1)
C
      DI11=-1.0D0/DALPH**2
C
      DTERM1=2.0D0/((DALPH-1.0D0)*DLAMB**2)
      DI12=DTERM1*(DPSIAL - DPSI1 - (DALPH-1.0D0)/DALPH)
C
      DTERM1=-2.0D0/DLAMB**2
      DTERM2=DTERM1*(DPSIA2 - DPSI1)
      DTERM3=(-2.0D0*DALPH/DLAMB**3)*(DPSI1 - DPSIAL)
      DTERM4=-2.0D0*(DALPH-1.0D0)/DLAMB**3
      DTERM5=(-4.0D0*DALPH/(DLAMB**3*(DALPH-2.0D0)))*
     1       ((DPSI2 - DPSIAL)**2 + DTRI2 - DTRIAL)
      DI22=DTERM1 + DTERM2 + DTERM3 + DTERM4 + DTERM5
C
      IFLGSE=1
      DALPSE=DBLE(CPUMIN)
      DLAMSE=DBLE(CPUMIN)
      DTERM1=DI22/(D11*DI22 - DI12**2)
      IF(DTERM1.GE.0.0D0)THEN
        DALPSE=DSQRT(DTERM1)
      ELSE
        IFLGSE=0
      ENDIF
      DTERM1=DI11/(DI11*DI22 - DI12**2)
      IF(DTERM1.GE.0.0D0)THEN
        DLAMSE=DSQRT(DTERM1)
      ELSE
        IFLGSE=0
      ENDIF
C
C     CONFIDENCE INTERVALS FOR PARAMETERS BASED ON NORMAL APPROXIMATION
C
  199 CONTINUE
C
      IF(IFLGSE.EQ.1)THEN
        DO110I=1,NUMALP
          ALP=ALPHA(I)
          P=1.0-(ALP/2.0)
          CALL NORPPF(P,PPF)
          ALOWSC(I)=SCALML - PPF*REAL(DLAMSE)
          AUPPSC(I)=SCALML + PPF*REAL(DLAMSE)
          ALOWGA(I)=SHAPML - PPF*REAL(DALPSE)
          AUPPGA(I)=SHAPML + PPF*REAL(DALPSE)
  110   CONTINUE
      ENDIF
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MB10')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)DALPH,DLAMB,DPSIAL,DPSIA2
  101   FORMAT('DALPH,DLAMB,DPSIAL,DPSIA2 =',4G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,102)DPSI1,DPSI2,DTRIAL,DTRI2
  102   FORMAT('DPSI1,DPSI2,DTRIAL,DTRI2 =',4G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,103)DI11,DI12,DI22,DALPSE,DLAMSE
  103   FORMAT('DI11,DI12,DI22,DALPSE,DLAMSE = ',5G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
C               ***********************************************
C               **   STEP 42--                               **
C               **   WRITE OUT EVERYTHING                    **
C               **   FOR BURR TYPE 10 MLE                    **
C               **   ESTIMATION                              **
C               ***********************************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MB10')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     PRINT SUMMARY STATISTICS TABLE
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Two-Parameter Burr Type 10 Parameter Estimation:'
      NCTITL=48
      ITITLZ='Full Sample Case'
      NCTITZ=16
      ITEXT(1)='Summary Statistics:'
      NCTEXT(1)=19
      AVALUE(1)=0.0
      IDIGIT(1)=0
      ITEXT(2)='Number of Observations:'
      NCTEXT(2)=23
      AVALUE(2)=REAL(N)
      IDIGIT(2)=0
      ITEXT(3)='Sample Mean:'
      NCTEXT(3)=12
      AVALUE(3)=XMEAN
      IDIGIT(3)=NUMDIG
      ITEXT(4)='Sample Standard Deviation:'
      NCTEXT(4)=26
      AVALUE(4)=XSD
      IDIGIT(4)=NUMDIG
      ITEXT(5)='Sample Minimum:'
      NCTEXT(5)=15
      AVALUE(5)=XMIN
      IDIGIT(5)=NUMDIG
      ITEXT(6)='Sample Maximum:'
      NCTEXT(6)=15
      AVALUE(6)=XMAX
      IDIGIT(6)=NUMDIG
      NUMROW=6
      NTOT(1:NUMROW)=15
      NTOT(2)=8
C
      IFRST=.TRUE.
      ILAST=.FALSE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,
     1            NCTEXT,AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      IFRST=.FALSE.
      ITITLE=' '
      NCTITL=0
C
      ITEXT(1)='Maximum Likelihood:'
      NCTEXT(1)=19
      AVALUE(1)=0.0
      IDIGIT(1)=-1
      ITEXT(2)='Estimate of Shape (R):'
      NCTEXT(2)=22
      AVALUE(2)=SHAPML
      IDIGIT(2)=NUMDIG
      ITEXT(3)='Estimate of Scale:'
      NCTEXT(3)=18
      AVALUE(3)=SCALML
      IDIGIT(3)=NUMDIG
      ICNT=3
C
      IF(IFLGSE.EQ.1)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Standard Error of Shape (R):'
        NCTEXT(ICNT)=28
        AVALUE(ICNT)=REAL(DALPSE)
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Standard Error of Scale:'
        NCTEXT(ICNT)=24
        AVALUE(ICNT)=REAL(DLAMSE)
        IDIGIT(ICNT)=NUMDIG
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Log-likelihood:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=ALIK
      IDIGIT(ICNT)=-7
      ICNT=ICNT+1
      ITEXT(ICNT)='AIC:'
      NCTEXT(ICNT)=4
      AVALUE(ICNT)=AIC
      IDIGIT(ICNT)=-7
      ICNT=ICNT+1
      ITEXT(ICNT)='AICc:'
      NCTEXT(ICNT)=5
      AVALUE(ICNT)=AICC
      IDIGIT(ICNT)=-7
      ICNT=ICNT+1
      ITEXT(ICNT)='BIC:'
      NCTEXT(ICNT)=4
      AVALUE(ICNT)=BIC
      IDIGIT(ICNT)=-7
C
      NUMROW=ICNT
      NTOT(1:NUMROW)=15
CCCCC DO2320I=1,NUMROW
CCCCC   NTOT(I)=15
C2320 CONTINUE
C
      IFRST=.FALSE.
      ILAST=.FALSE.
      ITITLZ=' '
      NCTITZ=0
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      IF(IFLGSE.EQ.1)THEN
        ILIKFL='OFF'
        CALL DPDTA8(ALOWSC,AUPPSC,ALOWSC,AUPPSC,
     1              ALOWGA,AUPPGA,ALOWGA,AUPPGA,ALPHA,NUMALP,
     1              ICAPSW,ICAPTY,NUMDIG,ILIKFL,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MB10')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMB10--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)N,IBUGA3,IERROR
 9012   FORMAT('N,IBUGA3,IERROR = ',I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9015)N
 9015   FORMAT('N = ',I8)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMBCO(IHARG,NUMARG,IDEMBC,MAXMAR,IMABCO,
     1                  IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE MARKER BORDER COLORS = THE COLORS
C              OF THE BORDER LINE AROUND THE MARKERS.
C              THESE ARE LOCATED IN THE VECTOR IMABCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEMBC
C                     --MAXMAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IMABCO (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEMBC
      CHARACTER*4 IMABCO
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IMABCO(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPMB'
      ISUBN2='CO  '
C
      NUMMAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPMBCO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXMAR,NUMMAR
   53 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEMBC
   55 FORMAT('IDEMBC = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IMABCO(1)
   70 FORMAT('IMABCO(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IMABCO(I)
   76 FORMAT('I,IMABCO(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      GOTO1150
C
 1120 CONTINUE
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1='    '
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(4)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      IF(IHARG(4).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(4).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMMAR=1
      IMABCO(1)=IDEMBC
      GOTO1270
C
 1220 CONTINUE
      NUMMAR=NUMARG-2
      IF(NUMMAR.GT.MAXMAR)NUMMAR=MAXMAR
      DO1225I=1,NUMMAR
      J=I+2
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2=IDEMBC
      IF(IHOLD1.EQ.'OFF')IHOLD2=IDEMBC
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEMBC
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEMBC
      IMABCO(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMMAR
      WRITE(ICOUT,1276)I,IMABCO(I)
 1276 FORMAT('THE COLOR OF MARKER BORDER ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMMAR=MAXMAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2=IDEMBC
      IF(IHOLD1.EQ.'OFF')IHOLD2=IDEMBC
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEMBC
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEMBC
      DO1315I=1,NUMMAR
      IMABCO(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IMABCO(I)
 1316 FORMAT('THE COLOR OF ALL MARKER BORDERS',
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPMBCO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXMAR,NUMMAR
 9013 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEMBC
 9015 FORMAT('IDEMBC = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IMABCO(1)
 9030 FORMAT('IMABCO(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IMABCO(I)
 9036 FORMAT('I,IMABCO(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPMBFW(Y,AL,N,
     1                  TEMP1,TEMP2,DTEMP1,MAXNXT,
     1                  SCALSV,SHAPSV,SCALML,SHAPML,
     1                  AIC,AICC,BIC,ALIKE,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE COMPUTES THE MAXIMUM LIKELIHOOD ESTIMATES
C              FOR THE 2-PARAMETER BRITTLE FIBER WEIBULL DISTRIBUTION
C              FOR THE FULL SAMPLE CASE.
C
C              NOTE THAT THIS INITIAL IMPLEMENTATION ONLY GENERATES
C              POINT ESTIMATES, NOT INTERVAL ESTIMATES.
C     EXAMPLE--BRITTLE FIBER WEIBULL MAXIMUM LIKELIHOOD Y
C     REFERENCES--STONER, EDIE, AND DURHAM (1994), "AN END-EFFECT MODEL
C                 FOR THE SINGLE-FILAMENT TENSILE TEST", JOURNAL OF
C                 OF MATERIALS SCIENCE, 29, PP. 6561-6574.
C               --NEWELL AND SAGENDORF (1999), "EXPERIMENTAL VERIFICATION
C                 OF THE END-EFFECT WEIBULL MODEL AS A PREDICTOR OF THE
C                 TENSILE STRENGTH OF KEVLAR-29 (POLY
C                 p-PHENYLENETEREPHTHALAMIDE) FIBRES AT DIFFERENCE GAUGE
C                 LENGTHS", HIGH PERFORMANCE POLYMERS, 11, PP. 297-305.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2010/11
C     ORIGINAL VERSION--NOVEMBER  2010.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICASPL
      CHARACTER*40 IDIST
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION AL(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DOUBLE PRECISION DTEMP1(*)
C
      DIMENSION QP(1)
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=50)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*40 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMB'
      ISUBN2='FW  '
      IERROR='NO'
C
      IDIST='2-PARAMETER BRITTLE FIBER WEIBULL'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MBFW')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMBFW--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,N,NUMV
   52   FORMAT('IBUGA3,ISUBRO,N,NUMV = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,MIN(N,100)
          WRITE(ICOUT,57)I,Y(I),AL(I)
   57     FORMAT('I,Y(I),AL(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MBFW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NMIN=3
      NPERC=0
      CALL CKDIST(Y,N,NMIN,QP,NPERC,ISUBRO,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C     STEP 1: OBTAIN POINT ESTIMATES AND STANDARD ERRORS
C
      ISTEPN='12'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MBFW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL BFWML1(Y,AL,N,MAXNXT,
     1            TEMP1,TEMP2,DTEMP1,
     1            XMEAN,XSD,XVAR,XMIN,XMAX,
     1            SCALSV,SHAPSV,SCALML,SHAPML,
     1            ISUBRO,IBUGA3,IERROR)
       IF(IERROR.EQ.'YES')GOTO9000
C
      ISTEPN='13'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MBFW')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
       ALIKE=CPUMIN
       AIC=CPUMIN
       AICC=CPUMIN
       BIC=CPUMIN
       MINMAX=1
       ALOC=0.0
       ICASPL='WEIB'
       CALL BFWLI1(Y,AL,N,ICASPL,MINMAX,ALOC,SCALML,SHAPML,
     1             ALIKE,AIC,AICC,BIC,
     1             ISUBRO,IBUGA3,IERROR)
C
C               ***********************************************
C               **   STEP 42--                              **
C               **   WRITE OUT EVERYTHING                   **
C               **   FOR 2-PARAMETER BRITTLE FIBER WEIBULL  **
C               **   MLE ESTIMATE                           **
C               **********************************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MBFW')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     PRINT SUMMARY STATISTICS TABLE
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Two-Parameter Brittle Fiber Weibull Parameter Estimation:'
      NCTITL=57
      ITITLZ='Full Sample Case'
      NCTITZ=16
C
      ICNT=1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Mean:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=XMEAN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Standard Deviation:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=XSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Minimum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMIN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Maximum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMAX
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Maximum Likelihood:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Scale:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=SCALML
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Shape (Gamma):'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=SHAPML
      IDIGIT(ICNT)=NUMDIG
C
      IF(ALIKE.NE.CPUMIN)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Log-likelihood:'
        NCTEXT(ICNT)=15
        AVALUE(ICNT)=ALIKE
        IDIGIT(ICNT)=-7
        ICNT=ICNT+1
        ITEXT(ICNT)='AIC:'
        NCTEXT(ICNT)=4
        AVALUE(ICNT)=AIC
        IDIGIT(ICNT)=-7
        ICNT=ICNT+1
        ITEXT(ICNT)='AICc:'
        NCTEXT(ICNT)=5
        AVALUE(ICNT)=AICC
        IDIGIT(ICNT)=-7
        ICNT=ICNT+1
        ITEXT(ICNT)='BIC:'
        NCTEXT(ICNT)=4
        AVALUE(ICNT)=BIC
        IDIGIT(ICNT)=-7
      ENDIF
C
      NUMROW=ICNT
      DO2320I=1,NUMROW
        NTOT(I)=15
 2320 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MBFW')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMBFW--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)N,IBUGA3,IERROR
 9012   FORMAT('N,IBUGA3,IERROR = ',I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9014)SCALML,SHAPML
 9014   FORMAT('SCALML,SHAPML = ',2G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMBLI(IHARG,IHARG2,NUMARG,IDEMBL,MAXMAR,IMABLI,
     1                  IBUGP2,IFOUND,IERROR)
CCCCC AUGUST 1995.  ADD IHARG2 FOR DASH2, ETC
CCCCC SUBROUTINE DPMBLI(IHARG,NUMARG,IDEMBL,MAXMAR,IMABLI,
C
C     PURPOSE--DEFINE THE BORDER LINES = THE LINES TYPES
C              OF THE BORDER AROUND THE MARKERS.
C              THESE ARE LOCATED IN THE VECTOR IMABLI(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEMBL
C                     --MAXMAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IMABLI (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C     UPDATED         --AUGUST    1995.  DASH2 BUG
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      CHARACTER*4 IHARG2
      CHARACTER*4 IDEMBL
      CHARACTER*4 IMABLI
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
CCCCC AUGUST 1995.  ADD FOLLOWING LINE
      DIMENSION IHARG2(*)
      DIMENSION IMABLI(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPMB'
      ISUBN2='LI  '
C
      NUMMAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPMBLI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXMAR,NUMMAR
   53 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEMBL
   55 FORMAT('IDEMBL = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IMABLI(1)
   70 FORMAT('IMABLI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IMABLI(I)
   76 FORMAT('I,IMABLI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO9000
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      IF(NUMARG.EQ.5)GOTO1150
      GOTO1160
C
 1130 CONTINUE
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(5).EQ.'ALL')IHOLD1='    '
      IF(IHARG(5).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      IF(IHARG(5).EQ.'ALL')THEN
        IHOLD1=IHARG(6)
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'2')IHOLD1='DA2'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'3')IHOLD1='DA3'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'4')IHOLD1='DA4'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(6).EQ.'5')IHOLD1='DA5'
        GOTO1300
      ENDIF
      IF(IHARG(6).EQ.'ALL')THEN
        IHOLD1=IHARG(5)
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'2')IHOLD1='DA2'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'3')IHOLD1='DA3'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'4')IHOLD1='DA4'
        IF(IHOLD1.EQ.'DASH'.AND.IHARG2(5).EQ.'5')IHOLD1='DA5'
        GOTO1300
      ENDIF
      GOTO1200
C
 1160 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.3)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMMAR=1
      IMABLI(1)='    '
      GOTO1270
C
 1220 CONTINUE
      NUMMAR=NUMARG-3
      IF(NUMMAR.GT.MAXMAR)NUMMAR=MAXMAR
      DO1225I=1,NUMMAR
      J=I+3
      IHOLD1=IHARG(J)
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'2')IHOLD1='DA2'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'3')IHOLD1='DA3'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'4')IHOLD1='DA4'
      IF(IHOLD1.EQ.'DASH'.AND.IHARG2(J).EQ.'5')IHOLD1='DA5'
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEMBL
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEMBL
      IMABLI(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMMAR
      WRITE(ICOUT,1276)I,IMABLI(I)
 1276 FORMAT('THE LINE TYPE FOR MARKER BORDER ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMMAR=MAXMAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='SOLI'
      IF(IHOLD1.EQ.'OFF')IHOLD2='    '
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEMBL
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEMBL
      DO1315I=1,NUMMAR
      IMABLI(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IMABLI(I)
 1316 FORMAT('THE LINE TYPE FOR ALL MARKER BORDERS',
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPMBLI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXMAR,NUMMAR
 9013 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEMBL
 9015 FORMAT('IDEMBL = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IMABLI(1)
 9030 FORMAT('IMABLI(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IMABLI(I)
 9036 FORMAT('I,IMABLI(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPMBTH(IHARG,IARGT,ARG,NUMARG,PDEMBT,MAXMAR,PMABTH,
     1                  IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE MARKER (BORDER) LINE THICKNESSES = THE THICKNESSES
C              OF THE BORDER LINE AROUND THE MARKERS.
C              THESE ARE LOCATED IN THE VECTOR PMABTH(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --PDEMBT
C                     --MAXMAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--PMABTH (A FLOATING POINT VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
      DIMENSION PMABTH(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPMB'
      ISUBN2='TH  '
C
      NUMMAR=0
      IHOLD1='-999'
      HOLD1=-999.0
      HOLD2=-999.0
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPMBTH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXMAR,NUMMAR
   53 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,HOLD1,HOLD2
   54 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)PDEMBT
   55 FORMAT('PDEMBT = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66 FORMAT('IHARG(I),IARGT(I),ARG(I) = ',A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)PMABTH(1)
   70 FORMAT('PMABTH(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,PMABTH(I)
   76 FORMAT('I,PMABTH(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      GOTO1150
C
 1120 CONTINUE
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1='    '
      IF(IHARG(3).EQ.'ALL')HOLD1=PDEMBT
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(4)
      IF(IHARG(3).EQ.'ALL')HOLD1=ARG(4)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      IF(IHARG(4).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(4).EQ.'ALL')HOLD1=ARG(3)
      IF(IHARG(4).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE     SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMMAR=1
      PMABTH(1)=PDEMBT
      GOTO1270
C
 1220 CONTINUE
      NUMMAR=NUMARG-2
      IF(NUMMAR.GT.MAXMAR)NUMMAR=MAXMAR
      DO1225I=1,NUMMAR
      J=I+2
      IHOLD1=IHARG(J)
      HOLD1=ARG(J)
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEMBT
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEMBT
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEMBT
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEMBT
      PMABTH(I)=HOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMMAR
      WRITE(ICOUT,1276)I,PMABTH(I)
 1276 FORMAT('THE THICKNESS OF MARKER BORDER ',I6,
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMMAR=MAXMAR
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEMBT
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEMBT
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEMBT
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEMBT
      DO1315I=1,NUMMAR
      PMABTH(I)=HOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)PMABTH(I)
 1316 FORMAT('THE THICKNESS OF ALL MARKER BORDERS',
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPMBTH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXMAR,NUMMAR
 9013 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,HOLD1,HOLD2
 9014 FORMAT('IHOLD1,HOLD1,HOLD2 = ',A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)PDEMBT
 9015 FORMAT('PDEMBT = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9030)PMABTH(1)
 9030 FORMAT('PMABTH(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,PMABTH(I)
 9036 FORMAT('I,PMABTH(I) = ',I8,2X,E15.7)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPMCNE(MAXNXT,ICASAN,ICAPSW,IFORSW,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--COMPUTE MCNEMAR TEST.
C     EXAMPLE--MCNEMAR TEST Y1 Y2
C            --MCNEMAR TEST N11 N21 N12 N22
C     REFERENCE--CONOVER (1999), "PRACTICAL NONPARAMETRIC
C                STATISTICS", THIRD EDITION, WILEY, PP. 166-169.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/3
C     ORIGINAL VERSION--MARCH     2007.
C     UPDATED         --JANUARY   2011. USE DPPARS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
C
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASEQ
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IHOST1
      CHARACTER*4 ISUBN0
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
C
      PARAMETER (MAXSPN=20)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C-----COMMON----------------------------------------------------------
C
      PARAMETER(MAXLEV=1000)
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      REAL TEMP1(MAXOBV)
      REAL TEMP2(MAXOBV)
      REAL TEMP3(MAXOBV)
      REAL XIDTEM(MAXOBV)
      REAL XIDTE2(MAXOBV)
      REAL XMAT(MAXLEV,MAXLEV)
C
      EQUIVALENCE (GARBAG(IGARB1),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB2),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB3),TEMP3(1))
      EQUIVALENCE (GARBAG(IGARB4),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB5),XIDTE2(1))
      EQUIVALENCE (GARBAG(IGARB6),XMAT(1,1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMC'
      ISUBN2='NE  '
      IFOUND='NO'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      N11=(-999)
      N21=(-999)
      N12=(-999)
      N22=(-999)
C
      NS1=(-999)
      NS2=(-999)
      NS3=(-999)
      NS4=(-999)
C
      ICASE='PARA'
      MINN2=2
C
      IFOUND='YES'
      ICASEQ='UNKN'
C
C               ***************************************************
C               **  TREAT THE MCNEMAR TEST CASE                  **
C               ***************************************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCNE')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMCNE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ICASAN
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ICASAN = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)MAXNXT,NUMARG
   55   FORMAT('MAXNXT,NUMARG = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO59I=1,NUMARG
          WRITE(ICOUT,57)I,IHARG(I),IHARG2(I),ARG(I)
   57     FORMAT('I,IHARG(I),IHARG2(I),ARG(I) = ',I5,A4,A4,G15.7)
   59   CONTINUE
      ENDIF
C
C               *********************************
C               **  STEP 4--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='4'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCNE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='MCNEMAR TEST'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=0
      IFLAGM=9
      IFLAGP=9
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=4
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCNE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),PVAR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),PVAR(I) = ',I8,2X,A4,A4,2X,3I8,G15.7)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ***********************************
C               **  STEP 22--                    **
C               **  CHECK FOR PROPER VALUES FOR  **
C               **  INPUT PARAMETERS             **
C               ***********************************
C
      IF(IVARTY(1).EQ.'PARA' .OR. IVARTY(1).EQ.'NUMB')THEN
        N11=INT(PVAR(1)+0.5)
        N21=INT(PVAR(2)+0.5)
        N12=INT(PVAR(3)+0.5)
        N22=INT(PVAR(4)+0.5)
        AN11=REAL(N11)
        AN21=REAL(N21)
        AN12=REAL(N12)
        AN22=REAL(N22)
        ICASE='PARA'
C
        ISTEPN='22'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCNE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(N11.LT.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
 2201     FORMAT('***** ERROR FROM MCNEMAR TEST--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2203)
 2203     FORMAT('      THE VALUE OF THE FIRST PARAMETER (N11 = THE ',
     1           'NUMBER OF SUCCESSES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2204)
 2204     FORMAT('      FOR THE FIRST VARIABLE MUST BE NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2205)N11
 2205     FORMAT('      N11 = ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ELSEIF(N21.LT.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2303)
 2303     FORMAT('      THE VALUE OF THE SECOND PARAMETER (N21 = THE ',
     1           'NUMBER OF FAILURES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2304)
 2304     FORMAT('      FOR THE FIRST VARIABLE MUST BE NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2305)N21
 2305     FORMAT('      N21 = ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ELSEIF(N12.LT.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2403)
 2403     FORMAT('      THE VALUE OF THE THIRD PARAMETER (N12 = THE ',
     1           'NUMBER OF SUCCESSES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2404)
 2404     FORMAT('      FOR THE SECOND VARIABLE MUST BE NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2405)N12
 2405     FORMAT('      N12 = ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ELSEIF(N22.LT.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2503)
 2503     FORMAT('      THE VALUE OF THE FOURTH PARAMETER (N22 = THE ',
     1           'NUMBER OF FAILURES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2504)
 2504     FORMAT('      FOR THE SECOND VARIABLE MUST BE NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2505)N22
 2505     FORMAT('      N22 = ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
      ELSEIF(IVARTY(1).EQ.'VARI')THEN
C
        ICASE='VARI'
        ICOL=1
        IF(NUMVAR.GT.2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2603)
 2603     FORMAT('      MORE THAN TWO VARIABLES GIVEN.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2605)NUMVAR
 2605     FORMAT('      THE NUMBER OF VARIABLES GIVEN  = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y,X,X,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NS1=NLOCAL
        NS2=NLOCA2
C
      ELSEIF(IVARTY(1).EQ.'MATR')THEN
        ICASE='MATR'
        ICOL=1
        NUMVAR=1
        CALL DPPAR6(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              XMAT,MAXLEV,NROW,NCOL,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        ICASE='TABL'
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
C               ***********************************
C               **  STEP 61--                    **
C               **  COMPUTE THE MCNEMAR    TEST  **
C               ***********************************
C
      ISTEPN='61'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCNE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MCNE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6111)
 6111   FORMAT('***** FROM DPMCNE--READY TO COMPUTE TEST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6112)AN11,AN21,AN12,AN22
 6112   FORMAT('AN11,AN21,AN12,AN22 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      CALL DPMCN2(Y,NS1,X,NS2,
     1            AN11,AN21,AN12,AN22,
     1            XMAT,MAXLEV,NROW,NCOL,
     1            XIDTEM,
     1            ICASE,ICAPSW,ICAPTY,IFORSW,
     1            STATVA,CDF,
     1            ISUBRO,IBUGA3,IERROR)
C
C               ***************************************
C               **  STEP 62--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='62'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCNE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISUBN0='MCNE'
C
      IH='STAT'
      IH2='VAL '
      VALUE0=STATVA
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='STAT'
      IH2='CDF '
      VALUE0=CDF
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCNE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMCNE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA2,IBUGA3
 9012   FORMAT('IBUGA2,IBUGA3 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IERROR
 9016   FORMAT('IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMCN2(Y1,N1,Y2,N2,
     1                  AN11,AN21,AN12,AN22,
     1                  XMAT,MAXLEV,NROW,NCOL,
     1                  XIDTEM,
     1                  ICASE,ICAPSW,ICAPTY,IFORSW,
     1                  STATVA,CDF,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--PERFORM A MCNEMAR TEST FOR INDEPENDENCE.
C              THE INPUT CAN EITHER BE ENTERED AS TWO VARIABLES
C              CONTAINING 1's (FOR SUCCESS) AND 0's (FOR FAILURES)
C              OR AS FOUR PARAMETERS:
C                 N11 = NUMBER OF SUCCESSES FOR VARIABLE 1 = A
C                 N21 = NUMBER OF FAILURES  FOR VARIABLE 1 = C
C                 N12 = NUMBER OF SUCCESSES FOR VARIABLE 2 = B
C                 N22 = NUMBER OF SUCCESSES FOR VARIABLE 2 = D
C
C              WE THEN USE THE TEST STATISTIC:
C
C                 T = (B-C)**2/(B+C)    B+C >= 20
C                 
C                 T = B                 B+C < 20
C
C              A CONTINUITY CORRECTION CAN BE APPLIED:
C
C                 T = {|B-C| - 1}**2/(B+C)    B+C >= 20
C         
C     EXAMPLE--MCNEMAR TEST Y1 Y2
C              SAMPLE 1 IS IN INPUT VECTOR Y1 (WITH N1 OBSERVATIONS).
C              SAMPLE 2 IS IN INPUT VECTOR Y2 (WITH N2 OBSERVATIONS).
C            --MCNEMAR TEST N11 N21 N12 N22
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGYU LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/3
C     ORIGINAL VERSION--MARCH     2007.
C     UPDATED         --JANUARY   2011. USE DPAUFI TO OPEN/CLOSE
C                                       AUXILLARY FILES
C     UPDATED         --JANUARY   2011. USE DPDTA1, DPDT5B TO PRINT
C                                       TABLES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
      CHARACTER*4 ICASE
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
C
      CHARACTER*4 IWRITE
C
      CHARACTER*6 ICONC1
      CHARACTER*6 ICONC2
      CHARACTER*6 ICONC3
      CHARACTER*6 ICONC4
      CHARACTER*6 ICONC5
      CHARACTER*6 ICONC6
C
      CHARACTER*6 KCONC1
      CHARACTER*6 KCONC2
      CHARACTER*6 KCONC3
      CHARACTER*6 KCONC4
      CHARACTER*6 KCONC5
      CHARACTER*6 KCONC6
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION XIDTEM(*)
      DIMENSION XMAT(MAXLEV,MAXLEV)
C
C
      PARAMETER (NUMALP=5)
CCCCC DIMENSION SIGVAL(NUMALP)
C
      DOUBLE PRECISION DCDF
      DOUBLE PRECISION DPPF
C
      PARAMETER(NUMCLI=6)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=NUMALP)
      PARAMETER (MAXRO2=30)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXRO2)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXRO2)
      INTEGER      NCTEXT(MAXRO2)
      INTEGER      IDIGIT(MAXRO2)
      INTEGER      IDIGI2(MAXROW,NUMCLI)
      INTEGER      NTOT(MAXRO2)
      INTEGER      ROWSEP(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      NCOLSP(MAXLIN,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
CCCCC DATA SIGVAL /0.50, 0.80, 0.90, 0.95, 0.99, 0.999/
CCCCC DATA SIGVAL /0.50, 0.80, 0.90, 0.95, 0.99/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMC'
      ISUBN2='N2  '
      IERROR='NO'
      IWRITE='NO'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MCN2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMCN2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASE,IBINCC
   52   FORMAT('IBUGA3,ISUBRO,ICASE,IBINCC = ',4(A4,2X))
        CALL DPWRST('XXX','WRIT')
        IF(ICASE.EQ.'VARI')THEN
          WRITE(ICOUT,55)N1
   55     FORMAT('N1 = ',I8)
          CALL DPWRST('XXX','WRIT')
          DO56I=1,N1
            WRITE(ICOUT,57)I,Y1(I)
   57       FORMAT('I,Y1(I) = ',I8,G15.7)
            CALL DPWRST('XXX','WRIT')
   56     CONTINUE
          WRITE(ICOUT,65)N2
   65     FORMAT('N2 = ',I8)
          CALL DPWRST('XXX','WRIT')
          DO66I=1,N2
            WRITE(ICOUT,67)I,Y2(I)
   67       FORMAT('I,Y2(I) = ',I8,G15.7)
            CALL DPWRST('XXX','WRIT')
   66     CONTINUE
        ELSE
          WRITE(ICOUT,75)AN11,AN21,AN12,AN22
   75     FORMAT('AN11,AN21,AN12,AN22 = ',4G15.7)
          CALL DPWRST('XXX','WRIT')
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 0--                              **
C               **  BRANCH TO APPROPRIATE CASE (PARAMETER **
C               **  OR VARIABLE)                          **
C               ********************************************
C
      ISTEPN='00'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MCN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASE.EQ.'PARA')GOTO1000
      IF(ICASE.EQ.'VARI')GOTO2000
      IF(ICASE.EQ.'TABL')GOTO3000
C
C               ********************************************
C               **  STEP 11--                             **
C               **  PARAMETER CASE                        **
C               ********************************************
C
 1000 CONTINUE
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MCN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ********************************************
C               **  STEP 12--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      N11=INT(AN11+0.5)
      N21=INT(AN21+0.5)
      N12=INT(AN12+0.5)
      N22=INT(AN22+0.5)
C
      ISTEPN='12'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MCN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N11.LT.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1201)
 1201   FORMAT('***** ERROR FROM THE MCNEMAR TEST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1203)
 1203   FORMAT('      THE VALUE OF THE FIRST PARAMETER (N11 = THE ',
     1         'NUMBER OF SUCCESSES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1204)
 1204   FORMAT('      FOR THE FIRST VARIABLE MUST BE NON-NEGATIVE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1205)N11
 1205   FORMAT('      N11 = ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N21.LT.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1201)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1303)
 1303   FORMAT('      THE VALUE OF THE SECOND PARAMETER (N21 = THE ',
     1         'NUMBER OF FAILURES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1304)
 1304   FORMAT('      FOR THE FIRST VARIABLE MUST BE NON-NEGATIVE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1305)N21
 1305   FORMAT('      N21 = ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N12.LT.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1201)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1403)
 1403   FORMAT('      THE VALUE OF THE THIRD PARAMETER (N12 = THE ',
     1         'NUMBER OF SUCCESSES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1404)
 1404   FORMAT('      FOR THE SECOND VARIABLE MUST BE NON-NEGATIVE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1405)N12
 1405   FORMAT('      N12 = ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N22.LT.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1201)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1503)
 1503   FORMAT('      THE VALUE OF THE FOURTH PARAMETER (N22 = THE ',
     1         'NUMBER OF FAILURES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1504)
 1504   FORMAT('      FOR THE SECOND VARIABLE MUST BE NON-NEGATIVE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1505)N22
 1505   FORMAT('      N22 = ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ********************************************
C               **  STEP 12--                             **
C               **  COMPUTE THE LOG ODDS RATIO TEST       **
C               ********************************************
C
C
      GOTO4000
C
C               ********************************************
C               **  STEP 20--                             **
C               **  VARIABLE  CASE                        **
C               ********************************************
C
 2000 CONTINUE
C
C               ********************************************
C               **  STEP 21--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MCN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N1.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1201)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2101)
 2101   FORMAT('      THE NUMBER OF OBSERVATIONS FOR VARIABLE 1 ',
     1         'IS NON-POSITIVE')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2103)N1
 2103   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N2.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1201)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2106)
 2106   FORMAT('      THE NUMBER OF OBSERVATIONS FOR VARIABLE 2 ',
     1         'IS NON-POSITIVE')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2103)N2
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ********************************************
C               **  STEP 22--                             **
C               **  CHECK THAT THE VARIABLES HAVE AT MOST **
C               **  TWO DISTINCT VALUES (1 INDICATES A    **
C               **  SUCCESS, 0 INDICATES A FAILURE).      **
C               ********************************************
C
      ISTEPN='22'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MCN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DISTIN(Y1,N1,IWRITE,XIDTEM,NDIST,IBUGA3,IERROR)
      IF(NDIST.EQ.1)THEN
        AVAL=XIDTEM(1)
        IF(ABS(AVAL).LE.0.5)THEN
          AVAL=0.0
        ELSE
          AVAL=1.0
        ENDIF
        DO2202I=1,N1
          Y1(I)=1.0
 2202   CONTINUE
      ELSEIF(NDIST.EQ.2)THEN
        IF(XIDTEM(1).EQ.1.0 .OR. XIDTEM(2).EQ.1.0)THEN
          DO2203I=1,N1
            IF(Y1(I).NE.1.0)Y1(I)=0.0
 2203     CONTINUE
        ELSE
          ATEMP1=MIN(XIDTEM(1),XIDTEM(2))
          ATEMP2=MAX(XIDTEM(1),XIDTEM(2))
          DO2208I=1,N1
            IF(Y1(I).EQ.ATEMP1)Y1(I)=0.0
            IF(Y1(I).EQ.ATEMP2)Y1(I)=1.0
 2208     CONTINUE
        ENDIF
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1201)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2211)
 2211   FORMAT('      RESPONSE VARIABLE ONE SHOULD CONTAIN AT MOST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2213)
 2213   FORMAT('      TWO DISTINCT VALUES.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2215)NDIST
 2215   FORMAT('      ',I8,' DISTINCT VALUES FOUND.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      CALL SUMDP(Y1,N1,IWRITE,XSUM,IBUGA3,IERROR)
      AN11=XSUM
      N11=INT(AN11+0.5)
      N21=N1-N11
      AN21=REAL(N21)
C
      CALL DISTIN(Y2,N2,IWRITE,XIDTEM,NDIST,IBUGA3,IERROR)
      IF(NDIST.EQ.1)THEN
        AVAL=XIDTEM(1)
        IF(ABS(AVAL).LE.0.5)THEN
          AVAL=0.0
        ELSE
          AVAL=1.0
        ENDIF
        DO2302I=1,N2
          Y2(I)=1.0
 2302   CONTINUE
      ELSEIF(NDIST.EQ.2)THEN
        IF(XIDTEM(1).EQ.1.0 .OR. XIDTEM(2).EQ.1.0)THEN
          DO2303I=1,N2
            IF(Y2(I).NE.1.0)Y2(I)=0.0
 2303     CONTINUE
        ELSE
          ATEMP1=MIN(XIDTEM(1),XIDTEM(2))
          ATEMP2=MAX(XIDTEM(1),XIDTEM(2))
          DO2308I=1,N2
            IF(Y2(I).EQ.ATEMP1)Y2(I)=0.0
            IF(Y2(I).EQ.ATEMP2)Y2(I)=1.0
 2308     CONTINUE
        ENDIF
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1201)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2311)
 2311   FORMAT('      RESPONSE VARIABLE TWO SHOULD CONTAIN AT MOST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2313)
 2313   FORMAT('      TWO DISTINCT VALUES.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2315)NDIST
 2315   FORMAT('      ',I8,' DISTINCT VALUES FOUND.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      CALL SUMDP(Y2,N2,IWRITE,XSUM,IBUGA3,IERROR)
      AN12=XSUM
      N12=INT(AN12+0.5)
      N22=N2-N12
      AN22=REAL(N22)
C
      GOTO4000
C
 3000 CONTINUE
C
C               ********************************************
C               **  STEP 31--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               **  ALL TABLE ENTRIES SHOULD BE           **
C               **  NON-NEGATIVE INTEGERS.  NEGATIVE      **
C               **  VALUES WILL BE FLAGGED AS ERRORS      **
C               **  WHILE NON-INTEGER VALUES WILL BE      **
C               **  ROUNDED TO NEAREST INTEGER.           **
C               **  SINCE WE ARE SCANNING TABLE, COMPUTE  **
C               **  ROW AND COLUMN TOTALS.                **
C               **  NOTE THAT FOR THIS COMMAND IS         **
C               **  COMPUTED ON A 2X2 CONTINGENCY TABLE.  **
C               **  THEREFORE:                            **
C               **  1) IF NUMBER OF COLUMNS NOT EQUAL     **
C               **     TWO, FLAG AN ERROR.                **
C               **  2) IF NUMBER OF ROWS EQUAL TWO, THEN  **
C               **     EXTRACT THE RELEVANT 4 VALUES AND  **
C               **     GO TO THE PARAMETER CASE.          **
C               **  3) IF NUMBER OF ROWS GREATER THAN     **
C               **     TWO, THEN NEED TO CROSS-TABULATE   **
C               **     (I.E., HAVE THE VARIABLE CASE).    **
C               ********************************************
C
      ISTEPN='31'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'ODR2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IERROR='NO'
C
      IF(NCOL.NE.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1201)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3101)
 3101   FORMAT('      THE NUMBER OF COLUMNS IN THE INPUT MATRIX')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3103)
 3103   FORMAT('      MUST BE EXACTLY TWO; SUCH WAS NOT THE CASE ',
     1         'HERE.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,3105)NCOL
 3105   FORMAT('      THE NUMBER OF COLUMNS = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NROW.EQ.2)THEN
        AN11=XMAT(1,1)
        AN21=XMAT(2,1)
        AN12=XMAT(1,2)
        AN22=XMAT(2,2)
        GOTO1000
      ELSE
        DO3120I=1,NROW
          Y1(NROW)=XMAT(I,1)
          Y2(NROW)=XMAT(I,2)
 3120   CONTINUE
        N1=NROW
        N2=NROW
        GOTO2000
      ENDIF
C
 4000 CONTINUE
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MCN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     COMPUTE THE MCNEMAR TEST.
C
      NR1=N11+N12
      NR2=N21+N22
      NC1=N11+N21
      NC2=N12+N22
      NTOTZZ=NR1+NR2
      ANR1=REAL(NR1)
      ANR2=REAL(NR2)
      ANC1=REAL(NC1)
      ANC2=REAL(NC2)
      AN=REAL(NTOTZZ)
C
      A=REAL(N11)
      B=REAL(N12)
      C=REAL(N21)
      D=REAL(N22)
C
      P11=A/ANC1
      P21=C/ANC1
      P12=B/ANC2
      P22=D/ANC2
C
      ICONC1='REJECT'
      ICONC2='REJECT'
      ICONC3='REJECT'
      ICONC4='REJECT'
      ICONC5='REJECT'
      ICONC6='REJECT'
      KCONC1='REJECT'
      KCONC2='REJECT'
      KCONC3='REJECT'
      KCONC4='REJECT'
      KCONC5='REJECT'
      KCONC6='REJECT'
C
      IF(B+C.LE.20.0)THEN
        STATVA=B
        STATV2=B
        P=0.5
        NTEMP=INT(B+C+0.5)
        CALL BINCDF(DBLE(STATVA),DBLE(P),NTEMP,DCDF)
        CDF2=REAL(DCDF)
C
        ALPHA=0.50
        ALPHAL=(1.0 - ALPHA)/2.0
        ALPHAU=1.0 - ALPHAL
        CALL BINPPF(DBLE(ALPHAL),DBLE(P),NTEMP,DPPF)
        CV1L=REAL(DPPF)
        CALL BINPPF(DBLE(ALPHAU),DBLE(P),NTEMP,DPPF)
        CV1U=REAL(DPPF)
        IF(CDF.GE.ALPHAL.AND.CDF.LE.ALPHAU)ICONC1='ACCEPT'
C
        ALPHA=0.80
        ALPHAL=(1.0 - ALPHA)/2.0
        ALPHAU=1.0 - ALPHAL
        CALL BINPPF(DBLE(ALPHAL),DBLE(P),NTEMP,DPPF)
        CV2L=REAL(DPPF)
        CALL BINPPF(DBLE(ALPHAU),DBLE(P),NTEMP,DPPF)
        CV2U=REAL(DPPF)
        IF(CDF.GE.ALPHAL.AND.CDF.LE.ALPHAU)ICONC2='ACCEPT'
C
        ALPHA=0.90
        ALPHAL=(1.0 - ALPHA)/2.0
        ALPHAU=1.0 - ALPHAL
        CALL BINPPF(DBLE(ALPHAL),DBLE(P),NTEMP,DPPF)
        CV3L=REAL(DPPF)
        CALL BINPPF(DBLE(ALPHAU),DBLE(P),NTEMP,DPPF)
        CV3U=REAL(DPPF)
        IF(CDF.GE.ALPHAL.AND.CDF.LE.ALPHAU)ICONC3='ACCEPT'
C
        ALPHA=0.95
        ALPHAL=(1.0 - ALPHA)/2.0
        ALPHAU=1.0 - ALPHAL
        CALL BINPPF(DBLE(ALPHAL),DBLE(P),NTEMP,DPPF)
        CV4L=REAL(DPPF)
        CALL BINPPF(DBLE(ALPHAU),DBLE(P),NTEMP,DPPF)
        CV4U=REAL(DPPF)
        IF(CDF.GE.ALPHAL.AND.CDF.LE.ALPHAU)ICONC4='ACCEPT'
C
        ALPHA=0.98
        ALPHAL=(1.0 - ALPHA)/2.0
        ALPHAU=1.0 - ALPHAL
        CALL BINPPF(DBLE(ALPHAL),DBLE(P),NTEMP,DPPF)
        CV5L=REAL(DPPF)
        CALL BINPPF(DBLE(ALPHAU),DBLE(P),NTEMP,DPPF)
        CV5U=REAL(DPPF)
        IF(CDF.GE.ALPHAL.AND.CDF.LE.ALPHAU)ICONC5='ACCEPT'
C
        ALPHA=0.99
        ALPHAL=(1.0 - ALPHA)/2.0
        ALPHAU=1.0 - ALPHAL
        CALL BINPPF(DBLE(ALPHAL),DBLE(P),NTEMP,DPPF)
        CV6L=REAL(DPPF)
        CALL BINPPF(DBLE(ALPHAU),DBLE(P),NTEMP,DPPF)
        CV6U=REAL(DPPF)
        IF(CDF.GE.ALPHAL.AND.CDF.LE.ALPHAU)ICONC6='ACCEPT'
C
      ELSE
        STATVA=(B-C)**2/(B+C)
        STATV2=(ABS(B-C) - 1.0)**2/(B+C)
        NU=1
        CALL CHSCDF(STATVA,NU,CDF)
        CALL CHSCDF(STATV2,NU,CDF2)
        ALPHA=0.50
        CALL CHSPPF(ALPHA,NU,CV1)
        ALPHA=0.80
        CALL CHSPPF(ALPHA,NU,CV2)
        ALPHA=0.90
        CALL CHSPPF(ALPHA,NU,CV3)
        ALPHA=0.95
        CALL CHSPPF(ALPHA,NU,CV4)
        ALPHA=0.99
        CALL CHSPPF(ALPHA,NU,CV5)
C
        IF(0.0.LE.CDF.AND.CDF.LE.0.500)ICONC1='ACCEPT'
        IF(0.0.LE.CDF.AND.CDF.LE.0.800)ICONC2='ACCEPT'
        IF(0.0.LE.CDF.AND.CDF.LE.0.900)ICONC3='ACCEPT'
        IF(0.0.LE.CDF.AND.CDF.LE.0.950)ICONC4='ACCEPT'
        IF(0.0.LE.CDF.AND.CDF.LE.0.990)ICONC5='ACCEPT'
C
        IF(0.0.LE.CDF2.AND.CDF2.LE.0.500)KCONC1='ACCEPT'
        IF(0.0.LE.CDF2.AND.CDF2.LE.0.800)KCONC2='ACCEPT'
        IF(0.0.LE.CDF2.AND.CDF2.LE.0.900)KCONC3='ACCEPT'
        IF(0.0.LE.CDF2.AND.CDF2.LE.0.950)KCONC4='ACCEPT'
        IF(0.0.LE.CDF2.AND.CDF2.LE.0.990)KCONC5='ACCEPT'
C
      ENDIF
C
      IWRITE='OFF'
C
C               ******************************
C               **   STEP 42--              **
C               **   WRITE OUT EVERYTHING   **
C               **   FOR ODDS RATIO   TEST  **
C               ******************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MCN2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     PRINT SUMMARY STATISTICS TABLE
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='McNemar Test for New Better Than Old'
      NCTITL=36
      ITITLZ='(2x2 Table)'
      NCTITZ=11
C
      ICNT=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='H0: New and Old are Equal'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Ha: New and Old are Not Equal'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO2310I=1,NUMROW
        NTOT(I)=15
 2310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,
     1            NCTEXT,AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITLE(1:13)='Summary Table'
      NCTITL=13
      ITITL9=' '
      NCTIT9=0
C
      NUMCOL=6
      NUMLIN=2
C
      ITITL2(1,1)=' '
      NCTIT2(1,1)=0
      NCOLSP(1,1)=1
      ITITL2(2,1)='Variable One'
      NCTIT2(2,1)=12
      NCOLSP(2,1)=1
      ITITL2(1,2)=' | '
      NCTIT2(1,2)=3
      NCOLSP(1,2)=1
      ITITL2(2,2)=' | '
      NCTIT2(2,2)=3
      NCOLSP(2,2)=1
C
      ITITL2(1,3)='Variable Two'
      NCTIT2(1,3)=12
      NCOLSP(1,3)=2
      ITITL2(2,3)='Successes'
      NCTIT2(2,3)=9
      NCOLSP(2,3)=1
      ITITL2(1,4)=' '
      NCTIT2(1,4)=0
      NCOLSP(1,4)=0
      ITITL2(2,4)='Failures'
      NCTIT2(2,4)=8
      NCOLSP(2,4)=1
C
      ITITL2(1,5)=' | '
      NCTIT2(1,5)=3
      NCOLSP(1,5)=1
      ITITL2(2,5)=' | '
      NCTIT2(2,5)=3
      NCOLSP(2,5)=1
C
      ITITL2(1,6)='Row'
      NCTIT2(1,6)=3
      NCOLSP(1,6)=1
      ITITL2(2,6)='Total'
      NCTIT2(2,6)=5
      NCOLSP(2,6)=1
C
      NMAX=0
      DO4210I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.2 .OR. I.EQ.5)NTOT(I)=3
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        IF(I.EQ.1 .OR. I.EQ.2 .OR. I.EQ.5)ITYPCO(I)='ALPH'
        DO4213J=1,MAXROW
          IDIGI2(J,I)=0
          IF(I.EQ.3 .OR. I.EQ.4)THEN
            IF(J.EQ.2 .OR. J.EQ.4)THEN
              IDIGI2(J,I)=NUMDIG
            ENDIF
          ENDIF
          IF(I.EQ.6)THEN
            IF(J.EQ.2 .OR. J.EQ.4)THEN
              IDIGI2(J,I)=-1
            ELSE
              IDIGI2(J,I)=0
            ENDIF
          ENDIF
 4213   CONTINUE
C
 4210 CONTINUE
C
      DO4289J=1,MAXROW
        IVALUE(J,1)=' '
        IVALUE(J,2)=' '
        IVALUE(J,3)=' '
        IVALUE(J,4)=' '
        IVALUE(J,5)=' '
        IVALUE(J,6)=' '
        NCVALU(J,1)=0
        NCVALU(J,2)=0
        NCVALU(J,3)=0
        NCVALU(J,4)=0
        NCVALU(J,5)=0
        NCVALU(J,6)=0
        AMAT(J,1)=0.0
        AMAT(J,2)=0.0
        AMAT(J,3)=0.0
        AMAT(J,4)=0.0
        AMAT(J,5)=0.0
        AMAT(J,6)=0.0
        ROWSEP(J)=0
 4289 CONTINUE
      AMAT(1,3)=REAL(N11)
      AMAT(1,4)=REAL(N12)
      AMAT(1,6)=REAL(NR1)
      AMAT(2,3)=P11
      AMAT(2,4)=P12
      AMAT(2,6)=CPUMIN
      AMAT(3,3)=REAL(N21)
      AMAT(3,4)=REAL(N22)
      AMAT(3,6)=REAL(NR2)
      AMAT(4,3)=P21
      AMAT(4,4)=P22
      AMAT(4,6)=CPUMIN
      AMAT(5,3)=REAL(NC1)
      AMAT(5,4)=REAL(NC2)
      AMAT(5,6)=REAL(NTOTZZ)
      IVALUE(1,1)='Successes'
      NCVALU(1,1)=9
      IVALUE(1,2)=' | '
      NCVALU(1,2)=3
      IVALUE(1,5)=' | '
      NCVALU(1,5)=3
      IVALUE(2,2)=' | '
      NCVALU(2,2)=3
      IVALUE(2,5)=' | '
      NCVALU(2,5)=3
      IVALUE(3,1)='Failures'
      NCVALU(3,1)=8
      IVALUE(3,2)=' | '
      NCVALU(3,2)=3
      IVALUE(3,5)=' | '
      NCVALU(3,5)=3
      IVALUE(4,2)=' | '
      NCVALU(4,2)=3
      IVALUE(4,5)=' | '
      NCVALU(4,5)=3
      IVALUE(5,1)='Column Total'
      NCVALU(5,1)=12
      IVALUE(5,2)=' | '
      NCVALU(5,2)=3
      IVALUE(5,5)=' | '
      NCVALU(5,5)=3
      ROWSEP(4)=1
C
      IWHTML(1)=150
      IWHTML(2)=25
      IWHTML(3)=150
      IWHTML(4)=150
      IWHTML(5)=25
      IWHTML(6)=150
      IINC=1800
      IINC2=200
      IWRTF(1)=IINC
      IWRTF(2)=IWRTF(1)+IINC2
      IWRTF(3)=IWRTF(2)+IINC
      IWRTF(4)=IWRTF(3)+IINC
      IWRTF(5)=IWRTF(4)+IINC2
      IWRTF(6)=IWRTF(5)+IINC
C
      ICNT=5
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
      CALL DPDT5B(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGI2,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            NCOLSP,ROWSEP,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=0
      IF(NTOTZZ.LT.20)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Small Sample Case (N < 20)'
        NCTEXT(ICNT)=26
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Critical Values Based on Binomial with'
        NCTEXT(ICNT)=38
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='P = 0.5 and N = '
        WRITE(ITEXT(ICNT)(17:18),'(I2)')N12+N21
        NCTEXT(ICNT)=18
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Value of Test Statistic:'
        NCTEXT(ICNT)=24
        AVALUE(ICNT)=STATVA
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='CDF of Test Statistic:'
        NCTEXT(ICNT)=22
        AVALUE(ICNT)=CDF
        IDIGIT(ICNT)=NUMDIG
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='Large Sample Case (N >= 20)'
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Critical Values Based on Chi-Square with'
        NCTEXT(ICNT)=40
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='One Degree of Freedom'
        NCTEXT(ICNT)=21
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Without Continuity Correction'
        NCTEXT(ICNT)=29
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Value of Test Statistic:'
        NCTEXT(ICNT)=24
        AVALUE(ICNT)=STATVA
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='CDF of Test Statistic:'
        NCTEXT(ICNT)=22
        AVALUE(ICNT)=CDF
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='With Continuity Correction'
        NCTEXT(ICNT)=26
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Value of Test Statistic:'
        NCTEXT(ICNT)=24
        AVALUE(ICNT)=STATV2
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='CDF of Test Statistic:'
        NCTEXT(ICNT)=22
        AVALUE(ICNT)=CDF2
        IDIGIT(ICNT)=NUMDIG
      ENDIF
C
      NUMROW=ICNT
      DO4310I=1,NUMROW
        NTOT(I)=15
 4310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,
     1            NCTEXT,AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      IF(NTOTZZ.LT.20)THEN
      ELSE
        ITITLE(1:30)='Without Continuity Correction:'
        NCTITL=30
        ITITL9=' '
        NCTIT9=0
C
        ITITL2(1,1)=' '
        NCTIT2(1,1)=0
        ITITL2(2,1)='Null'
        NCTIT2(2,1)=4
        ITITL2(3,1)='Hypothesis'
        NCTIT2(3,1)=10
        ITITL2(1,2)=' '
        NCTIT2(1,2)=0
        ITITL2(2,2)='Confidence'
        NCTIT2(2,2)=10
        ITITL2(3,2)='Level'
        NCTIT2(3,2)=5
        ITITL2(1,3)=' '
        NCTIT2(1,3)=0
        ITITL2(2,3)='Critical'
        NCTIT2(2,3)=8
        ITITL2(3,3)='Value'
        NCTIT2(3,3)=5
        ITITL2(1,4)='Null Hypothesis'
        NCTIT2(1,4)=15
        ITITL2(2,4)='Acceptance'
        NCTIT2(2,4)=10
        ITITL2(3,4)='Interval'
        NCTIT2(3,4)=8
        ITITL2(1,5)='Null'
        NCTIT2(1,5)=4
        ITITL2(2,5)='Hypothesis'
        NCTIT2(2,5)=10
        ITITL2(3,5)='Conclusion'
        NCTIT2(3,5)=10
C
        NMAX=0
        NUMCOL=5
        DO5210I=1,NUMCOL
          VALIGN(I)='b'
          ALIGN(I)='r'
          NTOT(I)=15
          NMAX=NMAX+NTOT(I)
          IF(I.EQ.3)THEN
            ITYPCO(I)='NUME'
          ELSE
            ITYPCO(I)='ALPH'
          ENDIF
          IF(I.EQ.2)THEN
            IDIGIT(I)=1
          ELSEIF(I.EQ.3)THEN
            IDIGIT(I)=2
          ELSE
            IDIGIT(I)=NUMDIG
          ENDIF
          IWHTML(1)=150
          IWHTML(2)=125
          IWHTML(3)=125
          IWHTML(4)=150
          IWHTML(5)=150
          IINC=1600
          IINC2=1400
          IINC3=2200
          IWRTF(1)=1800
          IWRTF(2)=IWRTF(1)+IINC
          IWRTF(3)=IWRTF(2)+IINC2
          IWRTF(4)=IWRTF(3)+IINC3
          IWRTF(5)=IWRTF(4)+IINC2
C
          DO5289J=1,NUMALP
            IF(J.EQ.1)THEN
              IVALUE(J,2)='50.0%'
              NCVALU(J,2)=5
              AMAT(J,3)=CV1
              IVALUE(J,5)(1:6)=ICONC1(1:6)
              NCVALU(J,5)=6
              IVALUE(J,4)='(0,0.500)'
              NCVALU(J,4)=9
            ELSEIF(J.EQ.2)THEN
              IVALUE(J,2)='80.0%'
              NCVALU(J,2)=5
              AMAT(J,3)=CV2
              IVALUE(J,5)(1:6)=ICONC2(1:6)
              NCVALU(J,5)=6
              IVALUE(J,4)='(0,0.800)'
              NCVALU(J,4)=9
            ELSEIF(J.EQ.3)THEN
              IVALUE(J,2)='90.0%'
              NCVALU(J,2)=5
              AMAT(J,3)=CV3
              IVALUE(J,5)(1:6)=ICONC3(1:6)
              NCVALU(J,5)=6
              IVALUE(J,4)='(0,0.900)'
              NCVALU(J,4)=9
            ELSEIF(J.EQ.4)THEN
              IVALUE(J,2)='95.0%'
              NCVALU(J,2)=5
              AMAT(J,3)=CV4
              IVALUE(J,5)(1:6)=ICONC4(1:6)
              NCVALU(J,5)=6
              IVALUE(J,4)='(0,0.950)'
              NCVALU(J,4)=9
            ELSEIF(J.EQ.5)THEN
              IVALUE(J,2)='99.0%'
              NCVALU(J,2)=5
              AMAT(J,3)=CV5
              IVALUE(J,5)(1:6)=ICONC6(1:6)
              NCVALU(J,5)=6
              IVALUE(J,4)='(0,0.990)'
              NCVALU(J,4)=9
            ENDIF
            AMAT(J,1)=0.0
            AMAT(J,2)=0.0
            AMAT(J,4)=0.0
            AMAT(J,5)=0.0
            IVALUE(J,1)='New/Old Equal'
            NCVALU(J,1)=13
 5289     CONTINUE
C
 5210   CONTINUE
C
        ICNT=NUMALP
        NUMLIN=3
        NUMCOL=5
        IFRST=.TRUE.
        ILAST=.TRUE.
        IFLAGS=.TRUE.
        IFLAGE=.TRUE.
        CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
        ITITLE(1:30)='With Continuity Correction:'
        NCTITL=27
C
        NUMCOL=5
        DO5310I=1,NUMCOL
C
          DO5389J=1,NUMALP
            IF(J.EQ.1)THEN
              IVALUE(J,5)(1:6)=KCONC1(1:6)
              NCVALU(J,5)=6
            ELSEIF(J.EQ.2)THEN
              IVALUE(J,5)(1:6)=KCONC2(1:6)
              NCVALU(J,5)=6
            ELSEIF(J.EQ.3)THEN
              IVALUE(J,5)(1:6)=KCONC3(1:6)
              NCVALU(J,5)=6
            ELSEIF(J.EQ.4)THEN
              IVALUE(J,5)(1:6)=KCONC4(1:6)
              NCVALU(J,5)=6
            ELSEIF(J.EQ.5)THEN
              IVALUE(J,5)(1:6)=KCONC5(1:6)
              NCVALU(J,5)=6
            ELSEIF(J.EQ.6)THEN
              IVALUE(J,5)(1:6)=KCONC6(1:6)
              NCVALU(J,5)=6
            ENDIF
 5389     CONTINUE
C
 5310   CONTINUE
C
        ICNT=NUMALP
        NUMLIN=3
        NUMCOL=5
        IFRST=.TRUE.
        ILAST=.TRUE.
        IFLAGS=.TRUE.
        IFLAGE=.TRUE.
        CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MCN2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMCN2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)AN11,AN21,AN12,AN22
 9013   FORMAT('AN11,AN21,AN12,AN22=',4G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9015)AN1,AN2
 9015   FORMAT('AN1,AN2=',2G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9017)N11,N21,N12,N22
 9017   FORMAT('N11,N21,N12,N22=',4I8)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMCWE(MAXNXT,ICAPSW,IFORSW,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT MCCOOL WEIBULL LOCATION TEST
C              (TESTS FOR 2-PARAMETER WEIBULL VERSUS 3-PARAMETER WEIBULL,
C              I.E,, IS LOCATION PARAMETER > 0)
C     EXAMPLE--MCCOOL WEIBULL LOCATION TEST Y X
C     REFERENCE --JOHN MCCOOL (1998), "INFERENCE ON THE WEIBULL LOCATION
C                 PARAMETER, JOURNAL OF QUALITY TECHNOLOGY, VOL. 30,
C                 NO. 2, PP. 119-126.
C               --JOHN MCCOOL (2012), "USING THE WEIBULL DISTRIBUTION:
C                 RELIABILITY, MODELING, AND INFERENCE", WILEY,
C                 PP. 301-307.
C               --HORST RINNE (2009), "THE WEIBULL DISTRIBUTION: A
C                 HANDBOOK", CRC PRESS, PP. 640-642.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2013/8
C     ORIGINAL VERSION--AUGUST    2013.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN0
      CHARACTER*4 IHOST1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION        TEMP1(MAXOBV)
      DIMENSION        TEMP2(MAXOBV)
      DIMENSION        TEMP3(MAXOBV)
      DIMENSION        TEMP4(MAXOBV)
      DOUBLE PRECISION DTEMP1(MAXOBV)
      INTEGER          ITEMP1(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZD.INC'
      INCLUDE 'DPCOZI.INC'
C
      EQUIVALENCE(GARBAG(IGARB1),TEMP1(1))
      EQUIVALENCE(GARBAG(IGARB2),TEMP2(1))
      EQUIVALENCE(GARBAG(IGARB3),TEMP3(1))
      EQUIVALENCE(GARBAG(IGARB4),TEMP4(1))
      EQUIVALENCE(DGARBG(IDGAR1),DTEMP1(1))
      EQUIVALENCE(IGARBG(IIGAR1),ITEMP1(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMC'
      ISUBN2='WE  '
      IFOUND='YES'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *****************************************************
C               **  TREAT THE MCCOOL WEIBULL LOCATION TEST   CASE  **
C               *****************************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MCWE')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMCWE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)MAXNXT
   55   FORMAT('MAXNXT = ',I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCWE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='MCCOOL WEIBULL LOCATION TEST'
      MINNA=1
      MAXNA=100
      MINN2=10
      IFLAGE=1
      IFLAGM=0
      MINNVA=2
      MAXNVA=2
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCWE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               *****************************************
C               **  STEP 3A--                          **
C               **  CASE 1: TWO RESPONSE VARIABLES     **
C               **          WITH NO REPLICATION        **
C               *****************************************
C
C     CURRENTLY, DO NOT SUPPORT EITHER "MULTIPLE" OPTION OR
C     "REPLICATION" OPTION.
C
      ISTEPN='3A'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCWE')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOL=1
      NUMVA2=2
      CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y,X,TEMP1,NS1,NLOCA2,NLOCA3,ICASE,
     1            IBUGA3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************
C               **  STEP 52--                          **
C               **  DO MCCOOL WEIBULL LOCATION TEST    **
C               *****************************************
C
      ISTEPN='52'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MCWE')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5211)
 5211   FORMAT('***** FROM DPMCWE, AS WE ARE ABOUT TO CALL DPMCW2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5212)NS1,MAXN
 5212   FORMAT('NS1,MAXN = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO5215I=1,NS1
          WRITE(ICOUT,5216)I,Y(I),X(I)
 5216     FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 5215   CONTINUE
      ENDIF
C
      CALL DPMCW2(Y,X,NS1,
     1            TEMP1,TEMP2,TEMP3,TEMP4,DTEMP1,ITEMP1,MAXOBV,
     1            ICAPSW,ICAPTY,IFORSW,IVARN1,IVARN2,
     1            STATVA,STATCD,PVALUE,
     1            CUT50,CUT75,CUT90,CUT95,CUT975,CUT99,CUT999,
     1            IBUGA3,ISUBRO,IERROR)
C
C               ***************************************
C               **  STEP 61--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='61'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MCWE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISUBN0='MCWE'
C
      IH='STAT'
      IH2='VAL '
      VALUE0=STATVA
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='STAT'
      IH2='CDF '
      VALUE0=STATCD
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='PVAL'
      IH2='UE  '
      VALUE0=PVALUE
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF50'
      VALUE0=CUT50
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF75'
      VALUE0=CUT75
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF90'
      VALUE0=CUT90
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF95'
      VALUE0=CUT95
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='FF99'
      VALUE0=CUT99
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='CUTO'
      IH2='F999'
      VALUE0=CUT999
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MCWE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMCWE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)STATVA,STATCD,PVALUE,NS1,IERROR
 9014   FORMAT('STATVA,STATCD,PVALUE,NS1,IERROR = ',3G15.7,I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMCW2(Y,TAG,N,
     1                  TEMP1,TEMP2,TEMP3,TEMP4,DTEMP1,ITEMP1,MAXNXT,
     1                  ICAPSW,ICAPTY,IFORSW,IVARID,IVARI2,
     1                  STATVA,STATCD,PVAL,
     1                  CUT50,CUT75,CUT90,CUT95,CUT975,CUT99,CUT999,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--CARRY OUT MCCOOL WEIBULL LOCATION TEST
C              (TESTS FOR 2-PARAMETER WEIBULL VERSUS 3-PARAMETER WEIBULL,
C              I.E,, IS LOCATION PARAMETER > 0)
C     EXAMPLE--MCCOOL WEIBULL LOCATION TEST Y TAG
C     REFERENCE --JOHN MCCOOL (1998), "INFERENCE ON THE WEIBULL LOCATION
C                 PARAMETER, JOURNAL OF QUALITY TECHNOLOGY, VOL. 30,
C                 NO. 2, PP. 119-126.
C               --JOHN MCCOOL (2012), "USING THE WEIBULL DISTRIBUTION:
C                 RELIABILITY, MODELING, AND INFERENCE", WILEY,
C                 PP. 301-307.
C               --HORST RINNE (2009), "THE WEIBULL DISTRIBUTION: A
C                 HANDBOOK", CRC PRESS, PP. 640-642.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATIION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2013/8
C     ORIGINAL VERSION--AUGUST    2013.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION TAG(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION TEMP4(*)
C
      DOUBLE PRECISION DTEMP1(*)
      INTEGER          ITEMP1(*)
C
      PARAMETER (NUMALP=7)
      REAL ALPHA(NUMALP)
      REAL CVAL(NUMALP)
C
      PARAMETER(NUMCLI=5)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=NUMALP)
      PARAMETER (MAXRO2=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*1  ITITL9
      CHARACTER*60 ITEXT(MAXRO2)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXRO2)
      INTEGER      NCTEXT(MAXRO2)
      INTEGER      IDIGIT(MAXRO2)
      INTEGER      NTOT(MAXRO2)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
      DATA ALPHA/
     1 50.0, 75.0, 90.0, 95.0, 97.5, 99.0, 99.9/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMC'
      ISUBN2='W2  '
      IERROR='NO'
C
      STATVA=CPUMIN
      STATCD=CPUMIN
      PVAL=CPUMIN
      CUT50=CPUMIN
      CUT75=CPUMIN
      CUT90=CPUMIN
      CUT95=CPUMIN
      CUT975=CPUMIN
      CUT99=CPUMIN
      CUT999=CPUMIN
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MCW2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMCW2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,IFORSW,N
   52   FORMAT('IBUGA3,ISUBRO,IFORSW,N = ',3(A4,2X),I8)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,53)IVARID(1),IVARI2(1),IVARID(2),IVARI2(2)
   53   FORMAT('IVARID(1),IVARI2(1),IVARID(2),IVARI2(2) = ',
     1         A4,A4,2X,A4,A4)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I),TAG(I)
   57     FORMAT('I,Y(I),TAG(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
      ICASE='CV'
      CALL DPMCW3(Y,TAG,N,TEMP4,TEMP1,TEMP2,TEMP3,DTEMP1,ITEMP1,
     1            ICASE,ISEED,MAXNXT,
     1            STATVA,STATCD,PVAL,CV50,CV90,CV95,
     1            CA,CL,IR,IR1,IMCCR1,IRANAL,
     1            ISUBRO,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      CUT50=CV50
      CUT75=TEMP3(7500)
      CUT90=CV90
      CUT95=CV95
      CUT975=TEMP3(9750)
      CUT99=TEMP3(9900)
      CUT999=TEMP3(9990)
      CVAL(1)=CUT50
      CVAL(2)=CUT75
      CVAL(3)=CUT90
      CVAL(4)=CUT95
      CVAL(5)=CUT975
      CVAL(6)=CUT99
      CVAL(7)=CUT999
C
C               ******************************************
C               **   STEP 43--                          **
C               **   WRITE OUT EVERYTHING               **
C               ******************************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MCW2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='McCool Weibull Location Test'
      NCTITL=28
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Response Variable: '
      WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
      WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Censoring Variable: '
      WRITE(ITEXT(ICNT)(21:24),'(A4)')IVARID(2)(1:4)
      WRITE(ITEXT(ICNT)(25:28),'(A4)')IVARI2(2)(1:4)
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='H0: mu = 0'
      NCTEXT(ICNT)=10
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Ha: mu > 0'
      NCTEXT(ICNT)=10
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Total Number of Observations:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Uncensored Observations:'
      NCTEXT(ICNT)=34
      AVALUE(ICNT)=REAL(IR)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Value of R1:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=REAL(IR1)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Value of Shape Parameter for All Data:'
      NCTEXT(ICNT)=38
      AVALUE(ICNT)=CA
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Value of Shape Parameter for R1 Data:'
      NCTEXT(ICNT)=37
      AVALUE(ICNT)=CL
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Test Statistic Value:'
      NCTEXT(ICNT)=21
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='CDF of Test Statistic:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=STATCD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='P-Value for Test Statistic:'
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=PVAL
      IDIGIT(ICNT)=NUMDIG
C
      NUMROW=ICNT
      DO5010I=1,NUMROW
        NTOT(I)=15
 5010 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='42A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MCW2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='42D'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MCW2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ITITL9=' '
      NCTIT9=0
      ITITLE='Conclusions (Upper 1-Tailed Test)'
      NCTITL=33
C
      DO5030J=1,5
        DO5040I=1,3
          ITITL2(I,J)=' '
          NCTIT2(I,J)=0
 5040   CONTINUE
 5030 CONTINUE
C
      ITITL2(2,1)='Null'
      NCTIT2(2,1)=4
      ITITL2(3,1)='Hypothesis'
      NCTIT2(3,1)=10
C
      ITITL2(2,2)='Significance'
      NCTIT2(2,2)=12
      ITITL2(3,2)='Level'
      NCTIT2(3,2)=5
C
      ITITL2(2,3)='Test '
      NCTIT2(2,3)=4
      ITITL2(3,3)='Statistic'
      NCTIT2(3,3)=9
C
      ITITL2(2,4)='Critical'
      NCTIT2(2,4)=8
      ITITL2(3,4)='Region (>=)'
      NCTIT2(3,4)=11
C
      ITITL2(1,5)='Null'
      NCTIT2(1,5)=4
      ITITL2(2,5)='Hypothesis'
      NCTIT2(2,5)=10
      ITITL2(3,5)='Conclusion'
      NCTIT2(3,5)=10
C
      NMAX=0
      NUMCOL=5
      DO5050I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1)NTOT(I)=12
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        IDIGIT(I)=NUMDIG
        IF(I.EQ.1 .OR. I.EQ.2 .OR. I.EQ.5)THEN
          ITYPCO(I)='ALPH'
        ENDIF
        IWHTML(1)=150
        IWHTML(2)=125
        IWHTML(3)=150
        IWHTML(4)=150
        IWHTML(5)=150
        IINC=1600
        IINC2=1400
        IINC3=2200
        IWRTF(1)=IINC
        IWRTF(2)=IWRTF(1)+IINC
        IWRTF(3)=IWRTF(2)+IINC2
        IWRTF(4)=IWRTF(3)+IINC
        IWRTF(5)=IWRTF(4)+IINC
C
        DO5060J=1,NUMALP
C
          IVALUE(J,1)='mu = 0'
          NCVALU(J,1)=6
          AMAT(J,3)=STATVA
          AMAT(J,4)=CVAL(J)
          IVALUE(J,5)(1:6)='REJECT'
          IF(STATVA.LT.CVAL(J))THEN
            IVALUE(J,5)(1:6)='ACCEPT'
          ENDIF
          NCVALU(J,5)=6
C
          ALPHAT=ALPHA(J)
          ALPHAT=ALPHAT
          WRITE(IVALUE(J,2)(1:4),'(F4.1)')ALPHAT
          IVALUE(J,2)(5:5)='%'
          NCVALU(J,2)=5
 5060   CONTINUE
C
 5050 CONTINUE
C
      ICNT=NUMALP
      NUMLIN=3
      NUMCOL=5
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
      CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MCW2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMCW2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)N,IBUGA3,IERROR
 9012   FORMAT('N,IBUGA3,IERROR = ',I8,2(2X,A4))
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)STATVA,STATCD,PVAL
 9013   FORMAT('STATVA,STATCD,PVAL = ',3G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMCW3(Y,TAG,N,TAG2,TEMP1,TEMP2,TEMP3,DTEMP1,ITEMP1,
     1                  ICASE,ISEED,MAXNXT,
     1                  STATVA,STATCD,PVAL,CV50,CV90,CV95,
     1                  CA,CL,IR,IR1,IMCCR1,IRANAL,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS SUBROUTINE PERFORMS MCCOOL'S TEST FOR DISTINGUISHING
C              BETWEEN A 2-PARAMETER WEIBULL VERSUS A 3-PARAMETER
C              WEIBULL.  THIS TEST IS CURRENTLY SUPPORTED FOR SAMPLE
C              SIZES BETWEEN 10 AND 100.
C
C     INPUT  ARGUMENTS--Y      = THE SINGLE PRECISION RESPONSE VARIABLE.
C                       X      = A TAG VARIABLE WHERE "1" INDICATES AN
C                                UNCENSORED OBSERVATION AND "0" INDICATES
C                                A CENSORED OBSERVATION.
C                     --N      = AN INTEGER PARAMETER THAT SPECIFIES THE
C                                NUMBER OF VALUES IN THE RESPONSE
C                                VARIABLE.
C                     --GAMMA  = THE SHAPE PARAMETER
C                                GAMMA SHOULD BE POSITIVE.
C     OUTPUT ARGUMENTS--PDF    = THE SINGLE PRECISION PROBABILITY
C                                DENSITY FUNCTION VALUE.
C     OUTPUT--THE SINGLE PRECISION PROBABILITY DENSITY
C             FUNCTION VALUE PDF FOR THE DOUBLE WEIBULL DISTRIBUTION
C             WITH TAIL LENGHT PARAMETER = GAMMA.
C     PRINTING--NONE UNLESS AN INPUT ARGUMENT ERROR CONDITION EXISTS.
C     RESTRICTIONS--GAMMA SHOULD BE POSITIVE.
C     OTHER DATAPAC   SUBROUTINES NEEDED--NONE.
C     FORTRAN LIBRARY SUBROUTINES NEEDED--NONE.
C     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
C     LANGUAGE--ANSI FORTRAN (1977)
C     REFERENCE --JOHN MCCOOL (1998), "INFERENCE ON THE WEIBULL LOCATION
C                 PARAMETER, JOURNAL OF QUALITY TECHNOLOGY, VOL. 30,
C                 NO. 2, PP. 119-126.
C               --JOHN MCCOOL (2012), "USING THE WEIBULL DISTRIBUTION:
C                 RELIABILITY, MODELING, AND INFERENCE", WILEY,
C                 PP. 301-307.
C               --HORST RINNE (2009), "THE WEIBULL DISTRIBUTION: A
C                 HANDBOOK", CRC PRESS, PP. 640-642.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2013/8
C     ORIGINAL VERSION--AUGUST    2013.
C
C---------------------------------------------------------------------
C
      REAL Y(*)
      REAL TAG(*)
      REAL TAG2(*)
      REAL TEMP1(*)
      REAL TEMP2(*)
      REAL TEMP3(*)
      DOUBLE PRECISION DTEMP1(*)
      INTEGER ITEMP1(*)
C
      CHARACTER*4 ICASE
      CHARACTER*4 IRANAL
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IDIR
      CHARACTER*4 IRANSV
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(ISUBRO.EQ.'MCW3' .OR. IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPMCW3')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASE,MAXNXT,N
   52   FORMAT('IBUGA3,ISUBRO,ICASE,MAXNXT,N = ',3(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,57)I,Y(I),TAG(I)
   57     FORMAT('I,Y(I),TAG(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
      STATVA=CPUMIN
      STATCD=CPUMIN
      PVAL=CPUMIN
      IMCCR1=0
C
      IRANSV=IRANAL
      IRANAL='FINC'
      ISEESV=ISEED
      IF(ISEED.EQ.305)THEN
        ISEED=23709
      ENDIF
C
C     ESTIMATE THE SHAPE PARAMETER BASED ON ALL OF THE DATA
C
      IR=0
      DO100I=1,N
        AVAL=TAG(I)
        IF(ABS(AVAL).LE.0.5)THEN
          TAG(I)=0.0
        ELSE
          TAG(I)=1.0
          IR=IR+1
        ENDIF
  100 CONTINUE
C
      IERR=0
      IF(IMCCR1.GT.0 .AND. IMCCR1.LT.IR)THEN
        IR1=IMCCR1
        NMAX=N
      ELSE
        NMAX=100
        IF(N.LE.30)THEN
          IR1=5
          IF(IR.LT.6)THEN
            IERR=1
          ENDIF
        ELSEIF(N.GT.30 .AND. N.LT.40)THEN
          IR1=6
          IF(IR.LT.7)THEN
            IERR=1
          ENDIF
        ELSEIF(N.GE.40 .AND. N.LE.60)THEN
          IR1=7
          IF(IR.LT.8)THEN
            IERR=1
          ENDIF
        ELSEIF(N.GT.60 .AND. N.LT.80)THEN
          IR1=8
          IF(IR.LT.9)THEN
            IERR=1
          ENDIF
        ELSEIF(N.GE.80 .AND. N.LE.100)THEN
          IR1=9
          IF(IR.LT.10)THEN
            IERR=1
          ENDIF
        ENDIF
      ENDIF
C
      IF(IERR.EQ.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,91)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,191)
  191   FORMAT('      THERE ARE AN INSUFFICIENT NUMBER OF UNCENSORED ',
     1         'OBSERVATIONS.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,193)IR
  193   FORMAT('      NUMBER OF UNCENSORED OBSERVATIONS IS         ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,195)IR1
  195   FORMAT('      MINIMUM NUMBER OF UNCENSORED OBSERVATIONS IS ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N.LT.10 .OR. N.GT.NMAX)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,91)
   91   FORMAT('***** ERROR IN MCCOOL WEIBULL TEST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,93)NMAX
   93   FORMAT('      THIS TEST IS CURRENTLY ONLY SUPPORTED FOR ',
     1         'SAMPLE SIZES BETWEEN 10 AND ',I8,'.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,95)N
   95   FORMAT('      THE NUMBER OF RESPONSE VALUES IS   ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     ESTIMATE BASED ON ALL DATA
C
      CALL WEIM2B(Y,TAG,N,MAXNXT,
     1            TEMP1,DTEMP1,ITEMP1,
     1            CA,
     1            ISUBRO,IBUGA3,IERROR)
C
C     NOW ESTIMATE BASED ON THE FIRST "R1" 
C
      DO110I=1,N
        TAG2(I)=TAG(I)
  110 CONTINUE
C
      ICNT=0
      DO200I=1,N
        IF(TAG2(I).GE.0.5)THEN
          ICNT=ICNT+1
          IF(ICNT.GT.IR1)THEN
            TAG2(I)=0.0
            TEMP3(I)=Y(IR1)
          ELSE
            TEMP3(I)=Y(I)
          ENDIF
        ENDIF
  200 CONTINUE
      CALL WEIM2B(TEMP3,TAG2,N,MAXNXT,
     1            TEMP1,DTEMP1,ITEMP1,
     1            CL,
     1            ISUBRO,IBUGA3,IERROR)
C
      STATVA=CL/CA
C
C     NOW PERFORM SIMULATIONS TO OBTAIN CRITICAL VALUES.  GENERATE
C     10,000 SAMPLES FROM A 2-PARAMETER WEIBULL.  BASED ON MCCOOL'S
C     PAPER, USE A SHAPE PARAMETER OF 1 AND A TENTH PERCENTILE OF 1.0.
C     USE THE FOLLOWING FORMULA (BASED ON MENON'S ESTIMATES FOR THE
C     2-PARAMETER WEIBULL) FROM PP. 132-134 OF MCCOOL'S BOOK:
C
C            Xhat(p) = (k(p))**(1/BETAHAT)*SCALE
C
C     WHERE
C
C            Xhat(p)   = THE ESTIMATE OF THE p-TH PERCENTILE
C            k(p)      = THE DESIRED PERCENTILE (0.10 IN THIS CASE)
C            BETAHAT   = THE ESTIMATED SHAPE PARAMETER (WE ARE USING
C                        A VALUE OF 1 FOR THE PURPOSES OF THE MONTE
C                        CARLO SIMULATION)
C
C     THIS MEANS THAT TO OBTAIN A TENTH PERCENTILE OF 1, WE USE
C
C           SCALE = 1/0.10**(1/BETA)
C                 = 10 FOR BETA = 1
C
      IF(ICASE.EQ.'STAT')GOTO9000
      NMCSAM=10000
      SCALE=10.0
      GAMMA=1.0
CCCCC GAMMA=CA
CCCCC SCALE=1.0/0.10**(1.0/GAMMA)
      MINMAX=1
C
      ICNT=0
      DO300I=1,NMCSAM
        CALL WEIRAN(N,GAMMA,MINMAX,ISEED,TEMP2)
        CALL SORT(TEMP2,N,TEMP2)
        DO310J=1,N
          TEMP2(J)=SCALE*TEMP2(J)
  310   CONTINUE
C
        DO320J=1,IR
          TAG2(J)=1.0
  320   CONTINUE
        IF(IR.LT.N)THEN
          DO330J=IR+1,N
             TAG2(J)=0.0
  330     CONTINUE
        ENDIF
        CALL WEIM2B(TEMP2,TAG2,N,MAXNXT,
     1              TEMP1,DTEMP1,ITEMP1,
     1              CAT,
     1              ISUBRO,IBUGA3,IERROR)
C
        DO340J=1,IR1
          TAG2(J)=1.0
  340   CONTINUE
        DO350J=IR1+1,N
           TAG2(J)=0.0
           TEMP2(J)=TEMP2(IR1)
  350   CONTINUE
        CALL WEIM2B(TEMP2,TAG2,N,MAXNXT,
     1              TEMP1,DTEMP1,ITEMP1,
     1              CLT,
     1              ISUBRO,IBUGA3,IERROR)
C
        TEMP3(I)=CLT/CAT
C
  300 CONTINUE
C
C     NOW DETERMINE REFERENCE VALUES AND P-VALUE
C
      IDIR='UPPE'
      CALL DPGOF8(TEMP3,NMCSAM,STATVA,PVAL,IDIR,
     1            IBUGA3,ISUBRO,IERROR)
      STATCD=1.0 - PVAL
      CV50=TEMP3(5000)
      CV90=TEMP3(9000)
      CV95=TEMP3(9500)
C
 9000 CONTINUE
      IRANAL=IRANSV
      ISEED=ISEESV
C
      IF(ISUBRO.EQ.'MCW3' .OR. IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9001)
 9001   FORMAT('AT THE BEGINNING OF DPMCW3')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9002)IERROR,STATVA,STATCD,PVAL
 9002   FORMAT('IERROR,STATVA,STATCD,PVAL = ',A4,2X,3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9003)IR,IR1,CL,CA
 9003   FORMAT('IR,IR1,CL,CA = ',2I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMDCL(XMED,QUASE,N,ALPHA,IWRITE,ALOWLM,AUPPLM,
     1                  IBUGA3,IERROR)
C
C     PURPOSE--FOR A GIVEN MEAN, SD, N, AND ALPHA, COMPUTE THE
C              LOWER AND UPPER CONFIDENCE LIMITS FOR THE MEDIAN.
C              THIS IS PRIMARILY USED BY THE CROSS TABULATE COMMAND.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/5
C     ORIGINAL VERSION--MAY       2009.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      REAL XMEAN
      REAL QUASE
      REAL ALPHA
      REAL ALOWLM
      REAL AUPPLM
      INTEGER N
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMD'
      ISUBN2='CL  '
      ALOWLM=CPUMIN
      AUPPLM=CPUMIN
C
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMDCL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,IWRITE
   52   FORMAT('IBUGA3,IWRITE = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)XMEAN,N,ALPHA
   53   FORMAT('XMEAN,N,ALPHA = ',G15.7,I8,G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************
C               **  STEP 1--                  **
C               **  CHECK FOR INPUT ERRORS    **
C               ********************************
C
      IF(N.LT.1)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,151)
  151   FORMAT('***** ERROR IN DPMDCL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,152)
  152   FORMAT('      THE INPUT SAMPLE SIZE FOR THE MEDIAN CONFIDENCE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,154)
  154   FORMAT('      LIMITS IS LESS THAN 1.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,157)N
  157   FORMAT('      THE INPUT SAMPLE SIZE            = ',I8)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      IF(N.LT.3)THEN
        ALOWLM=XMED
        AUPPLM=XMED
        GOTO9000
      ENDIF
C
      ALPHSV=ALPHA
      IF(ALPHA.GT.1.0 .AND. ALPHA.LE.100.0)ALPHA=ALPHA/100.0
      IF(ALPHA.LE.0.0 .OR. ALPHA.GE.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,171)
  171   FORMAT('***** ERROR IN DPMDCL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,172)
  172   FORMAT('      THE VALUE OF ALPHA IS OUTSIDE THE (0,1) ',
     1         'INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,177)ALPHA
  177   FORMAT('      THE VALUE OF ALPHA = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
C               ********************************************
C               **  STEP 2--                              **
C               **  COMPUTE THE MEAN CONFIDENCE INTERVALS **
C               ********************************************
C
      ALP=ALPHA
      IF(ALP.LT.0.5)THEN
        ALP=1.0-ALP
      ENDIF
C
      ALP=1.0 - ALP
      P1=ALP/2.0
      P2=1.0-(ALP/2.0)
      AN=REAL(N)
C
      AN=REAL(N)
      CALL NORPPF(P2,ZALPHA)
      ALOWLM=XMED - ZALPHA*QUASE
      AUPPLM=XMED + ZALPHA*QUASE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMDCL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IERROR,ALOWLM,AUPPLM
 9014   FORMAT('IERROR,ALOWLM,AUPPLM = ',A4,2X,2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMECL(XMEAN,XSD,N,ALPHA,IWRITE,ALOWLM,AUPPLM,
     1                  IBUGA3,IERROR)
C
C     PURPOSE--FOR A GIVEN MEAN, SD, N, AND ALPHA, COMPUTE THE
C              LOWER AND UPPER CONFIDENCE LIMITS FOR THE MEAN.
C              THIS IS PRIMARILY USED BY THE CROSS TABULATE COMMAND.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/5
C     ORIGINAL VERSION--MAY       2009.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      REAL XMEAN
      REAL ALPHA
      REAL ALOWLM
      REAL AUPPLM
      INTEGER N
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPME'
      ISUBN2='CL  '
      IERROR='NO'
      AN=REAL(N)
C
      IF(IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMECL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,IWRITE
   52   FORMAT('IBUGA3,IWRITE = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)XMEAN,N,ALPHA
   53   FORMAT('XMEAN,N,ALPHA = ',G15.7,I8,G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************
C               **  STEP 1--                  **
C               **  CHECK FOR INPUT ERRORS    **
C               ********************************
C
      IF(N.LT.1)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,151)
  151   FORMAT('***** ERROR IN DPMECL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,152)
  152   FORMAT('      THE INPUT SAMPLE SIZE FOR THE MEAN CONFIDENCE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,154)
  154   FORMAT('      LIMITS IS LESS THAN 1.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,157)N
  157   FORMAT('      THE INPUT SAMPLE SIZE            = ',I8)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      ALPHSV=ALPHA
      IF(ALPHA.GT.1.0 .AND. ALPHA.LE.100.0)ALPHA=ALPHA/100.0
      IF(ALPHA.LE.0.0 .OR. ALPHA.GE.1.0)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,171)
  171   FORMAT('***** ERROR IN DPMECL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,172)
  172   FORMAT('      THE VALUE OF ALPHA IS OUTSIDE THE (0,1) ',
     1         'INTERVAL.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,177)ALPHA
  177   FORMAT('      THE VALUE OF ALPHA = ',G15.7)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
C               ********************************************
C               **  STEP 2--                              **
C               **  COMPUTE THE MEAN CONFIDENCE INTERVALS **
C               ********************************************
C
      ALP=ALPHA
      IF(ALP.LT.0.5)THEN
        ALP=1.0-ALP
      ENDIF
C
      ALP=1.0 - ALP
      P1=ALP/2.0
      P2=1.0-(ALP/2.0)
      AN=REAL(N)
C
      IF(N.LE.1)THEN
        ALOWLM=XMEAN
        AUPPLM=XMEAN
      ELSE
        IDF=N-1
        CALL TPPF(P2,REAL(IDF),ZALPHA)
        ALOWLM=XMEAN - ZALPHA*XSD/SQRT(AN)
        AUPPLM=XMEAN + ZALPHA*XSD/SQRT(AN)
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGA3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMECL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA3,IERROR
 9012   FORMAT('IBUGA3,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)ZALPHA,XSD,SQRT(AN)
 9013   FORMAT('ZALPHA,XSD,SQRT(AN) = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)ALOWLM,AUPPLM
 9014   FORMAT('ALOWLM,AUPPLM = ',G15.7,2X,G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)ALPHA,ALP,P1,P2
 9015   FORMAT('ALPHA,ALP,P1,P2 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMED3(X1,X2,X3,XMED3,IBUGG3,IERROR)
C
C     PURPOSE--THIS SUBROUTINE COMPUTES THE
C              SAMPLE MEDIAN
C              OF THE 3 NUMBERS X1, X2, AND X3.
C     OUTPUT ARGUMENTS--XMED3  = THE SINGLE PRECISION VALUE OF THE
C                                COMPUTED SAMPLE MEDIAN.
C     OUTPUT--THE COMPUTED SINGLE PRECISION VALUE OF THE
C             SAMPLE MEDIAN.
C     LANGUAGE--ANSI FORTRAN (1977)
C     REFERENCES--MCNEIL, INTERACTIVE DATA ANALYSIS
C                 1977, PAGE 145
C                 (= SOURCE OF ALGORITHM).
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     VERSION NUMBER--83.6
C     ORIGINAL VERSION--JULY      1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGG3
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
C
      IF(IBUGG3.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPMED3--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGG3
   52 FORMAT('IBUGG3 = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)X1,X2,X3
   53 FORMAT('X1,X2,X3 = ',3E15.7)
      CALL DPWRST('XXX','BUG ')
   90 CONTINUE
C
C               **********************
C               **  COMPUTE MEDIAN  **
C               **********************
C
      XMED3=X2
      IF(X1.LE.X2.AND.X2.LE.X3)GOTO9000
      IF(X3.LE.X2.AND.X2.LE.X1)GOTO9000
C
      XMED3=X1
      IF(X2.LE.X1.AND.X1.LE.X3)GOTO9000
      IF(X3.LE.X1.AND.X1.LE.X2)GOTO9000
C
      XMED3=X3
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'OFF')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPMED3--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGG3,IERROR
 9012 FORMAT('IBUGG3,IERROR = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)X1,X2,X3
 9013 FORMAT('X1,X2,X3 = ',3E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)XMED3
 9014 FORMAT('XMED3 = ',E15.7)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPMEDM(NLAB,AMEAN,ASD,TEMP1,TEMP2,
     1                  IWRITE,ICAPSW,ICAPTY,NUMDIG,MAXNXT,
     1                  XMEDME,SEMEK1,SEMEK2,ALOWCL,AUPPCL,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--COMPUTE A CONSENSUS VALUE BASED ON THE MEDIAN OF THE
C              MEANS.  THIS IS A MORE ROBUST VERSION OF THE MEAN OF
C              MEANS METHOD (I.E., PROTECTS AGAINST OUTLIER LABS).
C              THE ASSOCIATED UNCERTAINTY IS:
C
C                u(med(x)) = SQRT(PI/(2*NLAB))*MADe
C
C              WHERE MADe = 1.483*MAD WITH MAD DENOTING THE MEDIAN
C              ABSOLUTE DEVIATION.
C
C              THE ADVANTAGE OF THIS METHOD IS THAT IT PROTECTS AGAINST
C              OUTLYING LAB MEANS.  AS WITH MEAN OF MEANS METHOD, THE
C              DISADVANTAGE OF THIS METHOD IS THAT IT DOES NOT TAKE
C              WITHIN-LAB VARIANCE INTO ACCOUNT.
C
C     REFERENCE--CCQM GUIDANCE note: Estimation of a consensus KCRV and
C                associated Degrees of Equivalence", Version: 10,
C                2013-04-12, pp. 25-26.
C     PRINTING--YES
C     SUBROUTINES NEEDED--MEDIAN, MAD
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2017/03
C     ORIGINAL VERSION--MARCH     2017.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      DIMENSION AMEAN(*)
      DIMENSION ASD(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOP2.INC'
C
      DATA PI /3.14159265/
C
C-----START POINT------------------------------------------------
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MEDM')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMEDM--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NLAB
   52   FORMAT('NLAB = ',I8)
        CALL DPWRST('XXX','BUG ')
        DO60I=1,NLAB
          WRITE(ICOUT,62)I,AMEAN(I),ASD(I)
   62     FORMAT('I,AMEAN(I),ASD(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   60   CONTINUE
      ENDIF
C
      IERROR='NO'
      ISUBN1='DPME'
      ISUBN2='DM  '
C
C     STEP 1: COMPUTE THE MEDIAN OF THE MEANS
C
      CALL MEDIAN(AMEAN,NLAB,IWRITE,TEMP1,MAXNXT,XMEDME,IBUGA3,IERROR)
C
C     STEP 2: COMPUTE THE MADe
C
      CALL MAD(AMEAN,NLAB,IWRITE,TEMP1,TEMP2,MAXNXT,XMAD,IBUGA3,IERROR)
      XMADE=XMAD/0.67449
      SEMEK1=SQRT(PI/(2.0*REAL(NLAB)))*XMADE
      SEMEK2=2.0*SEMEK1
C
C     STEP 3: COMPUTE 95% CONFIDENCE INTERVAL
C
      ALPHA=0.975
      CALL NORPPF(ALPHA,TVAL)
      ALOWCL=XMEDME - TVAL*SEMEK1
      AUPPCL=XMEDME + TVAL*SEMEK1
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)='14. Method: Median of Means'
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='    Median of Lab Means:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=XMEDME
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Scaled Median Absolute Deviation of Lab Means:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=XMADE
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Uncertainty (k = 1):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=SEMEK1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k = 2):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=SEMEK2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Lower 95% (normal) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=ALOWCL
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Upper 95% (normal) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=AUPPCL
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Note: Median of Means Best Usage:'
      NCTEXT(ICNT)=37
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='          Number of Labs >= 5:'
      NCTEXT(ICNT)=30
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO310I=1,NUMROW
        NTOT(I)=15
  310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
      ITITL9=' '
      NCTIT9=0
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MEDM')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMEDM--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)XMEDME,SEMEK1,SEMEK2,ALOWCL,AUPPCL
 9015   FORMAT('XMEDME,SEMEK1,SEMEK2,ALOWCL,AUPPCL = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMEPO(ICAPSW,IFORSW,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT A MEDIAN POLISH.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--FEBRUARY  1981.
C     UPDATED         --SEPTEMBER 1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     1988. ADD LOFCDF
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C                                       MOVE DIMENSIONING OF Y2 AND Z
C     UPDATED         --MAY       2011. USE DPPARS
C     UPDATED         --MAY       2011. SUPPORT FOR HTML, LATEX, RTF OUTPUT
C     UPDATED         --JULY      2019. TWEAK SCRATCH STORAGE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IREPU
      CHARACTER*4 IRESU
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      PARAMETER (MAXLEV=500)
      PARAMETER (MAXFAC=5)
C
      DIMENSION PRED2(MAXOBV)
      DIMENSION RES2(MAXOBV)
      DIMENSION W(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION Z(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
C
      DIMENSION F1(MAXOBV,MAXFAC)
      DIMENSION F1ID(MAXLEV,MAXFAC)
      DIMENSION F1N(MAXLEV,MAXFAC)
      DIMENSION F1TYP(MAXLEV,MAXFAC)
      DIMENSION F1MEAN(MAXLEV,MAXFAC)
      DIMENSION F1EFFE(MAXLEV,MAXFAC)
      DIMENSION F1EFSD(MAXLEV,MAXFAC)
C
      DIMENSION B(MAXLEV)
      DIMENSION SDB(MAXLEV)
      DIMENSION FCUM(MAXLEV)
      DIMENSION Y2MED(MAXLEV)
      DIMENSION N1(MAXFAC)
      DIMENSION ISET(MAXFAC)
      DIMENSION AN1(MAXFAC)
      DIMENSION E1(MAXFAC)
      DIMENSION SS1(MAXFAC)
      DIMENSION RESMS1(MAXFAC)
      DIMENSION FVAL(MAXFAC)
      DIMENSION F1CDF2(MAXFAC)
      DIMENSION RSD(MAXFAC)
C
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),F1(1,1))
      EQUIVALENCE (GARBAG(IGAR10),PRED2(1))
      EQUIVALENCE (GARBAG(JGAR11),RES2(1))
      EQUIVALENCE (GARBAG(JGAR12),W(1))
      EQUIVALENCE (GARBAG(JGAR13),Y2(1))
      EQUIVALENCE (GARBAG(JGAR14),B(1))
      EQUIVALENCE (GARBAG(JGAR15),SDB(1))
      EQUIVALENCE (GARBAG(JGAR16),FCUM(1))
      EQUIVALENCE (GARBAG(JGAR17),Y2MED(1))
      EQUIVALENCE (GARBAG(JGAR18),F1ID(1,1))
      EQUIVALENCE (GARBAG(JGAR19),F1N(1,1))
      EQUIVALENCE (GARBAG(IGAR11),F1TYP(1,1))
      EQUIVALENCE (GARBAG(IGAR12),F1MEAN(1,1))
      EQUIVALENCE (GARBAG(IGAR13),F1EFFE(1,1))
      EQUIVALENCE (GARBAG(IGAR14),F1EFSD(1,1))
      EQUIVALENCE (GARBAG(IGAR15),AN1(1))
      EQUIVALENCE (GARBAG(IGAR15+100),E1(1))
      EQUIVALENCE (GARBAG(IGAR15+200),SS1(1))
      EQUIVALENCE (GARBAG(IGAR15+300),RESMS1(1))
      EQUIVALENCE (GARBAG(IGAR15+400),FVAL(1))
      EQUIVALENCE (GARBAG(IGAR15+500),F1CDF2(1))
      EQUIVALENCE (GARBAG(IGAR15+600),RSD(1))
      EQUIVALENCE (GARBAG(IGAR16),TEMP1(1))
      EQUIVALENCE (GARBAG(IGAR17),Z(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPME'
      ISUBN2='PO  '
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *******************************************
C               **  TREAT THE MEDIAN POLISH        CASE  **
C               *******************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MEPO')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMEPO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICOM.EQ.'MEDI'.AND.IHARG(1).EQ.'POLI')THEN
        ILASTC=1
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      IFOUND='YES'
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='MEIDAN POLISH'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=2
      MAXNVA=MAXFAC+1
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      NUMFAC=NUMVAR-1
      J=0
      IMAX=NRIGHT(1)
      IF(NQ.LT.NRIGHT(1))IMAX=NQ
      DO660I=1,IMAX
        IF(ISUB(I).EQ.0)GOTO660
        J=J+1
C
        IJ=MAXN*(ICOLR(1)-1)+I
        IF(ICOLR(1).LE.MAXCOL)Y(J)=V(IJ)
        IF(ICOLR(1).EQ.MAXCP1)Y(J)=PRED(I)
        IF(ICOLR(1).EQ.MAXCP2)Y(J)=RES(I)
        IF(ICOLR(1).EQ.MAXCP3)Y(J)=YPLOT(I)
        IF(ICOLR(1).EQ.MAXCP4)Y(J)=XPLOT(I)
        IF(ICOLR(1).EQ.MAXCP5)Y(J)=X2PLOT(I)
        IF(ICOLR(1).EQ.MAXCP6)Y(J)=TAGPLO(I)
C
        DO659LL=1,NUMFAC
          ICOLT=ICOLR(LL+1)
          IJ=MAXN*(ICOLT-1)+I
          IF(ICOLT.LE.MAXCOL)F1(J,LL)=V(IJ)
          IF(ICOLT.EQ.MAXCP1)F1(J,LL)=PRED(I)
          IF(ICOLT.EQ.MAXCP2)F1(J,LL)=RES(I)
          IF(ICOLT.EQ.MAXCP3)F1(J,LL)=YPLOT(I)
          IF(ICOLT.EQ.MAXCP4)F1(J,LL)=XPLOT(I)
          IF(ICOLT.EQ.MAXCP5)F1(J,LL)=X2PLOT(I)
          IF(ICOLT.EQ.MAXCP6)F1(J,LL)=TAGPLO(I)
 659    CONTINUE
C
  660 CONTINUE
      NS=J
C
C               **************************************************
C               **  STEP 8--                                    **
C               **  PREPARE FOR ENTRANCE INTO DPMED2--          **
C               **  SET THE WEIGHT VECTOR TO UNITY THROUGHOUT.  **
C               **************************************************
C
      ISTEPN='8'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO680I=1,NS
        W(I)=1.0
  680 CONTINUE
C
C               ***********************************
C               **  STEP 9--                     **
C               **  CARRY OUT THE MEDIAN POLISH  **
C               ***********************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MEPO')THEN
        ISTEPN='9'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,711)
  711   FORMAT('***** FROM DPMEPO, AS WE ARE ABOUT TO CALL DPMEP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,712)ICOLR(1),MAXN,NS,NUMFAC
  712   FORMAT('ICOLR(1),MAXN,NS,NUMFAC = ',4I8)
        CALL DPWRST('XXX','BUG ')
        DO715I=1,NS
          WRITE(ICOUT,716)I,Y(I),(F1(I,LL),LL=1,MAXFAC),W(I)
  716     FORMAT('I,Y(I),F1(I),F2(I),F3(I),F4(I),F5(I),W(I) = ',
     1           I6,2X,7F10.5)
          CALL DPWRST('XXX','BUG ')
  715   CONTINUE
      ENDIF
C
      CALL DPMEP2(Y,F1,W,NS,NUMFAC,
     1            MAXOBV,MAXLEV,MAXFAC,
     1            B,SDB,FCUM,
     1            REPSD,REPDF,RESSD,RESDF,PRED2,RES2,ALFCDF,
     1            Y2,Z,TEMP1,
     1            F1ID,F1N,F1TYP,F1MEAN,F1EFFE,F1EFSD,Y2MED,
     1            N1,ISET,AN1,E1,SS1,RESMS1,FVAL,F1CDF2,RSD,
     1            ICAPSW,ICAPTY,IFORSW,
     1            IBUGA3,ISUBRO,IERROR)
C
C               ***************************************
C               **  STEP 10--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='10'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOLPR=MAXCP1
      ICOLRE=MAXCP2
      IREPU='ON'
      IRESU='ON'
      CALL UPDAPR(ICOLPR,ICOLRE,PRED2,RES2,PRED,RES,ISUB,NLEFT,
     1IREPU,REPSD,REPDF,IRESU,RESSD,RESDF,ALFCDF,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,ILOCN,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MEPO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMEPO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NS,NUMFAC
 9014   FORMAT('NS,NUMFAC = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMEP2(Y,F1,W,N,NUMFAC,
     1                  MAXOBV,MAXLEV,MAXFAC,
     1                  B,SDB,FCUM,
     1                  REPSD,REPDF,RESSD,RESDF,PRED2,RES2,ALFCDF,
     1                  Y2,Z,TEMP1,
     1                  F1ID,F1N,F1TYP,F1MEAN,F1EFFE,F1EFSD,Y2MED,
     1                  N1,ISET,AN1,E1,SS1,RESMS1,FVAL,F1CDF2,RSD,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  IBUGA3,ISUBRO,IERROR)
C
CCCCC JUNE, 1990.  MOVE DIMENSIONING OF Y2 AND Z TO DPMEPO.
C
C     PURPOSE--PERFORM A MULTI-WAY MEDIAN POLISH
C              FOR 1, 2, 3, 4, OR 5 FACTORS.
C              THE ASSUMED MODEL IS RESPONSE = CONSTANT + FACTOR-1 EFFECT + ...
C                                              FACTOR-NUMFAC EFFECT + ERROR
C     NOTE-- LINES NEAR 390 NEED TO BE GENERALIZED FOR
C            UNEQUAL NUMBER OF OBS PER CELL.
C     PRINTING--YES
C     SUBROUTINES NEEDED--FCDF
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 Gaithersburg, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --JULY      1979.
C     UPDATED         --FEBRUARY  1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --OCTOBER   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     1988. ADD LOFCDF
C     UPDATED         --JUNE      1990. MOVE DIMENSIONING OF Y2 AND Z
C     UPDATED         --JANUARY   1996. MAKE MAXIMUM NUMBER OF LEVELS
C                                       SETTABLE VIA PARAMETER
C                                       STATEMENT (AND PUT IN CHECKS
C                                       FOR EXCEEDING THIS MAXIMUM)
C     UPDATED         --MAY       2011. USE DPDTA1 AND DPDT5B TO PRINT
C                                       TABLES (ADDS SUPPORT FOR HTML,
C                                       LATEX, RTF OUTPUT)
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 IREP
      CHARACTER*4 ICASBL
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
CCCCC JUNE, 1990.  MOVE DIMENSIONING OF Y2 AND Z TO DPMEPO
CCCCC       INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y2(*)
      DIMENSION Y(*)
      DIMENSION Z(*)
      DIMENSION TEMP1(*)
      DIMENSION W(*)
      DIMENSION B(*)
      DIMENSION SDB(*)
      DIMENSION FCUM(*)
      DIMENSION PRED2(*)
      DIMENSION RES2(*)
      DIMENSION Y2MED(*)
      DIMENSION FVAL(*)
      DIMENSION RSD(*)
      DIMENSION AN1(*)
      DIMENSION E1(*)
      DIMENSION SS1(*)
      DIMENSION RESMS1(*)
      DIMENSION F1CDF2(*)
      DIMENSION N1(*)
      DIMENSION ISET(*)
C
      DIMENSION F1(MAXOBV,MAXLEV)
      DIMENSION F1ID(MAXLEV,MAXFAC)
      DIMENSION F1N(MAXLEV,MAXFAC)
      DIMENSION F1TYP(MAXLEV,MAXFAC)
      DIMENSION F1MEAN(MAXLEV,MAXFAC)
      DIMENSION F1EFFE(MAXLEV,MAXFAC)
      DIMENSION F1EFSD(MAXLEV,MAXFAC)
C
      PARAMETER(NUMCLI=5)
      PARAMETER(MAXLIN=2)
      PARAMETER (MAXROW=30)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*30 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      IWRITE='OFF'
      ISUBN1='DPAN'
      ISUBN2='O2  '
C
      AN=N
      J1=0
      NIOLD=0
      MAXPAS=25
      CUTOFF=0.99
      GTYP=0.0
      FITCD2=0.0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MEP2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMEP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)N,NUMFAC,MAXLEV,MAXFAC
   52   FORMAT('N,NUMFAC,MAXLEV,MAXFAC = ',4I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,Y(I),(F1(I,J),J=1,5),W(I)
   56     FORMAT('I,Y(I),F1(I),F2(I),F3(I),F4(I),F5(I),W(I) = ',
     1           I8,7E11.3)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        DO65I=1,N
          WRITE(ICOUT,66)I,(F1MEAN(I,J),J=1,5)
   66     FORMAT('I,(F1MEAN(I,J),J=1,5) = ',I8,5G15.7)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN MEIDAN POLISH--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,102)
  102   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE MEDIAN POLISH')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,103)
  103   FORMAT('      WAS LESS THAN TWO.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,104)N
  104   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NUMFAC.LT.1.OR.NUMFAC.GT.MAXFAC)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,132)
  132   FORMAT('      THE NUMBER OF FACTORS FOR THE MEDIAN POLISH MUST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,133)MAXFAC
  133   FORMAT('      BE AT LEAST 1 AND AT MOST ',I6,'.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,134)NUMFAC
  134   FORMAT('      THE ENTERED NUMBER OF FACTORS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO140I=1,N
        IF(Y(I).NE.HOLD)GOTO149
  140 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,142)
  142 FORMAT('      ALL RESPONSE VARIABLE ELEMENTS FOR THE MEDIAN ',
     1       'POLISH')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,143)HOLD
  143 FORMAT('      ARE IDENTICALLY EQUAL TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
  149 CONTINUE
C
      DO150J=1,NUMFAC
        HOLD=F1(1,J)
        DO155I=1,N
          HOLD2=F1(I,J)
          IF(HOLD2.NE.HOLD)GOTO150
  155   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,151)
  151   FORMAT('***** DIAGNOSTIC NOTE FROM MEDIAN POLISH--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,152)J
  152   FORMAT('      ALL ELEMENTS OF FACTOR ',I5,' IN THE ',
     1         'MEDIAN POLISH')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,153)HOLD
  153   FORMAT('      ARE IDENTICALLY EQUAL TO ',G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
  150 CONTINUE
C
C               ***********************************************
C               **  STEP 1.1--                               **
C               **  DETERMINE THE NUMBER OF DISTINCT VALUES  **
C               **  FOR FACTOR 1                             **
C               ***********************************************
C
CCCCC JANUARY 1996.  CHECK FOR EXCEEDING MAXIMUM NUMBER OF LEVELS
      ISTEPN='1.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1159I=1,MAXFAC
        N1(I)=0
 1159 CONTINUE
C
      DO1160K=1,NUMFAC
        N1(K)=0
        DO160I=1,N
          IF(N1(K).LE.0)GOTO180
          DO170J=1,N1(K)
            IF(F1(I,K).EQ.F1ID(J,K))GOTO160
  170     CONTINUE
  180     CONTINUE
          N1(K)=N1(K)+1
          IF(N1(K).GT.MAXLEV)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,101)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,190)MAXLEV,K
            CALL DPWRST('XXX','BUG ')
            IERROR='YES'
            GOTO9000
          ENDIF
  190     FORMAT('      THE MAXIMUM NUMBER OF LEVELS, ',I10,
     1           ' EXCEEDED FOR FACTOR ',I5)
          F1ID(N1(K),K)=F1(I,K)
  160   CONTINUE
        IF(N1(K).LE.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,165)K
  165     FORMAT('      N = 0 FOR FACTOR ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        AN1(K)=REAL(N1(K))
 1160 CONTINUE
C
C               **************************************
C               **  STEP 2--                        **
C               **  SORT THE LEVELS OF EACH FACTOR  **
C               **  SO AS TO PUT THEM IN ORDER FOR  **
C               **  PRESENTATION PURPOSES.          **
C               **************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEP2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1900K=1,NUMFAC
        CALL SORT(F1ID(1,K),N1(K),F1ID(1,K))
 1900 CONTINUE
C
C               ********************************************
C               **  STEP 3--                              **
C               **  DETERMINE IF HAVE                     **
C               **  REPLICATION WITHIN CELLS.             **
C               **  IF SO, COMPUTE (FOR EACH CELL)--      **
C               **         1) NUMBER OF OBSERVATIONS;     **
C               **         2) MEAN;                       **
C               **         3) SUM OF SQUARED DEVIATIONS.  **
C               ********************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IREP='NO'
      IREPDF=0
      REPDF=0.0
      REPSS=0.0
      REPSD=0.0
C
      K=0
      ICASBL='YES'
      DO3510ISET1=1,N1(1)
        ISET(1)=ISET1
        DO3520ISET2=1,MAX(1,N1(2))
        ISET(2)=ISET2
        DO3530ISET3=1,MAX(1,N1(3))
        ISET(3)=ISET3
        DO3540ISET4=1,MAX(1,N1(4))
        ISET(4)=ISET4
        DO3550ISET5=1,MAX(1,N1(5))
        ISET(5)=ISET5
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MEP2')THEN
            ISTEPN='3.5B'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,3511)ISET1,ISET2,ISET3,ISET4,ISET5
 3511       FORMAT('ISET1,ISET2,ISET3,ISET4,ISET5=',5I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          K=K+1
          CELLN=0.0
          CELLME=0.0
C
          NI=0
          DO3560I=1,N
            DO3565L=1,NUMFAC
              IF(F1(I,L).NE.F1ID(ISET(L),L))GOTO3560 
 3565       CONTINUE
            NI=NI+1
            Z(NI)=Y(I)
 3560     CONTINUE
C
          CELLN=REAL(NI)
          IF(NI.LE.0)GOTO3590
          IF(NI.EQ.1)THEN
            CELLME=Z(NI)
            GOTO3590
          ENDIF
          IREP='YES'
          SUM=0.0
          DO3570I=1,NI
            SUM=SUM+Z(I)
 3570     CONTINUE
          CELLME=SUM/CELLN
C
          IF(K.EQ.1)NIOLD=NI
          IF(NI.NE.NIOLD.AND.ICASBL.EQ.'YES')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
CCCCC       WRITE(ICOUT,3571)
CCCCC       CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            ICASBL='NO'
          ENDIF
          NIOLD=NI
          SUM=0.0
          DO3580I=1,NI
            SUM=SUM+(Z(I)-CELLME)**2
 3580     CONTINUE
          CELLV=SUM/(CELLN-1.0)
C
          REPSS=REPSS+SUM
          IREPDF=IREPDF+NI-1
 3590     CONTINUE
C3571     FORMAT('WARNING: UNBALANCED CASE DETECTED.  SOME ',
CCCCC1       'COMPUTATIONS MAY NOT BE ACCURATE.')
 3550   CONTINUE
 3540   CONTINUE
 3530   CONTINUE
 3520   CONTINUE
 3510 CONTINUE
C
      NUMCEL=K
      IF(IREP.EQ.'YES')THEN
        REPDF=IREPDF
        REPMS=REPSS/REPDF
        IF(REPMS.LE.0.0)REPSD=0.0
        IF(REPMS.GT.0.0)REPSD=SQRT(REPMS)
      ENDIF
C
C               ******************************
C               **  STEP 4--                **
C               **  COMPUTE THE GRAND MEAN  **
C               ******************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL MEAN(Y,N,IWRITE,GMEAN,IBUGA3,IERROR)
      CALL SD(Y,N,IWRITE,GSD,IBUGA3,IERROR)
      GVAR=GSD**2
      CALL MEDIAN(Y,N,IWRITE,TEMP1,MAXOBV,GMED,IBUGA3,IERROR)
      YMIN=Y(1)
      YMAX=Y(1)
      DO4300I=1,N
        IF(Y(I).LT.YMIN)YMIN=Y(I)
        IF(Y(I).GT.YMAX)YMAX=Y(I)
 4300 CONTINUE
      GRANGE=YMAX-YMIN
C
C               **********************************************
C               **  STEP 5.01--                             **
C               **  INITIALIZE ROW AND COLUMN MEDIANS TO 0  **
C               **********************************************
C
      ISTEPN='5.01'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO4500I=1,N
        RES2(I)=Y(I)
 4500 CONTINUE
C
      DO4510L=1,NUMFAC
        DO4520J=1,N1(L)
          F1EFFE(J,L)=0.0
 4520   CONTINUE
 4510 CONTINUE
C
C               ******************************************
C               **  STEP 5.02--                         **
C               **  COMPUTE THE NUMBER OF OBSERVATIONS  **
C               **  IN EACH LEVEL OF EACH VARIABLE      **
C               ******************************************
C
      ISTEPN='5.02'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO4690K=1,NUMFAC
        DO4600J=1,N1(K)
          SUM1=0.0
          DO4620I=1,N
            IF(F1(I,K).EQ.F1ID(J,K))THEN
              SUM1=SUM1+1.0
            ENDIF
 4620     CONTINUE
          F1N(J,K)=SUM1
 4600   CONTINUE
 4690 CONTINUE
C
C               *******************************************************
C               **  STEP 5.03--                                      **
C               **  DEFINE THE ITERATION LOOP FOR THE MEDIAN POLISH  **
C               *******************************************************
C
      ISTEPN='5.03'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO5000IPASS=1,MAXPAS
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MEP2')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,5011)
 5011     FORMAT('******************************')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,5012)IPASS
 5012     FORMAT('AT BEGINNING OF PASS ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,5011)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C               ***********************************************
C               **  STEP 5.1--                               **
C               **  FOR THIS PASS--                          **
C               **  DETERMINE (FOR EACH LEVEL OF FACTOR 1)   **
C               **      1) UPDATED MEDIAN;                   **
C               **      2) UPDATED RESIDUALS                 **
C               ***********************************************
C
        ISTEPN='5.1'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        DO5100L=1,NUMFAC
          DO5110J=1,N1(L)
C
            K=0
            DO5120I=1,N
              IF(F1(I,L).EQ.F1ID(J,L))THEN
                K=K+1
                Y2(K)=RES2(I)
              ENDIF
 5120       CONTINUE
            CALL MEDIAN(Y2,K,IWRITE,TEMP1,MAXOBV,Y2MED(J),IBUGA3,IERROR)
            F1EFFE(J,L)=F1EFFE(J,L)+Y2MED(J)
C
            DO5140I=1,N
              IF(F1(I,L).EQ.F1ID(J,L))THEN
                RES2(I)=RES2(I)-Y2MED(J)
              ENDIF
 5140       CONTINUE
C
 5110     CONTINUE
C
          IF(L.EQ.1)THEN
            Y3MED=0.0
            IF(NUMFAC.GE.2.AND.IPASS.GE.2)
     1      CALL MEDIAN(F1EFFE(1,2),N1(2),IWRITE,TEMP1,MAXOBV,Y3MED,
     1                  IBUGA3,IERROR)
            GTYP=GTYP+Y3MED
C
            DO5160J=1,N1(2)
              F1EFFE(J,2)=F1EFFE(J,2)-Y3MED
 5160       CONTINUE
          ELSE
            CALL MEDIAN(F1EFFE(1,1),N1(1),IWRITE,TEMP1,MAXOBV,Y3MED,
     1                  IBUGA3,IERROR)
            GTYP=GTYP+Y3MED
C
            DO5165J=1,N1(1)
              F1EFFE(J,1)=F1EFFE(J,1)-Y3MED
 5165       CONTINUE
          ENDIF
C
          DO5170J=1,N1(L)
            F1TYP(J,L)=GTYP+F1EFFE(J,L)
 5170     CONTINUE
C
          IF(IBUGA3.EQ.'ON'.OR. ISUBRO.EQ.'MEP2')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,5181)L
 5181       FORMAT('***** AFTER THE SWEEP FOR FACTOR ',I1,'--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            DO5182I=1,N
              WRITE(ICOUT,5183)I,RES2(I)
 5183         FORMAT('I,RES2(I)  = ',I8,G15.7)
              CALL DPWRST('XXX','BUG ')
 5182       CONTINUE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            DO5184J=1,N1(L)
              WRITE(ICOUT,5185)J,F1EFFE(J,L)
 5185         FORMAT('J,F1EFFE(J,L) = ',I8,G15.7)
              CALL DPWRST('XXX','BUG ')
 5184       CONTINUE
            NFACT=L
            IF(L.EQ.1)NFACT=2
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            DO5196J=1,N1(NFACT)
              WRITE(ICOUT,5197)J,NFACT,F1EFFE(J,NFACT)
 5197         FORMAT('J,FACTOR,F1EFFE(J,NFACT) = ',2I8,G15.7)
              CALL DPWRST('XXX','BUG ')
 5196       CONTINUE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,5188)GTYP
 5188       FORMAT('GTYP       = ',8X,G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 5100   CONTINUE
C
C               *************************************************************
C               **  STEP 5.6--                                             **
C               **  DETERMINE IF THE CHANGE IN THE  RESIDUALS              **
C               **  (FROM THIS PASS AS COMPARED TO THE PREVIOUS PASS)      **
C               **  IS SO SMALL THAT THE ITERATIONS SHOULD BE TERMINATED.  **
C               *************************************************************
C
        ISTEPN='5.6'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        SUM=0.0
        DO5810I=1,N
          SUM=SUM+ABS(RES2(I))
 5810   CONTINUE
        AARES=SUM/AN
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MEP2')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,5811)IPASS
 5811     FORMAT('***** AT THE CLOSE OF PASS ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,5812)IPASS,AN,SUM,AARES,AARESO
 5812     FORMAT('IPASS,AN,SUM,AARES,AARESO = ',I8,4E15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(AARES.LE.0.0)GOTO5900
C
        IF(IPASS.EQ.1)THEN
          AARESO=AARES
          GOTO5000
        ENDIF
C
        RATIO=AARES/AARESO
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MEP2')THEN
          WRITE(ICOUT,5816)IPASS,AARES,AARESO,RATIO,CUTOFF
 5816     FORMAT('IPASS,AARES,AARESO,RATIO,CUTOFF = ',I8,4E15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(RATIO.GE.CUTOFF)GOTO5900
        AARESO=AARES
C
 5000 CONTINUE
C
 5900 CONTINUE
C
C               ******************************************
C               **  STEP 6--                            **
C               **  COMPUTE THE FOLLOWING--             **
C               **     1) PREDICTED VALUES;             **
C               **     2) RESIDUALS;                    **
C               **     3) RESIDUAL STANDARD DEVIATION;  **
C               **     4) RESIDUAL DEGREES OF FREEDOM;  **
C               **  IF HAVE REPLICATION,                **
C               **  THEN ALSO CARRY OUT                 **
C               **  THE LACK OF FIT F TEST.             **
C               ******************************************
C
      ISTEPN='6'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      RESSS=0.0
      IRESDF=0
      RESDF=0.0
      RESMS=0.0
      RESSD=0.0
      ALFCDF=(-999.99)
C
      DO6000I=1,N
        DO6200K=1,NUMFAC
          DO6100ISET1=1,N1(K)
            J1=ISET1
            IF(F1(I,K).EQ.F1ID(ISET1,K))GOTO6115
 6100     CONTINUE
 6115     CONTINUE
          E1(K)=F1EFFE(J1,K)
 6200   CONTINUE
C
        PRED2(I)=GTYP
        DO6310K=1,NUMFAC
         PRED2(I)=PRED2(I)+E1(K)
 6310   CONTINUE
C
 6000 CONTINUE
C
      IRESDF=N-1
      DO6910K=1,NUMFAC
        IRESDF=IRESDF-(N1(K)-1)
 6910 CONTINUE
      RESDF=IRESDF
C
      SUM=0.0
      DO6920I=1,N
        SUM=SUM+RES2(I)*RES2(I)
 6920 CONTINUE
      RESSS=SUM
      RESMS=RESSS/RESDF
      IF(RESMS.LE.0.0)RESSD=0.0
      IF(RESMS.GT.0.0)RESSD=SQRT(RESMS)
C
      IF(IREP.EQ.'YES')THEN
        IFITDF=IRESDF-IREPDF
        FITDF=IFITDF
        IF(IFITDF.LE.0)GOTO6990
        FITSS=RESSS-REPSS
        FITMS=FITSS/FITDF
        FITFVA=FITMS/REPMS
        CALL FCDF(FITFVA,IFITDF,IREPDF,FITCDF)
        FITCD2=100.0*FITCDF
        ALFCDF=FITCDF
      ENDIF
C
 6990 CONTINUE
C
C               ************************************************
C               **  STEP 7--                                  **
C               **  COMPUTE THE ESTIMATED STANDARD DEVIATION  **
C               **  OF THE GRAND MEAN                         **
C               **  AND THE ESTIMATED STANDARD DEVIATION      **
C               **  OF THE ESTIMATED EFFECTS.                 **
C               ************************************************
C
      ISTEPN='7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      GMEASD=0.0
      IF(N.GT.0)GMEASD=RESSD/SQRT(AN)
C
      DO7190K=1,NUMFAC
        DO7100ISET1=1,N1(K)
          ANI=F1N(ISET1,K)
          CONST=((1.0/ANI)-(1.0/AN))
          F1EFSD(ISET1,K)=0.0
          IF(CONST.GT.0.0)F1EFSD(ISET1,K)=RESSD*SQRT(CONST)
 7100   CONTINUE
 7190 CONTINUE
C
C               ********************************
C               **  STEP 8--                  **
C               **  PERFORM THE F TEST        **
C               **  TO TEST THE SIGNIFICANCE  **
C               **  OF EACH FACTOR            **
C               ********************************
C
      ISTEPN='8'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IRESDF.LE.0.OR.RESMS.LE.0.0)GOTO8900
C
      DO8190K=1,NUMFAC
C
        SUM=0.0
        DO8100J=1,N1(K)
          SUM=SUM+F1N(J,K)*F1EFFE(J,K)*F1EFFE(J,K)
 8100   CONTINUE
        SS1(K)=SUM
        IDF1=N1(K)-1
        DF1=IDF1
        RESMS1(K)=SS1(K)/DF1
        IF(RESMS1(K).LE.0.0)RSD(K)=0.0
        IF(RESMS1(K).GT.0.0)RSD(K)=SQRT(RESMS1(K))
        FVAL(K)=RESMS1(K)/RESMS
        CALL FCDF(FVAL(K),IDF1,IRESDF,FCUM(K))
        F1CDF2(K)=100.0*FCUM(K)
 8190 CONTINUE
C
 8900 CONTINUE
C
C               *************************************************
C               **  STEP 9.1--                                 **
C               **  DETERMINE THE RESIDUAL STANDARD DEVIATION  **
C               **  FOR FACTOR K ONLY MODEL.                   **
C               *************************************************
C
      ISTEPN='9.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO9190K=1,NUMFAC
        SUM=0.0
        DO9100I=1,N
        DO9110J=1,N1(K)
          J1=J
          IF(F1(I,K).EQ.F1ID(J,K))GOTO9120
 9110   CONTINUE
 9120   CONTINUE
        WMEAN=F1TYP(J1,K)
        SUM=SUM+(Y(I)-WMEAN)**2
 9100   CONTINUE
        WSS1=SUM
        WDF1=AN-AN1(K)
        WVAR1=WSS1/WDF1
        IF(WVAR1.LE.0.0)WSD1=0.0
        IF(WVAR1.GT.0.0)WSD1=SQRT(WVAR1)
        RSD(K)=WSD1
 9190 CONTINUE
C
C               ********************************************************
C               **  STEP 10--                                         **
C               **  COPY OVER INTO THE OUTPUT VECTORS B(.) AND SDB(.)--*
C               **       1) THE GRAND MEAN;                           **
C               **       2) THE ESTIMATED EFFECTS;                    **
C               **       3) THE STANDARD DEVIATIONS OF GRAND MEAN AND **
C               **          EFFECTS.                                  **
C               ********************************************************
C
      ISTEPN='10'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      K=1
      B(K)=GTYP
      SDB(K)=GMEASD
C
      DO10190L=1,NUMFAC
C
        DO10100ISET1=1,N1(L)
          K=K+1
          B(K)=F1EFFE(ISET1,L)
          SDB(K)=F1EFSD(ISET1,L)
10100   CONTINUE
10190 CONTINUE
C
C               ****************************
C               **  STEP 11--             **
C               **  WRITE EVERYTHING OUT  **
C               ****************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MEPO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     PRINT TABLES
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE(1:20)='  -Way Median Polish'
      WRITE(ITITLE(1:2),'(I2)')NUMFAC
      NCTITL=20
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Factors:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=REAL(NUMFAC)
      IDIGIT(ICNT)=0
      DO11102L=1,NUMFAC
        ICNT=ICNT+1
        ITEXT(ICNT)='Number of Levels for Factor   :'
        WRITE(ITEXT(ICNT)(29:30),'(I2)')L
        NCTEXT(ICNT)=31
        AVALUE(ICNT)=REAL(N1(L))
        IDIGIT(ICNT)=0
11102 CONTINUE
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Distinct Cells:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=REAL(NUMCEL)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Grand Mean:'
      NCTEXT(ICNT)=11
      AVALUE(ICNT)=GMEAN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Grand Median:'
      NCTEXT(ICNT)=13
      AVALUE(ICNT)=GMED
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Median Polish Typical Value:'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=GTYP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Grand Range:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=GRANGE
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Grand Standard Deviation:'
      NCTEXT(ICNT)=25
      AVALUE(ICNT)=GSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Residual Standard Deviation:'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=RESSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Residual Degrees of Freedom:'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=REAL(IRESDF)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IF(IREP.EQ.'NO')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='No Replication Case:'
        NCTEXT(ICNT)=20
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='Replication Case:'
        NCTEXT(ICNT)=17
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Replication Standard Deviation:'
        NCTEXT(ICNT)=31
        AVALUE(ICNT)=REPSD
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Replication Degrees of Freedom:'
        NCTEXT(ICNT)=31
        AVALUE(ICNT)=REAL(IREPDF)
        IDIGIT(ICNT)=0
        IF(IFITDF.LT.1)THEN
          ICNT=ICNT+1
          ITEXT(ICNT)='Lack of Fit F Test cannot be done'
          NCTEXT(ICNT)=33
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
          ICNT=ICNT+1
          ITEXT(ICNT)='because there are 0 degrees of freedom'
          NCTEXT(ICNT)=38
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
          ICNT=ICNT+1
          ITEXT(ICNT)='in the numerator of the F ratio.  This'
          NCTEXT(ICNT)=38
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
          ICNT=ICNT+1
          ITEXT(ICNT)='happens when the number of parameters'
          NCTEXT(ICNT)=37
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
          ICNT=ICNT+1
          ITEXT(ICNT)='fitted is identical to the number of'
          NCTEXT(ICNT)=36
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
          ICNT=ICNT+1
          ITEXT(ICNT)='distinct subsets.'
          NCTEXT(ICNT)=17
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
        ELSE
          ICNT=ICNT+1
          ITEXT(ICNT)='Lack of Fit F Ratio:'
          NCTEXT(ICNT)=20
          AVALUE(ICNT)=FITFVA
          IDIGIT(ICNT)=NUMDIG
          ICNT=ICNT+1
          ITEXT(ICNT)='Lack of Fit F Ratio CDF (%):'
          NCTEXT(ICNT)=28
          AVALUE(ICNT)=FITCD2
          IDIGIT(ICNT)=NUMDIG
          ICNT=ICNT+1
          ITEXT(ICNT)='Lack of Fit Degrees of Freedom 1:'
          NCTEXT(ICNT)=33
          AVALUE(ICNT)=REAL(IFITDF)
          IDIGIT(ICNT)=0
          ICNT=ICNT+1
          ITEXT(ICNT)='Lack of Fit Degrees of Freedom 2:'
          NCTEXT(ICNT)=33
          AVALUE(ICNT)=REAL(IREPDF)
          IDIGIT(ICNT)=0
        ENDIF
      ENDIF
C
      NUMROW=ICNT
      DO1105I=1,NUMROW
        NTOT(I)=15
 1105 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITLE='Estimation'
      NCTITL=10
      ITITL9=' '
      NCTIT9=0
C
      NUMCOL=5
      NUMLIN=1
C
      ITITL2(1,1)=' '
      NCTIT2(1,1)=0
      ITITL2(1,2)='Level-ID'
      NCTIT2(1,2)=8
      ITITL2(1,3)='NI'
      NCTIT2(1,3)=2
      ITITL2(1,4)='Typical Value'
      NCTIT2(1,4)=13
      ITITL2(1,5)='Effect'
      NCTIT2(1,5)=6
C
      NMAX=0
      DO23010I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=11
        IF(I.EQ.1)NTOT(I)=10
        IF(I.EQ.2)NTOT(I)=9
        IF(I.EQ.3)NTOT(I)=8
        IF(I.EQ.4)NTOT(I)=17
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        IF(I.EQ.1)ITYPCO(I)='ALPH'
        IDIGIT(I)=5
        IF(I.LE.3)IDIGIT(I)=0
23010 CONTINUE
C
      ICNT=0
      DO11590L=1,NUMFAC
        DO11595I=1,N1(L)
          ICNT=ICNT+1
          IF(I.EQ.1)THEN
            IVALUE(ICNT,1)='Factor   '
            WRITE(IVALUE(ICNT,1)(8:9),'(I2)')L
          ELSE
            IVALUE(ICNT,1)='         '
          ENDIF
          NCVALU(ICNT,1)=9
          AMAT(ICNT,2)=F1ID(I,L)
          AMAT(ICNT,3)=F1N(I,L)
          AMAT(ICNT,4)=F1TYP(I,L)
          AMAT(ICNT,5)=F1EFFE(I,L)
11595 CONTINUE
11590 CONTINUE
C
      IWHTML(1)=125
      IWHTML(2)=125
      IWHTML(3)=125
      IWHTML(4)=125
      IWHTML(5)=125
      IINC=1800
      IWRTF(1)=IINC
      IWRTF(2)=IWRTF(1)+IINC
      IWRTF(3)=IWRTF(2)+IINC
      IWRTF(4)=IWRTF(3)+IINC
      IWRTF(5)=IWRTF(4)+IINC
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
      CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITLE='Models'
      NCTITL=6
      ITITL9=' '
      NCTIT9=0
C
      NUMCOL=2
      NUMLIN=1
C
      ITITL2(1,1)='Model'
      NCTIT2(1,1)=5
      ITITL2(1,2)='Residual Standard Deviation'
      NCTIT2(1,2)=27
C
      NMAX=0
      DO24010I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='l'
        NTOT(I)=30
        IF(I.EQ.2)NTOT(I)=27
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        IF(I.EQ.1)ITYPCO(I)='ALPH'
        IDIGIT(I)=NUMDIG
24010 CONTINUE
C
      ICNT=0
      ICNT=ICNT+1
      IVALUE(ICNT,1)='Constant               Only--'
      NCVALU(ICNT,1)=30
      AMAT(ICNT,2)=GSD
      DO12827L=1,NUMFAC
        ICNT=ICNT+1
        IVALUE(ICNT,1)='Constant and Factor    Only--'
        WRITE(IVALUE(ICNT,1)(21:22),'(I2)')L
        NCVALU(ICNT,1)=30
        AMAT(ICNT,2)=RSD(L)
12827 CONTINUE
      ICNT=ICNT+1
      IVALUE(ICNT,1)='Constant and All    Factors--'
      WRITE(IVALUE(ICNT,1)(18:19),'(I2)')NUMFAC
      NCVALU(ICNT,1)=30
      AMAT(ICNT,2)=RESSD
C
      IWHTML(1)=300
      IWHTML(2)=200
      IINC3=3000
      IWRTF(1)=IINC3
      IWRTF(2)=IWRTF(1)+IINC
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
      CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITLE='Testing'
      NCTITL=7
      ITITL9=' '
      NCTIT9=0
C
      NUMCOL=4
      NUMLIN=1
C
      ITITL2(1,1)=' '
      NCTIT2(1,1)=0
      ITITL2(1,2)='Number of Levels'
      NCTIT2(1,2)=16
      ITITL2(1,3)='F Statistic'
      NCTIT2(1,3)=11
      ITITL2(1,4)='F CDF'
      NCTIT2(1,4)=5
C
      NMAX=0
      DO11610I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1)NTOT(I)=10
        IF(I.EQ.2)NTOT(I)=18
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        IF(I.EQ.1)ITYPCO(I)='ALPH'
        IF(I.EQ.4)ITYPCO(I)='ALPH'
        IDIGIT(I)=NUMDIG
        IF(I.LE.2)IDIGIT(I)=0
11610 CONTINUE
C
      ICNT=0
      DO11690L=1,NUMFAC
        ICNT=ICNT+1
        IVALUE(ICNT,1)='Factor   '
        WRITE(IVALUE(ICNT,1)(8:9),'(I2)')L
        NCVALU(ICNT,1)=9
        AMAT(ICNT,2)=N1(L)
        AMAT(ICNT,3)=FVAL(L)
        WRITE(IVALUE(ICNT,4)(1:8),'(F8.3)')F1CDF2(L)
        IVALUE(ICNT,4)(9:9)='%'
        NCVALU(ICNT,4)=9
11690 CONTINUE
C
      IWHTML(1)=125
      IWHTML(2)=125
      IWHTML(3)=125
      IWHTML(4)=125
      IINC=1800
      IWRTF(1)=IINC
      IWRTF(2)=IWRTF(1)+IINC
      IWRTF(3)=IWRTF(2)+IINC
      IWRTF(4)=IWRTF(3)+IINC
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
      CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MEP2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMEP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR,IBUGA3,IREP,N,NUMFAC
 9012   FORMAT('IERROR,IBUGA3,IREP,N,NUMFAC = ',3(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9023)REPSS,REPMS,REPSD,REPDF
 9023   FORMAT('REPSS,REPMS,REPSD,REPDF = ',4E15.7)
        CALL DPWRST('XXX','BUG ')
        DO9025I=1,N
          WRITE(ICOUT,9026)I,Y(I),F1(I,1),F1(I,2),W(I),PRED2(I),RES2(I)
 9026     FORMAT('I,Y(I),F1(I,1),F1(I,2),W(I),PRED2(I),RES2(I) = ',
     1           I8,6E11.4)
          CALL DPWRST('XXX','BUG ')
 9025   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMERG(IBUGA2,IBUGA3,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--MERGE TWO SETS OF DATA.  FOR EXAMPLE,
C
C              LET SRCN CONTN INST1N XMEAN1 XMEAN2 INST2N =
C                  SRC1 CONT1 INST1 XMEAN1 SRC2 CONT2 INST2 XMEAN2
C
C              WHERE INST1 SRC1 CONT1 XMEAN1 CONSTITUTE THE FIRST
C              DATA SET AND INST2 SRC2 CONT2 CONSTITUTE THE SECOND
C              DATA SET.  NOTE THAT THE FOLLOWING MERGE IS DONE:
C
C                   LOOP THROUGHT DATA SET 1.  FOR THE VALUES OF
C                   SRC1 AND CONT1, LOOP THROUGH DATA SET 2 AND
C                   FIND ALL ROWS THE VALUES OF SRC2 AND CONT2
C                   MATCH THE VALUES OF SRC1 AND CONT1.  THESE
C                   DEFINE A "MERGED" ROW.  THE VALUES OF
C                   INST1, XMEAN1, INST2, AND XMEAN2 ARE "CARRIED"
C                   ON THE MERGED ROW.
C
C              SO NOTE THAT WE DEFINE TWO TYPES OF VARIABLES:
C
C                   1) MATCH VARIABLES
C                   2) CARRY VARIABLES
C
C              WE ASSUME THAT BOTH SETS OF DATA HAVE THE SAME
C              "MATCH" AND "CARRY" VARIABLES.  THE NUMBER OF
C              MATCH AND CARRY VARIABLES ARE SPECIFIED BY THE
C              VARIABLES IMERMA AND IMERCA (THESE ARE DEFINED
C              BY THE "SET MERGE MATCH VARIABLES <VALUE>" AND
C              "SET MERGE CARRY VARIABLES <VALUE>".
C
C              THE NUMBER OF VARIABLES TO THE LEFT OF THE "="
C              SHOULD BE "NMATCH + 2*NCARRY" AND THE NUMBER
C              OF VARIABLES TO THE RIGHT OF THE "=" SHOULD BE
C              "2*(NMATCH + NCARRY)".
C                   
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/8
C     ORIGINAL VERSION--AUGUST   2008.
C     UPDATED         --JUNE     2009. ALLOW THE 2 SETS OF DATA ON
C                                      THE RHS TO HAVE A DIFFERENT
C                                      NUMBER OF CARRY VARIABLES
C     UPDATED         --JUNE     2009. ALLOW CASE WHERE THERE ARE
C                                      NO MATCH VARIABLES (I.E.,
C                                      EACH ROW OF SET 1 IS MERGED
C                                      WITH EACH ROW OF SET 2)
C     UPDATED         --OCTOBER  2009. ALLOW MAXIMUM OF 4 MATCH
C                                      VARIABLES
C     UPDATED         --MARCH    2010. SPECIAL CASE WHERE NUMBER OF MATCH
C                                      AND NUMBER OF CARRY VARIABLES ARE
C                                      BOTH SET TO 0.  FOR THIS CASE,
C                                      GENERATE ALL PERMUTATIONS.
C     UPDATED         --JULY     2019. MODIFY USE OF SCRATCH STORAGE
C     UPDATED         --JANUARY  2024. MODIFY USE OF EQUIVALENCE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
CCCCC PARAMETER (MAXMAT=3)
      PARAMETER (MAXMAT=4)
      PARAMETER (MAXCAR=8)
      PARAMETER (MAXLEF=MAXMAT + 2*MAXCAR)
      PARAMETER (MAXRIG=2*MAXMAT + 2*MAXCAR)
      PARAMETER (MAXRI2=MAXMAT + MAXCAR)
C
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASLE
      CHARACTER*4 ICASL7
      CHARACTER*4 IBUGQ
      CHARACTER*4 ICASEQ
C
      CHARACTER*4 NEWNAM(MAXLEF)
      CHARACTER*4 ILEFT(MAXLEF)
      CHARACTER*4 ILEF2(MAXLEF)
C
      CHARACTER*4 ITYPA(MAXRIG)
      CHARACTER*4 IHRIGH(MAXRIG)
      CHARACTER*4 IHRIG2(MAXRIG)
C
      INTEGER ILISL(MAXLEF)
      INTEGER ICOLL(MAXLEF)
      INTEGER ILOCR(MAXRIG)
      INTEGER ILISR(MAXRIG)
      INTEGER ICOLR(MAXRIG)
      INTEGER NIRIGH(MAXRIG)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZD.INC'
      INCLUDE 'DPCOHO.INC'
C
      PARAMETER (MAXOB2=MAXOBV/2)
      REAL TEMPS(MAXRIG)
      REAL YLEFT(MAXOB2,MAXLEF)
      REAL YRIGH1(MAXOB2,MAXRI2)
      REAL YRIGH2(MAXOB2,MAXRI2)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
CCCCC EQUIVALENCE (YRIGH1(1,1),Y(1))
CCCCC EQUIVALENCE (YRIGH2(1,1),GARBAG(IGAR11))
CCCCC EQUIVALENCE (YLEFT(1,1),GARBAG(IGARB1))
      EQUIVALENCE (YRIGH1(1,1),GARBAG(IGARB1))
      EQUIVALENCE (YRIGH2(1,1),GARBAG(IGAR11))
      EQUIVALENCE (YLEFT(1,1),DGARBG(IDGAR1))
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPME'
      ISUBN2='RG  '
      IBUGQ=IBUGA3
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      MINV2=2
      MINN2=2
      NQ=1
      ICNT=0
      HOLD=0.0
C
C               ******************************
C               **  TREAT THE MERGE CASE    **
C               ******************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMERG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGA2,IBUGA3
   53   FORMAT('IBUGA2,IBUGA3 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,56)NUMNAM,IMERMA,IMERCA,IMERC2
   56   FORMAT('NUMNAM,IMERMA,IMERCA,IMERC2 = ',4I8)
        CALL DPWRST('XXX','BUG ')
        DO57I=1,NUMNAM
          WRITE(ICOUT,58)I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),
     1                   IVALUE(I),VALUE(I)
   58     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),IVALUE(I)',
     1           'VALUE(I) = ',I8,2X,2A4,2X,A4,2I8,F15.7)
          CALL DPWRST('XXX','BUG ')
   57   CONTINUE
      ENDIF
C
C     ***************************************
C     **  STEP 1A-                         **
C     **  FIND THE LOCATION OF "= MERGE"   **
C     ***************************************
C
      ISTEPN='1A'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MINNA=MINV2
      MAXNA=100
      CALL CHECKA(NUMARG,MINNA,MAXNA,IANS,IWIDTH,ISUBN1,ISUBN2,
     1IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      DO100I=1,NUMARG-1
        IF(IHARG(I).EQ.'=' .AND. IHARG(I+1).EQ.'MERG')THEN
          NLEFT=I-1
          ILOCV=I+2
          GOTO109
        ENDIF
  100 CONTINUE
C
      IFOUND='NO'
      GOTO9000
C
  109 CONTINUE
      IFOUND='YES'
C
C     ************************************************
C     **  STEP 1B-                                  **
C     **  FIND THE LOCATION OF THE LAST ARGUMENT OR **
C     **  THE SUBSET/EXPCEPT/FOR CLASUE             **
C     ************************************************
C
      ISTEPN='1B'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C
      IF(ILOCV.LE.NUMARG)THEN
        DO110J=ILOCV,NUMARG
          J1=J
          IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ')GOTO111
          IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ')GOTO111
          IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')GOTO111
  110   CONTINUE
        ILOCQ=NUMARG+1
        GOTO112
  111   CONTINUE
        ILOCQ=J1
        GOTO112
  112   CONTINUE
        NQ=ILOCQ-1
C
        NRIGHT=NQ-ILOCV+1
C
      ENDIF
C
C     **********************************************************
C     **  STEP 1B-                                            **
C     **  CHECK FOR AN APPROPRIATE NUMBER OF VARIABLES ON THE **
C     **  LEFT OF THE "=" AND TO THE RIGHT OF THE "=".        **
C     **********************************************************
C
      ISTEPN='1B'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NMATCH=IMERMA
      NCARR1=IMERCA
      NCARR2=IMERC2
      IF(NMATCH.EQ.0 .AND. NCARR1.EQ.0) THEN
        NEXPLE=NLEFT
        NEXPRI=NLEFT
        IFLAGP=1
      ELSE
        NEXPLE=NMATCH + NCARR1 + NCARR2
        NEXPRI=2*NMATCH+NCARR1+NCARR2
        IFLAGP=0
      ENDIF
C
      IF(NLEFT.NE.NEXPLE)THEN
        WRITE(ICOUT,131)
  131   FORMAT('***** ERROR IN MERGE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,132)
  132   FORMAT('      THE EXPECTED NUMBER OF VARIABLES TO THE LEFT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,133)
  133   FORMAT('      OF THE "=" DOES NOT EQUAL THE ACTUAL NUMBER OF')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,134)
  134   FORMAT('      VARIABLES TO THE LEFT OF THE "=".')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,135)NLEFT
  135   FORMAT('      THE NUMBER OF VARIABLES TO THE LEFT OF THE "=" ',
     1         'IS            ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,136)NMATCH
  136   FORMAT('      THE NUMBER OF MATCH VARIABLES IS               ',
     1         '              ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,137)NCARR1
  137   FORMAT('      THE NUMBER OF CARRY VARIABLES FOR SET 1 IS     ',
     1         '              ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,138)NCARR2
  138   FORMAT('      THE NUMBER OF CARRY VARIABLES FOR SET 2 IS     ',
     1         '              ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,139)NEXPLE
  139   FORMAT('      THE EXPECTED NUMBER OF VARIABLES TO THE LEFT OF',
     1         ' THE "=" IS   ',I8)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,140)(IANS(J),J=1,MIN(100,IWIDTH))
  140     FORMAT('      COMMAND LINE--',100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NRIGHT.NE.NEXPRI)THEN
        WRITE(ICOUT,131)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,142)
  142   FORMAT('      THE EXPECTED NUMBER OF VARIABLES TO THE RIGHT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,143)
  143   FORMAT('      OF THE "=" DOES NOT EQUAL THE ACTUAL NUMBER OF')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,144)
  144   FORMAT('      VARIABLES TO THE RIGHT OF THE "=".')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,145)NLEFT
  145   FORMAT('      THE NUMBER OF VARIABLES TO THE RIGHT OF ',
     1         'THE "=" IS            ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,146)NMATCH
  146   FORMAT('      THE NUMBER OF MATCH VARIABLES IS               ',
     1         '              ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,147)NCARR1
  147   FORMAT('      THE NUMBER OF CARRY VARIABLES FOR SET 1 IS     ',
     1         '              ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,148)NCARR2
  148   FORMAT('      THE NUMBER OF CARRY VARIABLES FOR SET 2 IS     ',
     1         '              ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,149)NEXPRI
  149   FORMAT('      THE EXPECTED NUMBER OF VARIABLES TO THE RIGHT',
     1         ' OF THE "=" IS   ',I8)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,139)(IANS(J),J=1,MIN(100,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IFOUND='YES'
      ICASLE='MERG'
C
C     *******************************************************
C     **  STEP 2--                                         **
C     **  CHECK THE VARIABLE NAMES ON THE LEFT HAND SIDE.  **
C     *******************************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MAXCA2=20
      DO200I=1,NLEFT
C
        ICASEZ=I
        CALL DPMAT6(ICASL7,ICASEZ,MAXCA2,
     1              ILEFT,ILEF2,NEWNAM,ILISL,ICOLL,
     1              NUMVAL,NIOLD,
     1              IBUGA2,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MERG')THEN
          WRITE(ICOUT,211)
  211     FORMAT('AFTER CALL TO DPMAT6--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,212)ILEFT(I),ILEF2(I),NEWNAM(I),NUMNAM,
     1                  ILISL(I),NUMCOL,ICOLL(I),NIOLD
          CALL DPWRST('XXX','BUG ')
  212     FORMAT('ILEFT(I),ILEFT(I),NEWNAM(I),NUMNAM,ILISL(I),',
     1           'NUMCOL,ICOLL(I),NIOLD = ',A4,A4,2X,A4,2X,5I8)
        ENDIF
C
  200 CONTINUE
C
C     *******************************************************
C     **  STEP 3--                                         **
C     **  CHECK THE VARIABLE NAMES ON THE RIGHT HAND SIDE. **
C     *******************************************************
C
      ISTEPN='3'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MAXCAS=2*NMATCH+NCARR1 + NCARR2
      IF(IFLAGP.EQ.1)MAXCAS=NRIGHT
      ILOCR(1)=ILOCV
      DO300I=2,MAXCAS
        ILOCR(I)=ILOCR(I-1)+1
        ITYPA(I)='VARI'
        TEMPS(I)=-999.0
        ILISR(I)=-999
        ICOLR(I)=-999
        NIRIGH(I)=-999
  300 CONTINUE
C
      IFLAG1=0
      IPART2=NMATCH+NCARR1+1
      IF(IFLAGP.EQ.1)IPART2=0
      DO310I=1,NRIGHT
        ICASEZ=I
        CALL DPMAT7(ICASL7,ICASEZ,MAXCAS,ILOCR,
     1              IHRIGH(ICASEZ),IHRIG2(ICASEZ),
     1              ICOLR,ILISR,NIRIGH,ITYPA,TEMPS,
     1              IFLAG1,ATEMP2,ITEMP,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
C
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,301)
  301     FORMAT('AFTER DPMAT7:')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,302)ICASEZ,ICOLR(ICASEZ),ILISR(ICASEZ),
     1                    NIRIGH(ICASEZ)
  302     FORMAT('ICASEZ,ICOLR(ICASEZ),ILISR(ICASEZ),NIRIGH(ICASEZ)=',
     1           4I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(ICASEZ.GT.1 .AND. ICASEZ.LE.NMATCH+NCARR1 .AND. 
     1     IFLAGP.EQ.0)THEN
          IF(NIRIGH(ICASEZ).NE.NIRIGH(1))THEN
            IINDX=ILOCV+I-1
            WRITE(ICOUT,131)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,312)IHARG(IINDX),IHARG2(IINDX)
  312       FORMAT('      THE NUMBER OF OBSERVATIONS FOR VARIABLE ',
     1             A4,A4)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,313)IHARG(ILOCV),IHARG2(ILOCV)
  313       FORMAT('      DOES NOT EQUAL THE NUMBER OF OBSERVATIONS ',
     1             'FOR VARIABLE ',A4,A4,'.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,314)IHARG(IINDX),IHARG2(IINDX),NIRIGH(ICASEZ)
  314       FORMAT('      VARIABLE ',A4,A4,' HAS ',I8,
     1             ' OBSERVATIONS.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,314)IHARG(ILOCV),IHARG2(ILOCV),NIRIGH(1)
            CALL DPWRST('XXX','BUG ')
            IF(IWIDTH.GE.1)THEN
              WRITE(ICOUT,139)(IANS(J),J=1,MIN(100,IWIDTH))
              CALL DPWRST('XXX','BUG ')
            ENDIF
            IERROR='YES'
            GOTO9000
          ENDIF
        ELSEIF(ICASEZ.GT.IPART2 .AND. IFLAGP.EQ.0)THEN
          IF(NIRIGH(ICASEZ).NE.NIRIGH(IPART2))THEN
            IINDX=ILOCV+I-1
            IINDX2=IPART2+ILOCV
            WRITE(ICOUT,131)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,312)IHARG(IINDX),IHARG2(IINDX)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,313)IHARG(IINDX2),IHARG2(IINDX2)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,314)IHARG(IINDX),IHARG2(IINDX),NIRIGH(ICASEZ)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,314)IHARG(IINDX2),IHARG2(IINDX2),NIRIGH(IPART2)
            CALL DPWRST('XXX','BUG ')
            IF(IWIDTH.GE.1)THEN
              WRITE(ICOUT,139)(IANS(J),J=1,MIN(100,IWIDTH))
              CALL DPWRST('XXX','BUG ')
            ENDIF
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
  310 CONTINUE
C
C     **********************************************
C     **  STEP 4--                                **
C     **  CHECK TO SEE THE TYPE CASE--            **
C     **    1) UNQUALIFIED (THAT IS, FULL);       **
C     **    2) SUBSET/EXCEPT; OR                  **
C     **    3) FOR.                               **
C     **********************************************
C
      ISTEPN='4'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO490
      DO400J=1,NUMARG
      J1=J
      IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ')GOTO410
      IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ')GOTO410
      IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')GOTO420
  400 CONTINUE
      GOTO490
  410 CONTINUE
      ICASEQ='SUBS'
      ILOCQ=J1
      GOTO490
  420 CONTINUE
      ICASEQ='FOR'
      ILOCQ=J1
      GOTO490
  490 CONTINUE
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')THEN
        WRITE(ICOUT,491)NUMARG,ILOCQ,IPART2
  491   FORMAT('NUMARG,ILOCQ,IPART2 = ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     *****************************************************
C     **  STEP 5--                                       **
C     **  BRANCH TO THE APPROPRIATE SUBCASE; THEN        **
C     **  CREATE THE MATRICES FOR TWO SETS OF DATA.      **
C     *****************************************************
C
      ISTEPN='5'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,501)N,ILOCQ-1
  501   FORMAT('N,ILOCQ-1 = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFLAGP.EQ.1)THEN
        NTEMP=NIRIGH(1)
        DO506I=1,NRIGHT
          NTEMP=MAX(NTEMP,NIRIGH(I))
  506   CONTINUE
        NTEMP1=NTEMP
        NTEMP2=0
        NTEMP9=NRIGHT
      ELSE
        NTEMP1=NIRIGH(1)
        NTEMP2=NIRIGH(IPART2)
        NTEMP=MAX(NTEMP1,NTEMP2)
        NTEMP9=NMATCH+NCARR1
      ENDIF
C
      IF(ICASEQ.EQ.'FULL' .OR. IFLAGP.EQ.1)GOTO510
      IF(ICASEQ.EQ.'SUBS')GOTO520
      IF(ICASEQ.EQ.'FOR')GOTO530
C
  510 CONTINUE
      DO515I=1,NTEMP
      ISUB(I)=1
  515 CONTINUE
      NQZ=NTEMP
      GOTO550
C
  520 CONTINUE
      NIOLD=NTEMP
CCCCC CALL DPSUB2(NIOLD,ILOCS,NSTEMP,IBUGQ,IERROR)
      CALL DPSUBS(NIOLD,ILOCS,NSTEMP,IBUGQ,IERROR)
      NQZ=NIOLD
      GOTO550
C
  530 CONTINUE
      NIOLD=NTEMP
      CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,
     1NLOCAL,ILOCS,NSTEMP,IBUGQ,IERROR)
      NQZ=NFOR
      GOTO550
C
  550 CONTINUE
      J=0
      DO560I=1,NTEMP1
        IF(ISUB(I).EQ.0)GOTO560
        J=J+1
C
C       2024/01: CHECK THAT J <= MAXOB2
C
        IF(J.GT.MAXOB2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,131)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,562)MAXOB2
  562     FORMAT('      MAXIMUM NUMBER OF OUTPUT ROWS (',I10,
     1           ') EXCEEDED.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        DO570JJ=1,NTEMP9
          K=ICOLR(JJ)
          IJ=MAXN*(K-1)+I
          IF(K.LE.MAXCOL)YRIGH1(J,JJ)=V(IJ)
          IF(K.EQ.MAXCP1)YRIGH1(J,JJ)=PRED(I)
          IF(K.EQ.MAXCP2)YRIGH1(J,JJ)=RES(I)
          IF(K.EQ.MAXCP3)YRIGH1(J,JJ)=YPLOT(I)
          IF(K.EQ.MAXCP4)YRIGH1(J,JJ)=XPLOT(I)
          IF(K.EQ.MAXCP5)YRIGH1(J,JJ)=X2PLOT(I)
          IF(K.EQ.MAXCP6)YRIGH1(J,JJ)=TAGPLO(I)
  570   CONTINUE
  560 CONTINUE
      NS1=J
C
      IF(IFLAGP.EQ.1)GOTO669
      J=0
      DO660I=1,NTEMP2
        IF(ISUB(I).EQ.0)GOTO660
        J=J+1
C
C       2024/01: CHECK THAT J <= MAXOB2
C
        IF(J.GT.MAXOB2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,131)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,562)MAXOB2
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        DO670JJ=1,NMATCH+NCARR2
          JJTEMP=NMATCH+NCARR1+JJ
          K=ICOLR(JJTEMP)
          IJ=MAXN*(K-1)+I
          IF(K.LE.MAXCOL)YRIGH2(J,JJ)=V(IJ)
          IF(K.EQ.MAXCP1)YRIGH2(J,JJ)=PRED(I)
          IF(K.EQ.MAXCP2)YRIGH2(J,JJ)=RES(I)
          IF(K.EQ.MAXCP3)YRIGH2(J,JJ)=YPLOT(I)
          IF(K.EQ.MAXCP4)YRIGH2(J,JJ)=XPLOT(I)
          IF(K.EQ.MAXCP5)YRIGH2(J,JJ)=X2PLOT(I)
          IF(K.EQ.MAXCP6)YRIGH2(J,JJ)=TAGPLO(I)
  670   CONTINUE
  660 CONTINUE
      NS2=J
  669 CONTINUE
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,691)
  691   FORMAT('***** FROM DPMERG, AFTER FORMING RHS MATRICES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,692)NTEMP1,NTEMP2,NTEMP,NS1,NS2
  692   FORMAT('NTEMP1,NTEMP2,NTEMP,NS1,NS2 = ',5(I8,2X))
        CALL DPWRST('XXX','BUG ')
        NTEMP8=NMATCH+NCARR1+NCARR2
        IF(IFLAGP.EQ.1)NTEMP8=NRIGHT
        DO693I=1,NTEMP8
          WRITE(ICOUT,694)I,ICOLR(I),ILOCR(I)
  694     FORMAT('I,ICOLR(I),ILOCR(I) = ',3(I8,2X))
          CALL DPWRST('XXX','BUG ')
  693   CONTINUE
        DO695I=1,NS1
          WRITE(ICOUT,696)I,(YRIGH1(I,JJ),JJ=1,NTEMP9)
  696     FORMAT(I8,20(G15.7))
          CALL DPWRST('XXX','BUG ')
  695   CONTINUE
        IF(IFLAGP.EQ.0)THEN
          DO697I=1,NS2
            WRITE(ICOUT,696)I,(YRIGH2(I,JJ),JJ=1,NMATCH+NCARR2)
            CALL DPWRST('XXX','BUG ')
  697     CONTINUE
        ENDIF
      ENDIF
C
C               ******************************************************
C               **  STEP 6--                                        **
C               **  CARRY OUT THE MERGE                             **
C               ******************************************************
C
      ISTEPN='6'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFLAGP.EQ.1)THEN
C
        ISTEPN='6A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(NRIGHT.EQ.1)THEN
          DO6010I=1,NIRIGH(1)
            YLEFT(I,1)=YRIGH1(I,1)
 6010     CONTINUE
          NINEW=NIRIGH(1)
        ELSEIF(NRIGHT.EQ.2)THEN
          ICNT=0
          DO6110ISET1=1,NIRIGH(1)
            AHOLD1=YRIGH1(ISET1,1)
            DO6120ISET2=1,NIRIGH(2)
              AHOLD2=YRIGH1(ISET2,2)
              ICNT=ICNT+1
C
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)THEN
                WRITE(ICOUT,131)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6121)
 6121           FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE ',
     1                 'RIGHT HAND SIDE')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6123)MAXN
 6123           FORMAT('      HAS JUST EXCEEDED THE MAXIMUM ',
     1                 'ALLOWABLE (',I8,')')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
              YLEFT(ICNT,1)=AHOLD1
              YLEFT(ICNT,2)=AHOLD2
 6120       CONTINUE
 6110     CONTINUE
          NINEW=ICNT
        ELSEIF(NRIGHT.EQ.3)THEN
          ICNT=0
          DO6210ISET1=1,NIRIGH(1)
            AHOLD1=YRIGH1(ISET1,1)
            DO6220ISET2=1,NIRIGH(2)
              AHOLD2=YRIGH1(ISET2,2)
              DO6230ISET3=1,NIRIGH(3)
              AHOLD3=YRIGH1(ISET3,3)
              ICNT=ICNT+1
C
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)THEN
                WRITE(ICOUT,131)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6231)
 6231           FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE ',
     1                 'RIGHT HAND SIDE')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6233)MAXN
 6233           FORMAT('      HAS JUST EXCEEDED THE MAXIMUM ',
     1                 'ALLOWABLE (',I8,')')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
              YLEFT(ICNT,1)=AHOLD1
              YLEFT(ICNT,2)=AHOLD2
              YLEFT(ICNT,3)=AHOLD3
 6230       CONTINUE
 6220       CONTINUE
 6210     CONTINUE
          NINEW=ICNT
        ELSEIF(NRIGHT.EQ.4)THEN
          ICNT=0
          DO6310ISET1=1,NIRIGH(1)
            AHOLD1=YRIGH1(ISET1,1)
            DO6320ISET2=1,NIRIGH(2)
              AHOLD2=YRIGH1(ISET2,2)
              DO6330ISET3=1,NIRIGH(3)
              AHOLD3=YRIGH1(ISET3,3)
              DO6340ISET4=1,NIRIGH(4)
              AHOLD4=YRIGH1(ISET4,4)
              ICNT=ICNT+1
C
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)THEN
                WRITE(ICOUT,131)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6341)
 6341           FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE ',
     1                 'RIGHT HAND SIDE')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6343)MAXN
 6343           FORMAT('      HAS JUST EXCEEDED THE MAXIMUM ',
     1                 'ALLOWABLE (',I8,')')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
              YLEFT(ICNT,1)=AHOLD1
              YLEFT(ICNT,2)=AHOLD2
              YLEFT(ICNT,3)=AHOLD3
              YLEFT(ICNT,4)=AHOLD4
 6340       CONTINUE
 6330       CONTINUE
 6320       CONTINUE
 6310     CONTINUE
          NINEW=ICNT
        ELSEIF(NRIGHT.EQ.5)THEN
          ICNT=0
          DO6410ISET1=1,NIRIGH(1)
            AHOLD1=YRIGH1(ISET1,1)
            DO6420ISET2=1,NIRIGH(2)
              AHOLD2=YRIGH1(ISET2,2)
              DO6430ISET3=1,NIRIGH(3)
              AHOLD3=YRIGH1(ISET3,3)
              DO6440ISET4=1,NIRIGH(4)
              AHOLD4=YRIGH1(ISET3,4)
              DO6450ISET5=1,NIRIGH(5)
              AHOLD5=YRIGH1(ISET5,5)
              ICNT=ICNT+1
C
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)THEN
                WRITE(ICOUT,131)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6451)
 6451           FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE ',
     1                 'RIGHT HAND SIDE')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6453)MAXN
 6453           FORMAT('      HAS JUST EXCEEDED THE MAXIMUM ',
     1                 'ALLOWABLE (',I8,')')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
              YLEFT(ICNT,1)=AHOLD1
              YLEFT(ICNT,2)=AHOLD2
              YLEFT(ICNT,3)=AHOLD3
              YLEFT(ICNT,4)=AHOLD4
              YLEFT(ICNT,5)=AHOLD5
 6450       CONTINUE
 6440       CONTINUE
 6430       CONTINUE
 6420       CONTINUE
 6410     CONTINUE
          NINEW=ICNT
        ELSEIF(NRIGHT.EQ.6)THEN
          ICNT=0
          DO6510ISET1=1,NIRIGH(1)
            AHOLD1=YRIGH1(ISET1,1)
            DO6520ISET2=1,NIRIGH(2)
              AHOLD2=YRIGH1(ISET2,2)
              DO6530ISET3=1,NIRIGH(3)
              AHOLD3=YRIGH1(ISET3,3)
              DO6540ISET4=1,NIRIGH(4)
              AHOLD4=YRIGH1(ISET3,4)
              DO6550ISET5=1,NIRIGH(5)
              AHOLD5=YRIGH1(ISET5,5)
              DO6560ISET6=1,NIRIGH(6)
              AHOLD6=YRIGH1(ISET6,6)
              ICNT=ICNT+1
C
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)THEN
                WRITE(ICOUT,131)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6561)
 6561           FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE ',
     1                 'RIGHT HAND SIDE')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6563)MAXN
 6563           FORMAT('      HAS JUST EXCEEDED THE MAXIMUM ',
     1                 'ALLOWABLE (',I8,')')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
              YLEFT(ICNT,1)=AHOLD1
              YLEFT(ICNT,2)=AHOLD2
              YLEFT(ICNT,3)=AHOLD3
              YLEFT(ICNT,4)=AHOLD4
              YLEFT(ICNT,5)=AHOLD5
              YLEFT(ICNT,6)=AHOLD6
 6560       CONTINUE
 6550       CONTINUE
 6540       CONTINUE
 6530       CONTINUE
 6520       CONTINUE
 6510     CONTINUE
          NINEW=ICNT
        ELSEIF(NRIGHT.EQ.7)THEN
          ICNT=0
          DO6610ISET1=1,NIRIGH(1)
            AHOLD1=YRIGH1(ISET1,1)
            DO6620ISET2=1,NIRIGH(2)
              AHOLD2=YRIGH1(ISET2,2)
              DO6630ISET3=1,NIRIGH(3)
              AHOLD3=YRIGH1(ISET3,3)
              DO6640ISET4=1,NIRIGH(4)
              AHOLD4=YRIGH1(ISET3,4)
              DO6650ISET5=1,NIRIGH(5)
              AHOLD5=YRIGH1(ISET5,5)
              DO6660ISET6=1,NIRIGH(6)
              AHOLD6=YRIGH1(ISET6,6)
              DO6670ISET7=1,NIRIGH(7)
              AHOLD7=YRIGH1(ISET7,7)
              ICNT=ICNT+1
C
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)THEN
                WRITE(ICOUT,131)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6671)
 6671           FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE ',
     1                 'RIGHT HAND SIDE')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6673)MAXN
 6673           FORMAT('      HAS JUST EXCEEDED THE MAXIMUM ',
     1                 'ALLOWABLE (',I8,')')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
              YLEFT(ICNT,1)=AHOLD1
              YLEFT(ICNT,2)=AHOLD2
              YLEFT(ICNT,3)=AHOLD3
              YLEFT(ICNT,4)=AHOLD4
              YLEFT(ICNT,5)=AHOLD5
              YLEFT(ICNT,6)=AHOLD6
              YLEFT(ICNT,7)=AHOLD7
 6670       CONTINUE
 6660       CONTINUE
 6650       CONTINUE
 6640       CONTINUE
 6630       CONTINUE
 6620       CONTINUE
 6610     CONTINUE
          NINEW=ICNT
        ELSEIF(NRIGHT.EQ.8)THEN
          ICNT=0
          DO6710ISET1=1,NIRIGH(1)
            AHOLD1=YRIGH1(ISET1,1)
            DO6720ISET2=1,NIRIGH(2)
              AHOLD2=YRIGH1(ISET2,2)
              DO6730ISET3=1,NIRIGH(3)
              AHOLD3=YRIGH1(ISET3,3)
              DO6740ISET4=1,NIRIGH(4)
              AHOLD4=YRIGH1(ISET3,4)
              DO6750ISET5=1,NIRIGH(5)
              AHOLD5=YRIGH1(ISET5,5)
              DO6760ISET6=1,NIRIGH(6)
              AHOLD6=YRIGH1(ISET6,6)
              DO6770ISET7=1,NIRIGH(7)
              AHOLD7=YRIGH1(ISET7,7)
              DO6780ISET8=1,NIRIGH(8)
              AHOLD8=YRIGH1(ISET8,8)
              ICNT=ICNT+1
C
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)THEN
                WRITE(ICOUT,131)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6781)
 6781           FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE ',
     1                 'RIGHT HAND SIDE')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6783)MAXN
 6783           FORMAT('      HAS JUST EXCEEDED THE MAXIMUM ',
     1                 'ALLOWABLE (',I8,')')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
              YLEFT(ICNT,1)=AHOLD1
              YLEFT(ICNT,2)=AHOLD2
              YLEFT(ICNT,3)=AHOLD3
              YLEFT(ICNT,4)=AHOLD4
              YLEFT(ICNT,5)=AHOLD5
              YLEFT(ICNT,6)=AHOLD6
              YLEFT(ICNT,7)=AHOLD7
              YLEFT(ICNT,8)=AHOLD8
 6780       CONTINUE
 6770       CONTINUE
 6760       CONTINUE
 6750       CONTINUE
 6740       CONTINUE
 6730       CONTINUE
 6720       CONTINUE
 6710     CONTINUE
          NINEW=ICNT
        ELSEIF(NRIGHT.EQ.9)THEN
          ICNT=0
          DO6810ISET1=1,NIRIGH(1)
            AHOLD1=YRIGH1(ISET1,1)
            DO6820ISET2=1,NIRIGH(2)
              AHOLD2=YRIGH1(ISET2,2)
              DO6830ISET3=1,NIRIGH(3)
              AHOLD3=YRIGH1(ISET3,3)
              DO6840ISET4=1,NIRIGH(4)
              AHOLD4=YRIGH1(ISET3,4)
              DO6850ISET5=1,NIRIGH(5)
              AHOLD5=YRIGH1(ISET5,5)
              DO6860ISET6=1,NIRIGH(6)
              AHOLD6=YRIGH1(ISET6,6)
              DO6870ISET7=1,NIRIGH(7)
              AHOLD7=YRIGH1(ISET7,7)
              DO6880ISET8=1,NIRIGH(8)
              AHOLD8=YRIGH1(ISET8,8)
              DO6890ISET9=1,NIRIGH(9)
              AHOLD9=YRIGH1(ISET9,9)
              ICNT=ICNT+1
C
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)THEN
                WRITE(ICOUT,131)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6891)
 6891           FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE ',
     1                 'RIGHT HAND SIDE')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6893)MAXN
 6893           FORMAT('      HAS JUST EXCEEDED THE MAXIMUM ',
     1                 'ALLOWABLE (',I8,')')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
              YLEFT(ICNT,1)=AHOLD1
              YLEFT(ICNT,2)=AHOLD2
              YLEFT(ICNT,3)=AHOLD3
              YLEFT(ICNT,4)=AHOLD4
              YLEFT(ICNT,5)=AHOLD5
              YLEFT(ICNT,6)=AHOLD6
              YLEFT(ICNT,7)=AHOLD7
              YLEFT(ICNT,8)=AHOLD8
              YLEFT(ICNT,9)=AHOLD9
 6890       CONTINUE
 6880       CONTINUE
 6870       CONTINUE
 6860       CONTINUE
 6850       CONTINUE
 6840       CONTINUE
 6830       CONTINUE
 6820       CONTINUE
 6810     CONTINUE
          NINEW=ICNT
        ELSEIF(NRIGHT.EQ.10)THEN
          ICNT=0
          DO6910ISET1=1,NIRIGH(1)
            AHOLD1=YRIGH1(ISET1,1)
            DO6920ISET2=1,NIRIGH(2)
              AHOLD2=YRIGH1(ISET2,2)
              DO6930ISET3=1,NIRIGH(3)
              AHOLD3=YRIGH1(ISET3,3)
              DO6940ISET4=1,NIRIGH(4)
              AHOLD4=YRIGH1(ISET3,4)
              DO6950ISET5=1,NIRIGH(5)
              AHOLD5=YRIGH1(ISET5,5)
              DO6960ISET6=1,NIRIGH(6)
              AHOLD6=YRIGH1(ISET6,6)
              DO6970ISET7=1,NIRIGH(7)
              AHOLD7=YRIGH1(ISET7,7)
              DO6980ISET8=1,NIRIGH(8)
              AHOLD8=YRIGH1(ISET8,8)
              DO6990ISET9=1,NIRIGH(9)
              AHOLD9=YRIGH1(ISET9,9)
              DO6991ISET10=1,NIRIGH(10)
              AHOL10=YRIGH1(ISET10,10)
              ICNT=ICNT+1
C
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)THEN
                WRITE(ICOUT,131)
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6996)
 6996           FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE ',
     1                 'RIGHT HAND SIDE')
                CALL DPWRST('XXX','BUG ')
                WRITE(ICOUT,6998)MAXN
 6998           FORMAT('      HAS JUST EXCEEDED THE MAXIMUM ',
     1                 'ALLOWABLE (',I8,')')
                CALL DPWRST('XXX','BUG ')
                IERROR='YES'
                GOTO9000
              ENDIF
C
              YLEFT(ICNT,1)=AHOLD1
              YLEFT(ICNT,2)=AHOLD2
              YLEFT(ICNT,3)=AHOLD3
              YLEFT(ICNT,4)=AHOLD4
              YLEFT(ICNT,5)=AHOLD5
              YLEFT(ICNT,6)=AHOLD6
              YLEFT(ICNT,7)=AHOLD7
              YLEFT(ICNT,8)=AHOLD8
              YLEFT(ICNT,9)=AHOLD9
              YLEFT(ICNT,10)=AHOL10
 6991       CONTINUE
 6990       CONTINUE
 6980       CONTINUE
 6970       CONTINUE
 6960       CONTINUE
 6950       CONTINUE
 6940       CONTINUE
 6930       CONTINUE
 6920       CONTINUE
 6910     CONTINUE
          NINEW=ICNT
        ELSE
          WRITE(ICOUT,131)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6091)
 6091     FORMAT('      FOR THE SPECIAL CASE OF THE MERGE COMMAND ',
     1           'WITH ZERO MATCH AND')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6092)
 6092     FORMAT('      ZERO CARRY VARIABLES, THE MAXIMUM NUMBER OF ',
     1           'VARIABLES ON THE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6093)
 6093     FORMAT('      RIGHT HAND SIDE IS ',I8,'.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,6094)NRIGHT
 6094     FORMAT('      THE NUMBER OF VARIABLES ON THE RIGHT HAND ',
     1           'SIDE IS ',I8,'.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')THEN
          WRITE(ICOUT,6098)NINEW
 6098     FORMAT('AFTER CREATING LHS: NINEW = ',I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      ELSEIF(NMATCH.EQ.0)THEN
C
        ISTEPN='6A0'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICNT=0
        DO2010I=1,NS1
          DO2020J=1,NS2
            ICNT=ICNT+1
            IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)GOTO1910
            YLEFT(ICNT,1)=HOLD
            DO2030K=1,NCARR1
              YLEFT(ICNT,K)=YRIGH1(I,K)
 2030       CONTINUE
            DO2035K=1,NCARR2
              YLEFT(ICNT,NCARR1+K)=YRIGH2(J,K)
 2035       CONTINUE
 2020     CONTINUE
 2010   CONTINUE
        NINEW=ICNT
C
      ELSEIF(NMATCH.EQ.1)THEN
C
        ISTEPN='6A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICNT=0
        DO1010I=1,NS1
          HOLD=YRIGH1(I,1)
          DO1020J=1,NS2
            IF(YRIGH2(J,1).EQ.HOLD)THEN
              ICNT=ICNT+1
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)GOTO1910
              YLEFT(ICNT,1)=HOLD
              DO1030K=1,NCARR1
                YLEFT(ICNT,1+K)=YRIGH1(I,K+1)
 1030         CONTINUE
              DO1035K=1,NCARR2
                YLEFT(ICNT,1+NCARR1+K)=YRIGH2(J,K+1)
 1035         CONTINUE
            ENDIF
 1020     CONTINUE
 1010   CONTINUE
        NINEW=ICNT
C
      ELSEIF(NMATCH.EQ.2)THEN
C
        ISTEPN='6B'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICNT=0
        DO1110I=1,NS1
          HOLD1=YRIGH1(I,1)
          HOLD2=YRIGH1(I,2)
          DO1120J=1,NS2
            IF(YRIGH2(J,1).EQ.HOLD1 .AND. YRIGH2(J,2).EQ.HOLD2)THEN
              ICNT=ICNT+1
              IF(ICNT.GT.MAXN .OR. ICNT.GT.MAXOB2)GOTO1910
              YLEFT(ICNT,1)=HOLD1
              YLEFT(ICNT,2)=HOLD2
              DO1130K=1,NCARR1
                YLEFT(ICNT,2+K)=YRIGH1(I,K+2)
 1130         CONTINUE
              DO1135K=1,NCARR2
                YLEFT(ICNT,2+NCARR1+K)=YRIGH2(J,K+2)
 1135         CONTINUE
            ENDIF
 1120     CONTINUE
 1110   CONTINUE
        NINEW=ICNT
C
      ELSEIF(NMATCH.EQ.3)THEN
C
        ISTEPN='6C'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICNT=0
        DO1210I=1,NS1
          HOLD1=YRIGH1(I,1)
          HOLD2=YRIGH1(I,2)
          HOLD3=YRIGH1(I,3)
          DO1220J=1,NS2
            IF(YRIGH2(J,1).EQ.HOLD1 .AND. YRIGH2(J,2).EQ.HOLD2 .AND.
     1         YRIGH2(J,3).EQ.HOLD3)THEN
              ICNT=ICNT+1
              IF(ICNT.GT.MAXN)GOTO1910
              YLEFT(ICNT,1)=HOLD1
              YLEFT(ICNT,2)=HOLD2
              YLEFT(ICNT,3)=HOLD3
              DO1230K=1,NCARR1
                YLEFT(ICNT,3+K)=YRIGH1(I,K+3)
 1230         CONTINUE
              DO1235K=1,NCARR2
                YLEFT(ICNT,3+NCARR1+K)=YRIGH2(J,K+3)
 1235         CONTINUE
            ENDIF
 1220     CONTINUE
 1210   CONTINUE
        NINEW=ICNT
C
      ELSEIF(NMATCH.EQ.4)THEN
C
        ISTEPN='6D'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICNT=0
        DO1310I=1,NS1
          HOLD1=YRIGH1(I,1)
          HOLD2=YRIGH1(I,2)
          HOLD3=YRIGH1(I,3)
          HOLD4=YRIGH1(I,4)
          DO1320J=1,NS2
            IF(YRIGH2(J,1).EQ.HOLD1 .AND. YRIGH2(J,2).EQ.HOLD2 .AND.
     1         YRIGH2(J,3).EQ.HOLD3 .AND. YRIGH2(J,4).EQ.HOLD4)THEN
              ICNT=ICNT+1
              IF(ICNT.GT.MAXN)GOTO1910
              YLEFT(ICNT,1)=HOLD1
              YLEFT(ICNT,2)=HOLD2
              YLEFT(ICNT,3)=HOLD3
              YLEFT(ICNT,4)=HOLD4
              DO1330K=1,NCARR1
                YLEFT(ICNT,4+K)=YRIGH1(I,K+4)
 1330         CONTINUE
              DO1335K=1,NCARR2
                YLEFT(ICNT,4+NCARR1+K)=YRIGH2(J,K+4)
 1335         CONTINUE
            ENDIF
 1320     CONTINUE
 1310   CONTINUE
        NINEW=ICNT
C
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,131)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1401)
 1401   FORMAT('      CURRENTLY A MAXIMUM OF FOUR MATCH VARIABLES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1403)
 1403   FORMAT('      IS SUPPORTED.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(ICNT.LE.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,131)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1811)
 1811   FORMAT('      NO MATCHES WERE FOUND IN THE MERGE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1813)
 1813   FORMAT('      THE MERGE WILL NOT BE DONE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      GOTO1999
C
 1910 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,131)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1911)
 1911 FORMAT('      THE MAXIMUM NUMBER OF ROWS (',I10,') HAS BEEN')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1913)
 1913 FORMAT('      EXCEEDED.  THE MERGE WILL NOT BE DONE.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1999 CONTINUE
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')THEN
        WRITE(ICOUT,1901)
 1901   FORMAT('***** FROM DPMERG, AFTER FORMING LHS MATRIX')
        CALL DPWRST('XXX','BUG ')
        NOUT=NMATCH+NCARR1+NCARR2
        IF(IFLAGP.EQ.1)NOUT=NRIGHT
        IF(NOUT.GT.20)NOUT=20
        DO1900I=1,NINEW
          WRITE(ICOUT,1902)I,(YLEFT(I,J),J=1,NOUT)
 1902     FORMAT('I,YLEFT(I,...)=',I8,20G15.7)
          CALL DPWRST('XXX','BUG ')
 1900   CONTINUE
      ENDIF
C
C               ***************************************
C               **  STEP 7--                         **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='7'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     LOOP THROUGH VARIABLES ON THE LEFT
C
      NTEMP=NMATCH + NCARR1 + NCARR2
      IF(IFLAGP.EQ.1)NTEMP=NRIGHT
      IROW1=1
      IROWN=NINEW
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')THEN
        WRITE(ICOUT,7011)IFLAGP,NTEMP,IROW1,IROWN,NINEW
 7011   FORMAT('IFLAGP,NTEMP,IROW1,IROWN,NINEW = ',5I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      DO7110I=1,NINEW
C
        DO7120J=1,NTEMP
          IJ=MAXN*(ICOLL(J)-1)+I
          IF(ICOLL(J).LE.MAXCOL)V(IJ)=YLEFT(I,J)
          IF(ICOLL(J).EQ.MAXCP1)PRED(I)=YLEFT(I,J)
          IF(ICOLL(J).EQ.MAXCP2)RES(I)=YLEFT(I,J)
          IF(ICOLL(J).EQ.MAXCP3)YPLOT(I)=YLEFT(I,J)
          IF(ICOLL(J).EQ.MAXCP4)XPLOT(I)=YLEFT(I,J)
          IF(ICOLL(J).EQ.MAXCP5)X2PLOT(I)=YLEFT(I,J)
          IF(ICOLL(J).EQ.MAXCP6)TAGPLO(I)=YLEFT(I,J)
 7120   CONTINUE
C
 7110 CONTINUE
C
       DO7130I=1,NTEMP
        IN(ILISL(I))=NINEW
 7130  CONTINUE
C
      ISTEPN='7B'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'MERG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO8100I=1,NTEMP
        IHNAME(ILISL(I))=ILEFT(I)
        IHNAM2(ILISL(I))=ILEF2(I)
        IUSE(ILISL(I))='V'
        IVALUE(ILISL(I))=ICOLL(I)
        VALUE(ILISL(I))=ICOLL(I)
        IF(NEWNAM(I).EQ.'YES')THEN
          NUMNAM=NUMNAM+1
          NUMCOL=NUMCOL+1
        ENDIF
C
        IF(IPRINT.EQ.'ON' .AND. IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
C
          WRITE(ICOUT,8111)ILEFT(I),ILEF2(I),NINEW
 8111     FORMAT('THE NUMBER OF VALUES GENERATED FOR ',
     1           'THE VARIABLE ',A4,A4,' = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IJ=MAXN*(ICOLL(I)-1)+IROW1
          IF(ICOLL(I).LE.MAXCOL)THEN
            WRITE(ICOUT,8121)ILEFT(I),ILEF2(I),V(IJ),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP1)THEN
            WRITE(ICOUT,8121)ILEFT(I),ILEF2(I),PRED(IROW1),IROW1
 8121       FORMAT('THE FIRST           COMPUTED VALUE OF ',A4,A4,
     1             ' = ',G16.7,'   (ROW ',I6,')')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP2)THEN
            WRITE(ICOUT,8121)ILEFT(I),ILEF2(I),RES(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP3)THEN
            WRITE(ICOUT,8121)ILEFT(I),ILEF2(I),YPLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP4)THEN
            WRITE(ICOUT,8121)ILEFT(I),ILEF2(I),XPLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP5)THEN
            WRITE(ICOUT,8121)ILEFT(I),ILEF2(I),X2PLOT(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP6)THEN
            WRITE(ICOUT,8121)ILEFT(I),ILEF2(I),TAGPLO(IROW1),IROW1
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IJ=MAXN*(ICOLL(I)-1)+IROWN
          IF(ICOLL(I).LE.MAXCOL.AND.NINEW.NE.1)THEN
            WRITE(ICOUT,8131)NINEW,ILEFT(I),ILEF2(I),V(IJ),IROWN
 8131       FORMAT('THE LAST (',I5,'-TH) COMPUTED VALUE OF ',A4,A4,
     1             ' = ',G16.7,'   (ROW ',I6,')')
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP1.AND.NINEW.NE.1)THEN
            WRITE(ICOUT,8131)NINEW,ILEFT(I),ILEF2(I),PRED(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP2.AND.NINEW.NE.1)THEN
            WRITE(ICOUT,8131)NINEW,ILEFT(I),ILEF2(I),RES(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP3.AND.NINEW.NE.1)THEN
            WRITE(ICOUT,8131)NINEW,ILEFT(I),ILEF2(I),YPLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP4.AND.NINEW.NE.1)THEN
            WRITE(ICOUT,8131)NINEW,ILEFT(I),ILEF2(I),XPLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP5.AND.NINEW.NE.1)THEN
            WRITE(ICOUT,8131)NINEW,ILEFT(I),ILEF2(I),X2PLOT(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ELSEIF(ICOLL(I).EQ.MAXCP6.AND.NINEW.NE.1)THEN
            WRITE(ICOUT,8131)NINEW,ILEFT(I),ILEF2(I),TAGPLO(IROWN),IROWN
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IF(NINEW.EQ.1)THEN
            WRITE(ICOUT,8132)
 8132       FORMAT('SINCE THE GENERATED SAMPLE SIZE WAS ONLY 1,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,8133)
 8133       FORMAT('THE ABOVE VALUE WAS THE SOLE VALUE COMPUTED.')
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
 8100 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'MERG')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMERG--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMESS(IBUGS2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE DATAPLOT MESSAGES
C              FOR THE ANALYST'S PERUSAL UPON
C              SIGNING ON TO DATAPLOT.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--86/1
C     ORIGINAL VERSION--DECEMBER  1977.
C     UPDATED         --JANUARY   1979.
C     UPDATED         --NOVEMBER  1980.
C     UPDATED         --JUNE      1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --DECEMBER  1985.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGS2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      INCLUDE 'DPCOPA.INC'
C
CCCCC CHARACTER*80 IFILE
      CHARACTER (LEN=MAXFNC) :: IFILE
      CHARACTER*12 ISTAT
      CHARACTER*12 IFORM
      CHARACTER*12 IACCES
      CHARACTER*12 IPROT
      CHARACTER*12 ICURST
      CHARACTER*4 IENDFI
      CHARACTER*4 IREWIN
      CHARACTER*4 ISUBN0
      CHARACTER*4 IERRFI
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*80 ISTRIN
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPME'
      ISUBN2='SS  '
      IFOUND='YES'
      IERROR='NO'
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MESS')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMESS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGS2,ISUBRO,IERROR,IMESNU
   53   FORMAT('IBUGS2,ISUBRO,IERROR,IMESNU = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,62)IMESNA
   62   FORMAT('IMESNA = ',A80)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)IMESST,IMESFO,IMESAC,IMESFO,IMESCS
   63   FORMAT('IMESST,IMESFO,IMESAC,IMESFO,IMESCS = ',4(A12,2X),A12)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **************************
C               **  STEP 11--           **
C               **  COPY OVER VARIABLES **
C               **************************
C
      ISTEPN='11'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MESS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOUNIT=IMESNU
      IFILE=IMESNA
      ISTAT=IMESST
      IFORM=IMESFO
      IACCES=IMESAC
      IPROT=IMESPR
      ICURST=IMESCS
C
      ISUBN0='MESS'
      IERRFI='NO'
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MESS')THEN
        WRITE(ICOUT,1193)ISUBN0,IERRFI,IOUNIT
 1193   FORMAT('ISUBN0,IERRFI,IOUNIT = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1194)IFILE(1:80)
 1194   FORMAT('IFILE = ',A80)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1195)ISTAT,IFORM,IACCES,IPROT,ICURST
 1195   FORMAT('ISTAT,IFORM,IACCES,IPROT,ICURST = ',4(A12,2X),A12)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *******************************************
C               **  STEP 12--                            **
C               **  CHECK TO SEE IF MESSAGE FILE EXISTS  **
C               *******************************************
C
      ISTEPN='12'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MESS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ISTAT.EQ.'NONE')GOTO9000
C
C               *********************
C               **  STEP 31--      **
C               **  OPEN THE FILE  **
C               *********************
C
      ISTEPN='31'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MESS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IREWIN='ON'
      CALL DPOPFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
      IF(IERRFI.EQ.'YES')GOTO9000
C
C               ******************************
C               **  STEP 41--               **
C               **  READ THE FILE.          **
C               **  WRITE OUT THE MESSAGES. **
C               ******************************
C
      ISTEPN='41'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MESS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ANUMLI=0.0
      READ(IOUNIT,4111,END=4190)ANUMLI
 4111 FORMAT(F10.0)
      NUMLIN=INT(ANUMLI+0.5)
C
      IF(NUMLIN.GE.1)THEN
        NMAX=80
        DO4120I=1,NUMLIN
          READ(IOUNIT,4121,END=4190)(ISTRIN(J:J),J=1,80)
 4121     FORMAT(80A1)
          CALL DPDB80(ISTRIN,JMAX,NMAX,IBUGS2,ISUBRO,IERROR)
          IF(JMAX.GE.1)THEN
            WRITE(ICOUT,4122)(ISTRIN(J:J),J=1,JMAX)
 4122       FORMAT(5X,80A1)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ENDIF
 4120   CONTINUE
      ENDIF
C
 4190 CONTINUE
C
C               ***********************
C               **  STEP 51--        **
C               **  CLOSE THE FILE.  **
C               ***********************
C
      ISTEPN='51'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MESS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IENDFI='OFF'
      IREWIN='ON'
      CALL DPCLFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1IENDFI,IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'MESS')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMESS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9028)IENDFI,IREWIN,IERRFI,JMAX
 9028   FORMAT('IENDFI,IREWIN,IERRFI,JMAX = ',2(A4,2X),A12,2X,I8)
        CALL DPWRST('XXX','BUG ')
        IF(JMAX.GE.1)THEN
          WRITE(ICOUT,9042)(ISTRIN(J:J),J=1,JMAX)
 9042     FORMAT('ISTRIN--',80A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMETE(MAXNXT,ICAPSW,IFORSW,
     1                  ISUBRO,IBUGA2,IBUGA3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT NONPARAMETRIC MEDIAN TEST TO TEST FOR
C              EQUAL MEDIANS AMONG K GROUPS.
C     EXAMPLE--MEDIAN TEST Y X
C              MEDIAN TEST Y1 Y2 Y3
C              MEDIAN TEST Y1 TO YK
C     REFERENCE--CONOVER (1999), "PRACTICAL NONPARAMETRIC STATISTICS",
C                THIRD EDITION, WILEY, PP. 218-224.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/6
C     ORIGINAL VERSION--JUNE      2011.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IMULT
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASA2
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICTMP1
      CHARACTER*4 ICTMP2
      CHARACTER*4 ICTMP3
      CHARACTER*4 IFLAGU
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZD.INC'
C
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
C
      EQUIVALENCE(GARBAG(IGARB1),TEMP1(1))
      EQUIVALENCE(GARBAG(IGARB2),TEMP2(1))
      EQUIVALENCE(GARBAG(IGARB3),TEMP3(1))
      EQUIVALENCE(GARBAG(IGARB4),TEMP4(1))
      EQUIVALENCE(DGARBG(IDGAR1),DTEMP1(1))
      EQUIVALENCE(DGARBG(IDGAR2),DTEMP2(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPME'
      ISUBN2='TE  '
      IFOUND='YES'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ******************************************
C               **  TREAT THE SQUARED RANKS TEST CASE  **
C               ******************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'METE')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPMETE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)IMULT,IKRUGS,MAXNXT
   55   FORMAT('IMULT,IKRUGS,MAXNXT = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************************
C               **  STEP 1--                                           **
C               **  EXTRACT THE COMMAND                                **
C               *********************************************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'METE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILASTZ=9999
      ICASAN='METE'
      IMULT='OFF'
C
C     LOOK FOR:
C
C          MEDIAN TEST
C          MULTIPLE
C
      DO100I=0,NUMARG-1
C
        IF(I.EQ.0)THEN
          ICTMP1=ICOM
        ELSE
          ICTMP1=IHARG(I)
        ENDIF
        ICTMP2=IHARG(I+1)
        ICTMP3=IHARG(I+2)
C
        IF(ICTMP1.EQ.'=')THEN
          IFOUND='NO'
          GOTO9000
        ELSEIF(ICTMP1.EQ.'MEDI' .AND. ICTMP2.EQ.'TEST')THEN
          IFOUND='YES'
          ICASAN='METE'
          ILASTZ=I+1
        ELSEIF(ICTMP1.EQ.'MULT')THEN
          IMULT='ON'
          ILASTZ=MAX(ILASTZ,I+1)
        ENDIF
  100 CONTINUE
C
      IF(IFOUND.EQ.'NO')GOTO9000
C
      ISHIFT=ILASTZ
      CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGA2,IERROR)
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'METE')THEN
        WRITE(ICOUT,91)ICASAN,ICASA2,IMULT,ISHIFT
   91   FORMAT('DPMETE: ICASAN,ICASA2,IMULT,ISHIFT = ',
     1         3(A4,2X),I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'METE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='MEDIAN TEST'
      MAXNA=100
      MINNVA=2
      MAXNVA=MAXSPN
      MINNA=1
      IFLAGE=1
      IFLAGM=0
      IF(IMULT.EQ.'ON')THEN
        IFLAGE=0
        IFLAGM=1
        MAXNVA=MAXSPN
      ENDIF
      MINN2=2
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'METE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,181)
  181   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,182)NQ,NUMVAR,IMULT
  182   FORMAT('NQ,NUMVAR,IMULT = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO185I=1,NUMVAR
            WRITE(ICOUT,187)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  187       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  185     CONTINUE
        ENDIF
      ENDIF
C
C               *******************************************************
C               **  STEP 3--                                         **
C               **  GENERATE THE MEDIAN         TEST FOR THE VARIOUS **
C               **  CASES                                            **
C               *******************************************************
C
      ISTEPN='3'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'METE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *****************************************
C               **  STEP 3A--                          **
C               **  CASE 1: TWO RESPONSE VARIABLES     **
C               **          WITH NO REPLICATION        **
C               *****************************************
C
      IF(IMULT.EQ.'OFF')THEN
        ISTEPN='3A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'METE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        NUMVA2=2
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y,X,X,NLOCAL,NLOCA2,NLOCA2,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
C
C               ******************************************************
C               **  STEP 3B--
C               **  PREPARE FOR ENTRANCE INTO DPMET2--
C               ******************************************************
C
        ISTEPN='3B'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'METE')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,331)
  331     FORMAT('***** FROM DPMETE, AS WE ARE ABOUT TO CALL DPMET2--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,332)NLOCAL
  332     FORMAT('NLOCAL = ',I8)
          CALL DPWRST('XXX','BUG ')
          DO335I=1,NLOCAL
            WRITE(ICOUT,336)I,Y(I),X(I)
  336       FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
  335     CONTINUE
        ENDIF
C
        CALL DPMET2(Y,X,NLOCAL,IVARN1,IVARN2,ICASA2,
     1              PMTEQU,IQUAME,MAXNXT,
     1              TEMP1,TEMP2,TEMP3,
     1              STATVA,STATCD,PVAL,IDF,NDIST,
     1              CUT0,CUT50,CUT75,CUT90,CUT95,CUT975,
     1              CUT99,CUT999,
     1              ICAPSW,ICAPTY,IFORSW,IMULT,
     1              ISUBRO,IBUGA3,IERROR)
C
C               ***************************************
C               **  STEP 8C--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
          ISTEPN='8C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'METE')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLAGU='ON'
          IFRST=.TRUE.
          ILAST=.TRUE.
          CALL DPFRT5(STATVA,STATCD,PVAL,
     1                CUT0,CUT50,CUT75,CUT90,CUT95,
     1                CUT975,CUT99,CUT999,
     1                IFLAGU,IFRST,ILAST,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
C
C               *******************************************************
C               **  STEP 4A--                                        **
C               **  CASE 2: MULTIPLE RESPONSE VARIABLES.  NOTE THAT  **
C               **          FOR MEDIAN TEST, THE MULTIPLE LABS ARE   **
C               **          CONVERTED INTO A "Y X" STACKED PAIR      **
C               **          WHERE "X" IS THE LAB-ID VARIABLE.        **
C               *******************************************************
C
      ELSEIF(IMULT.EQ.'ON')THEN
        ISTEPN='4A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'METE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        NUMVA2=NUMVAR
        CALL DPPAR8(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              TEMP1,Y,X,NLOCAL,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        NUMVAR=2
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'METE')THEN
          ISTEPN='4B'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,442)
  442     FORMAT('***** FROM THE MIDDLE  OF DPMETE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,443)ICASAN,NUMVAR,NLOCAL
  443     FORMAT('ICASAN,NUMVAR,NLOCAL = ',A4,2I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO445I=1,NLOCAL
              WRITE(ICOUT,446)I,Y(I),X(I)
  446         FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
              CALL DPWRST('XXX','BUG ')
  445       CONTINUE
          ENDIF
        ENDIF
C
        CALL DPMET2(Y,X,NLOCAL,IVARN1,IVARN2,ICASA2,
     1              PMTEQU,IQUAME,MAXNXT,
     1              TEMP1,TEMP2,TEMP3,
     1              STATVA,STATCD,PVAL,IDF,NDIST,
     1              CUT0,CUT50,CUT75,CUT90,CUT95,CUT975,
     1              CUT99,CUT999,
     1              ICAPSW,ICAPTY,IFORSW,IMULT,
     1              ISUBRO,IBUGA3,IERROR)
C
C         ***************************************
C         **  STEP 8C--                        **
C         **  UPDATE INTERNAL DATAPLOT TABLES  **
C         ***************************************
C
          ISTEPN='8C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'METE')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLAGU='ON'
          IFRST=.TRUE.
          ILAST=.TRUE.
          CALL DPFRT5(STATVA,STATCD,PVAL,
     1                CUT0,CUT50,CUT75,CUT90,CUT95,
     1                CUT975,CUT99,CUT999,
     1                IFLAGU,IFRST,ILAST,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'METE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMETE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NLOCAL,STATVA,STATCD,PVAL
 9014   FORMAT('NLOCAL,STATVA,STATCD,PVAL = ',I8,3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMET2(Y,TAG,N,IVARID,IVARI2,ICASAN,
     1                  PMTEQU,IQUAME,MAXNXT,
     1                  TEMP1,TEMP2,XIDTEM,
     1                  STATVA,STATCD,PVAL,IDF,NDIST,
     1                  CUT0,CUT50,CUT75,CUT90,CUT95,CUT975,
     1                  CUT99,CUT999,
     1                  ICAPSW,ICAPTY,IFORSW,IMULT,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE CARRIES OUT A NONPARAMETRIC MEDIAN
C              TEST FOR EQUAL MEDIANS
C     EXAMPLE--MEDIAN TEST Y TAG
C     REFERENCE--W. J. CONOVER, "PRACTICAL NONPARAMETRIC
C                STATISTICS", THIRD EDITION, 1999, WILEY,
C                PP. 218-224.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/6
C     ORIGINAL VERSION--JUNE      2011.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 IQUAME
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IMULT
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IOP
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION TAG(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION XIDTEM(*)
C
C---------------------------------------------------------------------
C
      PARAMETER (NUMALP=8)
      REAL ALPHA(NUMALP)
C
      PARAMETER(NUMCLI=4)
      PARAMETER(MAXLIN=3)
      PARAMETER (MAXROW=30)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      DATA ALPHA/
     1 0.0, 50.0, 75.0, 90.0, 95.0, 97.5, 99.0, 99.9/
C
      ISUBN1='DPME'
      ISUBN2='T2  '
      ISUBN0='    '
      IWRITE='OFF'
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MET2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMET2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASAN,N
   52   FORMAT('IBUGA3,ISUBRO,ICASAN,N = ',3(A4,2X),I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I),TAG(I)
   57     FORMAT('I,Y(I),TAG(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ****************************************************
C               **  STEP 1--                                      **
C               **  CARRY OUT CALCULATIONS FOR MEDIAN       TEST  **
C               **  (COMPUTATIONS PERFORMED IN DPMET3)            **
C               ****************************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MET2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NSAVE=N
      CALL DPMET3(Y,TAG,N,
     1            TEMP1,TEMP2,XIDTEM,PMTEQU,IQUAME,MAXNXT,
     1            XMED,XA,XB,IDF,NDIST,
     1            STATVA,STATCD,PVAL,
     1            IBUGA3,ISUBRO,IERROR)
C
      CUT0=0.0
      CALL CHSPPF(.50,IDF,CUT50)
      CALL CHSPPF(.75,IDF,CUT75)
      CALL CHSPPF(.90,IDF,CUT90)
      CALL CHSPPF(.95,IDF,CUT95)
      CALL CHSPPF(.975,IDF,CUT975)
      CALL CHSPPF(.99,IDF,CUT99)
      CALL CHSPPF(.999,IDF,CUT999)
C
      IOP='OPEN'
      IFLG1=1
      IFLG2=0
      IFLG3=0
      IFLG4=0
      IFLG5=0
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      WRITE(IOUNI1,2301)
 2301 FORMAT('   GROUP    OBS. ABOVE     OBS. TOTAL') 
      DO2310I=1,NDIST
        WRITE(IOUNI1,2305)I,TEMP1(I),TEMP2(I)
 2305   FORMAT(I8,2E15.7)
 2310 CONTINUE
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ********************************
C               **   STEP 42--                **
C               **   WRITE OUT EVERYTHING     **
C               **   FOR MEDIAN        TEST   **
C               ********************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MET2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Median Test'
      NCTITL=11
      ITITLZ=' '
      NCTITZ=0
      IF(PMTEQU.NE.0.5)THEN
        ITITLE='Median Test for User Specified Quantile'
         NCTITL=39
        ITITLZ=' '
        NCTITZ=0
      ENDIF
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      IF(IMULT.EQ.'OFF')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Response Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
C
        ICNT=ICNT+1
        ITEXT(ICNT)='Group-ID Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(2)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(2)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
      IF(PMTEQU.NE.0.5)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='H0: Samples Have Equal Quantile'
        NCTEXT(ICNT)=31
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Ha: At Least Two Samples Have Different Quantile'
        NCTEXT(ICNT)=48
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='H0: Samples Have Equal Medians'
        NCTEXT(ICNT)=30
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Ha: At Least Two Samples Have Different Medians'
        NCTEXT(ICNT)=47
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      IF(PMTEQU.NE.0.5)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='User Specified Quantile to Test:'
        NCTEXT(ICNT)=32
        AVALUE(ICNT)=PMTEQU
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      ICNT=ICNT+1
      ITEXT(ICNT)='Original Number of Observations:'
      NCTEXT(ICNT)=32
      AVALUE(ICNT)=REAL(NSAVE)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations After Omitting'
      NCTEXT(ICNT)=37
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Groups With Less Than Two Observations:'
      NCTEXT(ICNT)=39
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Groups:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=REAL(NDIST)
      IDIGIT(ICNT)=0
      IF(PMTEQU.NE.0.5)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Grand Quantile:'
        NCTEXT(ICNT)=15
        AVALUE(ICNT)=XMED
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Number of Points > the Grand Quantile:'
        NCTEXT(ICNT)=38
        AVALUE(ICNT)=XA
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Number of Points <= the Grand Quantile:'
        NCTEXT(ICNT)=39
        AVALUE(ICNT)=REAL(N) - XA
        IDIGIT(ICNT)=0
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='Grand Median:'
        NCTEXT(ICNT)=13
        AVALUE(ICNT)=XMED
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Number of Points > the Grand Median:'
        NCTEXT(ICNT)=36
        AVALUE(ICNT)=XA
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Number of Points <= the Grand Median:'
        NCTEXT(ICNT)=37
        AVALUE(ICNT)=REAL(N) - XA
        IDIGIT(ICNT)=0
      ENDIF
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Median Test Statistic Value:'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='CDF of Test Statistic:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=STATCD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='P-Value:'
      NCTEXT(ICNT)=8
      AVALUE(ICNT)=PVAL
      IDIGIT(ICNT)=NUMDIG
C
      NUMROW=ICNT
      DO4210I=1,NUMROW
        NTOT(I)=15
 4210 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='42A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MET2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITLE=' '
      NCTITL=0
      ITITL9=' '
      NCTIT9=0
      ITITLE(1:55)=
     1'Percent Points of the Chi-Square Reference Distribution'
      NCTITL=55
      NUMLIN=1
      NUMROW=NUMALP
      NUMCOL=3
      ITITL2(1,1)='Percent Point'
      ITITL2(1,2)=' '
      ITITL2(1,3)='Value'
      NCTIT2(1,1)=13
      NCTIT2(1,2)=1
      NCTIT2(1,3)=5
C
      NMAX=0
      DO4221I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.2)NTOT(I)=5
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=NUMDIG
        ITYPCO(I)='NUME'
 4221 CONTINUE
      ITYPCO(2)='ALPH'
      IDIGIT(1)=1
      IDIGIT(3)=3
      DO4223I=1,NUMROW
        DO4225J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          NCVALU(I,J)=0
          AMAT(I,J)=0.0
          IF(J.EQ.1)THEN
            AMAT(I,J)=ALPHA(I)
          ELSEIF(J.EQ.2)THEN
            IVALUE(I,J)='='
            NCVALU(I,J)=1
          ELSEIF(J.EQ.3)THEN
            IF(I.EQ.1)THEN
              AMAT(I,J)=RND(CUT0,IDIGIT(J))
            ELSEIF(I.EQ.2)THEN
              AMAT(I,J)=RND(CUT50,IDIGIT(J))
            ELSEIF(I.EQ.3)THEN
              AMAT(I,J)=RND(CUT75,IDIGIT(J))
            ELSEIF(I.EQ.4)THEN
              AMAT(I,J)=RND(CUT90,IDIGIT(J))
            ELSEIF(I.EQ.5)THEN
              AMAT(I,J)=RND(CUT95,IDIGIT(J))
            ELSEIF(I.EQ.6)THEN
              AMAT(I,J)=RND(CUT975,IDIGIT(J))
            ELSEIF(I.EQ.7)THEN
              AMAT(I,J)=RND(CUT99,IDIGIT(J))
            ELSEIF(I.EQ.8)THEN
              AMAT(I,J)=RND(CUT999,IDIGIT(J))
            ENDIF
          ENDIF
 4225   CONTINUE
 4223 CONTINUE
C
      IWHTML(1)=150
      IWHTML(2)=50
      IWHTML(3)=150
      IWRTF(1)=2000
      IWRTF(2)=IWRTF(1)+500
      IWRTF(3)=IWRTF(2)+2000
      IFRST=.TRUE.
      ILAST=.FALSE.
C
      ISTEPN='42C'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MET2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='42D'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MET2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ITITLE='Upper-Tailed Test: Chi-Square Approximation'
      NCTITL=43
      IF(PMTEQU.NE.0.5)THEN
        ITITL9='H0: Quantiles Are Equal; Ha: Quantiles Are Not Equal'
        NCTIT9=52
      ELSE
        ITITL9='H0: Medians Are Equal; Ha: Medians Are Not Equal'
        NCTIT9=48
      ENDIF
C
      DO2130J=1,NUMCLI
        DO2140I=1,MAXLIN
          ITITL2(I,J)=' '
          NCTIT2(I,J)=0
 2140   CONTINUE
 2130 CONTINUE
C
      NUMCOL=4
      ITITL2(2,1)='Significance'
      NCTIT2(2,1)=12
      ITITL2(3,1)='Level'
      NCTIT2(3,1)=5
C
      ITITL2(2,2)='Test '
      NCTIT2(2,2)=4
      ITITL2(3,2)='Statistic'
      NCTIT2(3,2)=9
C
      ITITL2(2,3)='Critical'
      NCTIT2(2,3)=8
      ITITL2(3,3)='Value (>)'
      NCTIT2(3,3)=9
C
      ITITL2(1,4)='Null'
      NCTIT2(1,4)=4
      ITITL2(2,4)='Hypothesis'
      NCTIT2(2,4)=10
      ITITL2(3,4)='Conclusion'
      NCTIT2(3,4)=10
C
      NMAX=0
      DO2150I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
        IDIGIT(I)=NUMDIG
        IF(I.EQ.1 .OR. I.EQ.4)THEN
          ITYPCO(I)='ALPH'
        ENDIF
 2150 CONTINUE
C
      IWHTML(1)=125
      IWHTML(2)=175
      IWHTML(3)=175
      IWHTML(4)=175
      IINC=1800
      IINC2=1400
      IWRTF(1)=IINC
      IWRTF(2)=IWRTF(1)+IINC
      IWRTF(3)=IWRTF(2)+IINC
      IWRTF(4)=IWRTF(3)+IINC
C
      ICNT=0
      DO2160J=4,NUMALP
C
        ICNT=ICNT+1
        AMAT(ICNT,2)=STATVA
        ALPHAT=ALPHA(J)
        ATEMP=ALPHAT/100.0
        CALL CHSPPF(ATEMP,IDF,CUTTMP)
        AMAT(ICNT,3)=CUTTMP
        IVALUE(ICNT,4)(1:6)='ACCEPT'
        IF(STATVA.GT.AMAT(ICNT,3))THEN
          IVALUE(ICNT,4)(1:6)='REJECT'
        ENDIF
        NCVALU(ICNT,4)=6
C
        WRITE(IVALUE(ICNT,1)(1:4),'(F4.1)')ALPHAT
        IVALUE(ICNT,1)(5:5)='%'
        NCVALU(ICNT,1)=5
 2160 CONTINUE
C
      NUMLIN=3
      IFRST=.TRUE.
      ILAST=.TRUE.
      IFLAGS=.TRUE.
      IFLAGE=.TRUE.
C
      CALL DPDTA5(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            IFLAGS,IFLAGE,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MET2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMET2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9025)STATVA,STATCD,PVAL
 9025   FORMAT('STATVA,STATCD,PVAL = ',3G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMET3(Y,X,N,
     1                  TEMP1,TEMP2,XIDTEM,PMTEQU,IQUAME,MAXNXT,
     1                  XMED,XA,XB,IDF,NDIST,
     1                  STATVA,STATCD,PVALUE,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--THIS ROUTINE COMPUTES THE MEDIAN K-SAMPLE TEST
C              STATISTIC FOR EQUAL MEDIANS AND ASSOCIATED CDF AND
C              P-VALUES.
C
C              THIS PART IS EXTRACTED FROM DPMET2 IN ORDER TO
C              ALLOW IT TO BE COMPUTED FROM THE "STATISTICS" ROUTINES
C              (E.G., STATISTIC PLOT, BOOTSTRAP).
C
C              THE TEST STATISTIC IS:
C
C                 T = (N**2/a*b)*SUM[i=1 to k][(O(1i) - n(i)*a/N)**2/n(i)]
C
C              WHERE
C
C                 N      = TOTAL SAMPLE SIZE
C                 O(1i)  = NUMBER OF OBSERVAIONS IN GROUP i > GRAND MEDIAN
C                 n(i)   = SAMPLE SIZE OF GROUP i
C                 a      = TOTAL NUMBER OF OBSERVATIONS GREATER THAN THE
C                          GRAND MEDIAN
C                 b      = TOTAL NUMBER OF OBSERVATIONS LESS THAN OR EQUAL
C                          TO THE GRAND MEDIAN
C
C              AT THE RECOMMENDATION OF CONOVER, ANY GROUPS WITH LESS THAN
C              TWO OBSERVATIONS ARE OMITTED FROM THE ANALYSIS AS THESE CAN
C              MAKE THE CHI-SQUARE APPROXIMATION INACCURATE.
C
C     EXAMPLE--MEDIAN TEST Y X
C     REFERENCE--CONOVER (1999), "PRACTICAL NONPARAMETRIC STATISTICS",
C                THIRD EDITION, WILEY, PP. 218 - 224.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/6
C     ORIGINAL VERSION--JUNE      2011.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IQUAME
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DOUBLE PRECISION DSUM1
      DOUBLE PRECISION DFACT
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION XIDTEM(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPME'
      ISUBN2='T3  '
      IERROR='NO'
      IWRITE='OFF'
C
      STATVA=CPUMIN
      STATCD=CPUMIN
      PVALUE=CPUMIN
      IDF=-99
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MET3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMET3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,IQUAME,N,PMTEQU
   52   FORMAT('IBUGA3,ISUBRO,IQUAME,N,PMTEQU = ',3(A4,2X),I8,G15.7)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I),X(I)
   57     FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 01--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='01'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MET3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N.LE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN MEDIAN TEST--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,112)
  112   FORMAT('      THE INPUT NUMBER OF OBSERVATIONS FOR THE ',
     1         'RESPONSE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
  113   FORMAT('      VARIABLES MUST BE 2 OR LARGER.  SUCH WAS NOT ',
     1         'THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,117)N
  117   FORMAT('      THE INPUT NUMBER OF OBSERVATIONS   = ',I8,'.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO135I=2,N
        IF(Y(I).NE.HOLD)GOTO139
  135 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,131)HOLD
  131 FORMAT('      THE RESPONSE VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      IERROR='YES'
      GOTO9000
  139 CONTINUE
C
      HOLD=X(1)
      DO145I=2,N
        IF(X(I).NE.HOLD)GOTO149
  145 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,141)HOLD
  141 FORMAT('      THE GROUP-ID VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      IERROR='YES'
      GOTO9000
  149 CONTINUE
C
C               *************************************
C               **   STEP 11--                     **
C               **   COMPUTE MEDIAN   TEST         **
C               *************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MET3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     DETERMINE DISTINCT VALUES OF GROUP-ID VARIABLE.  OMIT
C     ANY GROUPS WITH FEWER THAN TWO OBSERVATIONS.
C
      DO1003I=1,N
        TEMP1(I)=1.0
 1003 CONTINUE
      CALL DISTIN(X,N,IWRITE,XIDTEM,NDIST,IBUGA3,IERROR)
      DO1010K=1,NDIST
        HOLD=XIDTEM(K)
        NTEMP=0
        DO1020I=1,N
          IF(X(I).EQ.HOLD)THEN
            NTEMP=NTEMP+1
          ENDIF
 1020   CONTINUE
        IF(NTEMP.LE.1)THEN
          DO1030I=1,N
            IF(X(I).EQ.HOLD)TEMP1(I)=0.0
 1030     CONTINUE
        ENDIF
 1010 CONTINUE
C
      ICNT=0
      DO1040I=1,N
        IF(TEMP1(I).EQ.1.0)THEN
          ICNT=ICNT+1
          Y(ICNT)=Y(I)
          X(ICNT)=X(I)
        ENDIF
 1040 CONTINUE
      N=ICNT
C
      IF(N.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1041)
 1041   FORMAT('      AFTER OMITTING GROUPS WITH SAMPLE SIZE = 1')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1043)
 1043   FORMAT('      THE NUMBER OF RESPONSE VALUES IS LESS THAN TWO.')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     COMPUTE GRAND MEDIAN AND DETERMINE COUNTS ABOVE GRAND
C     MEDIAN FOR EACH GROUP
C
      IF(PMTEQU.NE.0.5)THEN
        CALL QUANT(PMTEQU,Y,N,IWRITE,TEMP1,MAXNXT,
     1             IQUAME,
     1             XMED,IBUGA3,IERROR)
      ELSE
        CALL MEDIAN(Y,N,IWRITE,TEMP1,MAXNXT,XMED,IBUGA3,IERROR)
      ENDIF
      CALL DISTIN(X,N,IWRITE,XIDTEM,NDIST,IBUGA3,IERROR)
C
      IF(NDIST.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1046)
 1046   FORMAT('      AFTER OMITTING GROUPS WITH SAMPLE SIZE = 1')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1048)
 1048   FORMAT('      THE NUMBER OF GROUPS IS LESS THAN TWO.')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      DO1050K=1,NDIST
        HOLD=XIDTEM(K)
        NTEMP=0
        IABOVE=0
        DO1060I=1,N
          IF(X(I).EQ.HOLD)THEN
            NTEMP=NTEMP+1
            IF(Y(I).GT.XMED)IABOVE=IABOVE+1
          ENDIF
 1060   CONTINUE
        TEMP1(K)=REAL(IABOVE)
        TEMP2(K)=REAL(NTEMP)
 1050 CONTINUE
C
      CALL SUMDP(TEMP1,NDIST,IWRITE,XA,IBUGA3,IERROR)
      AN=REAL(N)
      XB=AN - XA
      DFACT=DBLE(AN)**2/DBLE(XA*XB)
C
      DSUM1=0.0D0
      DO1070I=1,NDIST
        DSUM1=DSUM1 + (TEMP1(I) - TEMP2(I)*XA/AN)**2/TEMP2(I)
 1070 CONTINUE
      STATVA=REAL(DFACT*DSUM1)
C
C     CDF AND P-VALUES COMPUTED FROM CHI-SQUARE APPROXIMATION
C
      IDF=NDIST-1
      CALL CHSCDF(STATVA,IDF,STATCD)
      PVALUE=1.0 - STATCD
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MET3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMET3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)STATVA,STATCD,PVALUE,IDF
 9013   FORMAT('STATVA,STATCD,PVALUE,IDF = ',3G15.7,I8)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9014)SBAR,D2,DSUM1,DSUM2,DSUM3
 9014   FORMAT('SBAR,D2,DSUM1,DSUM2,DSUM3 = ',5G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMFCO(IHARG,NUMARG,IDEMFC,MAXMAR,IMAFCO,
     1                  IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE MARKER FILL COLORS = THE COLORS
C              OF THE (BACKGROUND) FILL WITHIN THE MARKERS.
C              THESE ARE LOCATED IN THE VECTOR IMAFCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEMFC
C                     --MAXMAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IMAFCO (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEMFC
      CHARACTER*4 IMAFCO
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IMAFCO(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPMF'
      ISUBN2='CO  '
C
      NUMMAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPMFCO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXMAR,NUMMAR
   53 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEMFC
   55 FORMAT('IDEMFC = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IMAFCO(1)
   70 FORMAT('IMAFCO(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IMAFCO(I)
   76 FORMAT('I,IMAFCO(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      GOTO1150
C
 1120 CONTINUE
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1='    '
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(4)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      IF(IHARG(4).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(4).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMMAR=1
      IMAFCO(1)=IDEMFC
      GOTO1270
C
 1220 CONTINUE
      NUMMAR=NUMARG-2
      IF(NUMMAR.GT.MAXMAR)NUMMAR=MAXMAR
      DO1225I=1,NUMMAR
      J=I+2
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2=IDEMFC
      IF(IHOLD1.EQ.'OFF')IHOLD2=IDEMFC
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEMFC
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEMFC
      IMAFCO(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMMAR
      WRITE(ICOUT,1276)I,IMAFCO(I)
 1276 FORMAT('THE FILL COLOR OF MARKER ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMMAR=MAXMAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2=IDEMFC
      IF(IHOLD1.EQ.'OFF')IHOLD2=IDEMFC
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEMFC
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEMFC
      DO1315I=1,NUMMAR
      IMAFCO(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IMAFCO(I)
 1316 FORMAT('THE FILL COLOR OF ALL MARKERS',
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPMFCO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXMAR,NUMMAR
 9013 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEMFC
 9015 FORMAT('IDEMFC = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IMAFCO(1)
 9030 FORMAT('IMAFCO(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IMAFCO(I)
 9036 FORMAT('I,IMAFCO(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPMFSW(IHARG,NUMARG,IDEMFS,MAXMAR,IMAFSW,
     1                  IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE MARKER FILL SWITCHES = THE ON/OFF SWITCHES
C              OF THE (BACKGROUND) FILL WITHIN THE MARKERS.
C              THESE ARE LOCATED IN THE VECTOR IMAFSW(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEMFS
C                     --MAXMAR
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--IMAFSW (A CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEMFS
      CHARACTER*4 IMAFSW
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
      CHARACTER*4 IHOLD2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IMAFSW(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPMF'
      ISUBN2='SW  '
C
      NUMMAR=0
      IHOLD1='-999'
      IHOLD2='-999'
C
      IF(IBUGP2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPMFSW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR
   52 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)MAXMAR,NUMMAR
   53 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)IHOLD1,IHOLD2
   54 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)IDEMFS
   55 FORMAT('IDEMFS = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,60)NUMARG
   60 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO65I=1,NUMARG
      WRITE(ICOUT,66)IHARG(I)
   66 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
   65 CONTINUE
      WRITE(ICOUT,70)IMAFSW(1)
   70 FORMAT('IMAFSW(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO75I=1,10
      WRITE(ICOUT,76)I,IMAFSW(I)
   76 FORMAT('I,IMAFSW(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   75 CONTINUE
   90 CONTINUE
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO9000
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      IF(NUMARG.EQ.4)GOTO1140
      GOTO1150
C
 1120 CONTINUE
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1='ON'
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(4)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      IF(IHARG(4).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(4).EQ.'ALL')GOTO1300
      GOTO1200
C
 1150 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.2)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMMAR=1
      IMAFSW(1)='ON'
      GOTO1270
C
 1220 CONTINUE
      NUMMAR=NUMARG-2
      IF(NUMMAR.GT.MAXMAR)NUMMAR=MAXMAR
      DO1225I=1,NUMMAR
      J=I+2
      IHOLD1=IHARG(J)
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='ON'
      IF(IHOLD1.EQ.'OFF')IHOLD2='OFF'
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEMFS
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEMFS
      IMAFSW(I)=IHOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMMAR
      WRITE(ICOUT,1276)I,IMAFSW(I)
 1276 FORMAT('THE FILL SWITCH FOR MARKER ',I6,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMMAR=MAXMAR
      IHOLD2=IHOLD1
      IF(IHOLD1.EQ.'ON')IHOLD2='ON'
      IF(IHOLD1.EQ.'OFF')IHOLD2='OFF'
      IF(IHOLD1.EQ.'AUTO')IHOLD2=IDEMFS
      IF(IHOLD1.EQ.'DEFA')IHOLD2=IDEMFS
      DO1315I=1,NUMMAR
      IMAFSW(I)=IHOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)IMAFSW(I)
 1316 FORMAT('THE FILL SWITCH FOR ALL MARKERS',
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPMFSW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGP2,IFOUND,IERROR
 9012 FORMAT('IBUGP2,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)MAXMAR,NUMMAR
 9013 FORMAT('MAXMAR,NUMMAR = ',I8,I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)IHOLD1,IHOLD2
 9014 FORMAT('IHOLD1,IHOLD2 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)IDEMFS
 9015 FORMAT('IDEMFS = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9020)NUMARG
 9020 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9025I=1,NUMARG
      WRITE(ICOUT,9026)IHARG(I)
 9026 FORMAT('IHARG(I) = ',A4)
      CALL DPWRST('XXX','BUG ')
 9025 CONTINUE
      WRITE(ICOUT,9030)IMAFSW(1)
 9030 FORMAT('IMAFSW(1) = ',A4)
      CALL DPWRST('XXX','BUG ')
      DO9035I=1,10
      WRITE(ICOUT,9036)I,IMAFSW(I)
 9036 FORMAT('I,IMAFSW(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9035 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPMGET(Y,X,N,NVAR,
     1                  TEMP1,TEMP2,TEMP3,DTEMP1,
     1                  AMUMOM,BETAMO,AMUFR,BETAFR,AMUML,BETAML,
     1                  ICAPSW,ICAPTY,IFORSW,MAXNXT,
     1                  IGETDF,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE COMPUTES THE MAXIMUM LIKELIHOOD
C              ESTIMATES FOR THE GEETA DISTRIBUTION.  ESTIMATES
C              ARE GENERATED IN TERMS OF THE MU/BETA
C              PARAMETERIZATION.
C
C              THE MOMENT ESTIMATES OF MU AND BETA ARE:
C
C                 MUHAT = XBAR
C                 BETAHAT = (S**2 - XBAR*(XBAR-1))/
C                           (S**2 - XBAR**2*(XBAR-1))
C
C              THE MEAN AND ONES FREQUENCY ESTIMATE OF MU IS:
C
C                  MUHAT = XBAR
C
C              THE ESTIMATE OF BETA IS THEN THE SOLUTION OF THE
C              EQUATION
C
C                 ((BETA-1)*XBAR/(BETA*XBAR-1))**(BETA-1) - (N1/N) = 0
C
C              THE MAXIMUM LIKELIHOOD FREQUENCY ESTIMATE OF MU IS:
C
C                  MUHAT = XBAR
C
C              THE ESTIMATE OF BETA IS THEN THE SOLUTION OF THE
C              EQUATION
C
C                 ((BETA-1)*XBAR/(BETA*XBAR-1))**(BETA-1) - 
C                 (1/(N*XBAR))*
C                 SUM[X=2 to k][SUM[i=2 to k][X*N(x)/(BETA*X-1)]] = 0
C
C              THERE ARE TWO CASES:
C
C              1) ONE VARIABLE CASE: Y IS RAW DATA
C              2) TWO VARIABLE CASE: Y IS FREQUENCY, X IS CLASS
C                 MID-POINT.
C
C     EXAMPLE--GEETA MAXIMUM LIKELIHOOD Y
C            --GEETA MAXIMUM LIKELIHOOD Y X
C     REFERENCES--CONSUL AND FAMOYE (2006), "LAGRANGIAN PROBABILITY
C                 DISTRIBUTIONS", BIRKHAUSER, CHAPTER 8.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBUG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/7
C     ORIGINAL VERSION--JULY      2006.
C     UPDATED         --APRIL     2011. USE DPDTA1 TO PRINT OUTPUT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-----------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IGETDF
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IRELAT
      CHARACTER*4 IRHSTG
C
C-------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DOUBLE PRECISION DTEMP1(*)
C
      DOUBLE PRECISION TOL
      DOUBLE PRECISION XPAR(1)
      DOUBLE PRECISION FVEC(1)
C
      DOUBLE PRECISION AE
      DOUBLE PRECISION RE
      DOUBLE PRECISION XLOW
      DOUBLE PRECISION XUP
      DOUBLE PRECISION XMID
C
      DOUBLE PRECISION GETFUN
      DOUBLE PRECISION GETFU2
      EXTERNAL GETFUN
      EXTERNAL GETFU2
      DOUBLE PRECISION XBAR
      DOUBLE PRECISION S2
      DOUBLE PRECISION F1FREQ
      COMMON/GETCOM/XBAR,S2,F1FREQ,MAXRO2,NTOT2
C
      PARAMETER (MAXROW=30)
      CHARACTER*60 ITITLE
      CHARACTER*1  ITITLZ
      CHARACTER*40 IDIST
      CHARACTER*40 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL      IFRST
      LOGICAL      ILAST
C
C-------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT---------------------------------------------------
C
      ISUBN1='DPMG'
      ISUBN2='ET  '
      IERROR='NO'
      IWRITE='OFF'
C
      AMUMOM=CPUMIN
      BETAMO=CPUMIN
      AMUFR=CPUMIN
      BETAFR=CPUMIN
      AMUML=CPUMIN
      BETAML=CPUMIN
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MGET')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMGET--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,IGETDF,N,NVAR
   52   FORMAT('IBUGA3,ISUBRO,IGETDF,N,NVAR = ',3(A4,2X),2I8)
        CALL DPWRST('XXX','WRIT')
        IF(NVAR.EQ.1)THEN
          DO56I=1,MIN(N,100)
            WRITE(ICOUT,57)I,Y(I)
   57       FORMAT('I,Y(I) = ',I8,G15.7)
            CALL DPWRST('XXX','WRIT')
   56     CONTINUE
        ELSE
          DO61I=1,N
            WRITE(ICOUT,62)I,X(I),Y(I)
   62       FORMAT('I,X(I),Y(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','WRIT')
   61     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  1) ROUND DATA TO INTEGER VALUES       **
C               **  2) COMPUTE SUMMARY STATISTICS         **
C               **  3) CHECK INPUT FOR NEGATIVE VALUES,   **
C               **     INSUFFICIENT SAMPLE SIZE           **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MGET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IDIST='GEETA'
C
      NPERC=0
      MAXGRP=MAXNXT/2
      NMIN=2
      IF(NVAR.EQ.1)THEN
        DO1105I=1,N
          ITEMP=INT(Y(I)+0.5)
          Y(I)=REAL(ITEMP)
 1105   CONTINUE
        CALL CKDIST(Y,N,NMIN,TEMP1,NPERC,ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IFLAG=1
        CALL SUMRAW(Y,N,IDIST,IFLAG,
     1              XMEAN,XVAR,XSD,XMIN,XMAX,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NTOTZZ=N
C
C       NOW BIN THE DATA FOR USE BY THE ESTIMATION METHOD BELOW
C
        IRELAT='OFF'
        IRHSTG='OFF'
        XSTART=XMIN-0.5
        XSTOP=XMAX+0.5
        CLWID=1.0
        CALL DPBINI(Y,N,IRELAT,CLWID,XSTART,XSTOP,IRHSTG,
     1              TEMP1,X,N2,IBUGA3,IERROR)
        ICNT=0
        DO1121I=1,N2
          Y(I)=TEMP1(I)
          IF(Y(I).GT.0.0)THEN
            ICNT=ICNT+1
            Y(ICNT)=Y(I)
            X(ICNT)=X(I)
          ENDIF
1121    CONTINUE
        N2=ICNT
      ELSE
        CALL CKDIS2(Y,X,TEMP1,N,MAXGRP,NMIN,TEMP2,NPERC,NTOTZZ,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        IFLAG1=1
        IFLAG2=1
        CALL SUMGRP(Y,X,N,IDIST,IFLAG1,IFLAG2,
     1              TEMP1,TEMP2,TEMP3,MAXNXT,
     1              XMEAN,XVAR,XSD,XMIN,XMAX,NTOTZZ,
     1              ISUBRO,IBUGA3,IERROR)
        ICNT=0
        NTOTZZ=0
        DO1211I=1,N
          IF(Y(I).GT.0.0)THEN
            ICNT=ICNT+1
            Y(ICNT)=Y(I)
            X(ICNT)=X(I)
            NTOTZZ=NTOTZZ + INT(Y(I)+0.01)
          ENDIF
1211    CONTINUE
        N2=ICNT
      ENDIF
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MGET')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1311)
 1311   FORMAT('AFTER COMPUTE SUMMARY STATISTICS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1312)XMEAN,XVAR,XSD,XMIN,XMAX,NTOTZZ
 1312   FORMAT('XMEAN,XVAR,XSD,XMIN,XMAX,NTOTZZ = ',5G15.7,I10)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
C               *********************************************
C               **  STEP 21--                              **
C               **  CARRY OUT CALCULATIONS                 **
C               **  FOR GEETA MLE                          **
C               **  ESTIMATION                             **
C               *********************************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MGET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      F1=Y(1)/REAL(NTOTZZ)
      IINDX=MAXNXT/2
      IF(N2.LE.IINDX)THEN
        IML=0
        DO2210I=1,N2
          TEMP3(I)=Y(I)
          TEMP3(IINDX+I)=X(I)
 2210   CONTINUE
        IK=N2
      ELSE
        IML=1
      ENDIF
C
      ACUT=XMEAN**2*(XMEAN-1.0)
      IF(XVAR.LE.ACUT)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1131)
 1131   FORMAT('***** ERROR IN GEETA MAXIMUM LIKELIHOOD--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2223)
 2223   FORMAT('      IN ORDER FOR THE GEETA DISTRIBUTION TO BE ',
     1         'APPLICABLE,')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2225)
 2225   FORMAT('         S**2 > XBAR**2*(XBAR - 1)')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2227)
 2227   FORMAT('      SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2228)XMEAN
 2228   FORMAT('      SAMPLE MEAN     = ',G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,2229)XVAR
 2229   FORMAT('      SAMPLE VARIANCE = ',G15.7)
        CALL DPWRST('XXX','WRIT')
        GOTO9000
      ENDIF
C
      AMUMOM=XMEAN
      BETAMO=(XVAR - XMEAN*(XMEAN-1.0))/(XVAR - XMEAN**2*(XMEAN-1.0))
      AMUFR=XMEAN
      BETAFR=0.0
      AMUML=XMEAN
      BETAML=0.0
C
      AE=1.D-7
      RE=1.D-7
      XBAR=DBLE(XMEAN)
      S2=DBLE(XSD)**2
      F1FREQ=DBLE(F1)
      XMID=DBLE(BETAMO)
      XLOW=1.000001D0
      XUP=XMID + 10.0D0
      CALL DFZERO(GETFUN,XLOW,XUP,XMID,RE,AE,IFLAG)
      BETAFR=REAL(XLOW)
C
      IOPT=2
      TOL=1.0D-3
      NPAR=1
      NPRINT=-1
      INFO=0
      LWA=MAXNXT
      MAXRO2=MAXNXT
      NTOT2=NTOTZZ
C
      XPAR(1)=DBLE(BETAFR)
      XPAR(1)=1.5D0
      CALL DNSQE(GETFU2,JAC,IOPT,NPAR,XPAR,FVEC,TOL,NPRINT,INFO,
     1             DTEMP1,LWA,TEMP3,IK)
C
      BETAML=REAL(XPAR(1))
C
C               ***********************************************
C               **   STEP 42--                               **
C               **   WRITE OUT EVERYTHING                    **
C               **   FOR GEETA MLE                           **
C               **   ESTIMATION                              **
C               ***********************************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MGET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     PRINT SUMMARY STATISTICS TABLE
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Geeta Parameter Estimation'
      NCTITL=42
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(NTOTZZ)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Mean:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=XMEAN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Standard Deviation:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=XSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Minimum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMIN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Maximum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMAX
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample First Frequency:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=F1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Method of Moments:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      IF(IGETDF.EQ.'THET')THEN
        ITEXT(ICNT)='Estimate of Theta:'
        NCTEXT(ICNT)=18
      ELSE
        ITEXT(ICNT)='Estimate of Mu:'
        NCTEXT(ICNT)=15
      ENDIF
      AVALUE(ICNT)=AMUMOM
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Beta:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=BETAMO
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Method of First Frequency and Mean:'
      NCTEXT(ICNT)=35
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      IF(IGETDF.EQ.'THET')THEN
        ITEXT(ICNT)='Estimate of Theta:'
        NCTEXT(ICNT)=18
      ELSE
        ITEXT(ICNT)='Estimate of Mu:'
        NCTEXT(ICNT)=15
      ENDIF
      AVALUE(ICNT)=AMUFR
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Beta:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=BETAFR
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Method of Maximum Likelihood:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      IF(IGETDF.EQ.'THET')THEN
        ITEXT(ICNT)='Estimate of Theta:'
        NCTEXT(ICNT)=18
      ELSE
        ITEXT(ICNT)='Estimate of Mu:'
        NCTEXT(ICNT)=15
      ENDIF
      AVALUE(ICNT)=AMUML
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Beta:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=BETAML
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO2310I=1,NUMROW
        NTOT(I)=15
 2310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MGET')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMGET--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9013)AMUMOM,BETAMO,AMUFR,BETAFR,AMUML,BETAML
 9013   FORMAT('AMUMOM,BETAMO,AMUFR,BETAFR,AMUML,BETAML = ',6G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMGNB(Y,X,N,NVAR,
     1                  TEMP1,TEMP2,TEMP3,DTEMP1,
     1                  THETMO,BETAMO,AMMOM,
     1                  THETFR,BETAFR,AMFR,
     1                  THETF2,BETAF2,AMF2,
     1                  THETML,BETAML,AMML,
     1                  ICAPSW,ICAPTY,IFORSW,MAXNXT,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE COMPUTES THE MAXIMUM LIKELIHOOD
C              ESTIMATES FOR THE GENERALIZED NEGATIVE BINOMIAL
C              DISTRIBUTION.
C
C              THE MOMENT ESTIMATE OF THETA IS THE SOLUTION
C              OF THE EQUATION:
C
C                 THETAHAT = 1 - 0.5*A + (A**2/4 - 1)**(0.5)
C                 A = -2 + (XBAR*S3 - 3*S2**2)**2/(XBAR*S2**3)
C
C                 BETAHAT = {1 - SQRT(XBAR*(1-THETAHAT)/S2)}/THETAHAT
C                 MHAT = XBAR*(1-THETAHAT*BETAHAT)/THETAHAT
C
C                 S2 = SAMPLE VARIANCE
C                 S3 = SAMPLE THIRD SAMPLE MOMENT
C                      (SUM[i=0 to k][N(i)*(i-XBAR)**3/(N-1) =
C                       SUM[j=1 to n][(X(j) - XBAR)**2]
C                      
C              THE MOMENTS AND ZERO FREQUENCY ESTIMATE OF THETA
C              IS THE SOLUTION OF THE EQUATION
C
C                 S2*(LOG(F0)**2/XBAR**3 -
C                 (1-THETA)*(LOG(1-THETA))**2/THETA**2 = 0
C
C                 MHAT = SQRT{(1-THETAHAT)*XBAR**3/S2}/THETAHAT
C                 BETAHAT = (1/THETAHAT) - MHAT/XBAR
C
C
C              THE MOMENTS AND RATIO OF FREQUENCIES ESTIMATE OF
C              THETA IS THE SOLUTION OF THE EQUATION
C
C                 {(2/THETA) - (2/THETA)*SQRT(XBAR*(1-THETA)/S2)-1}*
C                 LOG(1-THETA) - LOG(S2*F10**2/XBAR**3) = 0
C
C                 F10 = F1/F0
C
C                 MHAT = SQRT{(1-THETAHAT)*XBAR**3/S2}/THETA
C                 BETAHAT = (1/THETAHAT) - MHAT/XBAR
C                  
C              THE MAXIMUM LIKELIHOOD ESTIMATES ARE THE SOLUTIONS
C              TO THE EQUATIONS:
C
C                 (N-N0)*XBAR/M - SUM[X=2 to k][SUM[i=1 to x-1]
C                 [(X-XBAR)*N(x)/(M+BETA*X-i]] = 0
C
C                 N*XBAR*LOG(1-XBAR/(M+BETA*XBAR)) +
C                 SUM[X=2 to k][SUM[i=1 to x-1]
C                 [X*N(x)/(M+BETA*X-i]] = 0
C
C                 THETAHAT = XBAR/(MHAT+BETA*XBAR)
C
C              THERE ARE TWO CASES:
C
C              1) ONE VARIABLE CASE: Y IS RAW DATA
C              2) TWO VARIABLE CASE: Y IS FREQUENCY, X IS CLASS
C                 MID-POINT.
C
C     EXAMPLE--GENERALIZED NEGATIVE BINOMIAL MAXIMUM LIKELIHOOD Y
C            --GENERALIZED NEGATIVE BINOMIAL MAXIMUM LIKELIHOOD Y X
C     REFERENCES--CONSUL AND FAMOYE (2006), "LAGRANGIAN PROBABILITY
C                 DISTRIBUTIONS", BIRKHAUSER, CHAPTER 10.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBUG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/7
C     ORIGINAL VERSION--JULY      2006.
C     UPDATED         --APRIL     2011.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-----------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IRELAT
      CHARACTER*4 IRHSTG
C
      PARAMETER (MAXROW=50)
      CHARACTER*60 ITITLE
      CHARACTER*1  ITITLZ
      CHARACTER*40 IDIST
      CHARACTER*40 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL      IFRST
      LOGICAL      ILAST
C
C-------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DOUBLE PRECISION DTEMP1(*)
C
      DOUBLE PRECISION TOL
      DOUBLE PRECISION XPAR(3)
      DOUBLE PRECISION FVEC(3)
C
      DOUBLE PRECISION AE
      DOUBLE PRECISION RE
      DOUBLE PRECISION XLOW
      DOUBLE PRECISION XUP
      DOUBLE PRECISION XMID
      DOUBLE PRECISION DSUM
      DOUBLE PRECISION DTERM1
      DOUBLE PRECISION DTERM2
      DOUBLE PRECISION DA
C
      DOUBLE PRECISION GNBFUN
      DOUBLE PRECISION GNBFU3
      DOUBLE PRECISION GNBFU4
      DOUBLE PRECISION GNBFU5
      EXTERNAL GNBFUN
      EXTERNAL GNBFU2
      EXTERNAL GNBFU3
      EXTERNAL GNBFU4
      EXTERNAL GNBFU5
      DOUBLE PRECISION XBAR
      DOUBLE PRECISION S2
      DOUBLE PRECISION S3
      DOUBLE PRECISION F0FREQ
      DOUBLE PRECISION F1FREQ
      DOUBLE PRECISION F10FRE
      DOUBLE PRECISION DC1
      COMMON/GNBCOM/XBAR,S2,S3,F0FREQ,F1FREQ,F10FRE,DC1,
     1              MAXRO2,NTOT2
C
C-------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT---------------------------------------------------
C
      ISUBN1='DPMG'
      ISUBN2='NB  '
      IERROR='NO'
      IWRITE='OFF'
C
      THETMO=CPUMIN
      BETAMO=CPUMIN
      AMMOM=CPUMIN
      THETFR=CPUMIN
      BETAFR=CPUMIN
      AMFR=CPUMIN
      THETF2=CPUMIN
      BETAF2=CPUMIN
      AMF2=CPUMIN
      THETML=CPUMIN
      BETAML=CPUMIN
      AMML=CPUMIN
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MGNB')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPMGNB--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,N,NVAR
   52   FORMAT('IBUGA3,ISUBRO,N,NVAR = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','WRIT')
        IF(NVAR.EQ.1)THEN
          DO56I=1,MIN(N,100)
            WRITE(ICOUT,57)I,Y(I)
   57       FORMAT('I,Y(I) = ',I8,G15.7)
            CALL DPWRST('XXX','WRIT')
   56     CONTINUE
        ELSE
          DO61I=1,N
            WRITE(ICOUT,62)I,X(I),Y(I)
   62       FORMAT('I,X(I),Y(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','WRIT')
   61     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  1) ROUND DATA TO INTEGER VALUES       **
C               **  2) COMPUTE SUMMARY STATISTICS         **
C               **  3) CHECK INPUT FOR NEGATIVE VALUES,   **
C               **     INSUFFICIENT SAMPLE SIZE           **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MLAE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IDIST='GENERALIZED NEGATIVE BINOMIAL'
C
      NPERC=0
      MAXGRP=MAXNXT/2
      NMIN=2
      IF(NVAR.EQ.1)THEN
        DO1105I=1,N
          ITEMP=INT(Y(I)+0.5)
          Y(I)=REAL(ITEMP)
 1105   CONTINUE
        CALL CKDIST(Y,N,NMIN,TEMP1,NPERC,ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IFLAG=1
        CALL SUMRAW(Y,N,IDIST,IFLAG,
     1              XMEAN,XVAR,XSD,XMIN,XMAX,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NTOTZZ=N
C
C       NOW BIN THE DATA FOR USE BY THE ESTIMATION METHOD BELOW
C
        IRELAT='OFF'
        IRHSTG='OFF'
        XSTART=XMIN-0.5
        XSTOP=XMAX+0.5
        CLWID=1.0
        CALL DPBINI(Y,N,IRELAT,CLWID,XSTART,XSTOP,IRHSTG,
     1              TEMP1,X,N2,IBUGA3,IERROR)
        ICNT=0
        DO1121I=1,N2
          IF(TEMP1(I).GT.0.0)THEN
            ICNT=ICNT+1
            Y(ICNT)=TEMP1(I)
            X(ICNT)=X(I)
          ENDIF
1121    CONTINUE
        N2=ICNT
      ELSE
        CALL CKDIS2(Y,X,TEMP1,N,MAXGRP,NMIN,TEMP2,NPERC,NTOTZZ,
     1              ISUBRO,IBUGA3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        IFLAG1=1
        IFLAG2=1
        CALL SUMGRP(Y,X,N,IDIST,IFLAG1,IFLAG2,
     1              TEMP1,TEMP2,TEMP3,MAXNXT,
     1              XMEAN,XVAR,XSD,XMIN,XMAX,NTOTZZ,
     1              ISUBRO,IBUGA3,IERROR)
        ICNT=0
        DO1221I=1,N
          IF(Y(I).GT.0.0)THEN
            ICNT=ICNT+1
            Y(ICNT)=Y(I)
            X(ICNT)=X(I)
          ENDIF
1221    CONTINUE
        N2=ICNT
      ENDIF
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MGNB')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1311)
 1311   FORMAT('AFTER COMPUTE SUMMARY STATISTICS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1312)XMEAN,XVAR,XSD,XMIN,XMAX,NTOTZZ
 1312   FORMAT('XMEAN,XVAR,XSD,XMIN,XMAX,NTOTZZ = ',5G15.7,I10)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
C               *********************************************
C               **  STEP 21--                              **
C               **  CARRY OUT CALCULATIONS                 **
C               **  FOR GENERALIZED NEGATIVE BINOMIAL MLE  **
C               **  ESTIMATION                             **
C               *********************************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MGNB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IML=0
      IINDX=MAXNXT/2
      IF(N2.LE.IINDX)THEN
        IWD=0
        DO2290I=1,N2
          TEMP3(I)=Y(I)
          TEMP3(IINDX+I)=X(I)
 2290   CONTINUE
        IK=N2
      ELSE
        IML=1
      ENDIF
C
      F0=Y(1)
      F1=Y(2)
      F10=F0/F1
C
      DSUM=0.0D0
      DO2208I=1,N2
        DSUM=DSUM +  DBLE(Y(I))*(DBLE(I) - DBLE(XMEAN))**3
 2208 CONTINUE
      S3=REAL(DSUM/DBLE(NTOTZZ-1))
C
      XBAR=DBLE(XMEAN)
      S2=DBLE(XSD)**2
      DA=-2.0D0 + (XBAR*S3 - 3.0D0*S2**2)**2/(XBAR*S2**3)
      THETMO=REAL(1.0D0 - 0.5D0*DA + DSQRT(DA**2/4.0D0 - 1.0D0))
      BETAMO=(1.0 - SQRT(XBAR*(1.0-THETMO)/S2))/THETMO
      IF(BETAMO.LE.1.0)BETAMO=1.0
      AMMOM=XBAR*(1.0-THETMO*BETAMO)/THETMO
C
      AE=1.D-7
      RE=1.D-7
      XLOW=0.000001D0
      XUP=0.999999D0
      XMID=0.5D0
      F0FREQ=DBLE(F0)
      F1FREQ=DBLE(F1)
      F10FRE=DBLE(F10)
      NTOT2=NTOTZZ
C
      IFR=0
      IF(F0.GT.0.0)THEN
        C1=S2*LOG(F0)**2/(XBAR**3)
        IF(C1.GE.1.0 .OR. C1.LE.0.0)IFR=1
      ELSE
        IFR=1
      ENDIF
      IF(IFR.EQ.0)THEN
        DC1=DBLE(C1)
        XLOW=0.000001D0
        XUP=0.999999D0
        XMID=DBLE(THETMO)
        CALL DFZERO(GNBFU3,XLOW,XUP,XMID,RE,AE,IFLAG)
        THETFR=REAL(XLOW)
        AMFR=SQRT((1.0-THETFR)*XMEAN**3/XVAR)/THETFR
        BETAFR=(1.0/THETFR) - (AMFR/XMEAN)
        IF(BETAFR.LE.1.0)BETAFR=1.0
      ENDIF
C
      IFR2=0
      XLOW=0.000001D0
      XUP=0.999999D0
      DTERM1=GNBFU4(XLOW)
      DTERM2=GNBFU4(XUP)
      IF(DTERM1*DTERM2.GT.0.0D0)THEN
        IFR2=1
      ENDIF
      IF(IFR2.EQ.0)THEN
        XMID=DBLE(THETMO)
        CALL DFZERO(GNBFU4,XLOW,XUP,XMID,RE,AE,IFLAG)
        THETF2=REAL(XLOW)
        AMF2=SQRT((1.0-THETF2)*XMEAN**3/XVAR)/THETF2
        BETAF2=(1.0/THETF2) - (AMF2/XMEAN)
        IF(BETAF2.LE.1.0)BETAF2=1.0
      ENDIF
C
      IF(IML.EQ.0)THEN
        IOPT=2
        TOL=1.0D-5
        NPAR=3
        NPRINT=-1
        INFO=0
        LWA=MAXNXT
        MAXRO2=MAXNXT
C
        IF(IFR2.EQ.0)THEN
          XPAR(1)=DBLE(BETAF2)
          XPAR(2)=DBLE(AMF2)
          XPAR(3)=DBLE(THETF2)
        ELSEIF(IFR.EQ.0)THEN
          XPAR(1)=DBLE(BETAFR)
          XPAR(2)=DBLE(AMFR)
          XPAR(3)=DBLE(THETFR)
        ELSE
          XPAR(1)=DBLE(BETAMO)
          XPAR(2)=DBLE(BETAMO)
          XPAR(3)=DBLE(THETMO)
        ENDIF
        CALL DNSQE(GNBFU2,JAC,IOPT,NPAR,XPAR,FVEC,TOL,NPRINT,INFO,
     1             DTEMP1,LWA,TEMP3,IK)
C
        BETAML=REAL(XPAR(1))
        AMML=REAL(XPAR(2))
        THETML=REAL(XPAR(3))
      ENDIF
C
C     1/2007: NOW DO THE TRUNCATED CASE.
C
C     METHOD 1: MEAN AND RATIO OF FREQUENCIES (RATIO METHOD)
C
      AE=1.D-7
      RE=1.D-7
      XLOW=0.005D0
      XMID=DBLE(AMMOM)
      XUP=5.0D0*XMID
      F0FREQ=DBLE(F0)
      F1FREQ=DBLE(F1)
      F10FRE=DBLE(F10)
      NTOT2=NTOTZZ
C
CCCCC CALL DFZERO(GNBFU3,XLOW,XUP,XMID,RE,AE,IFLAG)
CCCCC AMRA=REAL(XLOW)
CCCCC BETARA=AMRA*F0FREQ*F2FREQ/(F1FREQ**2) - (AMRA-1.0)/2.0
CCCCC print *,'amra,betara=',amra,betara
CCCCC THETRA=
C
C
C               ***********************************************
C               **   STEP 42--                               **
C               **   WRITE OUT EVERYTHING                    **
C               **   FOR GENERALIZED NEGATIVE BINOMIAL MLE   **
C               **   ESTIMATION                              **
C               ***********************************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MGNB')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     PRINT SUMMARY STATISTICS TABLE
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Generalized Negative Binomial Parameter Estimation'
      NCTITL=50
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(NTOTZZ)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Mean:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=XMEAN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Standard Deviation:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=XSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Centralized Third Moment:'
      NCTEXT(ICNT)=32
      AVALUE(ICNT)=REAL(S3)
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Minimum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMIN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Maximum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMAX
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Zero-Class Frequency:'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=F0
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Ones-Class Frequency:'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=F1
      IDIGIT(ICNT)=NUMDIG
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Ratio of Ones- and Zero-Frequencies:'
      NCTEXT(ICNT)=36
      AVALUE(ICNT)=F10
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Method of Moments:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Theta:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=THETMO
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Beta:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=BETAMO
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of M:'
      NCTEXT(ICNT)=14
      AVALUE(ICNT)=AMMOM
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Method of Zero-Class Frequency/Moments:'
      NCTEXT(ICNT)=39
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Theta:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=THETFR
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Beta:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=BETAFR
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of M:'
      NCTEXT(ICNT)=14
      AVALUE(ICNT)=AMFR
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Method of Ratio of Frequencies/Moments:'
      NCTEXT(ICNT)=39
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Theta:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=THETF2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Beta:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=BETAF2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of M:'
      NCTEXT(ICNT)=14
      AVALUE(ICNT)=AMF2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Method of Maximum Likelihood:'
      NCTEXT(ICNT)=29
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Theta:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=THETML
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Beta:'
      NCTEXT(ICNT)=17
      AVALUE(ICNT)=BETAML
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of M:'
      NCTEXT(ICNT)=14
      AVALUE(ICNT)=AMML
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO2310I=1,NUMROW
        NTOT(I)=15
 2310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MGNB')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPMGNB--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMGU1(Y,N,
     1                  XTEMP,DTEMP,MAXNXT,
     1                  SCALML,SCALSE,SCALMO,SCMOSE,
     1                  ALOCML,ALMLSE,ALOCMO,ALMOSE,COVSE,
     1                  NUMV,
     1                  ICAPSW,ICAPTY,IFORSW,MINMAX,
     1                  QP,XQPHAT,XQPSE,XQPLCL,XQPUCL,NPERC,
     1                  XQPHTZ,XQPLCZ,XQPUCZ,
     1                  IOUNI1,IOUNI2,ALPHAP,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE COMPUTES THE MAXIMUM LIKELIHOOD
C              ESTIMATES FOR GUMBEL (EXTREME VALUE TYPE 1) DISTRIBUTION
C              FOR THE FULL SAMPLE CASE.
C     EXAMPLE--GUMBEL MAXIMUM LIKELIHOOD Y
C     REFERENCE--KARL BURY, "STATISTICAL DISTRIBUTIONS IN
C                ENGINEERING", CAMBRIDGE UNIVERSITY PRESS,
C                1999, CHAPTER 15.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2004/12
C     ORIGINAL VERSION--DECEMBER  2004.
C     UPDATED         --OCTOBER   2009. DEFAULT MINMAX CASE =
C                                       MAXIMUM (TO BE CONSISTENT
C                                       WITH EV1CDF, EV1PDF, EV1PPF)
C     UPDATED         --OCTOBER   2009. EXTRACT SOME CODE TO EV1ML1
C                                       (TO MAKE IT EASIER FOR OTHER
C                                       ROUTINES TO OBTAIN ML
C                                       ESTIMATES)
C     UPDATED         --JUNE      2010. USE DPDTA1 AND DPDTA7 TO
C                                       PRINT OUTPUT, ADD AIC AND
C                                       RELATED STATISTICS TO OUTPUT
C     UPDATED         --MARCH     2014. SUPPORT FOR ONE-SIDED PERCENTILES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ILIKFL
      CHARACTER*4 INORM
      CHARACTER*7 ICASE
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      PARAMETER (NUMALP=6)
      DIMENSION ALPHA(NUMALP)
      DIMENSION ALOWLO(NUMALP)
      DIMENSION AUPPLO(NUMALP)
      DIMENSION ALOWL2(NUMALP)
      DIMENSION AUPPL2(NUMALP)
      DIMENSION ALOWSC(NUMALP)
      DIMENSION AUPPSC(NUMALP)
      DIMENSION ALOWS2(NUMALP)
      DIMENSION AUPPS2(NUMALP)
C
      DIMENSION Y(*)
      DIMENSION XTEMP(*)
      DIMENSION XQPHTZ(*)
      DIMENSION XQPLCZ(*)
      DIMENSION XQPUCZ(*)
      DIMENSION QP(*)
      DIMENSION XQPHAT(*)
      DIMENSION XQPSE(*)
      DIMENSION XQPLCL(*)
      DIMENSION XQPUCL(*)
C
      DOUBLE PRECISION DTEMP(*)
C
      DOUBLE PRECISION EV1FU6
      EXTERNAL EV1FU6
C
      DOUBLE PRECISION DQ
      DOUBLE PRECISION SHATML
      COMMON/EV1CO6/DQ,SHATML
C
      DOUBLE PRECISION DAE
      DOUBLE PRECISION DRE
      DOUBLE PRECISION DXSTRT
      DOUBLE PRECISION DXLOW
      DOUBLE PRECISION DXUP
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=50)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA ALPHA /0.50, 0.25, 0.10, 0.05, 0.01, 0.001/
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPMG'
      ISUBN2='U1  '
      IERROR='NO'
C
      ICASE='Minimum'
      IF(MINMAX.EQ.2 .OR. MINMAX.EQ.0)ICASE='Maximum'
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MGU1')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPPGU1--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3
   52   FORMAT('IBUGA3 = ',A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,55)N,NUMV,IOUNI1,MAXNXT
   55   FORMAT('N,NUMV,IOUNI1,MAXNXT = ',4I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,MIN(N,100)
          WRITE(ICOUT,57)I,Y(I)
   57     FORMAT('I,Y(I) = ',I8,G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MGU1')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NMIN=3
      CALL CKDIST(Y,N,NMIN,QP,NPERC,ISUBRO,IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               **********************************
C               **  STEP 41--                   **
C               **  CARRY OUT CALCULATIONS      **
C               **  FOR GUMBEL MLE              **
C               **  ESTIMATE (FULL SAMPLE CASE) **
C               **********************************
C
      ISTEPN='31'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MGU1')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IERROR='NO'
      IWRITE='OFF'
      AN=REAL(N)
      ICAS2=1
      CALL EV1ML1(Y,N,MINMAX,IGUMBC,ICAS2,
     1            DTEMP,
     1            ALOWLO,AUPPLO,ALOWSC,AUPPSC,
     1            ALOWL2,AUPPL2,ALOWS2,AUPPS2,
     1            ALPHA,NUMALP,NUMOUT,
     1            XMEAN,XSD,XMIN,XMAX,
     1            ALOCMO,SCALMO,ALMOSE,SCMOSE,
     1            ALOCML,SCALML,SCA2ML,ALMLSE,SCALSE,COVSE,
     1            ISUBRO,IBUGA3,IERROR)
C
      IF(IGUMBC.EQ.'ON')THEN
        SCALML=SCA2ML
      ENDIF
C
      CALL EV1LI1(Y,N,MINMAX,ALOCML,SCALML,
     1            ALIK,AIC,AICC,BIC,
     1            ISUBRO,IBUGA3,IERROR)
C
C               **********************************************
C               **  STEP 41B--                              **
C               **  ESTIMATE CONFIDENCE LIMITS FOR SELECTED **
C               **  PERCENTILES.  THE CONFIDENCE LIMITS ON  **
C               **  SIGMA ARE (SL,SU) ARE:                  **
C               **  (2*N*SIGMAHAT/CHSPPF(2N,1-ALPHA/2),     **
C               **   2*N*SIGMAHAT/CHSPPF(2N,1-ALPHA/2))     **
C               **  THEN (XpLCL,XpUCL) IS:                  **
C               **  ((-LN(1 - Xp))*SL,(-LN(1 - Xp))*SU)     **
C               **********************************************
C
      ISTEPN='41B'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'MLNO')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C  NOTE: FOR 2-PARAMETER MODEL, USE APPROXIMATION
C        FOR LOWER LIMIT GIVEN ON PP. 190-191 OF BURY.
C
      IF(NPERC.GE.1)THEN
C
        NUTEMP=1
        IF(IDTYPR.EQ.'LOWE')THEN
          ALP=ALPHAP
          P=1.0-ALP
        ELSEIF(IDTYPR.EQ.'UPPE')THEN
          ALP=ALPHAP
          P=1.0-ALP
        ELSE
          ALP=ALPHAP
          P=1.0-(ALP/2.0)
        ENDIF
C
        CALL NORPPF(P,ANOR)
        DK=DBLE(APPF)
        SHATML=DBLE(SCALML)
        CALL CHSPPF(1.0-ALP,NUTEMP,APPF)
C
        DAE=1.D-7
        DRE=1.D-7
C
        WRITE(IOUNI2,3131)
 3131   FORMAT(15X,'       POINT     ','   STANDARD    ',
     1         '     LOWER     ','     UPPER')
        WRITE(IOUNI2,3132)
 3132   FORMAT('    PERCENTILE ','     ESTIMATE   ','     ERROR     ',
     1         'CONFIDENCE LIMIT ','CONFIDENCE LIMIT')
        DO3130I=1,NPERC
C
          QPTEMP=QP(I)/100.0
          CALL EV1PPF(QPTEMP,MINMAX,APPF)
C
          XQPHAT(I)=ALOCML + SCALML*APPF
          SEXQP=ALMLSE**2 + (APPF*SCALSE)**2 + 2.0*APPF*COVSE**2
          XQPSE(I)=SQRT(SEXQP)
          IF(IDTYPR.EQ.'LOWE')THEN
            XQPLCL(I)=XQPHAT(I) - ANOR*XQPSE(I)
            XQPUCL(I)=CPUMIN
          ELSEIF(IDTYPR.EQ.'UPPE')THEN
            XQPLCL(I)=CPUMIN
            XQPUCL(I)=XQPHAT(I) + ANOR*XQPSE(I)
          ELSE
            XQPLCL(I)=XQPHAT(I) - ANOR*XQPSE(I)
            XQPUCL(I)=XQPHAT(I) + ANOR*XQPSE(I)
          ENDIF
          WRITE(IOUNI2,'(6E15.7)')
     1         QP(I),XQPHAT(I),SEXQP,XQPLCL(I),XQPUCL(I)
C
          DQ=DBLE(QPTEMP)
          DPPF=DBLE(XQPHAT(I))
          DXSTRT=DBLE(XQPLCL(I))
          DXLOW=DPPF/2.0D0
          DXUP=DBLE(XQPHAT(I))
          CALL DFZER2(EV1FU6,DXLOW,DXUP,DXSTRT,DRE,DAE,IFLAG,DTEMP)
          XQPLCZ(I)=REAL(DXLOW)
C
          DXSTRT=DBLE(XQPUCL(I))
          DXUP=DPPF*2.0D0
          DXLOW=DBLE(XQPHAT(I))
          CALL DFZER2(EV1FU6,DXLOW,DXUP,DXSTRT,DRE,DAE,IFLAG,DTEMP)
          XQPUCZ(I)=REAL(DXLOW)
C
          IF(IDTYPR.EQ.'LOWE')XQPUCL(I)=CPUMIN
          IF(IDTYPR.EQ.'UPPE')XQPLCL(I)=CPUMIN
C
 3130   CONTINUE
C
      ENDIF
C
C               *************************************
C               **   STEP 42--                     **
C               **   WRITE OUT EVERYTHING          **
C               **   FOR GUMBEL MLE ESTIMATE       **
C               *************************************
C
      ISTEPN='42'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MGU1')
     1  CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      IF(MINMAX.EQ.1)THEN
        ITITLE='Gumbel (Minimum) Parameter Estimation'
        NCTITL=37
        ITITLZ='f(x) = (1/s)*EXP((x-u)/s)*EXP(-EXP((x-u)/x))'
        NCTITZ=44
      ELSE
        ITITLE='Gumbel (Maximum) Parameter Estimation'
        NCTITL=37
        ITITLZ='f(x) = (1/s)*EXP(-(x-u)/s)*EXP(-EXP(-(x-u)/s))'
        NCTITZ=46
      ENDIF
      ICNT=1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Mean:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=XMEAN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Standard Deviation:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=XSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Minimum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMIN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Maximum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMAX
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Method of Moments:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Location:'
      NCTEXT(ICNT)=21
      AVALUE(ICNT)=ALOCMO
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Standard Error of Location:'
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=ALMOSE
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Scale:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=SCALMO
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Standard Error of Scale:'
      NCTEXT(ICNT)=24
      AVALUE(ICNT)=SCMOSE
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      IF(IGUMBC.EQ.'ON')THEN
        ITEXT(ICNT)='Maximum Likelihood (with Bias Correction):'
        NCTEXT(ICNT)=42
      ELSE
        ITEXT(ICNT)='Maximum Likelihood (without Bias Correction):'
        NCTEXT(ICNT)=45
      ENDIF
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Location:'
      NCTEXT(ICNT)=21
      AVALUE(ICNT)=ALOCML
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Standard Error of Location:'
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=ALMLSE
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Scale:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=SCALML
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Standard Error of Scale:'
      NCTEXT(ICNT)=24
      AVALUE(ICNT)=SCALSE
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Covariance:'
      NCTEXT(ICNT)=11
      AVALUE(ICNT)=COVSE
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Log-likelihood:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=ALIK
      IDIGIT(ICNT)=-7
      ICNT=ICNT+1
      ITEXT(ICNT)='AIC:'
      NCTEXT(ICNT)=4
      AVALUE(ICNT)=AIC
      IDIGIT(ICNT)=-7
      ICNT=ICNT+1
      ITEXT(ICNT)='AICc:'
      NCTEXT(ICNT)=5
      AVALUE(ICNT)=AICC
      IDIGIT(ICNT)=-7
      ICNT=ICNT+1
      ITEXT(ICNT)='BIC:'
      NCTEXT(ICNT)=4
      AVALUE(ICNT)=BIC
      IDIGIT(ICNT)=-7
C
      NUMROW=ICNT
      DO2320I=1,NUMROW
        NTOT(I)=15
 2320 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      NCTITZ=0
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
C     NOTE: LIKELIHOOD RATIO METHOD CURRENTLY NOT WORKING FOR
C           MINIMUM CASE.
C
      IF(NUMOUT.GT.1)THEN
        INORM='YES'
        IF(MINMAX.EQ.1)THEN
          CALL DPDTA7(ALOWLO,AUPPLO,ALOWSC,AUPPSC,ALPHA,NUMALP,
     1                ICAPSW,ICAPTY,NUMDIG,INORM,
     1                ISUBRO,IBUGA3,IERROR)
        ELSE
          CALL DPDT77(ALOWLO,AUPPLO,ALOWSC,AUPPSC,
     1                ALOWL2,AUPPL2,ALOWS2,AUPPS2,
     1                ALPHA,NUMALP,
     1                ICAPSW,ICAPTY,NUMDIG,
     1                ISUBRO,IBUGA3,IERROR)
        ENDIF
      ENDIF
C
      IF(NPERC.GE.1)THEN
        ILIKFL='OFF'
        CALL DPDTA9(QP,XQPHAT,XQPLCL,XQPUCL,XQPSE,NPERC,
     1              ICAPSW,ICAPTY,ILIKFL,NUMDIG,ALPHAP,
     1              ISUBRO,IBUGA3,IERROR)
        IF(MINMAX.EQ.2)THEN
          ILIKFL='ON'
          CALL DPDTA9(QP,XQPHAT,XQPLCZ,XQPUCZ,XQPSE,NPERC,
     1                ICAPSW,ICAPTY,ILIKFL,NUMDIG,ALPHAP,
     1                ISUBRO,IBUGA3,IERROR)
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'MGU1')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPGU1--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)N,IBUGA3,IERROR
 9012   FORMAT('N,IBUGA3,IERROR = ',I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
        DO9014I=1,N
          WRITE(ICOUT,9015)I,XQPHTZ(I),XTEMP(I)
 9015     FORMAT('I,XQPHTZ(I),XTEMP(I) = ',I8,2X,2G15.7)
          CALL DPWRST('XXX','WRIT')
 9014   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPMIN(ICOM,IHARG,IARGT,ARG,NUMARG,
     1                 GX1MIN,GY1MIN,GX2MIN,GY2MIN,
     1                 IX1MIN,IY1MIN,IX2MIN,IY2MIN,
     1                 IFOUND,IERROR)
C
C     PURPOSE--DEFINE AXIS MINIMA
C              (HORIZONTAL AXIS OR VERTICAL AXIS OR BOTH)
C              WHICH IN TURN WILL DEFINE THE LOWER EXTREME
C              WHICH WILL APPEAR ON THE PLOT.
C              THE MINIMA WILL BE PLACED IN THE 4 VARIABLES
C              GX1MIN,GY1MIN,
C              GX2MIN,GY2MIN,
C              THE STATUS (FIXED OR FLOAT) WILL BE PLACED
C              IN THE 4 VARIABLES
C              IX1MIN,IY1MIN,
C              IX2MIN,IY2MIN,
C     INPUT  ARGUMENTS--ICOM  (A  HOLLERITH VARIABLE)
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --ARG    (A  FLOATING POINT VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--
C                     --GX1MIN = MINIMUM FOR BOTTOM HORIZONTAL AXIS
C                     --GY1MIN = MINIMUM FOR LEFT   VERTICAL   AXIS
C                     --GX2MIN = MINIMUM FOR TOP    HORIZONTAL AXIS
C                     --GX2MIN = MINIMUM FOR RIGHT  VERTICAL   AXIS
C                     --IX1MIN = STATUS FOR MINIMUM FOR BOTTOM HORIZONTAL AXIS
C                     --IY1MIN = STATUS FOR MINIMUM FOR LEFT   VERTICAL   AXIS
C                     --IX2MIN = STATUS FOR MINIMUM FOR TOP    HORIZONTAL AXIS
C                     --IX2MIN = STATUS FOR MINIMUM FOR RIGHT  VERTICAL   AXIS
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1978.
C     UPDATED         --SEPTEMBER 1980.
C     UPDATED         --OCTOBER   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --FEBRUARY 1992.  FIX YMIN WITH NO ARG BOMB
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IX1MIN
      CHARACTER*4 IY1MIN
      CHARACTER*4 IX2MIN
      CHARACTER*4 IY2MIN
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
CCCCC THE FOLLOWING LINE WAS FIXED FEBRUARY 1992
CCCCC IF(IHARG(NUMARG).EQ.'?')GOTO8100
      IF(NUMARG.LE.0)GOTO1090
      IF(IHARG(NUMARG).EQ.'?')GOTO8100
 1090 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN                           **
C               **  BOTH HORIZONTAL AXIS MINIMA ARE TO BE FIXED    **
C               *****************************************************
C
      IF(ICOM.EQ.'XMIN')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(NUMARG.LE.0)GOTO1110
      IF(IARGT(1).EQ.'NUMB')GOTO1120
      GOTO1110
C
 1110 CONTINUE
      IFOUND='YES'
      GX1MIN=CPUMIN
      GX2MIN=CPUMIN
      IX1MIN='FLOA'
      IX2MIN='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1119
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1115)
 1115 FORMAT('THE X AXIS MINIMUM (FOR BOTH HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1116)
 1116 FORMAT('FRAME LINES) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1117)
 1117 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1119 CONTINUE
      GOTO9000
C
 1120 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GX1MIN=A1
      GX2MIN=A1
      IX1MIN='FIXE'
      IX2MIN='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1129
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1125)
 1125 FORMAT('THE X AXIS MINIMUM (FOR BOTH HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1126)GX1MIN
 1126 FORMAT('FRAME LINES) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1129 CONTINUE
      GOTO9000
C
 1199 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  BOTTOM HORIZONTAL AXIS MINIMUM ARE TO BE FIXED  **
C               *****************************************************
C
      IF(ICOM.EQ.'X1MI')GOTO1200
      GOTO1299
C
 1200 CONTINUE
      IF(NUMARG.LE.0)GOTO1210
      IF(IARGT(1).EQ.'NUMB')GOTO1220
      GOTO1210
C
 1210 CONTINUE
      IFOUND='YES'
      GX1MIN=CPUMIN
      IX1MIN='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1219
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1215)
 1215 FORMAT('THE X AXIS MINIMUM (FOR THE BOTTOM HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1216)
 1216 FORMAT('FRAME LINE) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1217)
 1217 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1219 CONTINUE
      GOTO9000
C
 1220 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GX1MIN=A1
      IX1MIN='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1229
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1225)
 1225 FORMAT('THE X AXIS MINIMUM (FOR THE BOTTOM HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1226)GX1MIN
 1226 FORMAT('FRAME LINE) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1229 CONTINUE
      GOTO9000
C
 1299 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  TOP    HORIZONTAL AXIS MINIMUM ARE TO BE FIXED  **
C               *****************************************************
C
      IF(ICOM.EQ.'X2MI')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(NUMARG.LE.0)GOTO1310
      IF(IARGT(1).EQ.'NUMB')GOTO1320
      GOTO1310
C
 1310 CONTINUE
      IFOUND='YES'
      GX2MIN=CPUMIN
      IX2MIN='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1315)
 1315 FORMAT('THE X AXIS MINIMUM (FOR THE TOP    HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1316)
 1316 FORMAT('FRAME LINE) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1317)
 1317 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      GOTO9000
C
 1320 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GX2MIN=A1
      IX2MIN='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1329
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1325)
 1325 FORMAT('THE X AXIS MINIMUM (FOR THE TOP    HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1326)GX2MIN
 1326 FORMAT('FRAME LINE) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1329 CONTINUE
      GOTO9000
C
 1399 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN                           **
C               **  BOTH VERTICAL   AXIS MINIMUM ARE TO BE FIXED    **
C               *****************************************************
C
      IF(ICOM.EQ.'YMIN')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(NUMARG.LE.0)GOTO1410
      IF(IARGT(1).EQ.'NUMB')GOTO1420
      GOTO1410
C
 1410 CONTINUE
      IFOUND='YES'
      GY1MIN=CPUMIN
      GY2MIN=CPUMIN
      IY1MIN='FLOA'
      IY2MIN='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1419
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1415)
 1415 FORMAT('THE Y AXIS MINIMUM (FOR BOTH VERTICAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1416)
 1416 FORMAT('FRAME LINES) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1417)
 1417 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1419 CONTINUE
      GOTO9000
C
 1420 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GY1MIN=A1
      GY2MIN=A1
      IY1MIN='FIXE'
      IY2MIN='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1429
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1425)
 1425 FORMAT('THE Y AXIS MINIMUM (FOR BOTH VERTICAL')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1426)GY1MIN
 1426 FORMAT('FRAME LINES) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1429 CONTINUE
      GOTO9000
C
 1499 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  LEFT   VERTICAL   AXIS MINIMUM ARE TO BE FIXED  **
C               *****************************************************
C
      IF(ICOM.EQ.'Y1MI')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(NUMARG.LE.0)GOTO1510
      IF(IARGT(1).EQ.'NUMB')GOTO1520
      GOTO1510
C
 1510 CONTINUE
      IFOUND='YES'
      GY1MIN=CPUMIN
      IY1MIN='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1519
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1515)
 1515 FORMAT('THE Y AXIS MINIMUM (FOR THE LEFT   VERTICAL  ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1516)
 1516 FORMAT('FRAME LINE) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1517)
 1517 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1519 CONTINUE
      GOTO9000
C
 1520 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GY1MIN=A1
      IY1MIN='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1529
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1525)
 1525 FORMAT('THE Y AXIS MINIMUM (FOR THE LEFT   VERTICAL  ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1526)GY1MIN
 1526 FORMAT('FRAME LINE) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1529 CONTINUE
      GOTO9000
C
 1599 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  RIGHT  VERTICAL   AXIS MINIMUM ARE TO BE FIXED  **
C               *****************************************************
C
      IF(ICOM.EQ.'Y2MI')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(NUMARG.LE.0)GOTO1610
      IF(IARGT(1).EQ.'NUMB')GOTO1620
      GOTO1610
C
 1610 CONTINUE
      IFOUND='YES'
      GY2MIN=CPUMIN
      IY2MIN='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1619
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1615)
 1615 FORMAT('THE Y AXIS MINIMUM (FOR THE RIGHT  VERTICAL  ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1616)
 1616 FORMAT('FRAME LINE) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1617)
 1617 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1619 CONTINUE
      GOTO9000
C
 1620 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GY2MIN=A1
      IY2MIN='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1629
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1625)
 1625 FORMAT('THE Y AXIS MINIMUM (FOR THE RIGHT  VERTICAL  ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1626)GY2MIN
 1626 FORMAT('FRAME LINE) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1629 CONTINUE
      GOTO9000
C
 1699 CONTINUE
C
C               ******************************************
C               **  TREAT THE CASE WHEN                 **
C               **  BOTH AXIS MINIMUM ARE TO BE FIXED    **
C               ******************************************
C
C
      IF(ICOM.EQ.'XYMI')GOTO1700
      IF(ICOM.EQ.'YXMI')GOTO1700
      IF(ICOM.EQ.'MINI')GOTO1700
      IF(ICOM.EQ.'MIN ')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(NUMARG.LE.0)GOTO1710
      IF(IARGT(1).EQ.'NUMB')GOTO1720
      GOTO1710
C
 1710 CONTINUE
      IFOUND='YES'
      GX1MIN=CPUMIN
      GY1MIN=CPUMIN
      GX2MIN=CPUMIN
      GY2MIN=CPUMIN
      IX1MIN='FLOA'
      IY1MIN='FLOA'
      IX2MIN='FLOA'
      IY2MIN='FLOA'
C
      IF(IFEEDB.EQ.'OFF')GOTO1719
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1715)
 1715 FORMAT('THE X AXIS MINIMUM (FOR ALL 4')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1716)
 1716 FORMAT('FRAME LINES) HAS JUST BEEN SET')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1717)
 1717 FORMAT('SO THAT IT WILL FLOAT WITH THE PLOTTED DATA')
      CALL DPWRST('XXX','BUG ')
 1719 CONTINUE
      GOTO9000
C
 1720 CONTINUE
      IFOUND='YES'
      A1=ARG(1)
      GX1MIN=A1
      GY1MIN=A1
      GX2MIN=A1
      GY2MIN=A1
      IX1MIN='FIXE'
      IY1MIN='FIXE'
      IX2MIN='FIXE'
      IY2MIN='FIXE'
C
      IF(IFEEDB.EQ.'OFF')GOTO1729
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1725)
 1725 FORMAT('THE AXIS MINIMUM (FOR ALL 4')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1726)GX1MIN
 1726 FORMAT('FRAME LINES) HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1729 CONTINUE
      GOTO9000
C
 1799 CONTINUE
      GOTO9000
C
C               ********************************************
C               **  STEP 81--                             **
C               **  TREAT THE    ?    CASE--              **
C               **  DUMP OUT CURRENT AND DEFAULT VALUES.  **
C               ********************************************
C
 8100 CONTINUE
      IFOUND='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8111)
 8111 FORMAT('THE CURRENT AXIS MINIMA ARE ')
      CALL DPWRST('XXX','BUG ')
      IF(IX1MIN.NE.'FLOA')WRITE(ICOUT,8112)GX1MIN
 8112 FORMAT('            --X1 (BOTTOM HORIZONTAL) = ',E15.7)
      IF(IX1MIN.NE.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IX1MIN.EQ.'FLOA')WRITE(ICOUT,8113)
 8113 FORMAT('            --X1 (BOTTOM HORIZONTAL) = FLOAT & NEAT')
      IF(IX1MIN.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IX2MIN.NE.'FLOA')WRITE(ICOUT,8114)GX2MIN
 8114 FORMAT('            --X2 (TOP    HORIZONTAL) = ',E15.7)
      IF(IX2MIN.NE.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IX2MIN.EQ.'FLOA')WRITE(ICOUT,8115)
 8115 FORMAT('            --X2 (TOP    HORIZONTAL) = FLOAT & NEAT')
      IF(IX2MIN.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IY1MIN.NE.'FLOA')WRITE(ICOUT,8116)GY1MIN
 8116 FORMAT('            --Y1 (LEFT   VERTICAL  ) = ',E15.7)
      IF(IY1MIN.NE.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IY1MIN.EQ.'FLOA')WRITE(ICOUT,8117)
 8117 FORMAT('            --Y1 (LEFT   VERTICAL  ) = FLOAT & NEAT')
      IF(IY1MIN.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IY2MIN.NE.'FLOA')WRITE(ICOUT,8118)GY2MIN
 8118 FORMAT('            --Y2 (RIGHT  VERTICAL  ) = ',E15.7)
      IF(IY2MIN.NE.'FLOA')CALL DPWRST('XXX','BUG ')
      IF(IY2MIN.EQ.'FLOA')WRITE(ICOUT,8119)
 8119 FORMAT('            --Y2 (RIGHT  VERTICAL  ) = FLOAT & NEAT')
      IF(IY2MIN.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8121)
 8121 FORMAT('THE DEFAULT AXIS MINIMA ARE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8122)
 8122 FORMAT('            --X1 (BOTTOM HORIZONTAL) = FLOAT & NEAT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8123)
 8123 FORMAT('            --X2 (TOP    HORIZONTAL) = FLOAT & NEAT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8124)
 8124 FORMAT('            --Y1 (LEFT   VERTICAL  ) = FLOAT & NEAT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,8125)
 8125 FORMAT('            --Y2 (BOTTOM VERTICAL  ) = FLOAT & NEAT')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPMITN(IHARG,IARGT,IARG,NUMARG,
     1                  IX1NSW,IX2NSW,IY1NSW,IY2NSW,
     1                  NMNX1T,NMNX2T,NMNY1T,NMNY2T,
     1                  IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE NUMBER OF MINOR TIC MARKS
C              FOR HORIZONTAL FRAME LINES OR VERTICAL FRAME LINES OR BOTH.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARG   (AN INTEGER VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--
C                     --IX1NSW (A CHARACTER VARIABLE)
C                     --IX2NSW (A CHARACTER VARIABLE)
C                     --IY1NSW (A CHARACTER VARIABLE)
C                     --IY2NSW (A CHARACTER VARIABLE)
C                     --NMNX1T (AN INTEGER VARIABLE)
C                     --NMNX2T (AN INTEGER VARIABLE)
C                     --NMNY1T (AN INTEGER VARIABLE)
C                     --NMNY2T (AN INTEGER VARIABLE)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IX1NSW
      CHARACTER*4 IX2NSW
      CHARACTER*4 IY1NSW
      CHARACTER*4 IY2NSW
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'XTIC')GOTO1100
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'X1TI')GOTO1200
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'X2TI')GOTO1300
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'YTIC')GOTO1400
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'Y1TI')GOTO1500
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'Y2TI')GOTO1600
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'TIC')GOTO1700
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'TICS')GOTO1700
      GOTO9000
C
C               ********************************************************
C               **  STEP 1--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE HORIZONTAL MINOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1100 CONTINUE
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1110
      IF(NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1110
C
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1101)
 1101 FORMAT('***** ERROR IN DPMITN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1102)
 1102 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1103)
 1103 FORMAT('      NUMBER OF MINOR (HORIZONTAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1104)
 1104 FORMAT('      EXAMPLE TO SPECIFY 3 MINOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1105)
 1105 FORMAT('      (ON THE HORIZONTAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1106)
 1106 FORMAT('      MINOR XTIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1107)
 1107 FORMAT('      MINOR XTICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1110 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1150
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1160
      IERROR='YES'
      GOTO9000
C
 1150 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1180
C
 1160 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      IX1NSW=IHHOLD
      IX2NSW=IHHOLD
      NMNX1T=IHOLD
      NMNX2T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE NUMBER OF MINOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)
 1182 FORMAT('(FOR BOTH HORIZONTAL FRAME LINES')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1183)IHOLD
 1183 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1184)
 1184 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 2--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE BOTTOM HORIZONTAL MINOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1200 CONTINUE
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1210
      IF(NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1210
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1201)
 1201 FORMAT('***** ERROR IN DPMITN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1202)
 1202 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1203)
 1203 FORMAT('      NUMBER OF MINOR (HORIZONTAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1204)
 1204 FORMAT('      EXAMPLE TO SPECIFY 3 MINOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1205)
 1205 FORMAT('      (ON THE BOTTOM HORIZONTAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1206)
 1206 FORMAT('      MINOR X1TIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1207)
 1207 FORMAT('      MINOR X1TICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1210 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1250
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1250
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1250
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1250
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1260
      IERROR='YES'
      GOTO9000
C
 1250 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1280
C
 1260 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1280
C
 1280 CONTINUE
      IFOUND='YES'
      IX1NSW=IHHOLD
      NMNX1T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)
 1281 FORMAT('THE NUMBER OF MINOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1282)
 1282 FORMAT('(FOR THE BOTTOM HORIZONTAL FRAME LINE')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1283)IHOLD
 1283 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1284)
 1284 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 3--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE TOP    HORIZONTAL MINOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1300 CONTINUE
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1310
      IF(NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1310
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1301)
 1301 FORMAT('***** ERROR IN DPMITN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1302)
 1302 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1303)
 1303 FORMAT('      NUMBER OF MINOR (HORIZONTAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1304)
 1304 FORMAT('      EXAMPLE TO SPECIFY 3 MINOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1305)
 1305 FORMAT('      (ON THE TOP HORIZONTAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1306)
 1306 FORMAT('      MINOR X2TIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1307)
 1307 FORMAT('      MINOR X2TICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1310 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1350
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1350
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1350
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1350
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1360
      IERROR='YES'
      GOTO9000
C
 1350 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1380
C
 1360 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1380
C
 1380 CONTINUE
      IFOUND='YES'
      IX2NSW=IHHOLD
      NMNX2T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1389
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1381)
 1381 FORMAT('THE NUMBER OF MINOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1382)
 1382 FORMAT('(FOR THE TOP HORIZONTAL FRAME LINE')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1383)IHOLD
 1383 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1384)
 1384 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1389 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 4--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE VERTICAL    MINOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1400 CONTINUE
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1410
      IF(NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1410
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1401)
 1401 FORMAT('***** ERROR IN DPMITN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1402)
 1402 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1403)
 1403 FORMAT('      NUMBER OF MINOR (VERTICAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1404)
 1404 FORMAT('      EXAMPLE TO SPECIFY 3 MINOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1405)
 1405 FORMAT('      (ON THE VERTICAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1406)
 1406 FORMAT('      MINOR YTIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1407)
 1407 FORMAT('      MINOR YTICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1410 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1450
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1450
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1450
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1450
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1460
      IERROR='YES'
      GOTO9000
C
 1450 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1480
C
 1460 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1480
C
 1480 CONTINUE
      IFOUND='YES'
      IY1NSW=IHHOLD
      IY2NSW=IHHOLD
      NMNY1T=IHOLD
      NMNY2T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1489
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1481)
 1481 FORMAT('THE NUMBER OF MINOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1482)
 1482 FORMAT('(FOR BOTH VERTICAL FRAME LINES')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1483)IHOLD
 1483 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1484)
 1484 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1489 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 5--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE LEFT VERTICAL MINOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1500 CONTINUE
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1510
      IF(NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1510
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1501)
 1501 FORMAT('***** ERROR IN DPMITN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1502)
 1502 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1503)
 1503 FORMAT('      NUMBER OF MINOR (VERTICAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1504)
 1504 FORMAT('      EXAMPLE TO SPECIFY 3 MINOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1505)
 1505 FORMAT('      (ON THE LEFT VERTICAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1506)
 1506 FORMAT('      MINOR Y1TIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1507)
 1507 FORMAT('      MINOR Y1TICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1510 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1550
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1550
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1550
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1550
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1560
      IERROR='YES'
      GOTO9000
C
 1550 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1580
C
 1560 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1580
C
 1580 CONTINUE
      IFOUND='YES'
      IY1NSW=IHHOLD
      NMNY1T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1589
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1581)
 1581 FORMAT('THE NUMBER OF MINOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1582)
 1582 FORMAT('(FOR THE LEFT VERTICAL FRAME LINE')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1583)IHOLD
 1583 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1584)
 1584 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1589 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 6--
C               **  TREAT THE CASE WHEN
C               **  ONLY THE RIGHT VERTICAL MINOR TICS ARE TO BE CHANGED
C               ********************************************************
C
 1600 CONTINUE
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1610
      IF(NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1610
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1601)
 1601 FORMAT('***** ERROR IN DPMITN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1602)
 1602 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1603)
 1603 FORMAT('      NUMBER OF MINOR (VERTICAL) TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1604)
 1604 FORMAT('      EXAMPLE TO SPECIFY 3 MINOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1605)
 1605 FORMAT('      (ON THE RIGHT VERTICAL FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1606)
 1606 FORMAT('      MINOR Y2TIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1607)
 1607 FORMAT('      MINOR Y2TICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1610 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1650
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1650
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1660
      IERROR='YES'
      GOTO9000
C
 1650 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1680
C
 1660 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1680
C
 1680 CONTINUE
      IFOUND='YES'
      IY2NSW=IHHOLD
      NMNY2T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1681)
 1681 FORMAT('THE NUMBER OF MINOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1682)
 1682 FORMAT('(FOR THE RIGHT VERTICAL FRAME LINE')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1683)IHOLD
 1683 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1684)
 1684 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1689 CONTINUE
      GOTO9000
C
C               ********************************************************
C               **  STEP 7--
C               **  TREAT THE CASE WHEN
C               **  BOTH HORIZONTAL AND VERTICAL    MINOR TICS ARE TO BE
C               ********************************************************
C
 1700 CONTINUE
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'NUMB')GOTO1710
      IF(NUMARG.GE.3.AND.IHARG(3).EQ.'NUMB')GOTO1710
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1701)
 1701 FORMAT('***** ERROR IN DPMITN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1702)
 1702 FORMAT('      IMPROPER FORM FOR SPECIFYING THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1703)
 1703 FORMAT('      NUMBER OF MINOR TIC MARKS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1704)
 1704 FORMAT('      EXAMPLE TO SPECIFY 3 MINOR TIC MARKS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1705)
 1705 FORMAT('      (ON ALL 4 FRAME LINES)--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1706)
 1706 FORMAT('      MINOR TIC MARK NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1707)
 1707 FORMAT('      MINOR TICS NUMBER 3')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
 1710 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1750
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1750
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1750
      IF(IHARG(NUMARG).EQ.'NUMB')GOTO1750
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1760
      IERROR='YES'
      GOTO9000
C
 1750 CONTINUE
      IHHOLD='FLOA'
      IHOLD=(-1)
      GOTO1780
C
 1760 CONTINUE
      IHHOLD='FIXE'
      IHOLD=IARG(NUMARG)
      GOTO1780
C
 1780 CONTINUE
      IFOUND='YES'
      IX1NSW=IHHOLD
      IX2NSW=IHHOLD
      IY1NSW=IHHOLD
      IY2NSW=IHHOLD
      NMNX1T=IHOLD
      NMNX2T=IHOLD
      NMNY1T=IHOLD
      NMNY2T=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1789
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1781)
 1781 FORMAT('THE NUMBER OF MINOR TIC MARKS ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1782)
 1782 FORMAT('(FOR EACH FRAME LINES')
      CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FIXE')WRITE(ICOUT,1783)IHOLD
 1783 FORMAT('HAS JUST BEEN SET TO ',I8)
      IF(IHHOLD.EQ.'FIXE')CALL DPWRST('XXX','BUG ')
      IF(IHHOLD.EQ.'FLOA')WRITE(ICOUT,1784)
 1784 FORMAT('HAS JUST BEEN SET TO AUTOMATIC.')
      IF(IHHOLD.EQ.'FLOA')CALL DPWRST('XXX','BUG ')
 1789 CONTINUE
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPMJTC(ICOM,IHARG,IARGT,ARG,NUMARG,
     1                  IX1TSW,IX2TSW,IY1TSW,IY2TSW,
     1                  X1COOR,X2COOR,Y1COOR,Y2COOR,
     1                  NX1COO,NX2COO,NY1COO,NY2COO,
     1                  MAXTIC,
     1                  IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE MAJOR TIC MARK COORDINATES
C              FOR ANY OF THE 4 FRAME LINES.
C              THE MAJOR TIC MARK COORDINATES ARE GIVEN IN UNITS
C              OF THE PLOTTED DATA.
C     ALSO, A SECONDARY PURPOSE IS TO ADJUST ACCORDINGLY
C              THE TIC MARK SWITCHES
C              FOR ANY OF THE 4 FRAME LINES.
C              SUCH TIC MARK SWITCHES TURN ON OR OFF
C              THE TIC MARKS ON THE 4 FRAME LINES OF A PLOT.
C              THE CONTENTS OF A TIC MARK SWITCH ARE
C              ON   OR    OFF
C              THE TIC MARK SWITCHES DEFINE WHETHER
C              THE TIC MARKS FOR A GIVEN FRAME SHOULD
C              BE ON (THAT IS, APPEAR), OR BE OFF (THAT IS,
C              BE SUPPRESSED.
C              THE TIC MARK SWITCHES FOR THE 4 FRAME LINES
C              ARE CONTAINED IN THE 4 VARIABLES
C              IX1TSW,IX2TSW,IY1TSW,IY2TSW,
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --ARG    (A  FLOATING POINT VECTOR)
C                     --NUMARG
C                     --MAXTIC
C     OUTPUT ARGUMENTS--
C                     --IX1TSW,IX2TSW,IY1TSW,IY2TSW,
C                     --X1COOR,X2COOR,Y1COOR,Y2COOR,
C                     --NX1COO,NX2COO,NY1COO,NY2COO,
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C           THIS SUBROUTINE MAY NOT BE COPIED, EXTRACTED,
C           MODIFIED, OR OTHERWISE USED IN A CONTEXT
C           OUTSIDE OF THE DATAPLOT LANGUAGE/SYSTEM.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IX1TSW
      CHARACTER*4 IX2TSW
      CHARACTER*4 IY1TSW
      CHARACTER*4 IY2TSW
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
      DIMENSION X1COOR(*)
      DIMENSION X2COOR(*)
      DIMENSION Y1COOR(*)
      DIMENSION Y2COOR(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ILOCC=0
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'COOR')ILOCC=1
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'COOR')ILOCC=2
      IF(NUMARG.GE.3.AND.IHARG(2).EQ.'COOR')ILOCC=3
      ILOCCP=ILOCC+1
      IF(ILOCC.EQ.0)GOTO1900
C
C               *****************************************************
C               **  TREAT THE CASE WHEN MAJOR TIC MARK COORDINATES ON    **
C               **  BOTH HORIZONTAL FRAME LINES ARE TO BE DEFINED  **
C               *****************************************************
C
      IF(ICOM.EQ.'XTIC')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(ILOCC.EQ.NUMARG)GOTO1110
      IF(IHARG(ILOCCP).EQ.'ON')GOTO1110
      IF(IHARG(ILOCCP).EQ.'OFF')GOTO1120
      IF(IHARG(ILOCCP).EQ.'AUTO')GOTO1110
      IF(IHARG(ILOCCP).EQ.'DEFA')GOTO1110
      GOTO1130
C
 1110 CONTINUE
      IFOUND='YES'
      IX1TSW='ON'
      IX2TSW='ON'
      NX1COO=-1
      NX2COO=-1
C
      IF(IFEEDB.EQ.'OFF')GOTO1119
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1115)
 1115 FORMAT('THE MAJOR TIC MARK COORDINATES (FOR BOTH HORIZONTAL ',
     1'FRAME LINES)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1116)
 1116 FORMAT('HAVE JUST BEEN SET TO AUTOMATIC')
      CALL DPWRST('XXX','BUG ')
 1119 CONTINUE
      GOTO1900
C
 1120 CONTINUE
      IFOUND='YES'
      IX1TSW='OFF'
      IX2TSW='OFF'
C
      IF(IFEEDB.EQ.'OFF')GOTO1129
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1125)
 1125 FORMAT('THE MAJOR TIC MARK COORDINATES (FOR BOTH HORIZONTAL ',
     1'FRAME LINES)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1126)
 1126 FORMAT('HAVE JUST BEEN TURNED OFF ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1127)
 1127 FORMAT('(THUS NO MAJOR TIC MARKS WILL APPEAR ON THEM')
      CALL DPWRST('XXX','BUG ')
 1129 CONTINUE
      GOTO1900
C
 1130 CONTINUE
      IX1TSW='ON'
      IX2TSW='ON'
C
      J=0
      DO1131I=ILOCCP,NUMARG
      J=J+1
      IF(J.GT.MAXTIC)GOTO1800
      IF(IARGT(I).NE.'NUMB')GOTO1850
      X1COOR(J)=ARG(I)
      X2COOR(J)=ARG(I)
 1131 CONTINUE
      IFOUND='YES'
      NX1COO=J
      NX2COO=J
C
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1135)
 1135 FORMAT('THE MAJOR TIC MARK COORDINATES (FOR BOTH HORIZONTAL ',
     1'FRAME LINES)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1136)
 1136 FORMAT('HAVE JUST BEEN MANUALLY SPECIFIED')
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO1900
C
 1199 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN MAJOR TIC MARK COORDINATES ON
C               **  ONLY THE BOTTOM HORIZONTAL FRAME LINE ARE TO BE DEFINED **
C               **************************************************************
C
      IF(ICOM.EQ.'X1TI')GOTO1200
      GOTO1299
C
C
 1200 CONTINUE
      IF(ILOCC.EQ.NUMARG)GOTO1210
      IF(IHARG(ILOCCP).EQ.'ON')GOTO1210
      IF(IHARG(ILOCCP).EQ.'OFF')GOTO1220
      IF(IHARG(ILOCCP).EQ.'AUTO')GOTO1210
      IF(IHARG(ILOCCP).EQ.'DEFA')GOTO1210
      GOTO1230
C
 1210 CONTINUE
      IFOUND='YES'
      IX1TSW='ON'
      NX1COO=-1
C
      IF(IFEEDB.EQ.'OFF')GOTO1219
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1215)
 1215 FORMAT('THE TIC COORDINATES (FOR THE BOTTOM HORIZONTAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1216)
 1216 FORMAT('HAVE JUST BEEN SET TO AUTOMATIC')
      CALL DPWRST('XXX','BUG ')
 1219 CONTINUE
      GOTO1900
C
 1220 CONTINUE
      IFOUND='YES'
      IX1TSW='OFF'
C
      IF(IFEEDB.EQ.'OFF')GOTO1229
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1225)
 1225 FORMAT('THE TIC COORDINATES (FOR THE BOTTOM HORIZONTAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1226)
 1226 FORMAT('HAVE JUST BEEN TURNED OFF ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1227)
 1227 FORMAT('(THUS NO MAJOR TIC MARKS WILL APPEAR ON IT)')
      CALL DPWRST('XXX','BUG ')
 1229 CONTINUE
      GOTO1900
C
 1230 CONTINUE
      IX1TSW='ON'
C
      J=0
      DO1231I=ILOCCP,NUMARG
      J=J+1
      IF(J.GT.MAXTIC)GOTO1800
      IF(IARGT(I).NE.'NUMB')GOTO1850
      X1COOR(J)=ARG(I)
 1231 CONTINUE
      IFOUND='YES'
      NX1COO=J
C
      IF(IFEEDB.EQ.'OFF')GOTO1239
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1235)
 1235 FORMAT('THE TIC COORDINATES (FOR THE BOTTOM HORIZONTAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1236)
 1236 FORMAT('HAVE JUST BEEN MANUALLY SPECIFIED')
      CALL DPWRST('XXX','BUG ')
 1239 CONTINUE
      GOTO1900
C
 1299 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN MAJOR TIC MARK COORDINATES ON
C               **  ONLY THE TOP    HORIZONTAL FRAME LINE ARE TO BE DEFINED **
C               **************************************************************
C
      IF(ICOM.EQ.'X2TI')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(ILOCC.EQ.NUMARG)GOTO1310
      IF(IHARG(ILOCCP).EQ.'ON')GOTO1310
      IF(IHARG(ILOCCP).EQ.'OFF')GOTO1320
      IF(IHARG(ILOCCP).EQ.'AUTO')GOTO1310
      IF(IHARG(ILOCCP).EQ.'DEFA')GOTO1310
      GOTO1330
C
 1310 CONTINUE
      IFOUND='YES'
      IX2TSW='ON'
      NX2COO=-1
C
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1315)
 1315 FORMAT('THE TIC COORDINATES (FOR THE TOP HORIZONTAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1316)
 1316 FORMAT('HAVE JUST BEEN SET TO AUTOMATIC')
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      GOTO1900
C
 1320 CONTINUE
      IFOUND='YES'
      IX2TSW='OFF'
C
      IF(IFEEDB.EQ.'OFF')GOTO1329
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1325)
 1325 FORMAT('THE TIC COORDINATES (FOR THE TOP HORIZONTAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1326)
 1326 FORMAT('HAVE JUST BEEN TURNED OFF ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1327)
 1327 FORMAT('(THUS NO MAJOR TIC MARKS WILL APPEAR ON IT)')
      CALL DPWRST('XXX','BUG ')
 1329 CONTINUE
      GOTO1900
C
 1330 CONTINUE
      IX2TSW='ON'
C
      J=0
      DO1331I=ILOCCP,NUMARG
      J=J+1
      IF(J.GT.MAXTIC)GOTO1800
      IF(IARGT(I).NE.'NUMB')GOTO1850
      X2COOR(J)=ARG(I)
 1331 CONTINUE
      IFOUND='YES'
      NX2COO=J
C
      IF(IFEEDB.EQ.'OFF')GOTO1339
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1335)
 1335 FORMAT('THE TIC COORDINATES (FOR THE TOP HORIZONTAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1336)
 1336 FORMAT('HAVE JUST BEEN MANUALLY SPECIFIED')
      CALL DPWRST('XXX','BUG ')
 1339 CONTINUE
      GOTO1900
C
 1399 CONTINUE
C
C               ***************************************************
C               **  TREAT THE CASE WHEN MAJOR TIC MARK COORDINATES ON  **
C               **  BOTH VERTICAL FRAME LINES ARE TO BE DEFINED  **
C               ***************************************************
C
      IF(ICOM.EQ.'YTIC')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(ILOCC.EQ.NUMARG)GOTO1410
      IF(IHARG(ILOCCP).EQ.'ON')GOTO1410
      IF(IHARG(ILOCCP).EQ.'OFF')GOTO1420
      IF(IHARG(ILOCCP).EQ.'AUTO')GOTO1410
      IF(IHARG(ILOCCP).EQ.'DEFA')GOTO1410
      GOTO1430
C
 1410 CONTINUE
      IFOUND='YES'
      IY1TSW='ON'
      IY2TSW='ON'
      NY1COO=-1
      NY2COO=-1
C
      IF(IFEEDB.EQ.'OFF')GOTO1419
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1415)
 1415 FORMAT('THE MAJOR TIC MARK COORDINATES (FOR BOTH VERTICAL ',
     1'FRAME LINES)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1416)
 1416 FORMAT('HAVE JUST BEEN SET TO AUTOMATIC')
      CALL DPWRST('XXX','BUG ')
 1419 CONTINUE
      GOTO1900
C
 1420 CONTINUE
      IFOUND='YES'
      IY1TSW='OFF'
      IY2TSW='OFF'
C
      IF(IFEEDB.EQ.'OFF')GOTO1429
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1425)
 1425 FORMAT('THE MAJOR TIC MARK COORDINATES (FOR BOTH VERTICAL ',
     1'FRAME LINES)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1426)
 1426 FORMAT('HAVE JUST BEEN TURNED OFF ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1427)
 1427 FORMAT('(THUS NO MAJOR TIC MARKS WILL APPEAR ON THEM')
      CALL DPWRST('XXX','BUG ')
 1429 CONTINUE
      GOTO1900
C
 1430 CONTINUE
      IY1TSW='ON'
      IY2TSW='ON'
C
      J=0
      DO1431I=ILOCCP,NUMARG
      J=J+1
      IF(J.GT.MAXTIC)GOTO1800
      IF(IARGT(I).NE.'NUMB')GOTO1850
      Y1COOR(J)=ARG(I)
      Y2COOR(J)=ARG(I)
 1431 CONTINUE
      IFOUND='YES'
      NY1COO=J
      NY2COO=J
C
      IF(IFEEDB.EQ.'OFF')GOTO1439
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1435)
 1435 FORMAT('THE MAJOR TIC MARK COORDINATES (FOR BOTH VERTICAL ',
     1'FRAME LINES)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1436)
 1436 FORMAT('HAVE JUST BEEN MANUALLY SPECIFIED')
      CALL DPWRST('XXX','BUG ')
 1439 CONTINUE
      GOTO1900
C
 1499 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN MAJOR TIC MARK COORDINATES ON
C               **  ONLY THE LEFT   VERTICAL   FRAME LINE ARE TO BE DEFINED **
C               **************************************************************
C
      IF(ICOM.EQ.'Y1TI')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(ILOCC.EQ.NUMARG)GOTO1510
      IF(IHARG(ILOCCP).EQ.'ON')GOTO1510
      IF(IHARG(ILOCCP).EQ.'OFF')GOTO1520
      IF(IHARG(ILOCCP).EQ.'AUTO')GOTO1510
      IF(IHARG(ILOCCP).EQ.'DEFA')GOTO1510
      GOTO1530
C
 1510 CONTINUE
      IFOUND='YES'
      IY1TSW='ON'
      NY1COO=-1
C
      IF(IFEEDB.EQ.'OFF')GOTO1519
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1515)
 1515 FORMAT('THE TIC COORDINATES (FOR THE LEFT VERTICAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1516)
 1516 FORMAT('HAVE JUST BEEN SET TO AUTOMATIC')
      CALL DPWRST('XXX','BUG ')
 1519 CONTINUE
      GOTO1900
C
 1520 CONTINUE
      IFOUND='YES'
      IY1TSW='OFF'
C
      IF(IFEEDB.EQ.'OFF')GOTO1529
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1525)
 1525 FORMAT('THE TIC COORDINATES (FOR THE LEFT VERTICAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1526)
 1526 FORMAT('HAVE JUST BEEN TURNED OFF ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1527)
 1527 FORMAT('(THUS NO MAJOR TIC MARKS WILL APPEAR ON IT)')
      CALL DPWRST('XXX','BUG ')
 1529 CONTINUE
      GOTO1900
C
 1530 CONTINUE
      IY1TSW='ON'
C
      J=0
      DO1531I=ILOCCP,NUMARG
      J=J+1
      IF(J.GT.MAXTIC)GOTO1800
      IF(IARGT(I).NE.'NUMB')GOTO1850
      Y1COOR(J)=ARG(I)
 1531 CONTINUE
      IFOUND='YES'
      NY1COO=J
C
      IF(IFEEDB.EQ.'OFF')GOTO1539
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1535)
 1535 FORMAT('THE TIC COORDINATES (FOR THE LEFT VERTICAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1536)
 1536 FORMAT('HAVE JUST BEEN MANUALLY SPECIFIED')
      CALL DPWRST('XXX','BUG ')
 1539 CONTINUE
      GOTO1900
C
 1599 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN MAJOR TIC MARK COORDINATES ON
C               **  ONLY THE RIGHT  VERTCIAL   FRAME LINE ARE TO BE DEFINED **
C               **************************************************************
C
      IF(ICOM.EQ.'Y2TI')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(ILOCC.EQ.NUMARG)GOTO1610
      IF(IHARG(ILOCCP).EQ.'ON')GOTO1610
      IF(IHARG(ILOCCP).EQ.'OFF')GOTO1620
      IF(IHARG(ILOCCP).EQ.'AUTO')GOTO1610
      IF(IHARG(ILOCCP).EQ.'DEFA')GOTO1610
      GOTO1630
C
 1610 CONTINUE
      IFOUND='YES'
      IY2TSW='ON'
      NY2COO=-1
C
      IF(IFEEDB.EQ.'OFF')GOTO1619
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1615)
 1615 FORMAT('THE TIC COORDINATES (FOR THE RIGHT VERTICAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1616)
 1616 FORMAT('HAVE JUST BEEN SET TO AUTOMATIC')
      CALL DPWRST('XXX','BUG ')
 1619 CONTINUE
      GOTO1900
C
 1620 CONTINUE
      IFOUND='YES'
      IY2TSW='OFF'
C
      IF(IFEEDB.EQ.'OFF')GOTO1629
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1625)
 1625 FORMAT('THE TIC COORDINATES (FOR THE RIGHT VERTICAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1626)
 1626 FORMAT('HAVE JUST BEEN TURNED OFF ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1627)
 1627 FORMAT('(THUS NO MAJOR TIC MARKS WILL APPEAR ON IT)')
      CALL DPWRST('XXX','BUG ')
 1629 CONTINUE
      GOTO1900
C
 1630 CONTINUE
      IY2TSW='ON'
C
      J=0
      DO1631I=ILOCCP,NUMARG
      J=J+1
      IF(J.GT.MAXTIC)GOTO1800
      IF(IARGT(I).NE.'NUMB')GOTO1850
      Y1COOR(J)=ARG(I)
 1631 CONTINUE
      IFOUND='YES'
      NY2COO=J
C
      IF(IFEEDB.EQ.'OFF')GOTO1639
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1635)
 1635 FORMAT('THE TIC COORDINATES (FOR THE RIGHT VERTICAL ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1636)
 1636 FORMAT('HAVE JUST BEEN MANUALLY SPECIFIED')
      CALL DPWRST('XXX','BUG ')
 1639 CONTINUE
      GOTO1900
C
 1699 CONTINUE
C
C               **************************************************
C               **  TREAT THE CASE WHEN MAJOR TIC MARK COORDINATES ON **
C               **  THE ENTIRE 4-SIDED FRAME ARE TO BE DEFINED  **
C               **************************************************
C
      IF(ICOM.EQ.'XYTI')GOTO1700
      IF(ICOM.EQ.'YXTI')GOTO1700
      IF(ICOM.EQ.'TICS')GOTO1700
      IF(ICOM.EQ.'TIC ')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(ILOCC.EQ.NUMARG)GOTO1710
      IF(IHARG(ILOCCP).EQ.'ON')GOTO1710
      IF(IHARG(ILOCCP).EQ.'OFF')GOTO1720
      IF(IHARG(ILOCCP).EQ.'AUTO')GOTO1710
      IF(IHARG(ILOCCP).EQ.'DEFA')GOTO1710
      GOTO1730
C
 1710 CONTINUE
      IFOUND='YES'
      IX1TSW='ON'
      IX2TSW='ON'
      IY1TSW='ON'
      IY2TSW='ON'
      NX1COO=-1
      NX2COO=-1
      NY1COO=-1
      NY2COO=-1
C
      IF(IFEEDB.EQ.'OFF')GOTO1719
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1715)
 1715 FORMAT('THE TIC COORDINATES (FOR ALL 4 ',
     1'FRAME LINES)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1716)
 1716 FORMAT('HAVE JUST BEEN SET TO AUTOMATIC')
      CALL DPWRST('XXX','BUG ')
 1719 CONTINUE
      GOTO1900
C
 1720 CONTINUE
      IFOUND='YES'
      IX1TSW='OFF'
      IX2TSW='OFF'
      IY1TSW='OFF'
      IY2TSW='OFF'
C
      IF(IFEEDB.EQ.'OFF')GOTO1729
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1725)
 1725 FORMAT('THE TIC COORDINATES (FOR ALL 4 ',
     1'FRAME LINES)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1726)
 1726 FORMAT('HAVE JUST BEEN TURNED OFF ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1727)
 1727 FORMAT('(THUS NO MAJOR TIC MARKS WILL APPEAR ON ANY ',
     1'FRAME LINE)')
      CALL DPWRST('XXX','BUG ')
 1729 CONTINUE
      GOTO1900
C
 1730 CONTINUE
      IX1TSW='ON'
      IX2TSW='ON'
      IY1TSW='ON'
      IY2TSW='ON'
C
      J=0
      DO1731I=ILOCCP,NUMARG
      J=J+1
      IF(J.GT.MAXTIC)GOTO1800
      IF(IARGT(I).NE.'NUMB')GOTO1850
      X1COOR(J)=ARG(I)
      X2COOR(J)=ARG(I)
      Y1COOR(J)=ARG(I)
      Y2COOR(J)=ARG(I)
 1731 CONTINUE
      IFOUND='YES'
      NX1COO=J
      NX2COO=J
      NY1COO=J
      NY2COO=J
C
      IF(IFEEDB.EQ.'OFF')GOTO1739
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1735)
 1735 FORMAT('THE TIC COORDINATES (FOR ALL 4 FRAMES)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1736)
 1736 FORMAT('HAVE JUST BEEN MANUALLY SPECIFIED')
      CALL DPWRST('XXX','BUG ')
 1739 CONTINUE
      GOTO1900
C
 1799 CONTINUE
      GOTO1900
C
 1800 CONTINUE
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1801)
 1801 FORMAT('***** ERROR IN DPMJTC--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1802)
 1802 FORMAT('      THE NUMBER OF SPECIFIED')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1803)
 1803 FORMAT('      TIC COORDINATES HAS JUST EXCEEDED ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1804)MAXTIC
 1804 FORMAT('      THE ALLOWABLE MAXIMUM OF ',I8)
      CALL DPWRST('XXX','BUG ')
      GOTO1900
C
 1850 CONTINUE
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1851)
 1851 FORMAT('***** ERROR IN DPMJTC--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1852)
 1852 FORMAT('      A SPECIFICATION IN THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1853)
 1853 FORMAT('      TIC COORDINATES COMMAND HAS JUST ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1854)
 1854 FORMAT('      BEEN ENCOUNTERED WHICH IS NON-NUMERIC')
      CALL DPWRST('XXX','BUG ')
      GOTO1900
C
 1900 CONTINUE
      RETURN
      END
